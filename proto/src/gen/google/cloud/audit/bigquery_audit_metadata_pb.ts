// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/audit/bigquery_audit_metadata.proto (package google.cloud.audit, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Policy } from "../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../iam/v1/policy_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../rpc/status_pb";
import { file_google_rpc_status } from "../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/audit/bigquery_audit_metadata.proto.
 */
export const file_google_cloud_audit_bigquery_audit_metadata: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_iam_v1_policy, file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_rpc_status]);

/**
 * Audit log format for BigQuery cloud audit logs metadata.
 *
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata
 */
export type BigQueryAuditMetadata = Message<"google.cloud.audit.BigQueryAuditMetadata"> & {
  /**
   * BigQuery event information.
   *
   * @generated from oneof google.cloud.audit.BigQueryAuditMetadata.event
   */
  event: {
    /**
     * Job insertion event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobInsertion job_insertion = 1;
     */
    value: BigQueryAuditMetadata_JobInsertion;
    case: "jobInsertion";
  } | {
    /**
     * Job state change event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobChange job_change = 2;
     */
    value: BigQueryAuditMetadata_JobChange;
    case: "jobChange";
  } | {
    /**
     * Job deletion event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobDeletion job_deletion = 23;
     */
    value: BigQueryAuditMetadata_JobDeletion;
    case: "jobDeletion";
  } | {
    /**
     * Dataset creation event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.DatasetCreation dataset_creation = 3;
     */
    value: BigQueryAuditMetadata_DatasetCreation;
    case: "datasetCreation";
  } | {
    /**
     * Dataset change event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.DatasetChange dataset_change = 4;
     */
    value: BigQueryAuditMetadata_DatasetChange;
    case: "datasetChange";
  } | {
    /**
     * Dataset deletion event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.DatasetDeletion dataset_deletion = 5;
     */
    value: BigQueryAuditMetadata_DatasetDeletion;
    case: "datasetDeletion";
  } | {
    /**
     * Table creation event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.TableCreation table_creation = 6;
     */
    value: BigQueryAuditMetadata_TableCreation;
    case: "tableCreation";
  } | {
    /**
     * Table metadata change event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.TableChange table_change = 8;
     */
    value: BigQueryAuditMetadata_TableChange;
    case: "tableChange";
  } | {
    /**
     * Table deletion event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.TableDeletion table_deletion = 9;
     */
    value: BigQueryAuditMetadata_TableDeletion;
    case: "tableDeletion";
  } | {
    /**
     * Table data read event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.TableDataRead table_data_read = 10;
     */
    value: BigQueryAuditMetadata_TableDataRead;
    case: "tableDataRead";
  } | {
    /**
     * Table data change event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.TableDataChange table_data_change = 11;
     */
    value: BigQueryAuditMetadata_TableDataChange;
    case: "tableDataChange";
  } | {
    /**
     * Model deletion event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.ModelDeletion model_deletion = 12;
     */
    value: BigQueryAuditMetadata_ModelDeletion;
    case: "modelDeletion";
  } | {
    /**
     * Model creation event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.ModelCreation model_creation = 13;
     */
    value: BigQueryAuditMetadata_ModelCreation;
    case: "modelCreation";
  } | {
    /**
     * Model metadata change event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.ModelMetadataChange model_metadata_change = 14;
     */
    value: BigQueryAuditMetadata_ModelMetadataChange;
    case: "modelMetadataChange";
  } | {
    /**
     * Model data change event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.ModelDataChange model_data_change = 15;
     */
    value: BigQueryAuditMetadata_ModelDataChange;
    case: "modelDataChange";
  } | {
    /**
     * Model data read event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.ModelDataRead model_data_read = 19;
     */
    value: BigQueryAuditMetadata_ModelDataRead;
    case: "modelDataRead";
  } | {
    /**
     * Routine creation event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.RoutineCreation routine_creation = 16;
     */
    value: BigQueryAuditMetadata_RoutineCreation;
    case: "routineCreation";
  } | {
    /**
     * Routine change event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.RoutineChange routine_change = 17;
     */
    value: BigQueryAuditMetadata_RoutineChange;
    case: "routineChange";
  } | {
    /**
     * Routine deletion event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.RoutineDeletion routine_deletion = 18;
     */
    value: BigQueryAuditMetadata_RoutineDeletion;
    case: "routineDeletion";
  } | {
    /**
     * Row access policy create event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicyCreation row_access_policy_creation = 20;
     */
    value: BigQueryAuditMetadata_RowAccessPolicyCreation;
    case: "rowAccessPolicyCreation";
  } | {
    /**
     * Row access policy change event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicyChange row_access_policy_change = 21;
     */
    value: BigQueryAuditMetadata_RowAccessPolicyChange;
    case: "rowAccessPolicyChange";
  } | {
    /**
     * Row access policy deletion event.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicyDeletion row_access_policy_deletion = 22;
     */
    value: BigQueryAuditMetadata_RowAccessPolicyDeletion;
    case: "rowAccessPolicyDeletion";
  } | {
    /**
     * Unlink linked dataset from its source dataset event
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.UnlinkDataset unlink_dataset = 25;
     */
    value: BigQueryAuditMetadata_UnlinkDataset;
    case: "unlinkDataset";
  } | { case: undefined; value?: undefined };

  /**
   * First party (Google) application specific metadata.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.FirstPartyAppMetadata first_party_app_metadata = 24;
   */
  firstPartyAppMetadata?: BigQueryAuditMetadata_FirstPartyAppMetadata;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.
 * Use `create(BigQueryAuditMetadataSchema)` to create a new message.
 */
export const BigQueryAuditMetadataSchema: GenMessage<BigQueryAuditMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0);

/**
 * Job insertion event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.JobInsertion
 */
export type BigQueryAuditMetadata_JobInsertion = Message<"google.cloud.audit.BigQueryAuditMetadata.JobInsertion"> & {
  /**
   * Job metadata.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.Job job = 1;
   */
  job?: BigQueryAuditMetadata_Job;

  /**
   * Describes how the job was inserted.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobInsertion.Reason reason = 2;
   */
  reason: BigQueryAuditMetadata_JobInsertion_Reason;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.JobInsertion.
 * Use `create(BigQueryAuditMetadata_JobInsertionSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_JobInsertionSchema: GenMessage<BigQueryAuditMetadata_JobInsertion> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 0);

/**
 * Describes how the job was inserted.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.JobInsertion.Reason
 */
export enum BigQueryAuditMetadata_JobInsertion_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Job was inserted using the jobs.insert API.
   *
   * @generated from enum value: JOB_INSERT_REQUEST = 1;
   */
  JOB_INSERT_REQUEST = 1,

  /**
   * Job was inserted using the jobs.query RPC.
   *
   * @generated from enum value: QUERY_REQUEST = 2;
   */
  QUERY_REQUEST = 2,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.JobInsertion.Reason.
 */
export const BigQueryAuditMetadata_JobInsertion_ReasonSchema: GenEnum<BigQueryAuditMetadata_JobInsertion_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 0, 0);

/**
 * Job state change event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.JobChange
 */
export type BigQueryAuditMetadata_JobChange = Message<"google.cloud.audit.BigQueryAuditMetadata.JobChange"> & {
  /**
   * Job state before the job state change.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobState before = 1;
   */
  before: BigQueryAuditMetadata_JobState;

  /**
   * Job state after the job state change.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobState after = 2;
   */
  after: BigQueryAuditMetadata_JobState;

  /**
   * Job metadata.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.Job job = 3;
   */
  job?: BigQueryAuditMetadata_Job;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.JobChange.
 * Use `create(BigQueryAuditMetadata_JobChangeSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_JobChangeSchema: GenMessage<BigQueryAuditMetadata_JobChange> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 1);

/**
 * Job deletion event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.JobDeletion
 */
export type BigQueryAuditMetadata_JobDeletion = Message<"google.cloud.audit.BigQueryAuditMetadata.JobDeletion"> & {
  /**
   * Job URI.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 1;
   */
  jobName: string;

  /**
   * Describes how the job was deleted.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobDeletion.Reason reason = 2;
   */
  reason: BigQueryAuditMetadata_JobDeletion_Reason;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.JobDeletion.
 * Use `create(BigQueryAuditMetadata_JobDeletionSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_JobDeletionSchema: GenMessage<BigQueryAuditMetadata_JobDeletion> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 2);

/**
 * Describes how the job was deleted.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.JobDeletion.Reason
 */
export enum BigQueryAuditMetadata_JobDeletion_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Job was deleted using the jobs.delete API.
   *
   * @generated from enum value: JOB_DELETE_REQUEST = 1;
   */
  JOB_DELETE_REQUEST = 1,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.JobDeletion.Reason.
 */
export const BigQueryAuditMetadata_JobDeletion_ReasonSchema: GenEnum<BigQueryAuditMetadata_JobDeletion_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 2, 0);

/**
 * Dataset creation event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.DatasetCreation
 */
export type BigQueryAuditMetadata_DatasetCreation = Message<"google.cloud.audit.BigQueryAuditMetadata.DatasetCreation"> & {
  /**
   * Dataset metadata.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.Dataset dataset = 1;
   */
  dataset?: BigQueryAuditMetadata_Dataset;

  /**
   * Describes how the dataset was created.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.DatasetCreation.Reason reason = 2;
   */
  reason: BigQueryAuditMetadata_DatasetCreation_Reason;

  /**
   * The URI of the job that created the dataset.
   * Present if the reason is QUERY.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 3;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.DatasetCreation.
 * Use `create(BigQueryAuditMetadata_DatasetCreationSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_DatasetCreationSchema: GenMessage<BigQueryAuditMetadata_DatasetCreation> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 3);

/**
 * Describes how the dataset was created.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.DatasetCreation.Reason
 */
export enum BigQueryAuditMetadata_DatasetCreation_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Dataset was created using the datasets.create API.
   *
   * @generated from enum value: CREATE = 1;
   */
  CREATE = 1,

  /**
   * Dataset was created using a query job, e.g., CREATE SCHEMA statement.
   *
   * @generated from enum value: QUERY = 2;
   */
  QUERY = 2,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.DatasetCreation.Reason.
 */
export const BigQueryAuditMetadata_DatasetCreation_ReasonSchema: GenEnum<BigQueryAuditMetadata_DatasetCreation_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 3, 0);

/**
 * Dataset change event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.DatasetChange
 */
export type BigQueryAuditMetadata_DatasetChange = Message<"google.cloud.audit.BigQueryAuditMetadata.DatasetChange"> & {
  /**
   * Dataset metadata after the change.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.Dataset dataset = 1;
   */
  dataset?: BigQueryAuditMetadata_Dataset;

  /**
   * Describes how the dataset was changed.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.DatasetChange.Reason reason = 2;
   */
  reason: BigQueryAuditMetadata_DatasetChange_Reason;

  /**
   * The URI of the job that updated the dataset.
   * Present if the reason is QUERY.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 3;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.DatasetChange.
 * Use `create(BigQueryAuditMetadata_DatasetChangeSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_DatasetChangeSchema: GenMessage<BigQueryAuditMetadata_DatasetChange> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 4);

/**
 * Describes how the dataset was changed.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.DatasetChange.Reason
 */
export enum BigQueryAuditMetadata_DatasetChange_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Dataset was changed using the datasets.update or datasets.patch API.
   *
   * @generated from enum value: UPDATE = 1;
   */
  UPDATE = 1,

  /**
   * Dataset was changed using the SetIamPolicy API.
   *
   * @generated from enum value: SET_IAM_POLICY = 2;
   */
  SET_IAM_POLICY = 2,

  /**
   * Dataset was changed using a query job, e.g., ALTER SCHEMA statement.
   *
   * @generated from enum value: QUERY = 3;
   */
  QUERY = 3,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.DatasetChange.Reason.
 */
export const BigQueryAuditMetadata_DatasetChange_ReasonSchema: GenEnum<BigQueryAuditMetadata_DatasetChange_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 4, 0);

/**
 * Dataset deletion event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.DatasetDeletion
 */
export type BigQueryAuditMetadata_DatasetDeletion = Message<"google.cloud.audit.BigQueryAuditMetadata.DatasetDeletion"> & {
  /**
   * Describes how the dataset was deleted.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.DatasetDeletion.Reason reason = 1;
   */
  reason: BigQueryAuditMetadata_DatasetDeletion_Reason;

  /**
   * The URI of the job that deleted the dataset.
   * Present if the reason is QUERY.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 2;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.DatasetDeletion.
 * Use `create(BigQueryAuditMetadata_DatasetDeletionSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_DatasetDeletionSchema: GenMessage<BigQueryAuditMetadata_DatasetDeletion> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 5);

/**
 * Describes how the dataset was deleted.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.DatasetDeletion.Reason
 */
export enum BigQueryAuditMetadata_DatasetDeletion_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Dataset was deleted using the datasets.delete API.
   *
   * @generated from enum value: DELETE = 1;
   */
  DELETE = 1,

  /**
   * Dataset was deleted using a query job, e.g., DROP SCHEMA statement.
   *
   * @generated from enum value: QUERY = 2;
   */
  QUERY = 2,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.DatasetDeletion.Reason.
 */
export const BigQueryAuditMetadata_DatasetDeletion_ReasonSchema: GenEnum<BigQueryAuditMetadata_DatasetDeletion_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 5, 0);

/**
 * Table creation event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.TableCreation
 */
export type BigQueryAuditMetadata_TableCreation = Message<"google.cloud.audit.BigQueryAuditMetadata.TableCreation"> & {
  /**
   * Table metadata.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.Table table = 1;
   */
  table?: BigQueryAuditMetadata_Table;

  /**
   * Describes how the table was created.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.TableCreation.Reason reason = 3;
   */
  reason: BigQueryAuditMetadata_TableCreation_Reason;

  /**
   * The URI of the job that created a table.
   * Present if the reason is JOB or QUERY.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 4;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.TableCreation.
 * Use `create(BigQueryAuditMetadata_TableCreationSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_TableCreationSchema: GenMessage<BigQueryAuditMetadata_TableCreation> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 6);

/**
 * Describes how the table was created.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.TableCreation.Reason
 */
export enum BigQueryAuditMetadata_TableCreation_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Table was created as a destination table during a query, load or copy
   * job.
   *
   * @generated from enum value: JOB = 1;
   */
  JOB = 1,

  /**
   * Table was created using a DDL query.
   *
   * @generated from enum value: QUERY = 2;
   */
  QUERY = 2,

  /**
   * Table was created using the tables.create API.
   *
   * @generated from enum value: TABLE_INSERT_REQUEST = 3;
   */
  TABLE_INSERT_REQUEST = 3,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.TableCreation.Reason.
 */
export const BigQueryAuditMetadata_TableCreation_ReasonSchema: GenEnum<BigQueryAuditMetadata_TableCreation_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 6, 0);

/**
 * Model creation event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.ModelCreation
 */
export type BigQueryAuditMetadata_ModelCreation = Message<"google.cloud.audit.BigQueryAuditMetadata.ModelCreation"> & {
  /**
   * Model metadata.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.Model model = 1;
   */
  model?: BigQueryAuditMetadata_Model;

  /**
   * Describes how the model was created.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.ModelCreation.Reason reason = 3;
   */
  reason: BigQueryAuditMetadata_ModelCreation_Reason;

  /**
   * The URI of the job that created the model.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 4;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.ModelCreation.
 * Use `create(BigQueryAuditMetadata_ModelCreationSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_ModelCreationSchema: GenMessage<BigQueryAuditMetadata_ModelCreation> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 7);

/**
 * Describes how the model was created.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.ModelCreation.Reason
 */
export enum BigQueryAuditMetadata_ModelCreation_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Model was created using a DDL query.
   *
   * @generated from enum value: QUERY = 2;
   */
  QUERY = 2,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.ModelCreation.Reason.
 */
export const BigQueryAuditMetadata_ModelCreation_ReasonSchema: GenEnum<BigQueryAuditMetadata_ModelCreation_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 7, 0);

/**
 * Routine creation event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.RoutineCreation
 */
export type BigQueryAuditMetadata_RoutineCreation = Message<"google.cloud.audit.BigQueryAuditMetadata.RoutineCreation"> & {
  /**
   * Created routine.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.Routine routine = 1;
   */
  routine?: BigQueryAuditMetadata_Routine;

  /**
   * Describes how the routine was created.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.RoutineCreation.Reason reason = 3;
   */
  reason: BigQueryAuditMetadata_RoutineCreation_Reason;

  /**
   * The URI of the job that created the routine.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 4;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.RoutineCreation.
 * Use `create(BigQueryAuditMetadata_RoutineCreationSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_RoutineCreationSchema: GenMessage<BigQueryAuditMetadata_RoutineCreation> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 8);

/**
 * Describes how the routine was created.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.RoutineCreation.Reason
 */
export enum BigQueryAuditMetadata_RoutineCreation_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Routine was created using a DDL query.
   *
   * @generated from enum value: QUERY = 1;
   */
  QUERY = 1,

  /**
   * Routine was created using the routines.create API.
   *
   * @generated from enum value: ROUTINE_INSERT_REQUEST = 2;
   */
  ROUTINE_INSERT_REQUEST = 2,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.RoutineCreation.Reason.
 */
export const BigQueryAuditMetadata_RoutineCreation_ReasonSchema: GenEnum<BigQueryAuditMetadata_RoutineCreation_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 8, 0);

/**
 * Table data read event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.TableDataRead
 */
export type BigQueryAuditMetadata_TableDataRead = Message<"google.cloud.audit.BigQueryAuditMetadata.TableDataRead"> & {
  /**
   * List of the accessed fields. Entire list is truncated if the record size
   * exceeds 100K.
   *
   * @generated from field: repeated string fields = 2;
   */
  fields: string[];

  /**
   * True if the fields list was truncated.
   *
   * @generated from field: bool fields_truncated = 8;
   */
  fieldsTruncated: boolean;

  /**
   * List of the referenced policy tags. That is, policy tags attached to the
   * accessed fields or their ancestors.
   * Policy tag resource name is a string of the format:
   * `projects/<project_id>/locations/<location_id>/taxonomies/<taxonomy_id>/policyTags/<policy_tag_id>`
   *
   * @generated from field: repeated string policy_tags = 9;
   */
  policyTags: string[];

  /**
   * True if the policy tag list was truncated. At most 100 policy tags can be
   * saved.
   *
   * @generated from field: bool policy_tags_truncated = 10;
   */
  policyTagsTruncated: boolean;

  /**
   * Describes how the table data was read.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.TableDataRead.Reason reason = 3;
   */
  reason: BigQueryAuditMetadata_TableDataRead_Reason;

  /**
   * The URI of the job that read a table.
   * Present if the reason is JOB but can be redacted for privacy reasons.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 4;
   */
  jobName: string;

  /**
   * The URI of the read session that read a table.
   * Present if the reason is CREATE_READ_SESSION.
   *
   * Format:
   * `projects/<project_id>/locations/<location>/sessions/<session_id>`.
   *
   * @generated from field: string session_name = 5;
   */
  sessionName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.TableDataRead.
 * Use `create(BigQueryAuditMetadata_TableDataReadSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_TableDataReadSchema: GenMessage<BigQueryAuditMetadata_TableDataRead> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 9);

/**
 * Describes how the table data was read.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.TableDataRead.Reason
 */
export enum BigQueryAuditMetadata_TableDataRead_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Table was used as a source table during a BigQuery job.
   *
   * @generated from enum value: JOB = 1;
   */
  JOB = 1,

  /**
   * Table data was accessed using the tabledata.list API.
   *
   * @generated from enum value: TABLEDATA_LIST_REQUEST = 2;
   */
  TABLEDATA_LIST_REQUEST = 2,

  /**
   * Table data was accessed using the jobs.getQueryResults API.
   *
   * @generated from enum value: GET_QUERY_RESULTS_REQUEST = 3;
   */
  GET_QUERY_RESULTS_REQUEST = 3,

  /**
   * Table data was accessed using the jobs.query RPC.
   *
   * @generated from enum value: QUERY_REQUEST = 4;
   */
  QUERY_REQUEST = 4,

  /**
   * Table data was accessed using storage.CreateReadSession API.
   *
   * @generated from enum value: CREATE_READ_SESSION = 5;
   */
  CREATE_READ_SESSION = 5,

  /**
   * Table data was accessed during a materialized view refresh.
   *
   * @generated from enum value: MATERIALIZED_VIEW_REFRESH = 6;
   */
  MATERIALIZED_VIEW_REFRESH = 6,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.TableDataRead.Reason.
 */
export const BigQueryAuditMetadata_TableDataRead_ReasonSchema: GenEnum<BigQueryAuditMetadata_TableDataRead_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 9, 0);

/**
 * Table metadata change event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.TableChange
 */
export type BigQueryAuditMetadata_TableChange = Message<"google.cloud.audit.BigQueryAuditMetadata.TableChange"> & {
  /**
   * Updated table metadata.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.Table table = 1;
   */
  table?: BigQueryAuditMetadata_Table;

  /**
   * True if the table was truncated.
   *
   * @generated from field: bool truncated = 4;
   */
  truncated: boolean;

  /**
   * Describes how the table metadata was changed.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.TableChange.Reason reason = 5;
   */
  reason: BigQueryAuditMetadata_TableChange_Reason;

  /**
   * The URI of the job that changed a table.
   * Present if the reason is JOB or QUERY.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 6;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.TableChange.
 * Use `create(BigQueryAuditMetadata_TableChangeSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_TableChangeSchema: GenMessage<BigQueryAuditMetadata_TableChange> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 10);

/**
 * Describes how the table metadata was changed.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.TableChange.Reason
 */
export enum BigQueryAuditMetadata_TableChange_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Table metadata was updated using the tables.update or tables.patch API.
   *
   * @generated from enum value: TABLE_UPDATE_REQUEST = 1;
   */
  TABLE_UPDATE_REQUEST = 1,

  /**
   * Table was used as a job destination table.
   *
   * @generated from enum value: JOB = 2;
   */
  JOB = 2,

  /**
   * Table metadata was updated using a DML or DDL query.
   *
   * @generated from enum value: QUERY = 3;
   */
  QUERY = 3,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.TableChange.Reason.
 */
export const BigQueryAuditMetadata_TableChange_ReasonSchema: GenEnum<BigQueryAuditMetadata_TableChange_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 10, 0);

/**
 * Model metadata change event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.ModelMetadataChange
 */
export type BigQueryAuditMetadata_ModelMetadataChange = Message<"google.cloud.audit.BigQueryAuditMetadata.ModelMetadataChange"> & {
  /**
   * Updated model.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.Model model = 1;
   */
  model?: BigQueryAuditMetadata_Model;

  /**
   * Describes how the model metadata was changed.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.ModelMetadataChange.Reason reason = 2;
   */
  reason: BigQueryAuditMetadata_ModelMetadataChange_Reason;

  /**
   * The URI of the job that changed the model metadata.
   * Present if and only if the reason is QUERY.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 3;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.ModelMetadataChange.
 * Use `create(BigQueryAuditMetadata_ModelMetadataChangeSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_ModelMetadataChangeSchema: GenMessage<BigQueryAuditMetadata_ModelMetadataChange> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 11);

/**
 * Describes how the model metadata was changed.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.ModelMetadataChange.Reason
 */
export enum BigQueryAuditMetadata_ModelMetadataChange_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Model metadata was updated using the models.patch API.
   *
   * @generated from enum value: MODEL_PATCH_REQUEST = 1;
   */
  MODEL_PATCH_REQUEST = 1,

  /**
   * Model metadata was updated using a DDL query.
   *
   * @generated from enum value: QUERY = 2;
   */
  QUERY = 2,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.ModelMetadataChange.Reason.
 */
export const BigQueryAuditMetadata_ModelMetadataChange_ReasonSchema: GenEnum<BigQueryAuditMetadata_ModelMetadataChange_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 11, 0);

/**
 * Routine change event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.RoutineChange
 */
export type BigQueryAuditMetadata_RoutineChange = Message<"google.cloud.audit.BigQueryAuditMetadata.RoutineChange"> & {
  /**
   * Updated routine.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.Routine routine = 1;
   */
  routine?: BigQueryAuditMetadata_Routine;

  /**
   * Describes how the routine was updated.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.RoutineChange.Reason reason = 3;
   */
  reason: BigQueryAuditMetadata_RoutineChange_Reason;

  /**
   * The URI of the job that updated the routine.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 4;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.RoutineChange.
 * Use `create(BigQueryAuditMetadata_RoutineChangeSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_RoutineChangeSchema: GenMessage<BigQueryAuditMetadata_RoutineChange> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 12);

/**
 * Describes how the routine was updated.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.RoutineChange.Reason
 */
export enum BigQueryAuditMetadata_RoutineChange_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Routine was updated using a DDL query.
   *
   * @generated from enum value: QUERY = 1;
   */
  QUERY = 1,

  /**
   * Routine was updated using the routines.update or routines.patch API.
   *
   * @generated from enum value: ROUTINE_UPDATE_REQUEST = 2;
   */
  ROUTINE_UPDATE_REQUEST = 2,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.RoutineChange.Reason.
 */
export const BigQueryAuditMetadata_RoutineChange_ReasonSchema: GenEnum<BigQueryAuditMetadata_RoutineChange_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 12, 0);

/**
 * Table data change event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.TableDataChange
 */
export type BigQueryAuditMetadata_TableDataChange = Message<"google.cloud.audit.BigQueryAuditMetadata.TableDataChange"> & {
  /**
   * Number of deleted rows.
   *
   * @generated from field: int64 deleted_rows_count = 1;
   */
  deletedRowsCount: bigint;

  /**
   * Number of inserted rows.
   *
   * @generated from field: int64 inserted_rows_count = 2;
   */
  insertedRowsCount: bigint;

  /**
   * True if the table was truncated.
   *
   * @generated from field: bool truncated = 3;
   */
  truncated: boolean;

  /**
   * Describes how the table data was changed.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.TableDataChange.Reason reason = 4;
   */
  reason: BigQueryAuditMetadata_TableDataChange_Reason;

  /**
   * The URI of the job that changed a table.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 5;
   */
  jobName: string;

  /**
   * If written from WRITE_API, the name of the stream.
   *
   * Format:
   * `projects/<project_id>/datasets/<dataset_id>/tables/<table_id>/streams/<stream_id>`
   *
   * @generated from field: string stream_name = 6;
   */
  streamName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.TableDataChange.
 * Use `create(BigQueryAuditMetadata_TableDataChangeSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_TableDataChangeSchema: GenMessage<BigQueryAuditMetadata_TableDataChange> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 13);

/**
 * Describes how the table data was changed.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.TableDataChange.Reason
 */
export enum BigQueryAuditMetadata_TableDataChange_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Table was used as a job destination table.
   *
   * @generated from enum value: JOB = 1;
   */
  JOB = 1,

  /**
   * Table data was updated using a DML or DDL query.
   *
   * @generated from enum value: QUERY = 2;
   */
  QUERY = 2,

  /**
   * Table data was updated during a materialized view refresh.
   *
   * @generated from enum value: MATERIALIZED_VIEW_REFRESH = 3;
   */
  MATERIALIZED_VIEW_REFRESH = 3,

  /**
   * Table data was added using the Write API.
   *
   * @generated from enum value: WRITE_API = 4;
   */
  WRITE_API = 4,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.TableDataChange.Reason.
 */
export const BigQueryAuditMetadata_TableDataChange_ReasonSchema: GenEnum<BigQueryAuditMetadata_TableDataChange_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 13, 0);

/**
 * Model data change event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.ModelDataChange
 */
export type BigQueryAuditMetadata_ModelDataChange = Message<"google.cloud.audit.BigQueryAuditMetadata.ModelDataChange"> & {
  /**
   * Describes how the model data was changed.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.ModelDataChange.Reason reason = 1;
   */
  reason: BigQueryAuditMetadata_ModelDataChange_Reason;

  /**
   * The URI of the job that changed the model data.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 2;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.ModelDataChange.
 * Use `create(BigQueryAuditMetadata_ModelDataChangeSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_ModelDataChangeSchema: GenMessage<BigQueryAuditMetadata_ModelDataChange> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 14);

/**
 * Describes how the model data was changed.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.ModelDataChange.Reason
 */
export enum BigQueryAuditMetadata_ModelDataChange_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Model data was changed using a DDL query.
   *
   * @generated from enum value: QUERY = 1;
   */
  QUERY = 1,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.ModelDataChange.Reason.
 */
export const BigQueryAuditMetadata_ModelDataChange_ReasonSchema: GenEnum<BigQueryAuditMetadata_ModelDataChange_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 14, 0);

/**
 * Model data read event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.ModelDataRead
 */
export type BigQueryAuditMetadata_ModelDataRead = Message<"google.cloud.audit.BigQueryAuditMetadata.ModelDataRead"> & {
  /**
   * Describes how the model data was read.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.ModelDataRead.Reason reason = 1;
   */
  reason: BigQueryAuditMetadata_ModelDataRead_Reason;

  /**
   * The URI of the job that read the model data.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 2;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.ModelDataRead.
 * Use `create(BigQueryAuditMetadata_ModelDataReadSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_ModelDataReadSchema: GenMessage<BigQueryAuditMetadata_ModelDataRead> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 15);

/**
 * Describes how the model data was read.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.ModelDataRead.Reason
 */
export enum BigQueryAuditMetadata_ModelDataRead_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Model was used as a source model during a BigQuery job.
   *
   * @generated from enum value: JOB = 1;
   */
  JOB = 1,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.ModelDataRead.Reason.
 */
export const BigQueryAuditMetadata_ModelDataRead_ReasonSchema: GenEnum<BigQueryAuditMetadata_ModelDataRead_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 15, 0);

/**
 * Table deletion event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.TableDeletion
 */
export type BigQueryAuditMetadata_TableDeletion = Message<"google.cloud.audit.BigQueryAuditMetadata.TableDeletion"> & {
  /**
   * Describes how table was deleted.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.TableDeletion.Reason reason = 1;
   */
  reason: BigQueryAuditMetadata_TableDeletion_Reason;

  /**
   * The URI of the job that deleted a table.
   * Present if the reason is QUERY.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 2;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.TableDeletion.
 * Use `create(BigQueryAuditMetadata_TableDeletionSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_TableDeletionSchema: GenMessage<BigQueryAuditMetadata_TableDeletion> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 16);

/**
 * Describes how the table was deleted.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.TableDeletion.Reason
 */
export enum BigQueryAuditMetadata_TableDeletion_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Table was deleted using the tables.delete API.
   *
   * @generated from enum value: TABLE_DELETE_REQUEST = 2;
   */
  TABLE_DELETE_REQUEST = 2,

  /**
   * Table expired.
   *
   * @generated from enum value: EXPIRED = 3;
   */
  EXPIRED = 3,

  /**
   * Table deleted using a DDL query.
   *
   * @generated from enum value: QUERY = 4;
   */
  QUERY = 4,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.TableDeletion.Reason.
 */
export const BigQueryAuditMetadata_TableDeletion_ReasonSchema: GenEnum<BigQueryAuditMetadata_TableDeletion_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 16, 0);

/**
 * Model deletion event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.ModelDeletion
 */
export type BigQueryAuditMetadata_ModelDeletion = Message<"google.cloud.audit.BigQueryAuditMetadata.ModelDeletion"> & {
  /**
   * Describes how the model was deleted.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.ModelDeletion.Reason reason = 1;
   */
  reason: BigQueryAuditMetadata_ModelDeletion_Reason;

  /**
   * The URI of the job that deleted a model.
   * Present if the reason is QUERY.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 2;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.ModelDeletion.
 * Use `create(BigQueryAuditMetadata_ModelDeletionSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_ModelDeletionSchema: GenMessage<BigQueryAuditMetadata_ModelDeletion> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 17);

/**
 * Describes how the model was deleted.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.ModelDeletion.Reason
 */
export enum BigQueryAuditMetadata_ModelDeletion_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Model was deleted using the models.delete API.
   *
   * @generated from enum value: MODEL_DELETE_REQUEST = 1;
   */
  MODEL_DELETE_REQUEST = 1,

  /**
   * Model expired.
   *
   * @generated from enum value: EXPIRED = 2;
   */
  EXPIRED = 2,

  /**
   * Model was deleted using DDL query.
   *
   * @generated from enum value: QUERY = 3;
   */
  QUERY = 3,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.ModelDeletion.Reason.
 */
export const BigQueryAuditMetadata_ModelDeletion_ReasonSchema: GenEnum<BigQueryAuditMetadata_ModelDeletion_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 17, 0);

/**
 * Routine deletion event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.RoutineDeletion
 */
export type BigQueryAuditMetadata_RoutineDeletion = Message<"google.cloud.audit.BigQueryAuditMetadata.RoutineDeletion"> & {
  /**
   * Deleted routine.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.Routine routine = 1;
   */
  routine?: BigQueryAuditMetadata_Routine;

  /**
   * Describes how the routine was deleted.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.RoutineDeletion.Reason reason = 3;
   */
  reason: BigQueryAuditMetadata_RoutineDeletion_Reason;

  /**
   * The URI of the job that deleted the routine.
   * Present if the reason is QUERY.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 4;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.RoutineDeletion.
 * Use `create(BigQueryAuditMetadata_RoutineDeletionSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_RoutineDeletionSchema: GenMessage<BigQueryAuditMetadata_RoutineDeletion> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 18);

/**
 * Describes how the routine was deleted.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.RoutineDeletion.Reason
 */
export enum BigQueryAuditMetadata_RoutineDeletion_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Routine was deleted using DDL query.
   *
   * @generated from enum value: QUERY = 1;
   */
  QUERY = 1,

  /**
   * Routine was deleted using the API.
   *
   * @generated from enum value: ROUTINE_DELETE_REQUEST = 2;
   */
  ROUTINE_DELETE_REQUEST = 2,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.RoutineDeletion.Reason.
 */
export const BigQueryAuditMetadata_RoutineDeletion_ReasonSchema: GenEnum<BigQueryAuditMetadata_RoutineDeletion_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 18, 0);

/**
 * Row access policy creation event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicyCreation
 */
export type BigQueryAuditMetadata_RowAccessPolicyCreation = Message<"google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicyCreation"> & {
  /**
   * The row access policy created by this event.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicy row_access_policy = 1;
   */
  rowAccessPolicy?: BigQueryAuditMetadata_RowAccessPolicy;

  /**
   * The URI of the job that created this row access policy.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 2;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicyCreation.
 * Use `create(BigQueryAuditMetadata_RowAccessPolicyCreationSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_RowAccessPolicyCreationSchema: GenMessage<BigQueryAuditMetadata_RowAccessPolicyCreation> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 19);

/**
 * Row access policy change event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicyChange
 */
export type BigQueryAuditMetadata_RowAccessPolicyChange = Message<"google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicyChange"> & {
  /**
   * The row access policy that was changed by this event.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicy row_access_policy = 1;
   */
  rowAccessPolicy?: BigQueryAuditMetadata_RowAccessPolicy;

  /**
   * The URI of the job that created this row access policy.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 2;
   */
  jobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicyChange.
 * Use `create(BigQueryAuditMetadata_RowAccessPolicyChangeSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_RowAccessPolicyChangeSchema: GenMessage<BigQueryAuditMetadata_RowAccessPolicyChange> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 20);

/**
 * Row access policy deletion event.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicyDeletion
 */
export type BigQueryAuditMetadata_RowAccessPolicyDeletion = Message<"google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicyDeletion"> & {
  /**
   * The row access policies that were deleted. At present, only populated
   * when a single policy is dropped.
   *
   * @generated from field: repeated google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicy row_access_policies = 1;
   */
  rowAccessPolicies: BigQueryAuditMetadata_RowAccessPolicy[];

  /**
   * The job that deleted these row access policies.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 2;
   */
  jobName: string;

  /**
   * This field is set to true when a DROP ALL command has been executed, thus
   * removing all row access policies on the table.
   *
   * @generated from field: bool all_row_access_policies_dropped = 3;
   */
  allRowAccessPoliciesDropped: boolean;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicyDeletion.
 * Use `create(BigQueryAuditMetadata_RowAccessPolicyDeletionSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_RowAccessPolicyDeletionSchema: GenMessage<BigQueryAuditMetadata_RowAccessPolicyDeletion> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 21);

/**
 * Unlink linked dataset from its source dataset event
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.UnlinkDataset
 */
export type BigQueryAuditMetadata_UnlinkDataset = Message<"google.cloud.audit.BigQueryAuditMetadata.UnlinkDataset"> & {
  /**
   * The linked dataset URI which is unlinked from its source.
   *
   * Format: `projects/<project_id>/datasets/<dataset_id>`.
   *
   * @generated from field: string linked_dataset = 1;
   */
  linkedDataset: string;

  /**
   * The source dataset URI from which the linked dataset is unlinked.
   *
   * Format: `projects/<project_id>/datasets/<dataset_id>`.
   *
   * @generated from field: string source_dataset = 2;
   */
  sourceDataset: string;

  /**
   * Reason for unlinking linked dataset
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.UnlinkDataset.Reason reason = 3;
   */
  reason: BigQueryAuditMetadata_UnlinkDataset_Reason;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.UnlinkDataset.
 * Use `create(BigQueryAuditMetadata_UnlinkDatasetSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_UnlinkDatasetSchema: GenMessage<BigQueryAuditMetadata_UnlinkDataset> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 22);

/**
 * Describes how the unlinking operation occurred.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.UnlinkDataset.Reason
 */
export enum BigQueryAuditMetadata_UnlinkDataset_Reason {
  /**
   * Unknown.
   *
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  REASON_UNSPECIFIED = 0,

  /**
   * Linked dataset unlinked via API
   *
   * @generated from enum value: UNLINK_API = 1;
   */
  UNLINK_API = 1,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.UnlinkDataset.Reason.
 */
export const BigQueryAuditMetadata_UnlinkDataset_ReasonSchema: GenEnum<BigQueryAuditMetadata_UnlinkDataset_Reason> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 22, 0);

/**
 * BigQuery job.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.Job
 */
export type BigQueryAuditMetadata_Job = Message<"google.cloud.audit.BigQueryAuditMetadata.Job"> & {
  /**
   * Job URI.
   *
   * Format: `projects/<project_id>/jobs/<job_id>`.
   *
   * @generated from field: string job_name = 1;
   */
  jobName: string;

  /**
   * Job configuration.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobConfig job_config = 2;
   */
  jobConfig?: BigQueryAuditMetadata_JobConfig;

  /**
   * Job status.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobStatus job_status = 3;
   */
  jobStatus?: BigQueryAuditMetadata_JobStatus;

  /**
   * Job statistics.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobStats job_stats = 4;
   */
  jobStats?: BigQueryAuditMetadata_JobStats;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.Job.
 * Use `create(BigQueryAuditMetadata_JobSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_JobSchema: GenMessage<BigQueryAuditMetadata_Job> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 23);

/**
 * Job configuration.
 * See the [Jobs](https://cloud.google.com/bigquery/docs/reference/v2/jobs)
 * API resource for more details on individual fields.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.JobConfig
 */
export type BigQueryAuditMetadata_JobConfig = Message<"google.cloud.audit.BigQueryAuditMetadata.JobConfig"> & {
  /**
   * Job type.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobConfig.Type type = 1;
   */
  type: BigQueryAuditMetadata_JobConfig_Type;

  /**
   * Job configuration information.
   *
   * @generated from oneof google.cloud.audit.BigQueryAuditMetadata.JobConfig.config
   */
  config: {
    /**
     * Query job information.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobConfig.Query query_config = 2;
     */
    value: BigQueryAuditMetadata_JobConfig_Query;
    case: "queryConfig";
  } | {
    /**
     * Load job information.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobConfig.Load load_config = 3;
     */
    value: BigQueryAuditMetadata_JobConfig_Load;
    case: "loadConfig";
  } | {
    /**
     * Extract job information.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobConfig.Extract extract_config = 4;
     */
    value: BigQueryAuditMetadata_JobConfig_Extract;
    case: "extractConfig";
  } | {
    /**
     * TableCopy job information.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobConfig.TableCopy table_copy_config = 5;
     */
    value: BigQueryAuditMetadata_JobConfig_TableCopy;
    case: "tableCopyConfig";
  } | { case: undefined; value?: undefined };

  /**
   * Labels provided for the job.
   *
   * @generated from field: map<string, string> labels = 6;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.JobConfig.
 * Use `create(BigQueryAuditMetadata_JobConfigSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_JobConfigSchema: GenMessage<BigQueryAuditMetadata_JobConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 24);

/**
 * Query job configuration.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.JobConfig.Query
 */
export type BigQueryAuditMetadata_JobConfig_Query = Message<"google.cloud.audit.BigQueryAuditMetadata.JobConfig.Query"> & {
  /**
   * The SQL query to run. Truncated if exceeds 50K.
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * True if the query field was truncated.
   *
   * @generated from field: bool query_truncated = 10;
   */
  queryTruncated: boolean;

  /**
   * The destination table for the query results.
   *
   * @generated from field: string destination_table = 2;
   */
  destinationTable: string;

  /**
   * Destination table create disposition.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.CreateDisposition create_disposition = 3;
   */
  createDisposition: BigQueryAuditMetadata_CreateDisposition;

  /**
   * Destination table write disposition.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.WriteDisposition write_disposition = 4;
   */
  writeDisposition: BigQueryAuditMetadata_WriteDisposition;

  /**
   * Default dataset for the query.
   *
   * @generated from field: string default_dataset = 5;
   */
  defaultDataset: string;

  /**
   * External data sources used in the query.
   *
   * @generated from field: repeated google.cloud.audit.BigQueryAuditMetadata.TableDefinition table_definitions = 6;
   */
  tableDefinitions: BigQueryAuditMetadata_TableDefinition[];

  /**
   * Priority given to the query.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobConfig.Query.Priority priority = 7;
   */
  priority: BigQueryAuditMetadata_JobConfig_Query_Priority;

  /**
   * Result table encryption information. Set when non-default encryption is
   * used.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.EncryptionInfo destination_table_encryption = 8;
   */
  destinationTableEncryption?: BigQueryAuditMetadata_EncryptionInfo;

  /**
   * Type of the query.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.QueryStatementType statement_type = 9;
   */
  statementType: BigQueryAuditMetadata_QueryStatementType;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.JobConfig.Query.
 * Use `create(BigQueryAuditMetadata_JobConfig_QuerySchema)` to create a new message.
 */
export const BigQueryAuditMetadata_JobConfig_QuerySchema: GenMessage<BigQueryAuditMetadata_JobConfig_Query> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 24, 0);

/**
 * Priority given to the query.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.JobConfig.Query.Priority
 */
export enum BigQueryAuditMetadata_JobConfig_Query_Priority {
  /**
   * Unknown.
   *
   * @generated from enum value: PRIORITY_UNSPECIFIED = 0;
   */
  PRIORITY_UNSPECIFIED = 0,

  /**
   * Interactive query.
   *
   * @generated from enum value: QUERY_INTERACTIVE = 1;
   */
  QUERY_INTERACTIVE = 1,

  /**
   * Batch query.
   *
   * @generated from enum value: QUERY_BATCH = 2;
   */
  QUERY_BATCH = 2,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.JobConfig.Query.Priority.
 */
export const BigQueryAuditMetadata_JobConfig_Query_PrioritySchema: GenEnum<BigQueryAuditMetadata_JobConfig_Query_Priority> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 24, 0, 0);

/**
 * Load job configuration.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.JobConfig.Load
 */
export type BigQueryAuditMetadata_JobConfig_Load = Message<"google.cloud.audit.BigQueryAuditMetadata.JobConfig.Load"> & {
  /**
   * URIs for the data to be imported. Entire list is truncated if exceeds
   * 40K.
   *
   * @generated from field: repeated string source_uris = 1;
   */
  sourceUris: string[];

  /**
   * True if the source_URIs field was truncated.
   *
   * @generated from field: bool source_uris_truncated = 7;
   */
  sourceUrisTruncated: boolean;

  /**
   * The table schema in JSON format. Entire field is truncated if exceeds
   * 40K.
   *
   * @generated from field: string schema_json = 2;
   */
  schemaJson: string;

  /**
   * True if the schema_json field was truncated.
   *
   * @generated from field: bool schema_json_truncated = 8;
   */
  schemaJsonTruncated: boolean;

  /**
   * The destination table for the import.
   *
   * @generated from field: string destination_table = 3;
   */
  destinationTable: string;

  /**
   * Destination table create disposition.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.CreateDisposition create_disposition = 4;
   */
  createDisposition: BigQueryAuditMetadata_CreateDisposition;

  /**
   * Destination table write disposition.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.WriteDisposition write_disposition = 5;
   */
  writeDisposition: BigQueryAuditMetadata_WriteDisposition;

  /**
   * Result table encryption information. Set when non-default encryption is
   * used.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.EncryptionInfo destination_table_encryption = 6;
   */
  destinationTableEncryption?: BigQueryAuditMetadata_EncryptionInfo;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.JobConfig.Load.
 * Use `create(BigQueryAuditMetadata_JobConfig_LoadSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_JobConfig_LoadSchema: GenMessage<BigQueryAuditMetadata_JobConfig_Load> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 24, 1);

/**
 * Extract job configuration.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.JobConfig.Extract
 */
export type BigQueryAuditMetadata_JobConfig_Extract = Message<"google.cloud.audit.BigQueryAuditMetadata.JobConfig.Extract"> & {
  /**
   * URIs where extracted data should be written. Entire list is truncated
   * if exceeds 50K.
   *
   * @generated from field: repeated string destination_uris = 1;
   */
  destinationUris: string[];

  /**
   * True if the destination_URIs field was truncated.
   *
   * @generated from field: bool destination_uris_truncated = 3;
   */
  destinationUrisTruncated: boolean;

  /**
   * @generated from oneof google.cloud.audit.BigQueryAuditMetadata.JobConfig.Extract.source
   */
  source: {
    /**
     * The source table.
     *
     * @generated from field: string source_table = 2;
     */
    value: string;
    case: "sourceTable";
  } | {
    /**
     * The source model.
     *
     * @generated from field: string source_model = 4;
     */
    value: string;
    case: "sourceModel";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.JobConfig.Extract.
 * Use `create(BigQueryAuditMetadata_JobConfig_ExtractSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_JobConfig_ExtractSchema: GenMessage<BigQueryAuditMetadata_JobConfig_Extract> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 24, 2);

/**
 * Table copy job configuration.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.JobConfig.TableCopy
 */
export type BigQueryAuditMetadata_JobConfig_TableCopy = Message<"google.cloud.audit.BigQueryAuditMetadata.JobConfig.TableCopy"> & {
  /**
   * Source tables. Entire list is truncated if exceeds 50K.
   *
   * @generated from field: repeated string source_tables = 1;
   */
  sourceTables: string[];

  /**
   * True if the source_tables field was truncated.
   *
   * @generated from field: bool source_tables_truncated = 6;
   */
  sourceTablesTruncated: boolean;

  /**
   * Destination table.
   *
   * @generated from field: string destination_table = 2;
   */
  destinationTable: string;

  /**
   * Destination table create disposition.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.CreateDisposition create_disposition = 3;
   */
  createDisposition: BigQueryAuditMetadata_CreateDisposition;

  /**
   * Destination table write disposition.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.WriteDisposition write_disposition = 4;
   */
  writeDisposition: BigQueryAuditMetadata_WriteDisposition;

  /**
   * Result table encryption information. Set when non-default encryption is
   * used.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.EncryptionInfo destination_table_encryption = 5;
   */
  destinationTableEncryption?: BigQueryAuditMetadata_EncryptionInfo;

  /**
   * Supported operation types in the table copy job.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.OperationType operation_type = 7;
   */
  operationType: BigQueryAuditMetadata_OperationType;

  /**
   * Expiration time set on the destination table. Expired tables will be
   * deleted and their storage reclaimed.
   *
   * @generated from field: google.protobuf.Timestamp destination_expiration_time = 8;
   */
  destinationExpirationTime?: Timestamp;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.JobConfig.TableCopy.
 * Use `create(BigQueryAuditMetadata_JobConfig_TableCopySchema)` to create a new message.
 */
export const BigQueryAuditMetadata_JobConfig_TableCopySchema: GenMessage<BigQueryAuditMetadata_JobConfig_TableCopy> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 24, 3);

/**
 * Job type.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.JobConfig.Type
 */
export enum BigQueryAuditMetadata_JobConfig_Type {
  /**
   * Unknown.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Query job.
   *
   * @generated from enum value: QUERY = 1;
   */
  QUERY = 1,

  /**
   * Table copy job.
   *
   * @generated from enum value: COPY = 2;
   */
  COPY = 2,

  /**
   * Export (extract) job.
   *
   * @generated from enum value: EXPORT = 3;
   */
  EXPORT = 3,

  /**
   * Import (load) job.
   *
   * @generated from enum value: IMPORT = 4;
   */
  IMPORT = 4,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.JobConfig.Type.
 */
export const BigQueryAuditMetadata_JobConfig_TypeSchema: GenEnum<BigQueryAuditMetadata_JobConfig_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 24, 0);

/**
 * Definition of an external data source used in a query.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.TableDefinition
 */
export type BigQueryAuditMetadata_TableDefinition = Message<"google.cloud.audit.BigQueryAuditMetadata.TableDefinition"> & {
  /**
   * Name of the table, used in queries.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * URIs for the data.
   *
   * @generated from field: repeated string source_uris = 2;
   */
  sourceUris: string[];
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.TableDefinition.
 * Use `create(BigQueryAuditMetadata_TableDefinitionSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_TableDefinitionSchema: GenMessage<BigQueryAuditMetadata_TableDefinition> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 25);

/**
 * Status of a job.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.JobStatus
 */
export type BigQueryAuditMetadata_JobStatus = Message<"google.cloud.audit.BigQueryAuditMetadata.JobStatus"> & {
  /**
   * State of the job.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobState job_state = 1;
   */
  jobState: BigQueryAuditMetadata_JobState;

  /**
   * Job error, if the job failed.
   *
   * @generated from field: google.rpc.Status error_result = 2;
   */
  errorResult?: Status;

  /**
   * Errors encountered during the running of the job. Does not necessarily
   * mean that the job has completed or was unsuccessful.
   *
   * @generated from field: repeated google.rpc.Status errors = 3;
   */
  errors: Status[];
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.JobStatus.
 * Use `create(BigQueryAuditMetadata_JobStatusSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_JobStatusSchema: GenMessage<BigQueryAuditMetadata_JobStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 26);

/**
 * Job statistics.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.JobStats
 */
export type BigQueryAuditMetadata_JobStats = Message<"google.cloud.audit.BigQueryAuditMetadata.JobStats"> & {
  /**
   * Job creation time.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Job execution start time.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * Job completion time.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;

  /**
   * Statistics specific to the job type.
   *
   * @generated from oneof google.cloud.audit.BigQueryAuditMetadata.JobStats.extended
   */
  extended: {
    /**
     * Query job statistics.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobStats.Query query_stats = 8;
     */
    value: BigQueryAuditMetadata_JobStats_Query;
    case: "queryStats";
  } | {
    /**
     * Load job statistics.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobStats.Load load_stats = 9;
     */
    value: BigQueryAuditMetadata_JobStats_Load;
    case: "loadStats";
  } | {
    /**
     * Extract job statistics.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.JobStats.Extract extract_stats = 13;
     */
    value: BigQueryAuditMetadata_JobStats_Extract;
    case: "extractStats";
  } | { case: undefined; value?: undefined };

  /**
   * The total number of slot-ms consumed by the query job.
   *
   * @generated from field: int64 total_slot_ms = 10;
   */
  totalSlotMs: bigint;

  /**
   * Reservation usage attributed from each tier of a reservation hierarchy.
   * This field reported misleading information and will no longer be
   * populated. Aggregate usage of all jobs submitted to a reservation
   * should provide a more reliable indicator of reservation imbalance.
   *
   * @generated from field: repeated google.cloud.audit.BigQueryAuditMetadata.JobStats.ReservationResourceUsage reservation_usage = 11 [deprecated = true];
   * @deprecated
   */
  reservationUsage: BigQueryAuditMetadata_JobStats_ReservationResourceUsage[];

  /**
   * Reservation name or "unreserved" for on-demand resource usage.
   *
   * @generated from field: string reservation = 14;
   */
  reservation: string;

  /**
   * Parent job name. Only present for child jobs.
   *
   * @generated from field: string parent_job_name = 12;
   */
  parentJobName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.JobStats.
 * Use `create(BigQueryAuditMetadata_JobStatsSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_JobStatsSchema: GenMessage<BigQueryAuditMetadata_JobStats> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 27);

/**
 * Query job statistics.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.JobStats.Query
 */
export type BigQueryAuditMetadata_JobStats_Query = Message<"google.cloud.audit.BigQueryAuditMetadata.JobStats.Query"> & {
  /**
   * Total bytes processed by the query job.
   *
   * @generated from field: int64 total_processed_bytes = 1;
   */
  totalProcessedBytes: bigint;

  /**
   * Total bytes billed by the query job.
   *
   * @generated from field: int64 total_billed_bytes = 2;
   */
  totalBilledBytes: bigint;

  /**
   * The tier assigned by the CPU-based billing.
   *
   * @generated from field: int32 billing_tier = 3;
   */
  billingTier: number;

  /**
   * Tables accessed by the query job.
   *
   * @generated from field: repeated string referenced_tables = 6;
   */
  referencedTables: string[];

  /**
   * Views accessed by the query job.
   *
   * @generated from field: repeated string referenced_views = 7;
   */
  referencedViews: string[];

  /**
   * Routines accessed by the query job.
   *
   * @generated from field: repeated string referenced_routines = 10;
   */
  referencedRoutines: string[];

  /**
   * Number of output rows produced by the query job.
   *
   * @generated from field: int64 output_row_count = 8;
   */
  outputRowCount: bigint;

  /**
   * True if the query job results were read from the query cache.
   *
   * @generated from field: bool cache_hit = 9;
   */
  cacheHit: boolean;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.JobStats.Query.
 * Use `create(BigQueryAuditMetadata_JobStats_QuerySchema)` to create a new message.
 */
export const BigQueryAuditMetadata_JobStats_QuerySchema: GenMessage<BigQueryAuditMetadata_JobStats_Query> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 27, 0);

/**
 * Load job statistics.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.JobStats.Load
 */
export type BigQueryAuditMetadata_JobStats_Load = Message<"google.cloud.audit.BigQueryAuditMetadata.JobStats.Load"> & {
  /**
   * Total bytes loaded by the import job.
   *
   * @generated from field: int64 total_output_bytes = 1;
   */
  totalOutputBytes: bigint;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.JobStats.Load.
 * Use `create(BigQueryAuditMetadata_JobStats_LoadSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_JobStats_LoadSchema: GenMessage<BigQueryAuditMetadata_JobStats_Load> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 27, 1);

/**
 * Extract job statistics.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.JobStats.Extract
 */
export type BigQueryAuditMetadata_JobStats_Extract = Message<"google.cloud.audit.BigQueryAuditMetadata.JobStats.Extract"> & {
  /**
   * Total bytes exported by the extract job.
   *
   * @generated from field: int64 total_input_bytes = 1;
   */
  totalInputBytes: bigint;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.JobStats.Extract.
 * Use `create(BigQueryAuditMetadata_JobStats_ExtractSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_JobStats_ExtractSchema: GenMessage<BigQueryAuditMetadata_JobStats_Extract> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 27, 2);

/**
 * Job resource usage breakdown by reservation.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.JobStats.ReservationResourceUsage
 */
export type BigQueryAuditMetadata_JobStats_ReservationResourceUsage = Message<"google.cloud.audit.BigQueryAuditMetadata.JobStats.ReservationResourceUsage"> & {
  /**
   * Reservation name or "unreserved" for on-demand resources usage.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Total slot milliseconds used by the reservation for a particular job.
   *
   * @generated from field: int64 slot_ms = 2;
   */
  slotMs: bigint;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.JobStats.ReservationResourceUsage.
 * Use `create(BigQueryAuditMetadata_JobStats_ReservationResourceUsageSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_JobStats_ReservationResourceUsageSchema: GenMessage<BigQueryAuditMetadata_JobStats_ReservationResourceUsage> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 27, 3);

/**
 * BigQuery table.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.Table
 */
export type BigQueryAuditMetadata_Table = Message<"google.cloud.audit.BigQueryAuditMetadata.Table"> & {
  /**
   * Table URI.
   *
   * Format: `projects/<project_id>/datasets/<dataset_id>/tables/<table_id>`.
   *
   * @generated from field: string table_name = 1;
   */
  tableName: string;

  /**
   * User-provided metadata for the table.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.EntityInfo table_info = 10;
   */
  tableInfo?: BigQueryAuditMetadata_EntityInfo;

  /**
   * A JSON representation of the table's schema. Entire field is truncated
   * if exceeds 40K.
   *
   * @generated from field: string schema_json = 3;
   */
  schemaJson: string;

  /**
   * True if the schema_json field was truncated.
   *
   * @generated from field: bool schema_json_truncated = 11;
   */
  schemaJsonTruncated: boolean;

  /**
   * View metadata. Only present for views.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.TableViewDefinition view = 4;
   */
  view?: BigQueryAuditMetadata_TableViewDefinition;

  /**
   * Table expiration time.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 5;
   */
  expireTime?: Timestamp;

  /**
   * The table creation time.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;

  /**
   * The last time metadata update time.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 7;
   */
  updateTime?: Timestamp;

  /**
   * The last table truncation time.
   *
   * @generated from field: google.protobuf.Timestamp truncate_time = 8;
   */
  truncateTime?: Timestamp;

  /**
   * Table encryption information. Set when non-default encryption is used.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.EncryptionInfo encryption = 9;
   */
  encryption?: BigQueryAuditMetadata_EncryptionInfo;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.Table.
 * Use `create(BigQueryAuditMetadata_TableSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_TableSchema: GenMessage<BigQueryAuditMetadata_Table> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 28);

/**
 * Trained BigQuery ML model.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.Model
 */
export type BigQueryAuditMetadata_Model = Message<"google.cloud.audit.BigQueryAuditMetadata.Model"> & {
  /**
   * Model URI.
   *
   * Format: `projects/<project_id>/datasets/<dataset_id>/models/<model_id>`.
   *
   * @generated from field: string model_name = 1;
   */
  modelName: string;

  /**
   * User-provided metadata for the model.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.EntityInfo model_info = 2;
   */
  modelInfo?: BigQueryAuditMetadata_EntityInfo;

  /**
   * Model expiration time.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 5;
   */
  expireTime?: Timestamp;

  /**
   * Model creation time.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;

  /**
   * Model last update time.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 7;
   */
  updateTime?: Timestamp;

  /**
   * Model encryption information. Set when non-default encryption is used.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.EncryptionInfo encryption = 8;
   */
  encryption?: BigQueryAuditMetadata_EncryptionInfo;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.Model.
 * Use `create(BigQueryAuditMetadata_ModelSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_ModelSchema: GenMessage<BigQueryAuditMetadata_Model> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 29);

/**
 * User Defined Function (UDF) or Stored Procedure.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.Routine
 */
export type BigQueryAuditMetadata_Routine = Message<"google.cloud.audit.BigQueryAuditMetadata.Routine"> & {
  /**
   * Routine URI.
   *
   * Format:
   * `projects/<project_id>/datasets/<dataset_id>/routines/<routine_id>`.
   *
   * @generated from field: string routine_name = 1;
   */
  routineName: string;

  /**
   * Routine creation time.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * Routine last update time.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 6;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.Routine.
 * Use `create(BigQueryAuditMetadata_RoutineSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_RoutineSchema: GenMessage<BigQueryAuditMetadata_Routine> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 30);

/**
 * User-provided metadata for an entity, for e.g. dataset, table or model.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.EntityInfo
 */
export type BigQueryAuditMetadata_EntityInfo = Message<"google.cloud.audit.BigQueryAuditMetadata.EntityInfo"> & {
  /**
   * A short name for the entity.
   *
   * @generated from field: string friendly_name = 1;
   */
  friendlyName: string;

  /**
   * A long description for the entity.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Labels provided for the entity.
   *
   * @generated from field: map<string, string> labels = 3;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.EntityInfo.
 * Use `create(BigQueryAuditMetadata_EntityInfoSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_EntityInfoSchema: GenMessage<BigQueryAuditMetadata_EntityInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 31);

/**
 * View definition.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.TableViewDefinition
 */
export type BigQueryAuditMetadata_TableViewDefinition = Message<"google.cloud.audit.BigQueryAuditMetadata.TableViewDefinition"> & {
  /**
   * SQL query defining the view. Truncated if exceeds 40K.
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * True if the schema_json field was truncated.
   *
   * @generated from field: bool query_truncated = 2;
   */
  queryTruncated: boolean;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.TableViewDefinition.
 * Use `create(BigQueryAuditMetadata_TableViewDefinitionSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_TableViewDefinitionSchema: GenMessage<BigQueryAuditMetadata_TableViewDefinition> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 32);

/**
 * BigQuery dataset.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.Dataset
 */
export type BigQueryAuditMetadata_Dataset = Message<"google.cloud.audit.BigQueryAuditMetadata.Dataset"> & {
  /**
   * Dataset URI.
   *
   * Format: `projects/<project_id>/datasets/<dataset_id>`.
   *
   * @generated from field: string dataset_name = 1;
   */
  datasetName: string;

  /**
   * User-provided metadata for the dataset.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.EntityInfo dataset_info = 7;
   */
  datasetInfo?: BigQueryAuditMetadata_EntityInfo;

  /**
   * Dataset creation time.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * Dataset metadata last update time.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;

  /**
   * The access control list for the dataset.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.BigQueryAcl acl = 5;
   */
  acl?: BigQueryAuditMetadata_BigQueryAcl;

  /**
   * Default expiration time for tables in the dataset.
   *
   * @generated from field: google.protobuf.Duration default_table_expire_duration = 6;
   */
  defaultTableExpireDuration?: Duration;

  /**
   * Default encryption for tables in the dataset.
   *
   * @generated from field: google.cloud.audit.BigQueryAuditMetadata.EncryptionInfo default_encryption = 8;
   */
  defaultEncryption?: BigQueryAuditMetadata_EncryptionInfo;

  /**
   * Default collation for the dataset.
   *
   * @generated from field: string default_collation = 9;
   */
  defaultCollation: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.Dataset.
 * Use `create(BigQueryAuditMetadata_DatasetSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_DatasetSchema: GenMessage<BigQueryAuditMetadata_Dataset> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 33);

/**
 * An access control list.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.BigQueryAcl
 */
export type BigQueryAuditMetadata_BigQueryAcl = Message<"google.cloud.audit.BigQueryAuditMetadata.BigQueryAcl"> & {
  /**
   * IAM policy for the resource.
   *
   * @generated from field: google.iam.v1.Policy policy = 1;
   */
  policy?: Policy;

  /**
   * List of authorized views for a dataset.
   *
   * Format: `projects/<project_id>/datasets/<dataset_id>/tables/<view_id>`.
   *
   * @generated from field: repeated string authorized_views = 2;
   */
  authorizedViews: string[];
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.BigQueryAcl.
 * Use `create(BigQueryAuditMetadata_BigQueryAclSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_BigQueryAclSchema: GenMessage<BigQueryAuditMetadata_BigQueryAcl> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 34);

/**
 * Encryption properties for a table or a job
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.EncryptionInfo
 */
export type BigQueryAuditMetadata_EncryptionInfo = Message<"google.cloud.audit.BigQueryAuditMetadata.EncryptionInfo"> & {
  /**
   * Cloud kms key identifier.
   *
   * Format:
   * `projects/<project_id>/locations/<location>/keyRings/<key_ring_name>/cryptoKeys/<key_name>`
   *
   * @generated from field: string kms_key_name = 1;
   */
  kmsKeyName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.EncryptionInfo.
 * Use `create(BigQueryAuditMetadata_EncryptionInfoSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_EncryptionInfoSchema: GenMessage<BigQueryAuditMetadata_EncryptionInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 35);

/**
 * BigQuery row access policy.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicy
 */
export type BigQueryAuditMetadata_RowAccessPolicy = Message<"google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicy"> & {
  /**
   * Row access policy URI.
   *
   * Format:
   * `projects/<project_id>/datasets/<dataset_id>/tables/<table_id>/rowAccessPolicies/<row_access_policy_id>`
   *
   * @generated from field: string row_access_policy_name = 1;
   */
  rowAccessPolicyName: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.RowAccessPolicy.
 * Use `create(BigQueryAuditMetadata_RowAccessPolicySchema)` to create a new message.
 */
export const BigQueryAuditMetadata_RowAccessPolicySchema: GenMessage<BigQueryAuditMetadata_RowAccessPolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 36);

/**
 * First party (Google) application specific request metadata.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.FirstPartyAppMetadata
 */
export type BigQueryAuditMetadata_FirstPartyAppMetadata = Message<"google.cloud.audit.BigQueryAuditMetadata.FirstPartyAppMetadata"> & {
  /**
   * @generated from oneof google.cloud.audit.BigQueryAuditMetadata.FirstPartyAppMetadata.metadata
   */
  metadata: {
    /**
     * Google Sheets metadata.
     *
     * @generated from field: google.cloud.audit.BigQueryAuditMetadata.SheetsMetadata sheets_metadata = 1;
     */
    value: BigQueryAuditMetadata_SheetsMetadata;
    case: "sheetsMetadata";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.FirstPartyAppMetadata.
 * Use `create(BigQueryAuditMetadata_FirstPartyAppMetadataSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_FirstPartyAppMetadataSchema: GenMessage<BigQueryAuditMetadata_FirstPartyAppMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 37);

/**
 * Google Sheets specific request metadata.
 *
 * @generated from message google.cloud.audit.BigQueryAuditMetadata.SheetsMetadata
 */
export type BigQueryAuditMetadata_SheetsMetadata = Message<"google.cloud.audit.BigQueryAuditMetadata.SheetsMetadata"> & {
  /**
   * The ID of the spreadsheet from which the request is sent.
   *
   * @generated from field: string doc_id = 1;
   */
  docId: string;
};

/**
 * Describes the message google.cloud.audit.BigQueryAuditMetadata.SheetsMetadata.
 * Use `create(BigQueryAuditMetadata_SheetsMetadataSchema)` to create a new message.
 */
export const BigQueryAuditMetadata_SheetsMetadataSchema: GenMessage<BigQueryAuditMetadata_SheetsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 38);

/**
 * Describes whether a job should create a destination table if it doesn't
 * exist.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.CreateDisposition
 */
export enum BigQueryAuditMetadata_CreateDisposition {
  /**
   * Unknown.
   *
   * @generated from enum value: CREATE_DISPOSITION_UNSPECIFIED = 0;
   */
  CREATE_DISPOSITION_UNSPECIFIED = 0,

  /**
   * This job should never create tables.
   *
   * @generated from enum value: CREATE_NEVER = 1;
   */
  CREATE_NEVER = 1,

  /**
   * This job should create a table if it doesn't already exist.
   *
   * @generated from enum value: CREATE_IF_NEEDED = 2;
   */
  CREATE_IF_NEEDED = 2,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.CreateDisposition.
 */
export const BigQueryAuditMetadata_CreateDispositionSchema: GenEnum<BigQueryAuditMetadata_CreateDisposition> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 0);

/**
 * Describes whether a job should overwrite or append the existing destination
 * table if it already exists.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.WriteDisposition
 */
export enum BigQueryAuditMetadata_WriteDisposition {
  /**
   * Unknown.
   *
   * @generated from enum value: WRITE_DISPOSITION_UNSPECIFIED = 0;
   */
  WRITE_DISPOSITION_UNSPECIFIED = 0,

  /**
   * This job should only be writing to empty tables.
   *
   * @generated from enum value: WRITE_EMPTY = 1;
   */
  WRITE_EMPTY = 1,

  /**
   * This job will truncate the existing table data.
   *
   * @generated from enum value: WRITE_TRUNCATE = 2;
   */
  WRITE_TRUNCATE = 2,

  /**
   * This job will append to the table.
   *
   * @generated from enum value: WRITE_APPEND = 3;
   */
  WRITE_APPEND = 3,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.WriteDisposition.
 */
export const BigQueryAuditMetadata_WriteDispositionSchema: GenEnum<BigQueryAuditMetadata_WriteDisposition> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 1);

/**
 * Table copy job operation type.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.OperationType
 */
export enum BigQueryAuditMetadata_OperationType {
  /**
   * Unspecified operation type.
   *
   * @generated from enum value: OPERATION_TYPE_UNSPECIFIED = 0;
   */
  OPERATION_TYPE_UNSPECIFIED = 0,

  /**
   * The source and the destination table have the same table type.
   *
   * @generated from enum value: COPY = 1;
   */
  COPY = 1,

  /**
   * The source table type is TABLE and
   * the destination table type is SNAPSHOT.
   *
   * @generated from enum value: SNAPSHOT = 2;
   */
  SNAPSHOT = 2,

  /**
   * The source table type is SNAPSHOT and
   * the destination table type is TABLE.
   *
   * @generated from enum value: RESTORE = 3;
   */
  RESTORE = 3,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.OperationType.
 */
export const BigQueryAuditMetadata_OperationTypeSchema: GenEnum<BigQueryAuditMetadata_OperationType> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 2);

/**
 * State of a job.
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.JobState
 */
export enum BigQueryAuditMetadata_JobState {
  /**
   * State unknown.
   *
   * @generated from enum value: JOB_STATE_UNSPECIFIED = 0;
   */
  JOB_STATE_UNSPECIFIED = 0,

  /**
   * Job is waiting for the resources.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * Job is running.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * Job is done.
   *
   * @generated from enum value: DONE = 3;
   */
  DONE = 3,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.JobState.
 */
export const BigQueryAuditMetadata_JobStateSchema: GenEnum<BigQueryAuditMetadata_JobState> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 3);

/**
 * Type of the statement (e.g. SELECT, INSERT, CREATE_TABLE, CREATE_MODEL..)
 *
 * @generated from enum google.cloud.audit.BigQueryAuditMetadata.QueryStatementType
 */
export enum BigQueryAuditMetadata_QueryStatementType {
  /**
   * Unknown.
   *
   * @generated from enum value: QUERY_STATEMENT_TYPE_UNSPECIFIED = 0;
   */
  QUERY_STATEMENT_TYPE_UNSPECIFIED = 0,

  /**
   * SELECT ... FROM &lt;Table list&gt; ...
   *
   * @generated from enum value: SELECT = 1;
   */
  SELECT = 1,

  /**
   * ASSERT &lt;condition&gt; AS 'description'
   *
   * @generated from enum value: ASSERT = 23;
   */
  ASSERT = 23,

  /**
   * INSERT INTO &lt;Table&gt; ....
   *
   * @generated from enum value: INSERT = 2;
   */
  INSERT = 2,

  /**
   * UPDATE &lt;Table&gt; SET ...
   *
   * @generated from enum value: UPDATE = 3;
   */
  UPDATE = 3,

  /**
   * DELETE &lt;Table&gt; ...
   *
   * @generated from enum value: DELETE = 4;
   */
  DELETE = 4,

  /**
   * MERGE INTO &lt;Table&gt; ....
   *
   * @generated from enum value: MERGE = 5;
   */
  MERGE = 5,

  /**
   * CREATE TABLE &lt;Table&gt; &lt;column list&gt;
   *
   * @generated from enum value: CREATE_TABLE = 6;
   */
  CREATE_TABLE = 6,

  /**
   * CREATE TABLE &lt;Table&gt; AS SELECT
   *
   * @generated from enum value: CREATE_TABLE_AS_SELECT = 7;
   */
  CREATE_TABLE_AS_SELECT = 7,

  /**
   * CREATE VIEW &lt;View&gt;
   *
   * @generated from enum value: CREATE_VIEW = 8;
   */
  CREATE_VIEW = 8,

  /**
   * CREATE MODEL &lt;Model&gt; AS &lt;Query&gt;
   *
   * @generated from enum value: CREATE_MODEL = 9;
   */
  CREATE_MODEL = 9,

  /**
   * CREATE MATERIALIZED VIEW &lt;View&gt; AS ...
   *
   * @generated from enum value: CREATE_MATERIALIZED_VIEW = 13;
   */
  CREATE_MATERIALIZED_VIEW = 13,

  /**
   * CREATE FUNCTION &lt;Function&gt;(&lt;Signature&gt;) AS ...
   *
   * @generated from enum value: CREATE_FUNCTION = 14;
   */
  CREATE_FUNCTION = 14,

  /**
   * CREATE TABLE FUNCTION &lt;Function&gt;(&lt;Signature&gt;) AS ...
   *
   * @generated from enum value: CREATE_TABLE_FUNCTION = 56;
   */
  CREATE_TABLE_FUNCTION = 56,

  /**
   * CREATE PROCEDURE &lt;Procedure&gt;
   *
   * @generated from enum value: CREATE_PROCEDURE = 20;
   */
  CREATE_PROCEDURE = 20,

  /**
   * CREATE ROW ACCESS POLICY &lt;RowAccessPolicy&gt ON &lt;Table&gt;
   *
   * @generated from enum value: CREATE_ROW_ACCESS_POLICY = 24;
   */
  CREATE_ROW_ACCESS_POLICY = 24,

  /**
   * CREATE SCHEMA &lt;Schema&gt;
   *
   * @generated from enum value: CREATE_SCHEMA = 53;
   */
  CREATE_SCHEMA = 53,

  /**
   * CREATE SNAPSHOT TABLE &lt;Snapshot&gt CLONE &lt;Table&gt;
   *
   * @generated from enum value: CREATE_SNAPSHOT_TABLE = 59;
   */
  CREATE_SNAPSHOT_TABLE = 59,

  /**
   * DROP TABLE &lt;Table&gt;
   *
   * @generated from enum value: DROP_TABLE = 10;
   */
  DROP_TABLE = 10,

  /**
   * DROP EXTERNAL TABLE &lt;Table&gt;
   *
   * @generated from enum value: DROP_EXTERNAL_TABLE = 33;
   */
  DROP_EXTERNAL_TABLE = 33,

  /**
   * DROP VIEW &lt;View&gt;
   *
   * @generated from enum value: DROP_VIEW = 11;
   */
  DROP_VIEW = 11,

  /**
   * DROP MODEL &lt;Model&gt;
   *
   * @generated from enum value: DROP_MODEL = 12;
   */
  DROP_MODEL = 12,

  /**
   * DROP MATERIALIZED VIEW &lt;View&gt;
   *
   * @generated from enum value: DROP_MATERIALIZED_VIEW = 15;
   */
  DROP_MATERIALIZED_VIEW = 15,

  /**
   * DROP FUNCTION &lt;Function&gt;
   *
   * @generated from enum value: DROP_FUNCTION = 16;
   */
  DROP_FUNCTION = 16,

  /**
   * DROP PROCEDURE &lt;Procedure&gt;
   *
   * @generated from enum value: DROP_PROCEDURE = 21;
   */
  DROP_PROCEDURE = 21,

  /**
   * DROP SCHEMA &lt;Schema&gt;
   *
   * @generated from enum value: DROP_SCHEMA = 54;
   */
  DROP_SCHEMA = 54,

  /**
   * DROP ROW ACCESS POLICY &lt;RowAccessPolicy&gt ON &lt;Table&gt; <or> DROP
   * ALL ROW ACCESS POLICIES ON ON &lt;Table&gt;
   *
   * @generated from enum value: DROP_ROW_ACCESS_POLICY = 25;
   */
  DROP_ROW_ACCESS_POLICY = 25,

  /**
   * DROP SNAPSHOT TABLE &lt;Snapshot&gt;
   *
   * @generated from enum value: DROP_SNAPSHOT_TABLE = 62;
   */
  DROP_SNAPSHOT_TABLE = 62,

  /**
   * ALTER TABLE &lt;Table&gt;
   *
   * @generated from enum value: ALTER_TABLE = 17;
   */
  ALTER_TABLE = 17,

  /**
   * ALTER VIEW &lt;View&gt;
   *
   * @generated from enum value: ALTER_VIEW = 18;
   */
  ALTER_VIEW = 18,

  /**
   * ALTER MATERIALIZED_VIEW &lt;view&gt;
   *
   * @generated from enum value: ALTER_MATERIALIZED_VIEW = 22;
   */
  ALTER_MATERIALIZED_VIEW = 22,

  /**
   * ALTER SCHEMA &lt;Schema&gt;
   *
   * @generated from enum value: ALTER_SCHEMA = 55;
   */
  ALTER_SCHEMA = 55,

  /**
   * Script
   *
   * @generated from enum value: SCRIPT = 19;
   */
  SCRIPT = 19,

  /**
   * TRUNCATE TABLE &lt;Table&gt;
   *
   * @generated from enum value: TRUNCATE_TABLE = 26;
   */
  TRUNCATE_TABLE = 26,

  /**
   * CREATE EXTERNAL TABLE &lt;TABLE&gt;
   *
   * @generated from enum value: CREATE_EXTERNAL_TABLE = 27;
   */
  CREATE_EXTERNAL_TABLE = 27,

  /**
   * EXPORT DATA;
   *
   * @generated from enum value: EXPORT_DATA = 28;
   */
  EXPORT_DATA = 28,

  /**
   * CALL &lt;stored procedure&gt;
   *
   * @generated from enum value: CALL = 29;
   */
  CALL = 29,
}

/**
 * Describes the enum google.cloud.audit.BigQueryAuditMetadata.QueryStatementType.
 */
export const BigQueryAuditMetadata_QueryStatementTypeSchema: GenEnum<BigQueryAuditMetadata_QueryStatementType> = /*@__PURE__*/
  enumDesc(file_google_cloud_audit_bigquery_audit_metadata, 0, 4);

