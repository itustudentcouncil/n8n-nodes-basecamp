// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/binaryauthorization/v1/service.proto (package google.cloud.binaryauthorization.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Attestor, AttestorSchema, Policy, PolicySchema } from "./resources_pb";
import { file_google_cloud_binaryauthorization_v1_resources } from "./resources_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { AttestationOccurrence } from "../../../../grafeas/v1/attestation_pb";
import { file_grafeas_v1_attestation } from "../../../../grafeas/v1/attestation_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/binaryauthorization/v1/service.proto.
 */
export const file_google_cloud_binaryauthorization_v1_service: GenFile = /*@__PURE__*/
  fileDesc("CjFnb29nbGUvY2xvdWQvYmluYXJ5YXV0aG9yaXphdGlvbi92MS9zZXJ2aWNlLnByb3RvEiNnb29nbGUuY2xvdWQuYmluYXJ5YXV0aG9yaXphdGlvbi52MSJTChBHZXRQb2xpY3lSZXF1ZXN0Ej8KBG5hbWUYASABKAlCMeBBAvpBKwopYmluYXJ5YXV0aG9yaXphdGlvbi5nb29nbGVhcGlzLmNvbS9Qb2xpY3kiVwoTVXBkYXRlUG9saWN5UmVxdWVzdBJACgZwb2xpY3kYASABKAsyKy5nb29nbGUuY2xvdWQuYmluYXJ5YXV0aG9yaXphdGlvbi52MS5Qb2xpY3lCA+BBAiK8AQoVQ3JlYXRlQXR0ZXN0b3JSZXF1ZXN0EkMKBnBhcmVudBgBIAEoCUIz4EEC+kEtCitjbG91ZHJlc291cmNlbWFuYWdlci5nb29nbGVhcGlzLmNvbS9Qcm9qZWN0EhgKC2F0dGVzdG9yX2lkGAIgASgJQgPgQQISRAoIYXR0ZXN0b3IYAyABKAsyLS5nb29nbGUuY2xvdWQuYmluYXJ5YXV0aG9yaXphdGlvbi52MS5BdHRlc3RvckID4EECIlcKEkdldEF0dGVzdG9yUmVxdWVzdBJBCgRuYW1lGAEgASgJQjPgQQL6QS0KK2JpbmFyeWF1dGhvcml6YXRpb24uZ29vZ2xlYXBpcy5jb20vQXR0ZXN0b3IiXQoVVXBkYXRlQXR0ZXN0b3JSZXF1ZXN0EkQKCGF0dGVzdG9yGAEgASgLMi0uZ29vZ2xlLmNsb3VkLmJpbmFyeWF1dGhvcml6YXRpb24udjEuQXR0ZXN0b3JCA+BBAiKCAQoUTGlzdEF0dGVzdG9yc1JlcXVlc3QSQwoGcGFyZW50GAEgASgJQjPgQQL6QS0KK2Nsb3VkcmVzb3VyY2VtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL1Byb2plY3QSEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkicgoVTGlzdEF0dGVzdG9yc1Jlc3BvbnNlEkAKCWF0dGVzdG9ycxgBIAMoCzItLmdvb2dsZS5jbG91ZC5iaW5hcnlhdXRob3JpemF0aW9uLnYxLkF0dGVzdG9yEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSJaChVEZWxldGVBdHRlc3RvclJlcXVlc3QSQQoEbmFtZRgBIAEoCUIz4EEC+kEtCitiaW5hcnlhdXRob3JpemF0aW9uLmdvb2dsZWFwaXMuY29tL0F0dGVzdG9yIlkKFkdldFN5c3RlbVBvbGljeVJlcXVlc3QSPwoEbmFtZRgBIAEoCUIx4EEC+kErCiliaW5hcnlhdXRob3JpemF0aW9uLmdvb2dsZWFwaXMuY29tL1BvbGljeSK+AQokVmFsaWRhdGVBdHRlc3RhdGlvbk9jY3VycmVuY2VSZXF1ZXN0EhUKCGF0dGVzdG9yGAEgASgJQgPgQQISOwoLYXR0ZXN0YXRpb24YAiABKAsyIS5ncmFmZWFzLnYxLkF0dGVzdGF0aW9uT2NjdXJyZW5jZUID4EECEhwKD29jY3VycmVuY2Vfbm90ZRgDIAEoCUID4EECEiQKF29jY3VycmVuY2VfcmVzb3VyY2VfdXJpGAQgASgJQgPgQQIi8QEKJVZhbGlkYXRlQXR0ZXN0YXRpb25PY2N1cnJlbmNlUmVzcG9uc2USYQoGcmVzdWx0GAEgASgOMlEuZ29vZ2xlLmNsb3VkLmJpbmFyeWF1dGhvcml6YXRpb24udjEuVmFsaWRhdGVBdHRlc3RhdGlvbk9jY3VycmVuY2VSZXNwb25zZS5SZXN1bHQSFQoNZGVuaWFsX3JlYXNvbhgCIAEoCSJOCgZSZXN1bHQSFgoSUkVTVUxUX1VOU1BFQ0lGSUVEEAASDAoIVkVSSUZJRUQQARIeChpBVFRFU1RBVElPTl9OT1RfVkVSSUZJQUJMRRACMuIKChtCaW5hdXRoek1hbmFnZW1lbnRTZXJ2aWNlVjESnAEKCUdldFBvbGljeRI1Lmdvb2dsZS5jbG91ZC5iaW5hcnlhdXRob3JpemF0aW9uLnYxLkdldFBvbGljeVJlcXVlc3QaKy5nb29nbGUuY2xvdWQuYmluYXJ5YXV0aG9yaXphdGlvbi52MS5Qb2xpY3kiK9pBBG5hbWWC0+STAh4SHC92MS97bmFtZT1wcm9qZWN0cy8qL3BvbGljeX0SswEKDFVwZGF0ZVBvbGljeRI4Lmdvb2dsZS5jbG91ZC5iaW5hcnlhdXRob3JpemF0aW9uLnYxLlVwZGF0ZVBvbGljeVJlcXVlc3QaKy5nb29nbGUuY2xvdWQuYmluYXJ5YXV0aG9yaXphdGlvbi52MS5Qb2xpY3kiPNpBBnBvbGljeYLT5JMCLToGcG9saWN5GiMvdjEve3BvbGljeS5uYW1lPXByb2plY3RzLyovcG9saWN5fRLOAQoOQ3JlYXRlQXR0ZXN0b3ISOi5nb29nbGUuY2xvdWQuYmluYXJ5YXV0aG9yaXphdGlvbi52MS5DcmVhdGVBdHRlc3RvclJlcXVlc3QaLS5nb29nbGUuY2xvdWQuYmluYXJ5YXV0aG9yaXphdGlvbi52MS5BdHRlc3RvciJR2kEbcGFyZW50LGF0dGVzdG9yX2lkLGF0dGVzdG9ygtPkkwItOghhdHRlc3RvciIhL3YxL3twYXJlbnQ9cHJvamVjdHMvKn0vYXR0ZXN0b3JzEqcBCgtHZXRBdHRlc3RvchI3Lmdvb2dsZS5jbG91ZC5iaW5hcnlhdXRob3JpemF0aW9uLnYxLkdldEF0dGVzdG9yUmVxdWVzdBotLmdvb2dsZS5jbG91ZC5iaW5hcnlhdXRob3JpemF0aW9uLnYxLkF0dGVzdG9yIjDaQQRuYW1lgtPkkwIjEiEvdjEve25hbWU9cHJvamVjdHMvKi9hdHRlc3RvcnMvKn0SxAEKDlVwZGF0ZUF0dGVzdG9yEjouZ29vZ2xlLmNsb3VkLmJpbmFyeWF1dGhvcml6YXRpb24udjEuVXBkYXRlQXR0ZXN0b3JSZXF1ZXN0Gi0uZ29vZ2xlLmNsb3VkLmJpbmFyeWF1dGhvcml6YXRpb24udjEuQXR0ZXN0b3IiR9pBCGF0dGVzdG9ygtPkkwI2OghhdHRlc3RvchoqL3YxL3thdHRlc3Rvci5uYW1lPXByb2plY3RzLyovYXR0ZXN0b3JzLyp9EroBCg1MaXN0QXR0ZXN0b3JzEjkuZ29vZ2xlLmNsb3VkLmJpbmFyeWF1dGhvcml6YXRpb24udjEuTGlzdEF0dGVzdG9yc1JlcXVlc3QaOi5nb29nbGUuY2xvdWQuYmluYXJ5YXV0aG9yaXphdGlvbi52MS5MaXN0QXR0ZXN0b3JzUmVzcG9uc2UiMtpBBnBhcmVudILT5JMCIxIhL3YxL3twYXJlbnQ9cHJvamVjdHMvKn0vYXR0ZXN0b3JzEpYBCg5EZWxldGVBdHRlc3RvchI6Lmdvb2dsZS5jbG91ZC5iaW5hcnlhdXRob3JpemF0aW9uLnYxLkRlbGV0ZUF0dGVzdG9yUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIw2kEEbmFtZYLT5JMCIyohL3YxL3tuYW1lPXByb2plY3RzLyovYXR0ZXN0b3JzLyp9GlbKQSJiaW5hcnlhdXRob3JpemF0aW9uLmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybTKUAgoOU3lzdGVtUG9saWN5VjESqQEKD0dldFN5c3RlbVBvbGljeRI7Lmdvb2dsZS5jbG91ZC5iaW5hcnlhdXRob3JpemF0aW9uLnYxLkdldFN5c3RlbVBvbGljeVJlcXVlc3QaKy5nb29nbGUuY2xvdWQuYmluYXJ5YXV0aG9yaXphdGlvbi52MS5Qb2xpY3kiLNpBBG5hbWWC0+STAh8SHS92MS97bmFtZT1sb2NhdGlvbnMvKi9wb2xpY3l9GlbKQSJiaW5hcnlhdXRob3JpemF0aW9uLmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybTL1AgoSVmFsaWRhdGlvbkhlbHBlclYxEoYCCh1WYWxpZGF0ZUF0dGVzdGF0aW9uT2NjdXJyZW5jZRJJLmdvb2dsZS5jbG91ZC5iaW5hcnlhdXRob3JpemF0aW9uLnYxLlZhbGlkYXRlQXR0ZXN0YXRpb25PY2N1cnJlbmNlUmVxdWVzdBpKLmdvb2dsZS5jbG91ZC5iaW5hcnlhdXRob3JpemF0aW9uLnYxLlZhbGlkYXRlQXR0ZXN0YXRpb25PY2N1cnJlbmNlUmVzcG9uc2UiToLT5JMCSDoBKiJDL3YxL3thdHRlc3Rvcj1wcm9qZWN0cy8qL2F0dGVzdG9ycy8qfTp2YWxpZGF0ZUF0dGVzdGF0aW9uT2NjdXJyZW5jZRpWykEiYmluYXJ5YXV0aG9yaXphdGlvbi5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1CjAIKNWNvbS5nb29nbGUucHJvdG9zLmdvb2dsZS5jbG91ZC5iaW5hcnlhdXRob3JpemF0aW9uLnYxUABaWWNsb3VkLmdvb2dsZS5jb20vZ28vYmluYXJ5YXV0aG9yaXphdGlvbi9hcGl2MS9iaW5hcnlhdXRob3JpemF0aW9ucGI7YmluYXJ5YXV0aG9yaXphdGlvbnBi+AEBqgIjR29vZ2xlLkNsb3VkLkJpbmFyeUF1dGhvcml6YXRpb24uVjHKAiNHb29nbGVcQ2xvdWRcQmluYXJ5QXV0aG9yaXphdGlvblxWMeoCJkdvb2dsZTo6Q2xvdWQ6OkJpbmFyeUF1dGhvcml6YXRpb246OlYxYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_binaryauthorization_v1_resources, file_google_protobuf_empty, file_grafeas_v1_attestation]);

/**
 * Request message for [BinauthzManagementService.GetPolicy][].
 *
 * @generated from message google.cloud.binaryauthorization.v1.GetPolicyRequest
 */
export type GetPolicyRequest = Message<"google.cloud.binaryauthorization.v1.GetPolicyRequest"> & {
  /**
   * Required. The resource name of the [policy][google.cloud.binaryauthorization.v1.Policy] to retrieve,
   * in the format `projects/*\/policy`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.binaryauthorization.v1.GetPolicyRequest.
 * Use `create(GetPolicyRequestSchema)` to create a new message.
 */
export const GetPolicyRequestSchema: GenMessage<GetPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_binaryauthorization_v1_service, 0);

/**
 * Request message for [BinauthzManagementService.UpdatePolicy][].
 *
 * @generated from message google.cloud.binaryauthorization.v1.UpdatePolicyRequest
 */
export type UpdatePolicyRequest = Message<"google.cloud.binaryauthorization.v1.UpdatePolicyRequest"> & {
  /**
   * Required. A new or updated [policy][google.cloud.binaryauthorization.v1.Policy] value. The service will
   * overwrite the [policy name][google.cloud.binaryauthorization.v1.Policy.name] field with the resource name in
   * the request URL, in the format `projects/*\/policy`.
   *
   * @generated from field: google.cloud.binaryauthorization.v1.Policy policy = 1;
   */
  policy?: Policy;
};

/**
 * Describes the message google.cloud.binaryauthorization.v1.UpdatePolicyRequest.
 * Use `create(UpdatePolicyRequestSchema)` to create a new message.
 */
export const UpdatePolicyRequestSchema: GenMessage<UpdatePolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_binaryauthorization_v1_service, 1);

/**
 * Request message for [BinauthzManagementService.CreateAttestor][].
 *
 * @generated from message google.cloud.binaryauthorization.v1.CreateAttestorRequest
 */
export type CreateAttestorRequest = Message<"google.cloud.binaryauthorization.v1.CreateAttestorRequest"> & {
  /**
   * Required. The parent of this [attestor][google.cloud.binaryauthorization.v1.Attestor].
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The [attestors][google.cloud.binaryauthorization.v1.Attestor] ID.
   *
   * @generated from field: string attestor_id = 2;
   */
  attestorId: string;

  /**
   * Required. The initial [attestor][google.cloud.binaryauthorization.v1.Attestor] value. The service will
   * overwrite the [attestor name][google.cloud.binaryauthorization.v1.Attestor.name] field with the resource name,
   * in the format `projects/*\/attestors/*`.
   *
   * @generated from field: google.cloud.binaryauthorization.v1.Attestor attestor = 3;
   */
  attestor?: Attestor;
};

/**
 * Describes the message google.cloud.binaryauthorization.v1.CreateAttestorRequest.
 * Use `create(CreateAttestorRequestSchema)` to create a new message.
 */
export const CreateAttestorRequestSchema: GenMessage<CreateAttestorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_binaryauthorization_v1_service, 2);

/**
 * Request message for [BinauthzManagementService.GetAttestor][].
 *
 * @generated from message google.cloud.binaryauthorization.v1.GetAttestorRequest
 */
export type GetAttestorRequest = Message<"google.cloud.binaryauthorization.v1.GetAttestorRequest"> & {
  /**
   * Required. The name of the [attestor][google.cloud.binaryauthorization.v1.Attestor] to retrieve, in the format
   * `projects/*\/attestors/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.binaryauthorization.v1.GetAttestorRequest.
 * Use `create(GetAttestorRequestSchema)` to create a new message.
 */
export const GetAttestorRequestSchema: GenMessage<GetAttestorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_binaryauthorization_v1_service, 3);

/**
 * Request message for [BinauthzManagementService.UpdateAttestor][].
 *
 * @generated from message google.cloud.binaryauthorization.v1.UpdateAttestorRequest
 */
export type UpdateAttestorRequest = Message<"google.cloud.binaryauthorization.v1.UpdateAttestorRequest"> & {
  /**
   * Required. The updated [attestor][google.cloud.binaryauthorization.v1.Attestor] value. The service will
   * overwrite the [attestor name][google.cloud.binaryauthorization.v1.Attestor.name] field with the resource name
   * in the request URL, in the format `projects/*\/attestors/*`.
   *
   * @generated from field: google.cloud.binaryauthorization.v1.Attestor attestor = 1;
   */
  attestor?: Attestor;
};

/**
 * Describes the message google.cloud.binaryauthorization.v1.UpdateAttestorRequest.
 * Use `create(UpdateAttestorRequestSchema)` to create a new message.
 */
export const UpdateAttestorRequestSchema: GenMessage<UpdateAttestorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_binaryauthorization_v1_service, 4);

/**
 * Request message for [BinauthzManagementService.ListAttestors][].
 *
 * @generated from message google.cloud.binaryauthorization.v1.ListAttestorsRequest
 */
export type ListAttestorsRequest = Message<"google.cloud.binaryauthorization.v1.ListAttestorsRequest"> & {
  /**
   * Required. The resource name of the project associated with the
   * [attestors][google.cloud.binaryauthorization.v1.Attestor], in the format `projects/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. The server may return fewer results than requested. If
   * unspecified, the server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return. Typically,
   * this is the value of [ListAttestorsResponse.next_page_token][google.cloud.binaryauthorization.v1.ListAttestorsResponse.next_page_token] returned
   * from the previous call to the `ListAttestors` method.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.binaryauthorization.v1.ListAttestorsRequest.
 * Use `create(ListAttestorsRequestSchema)` to create a new message.
 */
export const ListAttestorsRequestSchema: GenMessage<ListAttestorsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_binaryauthorization_v1_service, 5);

/**
 * Response message for [BinauthzManagementService.ListAttestors][].
 *
 * @generated from message google.cloud.binaryauthorization.v1.ListAttestorsResponse
 */
export type ListAttestorsResponse = Message<"google.cloud.binaryauthorization.v1.ListAttestorsResponse"> & {
  /**
   * The list of [attestors][google.cloud.binaryauthorization.v1.Attestor].
   *
   * @generated from field: repeated google.cloud.binaryauthorization.v1.Attestor attestors = 1;
   */
  attestors: Attestor[];

  /**
   * A token to retrieve the next page of results. Pass this value in the
   * [ListAttestorsRequest.page_token][google.cloud.binaryauthorization.v1.ListAttestorsRequest.page_token] field in the subsequent call to the
   * `ListAttestors` method to retrieve the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.binaryauthorization.v1.ListAttestorsResponse.
 * Use `create(ListAttestorsResponseSchema)` to create a new message.
 */
export const ListAttestorsResponseSchema: GenMessage<ListAttestorsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_binaryauthorization_v1_service, 6);

/**
 * Request message for [BinauthzManagementService.DeleteAttestor][].
 *
 * @generated from message google.cloud.binaryauthorization.v1.DeleteAttestorRequest
 */
export type DeleteAttestorRequest = Message<"google.cloud.binaryauthorization.v1.DeleteAttestorRequest"> & {
  /**
   * Required. The name of the [attestors][google.cloud.binaryauthorization.v1.Attestor] to delete, in the format
   * `projects/*\/attestors/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.binaryauthorization.v1.DeleteAttestorRequest.
 * Use `create(DeleteAttestorRequestSchema)` to create a new message.
 */
export const DeleteAttestorRequestSchema: GenMessage<DeleteAttestorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_binaryauthorization_v1_service, 7);

/**
 * Request to read the current system policy.
 *
 * @generated from message google.cloud.binaryauthorization.v1.GetSystemPolicyRequest
 */
export type GetSystemPolicyRequest = Message<"google.cloud.binaryauthorization.v1.GetSystemPolicyRequest"> & {
  /**
   * Required. The resource name, in the format `locations/*\/policy`.
   * Note that the system policy is not associated with a project.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.binaryauthorization.v1.GetSystemPolicyRequest.
 * Use `create(GetSystemPolicyRequestSchema)` to create a new message.
 */
export const GetSystemPolicyRequestSchema: GenMessage<GetSystemPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_binaryauthorization_v1_service, 8);

/**
 * Request message for
 * [ValidationHelperV1.ValidateAttestationOccurrence][google.cloud.binaryauthorization.v1.ValidationHelperV1.ValidateAttestationOccurrence].
 *
 * @generated from message google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest
 */
export type ValidateAttestationOccurrenceRequest = Message<"google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest"> & {
  /**
   * Required. The resource name of the [Attestor][google.cloud.binaryauthorization.v1.Attestor] of the
   * [occurrence][grafeas.v1.Occurrence], in the format
   * `projects/*\/attestors/*`.
   *
   * @generated from field: string attestor = 1;
   */
  attestor: string;

  /**
   * Required. An [AttestationOccurrence][grafeas.v1.AttestationOccurrence] to
   * be checked that it can be verified by the Attestor. It does not have to be
   * an existing entity in Container Analysis. It must otherwise be a valid
   * AttestationOccurrence.
   *
   * @generated from field: grafeas.v1.AttestationOccurrence attestation = 2;
   */
  attestation?: AttestationOccurrence;

  /**
   * Required. The resource name of the [Note][grafeas.v1.Note] to which the
   * containing [Occurrence][grafeas.v1.Occurrence] is associated.
   *
   * @generated from field: string occurrence_note = 3;
   */
  occurrenceNote: string;

  /**
   * Required. The URI of the artifact (e.g. container image) that is the
   * subject of the containing [Occurrence][grafeas.v1.Occurrence].
   *
   * @generated from field: string occurrence_resource_uri = 4;
   */
  occurrenceResourceUri: string;
};

/**
 * Describes the message google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest.
 * Use `create(ValidateAttestationOccurrenceRequestSchema)` to create a new message.
 */
export const ValidateAttestationOccurrenceRequestSchema: GenMessage<ValidateAttestationOccurrenceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_binaryauthorization_v1_service, 9);

/**
 * Response message for
 * [ValidationHelperV1.ValidateAttestationOccurrence][google.cloud.binaryauthorization.v1.ValidationHelperV1.ValidateAttestationOccurrence].
 *
 * @generated from message google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse
 */
export type ValidateAttestationOccurrenceResponse = Message<"google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse"> & {
  /**
   * The result of the Attestation validation.
   *
   * @generated from field: google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse.Result result = 1;
   */
  result: ValidateAttestationOccurrenceResponse_Result;

  /**
   * The reason for denial if the Attestation couldn't be validated.
   *
   * @generated from field: string denial_reason = 2;
   */
  denialReason: string;
};

/**
 * Describes the message google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse.
 * Use `create(ValidateAttestationOccurrenceResponseSchema)` to create a new message.
 */
export const ValidateAttestationOccurrenceResponseSchema: GenMessage<ValidateAttestationOccurrenceResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_binaryauthorization_v1_service, 10);

/**
 * The enum returned in the "result" field.
 *
 * @generated from enum google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse.Result
 */
export enum ValidateAttestationOccurrenceResponse_Result {
  /**
   * Unspecified.
   *
   * @generated from enum value: RESULT_UNSPECIFIED = 0;
   */
  RESULT_UNSPECIFIED = 0,

  /**
   * The Attestation was able to verified by the Attestor.
   *
   * @generated from enum value: VERIFIED = 1;
   */
  VERIFIED = 1,

  /**
   * The Attestation was not able to verified by the Attestor.
   *
   * @generated from enum value: ATTESTATION_NOT_VERIFIABLE = 2;
   */
  ATTESTATION_NOT_VERIFIABLE = 2,
}

/**
 * Describes the enum google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse.Result.
 */
export const ValidateAttestationOccurrenceResponse_ResultSchema: GenEnum<ValidateAttestationOccurrenceResponse_Result> = /*@__PURE__*/
  enumDesc(file_google_cloud_binaryauthorization_v1_service, 10, 0);

/**
 * Google Cloud Management Service for Binary Authorization admission policies
 * and attestation authorities.
 *
 * This API implements a REST model with the following objects:
 *
 * * [Policy][google.cloud.binaryauthorization.v1.Policy]
 * * [Attestor][google.cloud.binaryauthorization.v1.Attestor]
 *
 * @generated from service google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
 */
export const BinauthzManagementServiceV1: GenService<{
  /**
   * A [policy][google.cloud.binaryauthorization.v1.Policy] specifies the [attestors][google.cloud.binaryauthorization.v1.Attestor] that must attest to
   * a container image, before the project is allowed to deploy that
   * image. There is at most one policy per project. All image admission
   * requests are permitted if a project has no policy.
   *
   * Gets the [policy][google.cloud.binaryauthorization.v1.Policy] for this project. Returns a default
   * [policy][google.cloud.binaryauthorization.v1.Policy] if the project does not have one.
   *
   * @generated from rpc google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.GetPolicy
   */
  getPolicy: {
    methodKind: "unary";
    input: typeof GetPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Creates or updates a project's [policy][google.cloud.binaryauthorization.v1.Policy], and returns a copy of the
   * new [policy][google.cloud.binaryauthorization.v1.Policy]. A policy is always updated as a whole, to avoid race
   * conditions with concurrent policy enforcement (or management!)
   * requests. Returns NOT_FOUND if the project does not exist, INVALID_ARGUMENT
   * if the request is malformed.
   *
   * @generated from rpc google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.UpdatePolicy
   */
  updatePolicy: {
    methodKind: "unary";
    input: typeof UpdatePolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Creates an [attestor][google.cloud.binaryauthorization.v1.Attestor], and returns a copy of the new
   * [attestor][google.cloud.binaryauthorization.v1.Attestor]. Returns NOT_FOUND if the project does not exist,
   * INVALID_ARGUMENT if the request is malformed, ALREADY_EXISTS if the
   * [attestor][google.cloud.binaryauthorization.v1.Attestor] already exists.
   *
   * @generated from rpc google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.CreateAttestor
   */
  createAttestor: {
    methodKind: "unary";
    input: typeof CreateAttestorRequestSchema;
    output: typeof AttestorSchema;
  },
  /**
   * Gets an [attestor][google.cloud.binaryauthorization.v1.Attestor].
   * Returns NOT_FOUND if the [attestor][google.cloud.binaryauthorization.v1.Attestor] does not exist.
   *
   * @generated from rpc google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.GetAttestor
   */
  getAttestor: {
    methodKind: "unary";
    input: typeof GetAttestorRequestSchema;
    output: typeof AttestorSchema;
  },
  /**
   * Updates an [attestor][google.cloud.binaryauthorization.v1.Attestor].
   * Returns NOT_FOUND if the [attestor][google.cloud.binaryauthorization.v1.Attestor] does not exist.
   *
   * @generated from rpc google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.UpdateAttestor
   */
  updateAttestor: {
    methodKind: "unary";
    input: typeof UpdateAttestorRequestSchema;
    output: typeof AttestorSchema;
  },
  /**
   * Lists [attestors][google.cloud.binaryauthorization.v1.Attestor].
   * Returns INVALID_ARGUMENT if the project does not exist.
   *
   * @generated from rpc google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.ListAttestors
   */
  listAttestors: {
    methodKind: "unary";
    input: typeof ListAttestorsRequestSchema;
    output: typeof ListAttestorsResponseSchema;
  },
  /**
   * Deletes an [attestor][google.cloud.binaryauthorization.v1.Attestor]. Returns NOT_FOUND if the
   * [attestor][google.cloud.binaryauthorization.v1.Attestor] does not exist.
   *
   * @generated from rpc google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.DeleteAttestor
   */
  deleteAttestor: {
    methodKind: "unary";
    input: typeof DeleteAttestorRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_binaryauthorization_v1_service, 0);

/**
 * API for working with the system policy.
 *
 * @generated from service google.cloud.binaryauthorization.v1.SystemPolicyV1
 */
export const SystemPolicyV1: GenService<{
  /**
   * Gets the current system policy in the specified location.
   *
   * @generated from rpc google.cloud.binaryauthorization.v1.SystemPolicyV1.GetSystemPolicy
   */
  getSystemPolicy: {
    methodKind: "unary";
    input: typeof GetSystemPolicyRequestSchema;
    output: typeof PolicySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_binaryauthorization_v1_service, 1);

/**
 * BinAuthz Attestor verification
 *
 * @generated from service google.cloud.binaryauthorization.v1.ValidationHelperV1
 */
export const ValidationHelperV1: GenService<{
  /**
   * Returns whether the given Attestation for the given image URI
   * was signed by the given Attestor
   *
   * @generated from rpc google.cloud.binaryauthorization.v1.ValidationHelperV1.ValidateAttestationOccurrence
   */
  validateAttestationOccurrence: {
    methodKind: "unary";
    input: typeof ValidateAttestationOccurrenceRequestSchema;
    output: typeof ValidateAttestationOccurrenceResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_binaryauthorization_v1_service, 2);

