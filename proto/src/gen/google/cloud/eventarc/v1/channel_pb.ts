// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/eventarc/v1/channel.proto (package google.cloud.eventarc.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/eventarc/v1/channel.proto.
 */
export const file_google_cloud_eventarc_v1_channel: GenFile = /*@__PURE__*/
  fileDesc("CiZnb29nbGUvY2xvdWQvZXZlbnRhcmMvdjEvY2hhbm5lbC5wcm90bxIYZ29vZ2xlLmNsb3VkLmV2ZW50YXJjLnYxIrIECgdDaGFubmVsEhEKBG5hbWUYASABKAlCA+BBAhIQCgN1aWQYAiABKAlCA+BBAxI0CgtjcmVhdGVfdGltZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI0Cgt1cGRhdGVfdGltZRgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxIQCghwcm92aWRlchgHIAEoCRIbCgxwdWJzdWJfdG9waWMYCCABKAlCA+BBA0gAEjsKBXN0YXRlGAkgASgOMicuZ29vZ2xlLmNsb3VkLmV2ZW50YXJjLnYxLkNoYW5uZWwuU3RhdGVCA+BBAxIdChBhY3RpdmF0aW9uX3Rva2VuGAogASgJQgPgQQMSQgoPY3J5cHRvX2tleV9uYW1lGAsgASgJQingQQH6QSMKIWNsb3Vka21zLmdvb2dsZWFwaXMuY29tL0NyeXB0b0tleSJFCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgsKB1BFTkRJTkcQARIKCgZBQ1RJVkUQAhIMCghJTkFDVElWRRADOnPqQXAKH2V2ZW50YXJjLmdvb2dsZWFwaXMuY29tL0NoYW5uZWwSOnByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9jaGFubmVscy97Y2hhbm5lbH0qCGNoYW5uZWxzMgdjaGFubmVsQgsKCXRyYW5zcG9ydEK8AQocY29tLmdvb2dsZS5jbG91ZC5ldmVudGFyYy52MUIMQ2hhbm5lbFByb3RvUAFaOGNsb3VkLmdvb2dsZS5jb20vZ28vZXZlbnRhcmMvYXBpdjEvZXZlbnRhcmNwYjtldmVudGFyY3BiqgIYR29vZ2xlLkNsb3VkLkV2ZW50YXJjLlYxygIYR29vZ2xlXENsb3VkXEV2ZW50YXJjXFYx6gIbR29vZ2xlOjpDbG91ZDo6RXZlbnRhcmM6OlYxYgZwcm90bzM", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_timestamp]);

/**
 * A representation of the Channel resource.
 * A Channel is a resource on which event providers publish their events.
 * The published events are delivered through the transport associated with the
 * channel. Note that a channel is associated with exactly one event provider.
 *
 * @generated from message google.cloud.eventarc.v1.Channel
 */
export type Channel = Message<"google.cloud.eventarc.v1.Channel"> & {
  /**
   * Required. The resource name of the channel. Must be unique within the
   * location on the project and must be in
   * `projects/{project}/locations/{location}/channels/{channel_id}` format.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Server assigned unique identifier for the channel. The value
   * is a UUID4 string and guaranteed to remain unchanged until the resource is
   * deleted.
   *
   * @generated from field: string uid = 2;
   */
  uid: string;

  /**
   * Output only. The creation time.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * Output only. The last-modified time.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 6;
   */
  updateTime?: Timestamp;

  /**
   * The name of the event provider (e.g. Eventarc SaaS partner) associated
   * with the channel. This provider will be granted permissions to publish
   * events to the channel. Format:
   * `projects/{project}/locations/{location}/providers/{provider_id}`.
   *
   * @generated from field: string provider = 7;
   */
  provider: string;

  /**
   * @generated from oneof google.cloud.eventarc.v1.Channel.transport
   */
  transport: {
    /**
     * Output only. The name of the Pub/Sub topic created and managed by
     * Eventarc system as a transport for the event delivery. Format:
     * `projects/{project}/topics/{topic_id}`.
     *
     * @generated from field: string pubsub_topic = 8;
     */
    value: string;
    case: "pubsubTopic";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The state of a Channel.
   *
   * @generated from field: google.cloud.eventarc.v1.Channel.State state = 9;
   */
  state: Channel_State;

  /**
   * Output only. The activation token for the channel. The token must be used
   * by the provider to register the channel for publishing.
   *
   * @generated from field: string activation_token = 10;
   */
  activationToken: string;

  /**
   * Optional. Resource name of a KMS crypto key (managed by the user) used to
   * encrypt/decrypt their event data.
   *
   * It must match the pattern
   * `projects/*\/locations/*\/keyRings/*\/cryptoKeys/*`.
   *
   * @generated from field: string crypto_key_name = 11;
   */
  cryptoKeyName: string;
};

/**
 * Describes the message google.cloud.eventarc.v1.Channel.
 * Use `create(ChannelSchema)` to create a new message.
 */
export const ChannelSchema: GenMessage<Channel> = /*@__PURE__*/
  messageDesc(file_google_cloud_eventarc_v1_channel, 0);

/**
 * State lists all the possible states of a Channel
 *
 * @generated from enum google.cloud.eventarc.v1.Channel.State
 */
export enum Channel_State {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The PENDING state indicates that a Channel has been created successfully
   * and there is a new activation token available for the subscriber to use
   * to convey the Channel to the provider in order to create a Connection.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The ACTIVE state indicates that a Channel has been successfully
   * connected with the event provider.
   * An ACTIVE Channel is ready to receive and route events from the
   * event provider.
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * The INACTIVE state indicates that the Channel cannot receive events
   * permanently. There are two possible cases this state can happen:
   *
   * 1. The SaaS provider disconnected from this Channel.
   * 2. The Channel activation token has expired but the SaaS provider
   *    wasn't connected.
   *
   * To re-establish a Connection with a provider, the subscriber
   * should create a new Channel and give it to the provider.
   *
   * @generated from enum value: INACTIVE = 3;
   */
  INACTIVE = 3,
}

/**
 * Describes the enum google.cloud.eventarc.v1.Channel.State.
 */
export const Channel_StateSchema: GenEnum<Channel_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_eventarc_v1_channel, 0, 0);

