// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/eventarc/v1/discovery.proto (package google.cloud.eventarc.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/eventarc/v1/discovery.proto.
 */
export const file_google_cloud_eventarc_v1_discovery: GenFile = /*@__PURE__*/
  fileDesc("Cihnb29nbGUvY2xvdWQvZXZlbnRhcmMvdjEvZGlzY292ZXJ5LnByb3RvEhhnb29nbGUuY2xvdWQuZXZlbnRhcmMudjEi8QEKCFByb3ZpZGVyEhEKBG5hbWUYASABKAlCA+BBAxIZCgxkaXNwbGF5X25hbWUYAiABKAlCA+BBAxI9CgtldmVudF90eXBlcxgDIAMoCzIjLmdvb2dsZS5jbG91ZC5ldmVudGFyYy52MS5FdmVudFR5cGVCA+BBAzp46kF1CiBldmVudGFyYy5nb29nbGVhcGlzLmNvbS9Qcm92aWRlchI8cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L3Byb3ZpZGVycy97cHJvdmlkZXJ9Kglwcm92aWRlcnMyCHByb3ZpZGVyIqgBCglFdmVudFR5cGUSEQoEdHlwZRgBIAEoCUID4EEDEhgKC2Rlc2NyaXB0aW9uGAIgASgJQgPgQQMSTwoUZmlsdGVyaW5nX2F0dHJpYnV0ZXMYAyADKAsyLC5nb29nbGUuY2xvdWQuZXZlbnRhcmMudjEuRmlsdGVyaW5nQXR0cmlidXRlQgPgQQMSHQoQZXZlbnRfc2NoZW1hX3VyaRgEIAEoCUID4EEDIoIBChJGaWx0ZXJpbmdBdHRyaWJ1dGUSFgoJYXR0cmlidXRlGAEgASgJQgPgQQMSGAoLZGVzY3JpcHRpb24YAiABKAlCA+BBAxIVCghyZXF1aXJlZBgDIAEoCEID4EEDEiMKFnBhdGhfcGF0dGVybl9zdXBwb3J0ZWQYBCABKAhCA+BBA0JqChxjb20uZ29vZ2xlLmNsb3VkLmV2ZW50YXJjLnYxQg5EaXNjb3ZlcnlQcm90b1ABWjhjbG91ZC5nb29nbGUuY29tL2dvL2V2ZW50YXJjL2FwaXYxL2V2ZW50YXJjcGI7ZXZlbnRhcmNwYmIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource]);

/**
 * A representation of the Provider resource.
 *
 * @generated from message google.cloud.eventarc.v1.Provider
 */
export type Provider = Message<"google.cloud.eventarc.v1.Provider"> & {
  /**
   * Output only. In `projects/{project}/locations/{location}/providers/{provider_id}`
   * format.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Human friendly name for the Provider. For example "Cloud Storage".
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Output only. Event types for this provider.
   *
   * @generated from field: repeated google.cloud.eventarc.v1.EventType event_types = 3;
   */
  eventTypes: EventType[];
};

/**
 * Describes the message google.cloud.eventarc.v1.Provider.
 * Use `create(ProviderSchema)` to create a new message.
 */
export const ProviderSchema: GenMessage<Provider> = /*@__PURE__*/
  messageDesc(file_google_cloud_eventarc_v1_discovery, 0);

/**
 * A representation of the event type resource.
 *
 * @generated from message google.cloud.eventarc.v1.EventType
 */
export type EventType = Message<"google.cloud.eventarc.v1.EventType"> & {
  /**
   * Output only. The full name of the event type (for example,
   * "google.cloud.storage.object.v1.finalized"). In the form of
   * {provider-specific-prefix}.{resource}.{version}.{verb}. Types MUST be
   * versioned and event schemas are guaranteed to remain backward compatible
   * within one version. Note that event type versions and API versions do not
   * need to match.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Output only. Human friendly description of what the event type is about.
   * For example "Bucket created in Cloud Storage".
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Output only. Filtering attributes for the event type.
   *
   * @generated from field: repeated google.cloud.eventarc.v1.FilteringAttribute filtering_attributes = 3;
   */
  filteringAttributes: FilteringAttribute[];

  /**
   * Output only. URI for the event schema.
   * For example
   * "https://github.com/googleapis/google-cloudevents/blob/master/proto/google/events/cloud/storage/v1/events.proto"
   *
   * @generated from field: string event_schema_uri = 4;
   */
  eventSchemaUri: string;
};

/**
 * Describes the message google.cloud.eventarc.v1.EventType.
 * Use `create(EventTypeSchema)` to create a new message.
 */
export const EventTypeSchema: GenMessage<EventType> = /*@__PURE__*/
  messageDesc(file_google_cloud_eventarc_v1_discovery, 1);

/**
 * A representation of the FilteringAttribute resource.
 * Filtering attributes are per event type.
 *
 * @generated from message google.cloud.eventarc.v1.FilteringAttribute
 */
export type FilteringAttribute = Message<"google.cloud.eventarc.v1.FilteringAttribute"> & {
  /**
   * Output only. Attribute used for filtering the event type.
   *
   * @generated from field: string attribute = 1;
   */
  attribute: string;

  /**
   * Output only. Description of the purpose of the attribute.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Output only. If true, the triggers for this provider should always specify a filter
   * on these attributes. Trigger creation will fail otherwise.
   *
   * @generated from field: bool required = 3;
   */
  required: boolean;

  /**
   * Output only. If true, the attribute accepts matching expressions in the Eventarc
   * PathPattern format.
   *
   * @generated from field: bool path_pattern_supported = 4;
   */
  pathPatternSupported: boolean;
};

/**
 * Describes the message google.cloud.eventarc.v1.FilteringAttribute.
 * Use `create(FilteringAttributeSchema)` to create a new message.
 */
export const FilteringAttributeSchema: GenMessage<FilteringAttribute> = /*@__PURE__*/
  messageDesc(file_google_cloud_eventarc_v1_discovery, 2);

