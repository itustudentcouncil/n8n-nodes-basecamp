// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/video/stitcher/v1/events.proto (package google.cloud.video.stitcher.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/video/stitcher/v1/events.proto.
 */
export const file_google_cloud_video_stitcher_v1_events: GenFile = /*@__PURE__*/
  fileDesc("Citnb29nbGUvY2xvdWQvdmlkZW8vc3RpdGNoZXIvdjEvZXZlbnRzLnByb3RvEh5nb29nbGUuY2xvdWQudmlkZW8uc3RpdGNoZXIudjEijgQKBUV2ZW50Ej0KBHR5cGUYASABKA4yLy5nb29nbGUuY2xvdWQudmlkZW8uc3RpdGNoZXIudjEuRXZlbnQuRXZlbnRUeXBlEgsKA3VyaRgCIAEoCRIKCgJpZBgDIAEoCRIpCgZvZmZzZXQYBCABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24igQMKCUV2ZW50VHlwZRIaChZFVkVOVF9UWVBFX1VOU1BFQ0lGSUVEEAASEQoNQ1JFQVRJVkVfVklFVxABEgkKBVNUQVJUEAISDwoLQlJFQUtfU1RBUlQQAxINCglCUkVBS19FTkQQBBIOCgpJTVBSRVNTSU9OEAUSEgoORklSU1RfUVVBUlRJTEUQBhIMCghNSURQT0lOVBAHEhIKDlRISVJEX1FVQVJUSUxFEAgSDAoIQ09NUExFVEUQCRIMCghQUk9HUkVTUxAKEggKBE1VVEUQCxIKCgZVTk1VVEUQDBIJCgVQQVVTRRANEgkKBUNMSUNLEA4SEQoNQ0xJQ0tfVEhST1VHSBAPEgoKBlJFV0lORBAQEgoKBlJFU1VNRRAREgkKBUVSUk9SEBISCgoGRVhQQU5EEBUSDAoIQ09MTEFQU0UQFhIJCgVDTE9TRRAYEhAKDENMT1NFX0xJTkVBUhAZEggKBFNLSVAQGhIVChFBQ0NFUFRfSU5WSVRBVElPThAbInYKDVByb2dyZXNzRXZlbnQSLgoLdGltZV9vZmZzZXQYASABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SNQoGZXZlbnRzGAIgAygLMiUuZ29vZ2xlLmNsb3VkLnZpZGVvLnN0aXRjaGVyLnYxLkV2ZW50QnMKImNvbS5nb29nbGUuY2xvdWQudmlkZW8uc3RpdGNoZXIudjFCC0V2ZW50c1Byb3RvUAFaPmNsb3VkLmdvb2dsZS5jb20vZ28vdmlkZW8vc3RpdGNoZXIvYXBpdjEvc3RpdGNoZXJwYjtzdGl0Y2hlcnBiYgZwcm90bzM", [file_google_protobuf_duration]);

/**
 * Describes an event and a trigger URI.
 *
 * @generated from message google.cloud.video.stitcher.v1.Event
 */
export type Event = Message<"google.cloud.video.stitcher.v1.Event"> & {
  /**
   * Describes the event that occurred.
   *
   * @generated from field: google.cloud.video.stitcher.v1.Event.EventType type = 1;
   */
  type: Event_EventType;

  /**
   * The URI to trigger for this event.
   *
   * @generated from field: string uri = 2;
   */
  uri: string;

  /**
   * The ID of the event.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * The offset in seconds if the event type is `PROGRESS`.
   *
   * @generated from field: google.protobuf.Duration offset = 4;
   */
  offset?: Duration;
};

/**
 * Describes the message google.cloud.video.stitcher.v1.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export const EventSchema: GenMessage<Event> = /*@__PURE__*/
  messageDesc(file_google_cloud_video_stitcher_v1_events, 0);

/**
 * Describes the event that occurred.
 *
 * @generated from enum google.cloud.video.stitcher.v1.Event.EventType
 */
export enum Event_EventType {
  /**
   * The event type is unspecified.
   *
   * @generated from enum value: EVENT_TYPE_UNSPECIFIED = 0;
   */
  EVENT_TYPE_UNSPECIFIED = 0,

  /**
   * First frame of creative ad viewed.
   *
   * @generated from enum value: CREATIVE_VIEW = 1;
   */
  CREATIVE_VIEW = 1,

  /**
   * Creative ad started.
   *
   * @generated from enum value: START = 2;
   */
  START = 2,

  /**
   * Start of an ad break.
   *
   * @generated from enum value: BREAK_START = 3;
   */
  BREAK_START = 3,

  /**
   * End of an ad break.
   *
   * @generated from enum value: BREAK_END = 4;
   */
  BREAK_END = 4,

  /**
   * Impression.
   *
   * @generated from enum value: IMPRESSION = 5;
   */
  IMPRESSION = 5,

  /**
   * First quartile progress.
   *
   * @generated from enum value: FIRST_QUARTILE = 6;
   */
  FIRST_QUARTILE = 6,

  /**
   * Midpoint progress.
   *
   * @generated from enum value: MIDPOINT = 7;
   */
  MIDPOINT = 7,

  /**
   * Third quartile progress.
   *
   * @generated from enum value: THIRD_QUARTILE = 8;
   */
  THIRD_QUARTILE = 8,

  /**
   * Ad progress completed.
   *
   * @generated from enum value: COMPLETE = 9;
   */
  COMPLETE = 9,

  /**
   * Specific progress event with an offset.
   *
   * @generated from enum value: PROGRESS = 10;
   */
  PROGRESS = 10,

  /**
   * Player muted.
   *
   * @generated from enum value: MUTE = 11;
   */
  MUTE = 11,

  /**
   * Player unmuted.
   *
   * @generated from enum value: UNMUTE = 12;
   */
  UNMUTE = 12,

  /**
   * Player paused.
   *
   * @generated from enum value: PAUSE = 13;
   */
  PAUSE = 13,

  /**
   * Click event.
   *
   * @generated from enum value: CLICK = 14;
   */
  CLICK = 14,

  /**
   * Click-through event.
   *
   * @generated from enum value: CLICK_THROUGH = 15;
   */
  CLICK_THROUGH = 15,

  /**
   * Player rewinding.
   *
   * @generated from enum value: REWIND = 16;
   */
  REWIND = 16,

  /**
   * Player resumed.
   *
   * @generated from enum value: RESUME = 17;
   */
  RESUME = 17,

  /**
   * Error event.
   *
   * @generated from enum value: ERROR = 18;
   */
  ERROR = 18,

  /**
   * Ad expanded to a larger size.
   *
   * @generated from enum value: EXPAND = 21;
   */
  EXPAND = 21,

  /**
   * Ad collapsed to a smaller size.
   *
   * @generated from enum value: COLLAPSE = 22;
   */
  COLLAPSE = 22,

  /**
   * Non-linear ad closed.
   *
   * @generated from enum value: CLOSE = 24;
   */
  CLOSE = 24,

  /**
   * Linear ad closed.
   *
   * @generated from enum value: CLOSE_LINEAR = 25;
   */
  CLOSE_LINEAR = 25,

  /**
   * Ad skipped.
   *
   * @generated from enum value: SKIP = 26;
   */
  SKIP = 26,

  /**
   * Accept invitation event.
   *
   * @generated from enum value: ACCEPT_INVITATION = 27;
   */
  ACCEPT_INVITATION = 27,
}

/**
 * Describes the enum google.cloud.video.stitcher.v1.Event.EventType.
 */
export const Event_EventTypeSchema: GenEnum<Event_EventType> = /*@__PURE__*/
  enumDesc(file_google_cloud_video_stitcher_v1_events, 0, 0);

/**
 * Indicates a time in which a list of events should be triggered
 * during media playback.
 *
 * @generated from message google.cloud.video.stitcher.v1.ProgressEvent
 */
export type ProgressEvent = Message<"google.cloud.video.stitcher.v1.ProgressEvent"> & {
  /**
   * The time when the following tracking events occurs. The time is in
   * seconds relative to the start of the VOD asset.
   *
   * @generated from field: google.protobuf.Duration time_offset = 1;
   */
  timeOffset?: Duration;

  /**
   * The list of progress tracking events for the ad break. These can be of
   * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
   * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
   * `COMPLETE`, `PROGRESS`.
   *
   * @generated from field: repeated google.cloud.video.stitcher.v1.Event events = 2;
   */
  events: Event[];
};

/**
 * Describes the message google.cloud.video.stitcher.v1.ProgressEvent.
 * Use `create(ProgressEventSchema)` to create a new message.
 */
export const ProgressEventSchema: GenMessage<ProgressEvent> = /*@__PURE__*/
  messageDesc(file_google_cloud_video_stitcher_v1_events, 1);

