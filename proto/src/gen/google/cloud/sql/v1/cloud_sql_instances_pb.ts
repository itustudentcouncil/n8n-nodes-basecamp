// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/sql/v1/cloud_sql_instances.proto (package google.cloud.sql.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { AcquireSsrsLeaseContext, ApiWarning, DemoteMasterConfiguration, DiskEncryptionConfiguration, DiskEncryptionStatus, ExportContext, ImportContext, InstanceReference, IpMapping, MySqlReplicaConfiguration, MySqlSyncConfig, OperationSchema, PerformDiskShrinkContext, Settings, SqlBackendType, SqlDatabaseVersion, SslCert, SslCertSchema } from "./cloud_sql_resources_pb";
import { file_google_cloud_sql_v1_cloud_sql_resources } from "./cloud_sql_resources_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/sql/v1/cloud_sql_instances.proto.
 */
export const file_google_cloud_sql_v1_cloud_sql_instances: GenFile = /*@__PURE__*/
  fileDesc("Ci1nb29nbGUvY2xvdWQvc3FsL3YxL2Nsb3VkX3NxbF9pbnN0YW5jZXMucHJvdG8SE2dvb2dsZS5jbG91ZC5zcWwudjEiQwoeU3FsSW5zdGFuY2VzQWRkU2VydmVyQ2FSZXF1ZXN0EhAKCGluc3RhbmNlGAEgASgJEg8KB3Byb2plY3QYAiABKAkidwoYU3FsSW5zdGFuY2VzQ2xvbmVSZXF1ZXN0EhAKCGluc3RhbmNlGAEgASgJEg8KB3Byb2plY3QYAiABKAkSOAoEYm9keRhkIAEoCzIqLmdvb2dsZS5jbG91ZC5zcWwudjEuSW5zdGFuY2VzQ2xvbmVSZXF1ZXN0Ij4KGVNxbEluc3RhbmNlc0RlbGV0ZVJlcXVlc3QSEAoIaW5zdGFuY2UYASABKAkSDwoHcHJvamVjdBgCIAEoCSKFAQofU3FsSW5zdGFuY2VzRGVtb3RlTWFzdGVyUmVxdWVzdBIQCghpbnN0YW5jZRgBIAEoCRIPCgdwcm9qZWN0GAIgASgJEj8KBGJvZHkYZCABKAsyMS5nb29nbGUuY2xvdWQuc3FsLnYxLkluc3RhbmNlc0RlbW90ZU1hc3RlclJlcXVlc3QiiAEKGVNxbEluc3RhbmNlc0RlbW90ZVJlcXVlc3QSFQoIaW5zdGFuY2UYASABKAlCA+BBAhIUCgdwcm9qZWN0GAIgASgJQgPgQQISPgoEYm9keRhkIAEoCzIrLmdvb2dsZS5jbG91ZC5zcWwudjEuSW5zdGFuY2VzRGVtb3RlUmVxdWVzdEID4EECInkKGVNxbEluc3RhbmNlc0V4cG9ydFJlcXVlc3QSEAoIaW5zdGFuY2UYASABKAkSDwoHcHJvamVjdBgCIAEoCRI5CgRib2R5GGQgASgLMisuZ29vZ2xlLmNsb3VkLnNxbC52MS5JbnN0YW5jZXNFeHBvcnRSZXF1ZXN0In0KG1NxbEluc3RhbmNlc0ZhaWxvdmVyUmVxdWVzdBIQCghpbnN0YW5jZRgBIAEoCRIPCgdwcm9qZWN0GAIgASgJEjsKBGJvZHkYZCABKAsyLS5nb29nbGUuY2xvdWQuc3FsLnYxLkluc3RhbmNlc0ZhaWxvdmVyUmVxdWVzdCI7ChZTcWxJbnN0YW5jZXNHZXRSZXF1ZXN0EhAKCGluc3RhbmNlGAEgASgJEg8KB3Byb2plY3QYAiABKAkieQoZU3FsSW5zdGFuY2VzSW1wb3J0UmVxdWVzdBIQCghpbnN0YW5jZRgBIAEoCRIPCgdwcm9qZWN0GAIgASgJEjkKBGJvZHkYZCABKAsyKy5nb29nbGUuY2xvdWQuc3FsLnYxLkluc3RhbmNlc0ltcG9ydFJlcXVlc3QiYQoZU3FsSW5zdGFuY2VzSW5zZXJ0UmVxdWVzdBIPCgdwcm9qZWN0GAEgASgJEjMKBGJvZHkYZCABKAsyJS5nb29nbGUuY2xvdWQuc3FsLnYxLkRhdGFiYXNlSW5zdGFuY2UiYwoXU3FsSW5zdGFuY2VzTGlzdFJlcXVlc3QSDgoGZmlsdGVyGAEgASgJEhMKC21heF9yZXN1bHRzGAIgASgNEhIKCnBhZ2VfdG9rZW4YAyABKAkSDwoHcHJvamVjdBgEIAEoCSJFCiBTcWxJbnN0YW5jZXNMaXN0U2VydmVyQ2FzUmVxdWVzdBIQCghpbnN0YW5jZRgBIAEoCRIPCgdwcm9qZWN0GAIgASgJInIKGFNxbEluc3RhbmNlc1BhdGNoUmVxdWVzdBIQCghpbnN0YW5jZRgBIAEoCRIPCgdwcm9qZWN0GAIgASgJEjMKBGJvZHkYZCABKAsyJS5nb29nbGUuY2xvdWQuc3FsLnYxLkRhdGFiYXNlSW5zdGFuY2UiWAohU3FsSW5zdGFuY2VzUHJvbW90ZVJlcGxpY2FSZXF1ZXN0EhAKCGluc3RhbmNlGAEgASgJEg8KB3Byb2plY3QYAiABKAkSEAoIZmFpbG92ZXIYAyABKAgidgodU3FsSW5zdGFuY2VzU3dpdGNob3ZlclJlcXVlc3QSEAoIaW5zdGFuY2UYASABKAkSDwoHcHJvamVjdBgCIAEoCRIyCgpkYl90aW1lb3V0GAMgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uQgPgQQEiRgohU3FsSW5zdGFuY2VzUmVzZXRTc2xDb25maWdSZXF1ZXN0EhAKCGluc3RhbmNlGAEgASgJEg8KB3Byb2plY3QYAiABKAkiPwoaU3FsSW5zdGFuY2VzUmVzdGFydFJlcXVlc3QSEAoIaW5zdGFuY2UYASABKAkSDwoHcHJvamVjdBgCIAEoCSKHAQogU3FsSW5zdGFuY2VzUmVzdG9yZUJhY2t1cFJlcXVlc3QSEAoIaW5zdGFuY2UYASABKAkSDwoHcHJvamVjdBgCIAEoCRJACgRib2R5GGQgASgLMjIuZ29vZ2xlLmNsb3VkLnNxbC52MS5JbnN0YW5jZXNSZXN0b3JlQmFja3VwUmVxdWVzdCKJAQohU3FsSW5zdGFuY2VzUm90YXRlU2VydmVyQ2FSZXF1ZXN0EhAKCGluc3RhbmNlGAEgASgJEg8KB3Byb2plY3QYAiABKAkSQQoEYm9keRhkIAEoCzIzLmdvb2dsZS5jbG91ZC5zcWwudjEuSW5zdGFuY2VzUm90YXRlU2VydmVyQ2FSZXF1ZXN0IkQKH1NxbEluc3RhbmNlc1N0YXJ0UmVwbGljYVJlcXVlc3QSEAoIaW5zdGFuY2UYASABKAkSDwoHcHJvamVjdBgCIAEoCSJDCh5TcWxJbnN0YW5jZXNTdG9wUmVwbGljYVJlcXVlc3QSEAoIaW5zdGFuY2UYASABKAkSDwoHcHJvamVjdBgCIAEoCSKDAQoeU3FsSW5zdGFuY2VzVHJ1bmNhdGVMb2dSZXF1ZXN0EhAKCGluc3RhbmNlGAEgASgJEg8KB3Byb2plY3QYAiABKAkSPgoEYm9keRhkIAEoCzIwLmdvb2dsZS5jbG91ZC5zcWwudjEuSW5zdGFuY2VzVHJ1bmNhdGVMb2dSZXF1ZXN0IoYBCiRTcWxJbnN0YW5jZXNQZXJmb3JtRGlza1Nocmlua1JlcXVlc3QSEAoIaW5zdGFuY2UYASABKAkSDwoHcHJvamVjdBgCIAEoCRI7CgRib2R5GGQgASgLMi0uZ29vZ2xlLmNsb3VkLnNxbC52MS5QZXJmb3JtRGlza1Nocmlua0NvbnRleHQicwoZU3FsSW5zdGFuY2VzVXBkYXRlUmVxdWVzdBIQCghpbnN0YW5jZRgBIAEoCRIPCgdwcm9qZWN0GAIgASgJEjMKBGJvZHkYZCABKAsyJS5nb29nbGUuY2xvdWQuc3FsLnYxLkRhdGFiYXNlSW5zdGFuY2UingEKKFNxbEluc3RhbmNlc1Jlc2NoZWR1bGVNYWludGVuYW5jZVJlcXVlc3QSEAoIaW5zdGFuY2UYASABKAkSDwoHcHJvamVjdBgCIAEoCRJPCgRib2R5GGQgASgLMkEuZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNSZXNjaGVkdWxlTWFpbnRlbmFuY2VSZXF1ZXN0Qm9keSJ/ChxTcWxJbnN0YW5jZXNSZWVuY3J5cHRSZXF1ZXN0EhAKCGluc3RhbmNlGAEgASgJEg8KB3Byb2plY3QYAiABKAkSPAoEYm9keRgDIAEoCzIuLmdvb2dsZS5jbG91ZC5zcWwudjEuSW5zdGFuY2VzUmVlbmNyeXB0UmVxdWVzdCKSAQoZSW5zdGFuY2VzUmVlbmNyeXB0UmVxdWVzdBJWChpiYWNrdXBfcmVlbmNyeXB0aW9uX2NvbmZpZxgBIAEoCzItLmdvb2dsZS5jbG91ZC5zcWwudjEuQmFja3VwUmVlbmNyeXB0aW9uQ29uZmlnSACIAQFCHQobX2JhY2t1cF9yZWVuY3J5cHRpb25fY29uZmlnIvMBChhCYWNrdXBSZWVuY3J5cHRpb25Db25maWcSGQoMYmFja3VwX2xpbWl0GAEgASgFSACIAQESUgoLYmFja3VwX3R5cGUYAiABKA4yOC5nb29nbGUuY2xvdWQuc3FsLnYxLkJhY2t1cFJlZW5jcnlwdGlvbkNvbmZpZy5CYWNrdXBUeXBlSAGIAQEiRwoKQmFja3VwVHlwZRIbChdCQUNLVVBfVFlQRV9VTlNQRUNJRklFRBAAEg0KCUFVVE9NQVRFRBABEg0KCU9OX0RFTUFORBACQg8KDV9iYWNrdXBfbGltaXRCDgoMX2JhY2t1cF90eXBlIksKJlNxbEluc3RhbmNlc0dldERpc2tTaHJpbmtDb25maWdSZXF1ZXN0EhAKCGluc3RhbmNlGAEgASgJEg8KB3Byb2plY3QYAiABKAkitQUKLVNxbEluc3RhbmNlc1ZlcmlmeUV4dGVybmFsU3luY1NldHRpbmdzUmVxdWVzdBIQCghpbnN0YW5jZRgBIAEoCRIPCgdwcm9qZWN0GAIgASgJEh4KFnZlcmlmeV9jb25uZWN0aW9uX29ubHkYAyABKAgSZgoJc3luY19tb2RlGAQgASgOMlMuZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNWZXJpZnlFeHRlcm5hbFN5bmNTZXR0aW5nc1JlcXVlc3QuRXh0ZXJuYWxTeW5jTW9kZRIkChd2ZXJpZnlfcmVwbGljYXRpb25fb25seRgFIAEoCEID4EEBEkYKEW15c3FsX3N5bmNfY29uZmlnGAYgASgLMiQuZ29vZ2xlLmNsb3VkLnNxbC52MS5NeVNxbFN5bmNDb25maWdCA+BBAUgAEm0KDm1pZ3JhdGlvbl90eXBlGAcgASgOMlAuZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNWZXJpZnlFeHRlcm5hbFN5bmNTZXR0aW5nc1JlcXVlc3QuTWlncmF0aW9uVHlwZUID4EEBElAKE3N5bmNfcGFyYWxsZWxfbGV2ZWwYCCABKA4yLi5nb29nbGUuY2xvdWQuc3FsLnYxLkV4dGVybmFsU3luY1BhcmFsbGVsTGV2ZWxCA+BBASJPChBFeHRlcm5hbFN5bmNNb2RlEiIKHkVYVEVSTkFMX1NZTkNfTU9ERV9VTlNQRUNJRklFRBAAEgoKBk9OTElORRABEgsKB09GRkxJTkUQAiJKCg1NaWdyYXRpb25UeXBlEh4KGk1JR1JBVElPTl9UWVBFX1VOU1BFQ0lGSUVEEAASCwoHTE9HSUNBTBABEgwKCFBIWVNJQ0FMEAJCDQoLc3luY19jb25maWci3wMKJFNxbEluc3RhbmNlc1N0YXJ0RXh0ZXJuYWxTeW5jUmVxdWVzdBIQCghpbnN0YW5jZRgBIAEoCRIPCgdwcm9qZWN0GAIgASgJEmYKCXN5bmNfbW9kZRgDIAEoDjJTLmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsSW5zdGFuY2VzVmVyaWZ5RXh0ZXJuYWxTeW5jU2V0dGluZ3NSZXF1ZXN0LkV4dGVybmFsU3luY01vZGUSGQoRc2tpcF92ZXJpZmljYXRpb24YBCABKAgSQQoRbXlzcWxfc3luY19jb25maWcYBiABKAsyJC5nb29nbGUuY2xvdWQuc3FsLnYxLk15U3FsU3luY0NvbmZpZ0gAElAKE3N5bmNfcGFyYWxsZWxfbGV2ZWwYByABKA4yLi5nb29nbGUuY2xvdWQuc3FsLnYxLkV4dGVybmFsU3luY1BhcmFsbGVsTGV2ZWxCA+BBARJtCg5taWdyYXRpb25fdHlwZRgIIAEoDjJQLmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsSW5zdGFuY2VzVmVyaWZ5RXh0ZXJuYWxTeW5jU2V0dGluZ3NSZXF1ZXN0Lk1pZ3JhdGlvblR5cGVCA+BBAUINCgtzeW5jX2NvbmZpZyJICiNTcWxJbnN0YW5jZXNSZXNldFJlcGxpY2FTaXplUmVxdWVzdBIQCghpbnN0YW5jZRgBIAEoCRIPCgdwcm9qZWN0GAIgASgJIo4BCiZTcWxJbnN0YW5jZXNDcmVhdGVFcGhlbWVyYWxDZXJ0UmVxdWVzdBIQCghpbnN0YW5jZRgBIAEoCRIPCgdwcm9qZWN0GAIgASgJEkEKBGJvZHkYZCABKAsyMy5nb29nbGUuY2xvdWQuc3FsLnYxLlNzbENlcnRzQ3JlYXRlRXBoZW1lcmFsUmVxdWVzdCJRChVJbnN0YW5jZXNDbG9uZVJlcXVlc3QSOAoNY2xvbmVfY29udGV4dBgBIAEoCzIhLmdvb2dsZS5jbG91ZC5zcWwudjEuQ2xvbmVDb250ZXh0ImcKHEluc3RhbmNlc0RlbW90ZU1hc3RlclJlcXVlc3QSRwoVZGVtb3RlX21hc3Rlcl9jb250ZXh0GAEgASgLMiguZ29vZ2xlLmNsb3VkLnNxbC52MS5EZW1vdGVNYXN0ZXJDb250ZXh0IlkKFkluc3RhbmNlc0RlbW90ZVJlcXVlc3QSPwoOZGVtb3RlX2NvbnRleHQYASABKAsyIi5nb29nbGUuY2xvdWQuc3FsLnYxLkRlbW90ZUNvbnRleHRCA+BBAiJUChZJbnN0YW5jZXNFeHBvcnRSZXF1ZXN0EjoKDmV4cG9ydF9jb250ZXh0GAEgASgLMiIuZ29vZ2xlLmNsb3VkLnNxbC52MS5FeHBvcnRDb250ZXh0IloKGEluc3RhbmNlc0ZhaWxvdmVyUmVxdWVzdBI+ChBmYWlsb3Zlcl9jb250ZXh0GAEgASgLMiQuZ29vZ2xlLmNsb3VkLnNxbC52MS5GYWlsb3ZlckNvbnRleHQiSgoeU3NsQ2VydHNDcmVhdGVFcGhlbWVyYWxSZXF1ZXN0EhIKCnB1YmxpY19rZXkYASABKAkSFAoMYWNjZXNzX3Rva2VuGAIgASgJIlQKFkluc3RhbmNlc0ltcG9ydFJlcXVlc3QSOgoOaW1wb3J0X2NvbnRleHQYASABKAsyIi5nb29nbGUuY2xvdWQuc3FsLnYxLkltcG9ydENvbnRleHQipwEKFUluc3RhbmNlc0xpc3RSZXNwb25zZRIMCgRraW5kGAEgASgJEjEKCHdhcm5pbmdzGAIgAygLMh8uZ29vZ2xlLmNsb3VkLnNxbC52MS5BcGlXYXJuaW5nEjQKBWl0ZW1zGAMgAygLMiUuZ29vZ2xlLmNsb3VkLnNxbC52MS5EYXRhYmFzZUluc3RhbmNlEhcKD25leHRfcGFnZV90b2tlbhgEIAEoCSJzCh5JbnN0YW5jZXNMaXN0U2VydmVyQ2FzUmVzcG9uc2USKwoFY2VydHMYASADKAsyHC5nb29nbGUuY2xvdWQuc3FsLnYxLlNzbENlcnQSFgoOYWN0aXZlX3ZlcnNpb24YAiABKAkSDAoEa2luZBgDIAEoCSJqCh1JbnN0YW5jZXNSZXN0b3JlQmFja3VwUmVxdWVzdBJJChZyZXN0b3JlX2JhY2t1cF9jb250ZXh0GAEgASgLMikuZ29vZ2xlLmNsb3VkLnNxbC52MS5SZXN0b3JlQmFja3VwQ29udGV4dCJuCh5JbnN0YW5jZXNSb3RhdGVTZXJ2ZXJDYVJlcXVlc3QSTAoYcm90YXRlX3NlcnZlcl9jYV9jb250ZXh0GAEgASgLMiouZ29vZ2xlLmNsb3VkLnNxbC52MS5Sb3RhdGVTZXJ2ZXJDYUNvbnRleHQiZAobSW5zdGFuY2VzVHJ1bmNhdGVMb2dSZXF1ZXN0EkUKFHRydW5jYXRlX2xvZ19jb250ZXh0GAEgASgLMicuZ29vZ2xlLmNsb3VkLnNxbC52MS5UcnVuY2F0ZUxvZ0NvbnRleHQidAogSW5zdGFuY2VzQWNxdWlyZVNzcnNMZWFzZVJlcXVlc3QSUAoaYWNxdWlyZV9zc3JzX2xlYXNlX2NvbnRleHQYASABKAsyLC5nb29nbGUuY2xvdWQuc3FsLnYxLkFjcXVpcmVTc3JzTGVhc2VDb250ZXh0IsQBCi5TcWxJbnN0YW5jZXNWZXJpZnlFeHRlcm5hbFN5bmNTZXR0aW5nc1Jlc3BvbnNlEgwKBGtpbmQYASABKAkSQAoGZXJyb3JzGAIgAygLMjAuZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxFeHRlcm5hbFN5bmNTZXR0aW5nRXJyb3ISQgoId2FybmluZ3MYAyADKAsyMC5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEV4dGVybmFsU3luY1NldHRpbmdFcnJvciJoCidTcWxJbnN0YW5jZXNHZXREaXNrU2hyaW5rQ29uZmlnUmVzcG9uc2USDAoEa2luZBgBIAEoCRIeChZtaW5pbWFsX3RhcmdldF9zaXplX2diGAIgASgDEg8KB21lc3NhZ2UYAyABKAkiTQooU3FsSW5zdGFuY2VzR2V0TGF0ZXN0UmVjb3ZlcnlUaW1lUmVxdWVzdBIQCghpbnN0YW5jZRgBIAEoCRIPCgdwcm9qZWN0GAIgASgJInMKKVNxbEluc3RhbmNlc0dldExhdGVzdFJlY292ZXJ5VGltZVJlc3BvbnNlEgwKBGtpbmQYASABKAkSOAoUbGF0ZXN0X3JlY292ZXJ5X3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIrsCCgxDbG9uZUNvbnRleHQSDAoEa2luZBgBIAEoCRIZChFwaXRyX3RpbWVzdGFtcF9tcxgCIAEoAxIhChlkZXN0aW5hdGlvbl9pbnN0YW5jZV9uYW1lGAMgASgJEkMKE2Jpbl9sb2dfY29vcmRpbmF0ZXMYBCABKAsyJi5nb29nbGUuY2xvdWQuc3FsLnYxLkJpbkxvZ0Nvb3JkaW5hdGVzEjEKDXBvaW50X2luX3RpbWUYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhoKEmFsbG9jYXRlZF9pcF9yYW5nZRgGIAEoCRIWCg5kYXRhYmFzZV9uYW1lcxgJIAMoCRIgCg5wcmVmZXJyZWRfem9uZRgKIAEoCUID4EEBSACIAQFCEQoPX3ByZWZlcnJlZF96b25lIlYKEUJpbkxvZ0Nvb3JkaW5hdGVzEhkKEWJpbl9sb2dfZmlsZV9uYW1lGAEgASgJEhgKEGJpbl9sb2dfcG9zaXRpb24YAiABKAMSDAoEa2luZBgDIAEoCSLJGwoQRGF0YWJhc2VJbnN0YW5jZRIMCgRraW5kGAEgASgJEkUKBXN0YXRlGAIgASgOMjYuZ29vZ2xlLmNsb3VkLnNxbC52MS5EYXRhYmFzZUluc3RhbmNlLlNxbEluc3RhbmNlU3RhdGUSQQoQZGF0YWJhc2VfdmVyc2lvbhgDIAEoDjInLmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsRGF0YWJhc2VWZXJzaW9uEi8KCHNldHRpbmdzGAQgASgLMh0uZ29vZ2xlLmNsb3VkLnNxbC52MS5TZXR0aW5ncxIMCgRldGFnGAUgASgJElIKEGZhaWxvdmVyX3JlcGxpY2EYBiABKAsyOC5nb29nbGUuY2xvdWQuc3FsLnYxLkRhdGFiYXNlSW5zdGFuY2UuU3FsRmFpbG92ZXJSZXBsaWNhEhwKFG1hc3Rlcl9pbnN0YW5jZV9uYW1lGAcgASgJEhUKDXJlcGxpY2FfbmFtZXMYCCADKAkSNgoNbWF4X2Rpc2tfc2l6ZRgJIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlQgIYARI6ChFjdXJyZW50X2Rpc2tfc2l6ZRgKIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlQgIYARI0CgxpcF9hZGRyZXNzZXMYCyADKAsyHi5nb29nbGUuY2xvdWQuc3FsLnYxLklwTWFwcGluZxI0Cg5zZXJ2ZXJfY2FfY2VydBgMIAEoCzIcLmdvb2dsZS5jbG91ZC5zcWwudjEuU3NsQ2VydBI7Cg1pbnN0YW5jZV90eXBlGA0gASgOMiQuZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZVR5cGUSDwoHcHJvamVjdBgOIAEoCRIYCgxpcHY2X2FkZHJlc3MYDyABKAlCAhgBEiUKHXNlcnZpY2VfYWNjb3VudF9lbWFpbF9hZGRyZXNzGBAgASgJEk8KGW9uX3ByZW1pc2VzX2NvbmZpZ3VyYXRpb24YESABKAsyLC5nb29nbGUuY2xvdWQuc3FsLnYxLk9uUHJlbWlzZXNDb25maWd1cmF0aW9uEkgKFXJlcGxpY2FfY29uZmlndXJhdGlvbhgSIAEoCzIpLmdvb2dsZS5jbG91ZC5zcWwudjEuUmVwbGljYUNvbmZpZ3VyYXRpb24SOQoMYmFja2VuZF90eXBlGBMgASgOMiMuZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxCYWNrZW5kVHlwZRIRCglzZWxmX2xpbmsYFCABKAkSQwoRc3VzcGVuc2lvbl9yZWFzb24YFSADKA4yKC5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbFN1c3BlbnNpb25SZWFzb24SFwoPY29ubmVjdGlvbl9uYW1lGBYgASgJEgwKBG5hbWUYFyABKAkSDgoGcmVnaW9uGBggASgJEhAKCGdjZV96b25lGBkgASgJEhoKEnNlY29uZGFyeV9nY2Vfem9uZRgiIAEoCRJXCh1kaXNrX2VuY3J5cHRpb25fY29uZmlndXJhdGlvbhgaIAEoCzIwLmdvb2dsZS5jbG91ZC5zcWwudjEuRGlza0VuY3J5cHRpb25Db25maWd1cmF0aW9uEkkKFmRpc2tfZW5jcnlwdGlvbl9zdGF0dXMYGyABKAsyKS5nb29nbGUuY2xvdWQuc3FsLnYxLkRpc2tFbmNyeXB0aW9uU3RhdHVzEhUKDXJvb3RfcGFzc3dvcmQYHSABKAkSXAoVc2NoZWR1bGVkX21haW50ZW5hbmNlGB4gASgLMj0uZ29vZ2xlLmNsb3VkLnNxbC52MS5EYXRhYmFzZUluc3RhbmNlLlNxbFNjaGVkdWxlZE1haW50ZW5hbmNlEjEKDXNhdGlzZmllc19wenMYIyABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlEicKGmRhdGFiYXNlX2luc3RhbGxlZF92ZXJzaW9uGCggASgJQgPgQQMSWQoSb3V0X29mX2Rpc2tfcmVwb3J0GCYgASgLMjguZ29vZ2xlLmNsb3VkLnNxbC52MS5EYXRhYmFzZUluc3RhbmNlLlNxbE91dE9mRGlza1JlcG9ydEgAiAEBEjQKC2NyZWF0ZV90aW1lGCcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEisKHmF2YWlsYWJsZV9tYWludGVuYW5jZV92ZXJzaW9ucxgpIAMoCUID4EEDEhsKE21haW50ZW5hbmNlX3ZlcnNpb24YKiABKAkSWAocdXBncmFkYWJsZV9kYXRhYmFzZV92ZXJzaW9ucxgtIAMoCzItLmdvb2dsZS5jbG91ZC5zcWwudjEuQXZhaWxhYmxlRGF0YWJhc2VWZXJzaW9uQgPgQQMSYwoYc3FsX25ldHdvcmtfYXJjaGl0ZWN0dXJlGC8gASgOMjwuZ29vZ2xlLmNsb3VkLnNxbC52MS5EYXRhYmFzZUluc3RhbmNlLlNxbE5ldHdvcmtBcmNoaXRlY3R1cmVIAYgBARItChtwc2Nfc2VydmljZV9hdHRhY2htZW50X2xpbmsYMCABKAlCA+BBA0gCiAEBEhoKCGRuc19uYW1lGDEgASgJQgPgQQNIA4gBARIkChBwcmltYXJ5X2Ruc19uYW1lGDMgASgJQgUYAeBBA0gEiAEBEiAKDndyaXRlX2VuZHBvaW50GDQgASgJQgPgQQNIBYgBARJJChNyZXBsaWNhdGlvbl9jbHVzdGVyGDYgASgLMicuZ29vZ2xlLmNsb3VkLnNxbC52MS5SZXBsaWNhdGlvbkNsdXN0ZXJCA+BBARJFCg1nZW1pbmlfY29uZmlnGDcgASgLMikuZ29vZ2xlLmNsb3VkLnNxbC52MS5HZW1pbmlJbnN0YW5jZUNvbmZpZ0gGiAEBEjYKDXNhdGlzZmllc19wemkYOCABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlQgPgQQMSXgowc3dpdGNoX3RyYW5zYWN0aW9uX2xvZ3NfdG9fY2xvdWRfc3RvcmFnZV9lbmFibGVkGDkgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZUID4EEESAeIAQEaUQoSU3FsRmFpbG92ZXJSZXBsaWNhEgwKBG5hbWUYASABKAkSLQoJYXZhaWxhYmxlGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRrUAQoXU3FsU2NoZWR1bGVkTWFpbnRlbmFuY2USLgoKc3RhcnRfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASFQoJY2FuX2RlZmVyGAIgASgIQgIYARIWCg5jYW5fcmVzY2hlZHVsZRgDIAEoCBI/ChZzY2hlZHVsZV9kZWFkbGluZV90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAiAEBQhkKF19zY2hlZHVsZV9kZWFkbGluZV90aW1lGtUCChJTcWxPdXRPZkRpc2tSZXBvcnQSbgoVc3FsX291dF9vZl9kaXNrX3N0YXRlGAEgASgOMkouZ29vZ2xlLmNsb3VkLnNxbC52MS5EYXRhYmFzZUluc3RhbmNlLlNxbE91dE9mRGlza1JlcG9ydC5TcWxPdXRPZkRpc2tTdGF0ZUgAiAEBEjEKJHNxbF9taW5fcmVjb21tZW5kZWRfaW5jcmVhc2Vfc2l6ZV9nYhgCIAEoBUgBiAEBIlkKEVNxbE91dE9mRGlza1N0YXRlEiUKIVNRTF9PVVRfT0ZfRElTS19TVEFURV9VTlNQRUNJRklFRBAAEgoKBk5PUk1BTBABEhEKDVNPRlRfU0hVVERPV04QAkIYChZfc3FsX291dF9vZl9kaXNrX3N0YXRlQicKJV9zcWxfbWluX3JlY29tbWVuZGVkX2luY3JlYXNlX3NpemVfZ2IitAEKEFNxbEluc3RhbmNlU3RhdGUSIgoeU1FMX0lOU1RBTkNFX1NUQVRFX1VOU1BFQ0lGSUVEEAASDAoIUlVOTkFCTEUQARINCglTVVNQRU5ERUQQAhISCg5QRU5ESU5HX0RFTEVURRADEhIKDlBFTkRJTkdfQ1JFQVRFEAQSDwoLTUFJTlRFTkFOQ0UQBRIKCgZGQUlMRUQQBhIaChJPTkxJTkVfTUFJTlRFTkFOQ0UQBxoCCAEifgoWU3FsTmV0d29ya0FyY2hpdGVjdHVyZRIoCiRTUUxfTkVUV09SS19BUkNISVRFQ1RVUkVfVU5TUEVDSUZJRUQQABIcChhORVdfTkVUV09SS19BUkNISVRFQ1RVUkUQARIcChhPTERfTkVUV09SS19BUkNISVRFQ1RVUkUQAkIVChNfb3V0X29mX2Rpc2tfcmVwb3J0QhsKGV9zcWxfbmV0d29ya19hcmNoaXRlY3R1cmVCHgocX3BzY19zZXJ2aWNlX2F0dGFjaG1lbnRfbGlua0ILCglfZG5zX25hbWVCEwoRX3ByaW1hcnlfZG5zX25hbWVCEQoPX3dyaXRlX2VuZHBvaW50QhAKDl9nZW1pbmlfY29uZmlnQjMKMV9zd2l0Y2hfdHJhbnNhY3Rpb25fbG9nc190b19jbG91ZF9zdG9yYWdlX2VuYWJsZWQipgMKFEdlbWluaUluc3RhbmNlQ29uZmlnEhoKCGVudGl0bGVkGAEgASgIQgPgQQNIAIgBARIsChpnb29nbGVfdmFjdXVtX21nbXRfZW5hYmxlZBgCIAEoCEID4EEDSAGIAQESLAoab29tX3Nlc3Npb25fY2FuY2VsX2VuYWJsZWQYAyABKAhCA+BBA0gCiAEBEiYKFGFjdGl2ZV9xdWVyeV9lbmFibGVkGAQgASgIQgPgQQNIA4gBARInChVpbmRleF9hZHZpc29yX2VuYWJsZWQYBSABKAhCA+BBA0gEiAEBEioKGGZsYWdfcmVjb21tZW5kZXJfZW5hYmxlZBgGIAEoCEID4EEDSAWIAQFCCwoJX2VudGl0bGVkQh0KG19nb29nbGVfdmFjdXVtX21nbXRfZW5hYmxlZEIdChtfb29tX3Nlc3Npb25fY2FuY2VsX2VuYWJsZWRCFwoVX2FjdGl2ZV9xdWVyeV9lbmFibGVkQhgKFl9pbmRleF9hZHZpc29yX2VuYWJsZWRCGwoZX2ZsYWdfcmVjb21tZW5kZXJfZW5hYmxlZCJ1ChJSZXBsaWNhdGlvbkNsdXN0ZXISHwoScHNhX3dyaXRlX2VuZHBvaW50GAEgASgJQgPgQQMSJQoYZmFpbG92ZXJfZHJfcmVwbGljYV9uYW1lGAIgASgJQgPgQQESFwoKZHJfcmVwbGljYRgEIAEoCEID4EEDIpABChhBdmFpbGFibGVEYXRhYmFzZVZlcnNpb24SGgoNbWFqb3JfdmVyc2lvbhgDIAEoCUgAiAEBEhEKBG5hbWUYCCABKAlIAYgBARIZCgxkaXNwbGF5X25hbWUYCSABKAlIAogBAUIQCg5fbWFqb3JfdmVyc2lvbkIHCgVfbmFtZUIPCg1fZGlzcGxheV9uYW1lIrIDCixTcWxJbnN0YW5jZXNSZXNjaGVkdWxlTWFpbnRlbmFuY2VSZXF1ZXN0Qm9keRJgCgpyZXNjaGVkdWxlGAMgASgLMkwuZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNSZXNjaGVkdWxlTWFpbnRlbmFuY2VSZXF1ZXN0Qm9keS5SZXNjaGVkdWxlGq8BCgpSZXNjaGVkdWxlEmkKD3Jlc2NoZWR1bGVfdHlwZRgBIAEoDjJQLmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsSW5zdGFuY2VzUmVzY2hlZHVsZU1haW50ZW5hbmNlUmVxdWVzdEJvZHkuUmVzY2hlZHVsZVR5cGUSNgoNc2NoZWR1bGVfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBASJuCg5SZXNjaGVkdWxlVHlwZRIfChtSRVNDSEVEVUxFX1RZUEVfVU5TUEVDSUZJRUQQABINCglJTU1FRElBVEUQARIZChVORVhUX0FWQUlMQUJMRV9XSU5ET1cQAhIRCg1TUEVDSUZJQ19USU1FEAMi7QEKE0RlbW90ZU1hc3RlckNvbnRleHQSDAoEa2luZBgBIAEoCRI7Chd2ZXJpZnlfZ3RpZF9jb25zaXN0ZW5jeRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUSHAoUbWFzdGVyX2luc3RhbmNlX25hbWUYAyABKAkSTQoVcmVwbGljYV9jb25maWd1cmF0aW9uGAQgASgLMi4uZ29vZ2xlLmNsb3VkLnNxbC52MS5EZW1vdGVNYXN0ZXJDb25maWd1cmF0aW9uEh4KFnNraXBfcmVwbGljYXRpb25fc2V0dXAYBSABKAgiTwoNRGVtb3RlQ29udGV4dBIMCgRraW5kGAEgASgJEjAKI3NvdXJjZV9yZXByZXNlbnRhdGl2ZV9pbnN0YW5jZV9uYW1lGAIgASgJQgPgQQIiOQoPRmFpbG92ZXJDb250ZXh0EhgKEHNldHRpbmdzX3ZlcnNpb24YASABKAMSDAoEa2luZBgCIAEoCSJhChRSZXN0b3JlQmFja3VwQ29udGV4dBIMCgRraW5kGAEgASgJEhUKDWJhY2t1cF9ydW5faWQYAiABKAMSEwoLaW5zdGFuY2VfaWQYAyABKAkSDwoHcHJvamVjdBgEIAEoCSI7ChVSb3RhdGVTZXJ2ZXJDYUNvbnRleHQSDAoEa2luZBgBIAEoCRIUCgxuZXh0X3ZlcnNpb24YAiABKAkiNAoSVHJ1bmNhdGVMb2dDb250ZXh0EgwKBGtpbmQYASABKAkSEAoIbG9nX3R5cGUYAiABKAki9w0KG1NxbEV4dGVybmFsU3luY1NldHRpbmdFcnJvchIMCgRraW5kGAEgASgJEl4KBHR5cGUYAiABKA4yUC5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEV4dGVybmFsU3luY1NldHRpbmdFcnJvci5TcWxFeHRlcm5hbFN5bmNTZXR0aW5nRXJyb3JUeXBlEg4KBmRldGFpbBgDIAEoCSLZDAofU3FsRXh0ZXJuYWxTeW5jU2V0dGluZ0Vycm9yVHlwZRI0CjBTUUxfRVhURVJOQUxfU1lOQ19TRVRUSU5HX0VSUk9SX1RZUEVfVU5TUEVDSUZJRUQQABIWChJDT05ORUNUSU9OX0ZBSUxVUkUQARIWChJCSU5MT0dfTk9UX0VOQUJMRUQQAhIhCh1JTkNPTVBBVElCTEVfREFUQUJBU0VfVkVSU0lPThADEhkKFVJFUExJQ0FfQUxSRUFEWV9TRVRVUBAEEhoKFklOU1VGRklDSUVOVF9QUklWSUxFR0UQBRIeChpVTlNVUFBPUlRFRF9NSUdSQVRJT05fVFlQRRAGEhoKFk5PX1BHTE9HSUNBTF9JTlNUQUxMRUQQBxIhCh1QR0xPR0lDQUxfTk9ERV9BTFJFQURZX0VYSVNUUxAIEhUKEUlOVkFMSURfV0FMX0xFVkVMEAkSIgoeSU5WQUxJRF9TSEFSRURfUFJFTE9BRF9MSUJSQVJZEAoSJgoiSU5TVUZGSUNJRU5UX01BWF9SRVBMSUNBVElPTl9TTE9UUxALEiAKHElOU1VGRklDSUVOVF9NQVhfV0FMX1NFTkRFUlMQDBIlCiFJTlNVRkZJQ0lFTlRfTUFYX1dPUktFUl9QUk9DRVNTRVMQDRIaChZVTlNVUFBPUlRFRF9FWFRFTlNJT05TEA4SIwofSU5WQUxJRF9SRFNfTE9HSUNBTF9SRVBMSUNBVElPThAPEhkKFUlOVkFMSURfTE9HR0lOR19TRVRVUBAQEhQKEElOVkFMSURfREJfUEFSQU0QERIZChVVTlNVUFBPUlRFRF9HVElEX01PREUQEhIfChtTUUxTRVJWRVJfQUdFTlRfTk9UX1JVTk5JTkcQExIgChxVTlNVUFBPUlRFRF9UQUJMRV9ERUZJTklUSU9OEBQSFwoTVU5TVVBQT1JURURfREVGSU5FUhAVEiEKHVNRTFNFUlZFUl9TRVJWRVJOQU1FX01JU01BVENIEBYSGQoVUFJJTUFSWV9BTFJFQURZX1NFVFVQEBcSHQoZVU5TVVBQT1JURURfQklOTE9HX0ZPUk1BVBAYEhwKGEJJTkxPR19SRVRFTlRJT05fU0VUVElORxAZEh4KGlVOU1VQUE9SVEVEX1NUT1JBR0VfRU5HSU5FEBoSGgoWTElNSVRFRF9TVVBQT1JUX1RBQkxFUxAbEhwKGEVYSVNUSU5HX0RBVEFfSU5fUkVQTElDQRAcEh8KG01JU1NJTkdfT1BUSU9OQUxfUFJJVklMRUdFUxAdEiAKHFJJU0tZX0JBQ0tVUF9BRE1JTl9QUklWSUxFR0UQHhIgChxJTlNVRkZJQ0lFTlRfR0NTX1BFUk1JU1NJT05TEB8SFQoRSU5WQUxJRF9GSUxFX0lORk8QIBIhCh1VTlNVUFBPUlRFRF9EQVRBQkFTRV9TRVRUSU5HUxAhEjAKLE1ZU1FMX1BBUkFMTEVMX0lNUE9SVF9JTlNVRkZJQ0lFTlRfUFJJVklMRUdFECISFAoQTE9DQUxfSU5GSUxFX09GRhAjEh4KGlRVUk5fT05fUElUUl9BRlRFUl9QUk9NT1RFECQSJwojSU5DT01QQVRJQkxFX0RBVEFCQVNFX01JTk9SX1ZFUlNJT04QJRIcChhTT1VSQ0VfTUFYX1NVQlNDUklQVElPTlMQJhIdChlVTkFCTEVfVE9fVkVSSUZZX0RFRklORVJTECcSIwofU1VCU0NSSVBUSU9OX0NBTENVTEFUSU9OX1NUQVRVUxAoEhkKFVBHX1NVQlNDUklQVElPTl9DT1VOVBApEhoKFlBHX1NZTkNfUEFSQUxMRUxfTEVWRUwQKhIaChZJTlNVRkZJQ0lFTlRfRElTS19TSVpFECsSHQoZSU5TVUZGSUNJRU5UX01BQ0hJTkVfVElFUhAsEicKI1VOU1VQUE9SVEVEX0VYVEVOU0lPTlNfTk9UX01JR1JBVEVEEC0SGwoXRVhURU5TSU9OU19OT1RfTUlHUkFURUQQLhIjCh9QR19DUk9OX0ZMQUdfRU5BQkxFRF9JTl9SRVBMSUNBEC8SJQohRVhURU5TSU9OU19OT1RfRU5BQkxFRF9JTl9SRVBMSUNBEDASFwoTVU5TVVBQT1JURURfQ09MVU1OUxAxIv8BChdPblByZW1pc2VzQ29uZmlndXJhdGlvbhIRCglob3N0X3BvcnQYASABKAkSDAoEa2luZBgCIAEoCRIQCgh1c2VybmFtZRgDIAEoCRIQCghwYXNzd29yZBgEIAEoCRIWCg5jYV9jZXJ0aWZpY2F0ZRgFIAEoCRIaChJjbGllbnRfY2VydGlmaWNhdGUYBiABKAkSEgoKY2xpZW50X2tleRgHIAEoCRIWCg5kdW1wX2ZpbGVfcGF0aBgIIAEoCRI/Cg9zb3VyY2VfaW5zdGFuY2UYDyABKAsyJi5nb29nbGUuY2xvdWQuc3FsLnYxLkluc3RhbmNlUmVmZXJlbmNlIusBChRSZXBsaWNhQ29uZmlndXJhdGlvbhIMCgRraW5kGAEgASgJElMKG215c3FsX3JlcGxpY2FfY29uZmlndXJhdGlvbhgCIAEoCzIuLmdvb2dsZS5jbG91ZC5zcWwudjEuTXlTcWxSZXBsaWNhQ29uZmlndXJhdGlvbhIzCg9mYWlsb3Zlcl90YXJnZXQYAyABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlEjsKEmNhc2NhZGFibGVfcmVwbGljYRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWVCA+BBASKcAQojU3FsSW5zdGFuY2VzQWNxdWlyZVNzcnNMZWFzZVJlcXVlc3QSFQoIaW5zdGFuY2UYASABKAlCA+BBAhIUCgdwcm9qZWN0GAIgASgJQgPgQQISSAoEYm9keRhkIAEoCzI1Lmdvb2dsZS5jbG91ZC5zcWwudjEuSW5zdGFuY2VzQWNxdWlyZVNzcnNMZWFzZVJlcXVlc3RCA+BBAiI8CiRTcWxJbnN0YW5jZXNBY3F1aXJlU3Nyc0xlYXNlUmVzcG9uc2USFAoMb3BlcmF0aW9uX2lkGAEgASgJIlIKI1NxbEluc3RhbmNlc1JlbGVhc2VTc3JzTGVhc2VSZXF1ZXN0EhUKCGluc3RhbmNlGAEgASgJQgPgQQISFAoHcHJvamVjdBgCIAEoCUID4EECIjwKJFNxbEluc3RhbmNlc1JlbGVhc2VTc3JzTGVhc2VSZXNwb25zZRIUCgxvcGVyYXRpb25faWQYASABKAkqaAoZRXh0ZXJuYWxTeW5jUGFyYWxsZWxMZXZlbBIsCihFWFRFUk5BTF9TWU5DX1BBUkFMTEVMX0xFVkVMX1VOU1BFQ0lGSUVEEAASBwoDTUlOEAESCwoHT1BUSU1BTBACEgcKA01BWBADKoEBCg9TcWxJbnN0YW5jZVR5cGUSIQodU1FMX0lOU1RBTkNFX1RZUEVfVU5TUEVDSUZJRUQQABIWChJDTE9VRF9TUUxfSU5TVEFOQ0UQARIYChRPTl9QUkVNSVNFU19JTlNUQU5DRRACEhkKFVJFQURfUkVQTElDQV9JTlNUQU5DRRADKooBChNTcWxTdXNwZW5zaW9uUmVhc29uEiUKIVNRTF9TVVNQRU5TSU9OX1JFQVNPTl9VTlNQRUNJRklFRBAAEhEKDUJJTExJTkdfSVNTVUUQAhIPCgtMRUdBTF9JU1NVRRADEhUKEU9QRVJBVElPTkFMX0lTU1VFEAQSEQoNS01TX0tFWV9JU1NVRRAFMtkvChNTcWxJbnN0YW5jZXNTZXJ2aWNlEqMBCgtBZGRTZXJ2ZXJDYRIzLmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsSW5zdGFuY2VzQWRkU2VydmVyQ2FSZXF1ZXN0Gh4uZ29vZ2xlLmNsb3VkLnNxbC52MS5PcGVyYXRpb24iP4LT5JMCOSI3L3YxL3Byb2plY3RzL3twcm9qZWN0fS9pbnN0YW5jZXMve2luc3RhbmNlfS9hZGRTZXJ2ZXJDYRKXAQoFQ2xvbmUSLS5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEluc3RhbmNlc0Nsb25lUmVxdWVzdBoeLmdvb2dsZS5jbG91ZC5zcWwudjEuT3BlcmF0aW9uIj+C0+STAjk6BGJvZHkiMS92MS9wcm9qZWN0cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX0vY2xvbmUSjQEKBkRlbGV0ZRIuLmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsSW5zdGFuY2VzRGVsZXRlUmVxdWVzdBoeLmdvb2dsZS5jbG91ZC5zcWwudjEuT3BlcmF0aW9uIjOC0+STAi0qKy92MS9wcm9qZWN0cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX0SrAEKDERlbW90ZU1hc3RlchI0Lmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsSW5zdGFuY2VzRGVtb3RlTWFzdGVyUmVxdWVzdBoeLmdvb2dsZS5jbG91ZC5zcWwudjEuT3BlcmF0aW9uIkaC0+STAkA6BGJvZHkiOC92MS9wcm9qZWN0cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX0vZGVtb3RlTWFzdGVyEpoBCgZEZW1vdGUSLi5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEluc3RhbmNlc0RlbW90ZVJlcXVlc3QaHi5nb29nbGUuY2xvdWQuc3FsLnYxLk9wZXJhdGlvbiJAgtPkkwI6OgRib2R5IjIvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9L2RlbW90ZRKaAQoGRXhwb3J0Ei4uZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNFeHBvcnRSZXF1ZXN0Gh4uZ29vZ2xlLmNsb3VkLnNxbC52MS5PcGVyYXRpb24iQILT5JMCOjoEYm9keSIyL3YxL3Byb2plY3RzL3twcm9qZWN0fS9pbnN0YW5jZXMve2luc3RhbmNlfS9leHBvcnQSoAEKCEZhaWxvdmVyEjAuZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNGYWlsb3ZlclJlcXVlc3QaHi5nb29nbGUuY2xvdWQuc3FsLnYxLk9wZXJhdGlvbiJCgtPkkwI8OgRib2R5IjQvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9L2ZhaWxvdmVyEqMBCglSZWVuY3J5cHQSMS5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEluc3RhbmNlc1JlZW5jcnlwdFJlcXVlc3QaHi5nb29nbGUuY2xvdWQuc3FsLnYxLk9wZXJhdGlvbiJDgtPkkwI9OgRib2R5IjUvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9L3JlZW5jcnlwdBKOAQoDR2V0EisuZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNHZXRSZXF1ZXN0GiUuZ29vZ2xlLmNsb3VkLnNxbC52MS5EYXRhYmFzZUluc3RhbmNlIjOC0+STAi0SKy92MS9wcm9qZWN0cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX0SmgEKBkltcG9ydBIuLmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsSW5zdGFuY2VzSW1wb3J0UmVxdWVzdBoeLmdvb2dsZS5jbG91ZC5zcWwudjEuT3BlcmF0aW9uIkCC0+STAjo6BGJvZHkiMi92MS9wcm9qZWN0cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX0vaW1wb3J0EogBCgZJbnNlcnQSLi5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEluc3RhbmNlc0luc2VydFJlcXVlc3QaHi5nb29nbGUuY2xvdWQuc3FsLnYxLk9wZXJhdGlvbiIugtPkkwIoOgRib2R5IiAvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcxKKAQoETGlzdBIsLmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsSW5zdGFuY2VzTGlzdFJlcXVlc3QaKi5nb29nbGUuY2xvdWQuc3FsLnYxLkluc3RhbmNlc0xpc3RSZXNwb25zZSIogtPkkwIiEiAvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcxK+AQoNTGlzdFNlcnZlckNhcxI1Lmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsSW5zdGFuY2VzTGlzdFNlcnZlckNhc1JlcXVlc3QaMy5nb29nbGUuY2xvdWQuc3FsLnYxLkluc3RhbmNlc0xpc3RTZXJ2ZXJDYXNSZXNwb25zZSJBgtPkkwI7EjkvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9L2xpc3RTZXJ2ZXJDYXMSkQEKBVBhdGNoEi0uZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNQYXRjaFJlcXVlc3QaHi5nb29nbGUuY2xvdWQuc3FsLnYxLk9wZXJhdGlvbiI5gtPkkwIzOgRib2R5MisvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9EqwBCg5Qcm9tb3RlUmVwbGljYRI2Lmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsSW5zdGFuY2VzUHJvbW90ZVJlcGxpY2FSZXF1ZXN0Gh4uZ29vZ2xlLmNsb3VkLnNxbC52MS5PcGVyYXRpb24iQoLT5JMCPCI6L3YxL3Byb2plY3RzL3twcm9qZWN0fS9pbnN0YW5jZXMve2luc3RhbmNlfS9wcm9tb3RlUmVwbGljYRKgAQoKU3dpdGNob3ZlchIyLmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsSW5zdGFuY2VzU3dpdGNob3ZlclJlcXVlc3QaHi5nb29nbGUuY2xvdWQuc3FsLnYxLk9wZXJhdGlvbiI+gtPkkwI4IjYvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9L3N3aXRjaG92ZXISrAEKDlJlc2V0U3NsQ29uZmlnEjYuZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNSZXNldFNzbENvbmZpZ1JlcXVlc3QaHi5nb29nbGUuY2xvdWQuc3FsLnYxLk9wZXJhdGlvbiJCgtPkkwI8IjovdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9L3Jlc2V0U3NsQ29uZmlnEpcBCgdSZXN0YXJ0Ei8uZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNSZXN0YXJ0UmVxdWVzdBoeLmdvb2dsZS5jbG91ZC5zcWwudjEuT3BlcmF0aW9uIjuC0+STAjUiMy92MS9wcm9qZWN0cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX0vcmVzdGFydBKvAQoNUmVzdG9yZUJhY2t1cBI1Lmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsSW5zdGFuY2VzUmVzdG9yZUJhY2t1cFJlcXVlc3QaHi5nb29nbGUuY2xvdWQuc3FsLnYxLk9wZXJhdGlvbiJHgtPkkwJBOgRib2R5IjkvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9L3Jlc3RvcmVCYWNrdXASsgEKDlJvdGF0ZVNlcnZlckNhEjYuZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNSb3RhdGVTZXJ2ZXJDYVJlcXVlc3QaHi5nb29nbGUuY2xvdWQuc3FsLnYxLk9wZXJhdGlvbiJIgtPkkwJCOgRib2R5IjovdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9L3JvdGF0ZVNlcnZlckNhEqYBCgxTdGFydFJlcGxpY2ESNC5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEluc3RhbmNlc1N0YXJ0UmVwbGljYVJlcXVlc3QaHi5nb29nbGUuY2xvdWQuc3FsLnYxLk9wZXJhdGlvbiJAgtPkkwI6IjgvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9L3N0YXJ0UmVwbGljYRKjAQoLU3RvcFJlcGxpY2ESMy5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEluc3RhbmNlc1N0b3BSZXBsaWNhUmVxdWVzdBoeLmdvb2dsZS5jbG91ZC5zcWwudjEuT3BlcmF0aW9uIj+C0+STAjkiNy92MS9wcm9qZWN0cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX0vc3RvcFJlcGxpY2ESqQEKC1RydW5jYXRlTG9nEjMuZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNUcnVuY2F0ZUxvZ1JlcXVlc3QaHi5nb29nbGUuY2xvdWQuc3FsLnYxLk9wZXJhdGlvbiJFgtPkkwI/OgRib2R5IjcvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9L3RydW5jYXRlTG9nEpMBCgZVcGRhdGUSLi5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEluc3RhbmNlc1VwZGF0ZVJlcXVlc3QaHi5nb29nbGUuY2xvdWQuc3FsLnYxLk9wZXJhdGlvbiI5gtPkkwIzOgRib2R5GisvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9ErcBCg9DcmVhdGVFcGhlbWVyYWwSOy5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEluc3RhbmNlc0NyZWF0ZUVwaGVtZXJhbENlcnRSZXF1ZXN0GhwuZ29vZ2xlLmNsb3VkLnNxbC52MS5Tc2xDZXJ0IkmC0+STAkM6BGJvZHkiOy92MS9wcm9qZWN0cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX0vY3JlYXRlRXBoZW1lcmFsEscBChVSZXNjaGVkdWxlTWFpbnRlbmFuY2USPS5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEluc3RhbmNlc1Jlc2NoZWR1bGVNYWludGVuYW5jZVJlcXVlc3QaHi5nb29nbGUuY2xvdWQuc3FsLnYxLk9wZXJhdGlvbiJPgtPkkwJJOgRib2R5IkEvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9L3Jlc2NoZWR1bGVNYWludGVuYW5jZRL4AQoaVmVyaWZ5RXh0ZXJuYWxTeW5jU2V0dGluZ3MSQi5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEluc3RhbmNlc1ZlcmlmeUV4dGVybmFsU3luY1NldHRpbmdzUmVxdWVzdBpDLmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsSW5zdGFuY2VzVmVyaWZ5RXh0ZXJuYWxTeW5jU2V0dGluZ3NSZXNwb25zZSJRgtPkkwJLOgEqIkYvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9L3ZlcmlmeUV4dGVybmFsU3luY1NldHRpbmdzErgBChFTdGFydEV4dGVybmFsU3luYxI5Lmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsSW5zdGFuY2VzU3RhcnRFeHRlcm5hbFN5bmNSZXF1ZXN0Gh4uZ29vZ2xlLmNsb3VkLnNxbC52MS5PcGVyYXRpb24iSILT5JMCQjoBKiI9L3YxL3Byb2plY3RzL3twcm9qZWN0fS9pbnN0YW5jZXMve2luc3RhbmNlfS9zdGFydEV4dGVybmFsU3luYxK7AQoRUGVyZm9ybURpc2tTaHJpbmsSOS5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEluc3RhbmNlc1BlcmZvcm1EaXNrU2hyaW5rUmVxdWVzdBoeLmdvb2dsZS5jbG91ZC5zcWwudjEuT3BlcmF0aW9uIkuC0+STAkU6BGJvZHkiPS92MS9wcm9qZWN0cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX0vcGVyZm9ybURpc2tTaHJpbmsS2QEKE0dldERpc2tTaHJpbmtDb25maWcSOy5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEluc3RhbmNlc0dldERpc2tTaHJpbmtDb25maWdSZXF1ZXN0GjwuZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNHZXREaXNrU2hyaW5rQ29uZmlnUmVzcG9uc2UiR4LT5JMCQRI/L3YxL3Byb2plY3RzL3twcm9qZWN0fS9pbnN0YW5jZXMve2luc3RhbmNlfS9nZXREaXNrU2hyaW5rQ29uZmlnErUBChBSZXNldFJlcGxpY2FTaXplEjguZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNSZXNldFJlcGxpY2FTaXplUmVxdWVzdBoeLmdvb2dsZS5jbG91ZC5zcWwudjEuT3BlcmF0aW9uIkeC0+STAkE6ASoiPC92MS9wcm9qZWN0cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX0vcmVzZXRSZXBsaWNhU2l6ZRLhAQoVR2V0TGF0ZXN0UmVjb3ZlcnlUaW1lEj0uZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNHZXRMYXRlc3RSZWNvdmVyeVRpbWVSZXF1ZXN0Gj4uZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNHZXRMYXRlc3RSZWNvdmVyeVRpbWVSZXNwb25zZSJJgtPkkwJDEkEvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9L2dldExhdGVzdFJlY292ZXJ5VGltZRLTAQoQQWNxdWlyZVNzcnNMZWFzZRI4Lmdvb2dsZS5jbG91ZC5zcWwudjEuU3FsSW5zdGFuY2VzQWNxdWlyZVNzcnNMZWFzZVJlcXVlc3QaOS5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEluc3RhbmNlc0FjcXVpcmVTc3JzTGVhc2VSZXNwb25zZSJKgtPkkwJEOgRib2R5IjwvdjEvcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9L2FjcXVpcmVTc3JzTGVhc2USzQEKEFJlbGVhc2VTc3JzTGVhc2USOC5nb29nbGUuY2xvdWQuc3FsLnYxLlNxbEluc3RhbmNlc1JlbGVhc2VTc3JzTGVhc2VSZXF1ZXN0GjkuZ29vZ2xlLmNsb3VkLnNxbC52MS5TcWxJbnN0YW5jZXNSZWxlYXNlU3Nyc0xlYXNlUmVzcG9uc2UiRILT5JMCPiI8L3YxL3Byb2plY3RzL3twcm9qZWN0fS9pbnN0YW5jZXMve2luc3RhbmNlfS9yZWxlYXNlU3Nyc0xlYXNlGnzKQRdzcWxhZG1pbi5nb29nbGVhcGlzLmNvbdJBX2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm0saHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9zcWxzZXJ2aWNlLmFkbWluQlwKF2NvbS5nb29nbGUuY2xvdWQuc3FsLnYxQhRDbG91ZFNxbFNlcnZpY2VQcm90b1ABWiljbG91ZC5nb29nbGUuY29tL2dvL3NxbC9hcGl2MS9zcWxwYjtzcWxwYmIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_cloud_sql_v1_cloud_sql_resources, file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_protobuf_wrappers]);

/**
 * Instance add server CA request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesAddServerCaRequest
 */
export type SqlInstancesAddServerCaRequest = Message<"google.cloud.sql.v1.SqlInstancesAddServerCaRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesAddServerCaRequest.
 * Use `create(SqlInstancesAddServerCaRequestSchema)` to create a new message.
 */
export const SqlInstancesAddServerCaRequestSchema: GenMessage<SqlInstancesAddServerCaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 0);

/**
 * Instance clone request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesCloneRequest
 */
export type SqlInstancesCloneRequest = Message<"google.cloud.sql.v1.SqlInstancesCloneRequest"> & {
  /**
   * The ID of the Cloud SQL instance to be cloned (source). This does not
   * include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the source as well as the clone Cloud SQL instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * @generated from field: google.cloud.sql.v1.InstancesCloneRequest body = 100;
   */
  body?: InstancesCloneRequest;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesCloneRequest.
 * Use `create(SqlInstancesCloneRequestSchema)` to create a new message.
 */
export const SqlInstancesCloneRequestSchema: GenMessage<SqlInstancesCloneRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 1);

/**
 * Instance delete request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesDeleteRequest
 */
export type SqlInstancesDeleteRequest = Message<"google.cloud.sql.v1.SqlInstancesDeleteRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance to be deleted.
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesDeleteRequest.
 * Use `create(SqlInstancesDeleteRequestSchema)` to create a new message.
 */
export const SqlInstancesDeleteRequestSchema: GenMessage<SqlInstancesDeleteRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 2);

/**
 * Instance demote master request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesDemoteMasterRequest
 */
export type SqlInstancesDemoteMasterRequest = Message<"google.cloud.sql.v1.SqlInstancesDemoteMasterRequest"> & {
  /**
   * Cloud SQL instance name.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * @generated from field: google.cloud.sql.v1.InstancesDemoteMasterRequest body = 100;
   */
  body?: InstancesDemoteMasterRequest;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesDemoteMasterRequest.
 * Use `create(SqlInstancesDemoteMasterRequestSchema)` to create a new message.
 */
export const SqlInstancesDemoteMasterRequestSchema: GenMessage<SqlInstancesDemoteMasterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 3);

/**
 * Instance demote request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesDemoteRequest
 */
export type SqlInstancesDemoteRequest = Message<"google.cloud.sql.v1.SqlInstancesDemoteRequest"> & {
  /**
   * Required. Cloud SQL instance name.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Required. ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * Required. The request body.
   *
   * @generated from field: google.cloud.sql.v1.InstancesDemoteRequest body = 100;
   */
  body?: InstancesDemoteRequest;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesDemoteRequest.
 * Use `create(SqlInstancesDemoteRequestSchema)` to create a new message.
 */
export const SqlInstancesDemoteRequestSchema: GenMessage<SqlInstancesDemoteRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 4);

/**
 * Instance export request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesExportRequest
 */
export type SqlInstancesExportRequest = Message<"google.cloud.sql.v1.SqlInstancesExportRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance to be exported.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * @generated from field: google.cloud.sql.v1.InstancesExportRequest body = 100;
   */
  body?: InstancesExportRequest;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesExportRequest.
 * Use `create(SqlInstancesExportRequestSchema)` to create a new message.
 */
export const SqlInstancesExportRequestSchema: GenMessage<SqlInstancesExportRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 5);

/**
 * Instance failover request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesFailoverRequest
 */
export type SqlInstancesFailoverRequest = Message<"google.cloud.sql.v1.SqlInstancesFailoverRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * ID of the project that contains the read replica.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * @generated from field: google.cloud.sql.v1.InstancesFailoverRequest body = 100;
   */
  body?: InstancesFailoverRequest;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesFailoverRequest.
 * Use `create(SqlInstancesFailoverRequestSchema)` to create a new message.
 */
export const SqlInstancesFailoverRequestSchema: GenMessage<SqlInstancesFailoverRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 6);

/**
 * Instance get request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesGetRequest
 */
export type SqlInstancesGetRequest = Message<"google.cloud.sql.v1.SqlInstancesGetRequest"> & {
  /**
   * Database instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesGetRequest.
 * Use `create(SqlInstancesGetRequestSchema)` to create a new message.
 */
export const SqlInstancesGetRequestSchema: GenMessage<SqlInstancesGetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 7);

/**
 * Instance import request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesImportRequest
 */
export type SqlInstancesImportRequest = Message<"google.cloud.sql.v1.SqlInstancesImportRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * @generated from field: google.cloud.sql.v1.InstancesImportRequest body = 100;
   */
  body?: InstancesImportRequest;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesImportRequest.
 * Use `create(SqlInstancesImportRequestSchema)` to create a new message.
 */
export const SqlInstancesImportRequestSchema: GenMessage<SqlInstancesImportRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 8);

/**
 * Instance insert request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesInsertRequest
 */
export type SqlInstancesInsertRequest = Message<"google.cloud.sql.v1.SqlInstancesInsertRequest"> & {
  /**
   * Project ID of the project to which the newly created Cloud SQL instances
   * should belong.
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * @generated from field: google.cloud.sql.v1.DatabaseInstance body = 100;
   */
  body?: DatabaseInstance;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesInsertRequest.
 * Use `create(SqlInstancesInsertRequestSchema)` to create a new message.
 */
export const SqlInstancesInsertRequestSchema: GenMessage<SqlInstancesInsertRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 9);

/**
 * Instance list request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesListRequest
 */
export type SqlInstancesListRequest = Message<"google.cloud.sql.v1.SqlInstancesListRequest"> & {
  /**
   * A filter expression that filters resources listed in the response.
   * The expression is in the form of field:value. For example,
   * 'instanceType:CLOUD_SQL_INSTANCE'. Fields can be nested as needed as per
   * their JSON representation, such as 'settings.userLabels.auto_start:true'.
   *
   * Multiple filter queries are space-separated. For example.
   * 'state:RUNNABLE instanceType:CLOUD_SQL_INSTANCE'. By default, each
   * expression is an AND expression. However, you can include AND and OR
   * expressions explicitly.
   *
   * @generated from field: string filter = 1;
   */
  filter: string;

  /**
   * The maximum number of instances to return. The service may return fewer
   * than this value.
   * If unspecified, at most 500 instances are returned.
   * The maximum value is 1000; values above 1000 are coerced to 1000.
   *
   * @generated from field: uint32 max_results = 2;
   */
  maxResults: number;

  /**
   * A previously-returned page token representing part of the larger set of
   * results to view.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Project ID of the project for which to list Cloud SQL instances.
   *
   * @generated from field: string project = 4;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesListRequest.
 * Use `create(SqlInstancesListRequestSchema)` to create a new message.
 */
export const SqlInstancesListRequestSchema: GenMessage<SqlInstancesListRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 10);

/**
 * Instance list server CAs request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesListServerCasRequest
 */
export type SqlInstancesListServerCasRequest = Message<"google.cloud.sql.v1.SqlInstancesListServerCasRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesListServerCasRequest.
 * Use `create(SqlInstancesListServerCasRequestSchema)` to create a new message.
 */
export const SqlInstancesListServerCasRequestSchema: GenMessage<SqlInstancesListServerCasRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 11);

/**
 * Instance patch request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesPatchRequest
 */
export type SqlInstancesPatchRequest = Message<"google.cloud.sql.v1.SqlInstancesPatchRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * @generated from field: google.cloud.sql.v1.DatabaseInstance body = 100;
   */
  body?: DatabaseInstance;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesPatchRequest.
 * Use `create(SqlInstancesPatchRequestSchema)` to create a new message.
 */
export const SqlInstancesPatchRequestSchema: GenMessage<SqlInstancesPatchRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 12);

/**
 * Instance promote replica request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesPromoteReplicaRequest
 */
export type SqlInstancesPromoteReplicaRequest = Message<"google.cloud.sql.v1.SqlInstancesPromoteReplicaRequest"> & {
  /**
   * Cloud SQL read replica instance name.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * ID of the project that contains the read replica.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * Set to true to invoke a replica failover to the designated DR
   * replica. As part of replica failover, the promote operation attempts
   * to add the original primary instance as a replica of the promoted
   * DR replica when the original primary instance comes back online.
   * If set to false or not specified, then the original primary
   * instance becomes an independent Cloud SQL primary instance.
   * Only applicable to MySQL.
   *
   * @generated from field: bool failover = 3;
   */
  failover: boolean;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesPromoteReplicaRequest.
 * Use `create(SqlInstancesPromoteReplicaRequestSchema)` to create a new message.
 */
export const SqlInstancesPromoteReplicaRequestSchema: GenMessage<SqlInstancesPromoteReplicaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 13);

/**
 * Instance switchover request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesSwitchoverRequest
 */
export type SqlInstancesSwitchoverRequest = Message<"google.cloud.sql.v1.SqlInstancesSwitchoverRequest"> & {
  /**
   * Cloud SQL read replica instance name.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * ID of the project that contains the replica.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * Optional. (MySQL only) Cloud SQL instance operations timeout, which is a
   * sum of all database operations. Default value is 10 minutes and can be
   * modified to a maximum value of 24 hours.
   *
   * @generated from field: google.protobuf.Duration db_timeout = 3;
   */
  dbTimeout?: Duration;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesSwitchoverRequest.
 * Use `create(SqlInstancesSwitchoverRequestSchema)` to create a new message.
 */
export const SqlInstancesSwitchoverRequestSchema: GenMessage<SqlInstancesSwitchoverRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 14);

/**
 * Instance reset SSL config request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesResetSslConfigRequest
 */
export type SqlInstancesResetSslConfigRequest = Message<"google.cloud.sql.v1.SqlInstancesResetSslConfigRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesResetSslConfigRequest.
 * Use `create(SqlInstancesResetSslConfigRequestSchema)` to create a new message.
 */
export const SqlInstancesResetSslConfigRequestSchema: GenMessage<SqlInstancesResetSslConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 15);

/**
 * Instance restart request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesRestartRequest
 */
export type SqlInstancesRestartRequest = Message<"google.cloud.sql.v1.SqlInstancesRestartRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance to be restarted.
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesRestartRequest.
 * Use `create(SqlInstancesRestartRequestSchema)` to create a new message.
 */
export const SqlInstancesRestartRequestSchema: GenMessage<SqlInstancesRestartRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 16);

/**
 * Instance restore backup request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesRestoreBackupRequest
 */
export type SqlInstancesRestoreBackupRequest = Message<"google.cloud.sql.v1.SqlInstancesRestoreBackupRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * @generated from field: google.cloud.sql.v1.InstancesRestoreBackupRequest body = 100;
   */
  body?: InstancesRestoreBackupRequest;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesRestoreBackupRequest.
 * Use `create(SqlInstancesRestoreBackupRequestSchema)` to create a new message.
 */
export const SqlInstancesRestoreBackupRequestSchema: GenMessage<SqlInstancesRestoreBackupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 17);

/**
 * Instance rotate server CA request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesRotateServerCaRequest
 */
export type SqlInstancesRotateServerCaRequest = Message<"google.cloud.sql.v1.SqlInstancesRotateServerCaRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * @generated from field: google.cloud.sql.v1.InstancesRotateServerCaRequest body = 100;
   */
  body?: InstancesRotateServerCaRequest;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesRotateServerCaRequest.
 * Use `create(SqlInstancesRotateServerCaRequestSchema)` to create a new message.
 */
export const SqlInstancesRotateServerCaRequestSchema: GenMessage<SqlInstancesRotateServerCaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 18);

/**
 * Instance start replica request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesStartReplicaRequest
 */
export type SqlInstancesStartReplicaRequest = Message<"google.cloud.sql.v1.SqlInstancesStartReplicaRequest"> & {
  /**
   * Cloud SQL read replica instance name.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * ID of the project that contains the read replica.
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesStartReplicaRequest.
 * Use `create(SqlInstancesStartReplicaRequestSchema)` to create a new message.
 */
export const SqlInstancesStartReplicaRequestSchema: GenMessage<SqlInstancesStartReplicaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 19);

/**
 * Instance stop replica request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesStopReplicaRequest
 */
export type SqlInstancesStopReplicaRequest = Message<"google.cloud.sql.v1.SqlInstancesStopReplicaRequest"> & {
  /**
   * Cloud SQL read replica instance name.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * ID of the project that contains the read replica.
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesStopReplicaRequest.
 * Use `create(SqlInstancesStopReplicaRequestSchema)` to create a new message.
 */
export const SqlInstancesStopReplicaRequestSchema: GenMessage<SqlInstancesStopReplicaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 20);

/**
 * Instance truncate log request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesTruncateLogRequest
 */
export type SqlInstancesTruncateLogRequest = Message<"google.cloud.sql.v1.SqlInstancesTruncateLogRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the Cloud SQL project.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * @generated from field: google.cloud.sql.v1.InstancesTruncateLogRequest body = 100;
   */
  body?: InstancesTruncateLogRequest;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesTruncateLogRequest.
 * Use `create(SqlInstancesTruncateLogRequestSchema)` to create a new message.
 */
export const SqlInstancesTruncateLogRequestSchema: GenMessage<SqlInstancesTruncateLogRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 21);

/**
 * Instance perform disk shrink request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesPerformDiskShrinkRequest
 */
export type SqlInstancesPerformDiskShrinkRequest = Message<"google.cloud.sql.v1.SqlInstancesPerformDiskShrinkRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * Perform disk shrink context.
   *
   * @generated from field: google.cloud.sql.v1.PerformDiskShrinkContext body = 100;
   */
  body?: PerformDiskShrinkContext;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesPerformDiskShrinkRequest.
 * Use `create(SqlInstancesPerformDiskShrinkRequestSchema)` to create a new message.
 */
export const SqlInstancesPerformDiskShrinkRequestSchema: GenMessage<SqlInstancesPerformDiskShrinkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 22);

/**
 * Instance update request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesUpdateRequest
 */
export type SqlInstancesUpdateRequest = Message<"google.cloud.sql.v1.SqlInstancesUpdateRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * @generated from field: google.cloud.sql.v1.DatabaseInstance body = 100;
   */
  body?: DatabaseInstance;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesUpdateRequest.
 * Use `create(SqlInstancesUpdateRequestSchema)` to create a new message.
 */
export const SqlInstancesUpdateRequestSchema: GenMessage<SqlInstancesUpdateRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 23);

/**
 * Instance reschedule maintenance request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesRescheduleMaintenanceRequest
 */
export type SqlInstancesRescheduleMaintenanceRequest = Message<"google.cloud.sql.v1.SqlInstancesRescheduleMaintenanceRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * @generated from field: google.cloud.sql.v1.SqlInstancesRescheduleMaintenanceRequestBody body = 100;
   */
  body?: SqlInstancesRescheduleMaintenanceRequestBody;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesRescheduleMaintenanceRequest.
 * Use `create(SqlInstancesRescheduleMaintenanceRequestSchema)` to create a new message.
 */
export const SqlInstancesRescheduleMaintenanceRequestSchema: GenMessage<SqlInstancesRescheduleMaintenanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 24);

/**
 * Instance reencrypt request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesReencryptRequest
 */
export type SqlInstancesReencryptRequest = Message<"google.cloud.sql.v1.SqlInstancesReencryptRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * Reencrypt body that users request
   *
   * @generated from field: google.cloud.sql.v1.InstancesReencryptRequest body = 3;
   */
  body?: InstancesReencryptRequest;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesReencryptRequest.
 * Use `create(SqlInstancesReencryptRequestSchema)` to create a new message.
 */
export const SqlInstancesReencryptRequestSchema: GenMessage<SqlInstancesReencryptRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 25);

/**
 * Database Instance reencrypt request.
 *
 * @generated from message google.cloud.sql.v1.InstancesReencryptRequest
 */
export type InstancesReencryptRequest = Message<"google.cloud.sql.v1.InstancesReencryptRequest"> & {
  /**
   * Configuration specific to backup re-encryption
   *
   * @generated from field: optional google.cloud.sql.v1.BackupReencryptionConfig backup_reencryption_config = 1;
   */
  backupReencryptionConfig?: BackupReencryptionConfig;
};

/**
 * Describes the message google.cloud.sql.v1.InstancesReencryptRequest.
 * Use `create(InstancesReencryptRequestSchema)` to create a new message.
 */
export const InstancesReencryptRequestSchema: GenMessage<InstancesReencryptRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 26);

/**
 * Backup Reencryption Config
 *
 * @generated from message google.cloud.sql.v1.BackupReencryptionConfig
 */
export type BackupReencryptionConfig = Message<"google.cloud.sql.v1.BackupReencryptionConfig"> & {
  /**
   * Backup re-encryption limit
   *
   * @generated from field: optional int32 backup_limit = 1;
   */
  backupLimit?: number;

  /**
   * Type of backups users want to re-encrypt.
   *
   * @generated from field: optional google.cloud.sql.v1.BackupReencryptionConfig.BackupType backup_type = 2;
   */
  backupType?: BackupReencryptionConfig_BackupType;
};

/**
 * Describes the message google.cloud.sql.v1.BackupReencryptionConfig.
 * Use `create(BackupReencryptionConfigSchema)` to create a new message.
 */
export const BackupReencryptionConfigSchema: GenMessage<BackupReencryptionConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 27);

/**
 * Backup type for re-encryption
 *
 * @generated from enum google.cloud.sql.v1.BackupReencryptionConfig.BackupType
 */
export enum BackupReencryptionConfig_BackupType {
  /**
   * Unknown backup type, will be defaulted to AUTOMATIC backup type
   *
   * @generated from enum value: BACKUP_TYPE_UNSPECIFIED = 0;
   */
  BACKUP_TYPE_UNSPECIFIED = 0,

  /**
   * Reencrypt automatic backups
   *
   * @generated from enum value: AUTOMATED = 1;
   */
  AUTOMATED = 1,

  /**
   * Reencrypt on-demand backups
   *
   * @generated from enum value: ON_DEMAND = 2;
   */
  ON_DEMAND = 2,
}

/**
 * Describes the enum google.cloud.sql.v1.BackupReencryptionConfig.BackupType.
 */
export const BackupReencryptionConfig_BackupTypeSchema: GenEnum<BackupReencryptionConfig_BackupType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_instances, 27, 0);

/**
 * Instance get disk shrink config request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesGetDiskShrinkConfigRequest
 */
export type SqlInstancesGetDiskShrinkConfigRequest = Message<"google.cloud.sql.v1.SqlInstancesGetDiskShrinkConfigRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesGetDiskShrinkConfigRequest.
 * Use `create(SqlInstancesGetDiskShrinkConfigRequestSchema)` to create a new message.
 */
export const SqlInstancesGetDiskShrinkConfigRequestSchema: GenMessage<SqlInstancesGetDiskShrinkConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 28);

/**
 * Instance verify external sync settings request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesVerifyExternalSyncSettingsRequest
 */
export type SqlInstancesVerifyExternalSyncSettingsRequest = Message<"google.cloud.sql.v1.SqlInstancesVerifyExternalSyncSettingsRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * Flag to enable verifying connection only
   *
   * @generated from field: bool verify_connection_only = 3;
   */
  verifyConnectionOnly: boolean;

  /**
   * External sync mode
   *
   * @generated from field: google.cloud.sql.v1.SqlInstancesVerifyExternalSyncSettingsRequest.ExternalSyncMode sync_mode = 4;
   */
  syncMode: SqlInstancesVerifyExternalSyncSettingsRequest_ExternalSyncMode;

  /**
   * Optional. Flag to verify settings required by replication setup only
   *
   * @generated from field: bool verify_replication_only = 5;
   */
  verifyReplicationOnly: boolean;

  /**
   * @generated from oneof google.cloud.sql.v1.SqlInstancesVerifyExternalSyncSettingsRequest.sync_config
   */
  syncConfig: {
    /**
     * Optional. MySQL-specific settings for start external sync.
     *
     * @generated from field: google.cloud.sql.v1.MySqlSyncConfig mysql_sync_config = 6;
     */
    value: MySqlSyncConfig;
    case: "mysqlSyncConfig";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. MigrationType configures the migration to use physical files or
   * logical dump files. If not set, then the logical dump file configuration is
   * used. Valid values are `LOGICAL` or `PHYSICAL`. Only applicable to MySQL.
   *
   * @generated from field: google.cloud.sql.v1.SqlInstancesVerifyExternalSyncSettingsRequest.MigrationType migration_type = 7;
   */
  migrationType: SqlInstancesVerifyExternalSyncSettingsRequest_MigrationType;

  /**
   * Optional. Parallel level for initial data sync. Only applicable for
   * PostgreSQL.
   *
   * @generated from field: google.cloud.sql.v1.ExternalSyncParallelLevel sync_parallel_level = 8;
   */
  syncParallelLevel: ExternalSyncParallelLevel;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesVerifyExternalSyncSettingsRequest.
 * Use `create(SqlInstancesVerifyExternalSyncSettingsRequestSchema)` to create a new message.
 */
export const SqlInstancesVerifyExternalSyncSettingsRequestSchema: GenMessage<SqlInstancesVerifyExternalSyncSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 29);

/**
 * @generated from enum google.cloud.sql.v1.SqlInstancesVerifyExternalSyncSettingsRequest.ExternalSyncMode
 */
export enum SqlInstancesVerifyExternalSyncSettingsRequest_ExternalSyncMode {
  /**
   * Unknown external sync mode, will be defaulted to ONLINE mode
   *
   * @generated from enum value: EXTERNAL_SYNC_MODE_UNSPECIFIED = 0;
   */
  EXTERNAL_SYNC_MODE_UNSPECIFIED = 0,

  /**
   * Online external sync will set up replication after initial data external
   * sync
   *
   * @generated from enum value: ONLINE = 1;
   */
  ONLINE = 1,

  /**
   * Offline external sync only dumps and loads a one-time snapshot of
   * the primary instance's data
   *
   * @generated from enum value: OFFLINE = 2;
   */
  OFFLINE = 2,
}

/**
 * Describes the enum google.cloud.sql.v1.SqlInstancesVerifyExternalSyncSettingsRequest.ExternalSyncMode.
 */
export const SqlInstancesVerifyExternalSyncSettingsRequest_ExternalSyncModeSchema: GenEnum<SqlInstancesVerifyExternalSyncSettingsRequest_ExternalSyncMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_instances, 29, 0);

/**
 * MigrationType determines whether the migration is a physical file-based
 * migration or a logical dump file-based migration.
 *
 * @generated from enum google.cloud.sql.v1.SqlInstancesVerifyExternalSyncSettingsRequest.MigrationType
 */
export enum SqlInstancesVerifyExternalSyncSettingsRequest_MigrationType {
  /**
   * Default value is a logical dump file-based migration
   *
   * @generated from enum value: MIGRATION_TYPE_UNSPECIFIED = 0;
   */
  MIGRATION_TYPE_UNSPECIFIED = 0,

  /**
   * Logical dump file-based migration
   *
   * @generated from enum value: LOGICAL = 1;
   */
  LOGICAL = 1,

  /**
   * Physical file-based migration
   *
   * @generated from enum value: PHYSICAL = 2;
   */
  PHYSICAL = 2,
}

/**
 * Describes the enum google.cloud.sql.v1.SqlInstancesVerifyExternalSyncSettingsRequest.MigrationType.
 */
export const SqlInstancesVerifyExternalSyncSettingsRequest_MigrationTypeSchema: GenEnum<SqlInstancesVerifyExternalSyncSettingsRequest_MigrationType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_instances, 29, 1);

/**
 * Instance start external sync request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesStartExternalSyncRequest
 */
export type SqlInstancesStartExternalSyncRequest = Message<"google.cloud.sql.v1.SqlInstancesStartExternalSyncRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * External sync mode.
   *
   * @generated from field: google.cloud.sql.v1.SqlInstancesVerifyExternalSyncSettingsRequest.ExternalSyncMode sync_mode = 3;
   */
  syncMode: SqlInstancesVerifyExternalSyncSettingsRequest_ExternalSyncMode;

  /**
   * Whether to skip the verification step (VESS).
   *
   * @generated from field: bool skip_verification = 4;
   */
  skipVerification: boolean;

  /**
   * @generated from oneof google.cloud.sql.v1.SqlInstancesStartExternalSyncRequest.sync_config
   */
  syncConfig: {
    /**
     * MySQL-specific settings for start external sync.
     *
     * @generated from field: google.cloud.sql.v1.MySqlSyncConfig mysql_sync_config = 6;
     */
    value: MySqlSyncConfig;
    case: "mysqlSyncConfig";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. Parallel level for initial data sync. Currently only applicable
   * for MySQL.
   *
   * @generated from field: google.cloud.sql.v1.ExternalSyncParallelLevel sync_parallel_level = 7;
   */
  syncParallelLevel: ExternalSyncParallelLevel;

  /**
   * Optional. MigrationType configures the migration to use physical files or
   * logical dump files. If not set, then the logical dump file configuration is
   * used. Valid values are `LOGICAL` or `PHYSICAL`. Only applicable to MySQL.
   *
   * @generated from field: google.cloud.sql.v1.SqlInstancesVerifyExternalSyncSettingsRequest.MigrationType migration_type = 8;
   */
  migrationType: SqlInstancesVerifyExternalSyncSettingsRequest_MigrationType;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesStartExternalSyncRequest.
 * Use `create(SqlInstancesStartExternalSyncRequestSchema)` to create a new message.
 */
export const SqlInstancesStartExternalSyncRequestSchema: GenMessage<SqlInstancesStartExternalSyncRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 30);

/**
 * Instance reset replica size request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesResetReplicaSizeRequest
 */
export type SqlInstancesResetReplicaSizeRequest = Message<"google.cloud.sql.v1.SqlInstancesResetReplicaSizeRequest"> & {
  /**
   * Cloud SQL read replica instance name.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * ID of the project that contains the read replica.
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesResetReplicaSizeRequest.
 * Use `create(SqlInstancesResetReplicaSizeRequestSchema)` to create a new message.
 */
export const SqlInstancesResetReplicaSizeRequestSchema: GenMessage<SqlInstancesResetReplicaSizeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 31);

/**
 * Instance create ephemeral certificate request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesCreateEphemeralCertRequest
 */
export type SqlInstancesCreateEphemeralCertRequest = Message<"google.cloud.sql.v1.SqlInstancesCreateEphemeralCertRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the Cloud SQL project.
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * @generated from field: google.cloud.sql.v1.SslCertsCreateEphemeralRequest body = 100;
   */
  body?: SslCertsCreateEphemeralRequest;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesCreateEphemeralCertRequest.
 * Use `create(SqlInstancesCreateEphemeralCertRequestSchema)` to create a new message.
 */
export const SqlInstancesCreateEphemeralCertRequestSchema: GenMessage<SqlInstancesCreateEphemeralCertRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 32);

/**
 * Database instance clone request.
 *
 * @generated from message google.cloud.sql.v1.InstancesCloneRequest
 */
export type InstancesCloneRequest = Message<"google.cloud.sql.v1.InstancesCloneRequest"> & {
  /**
   * Contains details about the clone operation.
   *
   * @generated from field: google.cloud.sql.v1.CloneContext clone_context = 1;
   */
  cloneContext?: CloneContext;
};

/**
 * Describes the message google.cloud.sql.v1.InstancesCloneRequest.
 * Use `create(InstancesCloneRequestSchema)` to create a new message.
 */
export const InstancesCloneRequestSchema: GenMessage<InstancesCloneRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 33);

/**
 * Database demote primary instance request.
 *
 * @generated from message google.cloud.sql.v1.InstancesDemoteMasterRequest
 */
export type InstancesDemoteMasterRequest = Message<"google.cloud.sql.v1.InstancesDemoteMasterRequest"> & {
  /**
   * Contains details about the demoteMaster operation.
   *
   * @generated from field: google.cloud.sql.v1.DemoteMasterContext demote_master_context = 1;
   */
  demoteMasterContext?: DemoteMasterContext;
};

/**
 * Describes the message google.cloud.sql.v1.InstancesDemoteMasterRequest.
 * Use `create(InstancesDemoteMasterRequestSchema)` to create a new message.
 */
export const InstancesDemoteMasterRequestSchema: GenMessage<InstancesDemoteMasterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 34);

/**
 * This request is used to demote an existing standalone instance to be a
 * Cloud SQL read replica for an external database server.
 *
 * @generated from message google.cloud.sql.v1.InstancesDemoteRequest
 */
export type InstancesDemoteRequest = Message<"google.cloud.sql.v1.InstancesDemoteRequest"> & {
  /**
   * Required. Contains details about the demote operation.
   *
   * @generated from field: google.cloud.sql.v1.DemoteContext demote_context = 1;
   */
  demoteContext?: DemoteContext;
};

/**
 * Describes the message google.cloud.sql.v1.InstancesDemoteRequest.
 * Use `create(InstancesDemoteRequestSchema)` to create a new message.
 */
export const InstancesDemoteRequestSchema: GenMessage<InstancesDemoteRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 35);

/**
 * Database instance export request.
 *
 * @generated from message google.cloud.sql.v1.InstancesExportRequest
 */
export type InstancesExportRequest = Message<"google.cloud.sql.v1.InstancesExportRequest"> & {
  /**
   * Contains details about the export operation.
   *
   * @generated from field: google.cloud.sql.v1.ExportContext export_context = 1;
   */
  exportContext?: ExportContext;
};

/**
 * Describes the message google.cloud.sql.v1.InstancesExportRequest.
 * Use `create(InstancesExportRequestSchema)` to create a new message.
 */
export const InstancesExportRequestSchema: GenMessage<InstancesExportRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 36);

/**
 * Instance failover request.
 *
 * @generated from message google.cloud.sql.v1.InstancesFailoverRequest
 */
export type InstancesFailoverRequest = Message<"google.cloud.sql.v1.InstancesFailoverRequest"> & {
  /**
   * Failover Context.
   *
   * @generated from field: google.cloud.sql.v1.FailoverContext failover_context = 1;
   */
  failoverContext?: FailoverContext;
};

/**
 * Describes the message google.cloud.sql.v1.InstancesFailoverRequest.
 * Use `create(InstancesFailoverRequestSchema)` to create a new message.
 */
export const InstancesFailoverRequestSchema: GenMessage<InstancesFailoverRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 37);

/**
 * SslCerts create ephemeral certificate request.
 *
 * @generated from message google.cloud.sql.v1.SslCertsCreateEphemeralRequest
 */
export type SslCertsCreateEphemeralRequest = Message<"google.cloud.sql.v1.SslCertsCreateEphemeralRequest"> & {
  /**
   * PEM encoded public key to include in the signed certificate.
   *
   * @generated from field: string public_key = 1;
   */
  publicKey: string;

  /**
   * Access token to include in the signed certificate.
   *
   * @generated from field: string access_token = 2;
   */
  accessToken: string;
};

/**
 * Describes the message google.cloud.sql.v1.SslCertsCreateEphemeralRequest.
 * Use `create(SslCertsCreateEphemeralRequestSchema)` to create a new message.
 */
export const SslCertsCreateEphemeralRequestSchema: GenMessage<SslCertsCreateEphemeralRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 38);

/**
 * Database instance import request.
 *
 * @generated from message google.cloud.sql.v1.InstancesImportRequest
 */
export type InstancesImportRequest = Message<"google.cloud.sql.v1.InstancesImportRequest"> & {
  /**
   * Contains details about the import operation.
   *
   * @generated from field: google.cloud.sql.v1.ImportContext import_context = 1;
   */
  importContext?: ImportContext;
};

/**
 * Describes the message google.cloud.sql.v1.InstancesImportRequest.
 * Use `create(InstancesImportRequestSchema)` to create a new message.
 */
export const InstancesImportRequestSchema: GenMessage<InstancesImportRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 39);

/**
 * Database instances list response.
 *
 * @generated from message google.cloud.sql.v1.InstancesListResponse
 */
export type InstancesListResponse = Message<"google.cloud.sql.v1.InstancesListResponse"> & {
  /**
   * This is always `sql#instancesList`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * List of warnings that occurred while handling the request.
   *
   * @generated from field: repeated google.cloud.sql.v1.ApiWarning warnings = 2;
   */
  warnings: ApiWarning[];

  /**
   * List of database instance resources.
   *
   * @generated from field: repeated google.cloud.sql.v1.DatabaseInstance items = 3;
   */
  items: DatabaseInstance[];

  /**
   * The continuation token, used to page through large result sets. Provide
   * this value in a subsequent request to return the next page of results.
   *
   * @generated from field: string next_page_token = 4;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.sql.v1.InstancesListResponse.
 * Use `create(InstancesListResponseSchema)` to create a new message.
 */
export const InstancesListResponseSchema: GenMessage<InstancesListResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 40);

/**
 * Instances ListServerCas response.
 *
 * @generated from message google.cloud.sql.v1.InstancesListServerCasResponse
 */
export type InstancesListServerCasResponse = Message<"google.cloud.sql.v1.InstancesListServerCasResponse"> & {
  /**
   * List of server CA certificates for the instance.
   *
   * @generated from field: repeated google.cloud.sql.v1.SslCert certs = 1;
   */
  certs: SslCert[];

  /**
   * @generated from field: string active_version = 2;
   */
  activeVersion: string;

  /**
   * This is always `sql#instancesListServerCas`.
   *
   * @generated from field: string kind = 3;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1.InstancesListServerCasResponse.
 * Use `create(InstancesListServerCasResponseSchema)` to create a new message.
 */
export const InstancesListServerCasResponseSchema: GenMessage<InstancesListServerCasResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 41);

/**
 * Database instance restore backup request.
 *
 * @generated from message google.cloud.sql.v1.InstancesRestoreBackupRequest
 */
export type InstancesRestoreBackupRequest = Message<"google.cloud.sql.v1.InstancesRestoreBackupRequest"> & {
  /**
   * Parameters required to perform the restore backup operation.
   *
   * @generated from field: google.cloud.sql.v1.RestoreBackupContext restore_backup_context = 1;
   */
  restoreBackupContext?: RestoreBackupContext;
};

/**
 * Describes the message google.cloud.sql.v1.InstancesRestoreBackupRequest.
 * Use `create(InstancesRestoreBackupRequestSchema)` to create a new message.
 */
export const InstancesRestoreBackupRequestSchema: GenMessage<InstancesRestoreBackupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 42);

/**
 * Rotate server CA request.
 *
 * @generated from message google.cloud.sql.v1.InstancesRotateServerCaRequest
 */
export type InstancesRotateServerCaRequest = Message<"google.cloud.sql.v1.InstancesRotateServerCaRequest"> & {
  /**
   * Contains details about the rotate server CA operation.
   *
   * @generated from field: google.cloud.sql.v1.RotateServerCaContext rotate_server_ca_context = 1;
   */
  rotateServerCaContext?: RotateServerCaContext;
};

/**
 * Describes the message google.cloud.sql.v1.InstancesRotateServerCaRequest.
 * Use `create(InstancesRotateServerCaRequestSchema)` to create a new message.
 */
export const InstancesRotateServerCaRequestSchema: GenMessage<InstancesRotateServerCaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 43);

/**
 * Instance truncate log request.
 *
 * @generated from message google.cloud.sql.v1.InstancesTruncateLogRequest
 */
export type InstancesTruncateLogRequest = Message<"google.cloud.sql.v1.InstancesTruncateLogRequest"> & {
  /**
   * Contains details about the truncate log operation.
   *
   * @generated from field: google.cloud.sql.v1.TruncateLogContext truncate_log_context = 1;
   */
  truncateLogContext?: TruncateLogContext;
};

/**
 * Describes the message google.cloud.sql.v1.InstancesTruncateLogRequest.
 * Use `create(InstancesTruncateLogRequestSchema)` to create a new message.
 */
export const InstancesTruncateLogRequestSchema: GenMessage<InstancesTruncateLogRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 44);

/**
 * Request to acquire a lease for SSRS.
 *
 * @generated from message google.cloud.sql.v1.InstancesAcquireSsrsLeaseRequest
 */
export type InstancesAcquireSsrsLeaseRequest = Message<"google.cloud.sql.v1.InstancesAcquireSsrsLeaseRequest"> & {
  /**
   * Contains details about the acquire SSRS lease operation.
   *
   * @generated from field: google.cloud.sql.v1.AcquireSsrsLeaseContext acquire_ssrs_lease_context = 1;
   */
  acquireSsrsLeaseContext?: AcquireSsrsLeaseContext;
};

/**
 * Describes the message google.cloud.sql.v1.InstancesAcquireSsrsLeaseRequest.
 * Use `create(InstancesAcquireSsrsLeaseRequestSchema)` to create a new message.
 */
export const InstancesAcquireSsrsLeaseRequestSchema: GenMessage<InstancesAcquireSsrsLeaseRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 45);

/**
 * Instance verify external sync settings response.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesVerifyExternalSyncSettingsResponse
 */
export type SqlInstancesVerifyExternalSyncSettingsResponse = Message<"google.cloud.sql.v1.SqlInstancesVerifyExternalSyncSettingsResponse"> & {
  /**
   * This is always `sql#migrationSettingErrorList`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * List of migration violations.
   *
   * @generated from field: repeated google.cloud.sql.v1.SqlExternalSyncSettingError errors = 2;
   */
  errors: SqlExternalSyncSettingError[];

  /**
   * List of migration warnings.
   *
   * @generated from field: repeated google.cloud.sql.v1.SqlExternalSyncSettingError warnings = 3;
   */
  warnings: SqlExternalSyncSettingError[];
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesVerifyExternalSyncSettingsResponse.
 * Use `create(SqlInstancesVerifyExternalSyncSettingsResponseSchema)` to create a new message.
 */
export const SqlInstancesVerifyExternalSyncSettingsResponseSchema: GenMessage<SqlInstancesVerifyExternalSyncSettingsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 46);

/**
 * Instance get disk shrink config response.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesGetDiskShrinkConfigResponse
 */
export type SqlInstancesGetDiskShrinkConfigResponse = Message<"google.cloud.sql.v1.SqlInstancesGetDiskShrinkConfigResponse"> & {
  /**
   * This is always `sql#getDiskShrinkConfig`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The minimum size to which a disk can be shrunk in GigaBytes.
   *
   * @generated from field: int64 minimal_target_size_gb = 2;
   */
  minimalTargetSizeGb: bigint;

  /**
   * Additional message to customers.
   *
   * @generated from field: string message = 3;
   */
  message: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesGetDiskShrinkConfigResponse.
 * Use `create(SqlInstancesGetDiskShrinkConfigResponseSchema)` to create a new message.
 */
export const SqlInstancesGetDiskShrinkConfigResponseSchema: GenMessage<SqlInstancesGetDiskShrinkConfigResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 47);

/**
 * Instance get latest recovery time request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesGetLatestRecoveryTimeRequest
 */
export type SqlInstancesGetLatestRecoveryTimeRequest = Message<"google.cloud.sql.v1.SqlInstancesGetLatestRecoveryTimeRequest"> & {
  /**
   * Cloud SQL instance ID. This does not include the project ID.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Project ID of the project that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesGetLatestRecoveryTimeRequest.
 * Use `create(SqlInstancesGetLatestRecoveryTimeRequestSchema)` to create a new message.
 */
export const SqlInstancesGetLatestRecoveryTimeRequestSchema: GenMessage<SqlInstancesGetLatestRecoveryTimeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 48);

/**
 * Instance get latest recovery time response.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesGetLatestRecoveryTimeResponse
 */
export type SqlInstancesGetLatestRecoveryTimeResponse = Message<"google.cloud.sql.v1.SqlInstancesGetLatestRecoveryTimeResponse"> & {
  /**
   * This is always `sql#getLatestRecoveryTime`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Timestamp, identifies the latest recovery time of the source instance.
   *
   * @generated from field: google.protobuf.Timestamp latest_recovery_time = 2;
   */
  latestRecoveryTime?: Timestamp;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesGetLatestRecoveryTimeResponse.
 * Use `create(SqlInstancesGetLatestRecoveryTimeResponseSchema)` to create a new message.
 */
export const SqlInstancesGetLatestRecoveryTimeResponseSchema: GenMessage<SqlInstancesGetLatestRecoveryTimeResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 49);

/**
 * Database instance clone context.
 *
 * @generated from message google.cloud.sql.v1.CloneContext
 */
export type CloneContext = Message<"google.cloud.sql.v1.CloneContext"> & {
  /**
   * This is always `sql#cloneContext`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Reserved for future use.
   *
   * @generated from field: int64 pitr_timestamp_ms = 2;
   */
  pitrTimestampMs: bigint;

  /**
   * Name of the Cloud SQL instance to be created as a clone.
   *
   * @generated from field: string destination_instance_name = 3;
   */
  destinationInstanceName: string;

  /**
   * Binary log coordinates, if specified, identify the position up to which the
   * source instance is cloned. If not specified, the source instance is
   * cloned up to the most recent binary log coordinates.
   *
   * @generated from field: google.cloud.sql.v1.BinLogCoordinates bin_log_coordinates = 4;
   */
  binLogCoordinates?: BinLogCoordinates;

  /**
   * Timestamp, if specified, identifies the time to which the source instance
   * is cloned.
   *
   * @generated from field: google.protobuf.Timestamp point_in_time = 5;
   */
  pointInTime?: Timestamp;

  /**
   * The name of the allocated ip range for the private ip Cloud SQL instance.
   * For example: "google-managed-services-default". If set, the cloned instance
   * ip will be created in the allocated range. The range name must comply with
   * [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name
   * must be 1-63 characters long and match the regular expression
   * [a-z]([-a-z0-9]*[a-z0-9])?.
   * Reserved for future use.
   *
   * @generated from field: string allocated_ip_range = 6;
   */
  allocatedIpRange: string;

  /**
   * (SQL Server only) Clone only the specified databases from the source
   * instance. Clone all databases if empty.
   *
   * @generated from field: repeated string database_names = 9;
   */
  databaseNames: string[];

  /**
   * Optional. Copy clone and point-in-time recovery clone of an instance to the
   * specified zone. If no zone is specified, clone to the same primary zone as
   * the source instance. This field applies to all DB types.
   *
   * @generated from field: optional string preferred_zone = 10;
   */
  preferredZone?: string;
};

/**
 * Describes the message google.cloud.sql.v1.CloneContext.
 * Use `create(CloneContextSchema)` to create a new message.
 */
export const CloneContextSchema: GenMessage<CloneContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 50);

/**
 * Binary log coordinates.
 *
 * @generated from message google.cloud.sql.v1.BinLogCoordinates
 */
export type BinLogCoordinates = Message<"google.cloud.sql.v1.BinLogCoordinates"> & {
  /**
   * Name of the binary log file for a Cloud SQL instance.
   *
   * @generated from field: string bin_log_file_name = 1;
   */
  binLogFileName: string;

  /**
   * Position (offset) within the binary log file.
   *
   * @generated from field: int64 bin_log_position = 2;
   */
  binLogPosition: bigint;

  /**
   * This is always `sql#binLogCoordinates`.
   *
   * @generated from field: string kind = 3;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1.BinLogCoordinates.
 * Use `create(BinLogCoordinatesSchema)` to create a new message.
 */
export const BinLogCoordinatesSchema: GenMessage<BinLogCoordinates> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 51);

/**
 * A Cloud SQL instance resource.
 *
 * @generated from message google.cloud.sql.v1.DatabaseInstance
 */
export type DatabaseInstance = Message<"google.cloud.sql.v1.DatabaseInstance"> & {
  /**
   * This is always `sql#instance`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The current serving state of the Cloud SQL instance.
   *
   * @generated from field: google.cloud.sql.v1.DatabaseInstance.SqlInstanceState state = 2;
   */
  state: DatabaseInstance_SqlInstanceState;

  /**
   * The database engine type and version. The `databaseVersion` field cannot
   * be changed after instance creation.
   *
   * @generated from field: google.cloud.sql.v1.SqlDatabaseVersion database_version = 3;
   */
  databaseVersion: SqlDatabaseVersion;

  /**
   * The user settings.
   *
   * @generated from field: google.cloud.sql.v1.Settings settings = 4;
   */
  settings?: Settings;

  /**
   * This field is deprecated and will be removed from a future version of the
   * API. Use the `settings.settingsVersion` field instead.
   *
   * @generated from field: string etag = 5;
   */
  etag: string;

  /**
   * The name and status of the failover replica.
   *
   * @generated from field: google.cloud.sql.v1.DatabaseInstance.SqlFailoverReplica failover_replica = 6;
   */
  failoverReplica?: DatabaseInstance_SqlFailoverReplica;

  /**
   * The name of the instance which will act as primary in the replication
   * setup.
   *
   * @generated from field: string master_instance_name = 7;
   */
  masterInstanceName: string;

  /**
   * The replicas of the instance.
   *
   * @generated from field: repeated string replica_names = 8;
   */
  replicaNames: string[];

  /**
   * The maximum disk size of the instance in bytes.
   *
   * @generated from field: google.protobuf.Int64Value max_disk_size = 9 [deprecated = true];
   * @deprecated
   */
  maxDiskSize?: bigint;

  /**
   * The current disk usage of the instance in bytes. This property has been
   * deprecated. Use the
   * "cloudsql.googleapis.com/database/disk/bytes_used" metric in Cloud
   * Monitoring API instead. Please see [this
   * announcement](https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ)
   * for details.
   *
   * @generated from field: google.protobuf.Int64Value current_disk_size = 10 [deprecated = true];
   * @deprecated
   */
  currentDiskSize?: bigint;

  /**
   * The assigned IP addresses for the instance.
   *
   * @generated from field: repeated google.cloud.sql.v1.IpMapping ip_addresses = 11;
   */
  ipAddresses: IpMapping[];

  /**
   * SSL configuration.
   *
   * @generated from field: google.cloud.sql.v1.SslCert server_ca_cert = 12;
   */
  serverCaCert?: SslCert;

  /**
   * The instance type.
   *
   * @generated from field: google.cloud.sql.v1.SqlInstanceType instance_type = 13;
   */
  instanceType: SqlInstanceType;

  /**
   * The project ID of the project containing the Cloud SQL instance. The Google
   * apps domain is prefixed if applicable.
   *
   * @generated from field: string project = 14;
   */
  project: string;

  /**
   * The IPv6 address assigned to the instance.
   * (Deprecated) This property was applicable only
   * to First Generation instances.
   *
   * @generated from field: string ipv6_address = 15 [deprecated = true];
   * @deprecated
   */
  ipv6Address: string;

  /**
   * The service account email address assigned to the instance.\This
   * property is read-only.
   *
   * @generated from field: string service_account_email_address = 16;
   */
  serviceAccountEmailAddress: string;

  /**
   * Configuration specific to on-premises instances.
   *
   * @generated from field: google.cloud.sql.v1.OnPremisesConfiguration on_premises_configuration = 17;
   */
  onPremisesConfiguration?: OnPremisesConfiguration;

  /**
   * Configuration specific to failover replicas and read replicas.
   *
   * @generated from field: google.cloud.sql.v1.ReplicaConfiguration replica_configuration = 18;
   */
  replicaConfiguration?: ReplicaConfiguration;

  /**
   * The backend type.
   * `SECOND_GEN`: Cloud SQL database instance.
   * `EXTERNAL`: A database server that is not managed by Google.
   *
   * This property is read-only; use the `tier` property in the `settings`
   * object to determine the database type.
   *
   * @generated from field: google.cloud.sql.v1.SqlBackendType backend_type = 19;
   */
  backendType: SqlBackendType;

  /**
   * The URI of this resource.
   *
   * @generated from field: string self_link = 20;
   */
  selfLink: string;

  /**
   * If the instance state is SUSPENDED, the reason for the suspension.
   *
   * @generated from field: repeated google.cloud.sql.v1.SqlSuspensionReason suspension_reason = 21;
   */
  suspensionReason: SqlSuspensionReason[];

  /**
   * Connection name of the Cloud SQL instance used in connection strings.
   *
   * @generated from field: string connection_name = 22;
   */
  connectionName: string;

  /**
   * Name of the Cloud SQL instance. This does not include the project ID.
   *
   * @generated from field: string name = 23;
   */
  name: string;

  /**
   * The geographical region of the Cloud SQL instance.
   *
   * It can be one of the
   * [regions](https://cloud.google.com/sql/docs/mysql/locations#location-r)
   * where Cloud SQL operates:
   *
   * For example,  `asia-east1`, `europe-west1`, and  `us-central1`.
   * The default value is `us-central1`.
   *
   * @generated from field: string region = 24;
   */
  region: string;

  /**
   * The Compute Engine zone that the instance is currently serving from. This
   * value could be different from the zone that was specified when the instance
   * was created if the instance has failed over to its secondary zone. WARNING:
   * Changing this might restart the instance.
   *
   * @generated from field: string gce_zone = 25;
   */
  gceZone: string;

  /**
   * The Compute Engine zone that the failover instance is currently serving
   * from for a regional instance. This value could be different
   * from the zone that was specified when the instance
   * was created if the instance has failed over to its secondary/failover zone.
   *
   * @generated from field: string secondary_gce_zone = 34;
   */
  secondaryGceZone: string;

  /**
   * Disk encryption configuration specific to an instance.
   *
   * @generated from field: google.cloud.sql.v1.DiskEncryptionConfiguration disk_encryption_configuration = 26;
   */
  diskEncryptionConfiguration?: DiskEncryptionConfiguration;

  /**
   * Disk encryption status specific to an instance.
   *
   * @generated from field: google.cloud.sql.v1.DiskEncryptionStatus disk_encryption_status = 27;
   */
  diskEncryptionStatus?: DiskEncryptionStatus;

  /**
   * Initial root password. Use only on creation. You must set root passwords
   * before you can connect to PostgreSQL instances.
   *
   * @generated from field: string root_password = 29;
   */
  rootPassword: string;

  /**
   * The start time of any upcoming scheduled maintenance for this instance.
   *
   * @generated from field: google.cloud.sql.v1.DatabaseInstance.SqlScheduledMaintenance scheduled_maintenance = 30;
   */
  scheduledMaintenance?: DatabaseInstance_SqlScheduledMaintenance;

  /**
   * This status indicates whether the instance satisfies PZS.
   *
   * The status is reserved for future use.
   *
   * @generated from field: google.protobuf.BoolValue satisfies_pzs = 35;
   */
  satisfiesPzs?: boolean;

  /**
   * Output only. Stores the current database version running on the instance
   * including minor version such as `MYSQL_8_0_18`.
   *
   * @generated from field: string database_installed_version = 40;
   */
  databaseInstalledVersion: string;

  /**
   * This field represents the report generated by the proactive database
   * wellness job for OutOfDisk issues.
   * *  Writers:
   *   *  the proactive database wellness job for OOD.
   * *  Readers:
   *   *  the proactive database wellness job
   *
   * @generated from field: optional google.cloud.sql.v1.DatabaseInstance.SqlOutOfDiskReport out_of_disk_report = 38;
   */
  outOfDiskReport?: DatabaseInstance_SqlOutOfDiskReport;

  /**
   * Output only. The time when the instance was created in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 39;
   */
  createTime?: Timestamp;

  /**
   * Output only. List all maintenance versions applicable on the instance
   *
   * @generated from field: repeated string available_maintenance_versions = 41;
   */
  availableMaintenanceVersions: string[];

  /**
   * The current software version on the instance.
   *
   * @generated from field: string maintenance_version = 42;
   */
  maintenanceVersion: string;

  /**
   * Output only. All database versions that are available for upgrade.
   *
   * @generated from field: repeated google.cloud.sql.v1.AvailableDatabaseVersion upgradable_database_versions = 45;
   */
  upgradableDatabaseVersions: AvailableDatabaseVersion[];

  /**
   * @generated from field: optional google.cloud.sql.v1.DatabaseInstance.SqlNetworkArchitecture sql_network_architecture = 47;
   */
  sqlNetworkArchitecture?: DatabaseInstance_SqlNetworkArchitecture;

  /**
   * Output only. The link to service attachment of PSC instance.
   *
   * @generated from field: optional string psc_service_attachment_link = 48;
   */
  pscServiceAttachmentLink?: string;

  /**
   * Output only. The dns name of the instance.
   *
   * @generated from field: optional string dns_name = 49;
   */
  dnsName?: string;

  /**
   * Output only. DEPRECATED: please use write_endpoint instead.
   *
   * @generated from field: optional string primary_dns_name = 51 [deprecated = true];
   * @deprecated
   */
  primaryDnsName?: string;

  /**
   * Output only. The dns name of the primary instance in a replication group.
   *
   * @generated from field: optional string write_endpoint = 52;
   */
  writeEndpoint?: string;

  /**
   * Optional. A primary instance and disaster recovery (DR) replica pair.
   * A DR replica is a cross-region replica that you designate
   * for failover in the event that the primary instance
   * experiences regional failure. Only applicable to MySQL.
   *
   * @generated from field: google.cloud.sql.v1.ReplicationCluster replication_cluster = 54;
   */
  replicationCluster?: ReplicationCluster;

  /**
   * Gemini instance configuration.
   *
   * @generated from field: optional google.cloud.sql.v1.GeminiInstanceConfig gemini_config = 55;
   */
  geminiConfig?: GeminiInstanceConfig;

  /**
   * Output only. This status indicates whether the instance satisfies PZI.
   *
   * The status is reserved for future use.
   *
   * @generated from field: google.protobuf.BoolValue satisfies_pzi = 56;
   */
  satisfiesPzi?: boolean;

  /**
   * Input only. Whether Cloud SQL is enabled to switch storing point-in-time
   * recovery log files from a data disk to Cloud Storage.
   *
   * @generated from field: optional google.protobuf.BoolValue switch_transaction_logs_to_cloud_storage_enabled = 57;
   */
  switchTransactionLogsToCloudStorageEnabled?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1.DatabaseInstance.
 * Use `create(DatabaseInstanceSchema)` to create a new message.
 */
export const DatabaseInstanceSchema: GenMessage<DatabaseInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 52);

/**
 * @generated from message google.cloud.sql.v1.DatabaseInstance.SqlFailoverReplica
 */
export type DatabaseInstance_SqlFailoverReplica = Message<"google.cloud.sql.v1.DatabaseInstance.SqlFailoverReplica"> & {
  /**
   * The name of the failover replica. If specified at instance creation, a
   * failover replica is created for the instance. The name
   * doesn't include the project ID.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The availability status of the failover replica. A false status indicates
   * that the failover replica is out of sync. The primary instance can only
   * failover to the failover replica when the status is true.
   *
   * @generated from field: google.protobuf.BoolValue available = 2;
   */
  available?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1.DatabaseInstance.SqlFailoverReplica.
 * Use `create(DatabaseInstance_SqlFailoverReplicaSchema)` to create a new message.
 */
export const DatabaseInstance_SqlFailoverReplicaSchema: GenMessage<DatabaseInstance_SqlFailoverReplica> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 52, 0);

/**
 * Any scheduled maintenance for this instance.
 *
 * @generated from message google.cloud.sql.v1.DatabaseInstance.SqlScheduledMaintenance
 */
export type DatabaseInstance_SqlScheduledMaintenance = Message<"google.cloud.sql.v1.DatabaseInstance.SqlScheduledMaintenance"> & {
  /**
   * The start time of any upcoming scheduled maintenance for this instance.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * @generated from field: bool can_defer = 2 [deprecated = true];
   * @deprecated
   */
  canDefer: boolean;

  /**
   * If the scheduled maintenance can be rescheduled.
   *
   * @generated from field: bool can_reschedule = 3;
   */
  canReschedule: boolean;

  /**
   * Maintenance cannot be rescheduled to start beyond this deadline.
   *
   * @generated from field: optional google.protobuf.Timestamp schedule_deadline_time = 4;
   */
  scheduleDeadlineTime?: Timestamp;
};

/**
 * Describes the message google.cloud.sql.v1.DatabaseInstance.SqlScheduledMaintenance.
 * Use `create(DatabaseInstance_SqlScheduledMaintenanceSchema)` to create a new message.
 */
export const DatabaseInstance_SqlScheduledMaintenanceSchema: GenMessage<DatabaseInstance_SqlScheduledMaintenance> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 52, 1);

/**
 * This message wraps up the information written by out-of-disk detection job.
 *
 * @generated from message google.cloud.sql.v1.DatabaseInstance.SqlOutOfDiskReport
 */
export type DatabaseInstance_SqlOutOfDiskReport = Message<"google.cloud.sql.v1.DatabaseInstance.SqlOutOfDiskReport"> & {
  /**
   * This field represents the state generated by the proactive database
   * wellness job for OutOfDisk issues.
   * *  Writers:
   *   *  the proactive database wellness job for OOD.
   * *  Readers:
   *   *  the proactive database wellness job
   *
   * @generated from field: optional google.cloud.sql.v1.DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState sql_out_of_disk_state = 1;
   */
  sqlOutOfDiskState?: DatabaseInstance_SqlOutOfDiskReport_SqlOutOfDiskState;

  /**
   * The minimum recommended increase size in GigaBytes
   * This field is consumed by the frontend
   * *  Writers:
   *   *  the proactive database wellness job for OOD.
   * *  Readers:
   *
   * @generated from field: optional int32 sql_min_recommended_increase_size_gb = 2;
   */
  sqlMinRecommendedIncreaseSizeGb?: number;
};

/**
 * Describes the message google.cloud.sql.v1.DatabaseInstance.SqlOutOfDiskReport.
 * Use `create(DatabaseInstance_SqlOutOfDiskReportSchema)` to create a new message.
 */
export const DatabaseInstance_SqlOutOfDiskReportSchema: GenMessage<DatabaseInstance_SqlOutOfDiskReport> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 52, 2);

/**
 * This enum lists all possible states regarding out-of-disk issues.
 *
 * @generated from enum google.cloud.sql.v1.DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState
 */
export enum DatabaseInstance_SqlOutOfDiskReport_SqlOutOfDiskState {
  /**
   * Unspecified state
   *
   * @generated from enum value: SQL_OUT_OF_DISK_STATE_UNSPECIFIED = 0;
   */
  SQL_OUT_OF_DISK_STATE_UNSPECIFIED = 0,

  /**
   * The instance has plenty space on data disk
   *
   * @generated from enum value: NORMAL = 1;
   */
  NORMAL = 1,

  /**
   * Data disk is almost used up. It is shutdown to prevent data
   * corruption.
   *
   * @generated from enum value: SOFT_SHUTDOWN = 2;
   */
  SOFT_SHUTDOWN = 2,
}

/**
 * Describes the enum google.cloud.sql.v1.DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState.
 */
export const DatabaseInstance_SqlOutOfDiskReport_SqlOutOfDiskStateSchema: GenEnum<DatabaseInstance_SqlOutOfDiskReport_SqlOutOfDiskState> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_instances, 52, 2, 0);

/**
 * The current serving state of the database instance.
 *
 * @generated from enum google.cloud.sql.v1.DatabaseInstance.SqlInstanceState
 */
export enum DatabaseInstance_SqlInstanceState {
  /**
   * The state of the instance is unknown.
   *
   * @generated from enum value: SQL_INSTANCE_STATE_UNSPECIFIED = 0;
   */
  SQL_INSTANCE_STATE_UNSPECIFIED = 0,

  /**
   * The instance is running, or has been stopped by owner.
   *
   * @generated from enum value: RUNNABLE = 1;
   */
  RUNNABLE = 1,

  /**
   * The instance is not available, for example due to problems with billing.
   *
   * @generated from enum value: SUSPENDED = 2;
   */
  SUSPENDED = 2,

  /**
   * The instance is being deleted.
   *
   * @generated from enum value: PENDING_DELETE = 3;
   */
  PENDING_DELETE = 3,

  /**
   * The instance is being created.
   *
   * @generated from enum value: PENDING_CREATE = 4;
   */
  PENDING_CREATE = 4,

  /**
   * The instance is down for maintenance.
   *
   * @generated from enum value: MAINTENANCE = 5;
   */
  MAINTENANCE = 5,

  /**
   * The creation of the instance failed or a fatal error occurred during
   * maintenance.
   *
   * @generated from enum value: FAILED = 6;
   */
  FAILED = 6,

  /**
   * Deprecated
   *
   * @generated from enum value: ONLINE_MAINTENANCE = 7 [deprecated = true];
   * @deprecated
   */
  ONLINE_MAINTENANCE = 7,
}

/**
 * Describes the enum google.cloud.sql.v1.DatabaseInstance.SqlInstanceState.
 */
export const DatabaseInstance_SqlInstanceStateSchema: GenEnum<DatabaseInstance_SqlInstanceState> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_instances, 52, 0);

/**
 * The SQL network architecture for the instance.
 *
 * @generated from enum google.cloud.sql.v1.DatabaseInstance.SqlNetworkArchitecture
 */
export enum DatabaseInstance_SqlNetworkArchitecture {
  /**
   * @generated from enum value: SQL_NETWORK_ARCHITECTURE_UNSPECIFIED = 0;
   */
  SQL_NETWORK_ARCHITECTURE_UNSPECIFIED = 0,

  /**
   * The instance uses the new network architecture.
   *
   * @generated from enum value: NEW_NETWORK_ARCHITECTURE = 1;
   */
  NEW_NETWORK_ARCHITECTURE = 1,

  /**
   * The instance uses the old network architecture.
   *
   * @generated from enum value: OLD_NETWORK_ARCHITECTURE = 2;
   */
  OLD_NETWORK_ARCHITECTURE = 2,
}

/**
 * Describes the enum google.cloud.sql.v1.DatabaseInstance.SqlNetworkArchitecture.
 */
export const DatabaseInstance_SqlNetworkArchitectureSchema: GenEnum<DatabaseInstance_SqlNetworkArchitecture> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_instances, 52, 1);

/**
 * Gemini instance configuration.
 *
 * @generated from message google.cloud.sql.v1.GeminiInstanceConfig
 */
export type GeminiInstanceConfig = Message<"google.cloud.sql.v1.GeminiInstanceConfig"> & {
  /**
   * Output only. Whether Gemini is enabled.
   *
   * @generated from field: optional bool entitled = 1;
   */
  entitled?: boolean;

  /**
   * Output only. Whether the vacuum management is enabled.
   *
   * @generated from field: optional bool google_vacuum_mgmt_enabled = 2;
   */
  googleVacuumMgmtEnabled?: boolean;

  /**
   * Output only. Whether canceling the out-of-memory (OOM) session is enabled.
   *
   * @generated from field: optional bool oom_session_cancel_enabled = 3;
   */
  oomSessionCancelEnabled?: boolean;

  /**
   * Output only. Whether the active query is enabled.
   *
   * @generated from field: optional bool active_query_enabled = 4;
   */
  activeQueryEnabled?: boolean;

  /**
   * Output only. Whether the index advisor is enabled.
   *
   * @generated from field: optional bool index_advisor_enabled = 5;
   */
  indexAdvisorEnabled?: boolean;

  /**
   * Output only. Whether the flag recommender is enabled.
   *
   * @generated from field: optional bool flag_recommender_enabled = 6;
   */
  flagRecommenderEnabled?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1.GeminiInstanceConfig.
 * Use `create(GeminiInstanceConfigSchema)` to create a new message.
 */
export const GeminiInstanceConfigSchema: GenMessage<GeminiInstanceConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 53);

/**
 * A primary instance and disaster recovery (DR) replica pair.
 * A DR replica is a cross-region replica that you designate for failover in
 * the event that the primary instance experiences regional failure.
 * Only applicable to MySQL.
 *
 * @generated from message google.cloud.sql.v1.ReplicationCluster
 */
export type ReplicationCluster = Message<"google.cloud.sql.v1.ReplicationCluster"> & {
  /**
   * Output only. If set, it indicates this instance has a private service
   * access (PSA) dns endpoint that is pointing to the primary instance of the
   * cluster. If this instance is the primary, the dns should be pointing to
   * this instance. After Switchover or Replica failover, this DNS endpoint
   * points to the promoted instance. This is a read-only field, returned to the
   * user as information. This field can exist even if a standalone instance
   * does not yet have a replica, or had a DR replica that was deleted.
   *
   * @generated from field: string psa_write_endpoint = 1;
   */
  psaWriteEndpoint: string;

  /**
   * Optional. If the instance is a primary instance, then this field identifies
   * the disaster recovery (DR) replica. A DR replica is an optional
   * configuration for Enterprise Plus edition instances. If the instance is a
   * read replica, then the field is not set. Set this field to a replica name
   * to designate a DR replica for a primary instance. Remove the replica name
   * to remove the DR replica designation.
   *
   * @generated from field: string failover_dr_replica_name = 2;
   */
  failoverDrReplicaName: string;

  /**
   * Output only. Read-only field that indicates whether the replica is a DR
   * replica. This field is not set if the instance is a primary instance.
   *
   * @generated from field: bool dr_replica = 4;
   */
  drReplica: boolean;
};

/**
 * Describes the message google.cloud.sql.v1.ReplicationCluster.
 * Use `create(ReplicationClusterSchema)` to create a new message.
 */
export const ReplicationClusterSchema: GenMessage<ReplicationCluster> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 54);

/**
 * An available database version. It can be a major or a minor version.
 *
 * @generated from message google.cloud.sql.v1.AvailableDatabaseVersion
 */
export type AvailableDatabaseVersion = Message<"google.cloud.sql.v1.AvailableDatabaseVersion"> & {
  /**
   * The version's major version name.
   *
   * @generated from field: optional string major_version = 3;
   */
  majorVersion?: string;

  /**
   * The database version name. For MySQL 8.0, this string provides the database
   * major and minor version.
   *
   * @generated from field: optional string name = 8;
   */
  name?: string;

  /**
   * The database version's display name.
   *
   * @generated from field: optional string display_name = 9;
   */
  displayName?: string;
};

/**
 * Describes the message google.cloud.sql.v1.AvailableDatabaseVersion.
 * Use `create(AvailableDatabaseVersionSchema)` to create a new message.
 */
export const AvailableDatabaseVersionSchema: GenMessage<AvailableDatabaseVersion> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 55);

/**
 * Reschedule options for maintenance windows.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesRescheduleMaintenanceRequestBody
 */
export type SqlInstancesRescheduleMaintenanceRequestBody = Message<"google.cloud.sql.v1.SqlInstancesRescheduleMaintenanceRequestBody"> & {
  /**
   * Required. The type of the reschedule the user wants.
   *
   * @generated from field: google.cloud.sql.v1.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule reschedule = 3;
   */
  reschedule?: SqlInstancesRescheduleMaintenanceRequestBody_Reschedule;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesRescheduleMaintenanceRequestBody.
 * Use `create(SqlInstancesRescheduleMaintenanceRequestBodySchema)` to create a new message.
 */
export const SqlInstancesRescheduleMaintenanceRequestBodySchema: GenMessage<SqlInstancesRescheduleMaintenanceRequestBody> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 56);

/**
 * @generated from message google.cloud.sql.v1.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule
 */
export type SqlInstancesRescheduleMaintenanceRequestBody_Reschedule = Message<"google.cloud.sql.v1.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule"> & {
  /**
   * Required. The type of the reschedule.
   *
   * @generated from field: google.cloud.sql.v1.SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType reschedule_type = 1;
   */
  rescheduleType: SqlInstancesRescheduleMaintenanceRequestBody_RescheduleType;

  /**
   * Optional. Timestamp when the maintenance shall be rescheduled to if
   * reschedule_type=SPECIFIC_TIME, in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp schedule_time = 2;
   */
  scheduleTime?: Timestamp;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule.
 * Use `create(SqlInstancesRescheduleMaintenanceRequestBody_RescheduleSchema)` to create a new message.
 */
export const SqlInstancesRescheduleMaintenanceRequestBody_RescheduleSchema: GenMessage<SqlInstancesRescheduleMaintenanceRequestBody_Reschedule> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 56, 0);

/**
 * @generated from enum google.cloud.sql.v1.SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType
 */
export enum SqlInstancesRescheduleMaintenanceRequestBody_RescheduleType {
  /**
   * @generated from enum value: RESCHEDULE_TYPE_UNSPECIFIED = 0;
   */
  RESCHEDULE_TYPE_UNSPECIFIED = 0,

  /**
   * Reschedules maintenance to happen now (within 5 minutes).
   *
   * @generated from enum value: IMMEDIATE = 1;
   */
  IMMEDIATE = 1,

  /**
   * Reschedules maintenance to occur within one week from the originally
   * scheduled day and time.
   *
   * @generated from enum value: NEXT_AVAILABLE_WINDOW = 2;
   */
  NEXT_AVAILABLE_WINDOW = 2,

  /**
   * Reschedules maintenance to a specific time and day.
   *
   * @generated from enum value: SPECIFIC_TIME = 3;
   */
  SPECIFIC_TIME = 3,
}

/**
 * Describes the enum google.cloud.sql.v1.SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType.
 */
export const SqlInstancesRescheduleMaintenanceRequestBody_RescheduleTypeSchema: GenEnum<SqlInstancesRescheduleMaintenanceRequestBody_RescheduleType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_instances, 56, 0);

/**
 * Database instance demote primary instance context.
 *
 * @generated from message google.cloud.sql.v1.DemoteMasterContext
 */
export type DemoteMasterContext = Message<"google.cloud.sql.v1.DemoteMasterContext"> & {
  /**
   * This is always `sql#demoteMasterContext`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Verify the GTID consistency for demote operation. Default value:
   * `True`. Setting this flag to `false` enables you to bypass the GTID
   * consistency check between on-premises primary instance and Cloud SQL
   * instance during the demotion operation but also exposes you to the risk of
   * future replication failures. Change the value only if you know the reason
   * for the GTID divergence and are confident that doing so will not cause any
   * replication issues.
   *
   * @generated from field: google.protobuf.BoolValue verify_gtid_consistency = 2;
   */
  verifyGtidConsistency?: boolean;

  /**
   * The name of the instance which will act as on-premises primary instance
   * in the replication setup.
   *
   * @generated from field: string master_instance_name = 3;
   */
  masterInstanceName: string;

  /**
   * Configuration specific to read-replicas replicating from the on-premises
   * primary instance.
   *
   * @generated from field: google.cloud.sql.v1.DemoteMasterConfiguration replica_configuration = 4;
   */
  replicaConfiguration?: DemoteMasterConfiguration;

  /**
   * Flag to skip replication setup on the instance.
   *
   * @generated from field: bool skip_replication_setup = 5;
   */
  skipReplicationSetup: boolean;
};

/**
 * Describes the message google.cloud.sql.v1.DemoteMasterContext.
 * Use `create(DemoteMasterContextSchema)` to create a new message.
 */
export const DemoteMasterContextSchema: GenMessage<DemoteMasterContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 57);

/**
 * This context is used to demote an existing standalone instance to be
 * a Cloud SQL read replica for an external database server.
 *
 * @generated from message google.cloud.sql.v1.DemoteContext
 */
export type DemoteContext = Message<"google.cloud.sql.v1.DemoteContext"> & {
  /**
   * This is always `sql#demoteContext`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Required. The name of the instance which acts as the on-premises primary
   * instance in the replication setup.
   *
   * @generated from field: string source_representative_instance_name = 2;
   */
  sourceRepresentativeInstanceName: string;
};

/**
 * Describes the message google.cloud.sql.v1.DemoteContext.
 * Use `create(DemoteContextSchema)` to create a new message.
 */
export const DemoteContextSchema: GenMessage<DemoteContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 58);

/**
 * Database instance failover context.
 *
 * @generated from message google.cloud.sql.v1.FailoverContext
 */
export type FailoverContext = Message<"google.cloud.sql.v1.FailoverContext"> & {
  /**
   * The current settings version of this instance. Request will be rejected if
   * this version doesn't match the current settings version.
   *
   * @generated from field: int64 settings_version = 1;
   */
  settingsVersion: bigint;

  /**
   * This is always `sql#failoverContext`.
   *
   * @generated from field: string kind = 2;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1.FailoverContext.
 * Use `create(FailoverContextSchema)` to create a new message.
 */
export const FailoverContextSchema: GenMessage<FailoverContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 59);

/**
 * Database instance restore from backup context.
 * Backup context contains source instance id and project id.
 *
 * @generated from message google.cloud.sql.v1.RestoreBackupContext
 */
export type RestoreBackupContext = Message<"google.cloud.sql.v1.RestoreBackupContext"> & {
  /**
   * This is always `sql#restoreBackupContext`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The ID of the backup run to restore from.
   *
   * @generated from field: int64 backup_run_id = 2;
   */
  backupRunId: bigint;

  /**
   * The ID of the instance that the backup was taken from.
   *
   * @generated from field: string instance_id = 3;
   */
  instanceId: string;

  /**
   * The full project ID of the source instance.
   *
   * @generated from field: string project = 4;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1.RestoreBackupContext.
 * Use `create(RestoreBackupContextSchema)` to create a new message.
 */
export const RestoreBackupContextSchema: GenMessage<RestoreBackupContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 60);

/**
 * Instance rotate server CA context.
 *
 * @generated from message google.cloud.sql.v1.RotateServerCaContext
 */
export type RotateServerCaContext = Message<"google.cloud.sql.v1.RotateServerCaContext"> & {
  /**
   * This is always `sql#rotateServerCaContext`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The fingerprint of the next version to be rotated to. If left unspecified,
   * will be rotated to the most recently added server CA version.
   *
   * @generated from field: string next_version = 2;
   */
  nextVersion: string;
};

/**
 * Describes the message google.cloud.sql.v1.RotateServerCaContext.
 * Use `create(RotateServerCaContextSchema)` to create a new message.
 */
export const RotateServerCaContextSchema: GenMessage<RotateServerCaContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 61);

/**
 * Database Instance truncate log context.
 *
 * @generated from message google.cloud.sql.v1.TruncateLogContext
 */
export type TruncateLogContext = Message<"google.cloud.sql.v1.TruncateLogContext"> & {
  /**
   * This is always `sql#truncateLogContext`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The type of log to truncate. Valid values are `MYSQL_GENERAL_TABLE` and
   * `MYSQL_SLOW_TABLE`.
   *
   * @generated from field: string log_type = 2;
   */
  logType: string;
};

/**
 * Describes the message google.cloud.sql.v1.TruncateLogContext.
 * Use `create(TruncateLogContextSchema)` to create a new message.
 */
export const TruncateLogContextSchema: GenMessage<TruncateLogContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 62);

/**
 * External primary instance migration setting error/warning.
 *
 * @generated from message google.cloud.sql.v1.SqlExternalSyncSettingError
 */
export type SqlExternalSyncSettingError = Message<"google.cloud.sql.v1.SqlExternalSyncSettingError"> & {
  /**
   * Can be `sql#externalSyncSettingError` or
   * `sql#externalSyncSettingWarning`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Identifies the specific error that occurred.
   *
   * @generated from field: google.cloud.sql.v1.SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType type = 2;
   */
  type: SqlExternalSyncSettingError_SqlExternalSyncSettingErrorType;

  /**
   * Additional information about the error encountered.
   *
   * @generated from field: string detail = 3;
   */
  detail: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlExternalSyncSettingError.
 * Use `create(SqlExternalSyncSettingErrorSchema)` to create a new message.
 */
export const SqlExternalSyncSettingErrorSchema: GenMessage<SqlExternalSyncSettingError> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 63);

/**
 * @generated from enum google.cloud.sql.v1.SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType
 */
export enum SqlExternalSyncSettingError_SqlExternalSyncSettingErrorType {
  /**
   * @generated from enum value: SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED = 0;
   */
  SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: CONNECTION_FAILURE = 1;
   */
  CONNECTION_FAILURE = 1,

  /**
   * @generated from enum value: BINLOG_NOT_ENABLED = 2;
   */
  BINLOG_NOT_ENABLED = 2,

  /**
   * @generated from enum value: INCOMPATIBLE_DATABASE_VERSION = 3;
   */
  INCOMPATIBLE_DATABASE_VERSION = 3,

  /**
   * @generated from enum value: REPLICA_ALREADY_SETUP = 4;
   */
  REPLICA_ALREADY_SETUP = 4,

  /**
   * The replication user is missing privileges that are required.
   *
   * @generated from enum value: INSUFFICIENT_PRIVILEGE = 5;
   */
  INSUFFICIENT_PRIVILEGE = 5,

  /**
   * Unsupported migration type.
   *
   * @generated from enum value: UNSUPPORTED_MIGRATION_TYPE = 6;
   */
  UNSUPPORTED_MIGRATION_TYPE = 6,

  /**
   * No pglogical extension installed on databases, applicable for postgres.
   *
   * @generated from enum value: NO_PGLOGICAL_INSTALLED = 7;
   */
  NO_PGLOGICAL_INSTALLED = 7,

  /**
   * pglogical node already exists on databases, applicable for postgres.
   *
   * @generated from enum value: PGLOGICAL_NODE_ALREADY_EXISTS = 8;
   */
  PGLOGICAL_NODE_ALREADY_EXISTS = 8,

  /**
   * The value of parameter wal_level is not set to logical.
   *
   * @generated from enum value: INVALID_WAL_LEVEL = 9;
   */
  INVALID_WAL_LEVEL = 9,

  /**
   * The value of parameter shared_preload_libraries does not include
   * pglogical.
   *
   * @generated from enum value: INVALID_SHARED_PRELOAD_LIBRARY = 10;
   */
  INVALID_SHARED_PRELOAD_LIBRARY = 10,

  /**
   * The value of parameter max_replication_slots is not sufficient.
   *
   * @generated from enum value: INSUFFICIENT_MAX_REPLICATION_SLOTS = 11;
   */
  INSUFFICIENT_MAX_REPLICATION_SLOTS = 11,

  /**
   * The value of parameter max_wal_senders is not sufficient.
   *
   * @generated from enum value: INSUFFICIENT_MAX_WAL_SENDERS = 12;
   */
  INSUFFICIENT_MAX_WAL_SENDERS = 12,

  /**
   * The value of parameter max_worker_processes is not sufficient.
   *
   * @generated from enum value: INSUFFICIENT_MAX_WORKER_PROCESSES = 13;
   */
  INSUFFICIENT_MAX_WORKER_PROCESSES = 13,

  /**
   * Extensions installed are either not supported or having unsupported
   * versions.
   *
   * @generated from enum value: UNSUPPORTED_EXTENSIONS = 14;
   */
  UNSUPPORTED_EXTENSIONS = 14,

  /**
   * The value of parameter rds.logical_replication is not set to 1.
   *
   * @generated from enum value: INVALID_RDS_LOGICAL_REPLICATION = 15;
   */
  INVALID_RDS_LOGICAL_REPLICATION = 15,

  /**
   * The primary instance logging setup doesn't allow EM sync.
   *
   * @generated from enum value: INVALID_LOGGING_SETUP = 16;
   */
  INVALID_LOGGING_SETUP = 16,

  /**
   * The primary instance database parameter setup doesn't allow EM sync.
   *
   * @generated from enum value: INVALID_DB_PARAM = 17;
   */
  INVALID_DB_PARAM = 17,

  /**
   * The gtid_mode is not supported, applicable for MySQL.
   *
   * @generated from enum value: UNSUPPORTED_GTID_MODE = 18;
   */
  UNSUPPORTED_GTID_MODE = 18,

  /**
   * SQL Server Agent is not running.
   *
   * @generated from enum value: SQLSERVER_AGENT_NOT_RUNNING = 19;
   */
  SQLSERVER_AGENT_NOT_RUNNING = 19,

  /**
   * The table definition is not support due to missing primary key or replica
   * identity, applicable for postgres.
   *
   * @generated from enum value: UNSUPPORTED_TABLE_DEFINITION = 20;
   */
  UNSUPPORTED_TABLE_DEFINITION = 20,

  /**
   * The customer has a definer that will break EM setup.
   *
   * @generated from enum value: UNSUPPORTED_DEFINER = 21;
   */
  UNSUPPORTED_DEFINER = 21,

  /**
   * SQL Server @@SERVERNAME does not match actual host name.
   *
   * @generated from enum value: SQLSERVER_SERVERNAME_MISMATCH = 22;
   */
  SQLSERVER_SERVERNAME_MISMATCH = 22,

  /**
   * The primary instance has been setup and will fail the setup.
   *
   * @generated from enum value: PRIMARY_ALREADY_SETUP = 23;
   */
  PRIMARY_ALREADY_SETUP = 23,

  /**
   * The primary instance has unsupported binary log format.
   *
   * @generated from enum value: UNSUPPORTED_BINLOG_FORMAT = 24;
   */
  UNSUPPORTED_BINLOG_FORMAT = 24,

  /**
   * The primary instance's binary log retention setting.
   *
   * @generated from enum value: BINLOG_RETENTION_SETTING = 25;
   */
  BINLOG_RETENTION_SETTING = 25,

  /**
   * The primary instance has tables with unsupported storage engine.
   *
   * @generated from enum value: UNSUPPORTED_STORAGE_ENGINE = 26;
   */
  UNSUPPORTED_STORAGE_ENGINE = 26,

  /**
   * Source has tables with limited support
   * eg: PostgreSQL tables without primary keys.
   *
   * @generated from enum value: LIMITED_SUPPORT_TABLES = 27;
   */
  LIMITED_SUPPORT_TABLES = 27,

  /**
   * The replica instance contains existing data.
   *
   * @generated from enum value: EXISTING_DATA_IN_REPLICA = 28;
   */
  EXISTING_DATA_IN_REPLICA = 28,

  /**
   * The replication user is missing privileges that are optional.
   *
   * @generated from enum value: MISSING_OPTIONAL_PRIVILEGES = 29;
   */
  MISSING_OPTIONAL_PRIVILEGES = 29,

  /**
   * Additional BACKUP_ADMIN privilege is granted to the replication user
   * which may lock source MySQL 8 instance for DDLs during initial sync.
   *
   * @generated from enum value: RISKY_BACKUP_ADMIN_PRIVILEGE = 30;
   */
  RISKY_BACKUP_ADMIN_PRIVILEGE = 30,

  /**
   * The Cloud Storage bucket is missing necessary permissions.
   *
   * @generated from enum value: INSUFFICIENT_GCS_PERMISSIONS = 31;
   */
  INSUFFICIENT_GCS_PERMISSIONS = 31,

  /**
   * The Cloud Storage bucket has an error in the file or contains invalid
   * file information.
   *
   * @generated from enum value: INVALID_FILE_INFO = 32;
   */
  INVALID_FILE_INFO = 32,

  /**
   * The source instance has unsupported database settings for migration.
   *
   * @generated from enum value: UNSUPPORTED_DATABASE_SETTINGS = 33;
   */
  UNSUPPORTED_DATABASE_SETTINGS = 33,

  /**
   * The replication user is missing parallel import specific privileges.
   * (e.g. LOCK TABLES) for MySQL.
   *
   * @generated from enum value: MYSQL_PARALLEL_IMPORT_INSUFFICIENT_PRIVILEGE = 34;
   */
  MYSQL_PARALLEL_IMPORT_INSUFFICIENT_PRIVILEGE = 34,

  /**
   * The global variable local_infile is off on external server replica.
   *
   * @generated from enum value: LOCAL_INFILE_OFF = 35;
   */
  LOCAL_INFILE_OFF = 35,

  /**
   * This code instructs customers to turn on point-in-time recovery manually
   * for the instance after promoting the Cloud SQL for PostgreSQL instance.
   *
   * @generated from enum value: TURN_ON_PITR_AFTER_PROMOTE = 36;
   */
  TURN_ON_PITR_AFTER_PROMOTE = 36,

  /**
   * The minor version of replica database is incompatible with the source.
   *
   * @generated from enum value: INCOMPATIBLE_DATABASE_MINOR_VERSION = 37;
   */
  INCOMPATIBLE_DATABASE_MINOR_VERSION = 37,

  /**
   * This warning message indicates that Cloud SQL uses the maximum number of
   * subscriptions to migrate data from the source to the destination.
   *
   * @generated from enum value: SOURCE_MAX_SUBSCRIPTIONS = 38;
   */
  SOURCE_MAX_SUBSCRIPTIONS = 38,

  /**
   * Unable to verify definers on the source for MySQL.
   *
   * @generated from enum value: UNABLE_TO_VERIFY_DEFINERS = 39;
   */
  UNABLE_TO_VERIFY_DEFINERS = 39,

  /**
   * If a time out occurs while the subscription counts are calculated, then
   * this value is set to 1. Otherwise, this value is set to 2.
   *
   * @generated from enum value: SUBSCRIPTION_CALCULATION_STATUS = 40;
   */
  SUBSCRIPTION_CALCULATION_STATUS = 40,

  /**
   * Count of subscriptions needed to sync source data for PostgreSQL
   * database.
   *
   * @generated from enum value: PG_SUBSCRIPTION_COUNT = 41;
   */
  PG_SUBSCRIPTION_COUNT = 41,

  /**
   * Final parallel level that is used to do migration.
   *
   * @generated from enum value: PG_SYNC_PARALLEL_LEVEL = 42;
   */
  PG_SYNC_PARALLEL_LEVEL = 42,

  /**
   * The disk size of the replica instance is smaller than the data size of
   * the source instance.
   *
   * @generated from enum value: INSUFFICIENT_DISK_SIZE = 43;
   */
  INSUFFICIENT_DISK_SIZE = 43,

  /**
   * The data size of the source instance is greater than 1 TB, the number of
   * cores of the replica instance is less than 8, and the memory of the
   * replica is less than 32 GB.
   *
   * @generated from enum value: INSUFFICIENT_MACHINE_TIER = 44;
   */
  INSUFFICIENT_MACHINE_TIER = 44,

  /**
   * The warning message indicates the unsupported extensions will not be
   * migrated to the destination.
   *
   * @generated from enum value: UNSUPPORTED_EXTENSIONS_NOT_MIGRATED = 45;
   */
  UNSUPPORTED_EXTENSIONS_NOT_MIGRATED = 45,

  /**
   * The warning message indicates the pg_cron extension and settings will not
   * be migrated to the destination.
   *
   * @generated from enum value: EXTENSIONS_NOT_MIGRATED = 46;
   */
  EXTENSIONS_NOT_MIGRATED = 46,

  /**
   * The error message indicates that pg_cron flags are enabled on the
   * destination which is not supported during the migration.
   *
   * @generated from enum value: PG_CRON_FLAG_ENABLED_IN_REPLICA = 47;
   */
  PG_CRON_FLAG_ENABLED_IN_REPLICA = 47,

  /**
   * This error message indicates that the specified extensions are not
   * enabled on destination instance. For example, before you can migrate
   * data to the destination instance, you must enable the PGAudit extension
   * on the instance.
   *
   * @generated from enum value: EXTENSIONS_NOT_ENABLED_IN_REPLICA = 48;
   */
  EXTENSIONS_NOT_ENABLED_IN_REPLICA = 48,

  /**
   * The source database has generated columns that can't be migrated. Please
   * change them to regular columns before migration.
   *
   * @generated from enum value: UNSUPPORTED_COLUMNS = 49;
   */
  UNSUPPORTED_COLUMNS = 49,
}

/**
 * Describes the enum google.cloud.sql.v1.SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.
 */
export const SqlExternalSyncSettingError_SqlExternalSyncSettingErrorTypeSchema: GenEnum<SqlExternalSyncSettingError_SqlExternalSyncSettingErrorType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_instances, 63, 0);

/**
 * On-premises instance configuration.
 *
 * @generated from message google.cloud.sql.v1.OnPremisesConfiguration
 */
export type OnPremisesConfiguration = Message<"google.cloud.sql.v1.OnPremisesConfiguration"> & {
  /**
   * The host and port of the on-premises instance in host:port format
   *
   * @generated from field: string host_port = 1;
   */
  hostPort: string;

  /**
   * This is always `sql#onPremisesConfiguration`.
   *
   * @generated from field: string kind = 2;
   */
  kind: string;

  /**
   * The username for connecting to on-premises instance.
   *
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * The password for connecting to on-premises instance.
   *
   * @generated from field: string password = 4;
   */
  password: string;

  /**
   * PEM representation of the trusted CA's x509 certificate.
   *
   * @generated from field: string ca_certificate = 5;
   */
  caCertificate: string;

  /**
   * PEM representation of the replica's x509 certificate.
   *
   * @generated from field: string client_certificate = 6;
   */
  clientCertificate: string;

  /**
   * PEM representation of the replica's private key. The corresponsing public
   * key is encoded in the client's certificate.
   *
   * @generated from field: string client_key = 7;
   */
  clientKey: string;

  /**
   * The dump file to create the Cloud SQL replica.
   *
   * @generated from field: string dump_file_path = 8;
   */
  dumpFilePath: string;

  /**
   * The reference to Cloud SQL instance if the source is Cloud SQL.
   *
   * @generated from field: google.cloud.sql.v1.InstanceReference source_instance = 15;
   */
  sourceInstance?: InstanceReference;
};

/**
 * Describes the message google.cloud.sql.v1.OnPremisesConfiguration.
 * Use `create(OnPremisesConfigurationSchema)` to create a new message.
 */
export const OnPremisesConfigurationSchema: GenMessage<OnPremisesConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 64);

/**
 * Read-replica configuration for connecting to the primary instance.
 *
 * @generated from message google.cloud.sql.v1.ReplicaConfiguration
 */
export type ReplicaConfiguration = Message<"google.cloud.sql.v1.ReplicaConfiguration"> & {
  /**
   * This is always `sql#replicaConfiguration`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * MySQL specific configuration when replicating from a MySQL on-premises
   * primary instance. Replication configuration information such as the
   * username, password, certificates, and keys are not stored in the instance
   * metadata. The configuration information is used only to set up the
   * replication connection and is stored by MySQL in a file named
   * `master.info` in the data directory.
   *
   * @generated from field: google.cloud.sql.v1.MySqlReplicaConfiguration mysql_replica_configuration = 2;
   */
  mysqlReplicaConfiguration?: MySqlReplicaConfiguration;

  /**
   * Specifies if the replica is the failover target. If the field is set to
   * `true`, the replica will be designated as a failover replica. In case the
   * primary instance fails, the replica instance will be promoted as the new
   * primary instance. Only one replica can be specified as failover target, and
   * the replica has to be in different zone with the primary instance.
   *
   * @generated from field: google.protobuf.BoolValue failover_target = 3;
   */
  failoverTarget?: boolean;

  /**
   * Optional. Specifies if a SQL Server replica is a cascadable replica. A
   * cascadable replica is a SQL Server cross region replica that supports
   * replica(s) under it.
   *
   * @generated from field: google.protobuf.BoolValue cascadable_replica = 5;
   */
  cascadableReplica?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1.ReplicaConfiguration.
 * Use `create(ReplicaConfigurationSchema)` to create a new message.
 */
export const ReplicaConfigurationSchema: GenMessage<ReplicaConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 65);

/**
 * Request to acquire a lease for SSRS.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesAcquireSsrsLeaseRequest
 */
export type SqlInstancesAcquireSsrsLeaseRequest = Message<"google.cloud.sql.v1.SqlInstancesAcquireSsrsLeaseRequest"> & {
  /**
   * Required. Cloud SQL instance ID. This doesn't include the project ID. It's
   * composed of lowercase letters, numbers, and hyphens, and it must start with
   * a letter. The total length must be 98 characters or less (Example:
   * instance-id).
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Required. Project ID of the project that contains the instance (Example:
   * project-id).
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * Required. The request body.
   *
   * @generated from field: google.cloud.sql.v1.InstancesAcquireSsrsLeaseRequest body = 100;
   */
  body?: InstancesAcquireSsrsLeaseRequest;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesAcquireSsrsLeaseRequest.
 * Use `create(SqlInstancesAcquireSsrsLeaseRequestSchema)` to create a new message.
 */
export const SqlInstancesAcquireSsrsLeaseRequestSchema: GenMessage<SqlInstancesAcquireSsrsLeaseRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 66);

/**
 * Response for the acquire SSRS lease request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesAcquireSsrsLeaseResponse
 */
export type SqlInstancesAcquireSsrsLeaseResponse = Message<"google.cloud.sql.v1.SqlInstancesAcquireSsrsLeaseResponse"> & {
  /**
   * The unique identifier for this operation.
   *
   * @generated from field: string operation_id = 1;
   */
  operationId: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesAcquireSsrsLeaseResponse.
 * Use `create(SqlInstancesAcquireSsrsLeaseResponseSchema)` to create a new message.
 */
export const SqlInstancesAcquireSsrsLeaseResponseSchema: GenMessage<SqlInstancesAcquireSsrsLeaseResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 67);

/**
 * Request to release a lease for SSRS.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesReleaseSsrsLeaseRequest
 */
export type SqlInstancesReleaseSsrsLeaseRequest = Message<"google.cloud.sql.v1.SqlInstancesReleaseSsrsLeaseRequest"> & {
  /**
   * Required. The Cloud SQL instance ID. This doesn't include the project ID.
   * The instance ID contains lowercase letters, numbers, and hyphens, and it
   * must start with a letter. This ID can have a maximum length of 98
   * characters.
   *
   * @generated from field: string instance = 1;
   */
  instance: string;

  /**
   * Required. The project ID that contains the instance.
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesReleaseSsrsLeaseRequest.
 * Use `create(SqlInstancesReleaseSsrsLeaseRequestSchema)` to create a new message.
 */
export const SqlInstancesReleaseSsrsLeaseRequestSchema: GenMessage<SqlInstancesReleaseSsrsLeaseRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 68);

/**
 * Response for the release SSRS lease request.
 *
 * @generated from message google.cloud.sql.v1.SqlInstancesReleaseSsrsLeaseResponse
 */
export type SqlInstancesReleaseSsrsLeaseResponse = Message<"google.cloud.sql.v1.SqlInstancesReleaseSsrsLeaseResponse"> & {
  /**
   * The unique identifier for this operation.
   *
   * @generated from field: string operation_id = 1;
   */
  operationId: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlInstancesReleaseSsrsLeaseResponse.
 * Use `create(SqlInstancesReleaseSsrsLeaseResponseSchema)` to create a new message.
 */
export const SqlInstancesReleaseSsrsLeaseResponseSchema: GenMessage<SqlInstancesReleaseSsrsLeaseResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_instances, 69);

/**
 * External Sync parallel level.
 *
 * @generated from enum google.cloud.sql.v1.ExternalSyncParallelLevel
 */
export enum ExternalSyncParallelLevel {
  /**
   * Unknown sync parallel level. Will be defaulted to OPTIMAL.
   *
   * @generated from enum value: EXTERNAL_SYNC_PARALLEL_LEVEL_UNSPECIFIED = 0;
   */
  EXTERNAL_SYNC_PARALLEL_LEVEL_UNSPECIFIED = 0,

  /**
   * Minimal parallel level.
   *
   * @generated from enum value: MIN = 1;
   */
  MIN = 1,

  /**
   * Optimal parallel level.
   *
   * @generated from enum value: OPTIMAL = 2;
   */
  OPTIMAL = 2,

  /**
   * Maximum parallel level.
   *
   * @generated from enum value: MAX = 3;
   */
  MAX = 3,
}

/**
 * Describes the enum google.cloud.sql.v1.ExternalSyncParallelLevel.
 */
export const ExternalSyncParallelLevelSchema: GenEnum<ExternalSyncParallelLevel> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_instances, 0);

/**
 * @generated from enum google.cloud.sql.v1.SqlInstanceType
 */
export enum SqlInstanceType {
  /**
   * This is an unknown Cloud SQL instance type.
   *
   * @generated from enum value: SQL_INSTANCE_TYPE_UNSPECIFIED = 0;
   */
  SQL_INSTANCE_TYPE_UNSPECIFIED = 0,

  /**
   * A regular Cloud SQL instance that is not replicating from a primary
   * instance.
   *
   * @generated from enum value: CLOUD_SQL_INSTANCE = 1;
   */
  CLOUD_SQL_INSTANCE = 1,

  /**
   * An instance running on the customer's premises that is not managed by
   * Cloud SQL.
   *
   * @generated from enum value: ON_PREMISES_INSTANCE = 2;
   */
  ON_PREMISES_INSTANCE = 2,

  /**
   * A Cloud SQL instance acting as a read-replica.
   *
   * @generated from enum value: READ_REPLICA_INSTANCE = 3;
   */
  READ_REPLICA_INSTANCE = 3,
}

/**
 * Describes the enum google.cloud.sql.v1.SqlInstanceType.
 */
export const SqlInstanceTypeSchema: GenEnum<SqlInstanceType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_instances, 1);

/**
 * The suspension reason of the database instance if the state is SUSPENDED.
 *
 * @generated from enum google.cloud.sql.v1.SqlSuspensionReason
 */
export enum SqlSuspensionReason {
  /**
   * This is an unknown suspension reason.
   *
   * @generated from enum value: SQL_SUSPENSION_REASON_UNSPECIFIED = 0;
   */
  SQL_SUSPENSION_REASON_UNSPECIFIED = 0,

  /**
   * The instance is suspended due to billing issues (for example:, GCP account
   * issue)
   *
   * @generated from enum value: BILLING_ISSUE = 2;
   */
  BILLING_ISSUE = 2,

  /**
   * The instance is suspended due to illegal content (for example:, child
   * pornography, copyrighted material, etc.).
   *
   * @generated from enum value: LEGAL_ISSUE = 3;
   */
  LEGAL_ISSUE = 3,

  /**
   * The instance is causing operational issues (for example:, causing the
   * database to crash).
   *
   * @generated from enum value: OPERATIONAL_ISSUE = 4;
   */
  OPERATIONAL_ISSUE = 4,

  /**
   * The KMS key used by the instance is either revoked or denied access to
   *
   * @generated from enum value: KMS_KEY_ISSUE = 5;
   */
  KMS_KEY_ISSUE = 5,
}

/**
 * Describes the enum google.cloud.sql.v1.SqlSuspensionReason.
 */
export const SqlSuspensionReasonSchema: GenEnum<SqlSuspensionReason> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_instances, 2);

/**
 * Service to manage Cloud SQL instances.
 *
 * @generated from service google.cloud.sql.v1.SqlInstancesService
 */
export const SqlInstancesService: GenService<{
  /**
   * Adds a new trusted Certificate Authority (CA) version for the specified
   * instance. Required to prepare for a certificate rotation. If a CA version
   * was previously added but never used in a certificate rotation, this
   * operation replaces that version. There cannot be more than one CA version
   * waiting to be rotated in. For instances that have enabled Certificate
   * Authority Service (CAS) based server CA, please use AddServerCertificate to
   * add a new server certificate.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.AddServerCa
   */
  addServerCa: {
    methodKind: "unary";
    input: typeof SqlInstancesAddServerCaRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a Cloud SQL instance as a clone of the source instance. Using this
   * operation might cause your instance to restart.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.Clone
   */
  clone: {
    methodKind: "unary";
    input: typeof SqlInstancesCloneRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a Cloud SQL instance.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.Delete
   */
  delete: {
    methodKind: "unary";
    input: typeof SqlInstancesDeleteRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Demotes the stand-alone instance to be a Cloud SQL read replica for an
   * external database server.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.DemoteMaster
   */
  demoteMaster: {
    methodKind: "unary";
    input: typeof SqlInstancesDemoteMasterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Demotes an existing standalone instance to be a Cloud SQL read replica
   * for an external database server.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.Demote
   */
  demote: {
    methodKind: "unary";
    input: typeof SqlInstancesDemoteRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL
   * dump or CSV file.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.Export
   */
  export: {
    methodKind: "unary";
    input: typeof SqlInstancesExportRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Initiates a manual failover of a high availability (HA) primary instance
   * to a standby instance, which becomes the primary instance. Users are
   * then rerouted to the new primary. For more information, see the
   * [Overview of high
   * availability](https://cloud.google.com/sql/docs/mysql/high-availability)
   * page in the Cloud SQL documentation.
   * If using Legacy HA (MySQL only), this causes the instance to failover to
   * its failover replica instance.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.Failover
   */
  failover: {
    methodKind: "unary";
    input: typeof SqlInstancesFailoverRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Reencrypt CMEK instance with latest key version.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.Reencrypt
   */
  reencrypt: {
    methodKind: "unary";
    input: typeof SqlInstancesReencryptRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Retrieves a resource containing information about a Cloud SQL instance.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.Get
   */
  get: {
    methodKind: "unary";
    input: typeof SqlInstancesGetRequestSchema;
    output: typeof DatabaseInstanceSchema;
  },
  /**
   * Imports data into a Cloud SQL instance from a SQL dump  or CSV file in
   * Cloud Storage.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.Import
   */
  import: {
    methodKind: "unary";
    input: typeof SqlInstancesImportRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a new Cloud SQL instance.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.Insert
   */
  insert: {
    methodKind: "unary";
    input: typeof SqlInstancesInsertRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists instances under a given project.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.List
   */
  list: {
    methodKind: "unary";
    input: typeof SqlInstancesListRequestSchema;
    output: typeof InstancesListResponseSchema;
  },
  /**
   * Lists all of the trusted Certificate Authorities (CAs) for the specified
   * instance. There can be up to three CAs listed: the CA that was used to sign
   * the certificate that is currently in use, a CA that has been added but not
   * yet used to sign a certificate, and a CA used to sign a certificate that
   * has previously rotated out.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.ListServerCas
   */
  listServerCas: {
    methodKind: "unary";
    input: typeof SqlInstancesListServerCasRequestSchema;
    output: typeof InstancesListServerCasResponseSchema;
  },
  /**
   * Partially updates settings of a Cloud SQL instance by merging the request
   * with the current configuration. This method supports patch semantics.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.Patch
   */
  patch: {
    methodKind: "unary";
    input: typeof SqlInstancesPatchRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Promotes the read replica instance to be an independent Cloud SQL
   * primary instance.
   * Using this operation might cause your instance to restart.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.PromoteReplica
   */
  promoteReplica: {
    methodKind: "unary";
    input: typeof SqlInstancesPromoteReplicaRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Switches over from the primary instance to the designated DR replica
   * instance.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.Switchover
   */
  switchover: {
    methodKind: "unary";
    input: typeof SqlInstancesSwitchoverRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes all client certificates and generates a new server SSL certificate
   * for the instance.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.ResetSslConfig
   */
  resetSslConfig: {
    methodKind: "unary";
    input: typeof SqlInstancesResetSslConfigRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Restarts a Cloud SQL instance.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.Restart
   */
  restart: {
    methodKind: "unary";
    input: typeof SqlInstancesRestartRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Restores a backup of a Cloud SQL instance. Using this operation might cause
   * your instance to restart.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.RestoreBackup
   */
  restoreBackup: {
    methodKind: "unary";
    input: typeof SqlInstancesRestoreBackupRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Rotates the server certificate to one signed by the Certificate Authority
   * (CA) version previously added with the addServerCA method. For instances
   * that have enabled Certificate Authority Service (CAS) based server CA,
   * please use RotateServerCertificate to rotate the server certificate.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.RotateServerCa
   */
  rotateServerCa: {
    methodKind: "unary";
    input: typeof SqlInstancesRotateServerCaRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Starts the replication in the read replica instance.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.StartReplica
   */
  startReplica: {
    methodKind: "unary";
    input: typeof SqlInstancesStartReplicaRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Stops the replication in the read replica instance.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.StopReplica
   */
  stopReplica: {
    methodKind: "unary";
    input: typeof SqlInstancesStopReplicaRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Truncate MySQL general and slow query log tables
   * MySQL only.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.TruncateLog
   */
  truncateLog: {
    methodKind: "unary";
    input: typeof SqlInstancesTruncateLogRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates settings of a Cloud SQL instance. Using this operation might cause
   * your instance to restart.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.Update
   */
  update: {
    methodKind: "unary";
    input: typeof SqlInstancesUpdateRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Generates a short-lived X509 certificate containing the provided public key
   * and signed by a private key specific to the target instance. Users may use
   * the certificate to authenticate as themselves when connecting to the
   * database.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.CreateEphemeral
   */
  createEphemeral: {
    methodKind: "unary";
    input: typeof SqlInstancesCreateEphemeralCertRequestSchema;
    output: typeof SslCertSchema;
  },
  /**
   * Reschedules the maintenance on the given instance.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.RescheduleMaintenance
   */
  rescheduleMaintenance: {
    methodKind: "unary";
    input: typeof SqlInstancesRescheduleMaintenanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Verify External primary instance external sync settings.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.VerifyExternalSyncSettings
   */
  verifyExternalSyncSettings: {
    methodKind: "unary";
    input: typeof SqlInstancesVerifyExternalSyncSettingsRequestSchema;
    output: typeof SqlInstancesVerifyExternalSyncSettingsResponseSchema;
  },
  /**
   * Start External primary instance migration.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.StartExternalSync
   */
  startExternalSync: {
    methodKind: "unary";
    input: typeof SqlInstancesStartExternalSyncRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Perform Disk Shrink on primary instance.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.PerformDiskShrink
   */
  performDiskShrink: {
    methodKind: "unary";
    input: typeof SqlInstancesPerformDiskShrinkRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Get Disk Shrink Config for a given instance.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.GetDiskShrinkConfig
   */
  getDiskShrinkConfig: {
    methodKind: "unary";
    input: typeof SqlInstancesGetDiskShrinkConfigRequestSchema;
    output: typeof SqlInstancesGetDiskShrinkConfigResponseSchema;
  },
  /**
   * Reset Replica Size to primary instance disk size.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.ResetReplicaSize
   */
  resetReplicaSize: {
    methodKind: "unary";
    input: typeof SqlInstancesResetReplicaSizeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Get Latest Recovery Time for a given instance.
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.GetLatestRecoveryTime
   */
  getLatestRecoveryTime: {
    methodKind: "unary";
    input: typeof SqlInstancesGetLatestRecoveryTimeRequestSchema;
    output: typeof SqlInstancesGetLatestRecoveryTimeResponseSchema;
  },
  /**
   * Acquire a lease for the setup of SQL Server Reporting Services (SSRS).
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.AcquireSsrsLease
   */
  acquireSsrsLease: {
    methodKind: "unary";
    input: typeof SqlInstancesAcquireSsrsLeaseRequestSchema;
    output: typeof SqlInstancesAcquireSsrsLeaseResponseSchema;
  },
  /**
   * Release a lease for the setup of SQL Server Reporting Services (SSRS).
   *
   * @generated from rpc google.cloud.sql.v1.SqlInstancesService.ReleaseSsrsLease
   */
  releaseSsrsLease: {
    methodKind: "unary";
    input: typeof SqlInstancesReleaseSsrsLeaseRequestSchema;
    output: typeof SqlInstancesReleaseSsrsLeaseResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_sql_v1_cloud_sql_instances, 0);

