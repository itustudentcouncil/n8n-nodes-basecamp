// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/sql/v1/cloud_sql_resources.proto (package google.cloud.sql.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/sql/v1/cloud_sql_resources.proto.
 */
export const file_google_cloud_sql_v1_cloud_sql_resources: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_field_behavior, file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_protobuf_wrappers]);

/**
 * An entry for an Access Control list.
 *
 * @generated from message google.cloud.sql.v1.AclEntry
 */
export type AclEntry = Message<"google.cloud.sql.v1.AclEntry"> & {
  /**
   * The allowlisted value for the access control list.
   *
   * @generated from field: string value = 1;
   */
  value: string;

  /**
   * The time when this access control entry expires in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp expiration_time = 2;
   */
  expirationTime?: Timestamp;

  /**
   * Optional. A label to identify this entry.
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * This is always `sql#aclEntry`.
   *
   * @generated from field: string kind = 4;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1.AclEntry.
 * Use `create(AclEntrySchema)` to create a new message.
 */
export const AclEntrySchema: GenMessage<AclEntry> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 0);

/**
 * An Admin API warning message.
 *
 * @generated from message google.cloud.sql.v1.ApiWarning
 */
export type ApiWarning = Message<"google.cloud.sql.v1.ApiWarning"> & {
  /**
   * Code to uniquely identify the warning type.
   *
   * @generated from field: google.cloud.sql.v1.ApiWarning.SqlApiWarningCode code = 1;
   */
  code: ApiWarning_SqlApiWarningCode;

  /**
   * The warning message.
   *
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * The region name for REGION_UNREACHABLE warning.
   *
   * @generated from field: string region = 3;
   */
  region: string;
};

/**
 * Describes the message google.cloud.sql.v1.ApiWarning.
 * Use `create(ApiWarningSchema)` to create a new message.
 */
export const ApiWarningSchema: GenMessage<ApiWarning> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 1);

/**
 * @generated from enum google.cloud.sql.v1.ApiWarning.SqlApiWarningCode
 */
export enum ApiWarning_SqlApiWarningCode {
  /**
   * An unknown or unset warning type from Cloud SQL API.
   *
   * @generated from enum value: SQL_API_WARNING_CODE_UNSPECIFIED = 0;
   */
  SQL_API_WARNING_CODE_UNSPECIFIED = 0,

  /**
   * Warning when one or more regions are not reachable.  The returned result
   * set may be incomplete.
   *
   * @generated from enum value: REGION_UNREACHABLE = 1;
   */
  REGION_UNREACHABLE = 1,

  /**
   * Warning when user provided maxResults parameter exceeds the limit.  The
   * returned result set may be incomplete.
   *
   * @generated from enum value: MAX_RESULTS_EXCEEDS_LIMIT = 2;
   */
  MAX_RESULTS_EXCEEDS_LIMIT = 2,

  /**
   * Warning when user tries to create/update a user with credentials that
   * have previously been compromised by a public data breach.
   *
   * @generated from enum value: COMPROMISED_CREDENTIALS = 3;
   */
  COMPROMISED_CREDENTIALS = 3,

  /**
   * Warning when the operation succeeds but some non-critical workflow state
   * failed.
   *
   * @generated from enum value: INTERNAL_STATE_FAILURE = 4;
   */
  INTERNAL_STATE_FAILURE = 4,
}

/**
 * Describes the enum google.cloud.sql.v1.ApiWarning.SqlApiWarningCode.
 */
export const ApiWarning_SqlApiWarningCodeSchema: GenEnum<ApiWarning_SqlApiWarningCode> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 1, 0);

/**
 * We currently only support backup retention by specifying the number
 * of backups we will retain.
 *
 * @generated from message google.cloud.sql.v1.BackupRetentionSettings
 */
export type BackupRetentionSettings = Message<"google.cloud.sql.v1.BackupRetentionSettings"> & {
  /**
   * The unit that 'retained_backups' represents.
   *
   * @generated from field: google.cloud.sql.v1.BackupRetentionSettings.RetentionUnit retention_unit = 1;
   */
  retentionUnit: BackupRetentionSettings_RetentionUnit;

  /**
   * Depending on the value of retention_unit, this is used to determine
   * if a backup needs to be deleted.  If retention_unit is 'COUNT', we will
   * retain this many backups.
   *
   * @generated from field: google.protobuf.Int32Value retained_backups = 2;
   */
  retainedBackups?: number;
};

/**
 * Describes the message google.cloud.sql.v1.BackupRetentionSettings.
 * Use `create(BackupRetentionSettingsSchema)` to create a new message.
 */
export const BackupRetentionSettingsSchema: GenMessage<BackupRetentionSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 2);

/**
 * The units that retained_backups specifies, we only support COUNT.
 *
 * @generated from enum google.cloud.sql.v1.BackupRetentionSettings.RetentionUnit
 */
export enum BackupRetentionSettings_RetentionUnit {
  /**
   * Backup retention unit is unspecified, will be treated as COUNT.
   *
   * @generated from enum value: RETENTION_UNIT_UNSPECIFIED = 0;
   */
  RETENTION_UNIT_UNSPECIFIED = 0,

  /**
   * Retention will be by count, eg. "retain the most recent 7 backups".
   *
   * @generated from enum value: COUNT = 1;
   */
  COUNT = 1,
}

/**
 * Describes the enum google.cloud.sql.v1.BackupRetentionSettings.RetentionUnit.
 */
export const BackupRetentionSettings_RetentionUnitSchema: GenEnum<BackupRetentionSettings_RetentionUnit> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 2, 0);

/**
 * Database instance backup configuration.
 *
 * @generated from message google.cloud.sql.v1.BackupConfiguration
 */
export type BackupConfiguration = Message<"google.cloud.sql.v1.BackupConfiguration"> & {
  /**
   * Start time for the daily backup configuration in UTC timezone in the 24
   * hour format - `HH:MM`.
   *
   * @generated from field: string start_time = 1;
   */
  startTime: string;

  /**
   * Whether this configuration is enabled.
   *
   * @generated from field: google.protobuf.BoolValue enabled = 2;
   */
  enabled?: boolean;

  /**
   * This is always `sql#backupConfiguration`.
   *
   * @generated from field: string kind = 3;
   */
  kind: string;

  /**
   * (MySQL only) Whether binary log is enabled. If backup configuration is
   * disabled, binarylog must be disabled as well.
   *
   * @generated from field: google.protobuf.BoolValue binary_log_enabled = 4;
   */
  binaryLogEnabled?: boolean;

  /**
   * Reserved for future use.
   *
   * @generated from field: google.protobuf.BoolValue replication_log_archiving_enabled = 5;
   */
  replicationLogArchivingEnabled?: boolean;

  /**
   * Location of the backup
   *
   * @generated from field: string location = 6;
   */
  location: string;

  /**
   * Whether point in time recovery is enabled.
   *
   * @generated from field: google.protobuf.BoolValue point_in_time_recovery_enabled = 7;
   */
  pointInTimeRecoveryEnabled?: boolean;

  /**
   * Backup retention settings.
   *
   * @generated from field: google.cloud.sql.v1.BackupRetentionSettings backup_retention_settings = 8;
   */
  backupRetentionSettings?: BackupRetentionSettings;

  /**
   * The number of days of transaction logs we retain for point in time
   * restore, from 1-7.
   *
   * @generated from field: google.protobuf.Int32Value transaction_log_retention_days = 9;
   */
  transactionLogRetentionDays?: number;

  /**
   * Output only. This value contains the storage location of transactional logs
   * used to perform point-in-time recovery (PITR) for the database.
   *
   * @generated from field: optional google.cloud.sql.v1.BackupConfiguration.TransactionalLogStorageState transactional_log_storage_state = 10;
   */
  transactionalLogStorageState?: BackupConfiguration_TransactionalLogStorageState;
};

/**
 * Describes the message google.cloud.sql.v1.BackupConfiguration.
 * Use `create(BackupConfigurationSchema)` to create a new message.
 */
export const BackupConfigurationSchema: GenMessage<BackupConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 3);

/**
 * This value contains the storage location of the transactional logs
 * used to perform point-in-time recovery (PITR) for the database.
 *
 * @generated from enum google.cloud.sql.v1.BackupConfiguration.TransactionalLogStorageState
 */
export enum BackupConfiguration_TransactionalLogStorageState {
  /**
   * Unspecified.
   *
   * @generated from enum value: TRANSACTIONAL_LOG_STORAGE_STATE_UNSPECIFIED = 0;
   */
  TRANSACTIONAL_LOG_STORAGE_STATE_UNSPECIFIED = 0,

  /**
   * The transaction logs used for PITR for the instance are stored
   * on a data disk.
   *
   * @generated from enum value: DISK = 1;
   */
  DISK = 1,

  /**
   * The transaction logs used for PITR for the instance are switching from
   * being stored on a data disk to being stored in Cloud Storage.
   * Only applicable to MySQL.
   *
   * @generated from enum value: SWITCHING_TO_CLOUD_STORAGE = 2;
   */
  SWITCHING_TO_CLOUD_STORAGE = 2,

  /**
   * The transaction logs used for PITR for the instance are now stored
   * in Cloud Storage. Previously, they were stored on a data disk.
   * Only applicable to MySQL.
   *
   * @generated from enum value: SWITCHED_TO_CLOUD_STORAGE = 3;
   */
  SWITCHED_TO_CLOUD_STORAGE = 3,

  /**
   * The transaction logs used for PITR for the instance are stored in
   * Cloud Storage. Only applicable to MySQL and PostgreSQL.
   *
   * @generated from enum value: CLOUD_STORAGE = 4;
   */
  CLOUD_STORAGE = 4,
}

/**
 * Describes the enum google.cloud.sql.v1.BackupConfiguration.TransactionalLogStorageState.
 */
export const BackupConfiguration_TransactionalLogStorageStateSchema: GenEnum<BackupConfiguration_TransactionalLogStorageState> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 3, 0);

/**
 * Perform disk shrink context.
 *
 * @generated from message google.cloud.sql.v1.PerformDiskShrinkContext
 */
export type PerformDiskShrinkContext = Message<"google.cloud.sql.v1.PerformDiskShrinkContext"> & {
  /**
   * The target disk shrink size in GigaBytes.
   *
   * @generated from field: int64 target_size_gb = 1;
   */
  targetSizeGb: bigint;
};

/**
 * Describes the message google.cloud.sql.v1.PerformDiskShrinkContext.
 * Use `create(PerformDiskShrinkContextSchema)` to create a new message.
 */
export const PerformDiskShrinkContextSchema: GenMessage<PerformDiskShrinkContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 4);

/**
 * Backup context.
 *
 * @generated from message google.cloud.sql.v1.BackupContext
 */
export type BackupContext = Message<"google.cloud.sql.v1.BackupContext"> & {
  /**
   * The identifier of the backup.
   *
   * @generated from field: int64 backup_id = 1;
   */
  backupId: bigint;

  /**
   * This is always `sql#backupContext`.
   *
   * @generated from field: string kind = 2;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1.BackupContext.
 * Use `create(BackupContextSchema)` to create a new message.
 */
export const BackupContextSchema: GenMessage<BackupContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 5);

/**
 * Represents a SQL database on the Cloud SQL instance.
 *
 * @generated from message google.cloud.sql.v1.Database
 */
export type Database = Message<"google.cloud.sql.v1.Database"> & {
  /**
   * This is always `sql#database`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The Cloud SQL charset value.
   *
   * @generated from field: string charset = 2;
   */
  charset: string;

  /**
   * The Cloud SQL collation value.
   *
   * @generated from field: string collation = 3;
   */
  collation: string;

  /**
   * This field is deprecated and will be removed from a future version of the
   * API.
   *
   * @generated from field: string etag = 4;
   */
  etag: string;

  /**
   * The name of the database in the Cloud SQL instance. This does not include
   * the project ID or instance name.
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * The name of the Cloud SQL instance. This does not include the project ID.
   *
   * @generated from field: string instance = 6;
   */
  instance: string;

  /**
   * The URI of this resource.
   *
   * @generated from field: string self_link = 7;
   */
  selfLink: string;

  /**
   * The project ID of the project containing the Cloud SQL database. The Google
   * apps domain is prefixed if applicable.
   *
   * @generated from field: string project = 8;
   */
  project: string;

  /**
   * @generated from oneof google.cloud.sql.v1.Database.database_details
   */
  databaseDetails: {
    /**
     * @generated from field: google.cloud.sql.v1.SqlServerDatabaseDetails sqlserver_database_details = 9;
     */
    value: SqlServerDatabaseDetails;
    case: "sqlserverDatabaseDetails";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.sql.v1.Database.
 * Use `create(DatabaseSchema)` to create a new message.
 */
export const DatabaseSchema: GenMessage<Database> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 6);

/**
 * Represents a Sql Server database on the Cloud SQL instance.
 *
 * @generated from message google.cloud.sql.v1.SqlServerDatabaseDetails
 */
export type SqlServerDatabaseDetails = Message<"google.cloud.sql.v1.SqlServerDatabaseDetails"> & {
  /**
   * The version of SQL Server with which the database is to be made compatible
   *
   * @generated from field: int32 compatibility_level = 1;
   */
  compatibilityLevel: number;

  /**
   * The recovery model of a SQL Server database
   *
   * @generated from field: string recovery_model = 2;
   */
  recoveryModel: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlServerDatabaseDetails.
 * Use `create(SqlServerDatabaseDetailsSchema)` to create a new message.
 */
export const SqlServerDatabaseDetailsSchema: GenMessage<SqlServerDatabaseDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 7);

/**
 * Database flags for Cloud SQL instances.
 *
 * @generated from message google.cloud.sql.v1.DatabaseFlags
 */
export type DatabaseFlags = Message<"google.cloud.sql.v1.DatabaseFlags"> & {
  /**
   * The name of the flag. These flags are passed at instance startup, so
   * include both server options and system variables. Flags are
   * specified with underscores, not hyphens. For more information, see
   * [Configuring Database Flags](https://cloud.google.com/sql/docs/mysql/flags)
   * in the Cloud SQL documentation.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The value of the flag. Boolean flags are set to `on` for true
   * and `off` for false. This field must be omitted if the flag
   * doesn't take a value.
   *
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message google.cloud.sql.v1.DatabaseFlags.
 * Use `create(DatabaseFlagsSchema)` to create a new message.
 */
export const DatabaseFlagsSchema: GenMessage<DatabaseFlags> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 8);

/**
 * MySQL-specific external server sync settings.
 *
 * @generated from message google.cloud.sql.v1.MySqlSyncConfig
 */
export type MySqlSyncConfig = Message<"google.cloud.sql.v1.MySqlSyncConfig"> & {
  /**
   * Flags to use for the initial dump.
   *
   * @generated from field: repeated google.cloud.sql.v1.SyncFlags initial_sync_flags = 1;
   */
  initialSyncFlags: SyncFlags[];
};

/**
 * Describes the message google.cloud.sql.v1.MySqlSyncConfig.
 * Use `create(MySqlSyncConfigSchema)` to create a new message.
 */
export const MySqlSyncConfigSchema: GenMessage<MySqlSyncConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 9);

/**
 * Initial sync flags for certain Cloud SQL APIs.
 * Currently used for the MySQL external server initial dump.
 *
 * @generated from message google.cloud.sql.v1.SyncFlags
 */
export type SyncFlags = Message<"google.cloud.sql.v1.SyncFlags"> & {
  /**
   * The name of the flag.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The value of the flag. This field must be omitted if the flag
   * doesn't take a value.
   *
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message google.cloud.sql.v1.SyncFlags.
 * Use `create(SyncFlagsSchema)` to create a new message.
 */
export const SyncFlagsSchema: GenMessage<SyncFlags> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 10);

/**
 * Reference to another Cloud SQL instance.
 *
 * @generated from message google.cloud.sql.v1.InstanceReference
 */
export type InstanceReference = Message<"google.cloud.sql.v1.InstanceReference"> & {
  /**
   * The name of the Cloud SQL instance being referenced.
   * This does not include the project ID.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The region of the Cloud SQL instance being referenced.
   *
   * @generated from field: string region = 2;
   */
  region: string;

  /**
   * The project ID of the Cloud SQL instance being referenced.
   * The default is the same project ID as the instance references it.
   *
   * @generated from field: string project = 3;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1.InstanceReference.
 * Use `create(InstanceReferenceSchema)` to create a new message.
 */
export const InstanceReferenceSchema: GenMessage<InstanceReference> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 11);

/**
 * Read-replica configuration for connecting to the on-premises primary
 * instance.
 *
 * @generated from message google.cloud.sql.v1.DemoteMasterConfiguration
 */
export type DemoteMasterConfiguration = Message<"google.cloud.sql.v1.DemoteMasterConfiguration"> & {
  /**
   * This is always `sql#demoteMasterConfiguration`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * MySQL specific configuration when replicating from a MySQL on-premises
   * primary instance. Replication configuration information such as the
   * username, password, certificates, and keys are not stored in the instance
   * metadata. The configuration information is used only to set up the
   * replication connection and is stored by MySQL in a file named
   * `master.info` in the data directory.
   *
   * @generated from field: google.cloud.sql.v1.DemoteMasterMySqlReplicaConfiguration mysql_replica_configuration = 2;
   */
  mysqlReplicaConfiguration?: DemoteMasterMySqlReplicaConfiguration;
};

/**
 * Describes the message google.cloud.sql.v1.DemoteMasterConfiguration.
 * Use `create(DemoteMasterConfigurationSchema)` to create a new message.
 */
export const DemoteMasterConfigurationSchema: GenMessage<DemoteMasterConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 12);

/**
 * Read-replica configuration specific to MySQL databases.
 *
 * @generated from message google.cloud.sql.v1.DemoteMasterMySqlReplicaConfiguration
 */
export type DemoteMasterMySqlReplicaConfiguration = Message<"google.cloud.sql.v1.DemoteMasterMySqlReplicaConfiguration"> & {
  /**
   * This is always `sql#demoteMasterMysqlReplicaConfiguration`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The username for the replication connection.
   *
   * @generated from field: string username = 2;
   */
  username: string;

  /**
   * The password for the replication connection.
   *
   * @generated from field: string password = 3;
   */
  password: string;

  /**
   * PEM representation of the replica's private key. The corresponsing public
   * key is encoded in the client's certificate. The format of the replica's
   * private key can be either PKCS #1 or PKCS #8.
   *
   * @generated from field: string client_key = 4;
   */
  clientKey: string;

  /**
   * PEM representation of the replica's x509 certificate.
   *
   * @generated from field: string client_certificate = 5;
   */
  clientCertificate: string;

  /**
   * PEM representation of the trusted CA's x509 certificate.
   *
   * @generated from field: string ca_certificate = 6;
   */
  caCertificate: string;
};

/**
 * Describes the message google.cloud.sql.v1.DemoteMasterMySqlReplicaConfiguration.
 * Use `create(DemoteMasterMySqlReplicaConfigurationSchema)` to create a new message.
 */
export const DemoteMasterMySqlReplicaConfigurationSchema: GenMessage<DemoteMasterMySqlReplicaConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 13);

/**
 * Database instance export context.
 *
 * @generated from message google.cloud.sql.v1.ExportContext
 */
export type ExportContext = Message<"google.cloud.sql.v1.ExportContext"> & {
  /**
   * The path to the file in Google Cloud Storage where the export will be
   * stored. The URI is in the form `gs://bucketName/fileName`. If the file
   * already exists, the request succeeds, but the operation fails. If
   * `fileType` is `SQL` and the filename ends with .gz,
   * the contents are compressed.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * Databases to be exported. <br /> `MySQL instances:` If
   * `fileType` is `SQL` and no database is specified, all
   * databases are exported, except for the `mysql` system database.
   * If `fileType` is `CSV`, you can specify one database,
   * either by using this property or by using the
   * `csvExportOptions.selectQuery` property, which takes precedence
   * over this property. <br /> `PostgreSQL instances:` You must specify
   * one database to be exported. If `fileType` is `CSV`,
   * this database must match the one specified in the
   * `csvExportOptions.selectQuery` property. <br /> `SQL Server
   * instances:` You must specify one database to be exported, and the
   * `fileType` must be `BAK`.
   *
   * @generated from field: repeated string databases = 2;
   */
  databases: string[];

  /**
   * This is always `sql#exportContext`.
   *
   * @generated from field: string kind = 3;
   */
  kind: string;

  /**
   * Options for exporting data as SQL statements.
   *
   * @generated from field: google.cloud.sql.v1.ExportContext.SqlExportOptions sql_export_options = 4;
   */
  sqlExportOptions?: ExportContext_SqlExportOptions;

  /**
   * Options for exporting data as CSV. `MySQL` and `PostgreSQL`
   * instances only.
   *
   * @generated from field: google.cloud.sql.v1.ExportContext.SqlCsvExportOptions csv_export_options = 5;
   */
  csvExportOptions?: ExportContext_SqlCsvExportOptions;

  /**
   * The file type for the specified uri.
   *
   * @generated from field: google.cloud.sql.v1.SqlFileType file_type = 6;
   */
  fileType: SqlFileType;

  /**
   * Option for export offload.
   *
   * @generated from field: google.protobuf.BoolValue offload = 8;
   */
  offload?: boolean;

  /**
   * Options for exporting data as BAK files.
   *
   * @generated from field: google.cloud.sql.v1.ExportContext.SqlBakExportOptions bak_export_options = 9;
   */
  bakExportOptions?: ExportContext_SqlBakExportOptions;
};

/**
 * Describes the message google.cloud.sql.v1.ExportContext.
 * Use `create(ExportContextSchema)` to create a new message.
 */
export const ExportContextSchema: GenMessage<ExportContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 14);

/**
 * @generated from message google.cloud.sql.v1.ExportContext.SqlCsvExportOptions
 */
export type ExportContext_SqlCsvExportOptions = Message<"google.cloud.sql.v1.ExportContext.SqlCsvExportOptions"> & {
  /**
   * The select query used to extract the data.
   *
   * @generated from field: string select_query = 1;
   */
  selectQuery: string;

  /**
   * Specifies the character that should appear before a data character that
   * needs to be escaped.
   *
   * @generated from field: string escape_character = 2;
   */
  escapeCharacter: string;

  /**
   * Specifies the quoting character to be used when a data value is quoted.
   *
   * @generated from field: string quote_character = 3;
   */
  quoteCharacter: string;

  /**
   * Specifies the character that separates columns within each row (line) of
   * the file.
   *
   * @generated from field: string fields_terminated_by = 4;
   */
  fieldsTerminatedBy: string;

  /**
   * This is used to separate lines. If a line does not contain all fields,
   * the rest of the columns are set to their default values.
   *
   * @generated from field: string lines_terminated_by = 6;
   */
  linesTerminatedBy: string;
};

/**
 * Describes the message google.cloud.sql.v1.ExportContext.SqlCsvExportOptions.
 * Use `create(ExportContext_SqlCsvExportOptionsSchema)` to create a new message.
 */
export const ExportContext_SqlCsvExportOptionsSchema: GenMessage<ExportContext_SqlCsvExportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 14, 0);

/**
 * @generated from message google.cloud.sql.v1.ExportContext.SqlExportOptions
 */
export type ExportContext_SqlExportOptions = Message<"google.cloud.sql.v1.ExportContext.SqlExportOptions"> & {
  /**
   * Tables to export, or that were exported, from the specified database. If
   * you specify tables, specify one and only one database. For PostgreSQL
   * instances, you can specify only one table.
   *
   * @generated from field: repeated string tables = 1;
   */
  tables: string[];

  /**
   * Export only schemas.
   *
   * @generated from field: google.protobuf.BoolValue schema_only = 2;
   */
  schemaOnly?: boolean;

  /**
   * @generated from field: google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;
   */
  mysqlExportOptions?: ExportContext_SqlExportOptions_MysqlExportOptions;

  /**
   * Optional. The number of threads to use for parallel export.
   *
   * @generated from field: google.protobuf.Int32Value threads = 4;
   */
  threads?: number;

  /**
   * Optional. Whether or not the export should be parallel.
   *
   * @generated from field: google.protobuf.BoolValue parallel = 5;
   */
  parallel?: boolean;

  /**
   * Optional. Options for exporting from a Cloud SQL for PostgreSQL instance.
   *
   * @generated from field: google.cloud.sql.v1.ExportContext.SqlExportOptions.PostgresExportOptions postgres_export_options = 6;
   */
  postgresExportOptions?: ExportContext_SqlExportOptions_PostgresExportOptions;
};

/**
 * Describes the message google.cloud.sql.v1.ExportContext.SqlExportOptions.
 * Use `create(ExportContext_SqlExportOptionsSchema)` to create a new message.
 */
export const ExportContext_SqlExportOptionsSchema: GenMessage<ExportContext_SqlExportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 14, 1);

/**
 * Options for exporting from MySQL.
 *
 * @generated from message google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions
 */
export type ExportContext_SqlExportOptions_MysqlExportOptions = Message<"google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions"> & {
  /**
   * Option to include SQL statement required to set up replication. If set
   * to `1`, the dump file includes a CHANGE MASTER TO statement with the
   * binary log coordinates, and --set-gtid-purged is set to ON. If set to
   * `2`, the CHANGE MASTER TO statement is written as a SQL comment and
   * has no effect. If set to any value other than `1`, --set-gtid-purged
   * is set to OFF.
   *
   * @generated from field: google.protobuf.Int32Value master_data = 1;
   */
  masterData?: number;
};

/**
 * Describes the message google.cloud.sql.v1.ExportContext.SqlExportOptions.MysqlExportOptions.
 * Use `create(ExportContext_SqlExportOptions_MysqlExportOptionsSchema)` to create a new message.
 */
export const ExportContext_SqlExportOptions_MysqlExportOptionsSchema: GenMessage<ExportContext_SqlExportOptions_MysqlExportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 14, 1, 0);

/**
 * Options for exporting from a Cloud SQL for PostgreSQL instance.
 *
 * @generated from message google.cloud.sql.v1.ExportContext.SqlExportOptions.PostgresExportOptions
 */
export type ExportContext_SqlExportOptions_PostgresExportOptions = Message<"google.cloud.sql.v1.ExportContext.SqlExportOptions.PostgresExportOptions"> & {
  /**
   * Optional. Use this option to include DROP <object> SQL statements.
   * These statements are used to delete database objects before running the
   * import operation.
   *
   * @generated from field: google.protobuf.BoolValue clean = 1;
   */
  clean?: boolean;

  /**
   * Optional. Option to include an IF EXISTS SQL statement with each DROP
   * statement produced by clean.
   *
   * @generated from field: google.protobuf.BoolValue if_exists = 2;
   */
  ifExists?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1.ExportContext.SqlExportOptions.PostgresExportOptions.
 * Use `create(ExportContext_SqlExportOptions_PostgresExportOptionsSchema)` to create a new message.
 */
export const ExportContext_SqlExportOptions_PostgresExportOptionsSchema: GenMessage<ExportContext_SqlExportOptions_PostgresExportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 14, 1, 1);

/**
 * Options for exporting BAK files (SQL Server-only)
 *
 * @generated from message google.cloud.sql.v1.ExportContext.SqlBakExportOptions
 */
export type ExportContext_SqlBakExportOptions = Message<"google.cloud.sql.v1.ExportContext.SqlBakExportOptions"> & {
  /**
   * Whether or not the export should be striped.
   *
   * @generated from field: google.protobuf.BoolValue striped = 1;
   */
  striped?: boolean;

  /**
   * Option for specifying how many stripes to use for the export.
   * If blank, and the value of the striped field is true,
   * the number of stripes is automatically chosen.
   *
   * @generated from field: google.protobuf.Int32Value stripe_count = 2;
   */
  stripeCount?: number;

  /**
   * Type of this bak file will be export, FULL or DIFF, SQL Server only
   *
   * @generated from field: google.cloud.sql.v1.BakType bak_type = 4;
   */
  bakType: BakType;

  /**
   * Deprecated: copy_only is deprecated. Use differential_base instead
   *
   * @generated from field: google.protobuf.BoolValue copy_only = 5 [deprecated = true];
   * @deprecated
   */
  copyOnly?: boolean;

  /**
   * Whether or not the backup can be used as a differential base
   * copy_only backup can not be served as differential base
   *
   * @generated from field: google.protobuf.BoolValue differential_base = 6;
   */
  differentialBase?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1.ExportContext.SqlBakExportOptions.
 * Use `create(ExportContext_SqlBakExportOptionsSchema)` to create a new message.
 */
export const ExportContext_SqlBakExportOptionsSchema: GenMessage<ExportContext_SqlBakExportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 14, 2);

/**
 * Database instance import context.
 *
 * @generated from message google.cloud.sql.v1.ImportContext
 */
export type ImportContext = Message<"google.cloud.sql.v1.ImportContext"> & {
  /**
   * Path to the import file in Cloud Storage, in the form
   * `gs://bucketName/fileName`. Compressed gzip files (.gz) are supported
   * when `fileType` is `SQL`. The instance must have
   * write permissions to the bucket and read access to the file.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * The target database for the import. If `fileType` is `SQL`, this field
   * is required only if the import file does not specify a database, and is
   * overridden by any database specification in the import file. If
   * `fileType` is `CSV`, one database must be specified.
   *
   * @generated from field: string database = 2;
   */
  database: string;

  /**
   * This is always `sql#importContext`.
   *
   * @generated from field: string kind = 3;
   */
  kind: string;

  /**
   * The file type for the specified uri.\`SQL`: The file
   * contains SQL statements. \`CSV`: The file contains CSV data.
   *
   * @generated from field: google.cloud.sql.v1.SqlFileType file_type = 4;
   */
  fileType: SqlFileType;

  /**
   * Options for importing data as CSV.
   *
   * @generated from field: google.cloud.sql.v1.ImportContext.SqlCsvImportOptions csv_import_options = 5;
   */
  csvImportOptions?: ImportContext_SqlCsvImportOptions;

  /**
   * The PostgreSQL user for this import operation. PostgreSQL instances only.
   *
   * @generated from field: string import_user = 6;
   */
  importUser: string;

  /**
   * Import parameters specific to SQL Server .BAK files
   *
   * @generated from field: google.cloud.sql.v1.ImportContext.SqlBakImportOptions bak_import_options = 7;
   */
  bakImportOptions?: ImportContext_SqlBakImportOptions;

  /**
   * Optional. Options for importing data from SQL statements.
   *
   * @generated from field: google.cloud.sql.v1.ImportContext.SqlImportOptions sql_import_options = 8;
   */
  sqlImportOptions?: ImportContext_SqlImportOptions;
};

/**
 * Describes the message google.cloud.sql.v1.ImportContext.
 * Use `create(ImportContextSchema)` to create a new message.
 */
export const ImportContextSchema: GenMessage<ImportContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 15);

/**
 * @generated from message google.cloud.sql.v1.ImportContext.SqlImportOptions
 */
export type ImportContext_SqlImportOptions = Message<"google.cloud.sql.v1.ImportContext.SqlImportOptions"> & {
  /**
   * Optional. The number of threads to use for parallel import.
   *
   * @generated from field: google.protobuf.Int32Value threads = 1;
   */
  threads?: number;

  /**
   * Optional. Whether or not the import should be parallel.
   *
   * @generated from field: google.protobuf.BoolValue parallel = 2;
   */
  parallel?: boolean;

  /**
   * Optional. Options for importing from a Cloud SQL for PostgreSQL instance.
   *
   * @generated from field: google.cloud.sql.v1.ImportContext.SqlImportOptions.PostgresImportOptions postgres_import_options = 3;
   */
  postgresImportOptions?: ImportContext_SqlImportOptions_PostgresImportOptions;
};

/**
 * Describes the message google.cloud.sql.v1.ImportContext.SqlImportOptions.
 * Use `create(ImportContext_SqlImportOptionsSchema)` to create a new message.
 */
export const ImportContext_SqlImportOptionsSchema: GenMessage<ImportContext_SqlImportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 15, 0);

/**
 * @generated from message google.cloud.sql.v1.ImportContext.SqlImportOptions.PostgresImportOptions
 */
export type ImportContext_SqlImportOptions_PostgresImportOptions = Message<"google.cloud.sql.v1.ImportContext.SqlImportOptions.PostgresImportOptions"> & {
  /**
   * Optional. The --clean flag for the pg_restore utility. This flag
   * applies only if you enabled Cloud SQL to import files in parallel.
   *
   * @generated from field: google.protobuf.BoolValue clean = 1;
   */
  clean?: boolean;

  /**
   * Optional. The --if-exists flag for the pg_restore utility. This flag
   * applies only if you enabled Cloud SQL to import files in parallel.
   *
   * @generated from field: google.protobuf.BoolValue if_exists = 2;
   */
  ifExists?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1.ImportContext.SqlImportOptions.PostgresImportOptions.
 * Use `create(ImportContext_SqlImportOptions_PostgresImportOptionsSchema)` to create a new message.
 */
export const ImportContext_SqlImportOptions_PostgresImportOptionsSchema: GenMessage<ImportContext_SqlImportOptions_PostgresImportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 15, 0, 0);

/**
 * @generated from message google.cloud.sql.v1.ImportContext.SqlCsvImportOptions
 */
export type ImportContext_SqlCsvImportOptions = Message<"google.cloud.sql.v1.ImportContext.SqlCsvImportOptions"> & {
  /**
   * The table to which CSV data is imported.
   *
   * @generated from field: string table = 1;
   */
  table: string;

  /**
   * The columns to which CSV data is imported. If not specified, all columns
   * of the database table are loaded with CSV data.
   *
   * @generated from field: repeated string columns = 2;
   */
  columns: string[];

  /**
   * Specifies the character that should appear before a data character that
   * needs to be escaped.
   *
   * @generated from field: string escape_character = 4;
   */
  escapeCharacter: string;

  /**
   * Specifies the quoting character to be used when a data value is quoted.
   *
   * @generated from field: string quote_character = 5;
   */
  quoteCharacter: string;

  /**
   * Specifies the character that separates columns within each row (line) of
   * the file.
   *
   * @generated from field: string fields_terminated_by = 6;
   */
  fieldsTerminatedBy: string;

  /**
   * This is used to separate lines. If a line does not contain all fields,
   * the rest of the columns are set to their default values.
   *
   * @generated from field: string lines_terminated_by = 8;
   */
  linesTerminatedBy: string;
};

/**
 * Describes the message google.cloud.sql.v1.ImportContext.SqlCsvImportOptions.
 * Use `create(ImportContext_SqlCsvImportOptionsSchema)` to create a new message.
 */
export const ImportContext_SqlCsvImportOptionsSchema: GenMessage<ImportContext_SqlCsvImportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 15, 1);

/**
 * @generated from message google.cloud.sql.v1.ImportContext.SqlBakImportOptions
 */
export type ImportContext_SqlBakImportOptions = Message<"google.cloud.sql.v1.ImportContext.SqlBakImportOptions"> & {
  /**
   * @generated from field: google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;
   */
  encryptionOptions?: ImportContext_SqlBakImportOptions_EncryptionOptions;

  /**
   * Whether or not the backup set being restored is striped.
   * Applies only to Cloud SQL for SQL Server.
   *
   * @generated from field: google.protobuf.BoolValue striped = 2;
   */
  striped?: boolean;

  /**
   * Whether or not the backup importing will restore database
   * with NORECOVERY option
   * Applies only to Cloud SQL for SQL Server.
   *
   * @generated from field: google.protobuf.BoolValue no_recovery = 4;
   */
  noRecovery?: boolean;

  /**
   * Whether or not the backup importing request will just bring database
   * online without downloading Bak content only one of "no_recovery" and
   * "recovery_only" can be true otherwise error will return. Applies only to
   * Cloud SQL for SQL Server.
   *
   * @generated from field: google.protobuf.BoolValue recovery_only = 5;
   */
  recoveryOnly?: boolean;

  /**
   * Type of the bak content, FULL or DIFF
   *
   * @generated from field: google.cloud.sql.v1.BakType bak_type = 6;
   */
  bakType: BakType;

  /**
   * Optional. The timestamp when the import should stop. This timestamp is in
   * the [RFC 3339](https://tools.ietf.org/html/rfc3339) format (for example,
   * `2023-10-01T16:19:00.094`). This field is equivalent to the STOPAT
   * keyword and applies to Cloud SQL for SQL Server only.
   *
   * @generated from field: google.protobuf.Timestamp stop_at = 7;
   */
  stopAt?: Timestamp;

  /**
   * Optional. The marked transaction where the import should stop. This field
   * is equivalent to the STOPATMARK keyword and applies to Cloud SQL for SQL
   * Server only.
   *
   * @generated from field: string stop_at_mark = 8;
   */
  stopAtMark: string;
};

/**
 * Describes the message google.cloud.sql.v1.ImportContext.SqlBakImportOptions.
 * Use `create(ImportContext_SqlBakImportOptionsSchema)` to create a new message.
 */
export const ImportContext_SqlBakImportOptionsSchema: GenMessage<ImportContext_SqlBakImportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 15, 2);

/**
 * @generated from message google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions
 */
export type ImportContext_SqlBakImportOptions_EncryptionOptions = Message<"google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions"> & {
  /**
   * Path to the Certificate (.cer) in Cloud Storage, in the form
   * `gs://bucketName/fileName`. The instance must have
   * write permissions to the bucket and read access to the file.
   *
   * @generated from field: string cert_path = 1;
   */
  certPath: string;

  /**
   * Path to the Certificate Private Key (.pvk)  in Cloud Storage, in the
   * form `gs://bucketName/fileName`. The instance must have
   * write permissions to the bucket and read access to the file.
   *
   * @generated from field: string pvk_path = 2;
   */
  pvkPath: string;

  /**
   * Password that encrypts the private key
   *
   * @generated from field: string pvk_password = 3;
   */
  pvkPassword: string;
};

/**
 * Describes the message google.cloud.sql.v1.ImportContext.SqlBakImportOptions.EncryptionOptions.
 * Use `create(ImportContext_SqlBakImportOptions_EncryptionOptionsSchema)` to create a new message.
 */
export const ImportContext_SqlBakImportOptions_EncryptionOptionsSchema: GenMessage<ImportContext_SqlBakImportOptions_EncryptionOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 15, 2, 0);

/**
 * IP Management configuration.
 *
 * @generated from message google.cloud.sql.v1.IpConfiguration
 */
export type IpConfiguration = Message<"google.cloud.sql.v1.IpConfiguration"> & {
  /**
   * Whether the instance is assigned a public IP address or not.
   *
   * @generated from field: google.protobuf.BoolValue ipv4_enabled = 1;
   */
  ipv4Enabled?: boolean;

  /**
   * The resource link for the VPC network from which the Cloud SQL instance is
   * accessible for private IP. For example,
   * `/projects/myProject/global/networks/default`. This setting can
   * be updated, but it cannot be removed after it is set.
   *
   * @generated from field: string private_network = 2;
   */
  privateNetwork: string;

  /**
   * Use `ssl_mode` instead.
   *
   * Whether SSL/TLS connections over IP are enforced.
   * If set to false, then allow both non-SSL/non-TLS and SSL/TLS connections.
   * For SSL/TLS connections, the client certificate won't be verified. If
   * set to true, then only allow connections encrypted with SSL/TLS and with
   * valid client certificates. If you want to enforce SSL/TLS without enforcing
   * the requirement for valid client certificates, then use the `ssl_mode` flag
   * instead of the `require_ssl` flag.
   *
   * @generated from field: google.protobuf.BoolValue require_ssl = 3;
   */
  requireSsl?: boolean;

  /**
   * The list of external networks that are allowed to connect to the instance
   * using the IP. In 'CIDR' notation, also known as 'slash' notation (for
   * example: `157.197.200.0/24`).
   *
   * @generated from field: repeated google.cloud.sql.v1.AclEntry authorized_networks = 4;
   */
  authorizedNetworks: AclEntry[];

  /**
   * The name of the allocated ip range for the private ip Cloud SQL instance.
   * For example: "google-managed-services-default". If set, the instance ip
   * will be created in the allocated range. The range name must comply with
   * [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name
   * must be 1-63 characters long and match the regular expression
   * `[a-z]([-a-z0-9]*[a-z0-9])?.`
   *
   * @generated from field: string allocated_ip_range = 6;
   */
  allocatedIpRange: string;

  /**
   * Controls connectivity to private IP instances from Google services,
   * such as BigQuery.
   *
   * @generated from field: google.protobuf.BoolValue enable_private_path_for_google_cloud_services = 7;
   */
  enablePrivatePathForGoogleCloudServices?: boolean;

  /**
   * Specify how SSL/TLS is enforced in database connections. If you must use
   * the `require_ssl` flag for backward compatibility, then only the following
   * value pairs are valid:
   *
   * For PostgreSQL and MySQL:
   *
   * * `ssl_mode=ALLOW_UNENCRYPTED_AND_ENCRYPTED` and `require_ssl=false`
   * * `ssl_mode=ENCRYPTED_ONLY` and `require_ssl=false`
   * * `ssl_mode=TRUSTED_CLIENT_CERTIFICATE_REQUIRED` and `require_ssl=true`
   *
   * For SQL Server:
   *
   * * `ssl_mode=ALLOW_UNENCRYPTED_AND_ENCRYPTED` and `require_ssl=false`
   * * `ssl_mode=ENCRYPTED_ONLY` and `require_ssl=true`
   *
   * The value of `ssl_mode` has priority over the value of `require_ssl`.
   *
   * For example, for the pair `ssl_mode=ENCRYPTED_ONLY` and
   * `require_ssl=false`, `ssl_mode=ENCRYPTED_ONLY` means accept only SSL
   * connections, while `require_ssl=false` means accept both non-SSL
   * and SSL connections. In this case, MySQL and PostgreSQL databases respect
   * `ssl_mode` and accepts only SSL connections.
   *
   * @generated from field: google.cloud.sql.v1.IpConfiguration.SslMode ssl_mode = 8;
   */
  sslMode: IpConfiguration_SslMode;

  /**
   * PSC settings for this instance.
   *
   * @generated from field: optional google.cloud.sql.v1.PscConfig psc_config = 9;
   */
  pscConfig?: PscConfig;

  /**
   * Specify what type of CA is used for the server certificate.
   *
   * @generated from field: optional google.cloud.sql.v1.IpConfiguration.CaMode server_ca_mode = 10;
   */
  serverCaMode?: IpConfiguration_CaMode;
};

/**
 * Describes the message google.cloud.sql.v1.IpConfiguration.
 * Use `create(IpConfigurationSchema)` to create a new message.
 */
export const IpConfigurationSchema: GenMessage<IpConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 16);

/**
 * The SSL options for database connections.
 *
 * @generated from enum google.cloud.sql.v1.IpConfiguration.SslMode
 */
export enum IpConfiguration_SslMode {
  /**
   * The SSL mode is unknown.
   *
   * @generated from enum value: SSL_MODE_UNSPECIFIED = 0;
   */
  SSL_MODE_UNSPECIFIED = 0,

  /**
   * Allow non-SSL/non-TLS and SSL/TLS connections.
   * For SSL connections to MySQL and PostgreSQL, the client certificate
   * isn't verified.
   *
   * When this value is used, the legacy `require_ssl` flag must be false or
   * cleared to avoid a conflict between the values of the two flags.
   *
   * @generated from enum value: ALLOW_UNENCRYPTED_AND_ENCRYPTED = 1;
   */
  ALLOW_UNENCRYPTED_AND_ENCRYPTED = 1,

  /**
   * Only allow connections encrypted with SSL/TLS.
   * For SSL connections to MySQL and PostgreSQL, the client certificate
   * isn't verified.
   *
   * When this value is used, the legacy `require_ssl` flag must be false or
   * cleared to avoid a conflict between the values of the two flags.
   *
   * @generated from enum value: ENCRYPTED_ONLY = 2;
   */
  ENCRYPTED_ONLY = 2,

  /**
   * Only allow connections encrypted with SSL/TLS and with valid
   * client certificates.
   *
   * When this value is used, the legacy `require_ssl` flag must be true or
   * cleared to avoid the conflict between values of two flags.
   * PostgreSQL clients or users that connect using IAM database
   * authentication must use either the
   * [Cloud SQL Auth
   * Proxy](https://cloud.google.com/sql/docs/postgres/connect-auth-proxy) or
   * [Cloud SQL
   * Connectors](https://cloud.google.com/sql/docs/postgres/connect-connectors)
   * to enforce client identity verification.
   *
   * Only applicable to MySQL and PostgreSQL. Not applicable to SQL Server.
   *
   * @generated from enum value: TRUSTED_CLIENT_CERTIFICATE_REQUIRED = 3;
   */
  TRUSTED_CLIENT_CERTIFICATE_REQUIRED = 3,
}

/**
 * Describes the enum google.cloud.sql.v1.IpConfiguration.SslMode.
 */
export const IpConfiguration_SslModeSchema: GenEnum<IpConfiguration_SslMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 16, 0);

/**
 * Various Certificate Authority (CA) modes for certificate signing.
 *
 * @generated from enum google.cloud.sql.v1.IpConfiguration.CaMode
 */
export enum IpConfiguration_CaMode {
  /**
   * CA mode is unknown.
   *
   * @generated from enum value: CA_MODE_UNSPECIFIED = 0;
   */
  CA_MODE_UNSPECIFIED = 0,

  /**
   * Google-managed self-signed internal CA.
   *
   * @generated from enum value: GOOGLE_MANAGED_INTERNAL_CA = 1;
   */
  GOOGLE_MANAGED_INTERNAL_CA = 1,

  /**
   * Google-managed regional CA part of root CA hierarchy hosted on Google
   * Cloud's Certificate Authority Service (CAS).
   *
   * @generated from enum value: GOOGLE_MANAGED_CAS_CA = 2;
   */
  GOOGLE_MANAGED_CAS_CA = 2,
}

/**
 * Describes the enum google.cloud.sql.v1.IpConfiguration.CaMode.
 */
export const IpConfiguration_CaModeSchema: GenEnum<IpConfiguration_CaMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 16, 1);

/**
 * PSC settings for a Cloud SQL instance.
 *
 * @generated from message google.cloud.sql.v1.PscConfig
 */
export type PscConfig = Message<"google.cloud.sql.v1.PscConfig"> & {
  /**
   * Whether PSC connectivity is enabled for this instance.
   *
   * @generated from field: optional bool psc_enabled = 1;
   */
  pscEnabled?: boolean;

  /**
   * Optional. The list of consumer projects that are allow-listed for PSC
   * connections to this instance. This instance can be connected to with PSC
   * from any network in these projects.
   *
   * Each consumer project in this list may be represented by a project number
   * (numeric) or by a project id (alphanumeric).
   *
   * @generated from field: repeated string allowed_consumer_projects = 2;
   */
  allowedConsumerProjects: string[];
};

/**
 * Describes the message google.cloud.sql.v1.PscConfig.
 * Use `create(PscConfigSchema)` to create a new message.
 */
export const PscConfigSchema: GenMessage<PscConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 17);

/**
 * Preferred location. This specifies where a Cloud SQL instance is located.
 * Note that if the preferred location is not available, the instance will be
 * located as close as possible within the region. Only one location may be
 * specified.
 *
 * @generated from message google.cloud.sql.v1.LocationPreference
 */
export type LocationPreference = Message<"google.cloud.sql.v1.LocationPreference"> & {
  /**
   * The App Engine application to follow, it must be in the same region as the
   * Cloud SQL instance. WARNING: Changing this might restart the instance.
   *
   * @generated from field: string follow_gae_application = 1 [deprecated = true];
   * @deprecated
   */
  followGaeApplication: string;

  /**
   * The preferred Compute Engine zone (for example: us-central1-a,
   * us-central1-b, etc.). WARNING: Changing this might restart the instance.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The preferred Compute Engine zone for the secondary/failover
   * (for example: us-central1-a, us-central1-b, etc.).
   * To disable this field, set it to 'no_secondary_zone'.
   *
   * @generated from field: string secondary_zone = 4;
   */
  secondaryZone: string;

  /**
   * This is always `sql#locationPreference`.
   *
   * @generated from field: string kind = 3;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1.LocationPreference.
 * Use `create(LocationPreferenceSchema)` to create a new message.
 */
export const LocationPreferenceSchema: GenMessage<LocationPreference> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 18);

/**
 * Maintenance window. This specifies when a Cloud SQL instance is
 * restarted for system maintenance purposes.
 *
 * @generated from message google.cloud.sql.v1.MaintenanceWindow
 */
export type MaintenanceWindow = Message<"google.cloud.sql.v1.MaintenanceWindow"> & {
  /**
   * Hour of day - 0 to 23. Specify in the UTC time zone.
   *
   * @generated from field: google.protobuf.Int32Value hour = 1;
   */
  hour?: number;

  /**
   * Day of week - `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`,
   * `SATURDAY`, or `SUNDAY`. Specify in the UTC time zone.
   * Returned in output as an integer, 1 to 7, where `1` equals Monday.
   *
   * @generated from field: google.protobuf.Int32Value day = 2;
   */
  day?: number;

  /**
   * Maintenance timing settings: `canary`, `stable`, or `week5`.
   * For more information, see [About maintenance on Cloud SQL
   * instances](https://cloud.google.com/sql/docs/mysql/maintenance).
   *
   * @generated from field: google.cloud.sql.v1.SqlUpdateTrack update_track = 3;
   */
  updateTrack: SqlUpdateTrack;

  /**
   * This is always `sql#maintenanceWindow`.
   *
   * @generated from field: string kind = 4;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1.MaintenanceWindow.
 * Use `create(MaintenanceWindowSchema)` to create a new message.
 */
export const MaintenanceWindowSchema: GenMessage<MaintenanceWindow> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 19);

/**
 * Deny maintenance Periods. This specifies a date range during when all CSA
 * rollout will be denied.
 *
 * @generated from message google.cloud.sql.v1.DenyMaintenancePeriod
 */
export type DenyMaintenancePeriod = Message<"google.cloud.sql.v1.DenyMaintenancePeriod"> & {
  /**
   * "deny maintenance period" start date. If the year of the start date is
   * empty, the year of the end date also must be empty. In this case, it means
   * the deny maintenance period recurs every year. The date is in format
   * yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01
   *
   * @generated from field: string start_date = 1;
   */
  startDate: string;

  /**
   * "deny maintenance period" end date. If the year of the end date is empty,
   * the year of the start date also must be empty. In this case, it means the
   * no maintenance interval recurs every year. The date is in format yyyy-mm-dd
   * i.e., 2020-11-01, or mm-dd, i.e., 11-01
   *
   * @generated from field: string end_date = 2;
   */
  endDate: string;

  /**
   * Time in UTC when the "deny maintenance period" starts on start_date and
   * ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00
   *
   * @generated from field: string time = 3;
   */
  time: string;
};

/**
 * Describes the message google.cloud.sql.v1.DenyMaintenancePeriod.
 * Use `create(DenyMaintenancePeriodSchema)` to create a new message.
 */
export const DenyMaintenancePeriodSchema: GenMessage<DenyMaintenancePeriod> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 20);

/**
 * Insights configuration. This specifies when Cloud SQL Insights feature is
 * enabled and optional configuration.
 *
 * @generated from message google.cloud.sql.v1.InsightsConfig
 */
export type InsightsConfig = Message<"google.cloud.sql.v1.InsightsConfig"> & {
  /**
   * Whether Query Insights feature is enabled.
   *
   * @generated from field: bool query_insights_enabled = 1;
   */
  queryInsightsEnabled: boolean;

  /**
   * Whether Query Insights will record client address when enabled.
   *
   * @generated from field: bool record_client_address = 2;
   */
  recordClientAddress: boolean;

  /**
   * Whether Query Insights will record application tags from query when
   * enabled.
   *
   * @generated from field: bool record_application_tags = 3;
   */
  recordApplicationTags: boolean;

  /**
   * Maximum query length stored in bytes. Default value: 1024 bytes.
   * Range: 256-4500 bytes. Query length more than this field value will be
   * truncated to this value. When unset, query length will be the default
   * value. Changing query length will restart the database.
   *
   * @generated from field: google.protobuf.Int32Value query_string_length = 4;
   */
  queryStringLength?: number;

  /**
   * Number of query execution plans captured by Insights per minute
   * for all queries combined. Default is 5.
   *
   * @generated from field: google.protobuf.Int32Value query_plans_per_minute = 5;
   */
  queryPlansPerMinute?: number;
};

/**
 * Describes the message google.cloud.sql.v1.InsightsConfig.
 * Use `create(InsightsConfigSchema)` to create a new message.
 */
export const InsightsConfigSchema: GenMessage<InsightsConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 21);

/**
 * Read-replica configuration specific to MySQL databases.
 *
 * @generated from message google.cloud.sql.v1.MySqlReplicaConfiguration
 */
export type MySqlReplicaConfiguration = Message<"google.cloud.sql.v1.MySqlReplicaConfiguration"> & {
  /**
   * Path to a SQL dump file in Google Cloud Storage from which the replica
   * instance is to be created. The URI is in the form gs://bucketName/fileName.
   * Compressed gzip files (.gz) are also supported.
   * Dumps have the binlog co-ordinates from which replication
   * begins. This can be accomplished by setting --master-data to 1 when using
   * mysqldump.
   *
   * @generated from field: string dump_file_path = 1;
   */
  dumpFilePath: string;

  /**
   * The username for the replication connection.
   *
   * @generated from field: string username = 2;
   */
  username: string;

  /**
   * The password for the replication connection.
   *
   * @generated from field: string password = 3;
   */
  password: string;

  /**
   * Seconds to wait between connect retries. MySQL's default is 60 seconds.
   *
   * @generated from field: google.protobuf.Int32Value connect_retry_interval = 4;
   */
  connectRetryInterval?: number;

  /**
   * Interval in milliseconds between replication heartbeats.
   *
   * @generated from field: google.protobuf.Int64Value master_heartbeat_period = 5;
   */
  masterHeartbeatPeriod?: bigint;

  /**
   * PEM representation of the trusted CA's x509 certificate.
   *
   * @generated from field: string ca_certificate = 6;
   */
  caCertificate: string;

  /**
   * PEM representation of the replica's x509 certificate.
   *
   * @generated from field: string client_certificate = 7;
   */
  clientCertificate: string;

  /**
   * PEM representation of the replica's private key. The corresponsing public
   * key is encoded in the client's certificate.
   *
   * @generated from field: string client_key = 8;
   */
  clientKey: string;

  /**
   * A list of permissible ciphers to use for SSL encryption.
   *
   * @generated from field: string ssl_cipher = 9;
   */
  sslCipher: string;

  /**
   * Whether or not to check the primary instance's Common Name value in the
   * certificate that it sends during the SSL handshake.
   *
   * @generated from field: google.protobuf.BoolValue verify_server_certificate = 10;
   */
  verifyServerCertificate?: boolean;

  /**
   * This is always `sql#mysqlReplicaConfiguration`.
   *
   * @generated from field: string kind = 11;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1.MySqlReplicaConfiguration.
 * Use `create(MySqlReplicaConfigurationSchema)` to create a new message.
 */
export const MySqlReplicaConfigurationSchema: GenMessage<MySqlReplicaConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 22);

/**
 * Disk encryption configuration for an instance.
 *
 * @generated from message google.cloud.sql.v1.DiskEncryptionConfiguration
 */
export type DiskEncryptionConfiguration = Message<"google.cloud.sql.v1.DiskEncryptionConfiguration"> & {
  /**
   * Resource name of KMS key for disk encryption
   *
   * @generated from field: string kms_key_name = 1;
   */
  kmsKeyName: string;

  /**
   * This is always `sql#diskEncryptionConfiguration`.
   *
   * @generated from field: string kind = 2;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1.DiskEncryptionConfiguration.
 * Use `create(DiskEncryptionConfigurationSchema)` to create a new message.
 */
export const DiskEncryptionConfigurationSchema: GenMessage<DiskEncryptionConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 23);

/**
 * Disk encryption status for an instance.
 *
 * @generated from message google.cloud.sql.v1.DiskEncryptionStatus
 */
export type DiskEncryptionStatus = Message<"google.cloud.sql.v1.DiskEncryptionStatus"> & {
  /**
   * KMS key version used to encrypt the Cloud SQL instance resource
   *
   * @generated from field: string kms_key_version_name = 1;
   */
  kmsKeyVersionName: string;

  /**
   * This is always `sql#diskEncryptionStatus`.
   *
   * @generated from field: string kind = 2;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1.DiskEncryptionStatus.
 * Use `create(DiskEncryptionStatusSchema)` to create a new message.
 */
export const DiskEncryptionStatusSchema: GenMessage<DiskEncryptionStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 24);

/**
 * Database instance IP mapping
 *
 * @generated from message google.cloud.sql.v1.IpMapping
 */
export type IpMapping = Message<"google.cloud.sql.v1.IpMapping"> & {
  /**
   * The type of this IP address. A `PRIMARY` address is a public address that
   * can accept incoming connections. A `PRIVATE` address is a private address
   * that can accept incoming connections. An `OUTGOING` address is the source
   * address of connections originating from the instance, if supported.
   *
   * @generated from field: google.cloud.sql.v1.SqlIpAddressType type = 1;
   */
  type: SqlIpAddressType;

  /**
   * The IP address assigned.
   *
   * @generated from field: string ip_address = 2;
   */
  ipAddress: string;

  /**
   * The due time for this IP to be retired in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`. This field is only available when
   * the IP is scheduled to be retired.
   *
   * @generated from field: google.protobuf.Timestamp time_to_retire = 3;
   */
  timeToRetire?: Timestamp;
};

/**
 * Describes the message google.cloud.sql.v1.IpMapping.
 * Use `create(IpMappingSchema)` to create a new message.
 */
export const IpMappingSchema: GenMessage<IpMapping> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 25);

/**
 * An Operation resource.&nbsp;For successful operations that return an
 * Operation resource, only the fields relevant to the operation are populated
 * in the resource.
 *
 * @generated from message google.cloud.sql.v1.Operation
 */
export type Operation = Message<"google.cloud.sql.v1.Operation"> & {
  /**
   * This is always `sql#operation`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * @generated from field: string target_link = 2;
   */
  targetLink: string;

  /**
   * The status of an operation.
   *
   * @generated from field: google.cloud.sql.v1.Operation.SqlOperationStatus status = 3;
   */
  status: Operation_SqlOperationStatus;

  /**
   * The email address of the user who initiated this operation.
   *
   * @generated from field: string user = 4;
   */
  user: string;

  /**
   * The time this operation was enqueued in UTC timezone in [RFC
   * 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp insert_time = 5;
   */
  insertTime?: Timestamp;

  /**
   * The time this operation actually started in UTC timezone in [RFC
   * 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 6;
   */
  startTime?: Timestamp;

  /**
   * The time this operation finished in UTC timezone in [RFC
   * 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 7;
   */
  endTime?: Timestamp;

  /**
   * If errors occurred during processing of this operation, this field will be
   * populated.
   *
   * @generated from field: google.cloud.sql.v1.OperationErrors error = 8;
   */
  error?: OperationErrors;

  /**
   * An Admin API warning message.
   *
   * @generated from field: google.cloud.sql.v1.ApiWarning api_warning = 19;
   */
  apiWarning?: ApiWarning;

  /**
   * The type of the operation. Valid values are:
   * *  `CREATE`
   * *  `DELETE`
   * *  `UPDATE`
   * *  `RESTART`
   * *  `IMPORT`
   * *  `EXPORT`
   * *  `BACKUP_VOLUME`
   * *  `RESTORE_VOLUME`
   * *  `CREATE_USER`
   * *  `DELETE_USER`
   * *  `CREATE_DATABASE`
   * *  `DELETE_DATABASE`
   *
   * @generated from field: google.cloud.sql.v1.Operation.SqlOperationType operation_type = 9;
   */
  operationType: Operation_SqlOperationType;

  /**
   * The context for import operation, if applicable.
   *
   * @generated from field: google.cloud.sql.v1.ImportContext import_context = 10;
   */
  importContext?: ImportContext;

  /**
   * The context for export operation, if applicable.
   *
   * @generated from field: google.cloud.sql.v1.ExportContext export_context = 11;
   */
  exportContext?: ExportContext;

  /**
   * The context for backup operation, if applicable.
   *
   * @generated from field: google.cloud.sql.v1.BackupContext backup_context = 17;
   */
  backupContext?: BackupContext;

  /**
   * An identifier that uniquely identifies the operation. You can use this
   * identifier to retrieve the Operations resource that has information about
   * the operation.
   *
   * @generated from field: string name = 12;
   */
  name: string;

  /**
   * Name of the database instance related to this operation.
   *
   * @generated from field: string target_id = 13;
   */
  targetId: string;

  /**
   * The URI of this resource.
   *
   * @generated from field: string self_link = 14;
   */
  selfLink: string;

  /**
   * The project ID of the target instance related to this operation.
   *
   * @generated from field: string target_project = 15;
   */
  targetProject: string;

  /**
   * The context for acquire SSRS lease operation, if applicable.
   *
   * @generated from field: google.cloud.sql.v1.AcquireSsrsLeaseContext acquire_ssrs_lease_context = 20;
   */
  acquireSsrsLeaseContext?: AcquireSsrsLeaseContext;
};

/**
 * Describes the message google.cloud.sql.v1.Operation.
 * Use `create(OperationSchema)` to create a new message.
 */
export const OperationSchema: GenMessage<Operation> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 26);

/**
 * The type of Cloud SQL operation.
 *
 * @generated from enum google.cloud.sql.v1.Operation.SqlOperationType
 */
export enum Operation_SqlOperationType {
  /**
   * Unknown operation type.
   *
   * @generated from enum value: SQL_OPERATION_TYPE_UNSPECIFIED = 0;
   */
  SQL_OPERATION_TYPE_UNSPECIFIED = 0,

  /**
   * Imports data into a Cloud SQL instance.
   *
   * @generated from enum value: IMPORT = 1;
   */
  IMPORT = 1,

  /**
   * Exports data from a Cloud SQL instance to a Cloud Storage
   * bucket.
   *
   * @generated from enum value: EXPORT = 2;
   */
  EXPORT = 2,

  /**
   * Creates a new Cloud SQL instance.
   *
   * @generated from enum value: CREATE = 3;
   */
  CREATE = 3,

  /**
   * Updates the settings of a Cloud SQL instance.
   *
   * @generated from enum value: UPDATE = 4;
   */
  UPDATE = 4,

  /**
   * Deletes a Cloud SQL instance.
   *
   * @generated from enum value: DELETE = 5;
   */
  DELETE = 5,

  /**
   * Restarts the Cloud SQL instance.
   *
   * @generated from enum value: RESTART = 6;
   */
  RESTART = 6,

  /**
   * @generated from enum value: BACKUP = 7 [deprecated = true];
   * @deprecated
   */
  BACKUP = 7,

  /**
   * @generated from enum value: SNAPSHOT = 8 [deprecated = true];
   * @deprecated
   */
  SNAPSHOT = 8,

  /**
   * Performs instance backup.
   *
   * @generated from enum value: BACKUP_VOLUME = 9;
   */
  BACKUP_VOLUME = 9,

  /**
   * Deletes an instance backup.
   *
   * @generated from enum value: DELETE_VOLUME = 10;
   */
  DELETE_VOLUME = 10,

  /**
   * Restores an instance backup.
   *
   * @generated from enum value: RESTORE_VOLUME = 11;
   */
  RESTORE_VOLUME = 11,

  /**
   * Injects a privileged user in mysql for MOB instances.
   *
   * @generated from enum value: INJECT_USER = 12;
   */
  INJECT_USER = 12,

  /**
   * Clones a Cloud SQL instance.
   *
   * @generated from enum value: CLONE = 14;
   */
  CLONE = 14,

  /**
   * Stops replication on a Cloud SQL read replica instance.
   *
   * @generated from enum value: STOP_REPLICA = 15;
   */
  STOP_REPLICA = 15,

  /**
   * Starts replication on a Cloud SQL read replica instance.
   *
   * @generated from enum value: START_REPLICA = 16;
   */
  START_REPLICA = 16,

  /**
   * Promotes a Cloud SQL replica instance.
   *
   * @generated from enum value: PROMOTE_REPLICA = 17;
   */
  PROMOTE_REPLICA = 17,

  /**
   * Creates a Cloud SQL replica instance.
   *
   * @generated from enum value: CREATE_REPLICA = 18;
   */
  CREATE_REPLICA = 18,

  /**
   * Creates a new user in a Cloud SQL instance.
   *
   * @generated from enum value: CREATE_USER = 19;
   */
  CREATE_USER = 19,

  /**
   * Deletes a user from a Cloud SQL instance.
   *
   * @generated from enum value: DELETE_USER = 20;
   */
  DELETE_USER = 20,

  /**
   * Updates an existing user in a Cloud SQL instance.
   *
   * @generated from enum value: UPDATE_USER = 21;
   */
  UPDATE_USER = 21,

  /**
   * Creates a database in the Cloud SQL instance.
   *
   * @generated from enum value: CREATE_DATABASE = 22;
   */
  CREATE_DATABASE = 22,

  /**
   * Deletes a database in the Cloud SQL instance.
   *
   * @generated from enum value: DELETE_DATABASE = 23;
   */
  DELETE_DATABASE = 23,

  /**
   * Updates a database in the Cloud SQL instance.
   *
   * @generated from enum value: UPDATE_DATABASE = 24;
   */
  UPDATE_DATABASE = 24,

  /**
   * Performs failover of an HA-enabled Cloud SQL
   * failover replica.
   *
   * @generated from enum value: FAILOVER = 25;
   */
  FAILOVER = 25,

  /**
   * Deletes the backup taken by a backup run.
   *
   * @generated from enum value: DELETE_BACKUP = 26;
   */
  DELETE_BACKUP = 26,

  /**
   * @generated from enum value: RECREATE_REPLICA = 27;
   */
  RECREATE_REPLICA = 27,

  /**
   * Truncates a general or slow log table in MySQL.
   *
   * @generated from enum value: TRUNCATE_LOG = 28;
   */
  TRUNCATE_LOG = 28,

  /**
   * Demotes the stand-alone instance to be a Cloud SQL
   * read replica for an external database server.
   *
   * @generated from enum value: DEMOTE_MASTER = 29;
   */
  DEMOTE_MASTER = 29,

  /**
   * Indicates that the instance is currently in maintenance. Maintenance
   * typically causes the instance to be unavailable for 1-3 minutes.
   *
   * @generated from enum value: MAINTENANCE = 30;
   */
  MAINTENANCE = 30,

  /**
   * This field is deprecated, and will be removed in future version of API.
   *
   * @generated from enum value: ENABLE_PRIVATE_IP = 31 [deprecated = true];
   * @deprecated
   */
  ENABLE_PRIVATE_IP = 31,

  /**
   * @generated from enum value: DEFER_MAINTENANCE = 32 [deprecated = true];
   * @deprecated
   */
  DEFER_MAINTENANCE = 32,

  /**
   * Creates clone instance.
   *
   * @generated from enum value: CREATE_CLONE = 33 [deprecated = true];
   * @deprecated
   */
  CREATE_CLONE = 33,

  /**
   * Reschedule maintenance to another time.
   *
   * @generated from enum value: RESCHEDULE_MAINTENANCE = 34;
   */
  RESCHEDULE_MAINTENANCE = 34,

  /**
   * Starts external sync of a Cloud SQL EM replica to an external primary
   * instance.
   *
   * @generated from enum value: START_EXTERNAL_SYNC = 35;
   */
  START_EXTERNAL_SYNC = 35,

  /**
   * Recovers logs from an instance's old data disk.
   *
   * @generated from enum value: LOG_CLEANUP = 36;
   */
  LOG_CLEANUP = 36,

  /**
   * Performs auto-restart of an HA-enabled Cloud SQL database for auto
   * recovery.
   *
   * @generated from enum value: AUTO_RESTART = 37;
   */
  AUTO_RESTART = 37,

  /**
   * Re-encrypts CMEK instances with latest key version.
   *
   * @generated from enum value: REENCRYPT = 38;
   */
  REENCRYPT = 38,

  /**
   * Switches the roles of the primary and replica pair. The target instance
   * should be the replica.
   *
   * @generated from enum value: SWITCHOVER = 39;
   */
  SWITCHOVER = 39,

  /**
   * Acquire a lease for the setup of SQL Server Reporting Services (SSRS).
   *
   * @generated from enum value: ACQUIRE_SSRS_LEASE = 42;
   */
  ACQUIRE_SSRS_LEASE = 42,

  /**
   * Release a lease for the setup of SQL Server Reporting Services (SSRS).
   *
   * @generated from enum value: RELEASE_SSRS_LEASE = 43;
   */
  RELEASE_SSRS_LEASE = 43,

  /**
   * Reconfigures old primary after a promote replica operation. Effect of a
   * promote operation to the old primary is executed in this operation,
   * asynchronously from the promote replica operation executed to the
   * replica.
   *
   * @generated from enum value: RECONFIGURE_OLD_PRIMARY = 44;
   */
  RECONFIGURE_OLD_PRIMARY = 44,

  /**
   * Indicates that the instance, its read replicas, and its cascading
   * replicas are in maintenance. Maintenance typically gets initiated on
   * groups of replicas first, followed by the primary instance. For each
   * instance, maintenance typically causes the instance to be unavailable for
   * 1-3 minutes.
   *
   * @generated from enum value: CLUSTER_MAINTENANCE = 45;
   */
  CLUSTER_MAINTENANCE = 45,

  /**
   * Indicates that the instance (and any of its replicas) are currently in
   * maintenance. This is initiated as a self-service request by using SSM.
   * Maintenance typically causes the instance to be unavailable for 1-3
   * minutes.
   *
   * @generated from enum value: SELF_SERVICE_MAINTENANCE = 46;
   */
  SELF_SERVICE_MAINTENANCE = 46,

  /**
   * Switches a primary instance to a replica. This operation runs as part of
   * a switchover operation to the original primary instance.
   *
   * @generated from enum value: SWITCHOVER_TO_REPLICA = 47;
   */
  SWITCHOVER_TO_REPLICA = 47,

  /**
   * Updates the major version of a Cloud SQL instance.
   *
   * @generated from enum value: MAJOR_VERSION_UPGRADE = 48;
   */
  MAJOR_VERSION_UPGRADE = 48,
}

/**
 * Describes the enum google.cloud.sql.v1.Operation.SqlOperationType.
 */
export const Operation_SqlOperationTypeSchema: GenEnum<Operation_SqlOperationType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 26, 0);

/**
 * The status of an operation.
 *
 * @generated from enum google.cloud.sql.v1.Operation.SqlOperationStatus
 */
export enum Operation_SqlOperationStatus {
  /**
   * The state of the operation is unknown.
   *
   * @generated from enum value: SQL_OPERATION_STATUS_UNSPECIFIED = 0;
   */
  SQL_OPERATION_STATUS_UNSPECIFIED = 0,

  /**
   * The operation has been queued, but has not started yet.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The operation is running.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * The operation completed.
   *
   * @generated from enum value: DONE = 3;
   */
  DONE = 3,
}

/**
 * Describes the enum google.cloud.sql.v1.Operation.SqlOperationStatus.
 */
export const Operation_SqlOperationStatusSchema: GenEnum<Operation_SqlOperationStatus> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 26, 1);

/**
 * Database instance operation error.
 *
 * @generated from message google.cloud.sql.v1.OperationError
 */
export type OperationError = Message<"google.cloud.sql.v1.OperationError"> & {
  /**
   * This is always `sql#operationError`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Identifies the specific error that occurred.
   *
   * @generated from field: string code = 2;
   */
  code: string;

  /**
   * Additional information about the error encountered.
   *
   * @generated from field: string message = 3;
   */
  message: string;
};

/**
 * Describes the message google.cloud.sql.v1.OperationError.
 * Use `create(OperationErrorSchema)` to create a new message.
 */
export const OperationErrorSchema: GenMessage<OperationError> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 27);

/**
 * Database instance operation errors list wrapper.
 *
 * @generated from message google.cloud.sql.v1.OperationErrors
 */
export type OperationErrors = Message<"google.cloud.sql.v1.OperationErrors"> & {
  /**
   * This is always `sql#operationErrors`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The list of errors encountered while processing this operation.
   *
   * @generated from field: repeated google.cloud.sql.v1.OperationError errors = 2;
   */
  errors: OperationError[];
};

/**
 * Describes the message google.cloud.sql.v1.OperationErrors.
 * Use `create(OperationErrorsSchema)` to create a new message.
 */
export const OperationErrorsSchema: GenMessage<OperationErrors> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 28);

/**
 * Database instance local user password validation policy
 *
 * @generated from message google.cloud.sql.v1.PasswordValidationPolicy
 */
export type PasswordValidationPolicy = Message<"google.cloud.sql.v1.PasswordValidationPolicy"> & {
  /**
   * Minimum number of characters allowed.
   *
   * @generated from field: google.protobuf.Int32Value min_length = 1;
   */
  minLength?: number;

  /**
   * The complexity of the password.
   *
   * @generated from field: google.cloud.sql.v1.PasswordValidationPolicy.Complexity complexity = 2;
   */
  complexity: PasswordValidationPolicy_Complexity;

  /**
   * Number of previous passwords that cannot be reused.
   *
   * @generated from field: google.protobuf.Int32Value reuse_interval = 3;
   */
  reuseInterval?: number;

  /**
   * Disallow username as a part of the password.
   *
   * @generated from field: google.protobuf.BoolValue disallow_username_substring = 4;
   */
  disallowUsernameSubstring?: boolean;

  /**
   * Minimum interval after which the password can be changed. This flag is only
   * supported for PostgreSQL.
   *
   * @generated from field: google.protobuf.Duration password_change_interval = 5;
   */
  passwordChangeInterval?: Duration;

  /**
   * Whether the password policy is enabled or not.
   *
   * @generated from field: google.protobuf.BoolValue enable_password_policy = 6;
   */
  enablePasswordPolicy?: boolean;

  /**
   * This field is deprecated and will be removed in a future version of the
   * API.
   *
   * @generated from field: google.protobuf.BoolValue disallow_compromised_credentials = 7 [deprecated = true];
   * @deprecated
   */
  disallowCompromisedCredentials?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1.PasswordValidationPolicy.
 * Use `create(PasswordValidationPolicySchema)` to create a new message.
 */
export const PasswordValidationPolicySchema: GenMessage<PasswordValidationPolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 29);

/**
 * The complexity choices of the password.
 *
 * @generated from enum google.cloud.sql.v1.PasswordValidationPolicy.Complexity
 */
export enum PasswordValidationPolicy_Complexity {
  /**
   * Complexity check is not specified.
   *
   * @generated from enum value: COMPLEXITY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * A combination of lowercase, uppercase, numeric, and non-alphanumeric
   * characters.
   *
   * @generated from enum value: COMPLEXITY_DEFAULT = 1;
   */
  DEFAULT = 1,
}

/**
 * Describes the enum google.cloud.sql.v1.PasswordValidationPolicy.Complexity.
 */
export const PasswordValidationPolicy_ComplexitySchema: GenEnum<PasswordValidationPolicy_Complexity> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 29, 0);

/**
 * Data cache configurations.
 *
 * @generated from message google.cloud.sql.v1.DataCacheConfig
 */
export type DataCacheConfig = Message<"google.cloud.sql.v1.DataCacheConfig"> & {
  /**
   * Whether data cache is enabled for the instance.
   *
   * @generated from field: bool data_cache_enabled = 1;
   */
  dataCacheEnabled: boolean;
};

/**
 * Describes the message google.cloud.sql.v1.DataCacheConfig.
 * Use `create(DataCacheConfigSchema)` to create a new message.
 */
export const DataCacheConfigSchema: GenMessage<DataCacheConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 30);

/**
 * Database instance settings.
 *
 * @generated from message google.cloud.sql.v1.Settings
 */
export type Settings = Message<"google.cloud.sql.v1.Settings"> & {
  /**
   * The version of instance settings. This is a required field for update
   * method to make sure concurrent updates are handled properly. During update,
   * use the most recent settingsVersion value for this instance and do not try
   * to update this value.
   *
   * @generated from field: google.protobuf.Int64Value settings_version = 1;
   */
  settingsVersion?: bigint;

  /**
   * The App Engine app IDs that can access this instance.
   * (Deprecated) Applied to First Generation instances only.
   *
   * @generated from field: repeated string authorized_gae_applications = 2 [deprecated = true];
   * @deprecated
   */
  authorizedGaeApplications: string[];

  /**
   * The tier (or machine type) for this instance, for example
   * `db-custom-1-3840`. WARNING: Changing this restarts the instance.
   *
   * @generated from field: string tier = 3;
   */
  tier: string;

  /**
   * This is always `sql#settings`.
   *
   * @generated from field: string kind = 4;
   */
  kind: string;

  /**
   * User-provided labels, represented as a dictionary where each label is a
   * single key value pair.
   *
   * @generated from field: map<string, string> user_labels = 5;
   */
  userLabels: { [key: string]: string };

  /**
   * Availability type. Potential values:
   * *  `ZONAL`: The instance serves data from only one zone. Outages in that
   * zone affect data accessibility.
   * *  `REGIONAL`: The instance can serve data from more than one zone in a
   * region (it is highly available)./
   *
   * For more information, see [Overview of the High Availability
   * Configuration](https://cloud.google.com/sql/docs/mysql/high-availability).
   *
   * @generated from field: google.cloud.sql.v1.SqlAvailabilityType availability_type = 6;
   */
  availabilityType: SqlAvailabilityType;

  /**
   * The pricing plan for this instance. This can be either `PER_USE` or
   * `PACKAGE`. Only `PER_USE` is supported for Second Generation instances.
   *
   * @generated from field: google.cloud.sql.v1.SqlPricingPlan pricing_plan = 7;
   */
  pricingPlan: SqlPricingPlan;

  /**
   * The type of replication this instance uses. This can be either
   * `ASYNCHRONOUS` or `SYNCHRONOUS`. (Deprecated) This property was only
   * applicable to First Generation instances.
   *
   * @generated from field: google.cloud.sql.v1.SqlReplicationType replication_type = 8 [deprecated = true];
   * @deprecated
   */
  replicationType: SqlReplicationType;

  /**
   * The maximum size to which storage capacity can be automatically increased.
   * The default value is 0, which specifies that there is no limit.
   *
   * @generated from field: google.protobuf.Int64Value storage_auto_resize_limit = 9;
   */
  storageAutoResizeLimit?: bigint;

  /**
   * The activation policy specifies when the instance is activated; it is
   * applicable only when the instance state is RUNNABLE. Valid values:
   * *  `ALWAYS`: The instance is on, and remains so even in the absence of
   * connection requests.
   * *  `NEVER`: The instance is off; it is not activated, even if a
   * connection request arrives.
   *
   * @generated from field: google.cloud.sql.v1.Settings.SqlActivationPolicy activation_policy = 10;
   */
  activationPolicy: Settings_SqlActivationPolicy;

  /**
   * The settings for IP Management. This allows to enable or disable the
   * instance IP and manage which external networks can connect to the instance.
   * The IPv4 address cannot be disabled for Second Generation instances.
   *
   * @generated from field: google.cloud.sql.v1.IpConfiguration ip_configuration = 11;
   */
  ipConfiguration?: IpConfiguration;

  /**
   * Configuration to increase storage size automatically. The default value is
   * true.
   *
   * @generated from field: google.protobuf.BoolValue storage_auto_resize = 12;
   */
  storageAutoResize?: boolean;

  /**
   * The location preference settings. This allows the instance to be located as
   * near as possible to either an App Engine app or Compute Engine zone for
   * better performance. App Engine co-location was only applicable to First
   * Generation instances.
   *
   * @generated from field: google.cloud.sql.v1.LocationPreference location_preference = 13;
   */
  locationPreference?: LocationPreference;

  /**
   * The database flags passed to the instance at startup.
   *
   * @generated from field: repeated google.cloud.sql.v1.DatabaseFlags database_flags = 14;
   */
  databaseFlags: DatabaseFlags[];

  /**
   * The type of data disk: `PD_SSD` (default) or `PD_HDD`. Not used for
   * First Generation instances.
   *
   * @generated from field: google.cloud.sql.v1.SqlDataDiskType data_disk_type = 15;
   */
  dataDiskType: SqlDataDiskType;

  /**
   * The maintenance window for this instance. This specifies when the instance
   * can be restarted for maintenance purposes.
   *
   * @generated from field: google.cloud.sql.v1.MaintenanceWindow maintenance_window = 16;
   */
  maintenanceWindow?: MaintenanceWindow;

  /**
   * The daily backup configuration for the instance.
   *
   * @generated from field: google.cloud.sql.v1.BackupConfiguration backup_configuration = 17;
   */
  backupConfiguration?: BackupConfiguration;

  /**
   * Configuration specific to read replica instances. Indicates whether
   * replication is enabled or not. WARNING: Changing this restarts the
   * instance.
   *
   * @generated from field: google.protobuf.BoolValue database_replication_enabled = 18;
   */
  databaseReplicationEnabled?: boolean;

  /**
   * Configuration specific to read replica instances. Indicates whether
   * database flags for crash-safe replication are enabled. This property was
   * only applicable to First Generation instances.
   *
   * @generated from field: google.protobuf.BoolValue crash_safe_replication_enabled = 19 [deprecated = true];
   * @deprecated
   */
  crashSafeReplicationEnabled?: boolean;

  /**
   * The size of data disk, in GB. The data disk size minimum is 10GB.
   *
   * @generated from field: google.protobuf.Int64Value data_disk_size_gb = 20;
   */
  dataDiskSizeGb?: bigint;

  /**
   * Active Directory configuration, relevant only for Cloud SQL for SQL Server.
   *
   * @generated from field: google.cloud.sql.v1.SqlActiveDirectoryConfig active_directory_config = 22;
   */
  activeDirectoryConfig?: SqlActiveDirectoryConfig;

  /**
   * The name of server Instance collation.
   *
   * @generated from field: string collation = 23;
   */
  collation: string;

  /**
   * Deny maintenance periods
   *
   * @generated from field: repeated google.cloud.sql.v1.DenyMaintenancePeriod deny_maintenance_periods = 24;
   */
  denyMaintenancePeriods: DenyMaintenancePeriod[];

  /**
   * Insights configuration, for now relevant only for Postgres.
   *
   * @generated from field: google.cloud.sql.v1.InsightsConfig insights_config = 25;
   */
  insightsConfig?: InsightsConfig;

  /**
   * The local user password validation policy of the instance.
   *
   * @generated from field: google.cloud.sql.v1.PasswordValidationPolicy password_validation_policy = 27;
   */
  passwordValidationPolicy?: PasswordValidationPolicy;

  /**
   * SQL Server specific audit configuration.
   *
   * @generated from field: google.cloud.sql.v1.SqlServerAuditConfig sql_server_audit_config = 29;
   */
  sqlServerAuditConfig?: SqlServerAuditConfig;

  /**
   * Optional. The edition of the instance.
   *
   * @generated from field: google.cloud.sql.v1.Settings.Edition edition = 38;
   */
  edition: Settings_Edition;

  /**
   * Specifies if connections must use Cloud SQL connectors.
   * Option values include the following: `NOT_REQUIRED` (Cloud SQL instances
   * can be connected without Cloud SQL
   * Connectors) and `REQUIRED` (Only allow connections that use Cloud SQL
   * Connectors).
   *
   * Note that using REQUIRED disables all existing authorized networks. If
   * this field is not specified when creating a new instance, NOT_REQUIRED is
   * used. If this field is not specified when patching or updating an existing
   * instance, it is left unchanged in the instance.
   *
   * @generated from field: google.cloud.sql.v1.Settings.ConnectorEnforcement connector_enforcement = 32;
   */
  connectorEnforcement: Settings_ConnectorEnforcement;

  /**
   * Configuration to protect against accidental instance deletion.
   *
   * @generated from field: google.protobuf.BoolValue deletion_protection_enabled = 33;
   */
  deletionProtectionEnabled?: boolean;

  /**
   * Server timezone, relevant only for Cloud SQL for SQL Server.
   *
   * @generated from field: string time_zone = 34;
   */
  timeZone: string;

  /**
   * Specifies advanced machine configuration for the instances relevant only
   * for SQL Server.
   *
   * @generated from field: google.cloud.sql.v1.AdvancedMachineFeatures advanced_machine_features = 35;
   */
  advancedMachineFeatures?: AdvancedMachineFeatures;

  /**
   * Configuration for data cache.
   *
   * @generated from field: google.cloud.sql.v1.DataCacheConfig data_cache_config = 37;
   */
  dataCacheConfig?: DataCacheConfig;

  /**
   * Optional. When this parameter is set to true, Cloud SQL instances can
   * connect to Vertex AI to pass requests for real-time predictions and
   * insights to the AI. The default value is false. This applies only to Cloud
   * SQL for PostgreSQL instances.
   *
   * @generated from field: google.protobuf.BoolValue enable_google_ml_integration = 40;
   */
  enableGoogleMlIntegration?: boolean;

  /**
   * Optional. By default, Cloud SQL instances have schema extraction disabled
   * for Dataplex. When this parameter is set to true, schema extraction for
   * Dataplex on Cloud SQL instances is activated.
   *
   * @generated from field: google.protobuf.BoolValue enable_dataplex_integration = 41;
   */
  enableDataplexIntegration?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1.Settings.
 * Use `create(SettingsSchema)` to create a new message.
 */
export const SettingsSchema: GenMessage<Settings> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 31);

/**
 * Specifies when the instance is activated.
 *
 * @generated from enum google.cloud.sql.v1.Settings.SqlActivationPolicy
 */
export enum Settings_SqlActivationPolicy {
  /**
   * Unknown activation plan.
   *
   * @generated from enum value: SQL_ACTIVATION_POLICY_UNSPECIFIED = 0;
   */
  SQL_ACTIVATION_POLICY_UNSPECIFIED = 0,

  /**
   * The instance is always up and running.
   *
   * @generated from enum value: ALWAYS = 1;
   */
  ALWAYS = 1,

  /**
   * The instance never starts.
   *
   * @generated from enum value: NEVER = 2;
   */
  NEVER = 2,

  /**
   * The instance starts upon receiving requests.
   *
   * @generated from enum value: ON_DEMAND = 3 [deprecated = true];
   * @deprecated
   */
  ON_DEMAND = 3,
}

/**
 * Describes the enum google.cloud.sql.v1.Settings.SqlActivationPolicy.
 */
export const Settings_SqlActivationPolicySchema: GenEnum<Settings_SqlActivationPolicy> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 31, 0);

/**
 * The edition of the instance, can be ENTERPRISE or ENTERPRISE_PLUS.
 *
 * @generated from enum google.cloud.sql.v1.Settings.Edition
 */
export enum Settings_Edition {
  /**
   * The instance did not specify the edition.
   *
   * @generated from enum value: EDITION_UNSPECIFIED = 0;
   */
  EDITION_UNSPECIFIED = 0,

  /**
   * The instance is an enterprise edition.
   *
   * @generated from enum value: ENTERPRISE = 2;
   */
  ENTERPRISE = 2,

  /**
   * The instance is an Enterprise Plus edition.
   *
   * @generated from enum value: ENTERPRISE_PLUS = 3;
   */
  ENTERPRISE_PLUS = 3,
}

/**
 * Describes the enum google.cloud.sql.v1.Settings.Edition.
 */
export const Settings_EditionSchema: GenEnum<Settings_Edition> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 31, 1);

/**
 * The options for enforcing Cloud SQL connectors in the instance.
 *
 * @generated from enum google.cloud.sql.v1.Settings.ConnectorEnforcement
 */
export enum Settings_ConnectorEnforcement {
  /**
   * The requirement for Cloud SQL connectors is unknown.
   *
   * @generated from enum value: CONNECTOR_ENFORCEMENT_UNSPECIFIED = 0;
   */
  CONNECTOR_ENFORCEMENT_UNSPECIFIED = 0,

  /**
   * Do not require Cloud SQL connectors.
   *
   * @generated from enum value: NOT_REQUIRED = 1;
   */
  NOT_REQUIRED = 1,

  /**
   * Require all connections to use Cloud SQL connectors, including the
   * Cloud SQL Auth Proxy and Cloud SQL Java, Python, and Go connectors.
   * Note: This disables all existing authorized networks.
   *
   * @generated from enum value: REQUIRED = 2;
   */
  REQUIRED = 2,
}

/**
 * Describes the enum google.cloud.sql.v1.Settings.ConnectorEnforcement.
 */
export const Settings_ConnectorEnforcementSchema: GenEnum<Settings_ConnectorEnforcement> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 31, 2);

/**
 * Specifies options for controlling advanced machine features.
 *
 * @generated from message google.cloud.sql.v1.AdvancedMachineFeatures
 */
export type AdvancedMachineFeatures = Message<"google.cloud.sql.v1.AdvancedMachineFeatures"> & {
  /**
   * The number of threads per physical core.
   *
   * @generated from field: int32 threads_per_core = 1;
   */
  threadsPerCore: number;
};

/**
 * Describes the message google.cloud.sql.v1.AdvancedMachineFeatures.
 * Use `create(AdvancedMachineFeaturesSchema)` to create a new message.
 */
export const AdvancedMachineFeaturesSchema: GenMessage<AdvancedMachineFeatures> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 32);

/**
 * SslCerts Resource
 *
 * @generated from message google.cloud.sql.v1.SslCert
 */
export type SslCert = Message<"google.cloud.sql.v1.SslCert"> & {
  /**
   * This is always `sql#sslCert`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Serial number, as extracted from the certificate.
   *
   * @generated from field: string cert_serial_number = 2;
   */
  certSerialNumber: string;

  /**
   * PEM representation.
   *
   * @generated from field: string cert = 3;
   */
  cert: string;

  /**
   * The time when the certificate was created in [RFC
   * 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * User supplied name.  Constrained to [a-zA-Z.-_ ]+.
   *
   * @generated from field: string common_name = 5;
   */
  commonName: string;

  /**
   * The time when the certificate expires in [RFC
   * 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp expiration_time = 6;
   */
  expirationTime?: Timestamp;

  /**
   * Sha1 Fingerprint.
   *
   * @generated from field: string sha1_fingerprint = 7;
   */
  sha1Fingerprint: string;

  /**
   * Name of the database instance.
   *
   * @generated from field: string instance = 8;
   */
  instance: string;

  /**
   * The URI of this resource.
   *
   * @generated from field: string self_link = 9;
   */
  selfLink: string;
};

/**
 * Describes the message google.cloud.sql.v1.SslCert.
 * Use `create(SslCertSchema)` to create a new message.
 */
export const SslCertSchema: GenMessage<SslCert> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 33);

/**
 * SslCertDetail.
 *
 * @generated from message google.cloud.sql.v1.SslCertDetail
 */
export type SslCertDetail = Message<"google.cloud.sql.v1.SslCertDetail"> & {
  /**
   * The public information about the cert.
   *
   * @generated from field: google.cloud.sql.v1.SslCert cert_info = 1;
   */
  certInfo?: SslCert;

  /**
   * The private key for the client cert, in pem format.  Keep private in order
   * to protect your security.
   *
   * @generated from field: string cert_private_key = 2;
   */
  certPrivateKey: string;
};

/**
 * Describes the message google.cloud.sql.v1.SslCertDetail.
 * Use `create(SslCertDetailSchema)` to create a new message.
 */
export const SslCertDetailSchema: GenMessage<SslCertDetail> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 34);

/**
 * Active Directory configuration, relevant only for Cloud SQL for SQL Server.
 *
 * @generated from message google.cloud.sql.v1.SqlActiveDirectoryConfig
 */
export type SqlActiveDirectoryConfig = Message<"google.cloud.sql.v1.SqlActiveDirectoryConfig"> & {
  /**
   * This is always sql#activeDirectoryConfig.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The name of the domain (e.g., mydomain.com).
   *
   * @generated from field: string domain = 2;
   */
  domain: string;
};

/**
 * Describes the message google.cloud.sql.v1.SqlActiveDirectoryConfig.
 * Use `create(SqlActiveDirectoryConfigSchema)` to create a new message.
 */
export const SqlActiveDirectoryConfigSchema: GenMessage<SqlActiveDirectoryConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 35);

/**
 * SQL Server specific audit configuration.
 *
 * @generated from message google.cloud.sql.v1.SqlServerAuditConfig
 */
export type SqlServerAuditConfig = Message<"google.cloud.sql.v1.SqlServerAuditConfig"> & {
  /**
   * This is always sql#sqlServerAuditConfig
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The name of the destination bucket (e.g., gs://mybucket).
   *
   * @generated from field: string bucket = 2;
   */
  bucket: string;

  /**
   * How long to keep generated audit files.
   *
   * @generated from field: google.protobuf.Duration retention_interval = 3;
   */
  retentionInterval?: Duration;

  /**
   * How often to upload generated audit files.
   *
   * @generated from field: google.protobuf.Duration upload_interval = 4;
   */
  uploadInterval?: Duration;
};

/**
 * Describes the message google.cloud.sql.v1.SqlServerAuditConfig.
 * Use `create(SqlServerAuditConfigSchema)` to create a new message.
 */
export const SqlServerAuditConfigSchema: GenMessage<SqlServerAuditConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 36);

/**
 * Acquire SSRS lease context.
 *
 * @generated from message google.cloud.sql.v1.AcquireSsrsLeaseContext
 */
export type AcquireSsrsLeaseContext = Message<"google.cloud.sql.v1.AcquireSsrsLeaseContext"> & {
  /**
   * The username to be used as the setup login to connect to the database
   * server for SSRS setup.
   *
   * @generated from field: optional string setup_login = 1;
   */
  setupLogin?: string;

  /**
   * The username to be used as the service login to connect to the report
   * database for SSRS setup.
   *
   * @generated from field: optional string service_login = 2;
   */
  serviceLogin?: string;

  /**
   * The report database to be used for SSRS setup.
   *
   * @generated from field: optional string report_database = 3;
   */
  reportDatabase?: string;

  /**
   * Lease duration needed for SSRS setup.
   *
   * @generated from field: optional google.protobuf.Duration duration = 4;
   */
  duration?: Duration;
};

/**
 * Describes the message google.cloud.sql.v1.AcquireSsrsLeaseContext.
 * Use `create(AcquireSsrsLeaseContextSchema)` to create a new message.
 */
export const AcquireSsrsLeaseContextSchema: GenMessage<AcquireSsrsLeaseContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1_cloud_sql_resources, 37);

/**
 * @generated from enum google.cloud.sql.v1.SqlFileType
 */
export enum SqlFileType {
  /**
   * Unknown file type.
   *
   * @generated from enum value: SQL_FILE_TYPE_UNSPECIFIED = 0;
   */
  SQL_FILE_TYPE_UNSPECIFIED = 0,

  /**
   * File containing SQL statements.
   *
   * @generated from enum value: SQL = 1;
   */
  SQL = 1,

  /**
   * File in CSV format.
   *
   * @generated from enum value: CSV = 2;
   */
  CSV = 2,

  /**
   * @generated from enum value: BAK = 4;
   */
  BAK = 4,
}

/**
 * Describes the enum google.cloud.sql.v1.SqlFileType.
 */
export const SqlFileTypeSchema: GenEnum<SqlFileType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 0);

/**
 * @generated from enum google.cloud.sql.v1.BakType
 */
export enum BakType {
  /**
   * Default type.
   *
   * @generated from enum value: BAK_TYPE_UNSPECIFIED = 0;
   */
  BAK_TYPE_UNSPECIFIED = 0,

  /**
   * Full backup.
   *
   * @generated from enum value: FULL = 1;
   */
  FULL = 1,

  /**
   * Differential backup.
   *
   * @generated from enum value: DIFF = 2;
   */
  DIFF = 2,

  /**
   * Transaction Log backup
   *
   * @generated from enum value: TLOG = 3;
   */
  TLOG = 3,
}

/**
 * Describes the enum google.cloud.sql.v1.BakType.
 */
export const BakTypeSchema: GenEnum<BakType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 1);

/**
 * @generated from enum google.cloud.sql.v1.SqlBackendType
 */
export enum SqlBackendType {
  /**
   * This is an unknown backend type for instance.
   *
   * @generated from enum value: SQL_BACKEND_TYPE_UNSPECIFIED = 0;
   */
  SQL_BACKEND_TYPE_UNSPECIFIED = 0,

  /**
   * V1 speckle instance.
   *
   * @generated from enum value: FIRST_GEN = 1 [deprecated = true];
   * @deprecated
   */
  FIRST_GEN = 1,

  /**
   * V2 speckle instance.
   *
   * @generated from enum value: SECOND_GEN = 2;
   */
  SECOND_GEN = 2,

  /**
   * On premises instance.
   *
   * @generated from enum value: EXTERNAL = 3;
   */
  EXTERNAL = 3,
}

/**
 * Describes the enum google.cloud.sql.v1.SqlBackendType.
 */
export const SqlBackendTypeSchema: GenEnum<SqlBackendType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 2);

/**
 * @generated from enum google.cloud.sql.v1.SqlIpAddressType
 */
export enum SqlIpAddressType {
  /**
   * This is an unknown IP address type.
   *
   * @generated from enum value: SQL_IP_ADDRESS_TYPE_UNSPECIFIED = 0;
   */
  SQL_IP_ADDRESS_TYPE_UNSPECIFIED = 0,

  /**
   * IP address the customer is supposed to connect to. Usually this is the
   * load balancer's IP address
   *
   * @generated from enum value: PRIMARY = 1;
   */
  PRIMARY = 1,

  /**
   * Source IP address of the connection a read replica establishes to its
   * external primary instance. This IP address can be allowlisted by the
   * customer in case it has a firewall that filters incoming connection to its
   * on premises primary instance.
   *
   * @generated from enum value: OUTGOING = 2;
   */
  OUTGOING = 2,

  /**
   * Private IP used when using private IPs and network peering.
   *
   * @generated from enum value: PRIVATE = 3;
   */
  PRIVATE = 3,

  /**
   * V1 IP of a migrated instance. We want the user to
   * decommission this IP as soon as the migration is complete.
   * Note: V1 instances with V1 ip addresses will be counted as PRIMARY.
   *
   * @generated from enum value: MIGRATED_1ST_GEN = 4;
   */
  MIGRATED_1ST_GEN = 4,
}

/**
 * Describes the enum google.cloud.sql.v1.SqlIpAddressType.
 */
export const SqlIpAddressTypeSchema: GenEnum<SqlIpAddressType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 3);

/**
 * The database engine type and version.
 *
 * @generated from enum google.cloud.sql.v1.SqlDatabaseVersion
 */
export enum SqlDatabaseVersion {
  /**
   * This is an unknown database version.
   *
   * @generated from enum value: SQL_DATABASE_VERSION_UNSPECIFIED = 0;
   */
  SQL_DATABASE_VERSION_UNSPECIFIED = 0,

  /**
   * The database version is MySQL 5.1.
   *
   * @generated from enum value: MYSQL_5_1 = 2 [deprecated = true];
   * @deprecated
   */
  MYSQL_5_1 = 2,

  /**
   * The database version is MySQL 5.5.
   *
   * @generated from enum value: MYSQL_5_5 = 3 [deprecated = true];
   * @deprecated
   */
  MYSQL_5_5 = 3,

  /**
   * The database version is MySQL 5.6.
   *
   * @generated from enum value: MYSQL_5_6 = 5;
   */
  MYSQL_5_6 = 5,

  /**
   * The database version is MySQL 5.7.
   *
   * @generated from enum value: MYSQL_5_7 = 6;
   */
  MYSQL_5_7 = 6,

  /**
   * The database version is SQL Server 2017 Standard.
   *
   * @generated from enum value: SQLSERVER_2017_STANDARD = 11;
   */
  SQLSERVER_2017_STANDARD = 11,

  /**
   * The database version is SQL Server 2017 Enterprise.
   *
   * @generated from enum value: SQLSERVER_2017_ENTERPRISE = 14;
   */
  SQLSERVER_2017_ENTERPRISE = 14,

  /**
   * The database version is SQL Server 2017 Express.
   *
   * @generated from enum value: SQLSERVER_2017_EXPRESS = 15;
   */
  SQLSERVER_2017_EXPRESS = 15,

  /**
   * The database version is SQL Server 2017 Web.
   *
   * @generated from enum value: SQLSERVER_2017_WEB = 16;
   */
  SQLSERVER_2017_WEB = 16,

  /**
   * The database version is PostgreSQL 9.6.
   *
   * @generated from enum value: POSTGRES_9_6 = 9;
   */
  POSTGRES_9_6 = 9,

  /**
   * The database version is PostgreSQL 10.
   *
   * @generated from enum value: POSTGRES_10 = 18;
   */
  POSTGRES_10 = 18,

  /**
   * The database version is PostgreSQL 11.
   *
   * @generated from enum value: POSTGRES_11 = 10;
   */
  POSTGRES_11 = 10,

  /**
   * The database version is PostgreSQL 12.
   *
   * @generated from enum value: POSTGRES_12 = 19;
   */
  POSTGRES_12 = 19,

  /**
   * The database version is PostgreSQL 13.
   *
   * @generated from enum value: POSTGRES_13 = 23;
   */
  POSTGRES_13 = 23,

  /**
   * The database version is PostgreSQL 14.
   *
   * @generated from enum value: POSTGRES_14 = 110;
   */
  POSTGRES_14 = 110,

  /**
   * The database version is PostgreSQL 15.
   *
   * @generated from enum value: POSTGRES_15 = 172;
   */
  POSTGRES_15 = 172,

  /**
   * The database version is PostgreSQL 16.
   *
   * @generated from enum value: POSTGRES_16 = 272;
   */
  POSTGRES_16 = 272,

  /**
   * The database version is MySQL 8.
   *
   * @generated from enum value: MYSQL_8_0 = 20;
   */
  MYSQL_8_0 = 20,

  /**
   * The database major version is MySQL 8.0 and the minor version is 18.
   *
   * @generated from enum value: MYSQL_8_0_18 = 41;
   */
  MYSQL_8_0_18 = 41,

  /**
   * The database major version is MySQL 8.0 and the minor version is 26.
   *
   * @generated from enum value: MYSQL_8_0_26 = 85;
   */
  MYSQL_8_0_26 = 85,

  /**
   * The database major version is MySQL 8.0 and the minor version is 27.
   *
   * @generated from enum value: MYSQL_8_0_27 = 111;
   */
  MYSQL_8_0_27 = 111,

  /**
   * The database major version is MySQL 8.0 and the minor version is 28.
   *
   * @generated from enum value: MYSQL_8_0_28 = 132;
   */
  MYSQL_8_0_28 = 132,

  /**
   * The database major version is MySQL 8.0 and the minor version is 29.
   *
   * @generated from enum value: MYSQL_8_0_29 = 148 [deprecated = true];
   * @deprecated
   */
  MYSQL_8_0_29 = 148,

  /**
   * The database major version is MySQL 8.0 and the minor version is 30.
   *
   * @generated from enum value: MYSQL_8_0_30 = 174;
   */
  MYSQL_8_0_30 = 174,

  /**
   * The database major version is MySQL 8.0 and the minor version is 31.
   *
   * @generated from enum value: MYSQL_8_0_31 = 197;
   */
  MYSQL_8_0_31 = 197,

  /**
   * The database major version is MySQL 8.0 and the minor version is 32.
   *
   * @generated from enum value: MYSQL_8_0_32 = 213;
   */
  MYSQL_8_0_32 = 213,

  /**
   * The database major version is MySQL 8.0 and the minor version is 33.
   *
   * @generated from enum value: MYSQL_8_0_33 = 238;
   */
  MYSQL_8_0_33 = 238,

  /**
   * The database major version is MySQL 8.0 and the minor version is 34.
   *
   * @generated from enum value: MYSQL_8_0_34 = 239;
   */
  MYSQL_8_0_34 = 239,

  /**
   * The database major version is MySQL 8.0 and the minor version is 35.
   *
   * @generated from enum value: MYSQL_8_0_35 = 240;
   */
  MYSQL_8_0_35 = 240,

  /**
   * The database major version is MySQL 8.0 and the minor version is 36.
   *
   * @generated from enum value: MYSQL_8_0_36 = 241;
   */
  MYSQL_8_0_36 = 241,

  /**
   * The database major version is MySQL 8.0 and the minor version is 37.
   *
   * @generated from enum value: MYSQL_8_0_37 = 355;
   */
  MYSQL_8_0_37 = 355,

  /**
   * The database major version is MySQL 8.0 and the minor version is 38.
   *
   * @generated from enum value: MYSQL_8_0_38 = 356;
   */
  MYSQL_8_0_38 = 356,

  /**
   * The database major version is MySQL 8.0 and the minor version is 39.
   *
   * @generated from enum value: MYSQL_8_0_39 = 357;
   */
  MYSQL_8_0_39 = 357,

  /**
   * The database major version is MySQL 8.0 and the minor version is 40.
   *
   * @generated from enum value: MYSQL_8_0_40 = 358;
   */
  MYSQL_8_0_40 = 358,

  /**
   * The database version is MySQL 8.4.
   *
   * @generated from enum value: MYSQL_8_4 = 398;
   */
  MYSQL_8_4 = 398,

  /**
   * The database version is MySQL 8.4 and the patch version is 0.
   *
   * @generated from enum value: MYSQL_8_4_0 = 399;
   */
  MYSQL_8_4_0 = 399,

  /**
   * The database version is SQL Server 2019 Standard.
   *
   * @generated from enum value: SQLSERVER_2019_STANDARD = 26;
   */
  SQLSERVER_2019_STANDARD = 26,

  /**
   * The database version is SQL Server 2019 Enterprise.
   *
   * @generated from enum value: SQLSERVER_2019_ENTERPRISE = 27;
   */
  SQLSERVER_2019_ENTERPRISE = 27,

  /**
   * The database version is SQL Server 2019 Express.
   *
   * @generated from enum value: SQLSERVER_2019_EXPRESS = 28;
   */
  SQLSERVER_2019_EXPRESS = 28,

  /**
   * The database version is SQL Server 2019 Web.
   *
   * @generated from enum value: SQLSERVER_2019_WEB = 29;
   */
  SQLSERVER_2019_WEB = 29,

  /**
   * The database version is SQL Server 2022 Standard.
   *
   * @generated from enum value: SQLSERVER_2022_STANDARD = 199;
   */
  SQLSERVER_2022_STANDARD = 199,

  /**
   * The database version is SQL Server 2022 Enterprise.
   *
   * @generated from enum value: SQLSERVER_2022_ENTERPRISE = 200;
   */
  SQLSERVER_2022_ENTERPRISE = 200,

  /**
   * The database version is SQL Server 2022 Express.
   *
   * @generated from enum value: SQLSERVER_2022_EXPRESS = 201;
   */
  SQLSERVER_2022_EXPRESS = 201,

  /**
   * The database version is SQL Server 2022 Web.
   *
   * @generated from enum value: SQLSERVER_2022_WEB = 202;
   */
  SQLSERVER_2022_WEB = 202,
}

/**
 * Describes the enum google.cloud.sql.v1.SqlDatabaseVersion.
 */
export const SqlDatabaseVersionSchema: GenEnum<SqlDatabaseVersion> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 4);

/**
 * The pricing plan for this instance.
 *
 * @generated from enum google.cloud.sql.v1.SqlPricingPlan
 */
export enum SqlPricingPlan {
  /**
   * This is an unknown pricing plan for this instance.
   *
   * @generated from enum value: SQL_PRICING_PLAN_UNSPECIFIED = 0;
   */
  SQL_PRICING_PLAN_UNSPECIFIED = 0,

  /**
   * The instance is billed at a monthly flat rate.
   *
   * @generated from enum value: PACKAGE = 1;
   */
  PACKAGE = 1,

  /**
   * The instance is billed per usage.
   *
   * @generated from enum value: PER_USE = 2;
   */
  PER_USE = 2,
}

/**
 * Describes the enum google.cloud.sql.v1.SqlPricingPlan.
 */
export const SqlPricingPlanSchema: GenEnum<SqlPricingPlan> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 5);

/**
 * @generated from enum google.cloud.sql.v1.SqlReplicationType
 */
export enum SqlReplicationType {
  /**
   * This is an unknown replication type for a Cloud SQL instance.
   *
   * @generated from enum value: SQL_REPLICATION_TYPE_UNSPECIFIED = 0;
   */
  SQL_REPLICATION_TYPE_UNSPECIFIED = 0,

  /**
   * The synchronous replication mode for First Generation instances. It is the
   * default value.
   *
   * @generated from enum value: SYNCHRONOUS = 1;
   */
  SYNCHRONOUS = 1,

  /**
   * The asynchronous replication mode for First Generation instances. It
   * provides a slight performance gain, but if an outage occurs while this
   * option is set to asynchronous, you can lose up to a few seconds of updates
   * to your data.
   *
   * @generated from enum value: ASYNCHRONOUS = 2;
   */
  ASYNCHRONOUS = 2,
}

/**
 * Describes the enum google.cloud.sql.v1.SqlReplicationType.
 */
export const SqlReplicationTypeSchema: GenEnum<SqlReplicationType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 6);

/**
 * The type of disk that is used for a v2 instance to use.
 *
 * @generated from enum google.cloud.sql.v1.SqlDataDiskType
 */
export enum SqlDataDiskType {
  /**
   * This is an unknown data disk type.
   *
   * @generated from enum value: SQL_DATA_DISK_TYPE_UNSPECIFIED = 0;
   */
  SQL_DATA_DISK_TYPE_UNSPECIFIED = 0,

  /**
   * An SSD data disk.
   *
   * @generated from enum value: PD_SSD = 1;
   */
  PD_SSD = 1,

  /**
   * An HDD data disk.
   *
   * @generated from enum value: PD_HDD = 2;
   */
  PD_HDD = 2,

  /**
   * This field is deprecated and will be removed from a future version of the
   * API.
   *
   * @generated from enum value: OBSOLETE_LOCAL_SSD = 3 [deprecated = true];
   * @deprecated
   */
  OBSOLETE_LOCAL_SSD = 3,
}

/**
 * Describes the enum google.cloud.sql.v1.SqlDataDiskType.
 */
export const SqlDataDiskTypeSchema: GenEnum<SqlDataDiskType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 7);

/**
 * The availability type of the given Cloud SQL instance.
 *
 * @generated from enum google.cloud.sql.v1.SqlAvailabilityType
 */
export enum SqlAvailabilityType {
  /**
   * This is an unknown Availability type.
   *
   * @generated from enum value: SQL_AVAILABILITY_TYPE_UNSPECIFIED = 0;
   */
  SQL_AVAILABILITY_TYPE_UNSPECIFIED = 0,

  /**
   * Zonal available instance.
   *
   * @generated from enum value: ZONAL = 1;
   */
  ZONAL = 1,

  /**
   * Regional available instance.
   *
   * @generated from enum value: REGIONAL = 2;
   */
  REGIONAL = 2,
}

/**
 * Describes the enum google.cloud.sql.v1.SqlAvailabilityType.
 */
export const SqlAvailabilityTypeSchema: GenEnum<SqlAvailabilityType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 8);

/**
 * @generated from enum google.cloud.sql.v1.SqlUpdateTrack
 */
export enum SqlUpdateTrack {
  /**
   * This is an unknown maintenance timing preference.
   *
   * @generated from enum value: SQL_UPDATE_TRACK_UNSPECIFIED = 0;
   */
  SQL_UPDATE_TRACK_UNSPECIFIED = 0,

  /**
   * For an instance with a scheduled maintenance window, this maintenance
   * timing indicates that the maintenance update is scheduled 7 to 14 days
   * after the notification is sent out. Also referred to as `Week 1` (Console)
   * and `preview` (gcloud CLI).
   *
   * @generated from enum value: canary = 1;
   */
  canary = 1,

  /**
   * For an instance with a scheduled maintenance window, this maintenance
   * timing indicates that the maintenance update is scheduled 15 to 21 days
   * after the notification is sent out. Also referred to as `Week 2` (Console)
   * and `production` (gcloud CLI).
   *
   * @generated from enum value: stable = 2;
   */
  stable = 2,

  /**
   * For instance with a scheduled maintenance window, this maintenance
   * timing indicates that the maintenance update is scheduled 35 to 42 days
   * after the notification is sent out.
   *
   * @generated from enum value: week5 = 3;
   */
  week5 = 3,
}

/**
 * Describes the enum google.cloud.sql.v1.SqlUpdateTrack.
 */
export const SqlUpdateTrackSchema: GenEnum<SqlUpdateTrack> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1_cloud_sql_resources, 9);

