// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/sql/v1beta4/cloud_sql_resources.proto (package google.cloud.sql.v1beta4, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/sql/v1beta4/cloud_sql_resources.proto.
 */
export const file_google_cloud_sql_v1beta4_cloud_sql_resources: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_field_behavior, file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_protobuf_wrappers]);

/**
 * An entry for an Access Control list.
 *
 * @generated from message google.cloud.sql.v1beta4.AclEntry
 */
export type AclEntry = Message<"google.cloud.sql.v1beta4.AclEntry"> & {
  /**
   * The allowlisted value for the access control list.
   *
   * @generated from field: string value = 1;
   */
  value: string;

  /**
   * The time when this access control entry expires in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp expiration_time = 2;
   */
  expirationTime?: Timestamp;

  /**
   * Optional. A label to identify this entry.
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * This is always `sql#aclEntry`.
   *
   * @generated from field: string kind = 4;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.AclEntry.
 * Use `create(AclEntrySchema)` to create a new message.
 */
export const AclEntrySchema: GenMessage<AclEntry> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 0);

/**
 * An Admin API warning message.
 *
 * @generated from message google.cloud.sql.v1beta4.ApiWarning
 */
export type ApiWarning = Message<"google.cloud.sql.v1beta4.ApiWarning"> & {
  /**
   * Code to uniquely identify the warning type.
   *
   * @generated from field: google.cloud.sql.v1beta4.ApiWarning.SqlApiWarningCode code = 1;
   */
  code: ApiWarning_SqlApiWarningCode;

  /**
   * The warning message.
   *
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * The region name for REGION_UNREACHABLE warning.
   *
   * @generated from field: string region = 3;
   */
  region: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.ApiWarning.
 * Use `create(ApiWarningSchema)` to create a new message.
 */
export const ApiWarningSchema: GenMessage<ApiWarning> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 1);

/**
 * @generated from enum google.cloud.sql.v1beta4.ApiWarning.SqlApiWarningCode
 */
export enum ApiWarning_SqlApiWarningCode {
  /**
   * An unknown or unset warning type from Cloud SQL API.
   *
   * @generated from enum value: SQL_API_WARNING_CODE_UNSPECIFIED = 0;
   */
  SQL_API_WARNING_CODE_UNSPECIFIED = 0,

  /**
   * Warning when one or more regions are not reachable.  The returned result
   * set may be incomplete.
   *
   * @generated from enum value: REGION_UNREACHABLE = 1;
   */
  REGION_UNREACHABLE = 1,

  /**
   * Warning when user provided maxResults parameter exceeds the limit.  The
   * returned result set may be incomplete.
   *
   * @generated from enum value: MAX_RESULTS_EXCEEDS_LIMIT = 2;
   */
  MAX_RESULTS_EXCEEDS_LIMIT = 2,

  /**
   * Warning when user tries to create/update a user with credentials that
   * have previously been compromised by a public data breach.
   *
   * @generated from enum value: COMPROMISED_CREDENTIALS = 3;
   */
  COMPROMISED_CREDENTIALS = 3,

  /**
   * Warning when the operation succeeds but some non-critical workflow state
   * failed.
   *
   * @generated from enum value: INTERNAL_STATE_FAILURE = 4;
   */
  INTERNAL_STATE_FAILURE = 4,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.ApiWarning.SqlApiWarningCode.
 */
export const ApiWarning_SqlApiWarningCodeSchema: GenEnum<ApiWarning_SqlApiWarningCode> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 1, 0);

/**
 * We currently only support backup retention by specifying the number
 * of backups we will retain.
 *
 * @generated from message google.cloud.sql.v1beta4.BackupRetentionSettings
 */
export type BackupRetentionSettings = Message<"google.cloud.sql.v1beta4.BackupRetentionSettings"> & {
  /**
   * The unit that 'retained_backups' represents.
   *
   * @generated from field: google.cloud.sql.v1beta4.BackupRetentionSettings.RetentionUnit retention_unit = 1;
   */
  retentionUnit: BackupRetentionSettings_RetentionUnit;

  /**
   * Depending on the value of retention_unit, this is used to determine
   * if a backup needs to be deleted.  If retention_unit is 'COUNT', we will
   * retain this many backups.
   *
   * @generated from field: google.protobuf.Int32Value retained_backups = 2;
   */
  retainedBackups?: number;
};

/**
 * Describes the message google.cloud.sql.v1beta4.BackupRetentionSettings.
 * Use `create(BackupRetentionSettingsSchema)` to create a new message.
 */
export const BackupRetentionSettingsSchema: GenMessage<BackupRetentionSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 2);

/**
 * The units that retained_backups specifies, we only support COUNT.
 *
 * @generated from enum google.cloud.sql.v1beta4.BackupRetentionSettings.RetentionUnit
 */
export enum BackupRetentionSettings_RetentionUnit {
  /**
   * Backup retention unit is unspecified, will be treated as COUNT.
   *
   * @generated from enum value: RETENTION_UNIT_UNSPECIFIED = 0;
   */
  RETENTION_UNIT_UNSPECIFIED = 0,

  /**
   * Retention will be by count, eg. "retain the most recent 7 backups".
   *
   * @generated from enum value: COUNT = 1;
   */
  COUNT = 1,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.BackupRetentionSettings.RetentionUnit.
 */
export const BackupRetentionSettings_RetentionUnitSchema: GenEnum<BackupRetentionSettings_RetentionUnit> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 2, 0);

/**
 * Database instance backup configuration.
 *
 * @generated from message google.cloud.sql.v1beta4.BackupConfiguration
 */
export type BackupConfiguration = Message<"google.cloud.sql.v1beta4.BackupConfiguration"> & {
  /**
   * Start time for the daily backup configuration in UTC timezone in the 24
   * hour format - `HH:MM`.
   *
   * @generated from field: string start_time = 1;
   */
  startTime: string;

  /**
   * Whether this configuration is enabled.
   *
   * @generated from field: google.protobuf.BoolValue enabled = 2;
   */
  enabled?: boolean;

  /**
   * This is always `sql#backupConfiguration`.
   *
   * @generated from field: string kind = 3;
   */
  kind: string;

  /**
   * (MySQL only) Whether binary log is enabled. If backup configuration is
   * disabled, binarylog must be disabled as well.
   *
   * @generated from field: google.protobuf.BoolValue binary_log_enabled = 4;
   */
  binaryLogEnabled?: boolean;

  /**
   * Reserved for future use.
   *
   * @generated from field: google.protobuf.BoolValue replication_log_archiving_enabled = 5;
   */
  replicationLogArchivingEnabled?: boolean;

  /**
   * Location of the backup
   *
   * @generated from field: string location = 6;
   */
  location: string;

  /**
   * Whether point in time recovery is enabled.
   *
   * @generated from field: google.protobuf.BoolValue point_in_time_recovery_enabled = 7;
   */
  pointInTimeRecoveryEnabled?: boolean;

  /**
   * The number of days of transaction logs we retain for point in time
   * restore, from 1-7.
   *
   * @generated from field: google.protobuf.Int32Value transaction_log_retention_days = 9;
   */
  transactionLogRetentionDays?: number;

  /**
   * Backup retention settings.
   *
   * @generated from field: google.cloud.sql.v1beta4.BackupRetentionSettings backup_retention_settings = 10;
   */
  backupRetentionSettings?: BackupRetentionSettings;

  /**
   * Output only. This value contains the storage location of transactional logs
   * for the database for point-in-time recovery.
   *
   * @generated from field: optional google.cloud.sql.v1beta4.BackupConfiguration.TransactionalLogStorageState transactional_log_storage_state = 11;
   */
  transactionalLogStorageState?: BackupConfiguration_TransactionalLogStorageState;
};

/**
 * Describes the message google.cloud.sql.v1beta4.BackupConfiguration.
 * Use `create(BackupConfigurationSchema)` to create a new message.
 */
export const BackupConfigurationSchema: GenMessage<BackupConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 3);

/**
 * This value contains the storage location of the transactional logs
 * used to perform point-in-time recovery (PITR) for the database.
 *
 * @generated from enum google.cloud.sql.v1beta4.BackupConfiguration.TransactionalLogStorageState
 */
export enum BackupConfiguration_TransactionalLogStorageState {
  /**
   * Unspecified.
   *
   * @generated from enum value: TRANSACTIONAL_LOG_STORAGE_STATE_UNSPECIFIED = 0;
   */
  TRANSACTIONAL_LOG_STORAGE_STATE_UNSPECIFIED = 0,

  /**
   * The transaction logs used for PITR for the instance are stored
   * on a data disk.
   *
   * @generated from enum value: DISK = 1;
   */
  DISK = 1,

  /**
   * The transaction logs used for PITR for the instance are switching from
   * being stored on a data disk to being stored in Cloud Storage.
   * Only applicable to MySQL.
   *
   * @generated from enum value: SWITCHING_TO_CLOUD_STORAGE = 2;
   */
  SWITCHING_TO_CLOUD_STORAGE = 2,

  /**
   * The transaction logs used for PITR for the instance are now stored
   * in Cloud Storage. Previously, they were stored on a data disk.
   * Only applicable to MySQL.
   *
   * @generated from enum value: SWITCHED_TO_CLOUD_STORAGE = 3;
   */
  SWITCHED_TO_CLOUD_STORAGE = 3,

  /**
   * The transaction logs used for PITR for the instance are stored in
   * Cloud Storage. Only applicable to MySQL and PostgreSQL.
   *
   * @generated from enum value: CLOUD_STORAGE = 4;
   */
  CLOUD_STORAGE = 4,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.BackupConfiguration.TransactionalLogStorageState.
 */
export const BackupConfiguration_TransactionalLogStorageStateSchema: GenEnum<BackupConfiguration_TransactionalLogStorageState> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 3, 0);

/**
 * A BackupRun resource.
 *
 * @generated from message google.cloud.sql.v1beta4.BackupRun
 */
export type BackupRun = Message<"google.cloud.sql.v1beta4.BackupRun"> & {
  /**
   * This is always `sql#backupRun`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The status of this run.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlBackupRunStatus status = 2;
   */
  status: SqlBackupRunStatus;

  /**
   * The time the run was enqueued in UTC timezone in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp enqueued_time = 3;
   */
  enqueuedTime?: Timestamp;

  /**
   * The identifier for this backup run. Unique only for a specific Cloud SQL
   * instance.
   *
   * @generated from field: int64 id = 4;
   */
  id: bigint;

  /**
   * The time the backup operation actually started in UTC timezone in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 5;
   */
  startTime?: Timestamp;

  /**
   * The time the backup operation completed in UTC timezone in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 6;
   */
  endTime?: Timestamp;

  /**
   * Information about why the backup operation failed. This is only present if
   * the run has the FAILED status.
   *
   * @generated from field: google.cloud.sql.v1beta4.OperationError error = 7;
   */
  error?: OperationError;

  /**
   * The type of this run; can be either "AUTOMATED" or "ON_DEMAND" or "FINAL".
   * This field defaults to "ON_DEMAND" and is ignored, when specified for
   * insert requests.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlBackupRunType type = 8;
   */
  type: SqlBackupRunType;

  /**
   * The description of this run, only applicable to on-demand backups.
   *
   * @generated from field: string description = 9;
   */
  description: string;

  /**
   * The start time of the backup window during which this the backup was
   * attempted in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for
   * example `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp window_start_time = 10;
   */
  windowStartTime?: Timestamp;

  /**
   * Name of the database instance.
   *
   * @generated from field: string instance = 11;
   */
  instance: string;

  /**
   * The URI of this resource.
   *
   * @generated from field: string self_link = 12;
   */
  selfLink: string;

  /**
   * Location of the backups.
   *
   * @generated from field: string location = 13;
   */
  location: string;

  /**
   * Encryption configuration specific to a backup.
   *
   * @generated from field: google.cloud.sql.v1beta4.DiskEncryptionConfiguration disk_encryption_configuration = 16;
   */
  diskEncryptionConfiguration?: DiskEncryptionConfiguration;

  /**
   * Encryption status specific to a backup.
   *
   * @generated from field: google.cloud.sql.v1beta4.DiskEncryptionStatus disk_encryption_status = 17;
   */
  diskEncryptionStatus?: DiskEncryptionStatus;

  /**
   * Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlBackupKind backup_kind = 19;
   */
  backupKind: SqlBackupKind;

  /**
   * Backup time zone to prevent restores to an instance with
   * a different time zone. Now relevant only for SQL Server.
   *
   * @generated from field: string time_zone = 23;
   */
  timeZone: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.BackupRun.
 * Use `create(BackupRunSchema)` to create a new message.
 */
export const BackupRunSchema: GenMessage<BackupRun> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 4);

/**
 * Backup run list results.
 *
 * @generated from message google.cloud.sql.v1beta4.BackupRunsListResponse
 */
export type BackupRunsListResponse = Message<"google.cloud.sql.v1beta4.BackupRunsListResponse"> & {
  /**
   * This is always `sql#backupRunsList`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * A list of backup runs in reverse chronological order of the enqueued time.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.BackupRun items = 2;
   */
  items: BackupRun[];

  /**
   * The continuation token, used to page through large result sets. Provide
   * this value in a subsequent request to return the next page of results.
   *
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.BackupRunsListResponse.
 * Use `create(BackupRunsListResponseSchema)` to create a new message.
 */
export const BackupRunsListResponseSchema: GenMessage<BackupRunsListResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 5);

/**
 * Binary log coordinates.
 *
 * @generated from message google.cloud.sql.v1beta4.BinLogCoordinates
 */
export type BinLogCoordinates = Message<"google.cloud.sql.v1beta4.BinLogCoordinates"> & {
  /**
   * Name of the binary log file for a Cloud SQL instance.
   *
   * @generated from field: string bin_log_file_name = 1;
   */
  binLogFileName: string;

  /**
   * Position (offset) within the binary log file.
   *
   * @generated from field: int64 bin_log_position = 2;
   */
  binLogPosition: bigint;

  /**
   * This is always `sql#binLogCoordinates`.
   *
   * @generated from field: string kind = 3;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.BinLogCoordinates.
 * Use `create(BinLogCoordinatesSchema)` to create a new message.
 */
export const BinLogCoordinatesSchema: GenMessage<BinLogCoordinates> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 6);

/**
 * Backup context.
 *
 * @generated from message google.cloud.sql.v1beta4.BackupContext
 */
export type BackupContext = Message<"google.cloud.sql.v1beta4.BackupContext"> & {
  /**
   * The identifier of the backup.
   *
   * @generated from field: int64 backup_id = 1;
   */
  backupId: bigint;

  /**
   * This is always `sql#backupContext`.
   *
   * @generated from field: string kind = 2;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.BackupContext.
 * Use `create(BackupContextSchema)` to create a new message.
 */
export const BackupContextSchema: GenMessage<BackupContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 7);

/**
 * Database instance clone context.
 *
 * @generated from message google.cloud.sql.v1beta4.CloneContext
 */
export type CloneContext = Message<"google.cloud.sql.v1beta4.CloneContext"> & {
  /**
   * This is always `sql#cloneContext`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Reserved for future use.
   *
   * @generated from field: int64 pitr_timestamp_ms = 2;
   */
  pitrTimestampMs: bigint;

  /**
   * Name of the Cloud SQL instance to be created as a clone.
   *
   * @generated from field: string destination_instance_name = 3;
   */
  destinationInstanceName: string;

  /**
   * Binary log coordinates, if specified, identify the position up to which the
   * source instance is cloned. If not specified, the source instance is
   * cloned up to the most recent binary log coordinates.
   *
   * @generated from field: google.cloud.sql.v1beta4.BinLogCoordinates bin_log_coordinates = 4;
   */
  binLogCoordinates?: BinLogCoordinates;

  /**
   * Timestamp, if specified, identifies the time to which the source instance
   * is cloned.
   *
   * @generated from field: google.protobuf.Timestamp point_in_time = 5;
   */
  pointInTime?: Timestamp;

  /**
   * The name of the allocated ip range for the private ip Cloud SQL instance.
   * For example: "google-managed-services-default". If set, the cloned instance
   * ip will be created in the allocated range. The range name must comply with
   * [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name
   * must be 1-63 characters long and match the regular expression
   * [a-z]([-a-z0-9]*[a-z0-9])?.
   * Reserved for future use.
   *
   * @generated from field: string allocated_ip_range = 6;
   */
  allocatedIpRange: string;

  /**
   * (SQL Server only) Clone only the specified databases from the source
   * instance. Clone all databases if empty.
   *
   * @generated from field: repeated string database_names = 9;
   */
  databaseNames: string[];

  /**
   * Optional. Copy clone and point-in-time recovery clone of an instance to the
   * specified zone. If no zone is specified, clone to the same primary zone as
   * the source instance.
   *
   * @generated from field: optional string preferred_zone = 10;
   */
  preferredZone?: string;

  /**
   * Optional. Copy clone and point-in-time recovery clone of a regional
   * instance in the specified zones. If not specified, clone to the same
   * secondary zone as the source instance. This value cannot be the same as the
   * preferred_zone field.
   *
   * @generated from field: optional string preferred_secondary_zone = 11;
   */
  preferredSecondaryZone?: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.CloneContext.
 * Use `create(CloneContextSchema)` to create a new message.
 */
export const CloneContextSchema: GenMessage<CloneContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 8);

/**
 * Represents a SQL database on the Cloud SQL instance.
 *
 * @generated from message google.cloud.sql.v1beta4.Database
 */
export type Database = Message<"google.cloud.sql.v1beta4.Database"> & {
  /**
   * This is always `sql#database`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The Cloud SQL charset value.
   *
   * @generated from field: string charset = 2;
   */
  charset: string;

  /**
   * The Cloud SQL collation value.
   *
   * @generated from field: string collation = 3;
   */
  collation: string;

  /**
   * This field is deprecated and will be removed from a future version of the
   * API.
   *
   * @generated from field: string etag = 4;
   */
  etag: string;

  /**
   * The name of the database in the Cloud SQL instance. This does not include
   * the project ID or instance name.
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * The name of the Cloud SQL instance. This does not include the project ID.
   *
   * @generated from field: string instance = 6;
   */
  instance: string;

  /**
   * The URI of this resource.
   *
   * @generated from field: string self_link = 7;
   */
  selfLink: string;

  /**
   * The project ID of the project containing the Cloud SQL database. The Google
   * apps domain is prefixed if applicable.
   *
   * @generated from field: string project = 8;
   */
  project: string;

  /**
   * @generated from oneof google.cloud.sql.v1beta4.Database.database_details
   */
  databaseDetails: {
    /**
     * @generated from field: google.cloud.sql.v1beta4.SqlServerDatabaseDetails sqlserver_database_details = 9;
     */
    value: SqlServerDatabaseDetails;
    case: "sqlserverDatabaseDetails";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.sql.v1beta4.Database.
 * Use `create(DatabaseSchema)` to create a new message.
 */
export const DatabaseSchema: GenMessage<Database> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 9);

/**
 * Represents a Sql Server database on the Cloud SQL instance.
 *
 * @generated from message google.cloud.sql.v1beta4.SqlServerDatabaseDetails
 */
export type SqlServerDatabaseDetails = Message<"google.cloud.sql.v1beta4.SqlServerDatabaseDetails"> & {
  /**
   * The version of SQL Server with which the database is to be made compatible
   *
   * @generated from field: int32 compatibility_level = 1;
   */
  compatibilityLevel: number;

  /**
   * The recovery model of a SQL Server database
   *
   * @generated from field: string recovery_model = 2;
   */
  recoveryModel: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.SqlServerDatabaseDetails.
 * Use `create(SqlServerDatabaseDetailsSchema)` to create a new message.
 */
export const SqlServerDatabaseDetailsSchema: GenMessage<SqlServerDatabaseDetails> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 10);

/**
 * Database flags for Cloud SQL instances.
 *
 * @generated from message google.cloud.sql.v1beta4.DatabaseFlags
 */
export type DatabaseFlags = Message<"google.cloud.sql.v1beta4.DatabaseFlags"> & {
  /**
   * The name of the flag. These flags are passed at instance startup, so
   * include both server options and system variables. Flags are
   * specified with underscores, not hyphens. For more information, see
   * [Configuring Database Flags](https://cloud.google.com/sql/docs/mysql/flags)
   * in the Cloud SQL documentation.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The value of the flag. Boolean flags are set to `on` for true
   * and `off` for false. This field must be omitted if the flag
   * doesn't take a value.
   *
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.DatabaseFlags.
 * Use `create(DatabaseFlagsSchema)` to create a new message.
 */
export const DatabaseFlagsSchema: GenMessage<DatabaseFlags> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 11);

/**
 * Initial sync flags for certain Cloud SQL APIs.
 * Currently used for the MySQL external server initial dump.
 *
 * @generated from message google.cloud.sql.v1beta4.SyncFlags
 */
export type SyncFlags = Message<"google.cloud.sql.v1beta4.SyncFlags"> & {
  /**
   * The name of the flag.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The value of the flag. This field must be omitted if the flag
   * doesn't take a value.
   *
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.SyncFlags.
 * Use `create(SyncFlagsSchema)` to create a new message.
 */
export const SyncFlagsSchema: GenMessage<SyncFlags> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 12);

/**
 * Reference to another Cloud SQL instance.
 *
 * @generated from message google.cloud.sql.v1beta4.InstanceReference
 */
export type InstanceReference = Message<"google.cloud.sql.v1beta4.InstanceReference"> & {
  /**
   * The name of the Cloud SQL instance being referenced.
   * This does not include the project ID.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The region of the Cloud SQL instance being referenced.
   *
   * @generated from field: string region = 2;
   */
  region: string;

  /**
   * The project ID of the Cloud SQL instance being referenced.
   * The default is the same project ID as the instance references it.
   *
   * @generated from field: string project = 3;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.InstanceReference.
 * Use `create(InstanceReferenceSchema)` to create a new message.
 */
export const InstanceReferenceSchema: GenMessage<InstanceReference> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 13);

/**
 * A Cloud SQL instance resource.
 *
 * @generated from message google.cloud.sql.v1beta4.DatabaseInstance
 */
export type DatabaseInstance = Message<"google.cloud.sql.v1beta4.DatabaseInstance"> & {
  /**
   * This is always `sql#instance`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The current serving state of the Cloud SQL instance.
   *
   * @generated from field: google.cloud.sql.v1beta4.DatabaseInstance.SqlInstanceState state = 2;
   */
  state: DatabaseInstance_SqlInstanceState;

  /**
   * The database engine type and version. The `databaseVersion` field cannot
   * be changed after instance creation.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlDatabaseVersion database_version = 3;
   */
  databaseVersion: SqlDatabaseVersion;

  /**
   * The user settings.
   *
   * @generated from field: google.cloud.sql.v1beta4.Settings settings = 4;
   */
  settings?: Settings;

  /**
   * This field is deprecated and will be removed from a future version of the
   * API. Use the `settings.settingsVersion` field instead.
   *
   * @generated from field: string etag = 5;
   */
  etag: string;

  /**
   * The name and status of the failover replica.
   *
   * @generated from field: google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica failover_replica = 6;
   */
  failoverReplica?: DatabaseInstance_SqlFailoverReplica;

  /**
   * The name of the instance which will act as primary in the replication
   * setup.
   *
   * @generated from field: string master_instance_name = 7;
   */
  masterInstanceName: string;

  /**
   * The replicas of the instance.
   *
   * @generated from field: repeated string replica_names = 8;
   */
  replicaNames: string[];

  /**
   * The maximum disk size of the instance in bytes.
   *
   * @generated from field: google.protobuf.Int64Value max_disk_size = 9 [deprecated = true];
   * @deprecated
   */
  maxDiskSize?: bigint;

  /**
   * The current disk usage of the instance in bytes. This property has been
   * deprecated. Use the
   * "cloudsql.googleapis.com/database/disk/bytes_used" metric in Cloud
   * Monitoring API instead. Please see [this
   * announcement](https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ)
   * for details.
   *
   * @generated from field: google.protobuf.Int64Value current_disk_size = 10 [deprecated = true];
   * @deprecated
   */
  currentDiskSize?: bigint;

  /**
   * The assigned IP addresses for the instance.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.IpMapping ip_addresses = 11;
   */
  ipAddresses: IpMapping[];

  /**
   * SSL configuration.
   *
   * @generated from field: google.cloud.sql.v1beta4.SslCert server_ca_cert = 12;
   */
  serverCaCert?: SslCert;

  /**
   * The instance type.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlInstanceType instance_type = 13;
   */
  instanceType: SqlInstanceType;

  /**
   * The project ID of the project containing the Cloud SQL instance. The Google
   * apps domain is prefixed if applicable.
   *
   * @generated from field: string project = 14;
   */
  project: string;

  /**
   * The IPv6 address assigned to the instance.
   * (Deprecated) This property was applicable only
   * to First Generation instances.
   *
   * @generated from field: string ipv6_address = 15 [deprecated = true];
   * @deprecated
   */
  ipv6Address: string;

  /**
   * The service account email address assigned to the instance. \This
   * property is read-only.
   *
   * @generated from field: string service_account_email_address = 16;
   */
  serviceAccountEmailAddress: string;

  /**
   * Configuration specific to on-premises instances.
   *
   * @generated from field: google.cloud.sql.v1beta4.OnPremisesConfiguration on_premises_configuration = 17;
   */
  onPremisesConfiguration?: OnPremisesConfiguration;

  /**
   * Configuration specific to failover replicas and read replicas.
   *
   * @generated from field: google.cloud.sql.v1beta4.ReplicaConfiguration replica_configuration = 18;
   */
  replicaConfiguration?: ReplicaConfiguration;

  /**
   * The backend type.
   * `SECOND_GEN`: Cloud SQL database instance.
   * `EXTERNAL`: A database server that is not managed by Google.
   *
   * This property is read-only; use the `tier` property in the `settings`
   * object to determine the database type.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlBackendType backend_type = 19;
   */
  backendType: SqlBackendType;

  /**
   * The URI of this resource.
   *
   * @generated from field: string self_link = 20;
   */
  selfLink: string;

  /**
   * If the instance state is SUSPENDED, the reason for the suspension.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.SqlSuspensionReason suspension_reason = 21;
   */
  suspensionReason: SqlSuspensionReason[];

  /**
   * Connection name of the Cloud SQL instance used in connection strings.
   *
   * @generated from field: string connection_name = 22;
   */
  connectionName: string;

  /**
   * Name of the Cloud SQL instance. This does not include the project ID.
   *
   * @generated from field: string name = 23;
   */
  name: string;

  /**
   * The geographical region of the Cloud SQL instance.
   *
   * It can be one of the
   * [regions](https://cloud.google.com/sql/docs/mysql/locations#location-r)
   * where Cloud SQL operates:
   *
   * For example,  `asia-east1`, `europe-west1`, and  `us-central1`.
   * The default value is `us-central1`.
   *
   * @generated from field: string region = 24;
   */
  region: string;

  /**
   * The Compute Engine zone that the instance is currently serving from. This
   * value could be different from the zone that was specified when the instance
   * was created if the instance has failed over to its secondary zone. WARNING:
   * Changing this might restart the instance.
   *
   * @generated from field: string gce_zone = 25;
   */
  gceZone: string;

  /**
   * The Compute Engine zone that the failover instance is currently serving
   * from for a regional instance. This value could be different
   * from the zone that was specified when the instance
   * was created if the instance has failed over to its secondary/failover zone.
   *
   * @generated from field: string secondary_gce_zone = 34;
   */
  secondaryGceZone: string;

  /**
   * Disk encryption configuration specific to an instance.
   *
   * @generated from field: google.cloud.sql.v1beta4.DiskEncryptionConfiguration disk_encryption_configuration = 26;
   */
  diskEncryptionConfiguration?: DiskEncryptionConfiguration;

  /**
   * Disk encryption status specific to an instance.
   *
   * @generated from field: google.cloud.sql.v1beta4.DiskEncryptionStatus disk_encryption_status = 27;
   */
  diskEncryptionStatus?: DiskEncryptionStatus;

  /**
   * Initial root password. Use only on creation. You must set root passwords
   * before you can connect to PostgreSQL instances.
   *
   * @generated from field: string root_password = 29;
   */
  rootPassword: string;

  /**
   * The start time of any upcoming scheduled maintenance for this instance.
   *
   * @generated from field: google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance scheduled_maintenance = 30;
   */
  scheduledMaintenance?: DatabaseInstance_SqlScheduledMaintenance;

  /**
   * This status indicates whether the instance satisfies PZS.
   *
   * The status is reserved for future use.
   *
   * @generated from field: google.protobuf.BoolValue satisfies_pzs = 35;
   */
  satisfiesPzs?: boolean;

  /**
   * Output only. Stores the current database version running on the instance
   * including minor version such as `MYSQL_8_0_18`.
   *
   * @generated from field: string database_installed_version = 40;
   */
  databaseInstalledVersion: string;

  /**
   * This field represents the report generated by the proactive database
   * wellness job for OutOfDisk issues.
   * *  Writers:
   *   *  the proactive database wellness job for OOD.
   * *  Readers:
   *   *  the proactive database wellness job
   *
   * @generated from field: optional google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport out_of_disk_report = 38;
   */
  outOfDiskReport?: DatabaseInstance_SqlOutOfDiskReport;

  /**
   * Output only. The time when the instance was created in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 39;
   */
  createTime?: Timestamp;

  /**
   * Output only. List all maintenance versions applicable on the instance
   *
   * @generated from field: repeated string available_maintenance_versions = 41;
   */
  availableMaintenanceVersions: string[];

  /**
   * The current software version on the instance.
   *
   * @generated from field: string maintenance_version = 42;
   */
  maintenanceVersion: string;

  /**
   * Output only. All database versions that are available for upgrade.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.AvailableDatabaseVersion upgradable_database_versions = 45;
   */
  upgradableDatabaseVersions: AvailableDatabaseVersion[];

  /**
   * The SQL network architecture for the instance.
   *
   * @generated from field: optional google.cloud.sql.v1beta4.DatabaseInstance.SqlNetworkArchitecture sql_network_architecture = 47;
   */
  sqlNetworkArchitecture?: DatabaseInstance_SqlNetworkArchitecture;

  /**
   * Output only. The link to service attachment of PSC instance.
   *
   * @generated from field: optional string psc_service_attachment_link = 48;
   */
  pscServiceAttachmentLink?: string;

  /**
   * Output only. The dns name of the instance.
   *
   * @generated from field: optional string dns_name = 49;
   */
  dnsName?: string;

  /**
   * Output only. DEPRECATED: please use write_endpoint instead.
   *
   * @generated from field: optional string primary_dns_name = 51 [deprecated = true];
   * @deprecated
   */
  primaryDnsName?: string;

  /**
   * Output only. The dns name of the primary instance in a replication group.
   *
   * @generated from field: optional string write_endpoint = 52;
   */
  writeEndpoint?: string;

  /**
   * A primary instance and disaster recovery (DR) replica pair.
   * A DR replica is a cross-region replica that you designate
   * for failover in the event that the primary instance
   * experiences regional failure. Only applicable to MySQL.
   *
   * @generated from field: optional google.cloud.sql.v1beta4.ReplicationCluster replication_cluster = 54;
   */
  replicationCluster?: ReplicationCluster;

  /**
   * Gemini instance configuration.
   *
   * @generated from field: optional google.cloud.sql.v1beta4.GeminiInstanceConfig gemini_config = 55;
   */
  geminiConfig?: GeminiInstanceConfig;
};

/**
 * Describes the message google.cloud.sql.v1beta4.DatabaseInstance.
 * Use `create(DatabaseInstanceSchema)` to create a new message.
 */
export const DatabaseInstanceSchema: GenMessage<DatabaseInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 14);

/**
 * @generated from message google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica
 */
export type DatabaseInstance_SqlFailoverReplica = Message<"google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica"> & {
  /**
   * The name of the failover replica. If specified at instance creation, a
   * failover replica is created for the instance. The name
   * doesn't include the project ID.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The availability status of the failover replica. A false status indicates
   * that the failover replica is out of sync. The primary instance can only
   * failover to the failover replica when the status is true.
   *
   * @generated from field: google.protobuf.BoolValue available = 2;
   */
  available?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica.
 * Use `create(DatabaseInstance_SqlFailoverReplicaSchema)` to create a new message.
 */
export const DatabaseInstance_SqlFailoverReplicaSchema: GenMessage<DatabaseInstance_SqlFailoverReplica> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 14, 0);

/**
 * Any scheduled maintenance for this instance.
 *
 * @generated from message google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance
 */
export type DatabaseInstance_SqlScheduledMaintenance = Message<"google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance"> & {
  /**
   * The start time of any upcoming scheduled maintenance for this instance.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * @generated from field: bool can_defer = 2 [deprecated = true];
   * @deprecated
   */
  canDefer: boolean;

  /**
   * If the scheduled maintenance can be rescheduled.
   *
   * @generated from field: bool can_reschedule = 3;
   */
  canReschedule: boolean;

  /**
   * Maintenance cannot be rescheduled to start beyond this deadline.
   *
   * @generated from field: optional google.protobuf.Timestamp schedule_deadline_time = 4;
   */
  scheduleDeadlineTime?: Timestamp;
};

/**
 * Describes the message google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance.
 * Use `create(DatabaseInstance_SqlScheduledMaintenanceSchema)` to create a new message.
 */
export const DatabaseInstance_SqlScheduledMaintenanceSchema: GenMessage<DatabaseInstance_SqlScheduledMaintenance> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 14, 1);

/**
 * This message wraps up the information written by out-of-disk detection job.
 *
 * @generated from message google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport
 */
export type DatabaseInstance_SqlOutOfDiskReport = Message<"google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport"> & {
  /**
   * This field represents the state generated by the proactive database
   * wellness job for OutOfDisk issues.
   * *  Writers:
   *   *  the proactive database wellness job for OOD.
   * *  Readers:
   *   *  the proactive database wellness job
   *
   * @generated from field: optional google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState sql_out_of_disk_state = 1;
   */
  sqlOutOfDiskState?: DatabaseInstance_SqlOutOfDiskReport_SqlOutOfDiskState;

  /**
   * The minimum recommended increase size in GigaBytes
   * This field is consumed by the frontend
   * *  Writers:
   *   *  the proactive database wellness job for OOD.
   * *  Readers:
   *
   * @generated from field: optional int32 sql_min_recommended_increase_size_gb = 2;
   */
  sqlMinRecommendedIncreaseSizeGb?: number;
};

/**
 * Describes the message google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport.
 * Use `create(DatabaseInstance_SqlOutOfDiskReportSchema)` to create a new message.
 */
export const DatabaseInstance_SqlOutOfDiskReportSchema: GenMessage<DatabaseInstance_SqlOutOfDiskReport> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 14, 2);

/**
 * This enum lists all possible states regarding out-of-disk issues.
 *
 * @generated from enum google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState
 */
export enum DatabaseInstance_SqlOutOfDiskReport_SqlOutOfDiskState {
  /**
   * Unspecified state
   *
   * @generated from enum value: SQL_OUT_OF_DISK_STATE_UNSPECIFIED = 0;
   */
  SQL_OUT_OF_DISK_STATE_UNSPECIFIED = 0,

  /**
   * The instance has plenty space on data disk
   *
   * @generated from enum value: NORMAL = 1;
   */
  NORMAL = 1,

  /**
   * Data disk is almost used up. It is shutdown to prevent data
   * corruption.
   *
   * @generated from enum value: SOFT_SHUTDOWN = 2;
   */
  SOFT_SHUTDOWN = 2,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState.
 */
export const DatabaseInstance_SqlOutOfDiskReport_SqlOutOfDiskStateSchema: GenEnum<DatabaseInstance_SqlOutOfDiskReport_SqlOutOfDiskState> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 14, 2, 0);

/**
 * The current serving state of the database instance.
 *
 * @generated from enum google.cloud.sql.v1beta4.DatabaseInstance.SqlInstanceState
 */
export enum DatabaseInstance_SqlInstanceState {
  /**
   * The state of the instance is unknown.
   *
   * @generated from enum value: SQL_INSTANCE_STATE_UNSPECIFIED = 0;
   */
  SQL_INSTANCE_STATE_UNSPECIFIED = 0,

  /**
   * The instance is running, or has been stopped by owner.
   *
   * @generated from enum value: RUNNABLE = 1;
   */
  RUNNABLE = 1,

  /**
   * The instance is not available, for example due to problems with billing.
   *
   * @generated from enum value: SUSPENDED = 2;
   */
  SUSPENDED = 2,

  /**
   * The instance is being deleted.
   *
   * @generated from enum value: PENDING_DELETE = 3;
   */
  PENDING_DELETE = 3,

  /**
   * The instance is being created.
   *
   * @generated from enum value: PENDING_CREATE = 4;
   */
  PENDING_CREATE = 4,

  /**
   * The instance is down for maintenance.
   *
   * @generated from enum value: MAINTENANCE = 5;
   */
  MAINTENANCE = 5,

  /**
   * The creation of the instance failed or a fatal error occurred during
   * maintenance.
   *
   * @generated from enum value: FAILED = 6;
   */
  FAILED = 6,

  /**
   * Deprecated
   *
   * @generated from enum value: ONLINE_MAINTENANCE = 7 [deprecated = true];
   * @deprecated
   */
  ONLINE_MAINTENANCE = 7,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.DatabaseInstance.SqlInstanceState.
 */
export const DatabaseInstance_SqlInstanceStateSchema: GenEnum<DatabaseInstance_SqlInstanceState> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 14, 0);

/**
 * The SQL network architecture for the instance.
 *
 * @generated from enum google.cloud.sql.v1beta4.DatabaseInstance.SqlNetworkArchitecture
 */
export enum DatabaseInstance_SqlNetworkArchitecture {
  /**
   * @generated from enum value: SQL_NETWORK_ARCHITECTURE_UNSPECIFIED = 0;
   */
  SQL_NETWORK_ARCHITECTURE_UNSPECIFIED = 0,

  /**
   * The instance uses the new network architecture.
   *
   * @generated from enum value: NEW_NETWORK_ARCHITECTURE = 1;
   */
  NEW_NETWORK_ARCHITECTURE = 1,

  /**
   * The instance uses the old network architecture.
   *
   * @generated from enum value: OLD_NETWORK_ARCHITECTURE = 2;
   */
  OLD_NETWORK_ARCHITECTURE = 2,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.DatabaseInstance.SqlNetworkArchitecture.
 */
export const DatabaseInstance_SqlNetworkArchitectureSchema: GenEnum<DatabaseInstance_SqlNetworkArchitecture> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 14, 1);

/**
 * Gemini instance configuration.
 *
 * @generated from message google.cloud.sql.v1beta4.GeminiInstanceConfig
 */
export type GeminiInstanceConfig = Message<"google.cloud.sql.v1beta4.GeminiInstanceConfig"> & {
  /**
   * Output only. Whether Gemini is enabled.
   *
   * @generated from field: optional bool entitled = 1;
   */
  entitled?: boolean;

  /**
   * Output only. Whether the vacuum management is enabled.
   *
   * @generated from field: optional bool google_vacuum_mgmt_enabled = 2;
   */
  googleVacuumMgmtEnabled?: boolean;

  /**
   * Output only. Whether canceling the out-of-memory (OOM) session is enabled.
   *
   * @generated from field: optional bool oom_session_cancel_enabled = 3;
   */
  oomSessionCancelEnabled?: boolean;

  /**
   * Output only. Whether the active query is enabled.
   *
   * @generated from field: optional bool active_query_enabled = 4;
   */
  activeQueryEnabled?: boolean;

  /**
   * Output only. Whether the index advisor is enabled.
   *
   * @generated from field: optional bool index_advisor_enabled = 5;
   */
  indexAdvisorEnabled?: boolean;

  /**
   * Output only. Whether the flag recommender is enabled.
   *
   * @generated from field: optional bool flag_recommender_enabled = 6;
   */
  flagRecommenderEnabled?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1beta4.GeminiInstanceConfig.
 * Use `create(GeminiInstanceConfigSchema)` to create a new message.
 */
export const GeminiInstanceConfigSchema: GenMessage<GeminiInstanceConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 15);

/**
 * A primary instance and disaster recovery (DR) replica pair.
 * A DR replica is a cross-region replica that you designate for failover
 * in the event that the primary instance has regional failure.
 * Only applicable to MySQL.
 *
 * @generated from message google.cloud.sql.v1beta4.ReplicationCluster
 */
export type ReplicationCluster = Message<"google.cloud.sql.v1beta4.ReplicationCluster"> & {
  /**
   * Output only. If set, it indicates this instance has a private service
   * access (PSA) dns endpoint that is pointing to the primary instance of the
   * cluster. If this instance is the primary, the dns should be pointing to
   * this instance. After Switchover or Replica failover, this DNS endpoint
   * points to the promoted instance. This is a read-only field, returned to the
   * user as information. This field can exist even if a standalone instance
   * does not yet have a replica, or had a DR replica that was deleted.
   *
   * @generated from field: optional string psa_write_endpoint = 1;
   */
  psaWriteEndpoint?: string;

  /**
   * Optional. If the instance is a primary instance, then this field identifies
   * the disaster recovery (DR) replica. A DR replica is an optional
   * configuration for Enterprise Plus edition instances. If the instance is a
   * read replica, then the field is not set. Set this field to a replica name
   * to designate a DR replica for a primary instance. Remove the replica name
   * to remove the DR replica designation.
   *
   * @generated from field: optional string failover_dr_replica_name = 2;
   */
  failoverDrReplicaName?: string;

  /**
   * Output only. Read-only field that indicates whether the replica is a DR
   * replica. This field is not set if the instance is a primary instance.
   *
   * @generated from field: optional bool dr_replica = 4;
   */
  drReplica?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1beta4.ReplicationCluster.
 * Use `create(ReplicationClusterSchema)` to create a new message.
 */
export const ReplicationClusterSchema: GenMessage<ReplicationCluster> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 16);

/**
 * An available database version. It can be a major or a minor version.
 *
 * @generated from message google.cloud.sql.v1beta4.AvailableDatabaseVersion
 */
export type AvailableDatabaseVersion = Message<"google.cloud.sql.v1beta4.AvailableDatabaseVersion"> & {
  /**
   * The version's major version name.
   *
   * @generated from field: optional string major_version = 3;
   */
  majorVersion?: string;

  /**
   * The database version name. For MySQL 8.0, this string provides the database
   * major and minor version.
   *
   * @generated from field: optional string name = 8;
   */
  name?: string;

  /**
   * The database version's display name.
   *
   * @generated from field: optional string display_name = 9;
   */
  displayName?: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.AvailableDatabaseVersion.
 * Use `create(AvailableDatabaseVersionSchema)` to create a new message.
 */
export const AvailableDatabaseVersionSchema: GenMessage<AvailableDatabaseVersion> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 17);

/**
 * Database list response.
 *
 * @generated from message google.cloud.sql.v1beta4.DatabasesListResponse
 */
export type DatabasesListResponse = Message<"google.cloud.sql.v1beta4.DatabasesListResponse"> & {
  /**
   * This is always `sql#databasesList`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * List of database resources in the instance.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.Database items = 2;
   */
  items: Database[];
};

/**
 * Describes the message google.cloud.sql.v1beta4.DatabasesListResponse.
 * Use `create(DatabasesListResponseSchema)` to create a new message.
 */
export const DatabasesListResponseSchema: GenMessage<DatabasesListResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 18);

/**
 * Read-replica configuration for connecting to the on-premises primary
 * instance.
 *
 * @generated from message google.cloud.sql.v1beta4.DemoteMasterConfiguration
 */
export type DemoteMasterConfiguration = Message<"google.cloud.sql.v1beta4.DemoteMasterConfiguration"> & {
  /**
   * This is always `sql#demoteMasterConfiguration`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * MySQL specific configuration when replicating from a MySQL on-premises
   * primary instance. Replication configuration information such as the
   * username, password, certificates, and keys are not stored in the instance
   * metadata. The configuration information is used only to set up the
   * replication connection and is stored by MySQL in a file named
   * `master.info` in the data directory.
   *
   * @generated from field: google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration mysql_replica_configuration = 2;
   */
  mysqlReplicaConfiguration?: DemoteMasterMySqlReplicaConfiguration;
};

/**
 * Describes the message google.cloud.sql.v1beta4.DemoteMasterConfiguration.
 * Use `create(DemoteMasterConfigurationSchema)` to create a new message.
 */
export const DemoteMasterConfigurationSchema: GenMessage<DemoteMasterConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 19);

/**
 * Database instance demote primary instance context.
 *
 * @generated from message google.cloud.sql.v1beta4.DemoteMasterContext
 */
export type DemoteMasterContext = Message<"google.cloud.sql.v1beta4.DemoteMasterContext"> & {
  /**
   * This is always `sql#demoteMasterContext`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Verify the GTID consistency for demote operation. Default value:
   * `True`. Setting this flag to `false` enables you to bypass the GTID
   * consistency check between on-premises primary instance and Cloud SQL
   * instance during the demotion operation but also exposes you to the risk of
   * future replication failures. Change the value only if you know the reason
   * for the GTID divergence and are confident that doing so will not cause any
   * replication issues.
   *
   * @generated from field: google.protobuf.BoolValue verify_gtid_consistency = 2;
   */
  verifyGtidConsistency?: boolean;

  /**
   * The name of the instance which will act as on-premises primary instance
   * in the replication setup.
   *
   * @generated from field: string master_instance_name = 3;
   */
  masterInstanceName: string;

  /**
   * Configuration specific to read-replicas replicating from the on-premises
   * primary instance.
   *
   * @generated from field: google.cloud.sql.v1beta4.DemoteMasterConfiguration replica_configuration = 4;
   */
  replicaConfiguration?: DemoteMasterConfiguration;

  /**
   * Flag to skip replication setup on the instance.
   *
   * @generated from field: bool skip_replication_setup = 5;
   */
  skipReplicationSetup: boolean;
};

/**
 * Describes the message google.cloud.sql.v1beta4.DemoteMasterContext.
 * Use `create(DemoteMasterContextSchema)` to create a new message.
 */
export const DemoteMasterContextSchema: GenMessage<DemoteMasterContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 20);

/**
 * Read-replica configuration specific to MySQL databases.
 *
 * @generated from message google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
 */
export type DemoteMasterMySqlReplicaConfiguration = Message<"google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration"> & {
  /**
   * This is always `sql#demoteMasterMysqlReplicaConfiguration`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The username for the replication connection.
   *
   * @generated from field: string username = 2;
   */
  username: string;

  /**
   * The password for the replication connection.
   *
   * @generated from field: string password = 3;
   */
  password: string;

  /**
   * PEM representation of the replica's private key. The corresponsing public
   * key is encoded in the client's certificate. The format of the replica's
   * private key can be either PKCS #1 or PKCS #8.
   *
   * @generated from field: string client_key = 4;
   */
  clientKey: string;

  /**
   * PEM representation of the replica's x509 certificate.
   *
   * @generated from field: string client_certificate = 5;
   */
  clientCertificate: string;

  /**
   * PEM representation of the trusted CA's x509 certificate.
   *
   * @generated from field: string ca_certificate = 6;
   */
  caCertificate: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration.
 * Use `create(DemoteMasterMySqlReplicaConfigurationSchema)` to create a new message.
 */
export const DemoteMasterMySqlReplicaConfigurationSchema: GenMessage<DemoteMasterMySqlReplicaConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 21);

/**
 * This context is used to demote an existing standalone instance to be
 * a Cloud SQL read replica for an external database server.
 *
 * @generated from message google.cloud.sql.v1beta4.DemoteContext
 */
export type DemoteContext = Message<"google.cloud.sql.v1beta4.DemoteContext"> & {
  /**
   * This is always `sql#demoteContext`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Required. The name of the instance which acts as an on-premises primary
   * instance in the replication setup.
   *
   * @generated from field: string source_representative_instance_name = 2;
   */
  sourceRepresentativeInstanceName: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.DemoteContext.
 * Use `create(DemoteContextSchema)` to create a new message.
 */
export const DemoteContextSchema: GenMessage<DemoteContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 22);

/**
 * Database instance export context.
 *
 * @generated from message google.cloud.sql.v1beta4.ExportContext
 */
export type ExportContext = Message<"google.cloud.sql.v1beta4.ExportContext"> & {
  /**
   * The path to the file in Google Cloud Storage where the export will be
   * stored. The URI is in the form `gs://bucketName/fileName`. If the file
   * already exists, the request succeeds, but the operation fails. If
   * `fileType` is `SQL` and the filename ends with .gz,
   * the contents are compressed.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * Databases to be exported. <br /> `MySQL instances:` If
   * `fileType` is `SQL` and no database is specified, all
   * databases are exported, except for the `mysql` system database.
   * If `fileType` is `CSV`, you can specify one database,
   * either by using this property or by using the
   * `csvExportOptions.selectQuery` property, which takes precedence
   * over this property. <br /> `PostgreSQL instances:` You must specify
   * one database to be exported. If `fileType` is `CSV`,
   * this database must match the one specified in the
   * `csvExportOptions.selectQuery` property. <br /> `SQL Server
   * instances:` You must specify one database to be exported, and the
   * `fileType` must be `BAK`.
   *
   * @generated from field: repeated string databases = 2;
   */
  databases: string[];

  /**
   * This is always `sql#exportContext`.
   *
   * @generated from field: string kind = 3;
   */
  kind: string;

  /**
   * Options for exporting data as SQL statements.
   *
   * @generated from field: google.cloud.sql.v1beta4.ExportContext.SqlExportOptions sql_export_options = 4;
   */
  sqlExportOptions?: ExportContext_SqlExportOptions;

  /**
   * Options for exporting data as CSV. `MySQL` and `PostgreSQL`
   * instances only.
   *
   * @generated from field: google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions csv_export_options = 5;
   */
  csvExportOptions?: ExportContext_SqlCsvExportOptions;

  /**
   * The file type for the specified uri.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlFileType file_type = 6;
   */
  fileType: SqlFileType;

  /**
   * Option for export offload.
   *
   * @generated from field: google.protobuf.BoolValue offload = 8;
   */
  offload?: boolean;

  /**
   * Options for exporting data as BAK files.
   *
   * @generated from field: google.cloud.sql.v1beta4.ExportContext.SqlBakExportOptions bak_export_options = 9;
   */
  bakExportOptions?: ExportContext_SqlBakExportOptions;
};

/**
 * Describes the message google.cloud.sql.v1beta4.ExportContext.
 * Use `create(ExportContextSchema)` to create a new message.
 */
export const ExportContextSchema: GenMessage<ExportContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 23);

/**
 * @generated from message google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions
 */
export type ExportContext_SqlCsvExportOptions = Message<"google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions"> & {
  /**
   * The select query used to extract the data.
   *
   * @generated from field: string select_query = 1;
   */
  selectQuery: string;

  /**
   * Specifies the character that should appear before a data character that
   * needs to be escaped.
   *
   * @generated from field: string escape_character = 2;
   */
  escapeCharacter: string;

  /**
   * Specifies the quoting character to be used when a data value is quoted.
   *
   * @generated from field: string quote_character = 3;
   */
  quoteCharacter: string;

  /**
   * Specifies the character that separates columns within each row (line) of
   * the file.
   *
   * @generated from field: string fields_terminated_by = 4;
   */
  fieldsTerminatedBy: string;

  /**
   * This is used to separate lines. If a line does not contain all fields,
   * the rest of the columns are set to their default values.
   *
   * @generated from field: string lines_terminated_by = 6;
   */
  linesTerminatedBy: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions.
 * Use `create(ExportContext_SqlCsvExportOptionsSchema)` to create a new message.
 */
export const ExportContext_SqlCsvExportOptionsSchema: GenMessage<ExportContext_SqlCsvExportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 23, 0);

/**
 * @generated from message google.cloud.sql.v1beta4.ExportContext.SqlExportOptions
 */
export type ExportContext_SqlExportOptions = Message<"google.cloud.sql.v1beta4.ExportContext.SqlExportOptions"> & {
  /**
   * Tables to export, or that were exported, from the specified database. If
   * you specify tables, specify one and only one database. For PostgreSQL
   * instances, you can specify only one table.
   *
   * @generated from field: repeated string tables = 1;
   */
  tables: string[];

  /**
   * Export only schemas.
   *
   * @generated from field: google.protobuf.BoolValue schema_only = 2;
   */
  schemaOnly?: boolean;

  /**
   * @generated from field: google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions mysql_export_options = 3;
   */
  mysqlExportOptions?: ExportContext_SqlExportOptions_MysqlExportOptions;

  /**
   * Optional. The number of threads to use for parallel export.
   *
   * @generated from field: google.protobuf.Int32Value threads = 4;
   */
  threads?: number;

  /**
   * Optional. Whether or not the export should be parallel.
   *
   * @generated from field: google.protobuf.BoolValue parallel = 5;
   */
  parallel?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.
 * Use `create(ExportContext_SqlExportOptionsSchema)` to create a new message.
 */
export const ExportContext_SqlExportOptionsSchema: GenMessage<ExportContext_SqlExportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 23, 1);

/**
 * Options for exporting from MySQL.
 *
 * @generated from message google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions
 */
export type ExportContext_SqlExportOptions_MysqlExportOptions = Message<"google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions"> & {
  /**
   * Option to include SQL statement required to set up replication. If set
   * to `1`, the dump file includes a CHANGE MASTER TO statement with the
   * binary log coordinates, and --set-gtid-purged is set to ON. If set to
   * `2`, the CHANGE MASTER TO statement is written as a SQL comment and
   * has no effect. If set to any value other than `1`, --set-gtid-purged
   * is set to OFF.
   *
   * @generated from field: google.protobuf.Int32Value master_data = 1;
   */
  masterData?: number;
};

/**
 * Describes the message google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions.
 * Use `create(ExportContext_SqlExportOptions_MysqlExportOptionsSchema)` to create a new message.
 */
export const ExportContext_SqlExportOptions_MysqlExportOptionsSchema: GenMessage<ExportContext_SqlExportOptions_MysqlExportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 23, 1, 0);

/**
 * Options for exporting BAK files (SQL Server-only)
 *
 * @generated from message google.cloud.sql.v1beta4.ExportContext.SqlBakExportOptions
 */
export type ExportContext_SqlBakExportOptions = Message<"google.cloud.sql.v1beta4.ExportContext.SqlBakExportOptions"> & {
  /**
   * Whether or not the export should be striped.
   *
   * @generated from field: google.protobuf.BoolValue striped = 1;
   */
  striped?: boolean;

  /**
   * Option for specifying how many stripes to use for the export.
   * If blank, and the value of the striped field is true,
   * the number of stripes is automatically chosen.
   *
   * @generated from field: google.protobuf.Int32Value stripe_count = 2;
   */
  stripeCount?: number;

  /**
   * Type of this bak file will be export, FULL or DIFF, SQL Server only
   *
   * @generated from field: google.cloud.sql.v1beta4.BakType bak_type = 4;
   */
  bakType: BakType;

  /**
   * Deprecated: copy_only is deprecated. Use differential_base instead
   *
   * @generated from field: google.protobuf.BoolValue copy_only = 5 [deprecated = true];
   * @deprecated
   */
  copyOnly?: boolean;

  /**
   * Whether or not the backup can be used as a differential base
   * copy_only backup can not be served as differential base
   *
   * @generated from field: google.protobuf.BoolValue differential_base = 6;
   */
  differentialBase?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1beta4.ExportContext.SqlBakExportOptions.
 * Use `create(ExportContext_SqlBakExportOptionsSchema)` to create a new message.
 */
export const ExportContext_SqlBakExportOptionsSchema: GenMessage<ExportContext_SqlBakExportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 23, 2);

/**
 * Database instance failover context.
 *
 * @generated from message google.cloud.sql.v1beta4.FailoverContext
 */
export type FailoverContext = Message<"google.cloud.sql.v1beta4.FailoverContext"> & {
  /**
   * The current settings version of this instance. Request will be rejected if
   * this version doesn't match the current settings version.
   *
   * @generated from field: int64 settings_version = 1;
   */
  settingsVersion: bigint;

  /**
   * This is always `sql#failoverContext`.
   *
   * @generated from field: string kind = 2;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.FailoverContext.
 * Use `create(FailoverContextSchema)` to create a new message.
 */
export const FailoverContextSchema: GenMessage<FailoverContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 24);

/**
 * A flag resource.
 *
 * @generated from message google.cloud.sql.v1beta4.Flag
 */
export type Flag = Message<"google.cloud.sql.v1beta4.Flag"> & {
  /**
   * This is the name of the flag. Flag names always use underscores, not
   * hyphens, for example: `max_allowed_packet`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The type of the flag. Flags are typed to being `BOOLEAN`, `STRING`,
   * `INTEGER` or `NONE`. `NONE` is used for flags which do not take a
   * value, such as `skip_grant_tables`.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlFlagType type = 2;
   */
  type: SqlFlagType;

  /**
   * The database version this flag applies to. Can be
   * MySQL instances: `MYSQL_8_0`, `MYSQL_8_0_18`, `MYSQL_8_0_26`, `MYSQL_5_7`,
   * or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`,
   * `POSTGRES_11` or `POSTGRES_12`. SQL Server instances:
   * `SQLSERVER_2017_STANDARD`, `SQLSERVER_2017_ENTERPRISE`,
   * `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`,
   * `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or
   * `SQLSERVER_2019_WEB`.
   * See [the complete
   * list](/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion).
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.SqlDatabaseVersion applies_to = 3;
   */
  appliesTo: SqlDatabaseVersion[];

  /**
   * For `STRING` flags, a list of strings that the value can be set to.
   *
   * @generated from field: repeated string allowed_string_values = 4;
   */
  allowedStringValues: string[];

  /**
   * For `INTEGER` flags, the minimum allowed value.
   *
   * @generated from field: google.protobuf.Int64Value min_value = 5;
   */
  minValue?: bigint;

  /**
   * For `INTEGER` flags, the maximum allowed value.
   *
   * @generated from field: google.protobuf.Int64Value max_value = 6;
   */
  maxValue?: bigint;

  /**
   * Indicates whether changing this flag will trigger a database restart. Only
   * applicable to Second Generation instances.
   *
   * @generated from field: google.protobuf.BoolValue requires_restart = 7;
   */
  requiresRestart?: boolean;

  /**
   * This is always `sql#flag`.
   *
   * @generated from field: string kind = 8;
   */
  kind: string;

  /**
   * Whether or not the flag is considered in beta.
   *
   * @generated from field: google.protobuf.BoolValue in_beta = 9;
   */
  inBeta?: boolean;

  /**
   * Use this field if only certain integers are accepted. Can be combined
   * with min_value and max_value to add additional values.
   *
   * @generated from field: repeated int64 allowed_int_values = 10;
   */
  allowedIntValues: bigint[];
};

/**
 * Describes the message google.cloud.sql.v1beta4.Flag.
 * Use `create(FlagSchema)` to create a new message.
 */
export const FlagSchema: GenMessage<Flag> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 25);

/**
 * Flags list response.
 *
 * @generated from message google.cloud.sql.v1beta4.FlagsListResponse
 */
export type FlagsListResponse = Message<"google.cloud.sql.v1beta4.FlagsListResponse"> & {
  /**
   * This is always `sql#flagsList`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * List of flags.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.Flag items = 2;
   */
  items: Flag[];
};

/**
 * Describes the message google.cloud.sql.v1beta4.FlagsListResponse.
 * Use `create(FlagsListResponseSchema)` to create a new message.
 */
export const FlagsListResponseSchema: GenMessage<FlagsListResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 26);

/**
 * Database instance import context.
 *
 * @generated from message google.cloud.sql.v1beta4.ImportContext
 */
export type ImportContext = Message<"google.cloud.sql.v1beta4.ImportContext"> & {
  /**
   * Path to the import file in Cloud Storage, in the form
   * `gs://bucketName/fileName`. Compressed gzip files (.gz) are supported
   * when `fileType` is `SQL`. The instance must have
   * write permissions to the bucket and read access to the file.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * The target database for the import. If `fileType` is `SQL`, this field
   * is required only if the import file does not specify a database, and is
   * overridden by any database specification in the import file. If
   * `fileType` is `CSV`, one database must be specified.
   *
   * @generated from field: string database = 2;
   */
  database: string;

  /**
   * This is always `sql#importContext`.
   *
   * @generated from field: string kind = 3;
   */
  kind: string;

  /**
   * The file type for the specified uri.
   * *  `SQL`: The file contains SQL statements.
   * *  `CSV`: The file contains CSV data.
   * *  `BAK`: The file contains backup data for a SQL Server instance.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlFileType file_type = 4;
   */
  fileType: SqlFileType;

  /**
   * Options for importing data as CSV.
   *
   * @generated from field: google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions csv_import_options = 5;
   */
  csvImportOptions?: ImportContext_SqlCsvImportOptions;

  /**
   * The PostgreSQL user for this import operation. PostgreSQL instances only.
   *
   * @generated from field: string import_user = 6;
   */
  importUser: string;

  /**
   * Import parameters specific to SQL Server .BAK files
   *
   * @generated from field: google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions bak_import_options = 7;
   */
  bakImportOptions?: ImportContext_SqlBakImportOptions;

  /**
   * Optional. Options for importing data from SQL statements.
   *
   * @generated from field: google.cloud.sql.v1beta4.ImportContext.SqlImportOptions sql_import_options = 8;
   */
  sqlImportOptions?: ImportContext_SqlImportOptions;
};

/**
 * Describes the message google.cloud.sql.v1beta4.ImportContext.
 * Use `create(ImportContextSchema)` to create a new message.
 */
export const ImportContextSchema: GenMessage<ImportContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 27);

/**
 * @generated from message google.cloud.sql.v1beta4.ImportContext.SqlImportOptions
 */
export type ImportContext_SqlImportOptions = Message<"google.cloud.sql.v1beta4.ImportContext.SqlImportOptions"> & {
  /**
   * Optional. The number of threads to use for parallel import.
   *
   * @generated from field: google.protobuf.Int32Value threads = 1;
   */
  threads?: number;

  /**
   * Optional. Whether or not the import should be parallel.
   *
   * @generated from field: google.protobuf.BoolValue parallel = 2;
   */
  parallel?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1beta4.ImportContext.SqlImportOptions.
 * Use `create(ImportContext_SqlImportOptionsSchema)` to create a new message.
 */
export const ImportContext_SqlImportOptionsSchema: GenMessage<ImportContext_SqlImportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 27, 0);

/**
 * @generated from message google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions
 */
export type ImportContext_SqlCsvImportOptions = Message<"google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions"> & {
  /**
   * The table to which CSV data is imported.
   *
   * @generated from field: string table = 1;
   */
  table: string;

  /**
   * The columns to which CSV data is imported. If not specified, all columns
   * of the database table are loaded with CSV data.
   *
   * @generated from field: repeated string columns = 2;
   */
  columns: string[];

  /**
   * Specifies the character that should appear before a data character that
   * needs to be escaped.
   *
   * @generated from field: string escape_character = 4;
   */
  escapeCharacter: string;

  /**
   * Specifies the quoting character to be used when a data value is quoted.
   *
   * @generated from field: string quote_character = 5;
   */
  quoteCharacter: string;

  /**
   * Specifies the character that separates columns within each row (line) of
   * the file.
   *
   * @generated from field: string fields_terminated_by = 6;
   */
  fieldsTerminatedBy: string;

  /**
   * This is used to separate lines. If a line does not contain all fields,
   * the rest of the columns are set to their default values.
   *
   * @generated from field: string lines_terminated_by = 8;
   */
  linesTerminatedBy: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions.
 * Use `create(ImportContext_SqlCsvImportOptionsSchema)` to create a new message.
 */
export const ImportContext_SqlCsvImportOptionsSchema: GenMessage<ImportContext_SqlCsvImportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 27, 1);

/**
 * @generated from message google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions
 */
export type ImportContext_SqlBakImportOptions = Message<"google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions"> & {
  /**
   * @generated from field: google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions encryption_options = 1;
   */
  encryptionOptions?: ImportContext_SqlBakImportOptions_EncryptionOptions;

  /**
   * Whether or not the backup set being restored is striped.
   * Applies only to Cloud SQL for SQL Server.
   *
   * @generated from field: google.protobuf.BoolValue striped = 2;
   */
  striped?: boolean;

  /**
   * Whether or not the backup importing will restore database
   * with NORECOVERY option
   * Applies only to Cloud SQL for SQL Server.
   *
   * @generated from field: google.protobuf.BoolValue no_recovery = 4;
   */
  noRecovery?: boolean;

  /**
   * Whether or not the backup importing request will just bring database
   * online without downloading Bak content only one of "no_recovery" and
   * "recovery_only" can be true otherwise error will return. Applies only to
   * Cloud SQL for SQL Server.
   *
   * @generated from field: google.protobuf.BoolValue recovery_only = 5;
   */
  recoveryOnly?: boolean;

  /**
   * Type of the bak content, FULL or DIFF.
   *
   * @generated from field: google.cloud.sql.v1beta4.BakType bak_type = 6;
   */
  bakType: BakType;

  /**
   * Optional. The timestamp when the import should stop. This timestamp is in
   * the [RFC 3339](https://tools.ietf.org/html/rfc3339) format (for example,
   * `2023-10-01T16:19:00.094`). This field is equivalent to the STOPAT
   * keyword and applies to Cloud SQL for SQL Server only.
   *
   * @generated from field: google.protobuf.Timestamp stop_at = 7;
   */
  stopAt?: Timestamp;

  /**
   * Optional. The marked transaction where the import should stop. This field
   * is equivalent to the STOPATMARK keyword and applies to Cloud SQL for SQL
   * Server only.
   *
   * @generated from field: string stop_at_mark = 8;
   */
  stopAtMark: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.
 * Use `create(ImportContext_SqlBakImportOptionsSchema)` to create a new message.
 */
export const ImportContext_SqlBakImportOptionsSchema: GenMessage<ImportContext_SqlBakImportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 27, 2);

/**
 * @generated from message google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions
 */
export type ImportContext_SqlBakImportOptions_EncryptionOptions = Message<"google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions"> & {
  /**
   * Path to the Certificate (.cer) in Cloud Storage, in the form
   * `gs://bucketName/fileName`. The instance must have write permissions
   * to the bucket and read access to the file.
   *
   * @generated from field: string cert_path = 1;
   */
  certPath: string;

  /**
   * Path to the Certificate Private Key (.pvk)  in Cloud Storage, in the
   * form `gs://bucketName/fileName`. The instance must have write
   * permissions to the bucket and read access to the file.
   *
   * @generated from field: string pvk_path = 2;
   */
  pvkPath: string;

  /**
   * Password that encrypts the private key
   *
   * @generated from field: string pvk_password = 3;
   */
  pvkPassword: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions.
 * Use `create(ImportContext_SqlBakImportOptions_EncryptionOptionsSchema)` to create a new message.
 */
export const ImportContext_SqlBakImportOptions_EncryptionOptionsSchema: GenMessage<ImportContext_SqlBakImportOptions_EncryptionOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 27, 2, 0);

/**
 * Database instance clone request.
 *
 * @generated from message google.cloud.sql.v1beta4.InstancesCloneRequest
 */
export type InstancesCloneRequest = Message<"google.cloud.sql.v1beta4.InstancesCloneRequest"> & {
  /**
   * Contains details about the clone operation.
   *
   * @generated from field: google.cloud.sql.v1beta4.CloneContext clone_context = 1;
   */
  cloneContext?: CloneContext;
};

/**
 * Describes the message google.cloud.sql.v1beta4.InstancesCloneRequest.
 * Use `create(InstancesCloneRequestSchema)` to create a new message.
 */
export const InstancesCloneRequestSchema: GenMessage<InstancesCloneRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 28);

/**
 * Database demote primary instance request.
 *
 * @generated from message google.cloud.sql.v1beta4.InstancesDemoteMasterRequest
 */
export type InstancesDemoteMasterRequest = Message<"google.cloud.sql.v1beta4.InstancesDemoteMasterRequest"> & {
  /**
   * Contains details about the demoteMaster operation.
   *
   * @generated from field: google.cloud.sql.v1beta4.DemoteMasterContext demote_master_context = 1;
   */
  demoteMasterContext?: DemoteMasterContext;
};

/**
 * Describes the message google.cloud.sql.v1beta4.InstancesDemoteMasterRequest.
 * Use `create(InstancesDemoteMasterRequestSchema)` to create a new message.
 */
export const InstancesDemoteMasterRequestSchema: GenMessage<InstancesDemoteMasterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 29);

/**
 * This request is used to demote an existing standalone instance to be a
 * Cloud SQL read replica for an external database server.
 *
 * @generated from message google.cloud.sql.v1beta4.InstancesDemoteRequest
 */
export type InstancesDemoteRequest = Message<"google.cloud.sql.v1beta4.InstancesDemoteRequest"> & {
  /**
   * Required. This context is used to demote an existing standalone instance to
   * be a Cloud SQL read replica for an external database server.
   *
   * @generated from field: google.cloud.sql.v1beta4.DemoteContext demote_context = 1;
   */
  demoteContext?: DemoteContext;
};

/**
 * Describes the message google.cloud.sql.v1beta4.InstancesDemoteRequest.
 * Use `create(InstancesDemoteRequestSchema)` to create a new message.
 */
export const InstancesDemoteRequestSchema: GenMessage<InstancesDemoteRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 30);

/**
 * Database instance export request.
 *
 * @generated from message google.cloud.sql.v1beta4.InstancesExportRequest
 */
export type InstancesExportRequest = Message<"google.cloud.sql.v1beta4.InstancesExportRequest"> & {
  /**
   * Contains details about the export operation.
   *
   * @generated from field: google.cloud.sql.v1beta4.ExportContext export_context = 1;
   */
  exportContext?: ExportContext;
};

/**
 * Describes the message google.cloud.sql.v1beta4.InstancesExportRequest.
 * Use `create(InstancesExportRequestSchema)` to create a new message.
 */
export const InstancesExportRequestSchema: GenMessage<InstancesExportRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 31);

/**
 * Instance failover request.
 *
 * @generated from message google.cloud.sql.v1beta4.InstancesFailoverRequest
 */
export type InstancesFailoverRequest = Message<"google.cloud.sql.v1beta4.InstancesFailoverRequest"> & {
  /**
   * Failover Context.
   *
   * @generated from field: google.cloud.sql.v1beta4.FailoverContext failover_context = 1;
   */
  failoverContext?: FailoverContext;
};

/**
 * Describes the message google.cloud.sql.v1beta4.InstancesFailoverRequest.
 * Use `create(InstancesFailoverRequestSchema)` to create a new message.
 */
export const InstancesFailoverRequestSchema: GenMessage<InstancesFailoverRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 32);

/**
 * Database instance import request.
 *
 * @generated from message google.cloud.sql.v1beta4.InstancesImportRequest
 */
export type InstancesImportRequest = Message<"google.cloud.sql.v1beta4.InstancesImportRequest"> & {
  /**
   * Contains details about the import operation.
   *
   * @generated from field: google.cloud.sql.v1beta4.ImportContext import_context = 1;
   */
  importContext?: ImportContext;
};

/**
 * Describes the message google.cloud.sql.v1beta4.InstancesImportRequest.
 * Use `create(InstancesImportRequestSchema)` to create a new message.
 */
export const InstancesImportRequestSchema: GenMessage<InstancesImportRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 33);

/**
 * MySQL-specific external server sync settings.
 *
 * @generated from message google.cloud.sql.v1beta4.MySqlSyncConfig
 */
export type MySqlSyncConfig = Message<"google.cloud.sql.v1beta4.MySqlSyncConfig"> & {
  /**
   * Flags to use for the initial dump.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.SyncFlags initial_sync_flags = 1;
   */
  initialSyncFlags: SyncFlags[];
};

/**
 * Describes the message google.cloud.sql.v1beta4.MySqlSyncConfig.
 * Use `create(MySqlSyncConfigSchema)` to create a new message.
 */
export const MySqlSyncConfigSchema: GenMessage<MySqlSyncConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 34);

/**
 * Database instances list response.
 *
 * @generated from message google.cloud.sql.v1beta4.InstancesListResponse
 */
export type InstancesListResponse = Message<"google.cloud.sql.v1beta4.InstancesListResponse"> & {
  /**
   * This is always `sql#instancesList`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * List of warnings that occurred while handling the request.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.ApiWarning warnings = 2;
   */
  warnings: ApiWarning[];

  /**
   * List of database instance resources.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.DatabaseInstance items = 3;
   */
  items: DatabaseInstance[];

  /**
   * The continuation token, used to page through large result sets. Provide
   * this value in a subsequent request to return the next page of results.
   *
   * @generated from field: string next_page_token = 4;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.InstancesListResponse.
 * Use `create(InstancesListResponseSchema)` to create a new message.
 */
export const InstancesListResponseSchema: GenMessage<InstancesListResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 35);

/**
 * Instances ListServerCas response.
 *
 * @generated from message google.cloud.sql.v1beta4.InstancesListServerCasResponse
 */
export type InstancesListServerCasResponse = Message<"google.cloud.sql.v1beta4.InstancesListServerCasResponse"> & {
  /**
   * List of server CA certificates for the instance.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.SslCert certs = 1;
   */
  certs: SslCert[];

  /**
   * @generated from field: string active_version = 2;
   */
  activeVersion: string;

  /**
   * This is always `sql#instancesListServerCas`.
   *
   * @generated from field: string kind = 3;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.InstancesListServerCasResponse.
 * Use `create(InstancesListServerCasResponseSchema)` to create a new message.
 */
export const InstancesListServerCasResponseSchema: GenMessage<InstancesListServerCasResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 36);

/**
 * Database instance restore backup request.
 *
 * @generated from message google.cloud.sql.v1beta4.InstancesRestoreBackupRequest
 */
export type InstancesRestoreBackupRequest = Message<"google.cloud.sql.v1beta4.InstancesRestoreBackupRequest"> & {
  /**
   * Parameters required to perform the restore backup operation.
   *
   * @generated from field: google.cloud.sql.v1beta4.RestoreBackupContext restore_backup_context = 1;
   */
  restoreBackupContext?: RestoreBackupContext;
};

/**
 * Describes the message google.cloud.sql.v1beta4.InstancesRestoreBackupRequest.
 * Use `create(InstancesRestoreBackupRequestSchema)` to create a new message.
 */
export const InstancesRestoreBackupRequestSchema: GenMessage<InstancesRestoreBackupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 37);

/**
 * Rotate Server CA request.
 *
 * @generated from message google.cloud.sql.v1beta4.InstancesRotateServerCaRequest
 */
export type InstancesRotateServerCaRequest = Message<"google.cloud.sql.v1beta4.InstancesRotateServerCaRequest"> & {
  /**
   * Contains details about the rotate server CA operation.
   *
   * @generated from field: google.cloud.sql.v1beta4.RotateServerCaContext rotate_server_ca_context = 1;
   */
  rotateServerCaContext?: RotateServerCaContext;
};

/**
 * Describes the message google.cloud.sql.v1beta4.InstancesRotateServerCaRequest.
 * Use `create(InstancesRotateServerCaRequestSchema)` to create a new message.
 */
export const InstancesRotateServerCaRequestSchema: GenMessage<InstancesRotateServerCaRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 38);

/**
 * Instance truncate log request.
 *
 * @generated from message google.cloud.sql.v1beta4.InstancesTruncateLogRequest
 */
export type InstancesTruncateLogRequest = Message<"google.cloud.sql.v1beta4.InstancesTruncateLogRequest"> & {
  /**
   * Contains details about the truncate log operation.
   *
   * @generated from field: google.cloud.sql.v1beta4.TruncateLogContext truncate_log_context = 1;
   */
  truncateLogContext?: TruncateLogContext;
};

/**
 * Describes the message google.cloud.sql.v1beta4.InstancesTruncateLogRequest.
 * Use `create(InstancesTruncateLogRequestSchema)` to create a new message.
 */
export const InstancesTruncateLogRequestSchema: GenMessage<InstancesTruncateLogRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 39);

/**
 * Request to acquire an SSRS lease for an instance.
 *
 * @generated from message google.cloud.sql.v1beta4.InstancesAcquireSsrsLeaseRequest
 */
export type InstancesAcquireSsrsLeaseRequest = Message<"google.cloud.sql.v1beta4.InstancesAcquireSsrsLeaseRequest"> & {
  /**
   * Contains details about the acquire SSRS lease operation.
   *
   * @generated from field: google.cloud.sql.v1beta4.AcquireSsrsLeaseContext acquire_ssrs_lease_context = 1;
   */
  acquireSsrsLeaseContext?: AcquireSsrsLeaseContext;
};

/**
 * Describes the message google.cloud.sql.v1beta4.InstancesAcquireSsrsLeaseRequest.
 * Use `create(InstancesAcquireSsrsLeaseRequestSchema)` to create a new message.
 */
export const InstancesAcquireSsrsLeaseRequestSchema: GenMessage<InstancesAcquireSsrsLeaseRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 40);

/**
 * Perform disk shrink context.
 *
 * @generated from message google.cloud.sql.v1beta4.PerformDiskShrinkContext
 */
export type PerformDiskShrinkContext = Message<"google.cloud.sql.v1beta4.PerformDiskShrinkContext"> & {
  /**
   * The target disk shrink size in GigaBytes.
   *
   * @generated from field: int64 target_size_gb = 1;
   */
  targetSizeGb: bigint;
};

/**
 * Describes the message google.cloud.sql.v1beta4.PerformDiskShrinkContext.
 * Use `create(PerformDiskShrinkContextSchema)` to create a new message.
 */
export const PerformDiskShrinkContextSchema: GenMessage<PerformDiskShrinkContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 41);

/**
 * Instance get disk shrink config response.
 *
 * @generated from message google.cloud.sql.v1beta4.SqlInstancesGetDiskShrinkConfigResponse
 */
export type SqlInstancesGetDiskShrinkConfigResponse = Message<"google.cloud.sql.v1beta4.SqlInstancesGetDiskShrinkConfigResponse"> & {
  /**
   * This is always `sql#getDiskShrinkConfig`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The minimum size to which a disk can be shrunk in GigaBytes.
   *
   * @generated from field: int64 minimal_target_size_gb = 2;
   */
  minimalTargetSizeGb: bigint;

  /**
   * Additional message to customers.
   *
   * @generated from field: string message = 3;
   */
  message: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.SqlInstancesGetDiskShrinkConfigResponse.
 * Use `create(SqlInstancesGetDiskShrinkConfigResponseSchema)` to create a new message.
 */
export const SqlInstancesGetDiskShrinkConfigResponseSchema: GenMessage<SqlInstancesGetDiskShrinkConfigResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 42);

/**
 * Instance verify external sync settings response.
 *
 * @generated from message google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse
 */
export type SqlInstancesVerifyExternalSyncSettingsResponse = Message<"google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse"> & {
  /**
   * This is always `sql#migrationSettingErrorList`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * List of migration violations.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.SqlExternalSyncSettingError errors = 2;
   */
  errors: SqlExternalSyncSettingError[];

  /**
   * List of migration warnings.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.SqlExternalSyncSettingError warnings = 3;
   */
  warnings: SqlExternalSyncSettingError[];
};

/**
 * Describes the message google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse.
 * Use `create(SqlInstancesVerifyExternalSyncSettingsResponseSchema)` to create a new message.
 */
export const SqlInstancesVerifyExternalSyncSettingsResponseSchema: GenMessage<SqlInstancesVerifyExternalSyncSettingsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 43);

/**
 * External primary instance migration setting error/warning.
 *
 * @generated from message google.cloud.sql.v1beta4.SqlExternalSyncSettingError
 */
export type SqlExternalSyncSettingError = Message<"google.cloud.sql.v1beta4.SqlExternalSyncSettingError"> & {
  /**
   * Can be `sql#externalSyncSettingError` or
   * `sql#externalSyncSettingWarning`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Identifies the specific error that occurred.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType type = 2;
   */
  type: SqlExternalSyncSettingError_SqlExternalSyncSettingErrorType;

  /**
   * Additional information about the error encountered.
   *
   * @generated from field: string detail = 3;
   */
  detail: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.SqlExternalSyncSettingError.
 * Use `create(SqlExternalSyncSettingErrorSchema)` to create a new message.
 */
export const SqlExternalSyncSettingErrorSchema: GenMessage<SqlExternalSyncSettingError> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 44);

/**
 * @generated from enum google.cloud.sql.v1beta4.SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType
 */
export enum SqlExternalSyncSettingError_SqlExternalSyncSettingErrorType {
  /**
   * @generated from enum value: SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED = 0;
   */
  SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: CONNECTION_FAILURE = 1;
   */
  CONNECTION_FAILURE = 1,

  /**
   * @generated from enum value: BINLOG_NOT_ENABLED = 2;
   */
  BINLOG_NOT_ENABLED = 2,

  /**
   * @generated from enum value: INCOMPATIBLE_DATABASE_VERSION = 3;
   */
  INCOMPATIBLE_DATABASE_VERSION = 3,

  /**
   * @generated from enum value: REPLICA_ALREADY_SETUP = 4;
   */
  REPLICA_ALREADY_SETUP = 4,

  /**
   * The replication user is missing privileges that are required.
   *
   * @generated from enum value: INSUFFICIENT_PRIVILEGE = 5;
   */
  INSUFFICIENT_PRIVILEGE = 5,

  /**
   * Unsupported migration type.
   *
   * @generated from enum value: UNSUPPORTED_MIGRATION_TYPE = 6;
   */
  UNSUPPORTED_MIGRATION_TYPE = 6,

  /**
   * No pglogical extension installed on databases, applicable for postgres.
   *
   * @generated from enum value: NO_PGLOGICAL_INSTALLED = 7;
   */
  NO_PGLOGICAL_INSTALLED = 7,

  /**
   * pglogical node already exists on databases, applicable for postgres.
   *
   * @generated from enum value: PGLOGICAL_NODE_ALREADY_EXISTS = 8;
   */
  PGLOGICAL_NODE_ALREADY_EXISTS = 8,

  /**
   * The value of parameter wal_level is not set to logical.
   *
   * @generated from enum value: INVALID_WAL_LEVEL = 9;
   */
  INVALID_WAL_LEVEL = 9,

  /**
   * The value of parameter shared_preload_libraries does not include
   * pglogical.
   *
   * @generated from enum value: INVALID_SHARED_PRELOAD_LIBRARY = 10;
   */
  INVALID_SHARED_PRELOAD_LIBRARY = 10,

  /**
   * The value of parameter max_replication_slots is not sufficient.
   *
   * @generated from enum value: INSUFFICIENT_MAX_REPLICATION_SLOTS = 11;
   */
  INSUFFICIENT_MAX_REPLICATION_SLOTS = 11,

  /**
   * The value of parameter max_wal_senders is not sufficient.
   *
   * @generated from enum value: INSUFFICIENT_MAX_WAL_SENDERS = 12;
   */
  INSUFFICIENT_MAX_WAL_SENDERS = 12,

  /**
   * The value of parameter max_worker_processes is not sufficient.
   *
   * @generated from enum value: INSUFFICIENT_MAX_WORKER_PROCESSES = 13;
   */
  INSUFFICIENT_MAX_WORKER_PROCESSES = 13,

  /**
   * Extensions installed are either not supported or having unsupported
   * versions
   *
   * @generated from enum value: UNSUPPORTED_EXTENSIONS = 14;
   */
  UNSUPPORTED_EXTENSIONS = 14,

  /**
   * The value of parameter rds.logical_replication is not set to 1.
   *
   * @generated from enum value: INVALID_RDS_LOGICAL_REPLICATION = 15;
   */
  INVALID_RDS_LOGICAL_REPLICATION = 15,

  /**
   * The primary instance logging setup doesn't allow EM sync.
   *
   * @generated from enum value: INVALID_LOGGING_SETUP = 16;
   */
  INVALID_LOGGING_SETUP = 16,

  /**
   * The primary instance database parameter setup doesn't allow EM sync.
   *
   * @generated from enum value: INVALID_DB_PARAM = 17;
   */
  INVALID_DB_PARAM = 17,

  /**
   * The gtid_mode is not supported, applicable for MySQL.
   *
   * @generated from enum value: UNSUPPORTED_GTID_MODE = 18;
   */
  UNSUPPORTED_GTID_MODE = 18,

  /**
   * SQL Server Agent is not running.
   *
   * @generated from enum value: SQLSERVER_AGENT_NOT_RUNNING = 19;
   */
  SQLSERVER_AGENT_NOT_RUNNING = 19,

  /**
   * The table definition is not support due to missing primary key or replica
   * identity, applicable for postgres.
   *
   * @generated from enum value: UNSUPPORTED_TABLE_DEFINITION = 20;
   */
  UNSUPPORTED_TABLE_DEFINITION = 20,

  /**
   * The customer has a definer that will break EM setup.
   *
   * @generated from enum value: UNSUPPORTED_DEFINER = 21;
   */
  UNSUPPORTED_DEFINER = 21,

  /**
   * SQL Server @@SERVERNAME does not match actual host name.
   *
   * @generated from enum value: SQLSERVER_SERVERNAME_MISMATCH = 22;
   */
  SQLSERVER_SERVERNAME_MISMATCH = 22,

  /**
   * The primary instance has been setup and will fail the setup.
   *
   * @generated from enum value: PRIMARY_ALREADY_SETUP = 23;
   */
  PRIMARY_ALREADY_SETUP = 23,

  /**
   * The primary instance has unsupported binary log format.
   *
   * @generated from enum value: UNSUPPORTED_BINLOG_FORMAT = 24;
   */
  UNSUPPORTED_BINLOG_FORMAT = 24,

  /**
   * The primary instance's binary log retention setting.
   *
   * @generated from enum value: BINLOG_RETENTION_SETTING = 25;
   */
  BINLOG_RETENTION_SETTING = 25,

  /**
   * The primary instance has tables with unsupported storage engine.
   *
   * @generated from enum value: UNSUPPORTED_STORAGE_ENGINE = 26;
   */
  UNSUPPORTED_STORAGE_ENGINE = 26,

  /**
   * Source has tables with limited support
   * eg: PostgreSQL tables without primary keys.
   *
   * @generated from enum value: LIMITED_SUPPORT_TABLES = 27;
   */
  LIMITED_SUPPORT_TABLES = 27,

  /**
   * The replica instance contains existing data.
   *
   * @generated from enum value: EXISTING_DATA_IN_REPLICA = 28;
   */
  EXISTING_DATA_IN_REPLICA = 28,

  /**
   * The replication user is missing privileges that are optional.
   *
   * @generated from enum value: MISSING_OPTIONAL_PRIVILEGES = 29;
   */
  MISSING_OPTIONAL_PRIVILEGES = 29,

  /**
   * Additional BACKUP_ADMIN privilege is granted to the replication user
   * which may lock source MySQL 8 instance for DDLs during initial sync.
   *
   * @generated from enum value: RISKY_BACKUP_ADMIN_PRIVILEGE = 30;
   */
  RISKY_BACKUP_ADMIN_PRIVILEGE = 30,

  /**
   * The Cloud Storage bucket is missing necessary permissions.
   *
   * @generated from enum value: INSUFFICIENT_GCS_PERMISSIONS = 31;
   */
  INSUFFICIENT_GCS_PERMISSIONS = 31,

  /**
   * The Cloud Storage bucket has an error in the file or contains invalid
   * file information.
   *
   * @generated from enum value: INVALID_FILE_INFO = 32;
   */
  INVALID_FILE_INFO = 32,

  /**
   * The source instance has unsupported database settings for migration.
   *
   * @generated from enum value: UNSUPPORTED_DATABASE_SETTINGS = 33;
   */
  UNSUPPORTED_DATABASE_SETTINGS = 33,

  /**
   * The replication user is missing parallel import specific privileges.
   * (e.g. LOCK TABLES) for MySQL.
   *
   * @generated from enum value: MYSQL_PARALLEL_IMPORT_INSUFFICIENT_PRIVILEGE = 34;
   */
  MYSQL_PARALLEL_IMPORT_INSUFFICIENT_PRIVILEGE = 34,

  /**
   * The global variable local_infile is off on external server replica.
   *
   * @generated from enum value: LOCAL_INFILE_OFF = 35;
   */
  LOCAL_INFILE_OFF = 35,

  /**
   * This code instructs customers to turn on point-in-time recovery manually
   * for the instance after promoting the Cloud SQL for PostgreSQL instance.
   *
   * @generated from enum value: TURN_ON_PITR_AFTER_PROMOTE = 36;
   */
  TURN_ON_PITR_AFTER_PROMOTE = 36,

  /**
   * The minor version of replica database is incompatible with the source.
   *
   * @generated from enum value: INCOMPATIBLE_DATABASE_MINOR_VERSION = 37;
   */
  INCOMPATIBLE_DATABASE_MINOR_VERSION = 37,

  /**
   * This warning message indicates that Cloud SQL uses the maximum number of
   * subscriptions to migrate data from the source to the destination.
   *
   * @generated from enum value: SOURCE_MAX_SUBSCRIPTIONS = 38;
   */
  SOURCE_MAX_SUBSCRIPTIONS = 38,

  /**
   * Unable to verify definers on the source for MySQL.
   *
   * @generated from enum value: UNABLE_TO_VERIFY_DEFINERS = 39;
   */
  UNABLE_TO_VERIFY_DEFINERS = 39,

  /**
   * If a time out occurs while the subscription counts are calculated, then
   * this value is set to 1. Otherwise, this value is set to 2.
   *
   * @generated from enum value: SUBSCRIPTION_CALCULATION_STATUS = 40;
   */
  SUBSCRIPTION_CALCULATION_STATUS = 40,

  /**
   * Count of subscriptions needed to sync source data for PostgreSQL
   * database.
   *
   * @generated from enum value: PG_SUBSCRIPTION_COUNT = 41;
   */
  PG_SUBSCRIPTION_COUNT = 41,

  /**
   * Final parallel level that is used to do migration.
   *
   * @generated from enum value: PG_SYNC_PARALLEL_LEVEL = 42;
   */
  PG_SYNC_PARALLEL_LEVEL = 42,

  /**
   * The disk size of the replica instance is smaller than the data size of
   * the source instance.
   *
   * @generated from enum value: INSUFFICIENT_DISK_SIZE = 43;
   */
  INSUFFICIENT_DISK_SIZE = 43,

  /**
   * The data size of the source instance is greater than 1 TB, the number of
   * cores of the replica instance is less than 8, and the memory of the
   * replica is less than 32 GB.
   *
   * @generated from enum value: INSUFFICIENT_MACHINE_TIER = 44;
   */
  INSUFFICIENT_MACHINE_TIER = 44,

  /**
   * The warning message indicates the unsupported extensions will not be
   * migrated to the destination.
   *
   * @generated from enum value: UNSUPPORTED_EXTENSIONS_NOT_MIGRATED = 45;
   */
  UNSUPPORTED_EXTENSIONS_NOT_MIGRATED = 45,

  /**
   * The warning message indicates the pg_cron extension and settings will not
   * be migrated to the destination.
   *
   * @generated from enum value: EXTENSIONS_NOT_MIGRATED = 46;
   */
  EXTENSIONS_NOT_MIGRATED = 46,

  /**
   * The error message indicates that pg_cron flags are enabled on the
   * destination which is not supported during the migration.
   *
   * @generated from enum value: PG_CRON_FLAG_ENABLED_IN_REPLICA = 47;
   */
  PG_CRON_FLAG_ENABLED_IN_REPLICA = 47,

  /**
   * This error message indicates that the specified extensions are not
   * enabled on destination instance. For example, before you can migrate
   * data to the destination instance, you must enable the PGAudit extension
   * on the instance.
   *
   * @generated from enum value: EXTENSIONS_NOT_ENABLED_IN_REPLICA = 48;
   */
  EXTENSIONS_NOT_ENABLED_IN_REPLICA = 48,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.
 */
export const SqlExternalSyncSettingError_SqlExternalSyncSettingErrorTypeSchema: GenEnum<SqlExternalSyncSettingError_SqlExternalSyncSettingErrorType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 44, 0);

/**
 * IP Management configuration.
 *
 * @generated from message google.cloud.sql.v1beta4.IpConfiguration
 */
export type IpConfiguration = Message<"google.cloud.sql.v1beta4.IpConfiguration"> & {
  /**
   * Whether the instance is assigned a public IP address or not.
   *
   * @generated from field: google.protobuf.BoolValue ipv4_enabled = 1;
   */
  ipv4Enabled?: boolean;

  /**
   * The resource link for the VPC network from which the Cloud SQL instance is
   * accessible for private IP. For example,
   * `/projects/myProject/global/networks/default`. This setting can
   * be updated, but it cannot be removed after it is set.
   *
   * @generated from field: string private_network = 2;
   */
  privateNetwork: string;

  /**
   * Use `ssl_mode` instead.
   *
   * Whether SSL/TLS connections over IP are enforced.
   * If set to false, then allow both non-SSL/non-TLS and SSL/TLS connections.
   * For SSL/TLS connections, the client certificate won't be verified. If
   * set to true, then only allow connections encrypted with SSL/TLS and with
   * valid client certificates. If you want to enforce SSL/TLS without enforcing
   * the requirement for valid client certificates, then use the `ssl_mode` flag
   * instead of the legacy `require_ssl` flag.
   *
   * @generated from field: google.protobuf.BoolValue require_ssl = 3;
   */
  requireSsl?: boolean;

  /**
   * The list of external networks that are allowed to connect to the instance
   * using the IP. In 'CIDR' notation, also known as 'slash' notation (for
   * example: `157.197.200.0/24`).
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.AclEntry authorized_networks = 4;
   */
  authorizedNetworks: AclEntry[];

  /**
   * The name of the allocated ip range for the private ip Cloud SQL instance.
   * For example: "google-managed-services-default". If set, the instance ip
   * will be created in the allocated range. The range name must comply with
   * [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name
   * must be 1-63 characters long and match the regular expression
   * `[a-z]([-a-z0-9]*[a-z0-9])?.`
   *
   * @generated from field: string allocated_ip_range = 6;
   */
  allocatedIpRange: string;

  /**
   * Controls connectivity to private IP instances from Google services,
   * such as BigQuery.
   *
   * @generated from field: google.protobuf.BoolValue enable_private_path_for_google_cloud_services = 7;
   */
  enablePrivatePathForGoogleCloudServices?: boolean;

  /**
   * Specify how SSL/TLS is enforced in database connections. If you must use
   * the `require_ssl` flag for backward compatibility, then only the following
   * value pairs are valid:
   *
   * For PostgreSQL and MySQL:
   *
   * * `ssl_mode=ALLOW_UNENCRYPTED_AND_ENCRYPTED` and `require_ssl=false`
   * * `ssl_mode=ENCRYPTED_ONLY` and `require_ssl=false`
   * * `ssl_mode=TRUSTED_CLIENT_CERTIFICATE_REQUIRED` and `require_ssl=true`
   *
   * For SQL Server:
   *
   * * `ssl_mode=ALLOW_UNENCRYPTED_AND_ENCRYPTED` and `require_ssl=false`
   * * `ssl_mode=ENCRYPTED_ONLY` and `require_ssl=true`
   *
   * The value of `ssl_mode` has priority over the value of `require_ssl`.
   *
   * For example, for the pair `ssl_mode=ENCRYPTED_ONLY` and
   * `require_ssl=false`, `ssl_mode=ENCRYPTED_ONLY` means accept only SSL
   * connections, while `require_ssl=false` means accept both non-SSL
   * and SSL connections. In this case, MySQL and PostgreSQL databases respect
   * `ssl_mode` and accepts only SSL connections.
   *
   * @generated from field: google.cloud.sql.v1beta4.IpConfiguration.SslMode ssl_mode = 8;
   */
  sslMode: IpConfiguration_SslMode;

  /**
   * PSC settings for this instance.
   *
   * @generated from field: optional google.cloud.sql.v1beta4.PscConfig psc_config = 9;
   */
  pscConfig?: PscConfig;
};

/**
 * Describes the message google.cloud.sql.v1beta4.IpConfiguration.
 * Use `create(IpConfigurationSchema)` to create a new message.
 */
export const IpConfigurationSchema: GenMessage<IpConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 45);

/**
 * The SSL options for database connections.
 *
 * @generated from enum google.cloud.sql.v1beta4.IpConfiguration.SslMode
 */
export enum IpConfiguration_SslMode {
  /**
   * The SSL mode is unknown.
   *
   * @generated from enum value: SSL_MODE_UNSPECIFIED = 0;
   */
  SSL_MODE_UNSPECIFIED = 0,

  /**
   * Allow non-SSL/non-TLS and SSL/TLS connections.
   * For SSL connections to MySQL and PostgreSQL, the client certificate
   * isn't verified.
   *
   * When this value is used, the legacy `require_ssl` flag must be false or
   * cleared to avoid a conflict between the values of the two flags.
   *
   * @generated from enum value: ALLOW_UNENCRYPTED_AND_ENCRYPTED = 1;
   */
  ALLOW_UNENCRYPTED_AND_ENCRYPTED = 1,

  /**
   * Only allow connections encrypted with SSL/TLS.
   * For SSL connections to MySQL and PostgreSQL, the client certificate
   * isn't verified.
   *
   * When this value is used, the legacy `require_ssl` flag must be false or
   * cleared to avoid a conflict between the values of the two flags.
   *
   * @generated from enum value: ENCRYPTED_ONLY = 2;
   */
  ENCRYPTED_ONLY = 2,

  /**
   * Only allow connections encrypted with SSL/TLS and with valid
   * client certificates.
   *
   * When this value is used, the legacy `require_ssl` flag must be true or
   * cleared to avoid the conflict between values of two flags.
   * PostgreSQL clients or users that connect using IAM database
   * authentication must use either the
   * [Cloud SQL Auth
   * Proxy](https://cloud.google.com/sql/docs/postgres/connect-auth-proxy) or
   * [Cloud SQL
   * Connectors](https://cloud.google.com/sql/docs/postgres/connect-connectors)
   * to enforce client identity verification.
   *
   * Only applicable to MySQL and PostgreSQL. Not applicable to SQL Server.
   *
   * @generated from enum value: TRUSTED_CLIENT_CERTIFICATE_REQUIRED = 3;
   */
  TRUSTED_CLIENT_CERTIFICATE_REQUIRED = 3,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.IpConfiguration.SslMode.
 */
export const IpConfiguration_SslModeSchema: GenEnum<IpConfiguration_SslMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 45, 0);

/**
 * PSC settings for a Cloud SQL instance.
 *
 * @generated from message google.cloud.sql.v1beta4.PscConfig
 */
export type PscConfig = Message<"google.cloud.sql.v1beta4.PscConfig"> & {
  /**
   * Whether PSC connectivity is enabled for this instance.
   *
   * @generated from field: optional bool psc_enabled = 1;
   */
  pscEnabled?: boolean;

  /**
   * Optional. The list of consumer projects that are allow-listed for PSC
   * connections to this instance. This instance can be connected to with PSC
   * from any network in these projects.
   *
   * Each consumer project in this list may be represented by a project number
   * (numeric) or by a project id (alphanumeric).
   *
   * @generated from field: repeated string allowed_consumer_projects = 2;
   */
  allowedConsumerProjects: string[];
};

/**
 * Describes the message google.cloud.sql.v1beta4.PscConfig.
 * Use `create(PscConfigSchema)` to create a new message.
 */
export const PscConfigSchema: GenMessage<PscConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 46);

/**
 * Database instance IP mapping
 *
 * @generated from message google.cloud.sql.v1beta4.IpMapping
 */
export type IpMapping = Message<"google.cloud.sql.v1beta4.IpMapping"> & {
  /**
   * The type of this IP address. A `PRIMARY` address is a public address that
   * can accept incoming connections. A `PRIVATE` address is a private address
   * that can accept incoming connections. An `OUTGOING` address is the source
   * address of connections originating from the instance, if supported.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlIpAddressType type = 1;
   */
  type: SqlIpAddressType;

  /**
   * The IP address assigned.
   *
   * @generated from field: string ip_address = 2;
   */
  ipAddress: string;

  /**
   * The due time for this IP to be retired in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`. This field is only available when
   * the IP is scheduled to be retired.
   *
   * @generated from field: google.protobuf.Timestamp time_to_retire = 3;
   */
  timeToRetire?: Timestamp;
};

/**
 * Describes the message google.cloud.sql.v1beta4.IpMapping.
 * Use `create(IpMappingSchema)` to create a new message.
 */
export const IpMappingSchema: GenMessage<IpMapping> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 47);

/**
 * Preferred location. This specifies where a Cloud SQL instance is located.
 * Note that if the preferred location is not available, the instance will be
 * located as close as possible within the region. Only one location may be
 * specified.
 *
 * @generated from message google.cloud.sql.v1beta4.LocationPreference
 */
export type LocationPreference = Message<"google.cloud.sql.v1beta4.LocationPreference"> & {
  /**
   * The App Engine application to follow, it must be in the same region as the
   * Cloud SQL instance. WARNING: Changing this might restart the instance.
   *
   * @generated from field: string follow_gae_application = 1 [deprecated = true];
   * @deprecated
   */
  followGaeApplication: string;

  /**
   * The preferred Compute Engine zone (for example: us-central1-a,
   * us-central1-b, etc.). WARNING: Changing this might restart the instance.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The preferred Compute Engine zone for the secondary/failover
   * (for example: us-central1-a, us-central1-b, etc.).
   * To disable this field, set it to 'no_secondary_zone'.
   *
   * @generated from field: string secondary_zone = 4;
   */
  secondaryZone: string;

  /**
   * This is always `sql#locationPreference`.
   *
   * @generated from field: string kind = 3;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.LocationPreference.
 * Use `create(LocationPreferenceSchema)` to create a new message.
 */
export const LocationPreferenceSchema: GenMessage<LocationPreference> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 48);

/**
 * Maintenance window. This specifies when a Cloud SQL instance
 * is restarted for system maintenance purposes.
 *
 * @generated from message google.cloud.sql.v1beta4.MaintenanceWindow
 */
export type MaintenanceWindow = Message<"google.cloud.sql.v1beta4.MaintenanceWindow"> & {
  /**
   * hour of day - 0 to 23.
   *
   * @generated from field: google.protobuf.Int32Value hour = 1;
   */
  hour?: number;

  /**
   * day of week (1-7), starting on Monday.
   *
   * @generated from field: google.protobuf.Int32Value day = 2;
   */
  day?: number;

  /**
   * Maintenance timing setting: `canary` (Earlier) or `stable` (Later).
   * [Learn
   * more](https://cloud.google.com/sql/docs/mysql/instance-settings#maintenance-timing-2ndgen).
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlUpdateTrack update_track = 3;
   */
  updateTrack: SqlUpdateTrack;

  /**
   * This is always `sql#maintenanceWindow`.
   *
   * @generated from field: string kind = 4;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.MaintenanceWindow.
 * Use `create(MaintenanceWindowSchema)` to create a new message.
 */
export const MaintenanceWindowSchema: GenMessage<MaintenanceWindow> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 49);

/**
 * Deny Maintenance Periods. This specifies a date range during when all CSA
 * rollout will be denied.
 *
 * @generated from message google.cloud.sql.v1beta4.DenyMaintenancePeriod
 */
export type DenyMaintenancePeriod = Message<"google.cloud.sql.v1beta4.DenyMaintenancePeriod"> & {
  /**
   * "deny maintenance period" start date. If the year of the start date is
   * empty, the year of the end date also must be empty. In this case, it means
   * the deny maintenance period recurs every year. The date is in format
   * yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01
   *
   * @generated from field: string start_date = 1;
   */
  startDate: string;

  /**
   * "deny maintenance period" end date. If the year of the end date is empty,
   * the year of the start date also must be empty. In this case, it means the
   * deny maintenance period recurs every year. The date is in format yyyy-mm-dd
   * i.e., 2020-11-01, or mm-dd, i.e., 11-01
   *
   * @generated from field: string end_date = 2;
   */
  endDate: string;

  /**
   * Time in UTC when the "deny maintenance period" starts on start_date and
   * ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00
   *
   * @generated from field: string time = 3;
   */
  time: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.DenyMaintenancePeriod.
 * Use `create(DenyMaintenancePeriodSchema)` to create a new message.
 */
export const DenyMaintenancePeriodSchema: GenMessage<DenyMaintenancePeriod> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 50);

/**
 * Insights configuration. This specifies when Cloud SQL Insights feature is
 * enabled and optional configuration.
 *
 * @generated from message google.cloud.sql.v1beta4.InsightsConfig
 */
export type InsightsConfig = Message<"google.cloud.sql.v1beta4.InsightsConfig"> & {
  /**
   * Whether Query Insights feature is enabled.
   *
   * @generated from field: bool query_insights_enabled = 1;
   */
  queryInsightsEnabled: boolean;

  /**
   * Whether Query Insights will record client address when enabled.
   *
   * @generated from field: bool record_client_address = 2;
   */
  recordClientAddress: boolean;

  /**
   * Whether Query Insights will record application tags from query when
   * enabled.
   *
   * @generated from field: bool record_application_tags = 3;
   */
  recordApplicationTags: boolean;

  /**
   * Maximum query length stored in bytes. Default value: 1024 bytes.
   * Range: 256-4500 bytes. Query length more than this field value will be
   * truncated to this value. When unset, query length will be the default
   * value. Changing query length will restart the database.
   *
   * @generated from field: google.protobuf.Int32Value query_string_length = 4;
   */
  queryStringLength?: number;

  /**
   * Number of query execution plans captured by Insights per minute
   * for all queries combined. Default is 5.
   *
   * @generated from field: google.protobuf.Int32Value query_plans_per_minute = 5;
   */
  queryPlansPerMinute?: number;
};

/**
 * Describes the message google.cloud.sql.v1beta4.InsightsConfig.
 * Use `create(InsightsConfigSchema)` to create a new message.
 */
export const InsightsConfigSchema: GenMessage<InsightsConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 51);

/**
 * Read-replica configuration specific to MySQL databases.
 *
 * @generated from message google.cloud.sql.v1beta4.MySqlReplicaConfiguration
 */
export type MySqlReplicaConfiguration = Message<"google.cloud.sql.v1beta4.MySqlReplicaConfiguration"> & {
  /**
   * Path to a SQL dump file in Google Cloud Storage from which the replica
   * instance is to be created. The URI is in the form gs://bucketName/fileName.
   * Compressed gzip files (.gz) are also supported.
   * Dumps have the binlog co-ordinates from which replication
   * begins. This can be accomplished by setting --master-data to 1 when using
   * mysqldump.
   *
   * @generated from field: string dump_file_path = 1;
   */
  dumpFilePath: string;

  /**
   * The username for the replication connection.
   *
   * @generated from field: string username = 2;
   */
  username: string;

  /**
   * The password for the replication connection.
   *
   * @generated from field: string password = 3;
   */
  password: string;

  /**
   * Seconds to wait between connect retries. MySQL's default is 60 seconds.
   *
   * @generated from field: google.protobuf.Int32Value connect_retry_interval = 4;
   */
  connectRetryInterval?: number;

  /**
   * Interval in milliseconds between replication heartbeats.
   *
   * @generated from field: google.protobuf.Int64Value master_heartbeat_period = 5;
   */
  masterHeartbeatPeriod?: bigint;

  /**
   * PEM representation of the trusted CA's x509 certificate.
   *
   * @generated from field: string ca_certificate = 6;
   */
  caCertificate: string;

  /**
   * PEM representation of the replica's x509 certificate.
   *
   * @generated from field: string client_certificate = 7;
   */
  clientCertificate: string;

  /**
   * PEM representation of the replica's private key. The corresponsing public
   * key is encoded in the client's certificate.
   *
   * @generated from field: string client_key = 8;
   */
  clientKey: string;

  /**
   * A list of permissible ciphers to use for SSL encryption.
   *
   * @generated from field: string ssl_cipher = 9;
   */
  sslCipher: string;

  /**
   * Whether or not to check the primary instance's Common Name value in the
   * certificate that it sends during the SSL handshake.
   *
   * @generated from field: google.protobuf.BoolValue verify_server_certificate = 10;
   */
  verifyServerCertificate?: boolean;

  /**
   * This is always `sql#mysqlReplicaConfiguration`.
   *
   * @generated from field: string kind = 11;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.MySqlReplicaConfiguration.
 * Use `create(MySqlReplicaConfigurationSchema)` to create a new message.
 */
export const MySqlReplicaConfigurationSchema: GenMessage<MySqlReplicaConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 52);

/**
 * On-premises instance configuration.
 *
 * @generated from message google.cloud.sql.v1beta4.OnPremisesConfiguration
 */
export type OnPremisesConfiguration = Message<"google.cloud.sql.v1beta4.OnPremisesConfiguration"> & {
  /**
   * The host and port of the on-premises instance in host:port format
   *
   * @generated from field: string host_port = 1;
   */
  hostPort: string;

  /**
   * This is always `sql#onPremisesConfiguration`.
   *
   * @generated from field: string kind = 2;
   */
  kind: string;

  /**
   * The username for connecting to on-premises instance.
   *
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * The password for connecting to on-premises instance.
   *
   * @generated from field: string password = 4;
   */
  password: string;

  /**
   * PEM representation of the trusted CA's x509 certificate.
   *
   * @generated from field: string ca_certificate = 5;
   */
  caCertificate: string;

  /**
   * PEM representation of the replica's x509 certificate.
   *
   * @generated from field: string client_certificate = 6;
   */
  clientCertificate: string;

  /**
   * PEM representation of the replica's private key. The corresponsing public
   * key is encoded in the client's certificate.
   *
   * @generated from field: string client_key = 7;
   */
  clientKey: string;

  /**
   * The dump file to create the Cloud SQL replica.
   *
   * @generated from field: string dump_file_path = 8;
   */
  dumpFilePath: string;

  /**
   * The reference to Cloud SQL instance if the source is Cloud SQL.
   *
   * @generated from field: google.cloud.sql.v1beta4.InstanceReference source_instance = 15;
   */
  sourceInstance?: InstanceReference;
};

/**
 * Describes the message google.cloud.sql.v1beta4.OnPremisesConfiguration.
 * Use `create(OnPremisesConfigurationSchema)` to create a new message.
 */
export const OnPremisesConfigurationSchema: GenMessage<OnPremisesConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 53);

/**
 * Disk encryption configuration for an instance.
 *
 * @generated from message google.cloud.sql.v1beta4.DiskEncryptionConfiguration
 */
export type DiskEncryptionConfiguration = Message<"google.cloud.sql.v1beta4.DiskEncryptionConfiguration"> & {
  /**
   * Resource name of KMS key for disk encryption
   *
   * @generated from field: string kms_key_name = 1;
   */
  kmsKeyName: string;

  /**
   * This is always `sql#diskEncryptionConfiguration`.
   *
   * @generated from field: string kind = 2;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.DiskEncryptionConfiguration.
 * Use `create(DiskEncryptionConfigurationSchema)` to create a new message.
 */
export const DiskEncryptionConfigurationSchema: GenMessage<DiskEncryptionConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 54);

/**
 * Disk encryption status for an instance.
 *
 * @generated from message google.cloud.sql.v1beta4.DiskEncryptionStatus
 */
export type DiskEncryptionStatus = Message<"google.cloud.sql.v1beta4.DiskEncryptionStatus"> & {
  /**
   * KMS key version used to encrypt the Cloud SQL instance resource
   *
   * @generated from field: string kms_key_version_name = 1;
   */
  kmsKeyVersionName: string;

  /**
   * This is always `sql#diskEncryptionStatus`.
   *
   * @generated from field: string kind = 2;
   */
  kind: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.DiskEncryptionStatus.
 * Use `create(DiskEncryptionStatusSchema)` to create a new message.
 */
export const DiskEncryptionStatusSchema: GenMessage<DiskEncryptionStatus> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 55);

/**
 * An Operation resource.&nbsp;For successful operations that return an
 * Operation resource, only the fields relevant to the operation are populated
 * in the resource.
 *
 * @generated from message google.cloud.sql.v1beta4.Operation
 */
export type Operation = Message<"google.cloud.sql.v1beta4.Operation"> & {
  /**
   * This is always `sql#operation`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * @generated from field: string target_link = 2;
   */
  targetLink: string;

  /**
   * The status of an operation.
   *
   * @generated from field: google.cloud.sql.v1beta4.Operation.SqlOperationStatus status = 3;
   */
  status: Operation_SqlOperationStatus;

  /**
   * The email address of the user who initiated this operation.
   *
   * @generated from field: string user = 4;
   */
  user: string;

  /**
   * The time this operation was enqueued in UTC timezone in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp insert_time = 5;
   */
  insertTime?: Timestamp;

  /**
   * The time this operation actually started in UTC timezone in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 6;
   */
  startTime?: Timestamp;

  /**
   * The time this operation finished in UTC timezone in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 7;
   */
  endTime?: Timestamp;

  /**
   * If errors occurred during processing of this operation, this field will be
   * populated.
   *
   * @generated from field: google.cloud.sql.v1beta4.OperationErrors error = 8;
   */
  error?: OperationErrors;

  /**
   * An Admin API warning message.
   *
   * @generated from field: google.cloud.sql.v1beta4.ApiWarning api_warning = 19;
   */
  apiWarning?: ApiWarning;

  /**
   * The type of the operation. Valid values are:
   * *  `CREATE`
   * *  `DELETE`
   * *  `UPDATE`
   * *  `RESTART`
   * *  `IMPORT`
   * *  `EXPORT`
   * *  `BACKUP_VOLUME`
   * *  `RESTORE_VOLUME`
   * *  `CREATE_USER`
   * *  `DELETE_USER`
   * *  `CREATE_DATABASE`
   * *  `DELETE_DATABASE`
   *
   * @generated from field: google.cloud.sql.v1beta4.Operation.SqlOperationType operation_type = 9;
   */
  operationType: Operation_SqlOperationType;

  /**
   * The context for import operation, if applicable.
   *
   * @generated from field: google.cloud.sql.v1beta4.ImportContext import_context = 10;
   */
  importContext?: ImportContext;

  /**
   * The context for export operation, if applicable.
   *
   * @generated from field: google.cloud.sql.v1beta4.ExportContext export_context = 11;
   */
  exportContext?: ExportContext;

  /**
   * The context for backup operation, if applicable.
   *
   * @generated from field: google.cloud.sql.v1beta4.BackupContext backup_context = 17;
   */
  backupContext?: BackupContext;

  /**
   * An identifier that uniquely identifies the operation. You can use this
   * identifier to retrieve the Operations resource that has information about
   * the operation.
   *
   * @generated from field: string name = 12;
   */
  name: string;

  /**
   * Name of the database instance related to this operation.
   *
   * @generated from field: string target_id = 13;
   */
  targetId: string;

  /**
   * The URI of this resource.
   *
   * @generated from field: string self_link = 14;
   */
  selfLink: string;

  /**
   * The project ID of the target instance related to this operation.
   *
   * @generated from field: string target_project = 15;
   */
  targetProject: string;

  /**
   * The context for acquire SSRS lease operation, if applicable.
   *
   * @generated from field: google.cloud.sql.v1beta4.AcquireSsrsLeaseContext acquire_ssrs_lease_context = 20;
   */
  acquireSsrsLeaseContext?: AcquireSsrsLeaseContext;
};

/**
 * Describes the message google.cloud.sql.v1beta4.Operation.
 * Use `create(OperationSchema)` to create a new message.
 */
export const OperationSchema: GenMessage<Operation> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 56);

/**
 * The type of Cloud SQL operation.
 *
 * @generated from enum google.cloud.sql.v1beta4.Operation.SqlOperationType
 */
export enum Operation_SqlOperationType {
  /**
   * Unknown operation type.
   *
   * @generated from enum value: SQL_OPERATION_TYPE_UNSPECIFIED = 0;
   */
  SQL_OPERATION_TYPE_UNSPECIFIED = 0,

  /**
   * Imports data into a Cloud SQL instance.
   *
   * @generated from enum value: IMPORT = 1;
   */
  IMPORT = 1,

  /**
   * Exports data from a Cloud SQL instance to a Cloud Storage
   * bucket.
   *
   * @generated from enum value: EXPORT = 2;
   */
  EXPORT = 2,

  /**
   * Creates a new Cloud SQL instance.
   *
   * @generated from enum value: CREATE = 3;
   */
  CREATE = 3,

  /**
   * Updates the settings of a Cloud SQL instance.
   *
   * @generated from enum value: UPDATE = 4;
   */
  UPDATE = 4,

  /**
   * Deletes a Cloud SQL instance.
   *
   * @generated from enum value: DELETE = 5;
   */
  DELETE = 5,

  /**
   * Restarts the Cloud SQL instance.
   *
   * @generated from enum value: RESTART = 6;
   */
  RESTART = 6,

  /**
   * @generated from enum value: BACKUP = 7 [deprecated = true];
   * @deprecated
   */
  BACKUP = 7,

  /**
   * @generated from enum value: SNAPSHOT = 8 [deprecated = true];
   * @deprecated
   */
  SNAPSHOT = 8,

  /**
   * Performs instance backup.
   *
   * @generated from enum value: BACKUP_VOLUME = 9;
   */
  BACKUP_VOLUME = 9,

  /**
   * Deletes an instance backup.
   *
   * @generated from enum value: DELETE_VOLUME = 10;
   */
  DELETE_VOLUME = 10,

  /**
   * Restores an instance backup.
   *
   * @generated from enum value: RESTORE_VOLUME = 11;
   */
  RESTORE_VOLUME = 11,

  /**
   * Injects a privileged user in mysql for MOB instances.
   *
   * @generated from enum value: INJECT_USER = 12;
   */
  INJECT_USER = 12,

  /**
   * Clones a Cloud SQL instance.
   *
   * @generated from enum value: CLONE = 14;
   */
  CLONE = 14,

  /**
   * Stops replication on a Cloud SQL read replica instance.
   *
   * @generated from enum value: STOP_REPLICA = 15;
   */
  STOP_REPLICA = 15,

  /**
   * Starts replication on a Cloud SQL read replica instance.
   *
   * @generated from enum value: START_REPLICA = 16;
   */
  START_REPLICA = 16,

  /**
   * Promotes a Cloud SQL replica instance.
   *
   * @generated from enum value: PROMOTE_REPLICA = 17;
   */
  PROMOTE_REPLICA = 17,

  /**
   * Creates a Cloud SQL replica instance.
   *
   * @generated from enum value: CREATE_REPLICA = 18;
   */
  CREATE_REPLICA = 18,

  /**
   * Creates a new user in a Cloud SQL instance.
   *
   * @generated from enum value: CREATE_USER = 19;
   */
  CREATE_USER = 19,

  /**
   * Deletes a user from a Cloud SQL instance.
   *
   * @generated from enum value: DELETE_USER = 20;
   */
  DELETE_USER = 20,

  /**
   * Updates an existing user in a Cloud SQL instance.
   *
   * @generated from enum value: UPDATE_USER = 21;
   */
  UPDATE_USER = 21,

  /**
   * Creates a database in the Cloud SQL instance.
   *
   * @generated from enum value: CREATE_DATABASE = 22;
   */
  CREATE_DATABASE = 22,

  /**
   * Deletes a database in the Cloud SQL instance.
   *
   * @generated from enum value: DELETE_DATABASE = 23;
   */
  DELETE_DATABASE = 23,

  /**
   * Updates a database in the Cloud SQL instance.
   *
   * @generated from enum value: UPDATE_DATABASE = 24;
   */
  UPDATE_DATABASE = 24,

  /**
   * Performs failover of an HA-enabled Cloud SQL
   * failover replica.
   *
   * @generated from enum value: FAILOVER = 25;
   */
  FAILOVER = 25,

  /**
   * Deletes the backup taken by a backup run.
   *
   * @generated from enum value: DELETE_BACKUP = 26;
   */
  DELETE_BACKUP = 26,

  /**
   * @generated from enum value: RECREATE_REPLICA = 27;
   */
  RECREATE_REPLICA = 27,

  /**
   * Truncates a general or slow log table in MySQL.
   *
   * @generated from enum value: TRUNCATE_LOG = 28;
   */
  TRUNCATE_LOG = 28,

  /**
   * Demotes the stand-alone instance to be a Cloud SQL
   * read replica for an external database server.
   *
   * @generated from enum value: DEMOTE_MASTER = 29;
   */
  DEMOTE_MASTER = 29,

  /**
   * Indicates that the instance is currently in maintenance. Maintenance
   * typically causes the instance to be unavailable for 1-3 minutes.
   *
   * @generated from enum value: MAINTENANCE = 30;
   */
  MAINTENANCE = 30,

  /**
   * This field is deprecated, and will be removed in future version of API.
   *
   * @generated from enum value: ENABLE_PRIVATE_IP = 31 [deprecated = true];
   * @deprecated
   */
  ENABLE_PRIVATE_IP = 31,

  /**
   * @generated from enum value: DEFER_MAINTENANCE = 32 [deprecated = true];
   * @deprecated
   */
  DEFER_MAINTENANCE = 32,

  /**
   * Creates clone instance.
   *
   * @generated from enum value: CREATE_CLONE = 33 [deprecated = true];
   * @deprecated
   */
  CREATE_CLONE = 33,

  /**
   * Reschedule maintenance to another time.
   *
   * @generated from enum value: RESCHEDULE_MAINTENANCE = 34;
   */
  RESCHEDULE_MAINTENANCE = 34,

  /**
   * Starts external sync of a Cloud SQL EM replica to an external primary
   * instance.
   *
   * @generated from enum value: START_EXTERNAL_SYNC = 35;
   */
  START_EXTERNAL_SYNC = 35,

  /**
   * Recovers logs from an instance's old data disk.
   *
   * @generated from enum value: LOG_CLEANUP = 36;
   */
  LOG_CLEANUP = 36,

  /**
   * Performs auto-restart of an HA-enabled Cloud SQL database for auto
   * recovery.
   *
   * @generated from enum value: AUTO_RESTART = 37;
   */
  AUTO_RESTART = 37,

  /**
   * Re-encrypts CMEK instances with latest key version.
   *
   * @generated from enum value: REENCRYPT = 38;
   */
  REENCRYPT = 38,

  /**
   * Switches the roles of the primary and replica pair. The target instance
   * should be the replica.
   *
   * @generated from enum value: SWITCHOVER = 39;
   */
  SWITCHOVER = 39,

  /**
   * Acquire a lease for the setup of SQL Server Reporting Services (SSRS).
   *
   * @generated from enum value: ACQUIRE_SSRS_LEASE = 42;
   */
  ACQUIRE_SSRS_LEASE = 42,

  /**
   * Release a lease for the setup of SQL Server Reporting Services (SSRS).
   *
   * @generated from enum value: RELEASE_SSRS_LEASE = 43;
   */
  RELEASE_SSRS_LEASE = 43,

  /**
   * Reconfigures old primary after a promote replica operation. Effect of a
   * promote operation to the old primary is executed in this operation,
   * asynchronously from the promote replica operation executed to the
   * replica.
   *
   * @generated from enum value: RECONFIGURE_OLD_PRIMARY = 44;
   */
  RECONFIGURE_OLD_PRIMARY = 44,

  /**
   * Indicates that the instance, its read replicas, and its cascading
   * replicas are in maintenance. Maintenance typically gets initiated on
   * groups of replicas first, followed by the primary instance. For each
   * instance, maintenance typically causes the instance to be unavailable for
   * 1-3 minutes.
   *
   * @generated from enum value: CLUSTER_MAINTENANCE = 45;
   */
  CLUSTER_MAINTENANCE = 45,

  /**
   * Indicates that the instance (and any of its replicas) are currently in
   * maintenance. This is initiated as a self-service request by using SSM.
   * Maintenance typically causes the instance to be unavailable for 1-3
   * minutes.
   *
   * @generated from enum value: SELF_SERVICE_MAINTENANCE = 46;
   */
  SELF_SERVICE_MAINTENANCE = 46,

  /**
   * Switches a primary instance to a replica. This operation runs as part of
   * a switchover operation to the original primary instance.
   *
   * @generated from enum value: SWITCHOVER_TO_REPLICA = 47;
   */
  SWITCHOVER_TO_REPLICA = 47,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.Operation.SqlOperationType.
 */
export const Operation_SqlOperationTypeSchema: GenEnum<Operation_SqlOperationType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 56, 0);

/**
 * The status of an operation.
 *
 * @generated from enum google.cloud.sql.v1beta4.Operation.SqlOperationStatus
 */
export enum Operation_SqlOperationStatus {
  /**
   * The state of the operation is unknown.
   *
   * @generated from enum value: SQL_OPERATION_STATUS_UNSPECIFIED = 0;
   */
  SQL_OPERATION_STATUS_UNSPECIFIED = 0,

  /**
   * The operation has been queued, but has not started yet.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The operation is running.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * The operation completed.
   *
   * @generated from enum value: DONE = 3;
   */
  DONE = 3,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.Operation.SqlOperationStatus.
 */
export const Operation_SqlOperationStatusSchema: GenEnum<Operation_SqlOperationStatus> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 56, 1);

/**
 * Database instance operation error.
 *
 * @generated from message google.cloud.sql.v1beta4.OperationError
 */
export type OperationError = Message<"google.cloud.sql.v1beta4.OperationError"> & {
  /**
   * This is always `sql#operationError`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Identifies the specific error that occurred.
   *
   * @generated from field: string code = 2;
   */
  code: string;

  /**
   * Additional information about the error encountered.
   *
   * @generated from field: string message = 3;
   */
  message: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.OperationError.
 * Use `create(OperationErrorSchema)` to create a new message.
 */
export const OperationErrorSchema: GenMessage<OperationError> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 57);

/**
 * Database instance operation errors list wrapper.
 *
 * @generated from message google.cloud.sql.v1beta4.OperationErrors
 */
export type OperationErrors = Message<"google.cloud.sql.v1beta4.OperationErrors"> & {
  /**
   * This is always `sql#operationErrors`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The list of errors encountered while processing this operation.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.OperationError errors = 2;
   */
  errors: OperationError[];
};

/**
 * Describes the message google.cloud.sql.v1beta4.OperationErrors.
 * Use `create(OperationErrorsSchema)` to create a new message.
 */
export const OperationErrorsSchema: GenMessage<OperationErrors> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 58);

/**
 * Database instance local user password validation policy
 *
 * @generated from message google.cloud.sql.v1beta4.PasswordValidationPolicy
 */
export type PasswordValidationPolicy = Message<"google.cloud.sql.v1beta4.PasswordValidationPolicy"> & {
  /**
   * Minimum number of characters allowed.
   *
   * @generated from field: google.protobuf.Int32Value min_length = 1;
   */
  minLength?: number;

  /**
   * The complexity of the password.
   *
   * @generated from field: google.cloud.sql.v1beta4.PasswordValidationPolicy.Complexity complexity = 2;
   */
  complexity: PasswordValidationPolicy_Complexity;

  /**
   * Number of previous passwords that cannot be reused.
   *
   * @generated from field: google.protobuf.Int32Value reuse_interval = 3;
   */
  reuseInterval?: number;

  /**
   * Disallow username as a part of the password.
   *
   * @generated from field: google.protobuf.BoolValue disallow_username_substring = 4;
   */
  disallowUsernameSubstring?: boolean;

  /**
   * Minimum interval after which the password can be changed. This flag is only
   * supported for PostgreSQL.
   *
   * @generated from field: google.protobuf.Duration password_change_interval = 5;
   */
  passwordChangeInterval?: Duration;

  /**
   * Whether the password policy is enabled or not.
   *
   * @generated from field: google.protobuf.BoolValue enable_password_policy = 6;
   */
  enablePasswordPolicy?: boolean;

  /**
   * This field is deprecated and will be removed in a future version of the
   * API.
   *
   * @generated from field: google.protobuf.BoolValue disallow_compromised_credentials = 7 [deprecated = true];
   * @deprecated
   */
  disallowCompromisedCredentials?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1beta4.PasswordValidationPolicy.
 * Use `create(PasswordValidationPolicySchema)` to create a new message.
 */
export const PasswordValidationPolicySchema: GenMessage<PasswordValidationPolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 59);

/**
 * The complexity choices of the password.
 *
 * @generated from enum google.cloud.sql.v1beta4.PasswordValidationPolicy.Complexity
 */
export enum PasswordValidationPolicy_Complexity {
  /**
   * Complexity check is not specified.
   *
   * @generated from enum value: COMPLEXITY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * A combination of lowercase, uppercase, numeric, and non-alphanumeric
   * characters.
   *
   * @generated from enum value: COMPLEXITY_DEFAULT = 1;
   */
  DEFAULT = 1,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.PasswordValidationPolicy.Complexity.
 */
export const PasswordValidationPolicy_ComplexitySchema: GenEnum<PasswordValidationPolicy_Complexity> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 59, 0);

/**
 * Operations list response.
 *
 * @generated from message google.cloud.sql.v1beta4.OperationsListResponse
 */
export type OperationsListResponse = Message<"google.cloud.sql.v1beta4.OperationsListResponse"> & {
  /**
   * This is always `sql#operationsList`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * List of operation resources.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.Operation items = 2;
   */
  items: Operation[];

  /**
   * The continuation token, used to page through large result sets. Provide
   * this value in a subsequent request to return the next page of results.
   *
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.OperationsListResponse.
 * Use `create(OperationsListResponseSchema)` to create a new message.
 */
export const OperationsListResponseSchema: GenMessage<OperationsListResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 60);

/**
 * Read-replica configuration for connecting to the primary instance.
 *
 * @generated from message google.cloud.sql.v1beta4.ReplicaConfiguration
 */
export type ReplicaConfiguration = Message<"google.cloud.sql.v1beta4.ReplicaConfiguration"> & {
  /**
   * This is always `sql#replicaConfiguration`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * MySQL specific configuration when replicating from a MySQL on-premises
   * primary instance. Replication configuration information such as the
   * username, password, certificates, and keys are not stored in the instance
   * metadata. The configuration information is used only to set up the
   * replication connection and is stored by MySQL in a file named
   * `master.info` in the data directory.
   *
   * @generated from field: google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;
   */
  mysqlReplicaConfiguration?: MySqlReplicaConfiguration;

  /**
   * Specifies if the replica is the failover target. If the field is set to
   * `true` the replica will be designated as a failover replica. In case the
   * primary instance fails, the replica instance will be promoted as the new
   * primary instance. Only one replica can be specified as failover target, and
   * the replica has to be in different zone with the primary instance.
   *
   * @generated from field: google.protobuf.BoolValue failover_target = 3;
   */
  failoverTarget?: boolean;

  /**
   * Optional. Specifies if a SQL Server replica is a cascadable replica. A
   * cascadable replica is a SQL Server cross region replica that supports
   * replica(s) under it.
   *
   * @generated from field: google.protobuf.BoolValue cascadable_replica = 5;
   */
  cascadableReplica?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1beta4.ReplicaConfiguration.
 * Use `create(ReplicaConfigurationSchema)` to create a new message.
 */
export const ReplicaConfigurationSchema: GenMessage<ReplicaConfiguration> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 61);

/**
 * Database instance restore from backup context.
 * Backup context contains source instance id and project id.
 *
 * @generated from message google.cloud.sql.v1beta4.RestoreBackupContext
 */
export type RestoreBackupContext = Message<"google.cloud.sql.v1beta4.RestoreBackupContext"> & {
  /**
   * This is always `sql#restoreBackupContext`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The ID of the backup run to restore from.
   *
   * @generated from field: int64 backup_run_id = 2;
   */
  backupRunId: bigint;

  /**
   * The ID of the instance that the backup was taken from.
   *
   * @generated from field: string instance_id = 3;
   */
  instanceId: string;

  /**
   * The full project ID of the source instance.
   *
   * @generated from field: string project = 4;
   */
  project: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.RestoreBackupContext.
 * Use `create(RestoreBackupContextSchema)` to create a new message.
 */
export const RestoreBackupContextSchema: GenMessage<RestoreBackupContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 62);

/**
 * Instance rotate server CA context.
 *
 * @generated from message google.cloud.sql.v1beta4.RotateServerCaContext
 */
export type RotateServerCaContext = Message<"google.cloud.sql.v1beta4.RotateServerCaContext"> & {
  /**
   * This is always `sql#rotateServerCaContext`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The fingerprint of the next version to be rotated to. If left unspecified,
   * will be rotated to the most recently added server CA version.
   *
   * @generated from field: string next_version = 2;
   */
  nextVersion: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.RotateServerCaContext.
 * Use `create(RotateServerCaContextSchema)` to create a new message.
 */
export const RotateServerCaContextSchema: GenMessage<RotateServerCaContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 63);

/**
 * Data cache configurations.
 *
 * @generated from message google.cloud.sql.v1beta4.DataCacheConfig
 */
export type DataCacheConfig = Message<"google.cloud.sql.v1beta4.DataCacheConfig"> & {
  /**
   * Whether data cache is enabled for the instance.
   *
   * @generated from field: bool data_cache_enabled = 1;
   */
  dataCacheEnabled: boolean;
};

/**
 * Describes the message google.cloud.sql.v1beta4.DataCacheConfig.
 * Use `create(DataCacheConfigSchema)` to create a new message.
 */
export const DataCacheConfigSchema: GenMessage<DataCacheConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 64);

/**
 * Database instance settings.
 *
 * @generated from message google.cloud.sql.v1beta4.Settings
 */
export type Settings = Message<"google.cloud.sql.v1beta4.Settings"> & {
  /**
   * The version of instance settings. This is a required field for update
   * method to make sure concurrent updates are handled properly. During update,
   * use the most recent settingsVersion value for this instance and do not try
   * to update this value.
   *
   * @generated from field: google.protobuf.Int64Value settings_version = 1;
   */
  settingsVersion?: bigint;

  /**
   * The App Engine app IDs that can access this instance.
   * (Deprecated) Applied to First Generation instances only.
   *
   * @generated from field: repeated string authorized_gae_applications = 2 [deprecated = true];
   * @deprecated
   */
  authorizedGaeApplications: string[];

  /**
   * The tier (or machine type) for this instance, for example
   * `db-custom-1-3840`. WARNING: Changing this restarts the instance.
   *
   * @generated from field: string tier = 3;
   */
  tier: string;

  /**
   * This is always `sql#settings`.
   *
   * @generated from field: string kind = 4;
   */
  kind: string;

  /**
   * User-provided labels, represented as a dictionary where each label is a
   * single key value pair.
   *
   * @generated from field: map<string, string> user_labels = 5;
   */
  userLabels: { [key: string]: string };

  /**
   * Availability type. Potential values:
   * *  `ZONAL`: The instance serves data from only one zone. Outages in that
   * zone affect data accessibility.
   * *  `REGIONAL`: The instance can serve data from more than one zone in a
   * region (it is highly available)./
   *
   * For more information, see [Overview of the High Availability
   * Configuration](https://cloud.google.com/sql/docs/mysql/high-availability).
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlAvailabilityType availability_type = 6;
   */
  availabilityType: SqlAvailabilityType;

  /**
   * The pricing plan for this instance. This can be either `PER_USE` or
   * `PACKAGE`. Only `PER_USE` is supported for Second Generation instances.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlPricingPlan pricing_plan = 7;
   */
  pricingPlan: SqlPricingPlan;

  /**
   * The type of replication this instance uses. This can be either
   * `ASYNCHRONOUS` or `SYNCHRONOUS`. (Deprecated) This property was only
   * applicable to First Generation instances.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlReplicationType replication_type = 8 [deprecated = true];
   * @deprecated
   */
  replicationType: SqlReplicationType;

  /**
   * The maximum size to which storage capacity can be automatically increased.
   * The default value is 0, which specifies that there is no limit.
   *
   * @generated from field: google.protobuf.Int64Value storage_auto_resize_limit = 9;
   */
  storageAutoResizeLimit?: bigint;

  /**
   * The activation policy specifies when the instance is activated; it is
   * applicable only when the instance state is RUNNABLE. Valid values:
   * *  `ALWAYS`: The instance is on, and remains so even in the absence of
   * connection requests.
   * *  `NEVER`: The instance is off; it is not activated, even if a
   * connection request arrives.
   *
   * @generated from field: google.cloud.sql.v1beta4.Settings.SqlActivationPolicy activation_policy = 10;
   */
  activationPolicy: Settings_SqlActivationPolicy;

  /**
   * The settings for IP Management. This allows to enable or disable the
   * instance IP and manage which external networks can connect to the instance.
   * The IPv4 address cannot be disabled for Second Generation instances.
   *
   * @generated from field: google.cloud.sql.v1beta4.IpConfiguration ip_configuration = 11;
   */
  ipConfiguration?: IpConfiguration;

  /**
   * Configuration to increase storage size automatically. The default value is
   * true.
   *
   * @generated from field: google.protobuf.BoolValue storage_auto_resize = 12;
   */
  storageAutoResize?: boolean;

  /**
   * The location preference settings. This allows the instance to be located as
   * near as possible to either an App Engine app or Compute Engine zone for
   * better performance. App Engine co-location was only applicable to First
   * Generation instances.
   *
   * @generated from field: google.cloud.sql.v1beta4.LocationPreference location_preference = 13;
   */
  locationPreference?: LocationPreference;

  /**
   * The database flags passed to the instance at startup.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.DatabaseFlags database_flags = 14;
   */
  databaseFlags: DatabaseFlags[];

  /**
   * The type of data disk: `PD_SSD` (default) or `PD_HDD`. Not used for
   * First Generation instances.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlDataDiskType data_disk_type = 15;
   */
  dataDiskType: SqlDataDiskType;

  /**
   * The maintenance window for this instance. This specifies when the instance
   * can be restarted for maintenance purposes.
   *
   * @generated from field: google.cloud.sql.v1beta4.MaintenanceWindow maintenance_window = 16;
   */
  maintenanceWindow?: MaintenanceWindow;

  /**
   * The daily backup configuration for the instance.
   *
   * @generated from field: google.cloud.sql.v1beta4.BackupConfiguration backup_configuration = 17;
   */
  backupConfiguration?: BackupConfiguration;

  /**
   * Configuration specific to read replica instances. Indicates whether
   * replication is enabled or not. WARNING: Changing this restarts the
   * instance.
   *
   * @generated from field: google.protobuf.BoolValue database_replication_enabled = 18;
   */
  databaseReplicationEnabled?: boolean;

  /**
   * Configuration specific to read replica instances. Indicates whether
   * database flags for crash-safe replication are enabled. This property was
   * only applicable to First Generation instances.
   *
   * @generated from field: google.protobuf.BoolValue crash_safe_replication_enabled = 19 [deprecated = true];
   * @deprecated
   */
  crashSafeReplicationEnabled?: boolean;

  /**
   * The size of data disk, in GB. The data disk size minimum is 10GB.
   *
   * @generated from field: google.protobuf.Int64Value data_disk_size_gb = 20;
   */
  dataDiskSizeGb?: bigint;

  /**
   * Active Directory configuration, relevant only for Cloud SQL for SQL Server.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlActiveDirectoryConfig active_directory_config = 22;
   */
  activeDirectoryConfig?: SqlActiveDirectoryConfig;

  /**
   * The name of server Instance collation.
   *
   * @generated from field: string collation = 23;
   */
  collation: string;

  /**
   * Deny maintenance periods
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.DenyMaintenancePeriod deny_maintenance_periods = 24;
   */
  denyMaintenancePeriods: DenyMaintenancePeriod[];

  /**
   * Insights configuration, for now relevant only for Postgres.
   *
   * @generated from field: google.cloud.sql.v1beta4.InsightsConfig insights_config = 25;
   */
  insightsConfig?: InsightsConfig;

  /**
   * The local user password validation policy of the instance.
   *
   * @generated from field: google.cloud.sql.v1beta4.PasswordValidationPolicy password_validation_policy = 27;
   */
  passwordValidationPolicy?: PasswordValidationPolicy;

  /**
   * SQL Server specific audit configuration.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlServerAuditConfig sql_server_audit_config = 29;
   */
  sqlServerAuditConfig?: SqlServerAuditConfig;

  /**
   * Optional. The edition of the instance.
   *
   * @generated from field: google.cloud.sql.v1beta4.Settings.Edition edition = 38;
   */
  edition: Settings_Edition;

  /**
   * Specifies if connections must use Cloud SQL connectors.
   * Option values include the following: `NOT_REQUIRED` (Cloud SQL instances
   * can be connected without Cloud SQL
   * Connectors) and `REQUIRED` (Only allow connections that use Cloud SQL
   * Connectors)
   *
   * Note that using REQUIRED disables all existing authorized networks. If
   * this field is not specified when creating a new instance, NOT_REQUIRED is
   * used. If this field is not specified when patching or updating an existing
   * instance, it is left unchanged in the instance.
   *
   * @generated from field: google.cloud.sql.v1beta4.Settings.ConnectorEnforcement connector_enforcement = 32;
   */
  connectorEnforcement: Settings_ConnectorEnforcement;

  /**
   * Configuration to protect against accidental instance deletion.
   *
   * @generated from field: google.protobuf.BoolValue deletion_protection_enabled = 33;
   */
  deletionProtectionEnabled?: boolean;

  /**
   * Server timezone, relevant only for Cloud SQL for SQL Server.
   *
   * @generated from field: string time_zone = 34;
   */
  timeZone: string;

  /**
   * Specifies advanced machine configuration for the instances relevant only
   * for SQL Server.
   *
   * @generated from field: google.cloud.sql.v1beta4.AdvancedMachineFeatures advanced_machine_features = 35;
   */
  advancedMachineFeatures?: AdvancedMachineFeatures;

  /**
   * Configuration for data cache.
   *
   * @generated from field: google.cloud.sql.v1beta4.DataCacheConfig data_cache_config = 37;
   */
  dataCacheConfig?: DataCacheConfig;

  /**
   * Optional. When this parameter is set to true, Cloud SQL instances can
   * connect to Vertex AI to pass requests for real-time predictions and
   * insights to the AI. The default value is false. This applies only to Cloud
   * SQL for PostgreSQL instances.
   *
   * @generated from field: google.protobuf.BoolValue enable_google_ml_integration = 40;
   */
  enableGoogleMlIntegration?: boolean;

  /**
   * Optional. By default, Cloud SQL instances have schema extraction disabled
   * for Dataplex. When this parameter is set to true, schema extraction for
   * Dataplex on Cloud SQL instances is activated.
   *
   * @generated from field: google.protobuf.BoolValue enable_dataplex_integration = 41;
   */
  enableDataplexIntegration?: boolean;
};

/**
 * Describes the message google.cloud.sql.v1beta4.Settings.
 * Use `create(SettingsSchema)` to create a new message.
 */
export const SettingsSchema: GenMessage<Settings> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 65);

/**
 * Specifies when the instance is activated.
 *
 * @generated from enum google.cloud.sql.v1beta4.Settings.SqlActivationPolicy
 */
export enum Settings_SqlActivationPolicy {
  /**
   * Unknown activation plan.
   *
   * @generated from enum value: SQL_ACTIVATION_POLICY_UNSPECIFIED = 0;
   */
  SQL_ACTIVATION_POLICY_UNSPECIFIED = 0,

  /**
   * The instance is always up and running.
   *
   * @generated from enum value: ALWAYS = 1;
   */
  ALWAYS = 1,

  /**
   * The instance never starts.
   *
   * @generated from enum value: NEVER = 2;
   */
  NEVER = 2,

  /**
   * The instance starts upon receiving requests.
   *
   * @generated from enum value: ON_DEMAND = 3 [deprecated = true];
   * @deprecated
   */
  ON_DEMAND = 3,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.Settings.SqlActivationPolicy.
 */
export const Settings_SqlActivationPolicySchema: GenEnum<Settings_SqlActivationPolicy> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 65, 0);

/**
 * The edition of the instance, can be ENTERPRISE or ENTERPRISE_PLUS.
 *
 * @generated from enum google.cloud.sql.v1beta4.Settings.Edition
 */
export enum Settings_Edition {
  /**
   * The instance did not specify the edition.
   *
   * @generated from enum value: EDITION_UNSPECIFIED = 0;
   */
  EDITION_UNSPECIFIED = 0,

  /**
   * The instance is an enterprise edition.
   *
   * @generated from enum value: ENTERPRISE = 2;
   */
  ENTERPRISE = 2,

  /**
   * The instance is an Enterprise Plus edition.
   *
   * @generated from enum value: ENTERPRISE_PLUS = 3;
   */
  ENTERPRISE_PLUS = 3,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.Settings.Edition.
 */
export const Settings_EditionSchema: GenEnum<Settings_Edition> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 65, 1);

/**
 * The options for enforcing Cloud SQL connectors in the instance.
 *
 * @generated from enum google.cloud.sql.v1beta4.Settings.ConnectorEnforcement
 */
export enum Settings_ConnectorEnforcement {
  /**
   * The requirement for Cloud SQL connectors is unknown.
   *
   * @generated from enum value: CONNECTOR_ENFORCEMENT_UNSPECIFIED = 0;
   */
  CONNECTOR_ENFORCEMENT_UNSPECIFIED = 0,

  /**
   * Do not require Cloud SQL connectors.
   *
   * @generated from enum value: NOT_REQUIRED = 1;
   */
  NOT_REQUIRED = 1,

  /**
   * Require all connections to use Cloud SQL connectors, including the
   * Cloud SQL Auth Proxy and Cloud SQL Java, Python, and Go connectors.
   * Note: This disables all existing authorized networks.
   *
   * @generated from enum value: REQUIRED = 2;
   */
  REQUIRED = 2,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.Settings.ConnectorEnforcement.
 */
export const Settings_ConnectorEnforcementSchema: GenEnum<Settings_ConnectorEnforcement> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 65, 2);

/**
 * Specifies options for controlling advanced machine features.
 *
 * @generated from message google.cloud.sql.v1beta4.AdvancedMachineFeatures
 */
export type AdvancedMachineFeatures = Message<"google.cloud.sql.v1beta4.AdvancedMachineFeatures"> & {
  /**
   * The number of threads per physical core.
   *
   * @generated from field: int32 threads_per_core = 1;
   */
  threadsPerCore: number;
};

/**
 * Describes the message google.cloud.sql.v1beta4.AdvancedMachineFeatures.
 * Use `create(AdvancedMachineFeaturesSchema)` to create a new message.
 */
export const AdvancedMachineFeaturesSchema: GenMessage<AdvancedMachineFeatures> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 66);

/**
 * SslCerts Resource
 *
 * @generated from message google.cloud.sql.v1beta4.SslCert
 */
export type SslCert = Message<"google.cloud.sql.v1beta4.SslCert"> & {
  /**
   * This is always `sql#sslCert`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * Serial number, as extracted from the certificate.
   *
   * @generated from field: string cert_serial_number = 2;
   */
  certSerialNumber: string;

  /**
   * PEM representation.
   *
   * @generated from field: string cert = 3;
   */
  cert: string;

  /**
   * The time when the certificate was created in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * User supplied name.  Constrained to [a-zA-Z.-_ ]+.
   *
   * @generated from field: string common_name = 5;
   */
  commonName: string;

  /**
   * The time when the certificate expires in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp expiration_time = 6;
   */
  expirationTime?: Timestamp;

  /**
   * Sha1 Fingerprint.
   *
   * @generated from field: string sha1_fingerprint = 7;
   */
  sha1Fingerprint: string;

  /**
   * Name of the database instance.
   *
   * @generated from field: string instance = 8;
   */
  instance: string;

  /**
   * The URI of this resource.
   *
   * @generated from field: string self_link = 9;
   */
  selfLink: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.SslCert.
 * Use `create(SslCertSchema)` to create a new message.
 */
export const SslCertSchema: GenMessage<SslCert> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 67);

/**
 * SslCertDetail.
 *
 * @generated from message google.cloud.sql.v1beta4.SslCertDetail
 */
export type SslCertDetail = Message<"google.cloud.sql.v1beta4.SslCertDetail"> & {
  /**
   * The public information about the cert.
   *
   * @generated from field: google.cloud.sql.v1beta4.SslCert cert_info = 1;
   */
  certInfo?: SslCert;

  /**
   * The private key for the client cert, in pem format.  Keep private in order
   * to protect your security.
   *
   * @generated from field: string cert_private_key = 2;
   */
  certPrivateKey: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.SslCertDetail.
 * Use `create(SslCertDetailSchema)` to create a new message.
 */
export const SslCertDetailSchema: GenMessage<SslCertDetail> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 68);

/**
 * SslCerts create ephemeral certificate request.
 *
 * @generated from message google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest
 */
export type SslCertsCreateEphemeralRequest = Message<"google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest"> & {
  /**
   * PEM encoded public key to include in the signed certificate.
   *
   * @generated from field: string public_key = 1;
   */
  publicKey: string;

  /**
   * Access token to include in the signed certificate.
   *
   * @generated from field: string access_token = 2;
   */
  accessToken: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest.
 * Use `create(SslCertsCreateEphemeralRequestSchema)` to create a new message.
 */
export const SslCertsCreateEphemeralRequestSchema: GenMessage<SslCertsCreateEphemeralRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 69);

/**
 * SslCerts insert request.
 *
 * @generated from message google.cloud.sql.v1beta4.SslCertsInsertRequest
 */
export type SslCertsInsertRequest = Message<"google.cloud.sql.v1beta4.SslCertsInsertRequest"> & {
  /**
   * User supplied name.  Must be a distinct name from the other certificates
   * for this instance.
   *
   * @generated from field: string common_name = 1;
   */
  commonName: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.SslCertsInsertRequest.
 * Use `create(SslCertsInsertRequestSchema)` to create a new message.
 */
export const SslCertsInsertRequestSchema: GenMessage<SslCertsInsertRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 70);

/**
 * Reschedule options for maintenance windows.
 *
 * @generated from message google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody
 */
export type SqlInstancesRescheduleMaintenanceRequestBody = Message<"google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody"> & {
  /**
   * Required. The type of the reschedule the user wants.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule reschedule = 3;
   */
  reschedule?: SqlInstancesRescheduleMaintenanceRequestBody_Reschedule;
};

/**
 * Describes the message google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.
 * Use `create(SqlInstancesRescheduleMaintenanceRequestBodySchema)` to create a new message.
 */
export const SqlInstancesRescheduleMaintenanceRequestBodySchema: GenMessage<SqlInstancesRescheduleMaintenanceRequestBody> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 71);

/**
 * @generated from message google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule
 */
export type SqlInstancesRescheduleMaintenanceRequestBody_Reschedule = Message<"google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule"> & {
  /**
   * Required. The type of the reschedule.
   *
   * @generated from field: google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType reschedule_type = 1;
   */
  rescheduleType: SqlInstancesRescheduleMaintenanceRequestBody_RescheduleType;

  /**
   * Optional. Timestamp when the maintenance shall be rescheduled to if
   * reschedule_type=SPECIFIC_TIME, in
   * [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
   * `2012-11-15T16:19:00.094Z`.
   *
   * @generated from field: google.protobuf.Timestamp schedule_time = 2;
   */
  scheduleTime?: Timestamp;
};

/**
 * Describes the message google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule.
 * Use `create(SqlInstancesRescheduleMaintenanceRequestBody_RescheduleSchema)` to create a new message.
 */
export const SqlInstancesRescheduleMaintenanceRequestBody_RescheduleSchema: GenMessage<SqlInstancesRescheduleMaintenanceRequestBody_Reschedule> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 71, 0);

/**
 * @generated from enum google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType
 */
export enum SqlInstancesRescheduleMaintenanceRequestBody_RescheduleType {
  /**
   * @generated from enum value: RESCHEDULE_TYPE_UNSPECIFIED = 0;
   */
  RESCHEDULE_TYPE_UNSPECIFIED = 0,

  /**
   * Reschedules maintenance to happen now (within 5 minutes).
   *
   * @generated from enum value: IMMEDIATE = 1;
   */
  IMMEDIATE = 1,

  /**
   * Reschedules maintenance to occur within one week from the originally
   * scheduled day and time.
   *
   * @generated from enum value: NEXT_AVAILABLE_WINDOW = 2;
   */
  NEXT_AVAILABLE_WINDOW = 2,

  /**
   * Reschedules maintenance to a specific time and day.
   *
   * @generated from enum value: SPECIFIC_TIME = 3;
   */
  SPECIFIC_TIME = 3,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType.
 */
export const SqlInstancesRescheduleMaintenanceRequestBody_RescheduleTypeSchema: GenEnum<SqlInstancesRescheduleMaintenanceRequestBody_RescheduleType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 71, 0);

/**
 * SslCert insert response.
 *
 * @generated from message google.cloud.sql.v1beta4.SslCertsInsertResponse
 */
export type SslCertsInsertResponse = Message<"google.cloud.sql.v1beta4.SslCertsInsertResponse"> & {
  /**
   * This is always `sql#sslCertsInsert`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The operation to track the ssl certs insert request.
   *
   * @generated from field: google.cloud.sql.v1beta4.Operation operation = 2;
   */
  operation?: Operation;

  /**
   * The server Certificate Authority's certificate.  If this is missing you can
   * force a new one to be generated by calling resetSslConfig method on
   * instances resource.
   *
   * @generated from field: google.cloud.sql.v1beta4.SslCert server_ca_cert = 3;
   */
  serverCaCert?: SslCert;

  /**
   * The new client certificate and private key.
   *
   * @generated from field: google.cloud.sql.v1beta4.SslCertDetail client_cert = 4;
   */
  clientCert?: SslCertDetail;
};

/**
 * Describes the message google.cloud.sql.v1beta4.SslCertsInsertResponse.
 * Use `create(SslCertsInsertResponseSchema)` to create a new message.
 */
export const SslCertsInsertResponseSchema: GenMessage<SslCertsInsertResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 72);

/**
 * SslCerts list response.
 *
 * @generated from message google.cloud.sql.v1beta4.SslCertsListResponse
 */
export type SslCertsListResponse = Message<"google.cloud.sql.v1beta4.SslCertsListResponse"> & {
  /**
   * This is always `sql#sslCertsList`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * List of client certificates for the instance.
   *
   * @generated from field: repeated google.cloud.sql.v1beta4.SslCert items = 2;
   */
  items: SslCert[];
};

/**
 * Describes the message google.cloud.sql.v1beta4.SslCertsListResponse.
 * Use `create(SslCertsListResponseSchema)` to create a new message.
 */
export const SslCertsListResponseSchema: GenMessage<SslCertsListResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 73);

/**
 * Database Instance truncate log context.
 *
 * @generated from message google.cloud.sql.v1beta4.TruncateLogContext
 */
export type TruncateLogContext = Message<"google.cloud.sql.v1beta4.TruncateLogContext"> & {
  /**
   * This is always `sql#truncateLogContext`.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The type of log to truncate. Valid values are `MYSQL_GENERAL_TABLE` and
   * `MYSQL_SLOW_TABLE`.
   *
   * @generated from field: string log_type = 2;
   */
  logType: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.TruncateLogContext.
 * Use `create(TruncateLogContextSchema)` to create a new message.
 */
export const TruncateLogContextSchema: GenMessage<TruncateLogContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 74);

/**
 * Active Directory configuration, relevant only for Cloud SQL for SQL Server.
 *
 * @generated from message google.cloud.sql.v1beta4.SqlActiveDirectoryConfig
 */
export type SqlActiveDirectoryConfig = Message<"google.cloud.sql.v1beta4.SqlActiveDirectoryConfig"> & {
  /**
   * This is always sql#activeDirectoryConfig.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The name of the domain (e.g., mydomain.com).
   *
   * @generated from field: string domain = 2;
   */
  domain: string;
};

/**
 * Describes the message google.cloud.sql.v1beta4.SqlActiveDirectoryConfig.
 * Use `create(SqlActiveDirectoryConfigSchema)` to create a new message.
 */
export const SqlActiveDirectoryConfigSchema: GenMessage<SqlActiveDirectoryConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 75);

/**
 * SQL Server specific audit configuration.
 *
 * @generated from message google.cloud.sql.v1beta4.SqlServerAuditConfig
 */
export type SqlServerAuditConfig = Message<"google.cloud.sql.v1beta4.SqlServerAuditConfig"> & {
  /**
   * This is always sql#sqlServerAuditConfig
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The name of the destination bucket (e.g., gs://mybucket).
   *
   * @generated from field: string bucket = 2;
   */
  bucket: string;

  /**
   * How long to keep generated audit files.
   *
   * @generated from field: google.protobuf.Duration retention_interval = 3;
   */
  retentionInterval?: Duration;

  /**
   * How often to upload generated audit files.
   *
   * @generated from field: google.protobuf.Duration upload_interval = 4;
   */
  uploadInterval?: Duration;
};

/**
 * Describes the message google.cloud.sql.v1beta4.SqlServerAuditConfig.
 * Use `create(SqlServerAuditConfigSchema)` to create a new message.
 */
export const SqlServerAuditConfigSchema: GenMessage<SqlServerAuditConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 76);

/**
 * Acquire SSRS lease context.
 *
 * @generated from message google.cloud.sql.v1beta4.AcquireSsrsLeaseContext
 */
export type AcquireSsrsLeaseContext = Message<"google.cloud.sql.v1beta4.AcquireSsrsLeaseContext"> & {
  /**
   * The username to be used as the setup login to connect to the database
   * server for SSRS setup.
   *
   * @generated from field: optional string setup_login = 1;
   */
  setupLogin?: string;

  /**
   * The username to be used as the service login to connect to the report
   * database for SSRS setup.
   *
   * @generated from field: optional string service_login = 2;
   */
  serviceLogin?: string;

  /**
   * The report database to be used for the SSRS setup.
   *
   * @generated from field: optional string report_database = 3;
   */
  reportDatabase?: string;

  /**
   * Lease duration needed for the SSRS setup.
   *
   * @generated from field: optional google.protobuf.Duration duration = 4;
   */
  duration?: Duration;
};

/**
 * Describes the message google.cloud.sql.v1beta4.AcquireSsrsLeaseContext.
 * Use `create(AcquireSsrsLeaseContextSchema)` to create a new message.
 */
export const AcquireSsrsLeaseContextSchema: GenMessage<AcquireSsrsLeaseContext> = /*@__PURE__*/
  messageDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 77);

/**
 * @generated from enum google.cloud.sql.v1beta4.SqlFileType
 */
export enum SqlFileType {
  /**
   * Unknown file type.
   *
   * @generated from enum value: SQL_FILE_TYPE_UNSPECIFIED = 0;
   */
  SQL_FILE_TYPE_UNSPECIFIED = 0,

  /**
   * File containing SQL statements.
   *
   * @generated from enum value: SQL = 1;
   */
  SQL = 1,

  /**
   * File in CSV format.
   *
   * @generated from enum value: CSV = 2;
   */
  CSV = 2,

  /**
   * @generated from enum value: BAK = 4;
   */
  BAK = 4,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlFileType.
 */
export const SqlFileTypeSchema: GenEnum<SqlFileType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 0);

/**
 * @generated from enum google.cloud.sql.v1beta4.BakType
 */
export enum BakType {
  /**
   * Default type.
   *
   * @generated from enum value: BAK_TYPE_UNSPECIFIED = 0;
   */
  BAK_TYPE_UNSPECIFIED = 0,

  /**
   * Full backup.
   *
   * @generated from enum value: FULL = 1;
   */
  FULL = 1,

  /**
   * Differential backup.
   *
   * @generated from enum value: DIFF = 2;
   */
  DIFF = 2,

  /**
   * SQL Server Transaction Log
   *
   * @generated from enum value: TLOG = 3;
   */
  TLOG = 3,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.BakType.
 */
export const BakTypeSchema: GenEnum<BakType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 1);

/**
 * The status of a backup run.
 *
 * @generated from enum google.cloud.sql.v1beta4.SqlBackupRunStatus
 */
export enum SqlBackupRunStatus {
  /**
   * The status of the run is unknown.
   *
   * @generated from enum value: SQL_BACKUP_RUN_STATUS_UNSPECIFIED = 0;
   */
  SQL_BACKUP_RUN_STATUS_UNSPECIFIED = 0,

  /**
   * The backup operation was enqueued.
   *
   * @generated from enum value: ENQUEUED = 1;
   */
  ENQUEUED = 1,

  /**
   * The backup is overdue across a given backup window. Indicates a
   * problem. Example: Long-running operation in progress during
   * the whole window.
   *
   * @generated from enum value: OVERDUE = 2;
   */
  OVERDUE = 2,

  /**
   * The backup is in progress.
   *
   * @generated from enum value: RUNNING = 3;
   */
  RUNNING = 3,

  /**
   * The backup failed.
   *
   * @generated from enum value: FAILED = 4;
   */
  FAILED = 4,

  /**
   * The backup was successful.
   *
   * @generated from enum value: SUCCESSFUL = 5;
   */
  SUCCESSFUL = 5,

  /**
   * The backup was skipped (without problems) for a given backup
   * window. Example: Instance was idle.
   *
   * @generated from enum value: SKIPPED = 6;
   */
  SKIPPED = 6,

  /**
   * The backup is about to be deleted.
   *
   * @generated from enum value: DELETION_PENDING = 7;
   */
  DELETION_PENDING = 7,

  /**
   * The backup deletion failed.
   *
   * @generated from enum value: DELETION_FAILED = 8;
   */
  DELETION_FAILED = 8,

  /**
   * The backup has been deleted.
   *
   * @generated from enum value: DELETED = 9;
   */
  DELETED = 9,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlBackupRunStatus.
 */
export const SqlBackupRunStatusSchema: GenEnum<SqlBackupRunStatus> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 2);

/**
 * @generated from enum google.cloud.sql.v1beta4.SqlBackupRunType
 */
export enum SqlBackupRunType {
  /**
   * This is an unknown BackupRun type.
   *
   * @generated from enum value: SQL_BACKUP_RUN_TYPE_UNSPECIFIED = 0;
   */
  SQL_BACKUP_RUN_TYPE_UNSPECIFIED = 0,

  /**
   * The backup schedule automatically triggers a backup.
   *
   * @generated from enum value: AUTOMATED = 1;
   */
  AUTOMATED = 1,

  /**
   * The user manually triggers a backup.
   *
   * @generated from enum value: ON_DEMAND = 2;
   */
  ON_DEMAND = 2,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlBackupRunType.
 */
export const SqlBackupRunTypeSchema: GenEnum<SqlBackupRunType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 3);

/**
 * Defines the supported backup kinds
 *
 * @generated from enum google.cloud.sql.v1beta4.SqlBackupKind
 */
export enum SqlBackupKind {
  /**
   * This is an unknown BackupKind.
   *
   * @generated from enum value: SQL_BACKUP_KIND_UNSPECIFIED = 0;
   */
  SQL_BACKUP_KIND_UNSPECIFIED = 0,

  /**
   * The snapshot based backups
   *
   * @generated from enum value: SNAPSHOT = 1;
   */
  SNAPSHOT = 1,

  /**
   * Physical backups
   *
   * @generated from enum value: PHYSICAL = 2;
   */
  PHYSICAL = 2,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlBackupKind.
 */
export const SqlBackupKindSchema: GenEnum<SqlBackupKind> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 4);

/**
 * @generated from enum google.cloud.sql.v1beta4.SqlBackendType
 */
export enum SqlBackendType {
  /**
   * This is an unknown backend type for instance.
   *
   * @generated from enum value: SQL_BACKEND_TYPE_UNSPECIFIED = 0;
   */
  SQL_BACKEND_TYPE_UNSPECIFIED = 0,

  /**
   * V1 speckle instance.
   *
   * @generated from enum value: FIRST_GEN = 1 [deprecated = true];
   * @deprecated
   */
  FIRST_GEN = 1,

  /**
   * V2 speckle instance.
   *
   * @generated from enum value: SECOND_GEN = 2;
   */
  SECOND_GEN = 2,

  /**
   * On premises instance.
   *
   * @generated from enum value: EXTERNAL = 3;
   */
  EXTERNAL = 3,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlBackendType.
 */
export const SqlBackendTypeSchema: GenEnum<SqlBackendType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 5);

/**
 * @generated from enum google.cloud.sql.v1beta4.SqlIpAddressType
 */
export enum SqlIpAddressType {
  /**
   * This is an unknown IP address type.
   *
   * @generated from enum value: SQL_IP_ADDRESS_TYPE_UNSPECIFIED = 0;
   */
  SQL_IP_ADDRESS_TYPE_UNSPECIFIED = 0,

  /**
   * IP address the customer is supposed to connect to. Usually this is the
   * load balancer's IP address
   *
   * @generated from enum value: PRIMARY = 1;
   */
  PRIMARY = 1,

  /**
   * Source IP address of the connection a read replica establishes to its
   * external primary instance. This IP address can be allowlisted by the
   * customer in case it has a firewall that filters incoming connection to its
   * on premises primary instance.
   *
   * @generated from enum value: OUTGOING = 2;
   */
  OUTGOING = 2,

  /**
   * Private IP used when using private IPs and network peering.
   *
   * @generated from enum value: PRIVATE = 3;
   */
  PRIVATE = 3,

  /**
   * V1 IP of a migrated instance. We want the user to
   * decommission this IP as soon as the migration is complete.
   * Note: V1 instances with V1 ip addresses will be counted as PRIMARY.
   *
   * @generated from enum value: MIGRATED_1ST_GEN = 4;
   */
  MIGRATED_1ST_GEN = 4,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlIpAddressType.
 */
export const SqlIpAddressTypeSchema: GenEnum<SqlIpAddressType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 6);

/**
 * @generated from enum google.cloud.sql.v1beta4.SqlInstanceType
 */
export enum SqlInstanceType {
  /**
   * This is an unknown Cloud SQL instance type.
   *
   * @generated from enum value: SQL_INSTANCE_TYPE_UNSPECIFIED = 0;
   */
  SQL_INSTANCE_TYPE_UNSPECIFIED = 0,

  /**
   * A regular Cloud SQL instance that is not replicating from a primary
   * instance.
   *
   * @generated from enum value: CLOUD_SQL_INSTANCE = 1;
   */
  CLOUD_SQL_INSTANCE = 1,

  /**
   * An instance running on the customer's premises that is not managed by
   * Cloud SQL.
   *
   * @generated from enum value: ON_PREMISES_INSTANCE = 2;
   */
  ON_PREMISES_INSTANCE = 2,

  /**
   * A Cloud SQL instance acting as a read-replica.
   *
   * @generated from enum value: READ_REPLICA_INSTANCE = 3;
   */
  READ_REPLICA_INSTANCE = 3,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlInstanceType.
 */
export const SqlInstanceTypeSchema: GenEnum<SqlInstanceType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 7);

/**
 * The database engine type and version.
 *
 * @generated from enum google.cloud.sql.v1beta4.SqlDatabaseVersion
 */
export enum SqlDatabaseVersion {
  /**
   * This is an unknown database version.
   *
   * @generated from enum value: SQL_DATABASE_VERSION_UNSPECIFIED = 0;
   */
  SQL_DATABASE_VERSION_UNSPECIFIED = 0,

  /**
   * The database version is MySQL 5.1.
   *
   * @generated from enum value: MYSQL_5_1 = 2 [deprecated = true];
   * @deprecated
   */
  MYSQL_5_1 = 2,

  /**
   * The database version is MySQL 5.5.
   *
   * @generated from enum value: MYSQL_5_5 = 3 [deprecated = true];
   * @deprecated
   */
  MYSQL_5_5 = 3,

  /**
   * The database version is MySQL 5.6.
   *
   * @generated from enum value: MYSQL_5_6 = 5;
   */
  MYSQL_5_6 = 5,

  /**
   * The database version is MySQL 5.7.
   *
   * @generated from enum value: MYSQL_5_7 = 6;
   */
  MYSQL_5_7 = 6,

  /**
   * The database version is SQL Server 2017 Standard.
   *
   * @generated from enum value: SQLSERVER_2017_STANDARD = 11;
   */
  SQLSERVER_2017_STANDARD = 11,

  /**
   * The database version is SQL Server 2017 Enterprise.
   *
   * @generated from enum value: SQLSERVER_2017_ENTERPRISE = 14;
   */
  SQLSERVER_2017_ENTERPRISE = 14,

  /**
   * The database version is SQL Server 2017 Express.
   *
   * @generated from enum value: SQLSERVER_2017_EXPRESS = 15;
   */
  SQLSERVER_2017_EXPRESS = 15,

  /**
   * The database version is SQL Server 2017 Web.
   *
   * @generated from enum value: SQLSERVER_2017_WEB = 16;
   */
  SQLSERVER_2017_WEB = 16,

  /**
   * The database version is PostgreSQL 9.6.
   *
   * @generated from enum value: POSTGRES_9_6 = 9;
   */
  POSTGRES_9_6 = 9,

  /**
   * The database version is PostgreSQL 10.
   *
   * @generated from enum value: POSTGRES_10 = 18;
   */
  POSTGRES_10 = 18,

  /**
   * The database version is PostgreSQL 11.
   *
   * @generated from enum value: POSTGRES_11 = 10;
   */
  POSTGRES_11 = 10,

  /**
   * The database version is PostgreSQL 12.
   *
   * @generated from enum value: POSTGRES_12 = 19;
   */
  POSTGRES_12 = 19,

  /**
   * The database version is PostgreSQL 13.
   *
   * @generated from enum value: POSTGRES_13 = 23;
   */
  POSTGRES_13 = 23,

  /**
   * The database version is PostgreSQL 14.
   *
   * @generated from enum value: POSTGRES_14 = 110;
   */
  POSTGRES_14 = 110,

  /**
   * The database version is PostgreSQL 15.
   *
   * @generated from enum value: POSTGRES_15 = 172;
   */
  POSTGRES_15 = 172,

  /**
   * The database version is PostgreSQL 16.
   *
   * @generated from enum value: POSTGRES_16 = 272;
   */
  POSTGRES_16 = 272,

  /**
   * The database version is MySQL 8.
   *
   * @generated from enum value: MYSQL_8_0 = 20;
   */
  MYSQL_8_0 = 20,

  /**
   * The database major version is MySQL 8.0 and the minor version is 18.
   *
   * @generated from enum value: MYSQL_8_0_18 = 41;
   */
  MYSQL_8_0_18 = 41,

  /**
   * The database major version is MySQL 8.0 and the minor version is 26.
   *
   * @generated from enum value: MYSQL_8_0_26 = 85;
   */
  MYSQL_8_0_26 = 85,

  /**
   * The database major version is MySQL 8.0 and the minor version is 27.
   *
   * @generated from enum value: MYSQL_8_0_27 = 111;
   */
  MYSQL_8_0_27 = 111,

  /**
   * The database major version is MySQL 8.0 and the minor version is 28.
   *
   * @generated from enum value: MYSQL_8_0_28 = 132;
   */
  MYSQL_8_0_28 = 132,

  /**
   * The database major version is MySQL 8.0 and the minor version is 29.
   *
   * @generated from enum value: MYSQL_8_0_29 = 148 [deprecated = true];
   * @deprecated
   */
  MYSQL_8_0_29 = 148,

  /**
   * The database major version is MySQL 8.0 and the minor version is 30.
   *
   * @generated from enum value: MYSQL_8_0_30 = 174;
   */
  MYSQL_8_0_30 = 174,

  /**
   * The database major version is MySQL 8.0 and the minor version is 31.
   *
   * @generated from enum value: MYSQL_8_0_31 = 197;
   */
  MYSQL_8_0_31 = 197,

  /**
   * The database major version is MySQL 8.0 and the minor version is 32.
   *
   * @generated from enum value: MYSQL_8_0_32 = 213;
   */
  MYSQL_8_0_32 = 213,

  /**
   * The database major version is MySQL 8.0 and the minor version is 33.
   *
   * @generated from enum value: MYSQL_8_0_33 = 238;
   */
  MYSQL_8_0_33 = 238,

  /**
   * The database major version is MySQL 8.0 and the minor version is 34.
   *
   * @generated from enum value: MYSQL_8_0_34 = 239;
   */
  MYSQL_8_0_34 = 239,

  /**
   * The database major version is MySQL 8.0 and the minor version is 35.
   *
   * @generated from enum value: MYSQL_8_0_35 = 240;
   */
  MYSQL_8_0_35 = 240,

  /**
   * The database major version is MySQL 8.0 and the minor version is 36.
   *
   * @generated from enum value: MYSQL_8_0_36 = 241;
   */
  MYSQL_8_0_36 = 241,

  /**
   * The database major version is MySQL 8.0 and the minor version is 37.
   *
   * @generated from enum value: MYSQL_8_0_37 = 355;
   */
  MYSQL_8_0_37 = 355,

  /**
   * The database major version is MySQL 8.0 and the minor version is 38.
   *
   * @generated from enum value: MYSQL_8_0_38 = 356;
   */
  MYSQL_8_0_38 = 356,

  /**
   * The database major version is MySQL 8.0 and the minor version is 39.
   *
   * @generated from enum value: MYSQL_8_0_39 = 357;
   */
  MYSQL_8_0_39 = 357,

  /**
   * The database major version is MySQL 8.0 and the minor version is 40.
   *
   * @generated from enum value: MYSQL_8_0_40 = 358;
   */
  MYSQL_8_0_40 = 358,

  /**
   * The database version is MySQL 8.4.
   *
   * @generated from enum value: MYSQL_8_4 = 398;
   */
  MYSQL_8_4 = 398,

  /**
   * The database version is MySQL 8.4 and the patch version is 0.
   *
   * @generated from enum value: MYSQL_8_4_0 = 399;
   */
  MYSQL_8_4_0 = 399,

  /**
   * The database version is SQL Server 2019 Standard.
   *
   * @generated from enum value: SQLSERVER_2019_STANDARD = 26;
   */
  SQLSERVER_2019_STANDARD = 26,

  /**
   * The database version is SQL Server 2019 Enterprise.
   *
   * @generated from enum value: SQLSERVER_2019_ENTERPRISE = 27;
   */
  SQLSERVER_2019_ENTERPRISE = 27,

  /**
   * The database version is SQL Server 2019 Express.
   *
   * @generated from enum value: SQLSERVER_2019_EXPRESS = 28;
   */
  SQLSERVER_2019_EXPRESS = 28,

  /**
   * The database version is SQL Server 2019 Web.
   *
   * @generated from enum value: SQLSERVER_2019_WEB = 29;
   */
  SQLSERVER_2019_WEB = 29,

  /**
   * The database version is SQL Server 2022 Standard.
   *
   * @generated from enum value: SQLSERVER_2022_STANDARD = 199;
   */
  SQLSERVER_2022_STANDARD = 199,

  /**
   * The database version is SQL Server 2022 Enterprise.
   *
   * @generated from enum value: SQLSERVER_2022_ENTERPRISE = 200;
   */
  SQLSERVER_2022_ENTERPRISE = 200,

  /**
   * The database version is SQL Server 2022 Express.
   *
   * @generated from enum value: SQLSERVER_2022_EXPRESS = 201;
   */
  SQLSERVER_2022_EXPRESS = 201,

  /**
   * The database version is SQL Server 2022 Web.
   *
   * @generated from enum value: SQLSERVER_2022_WEB = 202;
   */
  SQLSERVER_2022_WEB = 202,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlDatabaseVersion.
 */
export const SqlDatabaseVersionSchema: GenEnum<SqlDatabaseVersion> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 8);

/**
 * The suspension reason of the database instance if the state is SUSPENDED.
 *
 * @generated from enum google.cloud.sql.v1beta4.SqlSuspensionReason
 */
export enum SqlSuspensionReason {
  /**
   * This is an unknown suspension reason.
   *
   * @generated from enum value: SQL_SUSPENSION_REASON_UNSPECIFIED = 0;
   */
  SQL_SUSPENSION_REASON_UNSPECIFIED = 0,

  /**
   * The instance is suspended due to billing issues (for example:, GCP account
   * issue)
   *
   * @generated from enum value: BILLING_ISSUE = 2;
   */
  BILLING_ISSUE = 2,

  /**
   * The instance is suspended due to illegal content (for example:, child
   * pornography, copyrighted material, etc.).
   *
   * @generated from enum value: LEGAL_ISSUE = 3;
   */
  LEGAL_ISSUE = 3,

  /**
   * The instance is causing operational issues (for example:, causing the
   * database to crash).
   *
   * @generated from enum value: OPERATIONAL_ISSUE = 4;
   */
  OPERATIONAL_ISSUE = 4,

  /**
   * The KMS key used by the instance is either revoked or denied access to
   *
   * @generated from enum value: KMS_KEY_ISSUE = 5;
   */
  KMS_KEY_ISSUE = 5,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlSuspensionReason.
 */
export const SqlSuspensionReasonSchema: GenEnum<SqlSuspensionReason> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 9);

/**
 * The pricing plan for this instance.
 *
 * @generated from enum google.cloud.sql.v1beta4.SqlPricingPlan
 */
export enum SqlPricingPlan {
  /**
   * This is an unknown pricing plan for this instance.
   *
   * @generated from enum value: SQL_PRICING_PLAN_UNSPECIFIED = 0;
   */
  SQL_PRICING_PLAN_UNSPECIFIED = 0,

  /**
   * The instance is billed at a monthly flat rate.
   *
   * @generated from enum value: PACKAGE = 1;
   */
  PACKAGE = 1,

  /**
   * The instance is billed per usage.
   *
   * @generated from enum value: PER_USE = 2;
   */
  PER_USE = 2,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlPricingPlan.
 */
export const SqlPricingPlanSchema: GenEnum<SqlPricingPlan> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 10);

/**
 * @generated from enum google.cloud.sql.v1beta4.SqlReplicationType
 */
export enum SqlReplicationType {
  /**
   * This is an unknown replication type for a Cloud SQL instance.
   *
   * @generated from enum value: SQL_REPLICATION_TYPE_UNSPECIFIED = 0;
   */
  SQL_REPLICATION_TYPE_UNSPECIFIED = 0,

  /**
   * The synchronous replication mode for First Generation instances. It is the
   * default value.
   *
   * @generated from enum value: SYNCHRONOUS = 1;
   */
  SYNCHRONOUS = 1,

  /**
   * The asynchronous replication mode for First Generation instances. It
   * provides a slight performance gain, but if an outage occurs while this
   * option is set to asynchronous, you can lose up to a few seconds of updates
   * to your data.
   *
   * @generated from enum value: ASYNCHRONOUS = 2;
   */
  ASYNCHRONOUS = 2,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlReplicationType.
 */
export const SqlReplicationTypeSchema: GenEnum<SqlReplicationType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 11);

/**
 * The type of disk that is used for a v2 instance to use.
 *
 * @generated from enum google.cloud.sql.v1beta4.SqlDataDiskType
 */
export enum SqlDataDiskType {
  /**
   * This is an unknown data disk type.
   *
   * @generated from enum value: SQL_DATA_DISK_TYPE_UNSPECIFIED = 0;
   */
  SQL_DATA_DISK_TYPE_UNSPECIFIED = 0,

  /**
   * An SSD data disk.
   *
   * @generated from enum value: PD_SSD = 1;
   */
  PD_SSD = 1,

  /**
   * An HDD data disk.
   *
   * @generated from enum value: PD_HDD = 2;
   */
  PD_HDD = 2,

  /**
   * This field is deprecated and will be removed from a future version of the
   * API.
   *
   * @generated from enum value: OBSOLETE_LOCAL_SSD = 3 [deprecated = true];
   * @deprecated
   */
  OBSOLETE_LOCAL_SSD = 3,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlDataDiskType.
 */
export const SqlDataDiskTypeSchema: GenEnum<SqlDataDiskType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 12);

/**
 * The availability type of the given Cloud SQL instance.
 *
 * @generated from enum google.cloud.sql.v1beta4.SqlAvailabilityType
 */
export enum SqlAvailabilityType {
  /**
   * This is an unknown Availability type.
   *
   * @generated from enum value: SQL_AVAILABILITY_TYPE_UNSPECIFIED = 0;
   */
  SQL_AVAILABILITY_TYPE_UNSPECIFIED = 0,

  /**
   * Zonal available instance.
   *
   * @generated from enum value: ZONAL = 1;
   */
  ZONAL = 1,

  /**
   * Regional available instance.
   *
   * @generated from enum value: REGIONAL = 2;
   */
  REGIONAL = 2,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlAvailabilityType.
 */
export const SqlAvailabilityTypeSchema: GenEnum<SqlAvailabilityType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 13);

/**
 * @generated from enum google.cloud.sql.v1beta4.SqlUpdateTrack
 */
export enum SqlUpdateTrack {
  /**
   * This is an unknown maintenance timing preference.
   *
   * @generated from enum value: SQL_UPDATE_TRACK_UNSPECIFIED = 0;
   */
  SQL_UPDATE_TRACK_UNSPECIFIED = 0,

  /**
   * For instance update that requires a restart, this update track indicates
   * your instance prefer to restart for new version early in maintenance
   * window.
   *
   * @generated from enum value: canary = 1;
   */
  canary = 1,

  /**
   * For instance update that requires a restart, this update track indicates
   * your instance prefer to let Cloud SQL choose the timing of restart (within
   * its Maintenance window, if applicable).
   *
   * @generated from enum value: stable = 2;
   */
  stable = 2,

  /**
   * For instance update that requires a restart, this update track indicates
   * your instance prefer to let Cloud SQL choose the timing of restart (within
   * its Maintenance window, if applicable) to be at least 5 weeks after the
   * notification.
   *
   * @generated from enum value: week5 = 3;
   */
  week5 = 3,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlUpdateTrack.
 */
export const SqlUpdateTrackSchema: GenEnum<SqlUpdateTrack> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 14);

/**
 * @generated from enum google.cloud.sql.v1beta4.SqlFlagType
 */
export enum SqlFlagType {
  /**
   * This is an unknown flag type.
   *
   * @generated from enum value: SQL_FLAG_TYPE_UNSPECIFIED = 0;
   */
  SQL_FLAG_TYPE_UNSPECIFIED = 0,

  /**
   * Boolean type flag.
   *
   * @generated from enum value: BOOLEAN = 1;
   */
  BOOLEAN = 1,

  /**
   * String type flag.
   *
   * @generated from enum value: STRING = 2;
   */
  STRING = 2,

  /**
   * Integer type flag.
   *
   * @generated from enum value: INTEGER = 3;
   */
  INTEGER = 3,

  /**
   * Flag type used for a server startup option.
   *
   * @generated from enum value: NONE = 4;
   */
  NONE = 4,

  /**
   * Type introduced specially for MySQL TimeZone offset. Accept a string value
   * with the format [-12:59, 13:00].
   *
   * @generated from enum value: MYSQL_TIMEZONE_OFFSET = 5;
   */
  MYSQL_TIMEZONE_OFFSET = 5,

  /**
   * Float type flag.
   *
   * @generated from enum value: FLOAT = 6;
   */
  FLOAT = 6,

  /**
   * Comma-separated list of the strings in a SqlFlagType enum.
   *
   * @generated from enum value: REPEATED_STRING = 7;
   */
  REPEATED_STRING = 7,
}

/**
 * Describes the enum google.cloud.sql.v1beta4.SqlFlagType.
 */
export const SqlFlagTypeSchema: GenEnum<SqlFlagType> = /*@__PURE__*/
  enumDesc(file_google_cloud_sql_v1beta4_cloud_sql_resources, 15);

