// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/networkservices/v1beta1/common.proto (package google.cloud.networkservices.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/networkservices/v1beta1/common.proto.
 */
export const file_google_cloud_networkservices_v1beta1_common: GenFile = /*@__PURE__*/
  fileDesc("CjFnb29nbGUvY2xvdWQvbmV0d29ya3NlcnZpY2VzL3YxYmV0YTEvY29tbW9uLnByb3RvEiRnb29nbGUuY2xvdWQubmV0d29ya3NlcnZpY2VzLnYxYmV0YTEigAIKEU9wZXJhdGlvbk1ldGFkYXRhEjQKC2NyZWF0ZV90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjEKCGVuZF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEhMKBnRhcmdldBgDIAEoCUID4EEDEhEKBHZlcmIYBCABKAlCA+BBAxIbCg5zdGF0dXNfbWVzc2FnZRgFIAEoCUID4EEDEiMKFnJlcXVlc3RlZF9jYW5jZWxsYXRpb24YBiABKAhCA+BBAxIYCgthcGlfdmVyc2lvbhgHIAEoCUID4EEDIikKE1RyYWZmaWNQb3J0U2VsZWN0b3ISEgoFcG9ydHMYASADKAlCA+BBASLbBAoPRW5kcG9pbnRNYXRjaGVyEmwKFm1ldGFkYXRhX2xhYmVsX21hdGNoZXIYASABKAsySi5nb29nbGUuY2xvdWQubmV0d29ya3NlcnZpY2VzLnYxYmV0YTEuRW5kcG9pbnRNYXRjaGVyLk1ldGFkYXRhTGFiZWxNYXRjaGVySAAayQMKFE1ldGFkYXRhTGFiZWxNYXRjaGVyEowBCh1tZXRhZGF0YV9sYWJlbF9tYXRjaF9jcml0ZXJpYRgBIAEoDjJlLmdvb2dsZS5jbG91ZC5uZXR3b3Jrc2VydmljZXMudjFiZXRhMS5FbmRwb2ludE1hdGNoZXIuTWV0YWRhdGFMYWJlbE1hdGNoZXIuTWV0YWRhdGFMYWJlbE1hdGNoQ3JpdGVyaWEScgoPbWV0YWRhdGFfbGFiZWxzGAIgAygLMlkuZ29vZ2xlLmNsb3VkLm5ldHdvcmtzZXJ2aWNlcy52MWJldGExLkVuZHBvaW50TWF0Y2hlci5NZXRhZGF0YUxhYmVsTWF0Y2hlci5NZXRhZGF0YUxhYmVscxpDCg5NZXRhZGF0YUxhYmVscxIXCgpsYWJlbF9uYW1lGAEgASgJQgPgQQISGAoLbGFiZWxfdmFsdWUYAiABKAlCA+BBAiJpChpNZXRhZGF0YUxhYmVsTWF0Y2hDcml0ZXJpYRItCilNRVRBREFUQV9MQUJFTF9NQVRDSF9DUklURVJJQV9VTlNQRUNJRklFRBAAEg0KCU1BVENIX0FOWRABEg0KCU1BVENIX0FMTBACQg4KDG1hdGNoZXJfdHlwZUKFAgooY29tLmdvb2dsZS5jbG91ZC5uZXR3b3Jrc2VydmljZXMudjFiZXRhMUILQ29tbW9uUHJvdG9QAVpSY2xvdWQuZ29vZ2xlLmNvbS9nby9uZXR3b3Jrc2VydmljZXMvYXBpdjFiZXRhMS9uZXR3b3Jrc2VydmljZXNwYjtuZXR3b3Jrc2VydmljZXNwYqoCJEdvb2dsZS5DbG91ZC5OZXR3b3JrU2VydmljZXMuVjFCZXRhMcoCJEdvb2dsZVxDbG91ZFxOZXR3b3JrU2VydmljZXNcVjFiZXRhMeoCJ0dvb2dsZTo6Q2xvdWQ6Ok5ldHdvcmtTZXJ2aWNlczo6VjFiZXRhMWIGcHJvdG8z", [file_google_api_field_behavior, file_google_protobuf_timestamp]);

/**
 * Represents the metadata of the long-running operation.
 *
 * @generated from message google.cloud.networkservices.v1beta1.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.networkservices.v1beta1.OperationMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. Server-defined resource path for the target of the operation.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * Output only. Name of the verb executed by the operation.
   *
   * @generated from field: string verb = 4;
   */
  verb: string;

  /**
   * Output only. Human-readable status of the operation, if any.
   *
   * @generated from field: string status_message = 5;
   */
  statusMessage: string;

  /**
   * Output only. Identifies whether the user has requested cancellation
   * of the operation. Operations that have successfully been cancelled
   * have [Operation.error][] value with a
   * [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
   * `Code.CANCELLED`.
   *
   * @generated from field: bool requested_cancellation = 6;
   */
  requestedCancellation: boolean;

  /**
   * Output only. API version used to start the operation.
   *
   * @generated from field: string api_version = 7;
   */
  apiVersion: string;
};

/**
 * Describes the message google.cloud.networkservices.v1beta1.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkservices_v1beta1_common, 0);

/**
 * Specification of a port-based selector.
 *
 * @generated from message google.cloud.networkservices.v1beta1.TrafficPortSelector
 */
export type TrafficPortSelector = Message<"google.cloud.networkservices.v1beta1.TrafficPortSelector"> & {
  /**
   * Optional. A list of ports. Can be port numbers or port range
   * (example, [80-90] specifies all ports from 80 to 90, including
   * 80 and 90) or named ports or * to specify all ports. If the
   * list is empty, all ports are selected.
   *
   * @generated from field: repeated string ports = 1;
   */
  ports: string[];
};

/**
 * Describes the message google.cloud.networkservices.v1beta1.TrafficPortSelector.
 * Use `create(TrafficPortSelectorSchema)` to create a new message.
 */
export const TrafficPortSelectorSchema: GenMessage<TrafficPortSelector> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkservices_v1beta1_common, 1);

/**
 * A definition of a matcher that selects endpoints to which the policies
 * should be applied.
 *
 * @generated from message google.cloud.networkservices.v1beta1.EndpointMatcher
 */
export type EndpointMatcher = Message<"google.cloud.networkservices.v1beta1.EndpointMatcher"> & {
  /**
   * Specifies type of the matcher used for this endpoint matcher.
   *
   * @generated from oneof google.cloud.networkservices.v1beta1.EndpointMatcher.matcher_type
   */
  matcherType: {
    /**
     * The matcher is based on node metadata presented by xDS clients.
     *
     * @generated from field: google.cloud.networkservices.v1beta1.EndpointMatcher.MetadataLabelMatcher metadata_label_matcher = 1;
     */
    value: EndpointMatcher_MetadataLabelMatcher;
    case: "metadataLabelMatcher";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.networkservices.v1beta1.EndpointMatcher.
 * Use `create(EndpointMatcherSchema)` to create a new message.
 */
export const EndpointMatcherSchema: GenMessage<EndpointMatcher> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkservices_v1beta1_common, 2);

/**
 * The matcher that is based on node metadata presented by xDS clients.
 *
 * @generated from message google.cloud.networkservices.v1beta1.EndpointMatcher.MetadataLabelMatcher
 */
export type EndpointMatcher_MetadataLabelMatcher = Message<"google.cloud.networkservices.v1beta1.EndpointMatcher.MetadataLabelMatcher"> & {
  /**
   * Specifies how matching should be done.
   *
   * Supported values are:
   * MATCH_ANY: At least one of the Labels specified in the
   *   matcher should match the metadata presented by xDS client.
   * MATCH_ALL: The metadata presented by the xDS client should
   *   contain all of the labels specified here.
   *
   * The selection is determined based on the best match. For
   * example, suppose there are three EndpointPolicy
   * resources P1, P2 and P3 and if P1 has a the matcher as
   * MATCH_ANY <A:1, B:1>, P2 has MATCH_ALL <A:1,B:1>, and P3 has
   * MATCH_ALL <A:1,B:1,C:1>.
   *
   * If a client with label <A:1> connects, the config from P1
   * will be selected.
   *
   * If a client with label <A:1,B:1> connects, the config from P2
   * will be selected.
   *
   * If a client with label <A:1,B:1,C:1> connects, the config
   * from P3 will be selected.
   *
   * If there is more than one best match, (for example, if a
   * config P4 with selector <A:1,D:1> exists and if a client with
   * label <A:1,B:1,D:1> connects), an error will be thrown.
   *
   * @generated from field: google.cloud.networkservices.v1beta1.EndpointMatcher.MetadataLabelMatcher.MetadataLabelMatchCriteria metadata_label_match_criteria = 1;
   */
  metadataLabelMatchCriteria: EndpointMatcher_MetadataLabelMatcher_MetadataLabelMatchCriteria;

  /**
   * The list of label value pairs that must match labels in the
   * provided metadata based on filterMatchCriteria This list can
   * have at most 64 entries. The list can be empty if the match
   * criteria is MATCH_ANY, to specify a wildcard match (i.e this
   * matches any client).
   *
   * @generated from field: repeated google.cloud.networkservices.v1beta1.EndpointMatcher.MetadataLabelMatcher.MetadataLabels metadata_labels = 2;
   */
  metadataLabels: EndpointMatcher_MetadataLabelMatcher_MetadataLabels[];
};

/**
 * Describes the message google.cloud.networkservices.v1beta1.EndpointMatcher.MetadataLabelMatcher.
 * Use `create(EndpointMatcher_MetadataLabelMatcherSchema)` to create a new message.
 */
export const EndpointMatcher_MetadataLabelMatcherSchema: GenMessage<EndpointMatcher_MetadataLabelMatcher> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkservices_v1beta1_common, 2, 0);

/**
 * Defines a name-pair value for a single label.
 *
 * @generated from message google.cloud.networkservices.v1beta1.EndpointMatcher.MetadataLabelMatcher.MetadataLabels
 */
export type EndpointMatcher_MetadataLabelMatcher_MetadataLabels = Message<"google.cloud.networkservices.v1beta1.EndpointMatcher.MetadataLabelMatcher.MetadataLabels"> & {
  /**
   * Required. Label name presented as key in xDS Node Metadata.
   *
   * @generated from field: string label_name = 1;
   */
  labelName: string;

  /**
   * Required. Label value presented as value corresponding to the above
   * key, in xDS Node Metadata.
   *
   * @generated from field: string label_value = 2;
   */
  labelValue: string;
};

/**
 * Describes the message google.cloud.networkservices.v1beta1.EndpointMatcher.MetadataLabelMatcher.MetadataLabels.
 * Use `create(EndpointMatcher_MetadataLabelMatcher_MetadataLabelsSchema)` to create a new message.
 */
export const EndpointMatcher_MetadataLabelMatcher_MetadataLabelsSchema: GenMessage<EndpointMatcher_MetadataLabelMatcher_MetadataLabels> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkservices_v1beta1_common, 2, 0, 0);

/**
 * Possible criteria values that define logic of how matching is made.
 *
 * @generated from enum google.cloud.networkservices.v1beta1.EndpointMatcher.MetadataLabelMatcher.MetadataLabelMatchCriteria
 */
export enum EndpointMatcher_MetadataLabelMatcher_MetadataLabelMatchCriteria {
  /**
   * Default value. Should not be used.
   *
   * @generated from enum value: METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED = 0;
   */
  METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED = 0,

  /**
   * At least one of the Labels specified in the matcher should match the
   * metadata presented by xDS client.
   *
   * @generated from enum value: MATCH_ANY = 1;
   */
  MATCH_ANY = 1,

  /**
   * The metadata presented by the xDS client should contain all of the
   * labels specified here.
   *
   * @generated from enum value: MATCH_ALL = 2;
   */
  MATCH_ALL = 2,
}

/**
 * Describes the enum google.cloud.networkservices.v1beta1.EndpointMatcher.MetadataLabelMatcher.MetadataLabelMatchCriteria.
 */
export const EndpointMatcher_MetadataLabelMatcher_MetadataLabelMatchCriteriaSchema: GenEnum<EndpointMatcher_MetadataLabelMatcher_MetadataLabelMatchCriteria> = /*@__PURE__*/
  enumDesc(file_google_cloud_networkservices_v1beta1_common, 2, 0, 0);

