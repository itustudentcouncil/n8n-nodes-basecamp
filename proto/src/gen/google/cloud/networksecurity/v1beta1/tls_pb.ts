// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/networksecurity/v1beta1/tls.proto (package google.cloud.networksecurity.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/networksecurity/v1beta1/tls.proto.
 */
export const file_google_cloud_networksecurity_v1beta1_tls: GenFile = /*@__PURE__*/
  fileDesc("Ci5nb29nbGUvY2xvdWQvbmV0d29ya3NlY3VyaXR5L3YxYmV0YTEvdGxzLnByb3RvEiRnb29nbGUuY2xvdWQubmV0d29ya3NlY3VyaXR5LnYxYmV0YTEiJwoMR3JwY0VuZHBvaW50EhcKCnRhcmdldF91cmkYASABKAlCA+BBAiLPAQoMVmFsaWRhdGlvbkNBEksKDWdycGNfZW5kcG9pbnQYAiABKAsyMi5nb29nbGUuY2xvdWQubmV0d29ya3NlY3VyaXR5LnYxYmV0YTEuR3JwY0VuZHBvaW50SAASagodY2VydGlmaWNhdGVfcHJvdmlkZXJfaW5zdGFuY2UYAyABKAsyQS5nb29nbGUuY2xvdWQubmV0d29ya3NlY3VyaXR5LnYxYmV0YTEuQ2VydGlmaWNhdGVQcm92aWRlckluc3RhbmNlSABCBgoEdHlwZSI7ChtDZXJ0aWZpY2F0ZVByb3ZpZGVySW5zdGFuY2USHAoPcGx1Z2luX2luc3RhbmNlGAEgASgJQgPgQQIi1gEKE0NlcnRpZmljYXRlUHJvdmlkZXISSwoNZ3JwY19lbmRwb2ludBgCIAEoCzIyLmdvb2dsZS5jbG91ZC5uZXR3b3Jrc2VjdXJpdHkudjFiZXRhMS5HcnBjRW5kcG9pbnRIABJqCh1jZXJ0aWZpY2F0ZV9wcm92aWRlcl9pbnN0YW5jZRgDIAEoCzJBLmdvb2dsZS5jbG91ZC5uZXR3b3Jrc2VjdXJpdHkudjFiZXRhMS5DZXJ0aWZpY2F0ZVByb3ZpZGVySW5zdGFuY2VIAEIGCgR0eXBlQoICCihjb20uZ29vZ2xlLmNsb3VkLm5ldHdvcmtzZWN1cml0eS52MWJldGExQghUbHNQcm90b1ABWlJjbG91ZC5nb29nbGUuY29tL2dvL25ldHdvcmtzZWN1cml0eS9hcGl2MWJldGExL25ldHdvcmtzZWN1cml0eXBiO25ldHdvcmtzZWN1cml0eXBiqgIkR29vZ2xlLkNsb3VkLk5ldHdvcmtTZWN1cml0eS5WMUJldGExygIkR29vZ2xlXENsb3VkXE5ldHdvcmtTZWN1cml0eVxWMWJldGEx6gInR29vZ2xlOjpDbG91ZDo6TmV0d29ya1NlY3VyaXR5OjpWMWJldGExYgZwcm90bzM", [file_google_api_field_behavior]);

/**
 * Specification of the GRPC Endpoint.
 *
 * @generated from message google.cloud.networksecurity.v1beta1.GrpcEndpoint
 */
export type GrpcEndpoint = Message<"google.cloud.networksecurity.v1beta1.GrpcEndpoint"> & {
  /**
   * Required. The target URI of the gRPC endpoint. Only UDS path is supported,
   * and should start with "unix:".
   *
   * @generated from field: string target_uri = 1;
   */
  targetUri: string;
};

/**
 * Describes the message google.cloud.networksecurity.v1beta1.GrpcEndpoint.
 * Use `create(GrpcEndpointSchema)` to create a new message.
 */
export const GrpcEndpointSchema: GenMessage<GrpcEndpoint> = /*@__PURE__*/
  messageDesc(file_google_cloud_networksecurity_v1beta1_tls, 0);

/**
 * Specification of ValidationCA. Defines the mechanism to obtain the
 * Certificate Authority certificate to validate the peer certificate.
 *
 * @generated from message google.cloud.networksecurity.v1beta1.ValidationCA
 */
export type ValidationCA = Message<"google.cloud.networksecurity.v1beta1.ValidationCA"> & {
  /**
   * The type of certificate provider which provides the CA certificate.
   *
   * @generated from oneof google.cloud.networksecurity.v1beta1.ValidationCA.type
   */
  type: {
    /**
     * gRPC specific configuration to access the gRPC server to
     * obtain the CA certificate.
     *
     * @generated from field: google.cloud.networksecurity.v1beta1.GrpcEndpoint grpc_endpoint = 2;
     */
    value: GrpcEndpoint;
    case: "grpcEndpoint";
  } | {
    /**
     * The certificate provider instance specification that will be passed to
     * the data plane, which will be used to load necessary credential
     * information.
     *
     * @generated from field: google.cloud.networksecurity.v1beta1.CertificateProviderInstance certificate_provider_instance = 3;
     */
    value: CertificateProviderInstance;
    case: "certificateProviderInstance";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.networksecurity.v1beta1.ValidationCA.
 * Use `create(ValidationCASchema)` to create a new message.
 */
export const ValidationCASchema: GenMessage<ValidationCA> = /*@__PURE__*/
  messageDesc(file_google_cloud_networksecurity_v1beta1_tls, 1);

/**
 * Specification of a TLS certificate provider instance. Workloads may have one
 * or more CertificateProvider instances (plugins) and one of them is enabled
 * and configured by specifying this message. Workloads use the values from this
 * message to locate and load the CertificateProvider instance configuration.
 *
 * @generated from message google.cloud.networksecurity.v1beta1.CertificateProviderInstance
 */
export type CertificateProviderInstance = Message<"google.cloud.networksecurity.v1beta1.CertificateProviderInstance"> & {
  /**
   * Required. Plugin instance name, used to locate and load CertificateProvider
   * instance configuration. Set to "google_cloud_private_spiffe" to use
   * Certificate Authority Service certificate provider instance.
   *
   * @generated from field: string plugin_instance = 1;
   */
  pluginInstance: string;
};

/**
 * Describes the message google.cloud.networksecurity.v1beta1.CertificateProviderInstance.
 * Use `create(CertificateProviderInstanceSchema)` to create a new message.
 */
export const CertificateProviderInstanceSchema: GenMessage<CertificateProviderInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_networksecurity_v1beta1_tls, 2);

/**
 * Specification of certificate provider. Defines the mechanism to obtain the
 * certificate and private key for peer to peer authentication.
 *
 * @generated from message google.cloud.networksecurity.v1beta1.CertificateProvider
 */
export type CertificateProvider = Message<"google.cloud.networksecurity.v1beta1.CertificateProvider"> & {
  /**
   * The type of certificate provider which provides the certificates and
   * private keys.
   *
   * @generated from oneof google.cloud.networksecurity.v1beta1.CertificateProvider.type
   */
  type: {
    /**
     * gRPC specific configuration to access the gRPC server to
     * obtain the cert and private key.
     *
     * @generated from field: google.cloud.networksecurity.v1beta1.GrpcEndpoint grpc_endpoint = 2;
     */
    value: GrpcEndpoint;
    case: "grpcEndpoint";
  } | {
    /**
     * The certificate provider instance specification that will be passed to
     * the data plane, which will be used to load necessary credential
     * information.
     *
     * @generated from field: google.cloud.networksecurity.v1beta1.CertificateProviderInstance certificate_provider_instance = 3;
     */
    value: CertificateProviderInstance;
    case: "certificateProviderInstance";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.networksecurity.v1beta1.CertificateProvider.
 * Use `create(CertificateProviderSchema)` to create a new message.
 */
export const CertificateProviderSchema: GenMessage<CertificateProvider> = /*@__PURE__*/
  messageDesc(file_google_cloud_networksecurity_v1beta1_tls, 3);

