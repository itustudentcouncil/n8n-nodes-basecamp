// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/billing/budgets/v1beta1/budget_model.proto (package google.cloud.billing.budgets.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { ListValue } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { Date } from "../../../../type/date_pb";
import { file_google_type_date } from "../../../../type/date_pb";
import type { Money } from "../../../../type/money_pb";
import { file_google_type_money } from "../../../../type/money_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/billing/budgets/v1beta1/budget_model.proto.
 */
export const file_google_cloud_billing_budgets_v1beta1_budget_model: GenFile = /*@__PURE__*/
  fileDesc("Cjdnb29nbGUvY2xvdWQvYmlsbGluZy9idWRnZXRzL3YxYmV0YTEvYnVkZ2V0X21vZGVsLnByb3RvEiRnb29nbGUuY2xvdWQuYmlsbGluZy5idWRnZXRzLnYxYmV0YTEi3gMKBkJ1ZGdldBIRCgRuYW1lGAEgASgJQgPgQQMSFAoMZGlzcGxheV9uYW1lGAIgASgJEkgKDWJ1ZGdldF9maWx0ZXIYAyABKAsyLC5nb29nbGUuY2xvdWQuYmlsbGluZy5idWRnZXRzLnYxYmV0YTEuRmlsdGVyQgPgQQESRwoGYW1vdW50GAQgASgLMjIuZ29vZ2xlLmNsb3VkLmJpbGxpbmcuYnVkZ2V0cy52MWJldGExLkJ1ZGdldEFtb3VudEID4EECElEKD3RocmVzaG9sZF9ydWxlcxgFIAMoCzIzLmdvb2dsZS5jbG91ZC5iaWxsaW5nLmJ1ZGdldHMudjFiZXRhMS5UaHJlc2hvbGRSdWxlQgPgQQESUwoQYWxsX3VwZGF0ZXNfcnVsZRgGIAEoCzI0Lmdvb2dsZS5jbG91ZC5iaWxsaW5nLmJ1ZGdldHMudjFiZXRhMS5BbGxVcGRhdGVzUnVsZUID4EEBEhEKBGV0YWcYByABKAlCA+BBATpd6kFaCiRiaWxsaW5nYnVkZ2V0cy5nb29nbGVhcGlzLmNvbS9CdWRnZXQSMmJpbGxpbmdBY2NvdW50cy97YmlsbGluZ19hY2NvdW50fS9idWRnZXRzL3tidWRnZXR9IqUBCgxCdWRnZXRBbW91bnQSLgoQc3BlY2lmaWVkX2Ftb3VudBgBIAEoCzISLmdvb2dsZS50eXBlLk1vbmV5SAASVAoSbGFzdF9wZXJpb2RfYW1vdW50GAIgASgLMjYuZ29vZ2xlLmNsb3VkLmJpbGxpbmcuYnVkZ2V0cy52MWJldGExLkxhc3RQZXJpb2RBbW91bnRIAEIPCg1idWRnZXRfYW1vdW50IhIKEExhc3RQZXJpb2RBbW91bnQizQEKDVRocmVzaG9sZFJ1bGUSHgoRdGhyZXNob2xkX3BlcmNlbnQYASABKAFCA+BBAhJTCgtzcGVuZF9iYXNpcxgCIAEoDjI5Lmdvb2dsZS5jbG91ZC5iaWxsaW5nLmJ1ZGdldHMudjFiZXRhMS5UaHJlc2hvbGRSdWxlLkJhc2lzQgPgQQEiRwoFQmFzaXMSFQoRQkFTSVNfVU5TUEVDSUZJRUQQABIRCg1DVVJSRU5UX1NQRU5EEAESFAoQRk9SRUNBU1RFRF9TUEVORBACItIBCg5BbGxVcGRhdGVzUnVsZRIZCgxwdWJzdWJfdG9waWMYASABKAlCA+BBARIbCg5zY2hlbWFfdmVyc2lvbhgCIAEoCUID4EEBEi0KIG1vbml0b3Jpbmdfbm90aWZpY2F0aW9uX2NoYW5uZWxzGAMgAygJQgPgQQESKwoeZGlzYWJsZV9kZWZhdWx0X2lhbV9yZWNpcGllbnRzGAQgASgIQgPgQQESLAofZW5hYmxlX3Byb2plY3RfbGV2ZWxfcmVjaXBpZW50cxgFIAEoCEID4EEBItgFCgZGaWx0ZXISFQoIcHJvamVjdHMYASADKAlCA+BBARIfChJyZXNvdXJjZV9hbmNlc3RvcnMYAiADKAlCA+BBARIZCgxjcmVkaXRfdHlwZXMYByADKAlCA+BBARJmChZjcmVkaXRfdHlwZXNfdHJlYXRtZW50GAQgASgOMkEuZ29vZ2xlLmNsb3VkLmJpbGxpbmcuYnVkZ2V0cy52MWJldGExLkZpbHRlci5DcmVkaXRUeXBlc1RyZWF0bWVudEID4EEBEhUKCHNlcnZpY2VzGAMgAygJQgPgQQESGAoLc3ViYWNjb3VudHMYBSADKAlCA+BBARJNCgZsYWJlbHMYBiADKAsyOC5nb29nbGUuY2xvdWQuYmlsbGluZy5idWRnZXRzLnYxYmV0YTEuRmlsdGVyLkxhYmVsc0VudHJ5QgPgQQESVAoPY2FsZW5kYXJfcGVyaW9kGAggASgOMjQuZ29vZ2xlLmNsb3VkLmJpbGxpbmcuYnVkZ2V0cy52MWJldGExLkNhbGVuZGFyUGVyaW9kQgPgQQFIABJQCg1jdXN0b21fcGVyaW9kGAkgASgLMjIuZ29vZ2xlLmNsb3VkLmJpbGxpbmcuYnVkZ2V0cy52MWJldGExLkN1c3RvbVBlcmlvZEID4EEBSAAaSQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEikKBXZhbHVlGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkxpc3RWYWx1ZToCOAEijwEKFENyZWRpdFR5cGVzVHJlYXRtZW50EiYKIkNSRURJVF9UWVBFU19UUkVBVE1FTlRfVU5TUEVDSUZJRUQQABIXChNJTkNMVURFX0FMTF9DUkVESVRTEAESFwoTRVhDTFVERV9BTExfQ1JFRElUUxACEh0KGUlOQ0xVREVfU1BFQ0lGSUVEX0NSRURJVFMQA0IOCgx1c2FnZV9wZXJpb2QiZAoMQ3VzdG9tUGVyaW9kEioKCnN0YXJ0X2RhdGUYASABKAsyES5nb29nbGUudHlwZS5EYXRlQgPgQQISKAoIZW5kX2RhdGUYAiABKAsyES5nb29nbGUudHlwZS5EYXRlQgPgQQEqUwoOQ2FsZW5kYXJQZXJpb2QSHwobQ0FMRU5EQVJfUEVSSU9EX1VOU1BFQ0lGSUVEEAASCQoFTU9OVEgQARILCgdRVUFSVEVSEAISCAoEWUVBUhADQnAKKGNvbS5nb29nbGUuY2xvdWQuYmlsbGluZy5idWRnZXRzLnYxYmV0YTFQAVpCY2xvdWQuZ29vZ2xlLmNvbS9nby9iaWxsaW5nL2J1ZGdldHMvYXBpdjFiZXRhMS9idWRnZXRzcGI7YnVkZ2V0c3BiYgZwcm90bzM", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_struct, file_google_type_date, file_google_type_money]);

/**
 * A budget is a plan that describes what you expect to spend on Cloud
 * projects, plus the rules to execute as spend is tracked against that plan,
 * (for example, send an alert when 90% of the target spend is met).
 * The budget time period is configurable, with options such as month (default),
 * quarter, year, or custom time period.
 *
 * @generated from message google.cloud.billing.budgets.v1beta1.Budget
 */
export type Budget = Message<"google.cloud.billing.budgets.v1beta1.Budget"> & {
  /**
   * Output only. Resource name of the budget.
   * The resource name implies the scope of a budget. Values are of the form
   * `billingAccounts/{billingAccountId}/budgets/{budgetId}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * User data for display name in UI.
   * Validation: <= 60 chars.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Optional. Filters that define which resources are used to compute the
   * actual spend against the budget amount, such as projects, services, and the
   * budget's time period, as well as other filters.
   *
   * @generated from field: google.cloud.billing.budgets.v1beta1.Filter budget_filter = 3;
   */
  budgetFilter?: Filter;

  /**
   * Required. Budgeted amount.
   *
   * @generated from field: google.cloud.billing.budgets.v1beta1.BudgetAmount amount = 4;
   */
  amount?: BudgetAmount;

  /**
   * Optional. Rules that trigger alerts (notifications of thresholds
   * being crossed) when spend exceeds the specified percentages of the budget.
   *
   * Optional for `pubsubTopic` notifications.
   *
   * Required if using email notifications.
   *
   * @generated from field: repeated google.cloud.billing.budgets.v1beta1.ThresholdRule threshold_rules = 5;
   */
  thresholdRules: ThresholdRule[];

  /**
   * Optional. Rules to apply to notifications sent based on budget spend and
   * thresholds.
   *
   * @generated from field: google.cloud.billing.budgets.v1beta1.AllUpdatesRule all_updates_rule = 6;
   */
  allUpdatesRule?: AllUpdatesRule;

  /**
   * Optional. Etag to validate that the object is unchanged for a
   * read-modify-write operation.
   * An empty etag will cause an update to overwrite other changes.
   *
   * @generated from field: string etag = 7;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.billing.budgets.v1beta1.Budget.
 * Use `create(BudgetSchema)` to create a new message.
 */
export const BudgetSchema: GenMessage<Budget> = /*@__PURE__*/
  messageDesc(file_google_cloud_billing_budgets_v1beta1_budget_model, 0);

/**
 * The budgeted amount for each usage period.
 *
 * @generated from message google.cloud.billing.budgets.v1beta1.BudgetAmount
 */
export type BudgetAmount = Message<"google.cloud.billing.budgets.v1beta1.BudgetAmount"> & {
  /**
   * Specification for what amount to use as the budget.
   *
   * @generated from oneof google.cloud.billing.budgets.v1beta1.BudgetAmount.budget_amount
   */
  budgetAmount: {
    /**
     * A specified amount to use as the budget.
     * `currency_code` is optional. If specified when creating a budget, it must
     * match the currency of the billing account. If specified when updating a
     * budget, it must match the currency_code of the existing budget.
     * The `currency_code` is provided on output.
     *
     * @generated from field: google.type.Money specified_amount = 1;
     */
    value: Money;
    case: "specifiedAmount";
  } | {
    /**
     * Use the last period's actual spend as the budget for the present period.
     * LastPeriodAmount can only be set when the budget's time period is a
     * [Filter.calendar_period][google.cloud.billing.budgets.v1beta1.Filter.calendar_period].
     * It cannot be set in combination with
     * [Filter.custom_period][google.cloud.billing.budgets.v1beta1.Filter.custom_period].
     *
     * @generated from field: google.cloud.billing.budgets.v1beta1.LastPeriodAmount last_period_amount = 2;
     */
    value: LastPeriodAmount;
    case: "lastPeriodAmount";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.billing.budgets.v1beta1.BudgetAmount.
 * Use `create(BudgetAmountSchema)` to create a new message.
 */
export const BudgetAmountSchema: GenMessage<BudgetAmount> = /*@__PURE__*/
  messageDesc(file_google_cloud_billing_budgets_v1beta1_budget_model, 1);

/**
 * Describes a budget amount targeted to the last
 * [Filter.calendar_period][google.cloud.billing.budgets.v1beta1.Filter.calendar_period]
 * spend. At this time, the amount is automatically 100% of the last calendar
 * period's spend; that is, there are no other options yet.
 * Future configuration options will be described here (for example, configuring
 * a percentage of last period's spend).
 * LastPeriodAmount cannot be set for a budget configured with
 * a
 * [Filter.custom_period][google.cloud.billing.budgets.v1beta1.Filter.custom_period].
 *
 * @generated from message google.cloud.billing.budgets.v1beta1.LastPeriodAmount
 */
export type LastPeriodAmount = Message<"google.cloud.billing.budgets.v1beta1.LastPeriodAmount"> & {
};

/**
 * Describes the message google.cloud.billing.budgets.v1beta1.LastPeriodAmount.
 * Use `create(LastPeriodAmountSchema)` to create a new message.
 */
export const LastPeriodAmountSchema: GenMessage<LastPeriodAmount> = /*@__PURE__*/
  messageDesc(file_google_cloud_billing_budgets_v1beta1_budget_model, 2);

/**
 * ThresholdRule contains the definition of a threshold. Threshold rules define
 * the triggering events used to generate a budget notification email. When a
 * threshold is crossed (spend exceeds the specified percentages of the
 * budget), budget alert emails are sent to the email recipients you specify
 * in the
 * [NotificationsRule](#notificationsrule).
 *
 * Threshold rules also affect the fields included in the
 * [JSON data
 * object](https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format)
 * sent to a Pub/Sub topic.
 *
 * Threshold rules are _required_ if using email notifications.
 *
 * Threshold rules are _optional_ if only setting a
 * [`pubsubTopic` NotificationsRule](#NotificationsRule),
 * unless you want your JSON data object to include data about the thresholds
 * you set.
 *
 * For more information, see
 * [set budget threshold rules and
 * actions](https://cloud.google.com/billing/docs/how-to/budgets#budget-actions).
 *
 * @generated from message google.cloud.billing.budgets.v1beta1.ThresholdRule
 */
export type ThresholdRule = Message<"google.cloud.billing.budgets.v1beta1.ThresholdRule"> & {
  /**
   * Required. Send an alert when this threshold is exceeded.
   * This is a 1.0-based percentage, so 0.5 = 50%.
   * Validation: non-negative number.
   *
   * @generated from field: double threshold_percent = 1;
   */
  thresholdPercent: number;

  /**
   * Optional. The type of basis used to determine if spend has passed the
   * threshold. Behavior defaults to CURRENT_SPEND if not set.
   *
   * @generated from field: google.cloud.billing.budgets.v1beta1.ThresholdRule.Basis spend_basis = 2;
   */
  spendBasis: ThresholdRule_Basis;
};

/**
 * Describes the message google.cloud.billing.budgets.v1beta1.ThresholdRule.
 * Use `create(ThresholdRuleSchema)` to create a new message.
 */
export const ThresholdRuleSchema: GenMessage<ThresholdRule> = /*@__PURE__*/
  messageDesc(file_google_cloud_billing_budgets_v1beta1_budget_model, 3);

/**
 * The type of basis used to determine if spend has passed the threshold.
 *
 * @generated from enum google.cloud.billing.budgets.v1beta1.ThresholdRule.Basis
 */
export enum ThresholdRule_Basis {
  /**
   * Unspecified threshold basis.
   *
   * @generated from enum value: BASIS_UNSPECIFIED = 0;
   */
  BASIS_UNSPECIFIED = 0,

  /**
   * Use current spend as the basis for comparison against the threshold.
   *
   * @generated from enum value: CURRENT_SPEND = 1;
   */
  CURRENT_SPEND = 1,

  /**
   * Use forecasted spend for the period as the basis for comparison against
   * the threshold.
   * FORECASTED_SPEND can only be set when the budget's time period is a
   * [Filter.calendar_period][google.cloud.billing.budgets.v1beta1.Filter.calendar_period].
   * It cannot be set in combination with
   * [Filter.custom_period][google.cloud.billing.budgets.v1beta1.Filter.custom_period].
   *
   * @generated from enum value: FORECASTED_SPEND = 2;
   */
  FORECASTED_SPEND = 2,
}

/**
 * Describes the enum google.cloud.billing.budgets.v1beta1.ThresholdRule.Basis.
 */
export const ThresholdRule_BasisSchema: GenEnum<ThresholdRule_Basis> = /*@__PURE__*/
  enumDesc(file_google_cloud_billing_budgets_v1beta1_budget_model, 3, 0);

/**
 * AllUpdatesRule defines notifications that are sent based on budget spend
 * and thresholds.
 *
 * @generated from message google.cloud.billing.budgets.v1beta1.AllUpdatesRule
 */
export type AllUpdatesRule = Message<"google.cloud.billing.budgets.v1beta1.AllUpdatesRule"> & {
  /**
   * Optional. The name of the Pub/Sub topic where budget related messages will
   * be published, in the form `projects/{project_id}/topics/{topic_id}`.
   * Updates are sent at regular intervals to the topic. The topic needs to be
   * created before the budget is created; see
   * https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications
   * for more details.
   * Caller is expected to have
   * `pubsub.topics.setIamPolicy` permission on the topic when it's set for a
   * budget, otherwise, the API call will fail with PERMISSION_DENIED. See
   * https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#permissions_required_for_this_task
   * for more details on Pub/Sub roles and permissions.
   *
   * @generated from field: string pubsub_topic = 1;
   */
  pubsubTopic: string;

  /**
   * Optional. Required when
   * [AllUpdatesRule.pubsub_topic][google.cloud.billing.budgets.v1beta1.AllUpdatesRule.pubsub_topic]
   * is set. The schema version of the notification sent to
   * [AllUpdatesRule.pubsub_topic][google.cloud.billing.budgets.v1beta1.AllUpdatesRule.pubsub_topic].
   * Only "1.0" is accepted. It represents the JSON schema as defined in
   * https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format.
   *
   * @generated from field: string schema_version = 2;
   */
  schemaVersion: string;

  /**
   * Optional. Targets to send notifications to when a threshold is exceeded.
   * This is in addition to default recipients who have billing account IAM
   * roles. The value is the full REST resource name of a monitoring
   * notification channel with the form
   * `projects/{project_id}/notificationChannels/{channel_id}`. A maximum of 5
   * channels are allowed. See
   * https://cloud.google.com/billing/docs/how-to/budgets-notification-recipients
   * for more details.
   *
   * @generated from field: repeated string monitoring_notification_channels = 3;
   */
  monitoringNotificationChannels: string[];

  /**
   * Optional. When set to true, disables default notifications sent when a
   * threshold is exceeded. Default notifications are sent to those with Billing
   * Account Administrator and Billing Account User IAM roles for the target
   * account.
   *
   * @generated from field: bool disable_default_iam_recipients = 4;
   */
  disableDefaultIamRecipients: boolean;

  /**
   * Optional. When set to true, and when the budget has a single project
   * configured, notifications will be sent to project level recipients of that
   * project. This field will be ignored if the budget has multiple or no
   * project configured.
   *
   * Currently, project level recipients are the users with `Owner` role on a
   * cloud project.
   *
   * @generated from field: bool enable_project_level_recipients = 5;
   */
  enableProjectLevelRecipients: boolean;
};

/**
 * Describes the message google.cloud.billing.budgets.v1beta1.AllUpdatesRule.
 * Use `create(AllUpdatesRuleSchema)` to create a new message.
 */
export const AllUpdatesRuleSchema: GenMessage<AllUpdatesRule> = /*@__PURE__*/
  messageDesc(file_google_cloud_billing_budgets_v1beta1_budget_model, 4);

/**
 * A filter for a budget, limiting the scope of the cost to calculate.
 *
 * @generated from message google.cloud.billing.budgets.v1beta1.Filter
 */
export type Filter = Message<"google.cloud.billing.budgets.v1beta1.Filter"> & {
  /**
   * Optional. A set of projects of the form `projects/{project}`,
   * specifying that usage from only this set of projects should be
   * included in the budget. If omitted, the report will include all usage for
   * the billing account, regardless of which project the usage occurred on.
   *
   * @generated from field: repeated string projects = 1;
   */
  projects: string[];

  /**
   * Optional. A set of folder and organization names of the form
   * `folders/{folderId}` or `organizations/{organizationId}`, specifying that
   * usage from only this set of folders and organizations should be included in
   * the budget. If omitted, the budget includes all usage that the billing
   * account pays for. If the folder or organization contains projects that are
   * paid for by a different Cloud Billing account, the budget *doesn't* apply
   * to those projects.
   *
   * @generated from field: repeated string resource_ancestors = 2;
   */
  resourceAncestors: string[];

  /**
   * Optional. If
   * [Filter.credit_types_treatment][google.cloud.billing.budgets.v1beta1.Filter.credit_types_treatment]
   * is INCLUDE_SPECIFIED_CREDITS, this is a list of credit types to be
   * subtracted from gross cost to determine the spend for threshold
   * calculations. See [a list of acceptable credit type
   * values](https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#credits-type).
   *
   * If
   * [Filter.credit_types_treatment][google.cloud.billing.budgets.v1beta1.Filter.credit_types_treatment]
   * is **not** INCLUDE_SPECIFIED_CREDITS, this field must be empty.
   *
   * @generated from field: repeated string credit_types = 7;
   */
  creditTypes: string[];

  /**
   * Optional. If not set, default behavior is `INCLUDE_ALL_CREDITS`.
   *
   * @generated from field: google.cloud.billing.budgets.v1beta1.Filter.CreditTypesTreatment credit_types_treatment = 4;
   */
  creditTypesTreatment: Filter_CreditTypesTreatment;

  /**
   * Optional. A set of services of the form `services/{service_id}`,
   * specifying that usage from only this set of services should be
   * included in the budget. If omitted, the report will include usage for
   * all the services.
   * The service names are available through the Catalog API:
   * https://cloud.google.com/billing/v1/how-tos/catalog-api.
   *
   * @generated from field: repeated string services = 3;
   */
  services: string[];

  /**
   * Optional. A set of subaccounts of the form `billingAccounts/{account_id}`,
   * specifying that usage from only this set of subaccounts should be included
   * in the budget. If a subaccount is set to the name of the parent account,
   * usage from the parent account will be included. If omitted, the
   * report will include usage from the parent account and all
   * subaccounts, if they exist.
   *
   * @generated from field: repeated string subaccounts = 5;
   */
  subaccounts: string[];

  /**
   * Optional. A single label and value pair specifying that usage from only
   * this set of labeled resources should be included in the budget. If omitted,
   * the report will include all labeled and unlabeled usage.
   *
   * An object containing a single `"key": value` pair. Example: `{ "name":
   * "wrench" }`.
   *
   *  _Currently, multiple entries or multiple values per entry are not
   *  allowed._
   *
   * @generated from field: map<string, google.protobuf.ListValue> labels = 6;
   */
  labels: { [key: string]: ListValue };

  /**
   * Multiple options to choose the budget's time period, specifying that only
   * usage that occurs during this time period should be included in the budget.
   * If not set, the <code>usage_period</code> defaults to CalendarPeriod.MONTH.
   *
   * @generated from oneof google.cloud.billing.budgets.v1beta1.Filter.usage_period
   */
  usagePeriod: {
    /**
     * Optional. Specifies to track usage for recurring calendar period.
     * For example, assume that CalendarPeriod.QUARTER is set. The budget will
     * track usage from April 1 to June 30, when the current calendar month is
     * April, May, June. After that, it will track usage from July 1 to
     * September 30 when the current calendar month is July, August, September,
     * so on.
     *
     * @generated from field: google.cloud.billing.budgets.v1beta1.CalendarPeriod calendar_period = 8;
     */
    value: CalendarPeriod;
    case: "calendarPeriod";
  } | {
    /**
     * Optional. Specifies to track usage from any start date (required) to any
     * end date (optional). This time period is static, it does not recur.
     *
     * @generated from field: google.cloud.billing.budgets.v1beta1.CustomPeriod custom_period = 9;
     */
    value: CustomPeriod;
    case: "customPeriod";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.billing.budgets.v1beta1.Filter.
 * Use `create(FilterSchema)` to create a new message.
 */
export const FilterSchema: GenMessage<Filter> = /*@__PURE__*/
  messageDesc(file_google_cloud_billing_budgets_v1beta1_budget_model, 5);

/**
 * Specifies how credits are applied when determining the spend for
 * threshold calculations. Budgets track the total cost minus any applicable
 * selected credits.
 * [See the documentation for a list of credit
 * types](https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#credits-type).
 *
 * @generated from enum google.cloud.billing.budgets.v1beta1.Filter.CreditTypesTreatment
 */
export enum Filter_CreditTypesTreatment {
  /**
   * @generated from enum value: CREDIT_TYPES_TREATMENT_UNSPECIFIED = 0;
   */
  CREDIT_TYPES_TREATMENT_UNSPECIFIED = 0,

  /**
   * All types of credit are subtracted from the gross cost to determine the
   * spend for threshold calculations.
   *
   * @generated from enum value: INCLUDE_ALL_CREDITS = 1;
   */
  INCLUDE_ALL_CREDITS = 1,

  /**
   * All types of credit are added to the net cost to determine the spend for
   * threshold calculations.
   *
   * @generated from enum value: EXCLUDE_ALL_CREDITS = 2;
   */
  EXCLUDE_ALL_CREDITS = 2,

  /**
   * [Credit
   * types](https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#credits-type)
   * specified in the credit_types field are subtracted from the
   * gross cost to determine the spend for threshold calculations.
   *
   * @generated from enum value: INCLUDE_SPECIFIED_CREDITS = 3;
   */
  INCLUDE_SPECIFIED_CREDITS = 3,
}

/**
 * Describes the enum google.cloud.billing.budgets.v1beta1.Filter.CreditTypesTreatment.
 */
export const Filter_CreditTypesTreatmentSchema: GenEnum<Filter_CreditTypesTreatment> = /*@__PURE__*/
  enumDesc(file_google_cloud_billing_budgets_v1beta1_budget_model, 5, 0);

/**
 * All date times begin at 12 AM US and Canadian Pacific Time (UTC-8).
 *
 * @generated from message google.cloud.billing.budgets.v1beta1.CustomPeriod
 */
export type CustomPeriod = Message<"google.cloud.billing.budgets.v1beta1.CustomPeriod"> & {
  /**
   * Required. The start date must be after January 1, 2017.
   *
   * @generated from field: google.type.Date start_date = 1;
   */
  startDate?: Date;

  /**
   * Optional. The end date of the time period. Budgets with elapsed end date
   * won't be processed. If unset, specifies to track all usage incurred since
   * the start_date.
   *
   * @generated from field: google.type.Date end_date = 2;
   */
  endDate?: Date;
};

/**
 * Describes the message google.cloud.billing.budgets.v1beta1.CustomPeriod.
 * Use `create(CustomPeriodSchema)` to create a new message.
 */
export const CustomPeriodSchema: GenMessage<CustomPeriod> = /*@__PURE__*/
  messageDesc(file_google_cloud_billing_budgets_v1beta1_budget_model, 6);

/**
 * A `CalendarPeriod` represents the abstract concept of a time period that
 * has a canonical start. Grammatically, "the start of the current
 * `CalendarPeriod`". All calendar times begin at 12 AM US and Canadian
 * Pacific Time (UTC-8).
 *
 * @generated from enum google.cloud.billing.budgets.v1beta1.CalendarPeriod
 */
export enum CalendarPeriod {
  /**
   * Calendar period is unset. This is the default if the budget is for a
   * custom time period (CustomPeriod).
   *
   * @generated from enum value: CALENDAR_PERIOD_UNSPECIFIED = 0;
   */
  CALENDAR_PERIOD_UNSPECIFIED = 0,

  /**
   * A month. Month starts on the first day of each month, such as January 1,
   * February 1, March 1, and so on.
   *
   * @generated from enum value: MONTH = 1;
   */
  MONTH = 1,

  /**
   * A quarter. Quarters start on dates January 1, April 1, July 1, and October
   * 1 of each year.
   *
   * @generated from enum value: QUARTER = 2;
   */
  QUARTER = 2,

  /**
   * A year. Year starts on January 1.
   *
   * @generated from enum value: YEAR = 3;
   */
  YEAR = 3,
}

/**
 * Describes the enum google.cloud.billing.budgets.v1beta1.CalendarPeriod.
 */
export const CalendarPeriodSchema: GenEnum<CalendarPeriod> = /*@__PURE__*/
  enumDesc(file_google_cloud_billing_budgets_v1beta1_budget_model, 0);

