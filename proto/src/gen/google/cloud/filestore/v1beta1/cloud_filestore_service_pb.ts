// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/filestore/v1beta1/cloud_filestore_service.proto (package google.cloud.filestore.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import { file_google_cloud_common_operation_metadata } from "../../common/operation_metadata_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/filestore/v1beta1/cloud_filestore_service.proto.
 */
export const file_google_cloud_filestore_v1beta1_cloud_filestore_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_common_operation_metadata, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_protobuf_wrappers]);

/**
 * Network configuration for the instance.
 *
 * @generated from message google.cloud.filestore.v1beta1.NetworkConfig
 */
export type NetworkConfig = Message<"google.cloud.filestore.v1beta1.NetworkConfig"> & {
  /**
   * The name of the Google Compute Engine
   * [VPC network](https://cloud.google.com/vpc/docs/vpc) to which the
   * instance is connected.
   *
   * @generated from field: string network = 1;
   */
  network: string;

  /**
   * Internet protocol versions for which the instance has IP addresses
   * assigned. For this version, only MODE_IPV4 is supported.
   *
   * @generated from field: repeated google.cloud.filestore.v1beta1.NetworkConfig.AddressMode modes = 3;
   */
  modes: NetworkConfig_AddressMode[];

  /**
   * Optional, reserved_ip_range can have one of the following two types of
   * values.
   *
   * * CIDR range value when using DIRECT_PEERING connect mode.
   * * [Allocated IP address
   * range](https://cloud.google.com/compute/docs/ip-addresses/reserve-static-internal-ip-address)
   * when using PRIVATE_SERVICE_ACCESS connect mode.
   *
   * When the name of an allocated IP address range is specified, it must be one
   * of the ranges associated with the private service access connection.
   * When specified as a direct CIDR value, it must be a /29 CIDR block for
   * Basic tier, a /24 CIDR block for High Scale tier, or a /26 CIDR block for
   * Enterprise tier in one of the [internal IP address
   * ranges](https://www.arin.net/reference/research/statistics/address_filters/)
   * that identifies the range of IP addresses reserved for this instance. For
   * example, 10.0.0.0/29, 192.168.0.0/24, or 192.168.0.0/26, respectively. The
   * range you specify can't overlap with either existing subnets or assigned IP
   * address ranges for other Filestore instances in the selected VPC
   * network.
   *
   * @generated from field: string reserved_ip_range = 4;
   */
  reservedIpRange: string;

  /**
   * Output only. IPv4 addresses in the format
   * `{octet1}.{octet2}.{octet3}.{octet4}` or IPv6 addresses in the format
   * `{block1}:{block2}:{block3}:{block4}:{block5}:{block6}:{block7}:{block8}`.
   *
   * @generated from field: repeated string ip_addresses = 5;
   */
  ipAddresses: string[];

  /**
   * The network connect mode of the Filestore instance.
   * If not provided, the connect mode defaults to DIRECT_PEERING.
   *
   * @generated from field: google.cloud.filestore.v1beta1.NetworkConfig.ConnectMode connect_mode = 6;
   */
  connectMode: NetworkConfig_ConnectMode;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.NetworkConfig.
 * Use `create(NetworkConfigSchema)` to create a new message.
 */
export const NetworkConfigSchema: GenMessage<NetworkConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 0);

/**
 * Internet protocol versions supported by Filestore.
 *
 * @generated from enum google.cloud.filestore.v1beta1.NetworkConfig.AddressMode
 */
export enum NetworkConfig_AddressMode {
  /**
   * Internet protocol not set.
   *
   * @generated from enum value: ADDRESS_MODE_UNSPECIFIED = 0;
   */
  ADDRESS_MODE_UNSPECIFIED = 0,

  /**
   * Use the IPv4 internet protocol.
   *
   * @generated from enum value: MODE_IPV4 = 1;
   */
  MODE_IPV4 = 1,
}

/**
 * Describes the enum google.cloud.filestore.v1beta1.NetworkConfig.AddressMode.
 */
export const NetworkConfig_AddressModeSchema: GenEnum<NetworkConfig_AddressMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 0, 0);

/**
 * Available connection modes.
 *
 * @generated from enum google.cloud.filestore.v1beta1.NetworkConfig.ConnectMode
 */
export enum NetworkConfig_ConnectMode {
  /**
   * ConnectMode not set.
   *
   * @generated from enum value: CONNECT_MODE_UNSPECIFIED = 0;
   */
  CONNECT_MODE_UNSPECIFIED = 0,

  /**
   * Connect via direct peering to the Filestore service.
   *
   * @generated from enum value: DIRECT_PEERING = 1;
   */
  DIRECT_PEERING = 1,

  /**
   * Connect to your Filestore instance using Private Service
   * Access. Private services access provides an IP address range for multiple
   * Google Cloud services, including Filestore.
   *
   * @generated from enum value: PRIVATE_SERVICE_ACCESS = 2;
   */
  PRIVATE_SERVICE_ACCESS = 2,
}

/**
 * Describes the enum google.cloud.filestore.v1beta1.NetworkConfig.ConnectMode.
 */
export const NetworkConfig_ConnectModeSchema: GenEnum<NetworkConfig_ConnectMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 0, 1);

/**
 * File share configuration for the instance.
 *
 * @generated from message google.cloud.filestore.v1beta1.FileShareConfig
 */
export type FileShareConfig = Message<"google.cloud.filestore.v1beta1.FileShareConfig"> & {
  /**
   * Required. The name of the file share. Must use 1-16 characters for the
   * basic service tier and 1-63 characters for all other service tiers.
   * Must use lowercase letters, numbers, or underscores `[a-z0-9_]`. Must
   * start with a letter. Immutable.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * File share capacity in gigabytes (GB).
   * Filestore defines 1 GB as 1024^3 bytes.
   *
   * @generated from field: int64 capacity_gb = 2;
   */
  capacityGb: bigint;

  /**
   * The source that this file share has been restored from. Empty if the file
   * share is created from scratch.
   *
   * @generated from oneof google.cloud.filestore.v1beta1.FileShareConfig.source
   */
  source: {
    /**
     * The resource name of the backup, in the format
     * `projects/{project_id}/locations/{location_id}/backups/{backup_id}`, that
     * this file share has been restored from.
     *
     * @generated from field: string source_backup = 9;
     */
    value: string;
    case: "sourceBackup";
  } | { case: undefined; value?: undefined };

  /**
   * Nfs Export Options.
   * There is a limit of 10 export options per file share.
   *
   * @generated from field: repeated google.cloud.filestore.v1beta1.NfsExportOptions nfs_export_options = 8;
   */
  nfsExportOptions: NfsExportOptions[];
};

/**
 * Describes the message google.cloud.filestore.v1beta1.FileShareConfig.
 * Use `create(FileShareConfigSchema)` to create a new message.
 */
export const FileShareConfigSchema: GenMessage<FileShareConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 1);

/**
 * NFS export options specifications.
 *
 * @generated from message google.cloud.filestore.v1beta1.NfsExportOptions
 */
export type NfsExportOptions = Message<"google.cloud.filestore.v1beta1.NfsExportOptions"> & {
  /**
   * List of either an IPv4 addresses in the format
   * `{octet1}.{octet2}.{octet3}.{octet4}` or CIDR ranges in the format
   * `{octet1}.{octet2}.{octet3}.{octet4}/{mask size}` which may mount the
   * file share.
   * Overlapping IP ranges are not allowed, both within and across
   * NfsExportOptions. An error will be returned.
   * The limit is 64 IP ranges/addresses for each FileShareConfig among all
   * NfsExportOptions.
   *
   * @generated from field: repeated string ip_ranges = 1;
   */
  ipRanges: string[];

  /**
   * Either READ_ONLY, for allowing only read requests on the exported
   * directory, or READ_WRITE, for allowing both read and write requests.
   * The default is READ_WRITE.
   *
   * @generated from field: google.cloud.filestore.v1beta1.NfsExportOptions.AccessMode access_mode = 2;
   */
  accessMode: NfsExportOptions_AccessMode;

  /**
   * Either NO_ROOT_SQUASH, for allowing root access on the exported directory,
   * or ROOT_SQUASH, for not allowing root access. The default is
   * NO_ROOT_SQUASH.
   *
   * @generated from field: google.cloud.filestore.v1beta1.NfsExportOptions.SquashMode squash_mode = 3;
   */
  squashMode: NfsExportOptions_SquashMode;

  /**
   * An integer representing the anonymous user id with a default value of
   * 65534.
   * Anon_uid may only be set with squash_mode of ROOT_SQUASH.  An error will be
   * returned if this field is specified for other squash_mode settings.
   *
   * @generated from field: int64 anon_uid = 4;
   */
  anonUid: bigint;

  /**
   * An integer representing the anonymous group id with a default value of
   * 65534.
   * Anon_gid may only be set with squash_mode of ROOT_SQUASH.  An error will be
   * returned if this field is specified for other squash_mode settings.
   *
   * @generated from field: int64 anon_gid = 5;
   */
  anonGid: bigint;

  /**
   * The security flavors allowed for mount operations.
   * The default is AUTH_SYS.
   *
   * @generated from field: repeated google.cloud.filestore.v1beta1.NfsExportOptions.SecurityFlavor security_flavors = 6;
   */
  securityFlavors: NfsExportOptions_SecurityFlavor[];
};

/**
 * Describes the message google.cloud.filestore.v1beta1.NfsExportOptions.
 * Use `create(NfsExportOptionsSchema)` to create a new message.
 */
export const NfsExportOptionsSchema: GenMessage<NfsExportOptions> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 2);

/**
 * The access mode.
 *
 * @generated from enum google.cloud.filestore.v1beta1.NfsExportOptions.AccessMode
 */
export enum NfsExportOptions_AccessMode {
  /**
   * AccessMode not set.
   *
   * @generated from enum value: ACCESS_MODE_UNSPECIFIED = 0;
   */
  ACCESS_MODE_UNSPECIFIED = 0,

  /**
   * The client can only read the file share.
   *
   * @generated from enum value: READ_ONLY = 1;
   */
  READ_ONLY = 1,

  /**
   * The client can read and write the file share (default).
   *
   * @generated from enum value: READ_WRITE = 2;
   */
  READ_WRITE = 2,
}

/**
 * Describes the enum google.cloud.filestore.v1beta1.NfsExportOptions.AccessMode.
 */
export const NfsExportOptions_AccessModeSchema: GenEnum<NfsExportOptions_AccessMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 2, 0);

/**
 * The squash mode.
 *
 * @generated from enum google.cloud.filestore.v1beta1.NfsExportOptions.SquashMode
 */
export enum NfsExportOptions_SquashMode {
  /**
   * SquashMode not set.
   *
   * @generated from enum value: SQUASH_MODE_UNSPECIFIED = 0;
   */
  SQUASH_MODE_UNSPECIFIED = 0,

  /**
   * The Root user has root access to the file share (default).
   *
   * @generated from enum value: NO_ROOT_SQUASH = 1;
   */
  NO_ROOT_SQUASH = 1,

  /**
   * The Root user has squashed access to the anonymous uid/gid.
   *
   * @generated from enum value: ROOT_SQUASH = 2;
   */
  ROOT_SQUASH = 2,
}

/**
 * Describes the enum google.cloud.filestore.v1beta1.NfsExportOptions.SquashMode.
 */
export const NfsExportOptions_SquashModeSchema: GenEnum<NfsExportOptions_SquashMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 2, 1);

/**
 * The security flavor. In general, a "flavor" represents a designed process
 * or system. A "security flavor" is a system designed for the purpose of
 * authenticating a data originator (client), recipient (server), and the data
 * they transmit between one another.
 *
 * @generated from enum google.cloud.filestore.v1beta1.NfsExportOptions.SecurityFlavor
 */
export enum NfsExportOptions_SecurityFlavor {
  /**
   * SecurityFlavor not set.
   *
   * @generated from enum value: SECURITY_FLAVOR_UNSPECIFIED = 0;
   */
  SECURITY_FLAVOR_UNSPECIFIED = 0,

  /**
   * The user's UNIX user-id and group-ids are transferred "in the clear" (not
   * encrypted) on the network, unauthenticated by the NFS server (default).
   *
   * @generated from enum value: AUTH_SYS = 1;
   */
  AUTH_SYS = 1,

  /**
   * End-user authentication through Kerberos V5.
   *
   * @generated from enum value: KRB5 = 2;
   */
  KRB5 = 2,

  /**
   * krb5 plus integrity protection (data packets are tamper proof).
   *
   * @generated from enum value: KRB5I = 3;
   */
  KRB5I = 3,

  /**
   * krb5i plus privacy protection (data packets are tamper proof and
   * encrypted).
   *
   * @generated from enum value: KRB5P = 4;
   */
  KRB5P = 4,
}

/**
 * Describes the enum google.cloud.filestore.v1beta1.NfsExportOptions.SecurityFlavor.
 */
export const NfsExportOptions_SecurityFlavorSchema: GenEnum<NfsExportOptions_SecurityFlavor> = /*@__PURE__*/
  enumDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 2, 2);

/**
 * ManagedActiveDirectoryConfig contains all the parameters for connecting
 * to Managed Active Directory.
 *
 * @generated from message google.cloud.filestore.v1beta1.ManagedActiveDirectoryConfig
 */
export type ManagedActiveDirectoryConfig = Message<"google.cloud.filestore.v1beta1.ManagedActiveDirectoryConfig"> & {
  /**
   * Fully qualified domain name.
   *
   * @generated from field: string domain = 1;
   */
  domain: string;

  /**
   * The computer name is used as a prefix to the mount remote target.
   * Example: if the computer_name is `my-computer`, the mount command will
   * look like: `$mount -o vers=4,sec=krb5
   * my-computer.filestore.<domain>:<share>`.
   *
   * @generated from field: string computer = 2;
   */
  computer: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.ManagedActiveDirectoryConfig.
 * Use `create(ManagedActiveDirectoryConfigSchema)` to create a new message.
 */
export const ManagedActiveDirectoryConfigSchema: GenMessage<ManagedActiveDirectoryConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 3);

/**
 * Directory Services configuration for Kerberos-based authentication.
 *
 * @generated from message google.cloud.filestore.v1beta1.DirectoryServicesConfig
 */
export type DirectoryServicesConfig = Message<"google.cloud.filestore.v1beta1.DirectoryServicesConfig"> & {
  /**
   * @generated from oneof google.cloud.filestore.v1beta1.DirectoryServicesConfig.config
   */
  config: {
    /**
     * Configuration for Managed Service for Microsoft Active Directory.
     *
     * @generated from field: google.cloud.filestore.v1beta1.ManagedActiveDirectoryConfig managed_active_directory = 1;
     */
    value: ManagedActiveDirectoryConfig;
    case: "managedActiveDirectory";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.filestore.v1beta1.DirectoryServicesConfig.
 * Use `create(DirectoryServicesConfigSchema)` to create a new message.
 */
export const DirectoryServicesConfigSchema: GenMessage<DirectoryServicesConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 4);

/**
 * A Filestore instance.
 *
 * @generated from message google.cloud.filestore.v1beta1.Instance
 */
export type Instance = Message<"google.cloud.filestore.v1beta1.Instance"> & {
  /**
   * Output only. The resource name of the instance, in the format
   * `projects/{project_id}/locations/{location_id}/instances/{instance_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The description of the instance (2048 characters or less).
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Output only. The instance state.
   *
   * @generated from field: google.cloud.filestore.v1beta1.Instance.State state = 5;
   */
  state: Instance_State;

  /**
   * Output only. Additional information about the instance state, if available.
   *
   * @generated from field: string status_message = 6;
   */
  statusMessage: string;

  /**
   * Output only. The time when the instance was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 7;
   */
  createTime?: Timestamp;

  /**
   * The service tier of the instance.
   *
   * @generated from field: google.cloud.filestore.v1beta1.Instance.Tier tier = 8;
   */
  tier: Instance_Tier;

  /**
   * Resource labels to represent user provided metadata.
   *
   * @generated from field: map<string, string> labels = 9;
   */
  labels: { [key: string]: string };

  /**
   * File system shares on the instance.
   * For this version, only a single file share is supported.
   *
   * @generated from field: repeated google.cloud.filestore.v1beta1.FileShareConfig file_shares = 10;
   */
  fileShares: FileShareConfig[];

  /**
   * VPC networks to which the instance is connected.
   * For this version, only a single network is supported.
   *
   * @generated from field: repeated google.cloud.filestore.v1beta1.NetworkConfig networks = 11;
   */
  networks: NetworkConfig[];

  /**
   * Server-specified ETag for the instance resource to prevent simultaneous
   * updates from overwriting each other.
   *
   * @generated from field: string etag = 12;
   */
  etag: string;

  /**
   * Output only. Reserved for future use.
   *
   * @generated from field: google.protobuf.BoolValue satisfies_pzs = 13;
   */
  satisfiesPzs?: boolean;

  /**
   * Output only. Reserved for future use.
   *
   * @generated from field: bool satisfies_pzi = 26;
   */
  satisfiesPzi: boolean;

  /**
   * KMS key name used for data encryption.
   *
   * @generated from field: string kms_key_name = 14;
   */
  kmsKeyName: string;

  /**
   * Output only. Field indicates all the reasons the instance is in "SUSPENDED"
   * state.
   *
   * @generated from field: repeated google.cloud.filestore.v1beta1.Instance.SuspensionReason suspension_reasons = 15;
   */
  suspensionReasons: Instance_SuspensionReason[];

  /**
   * Output only. The max capacity of the instance.
   *
   * @generated from field: int64 max_capacity_gb = 16;
   */
  maxCapacityGb: bigint;

  /**
   * Output only. The increase/decrease capacity step size.
   *
   * @generated from field: int64 capacity_step_size_gb = 17;
   */
  capacityStepSizeGb: bigint;

  /**
   * The max number of shares allowed.
   *
   * @generated from field: int64 max_share_count = 18;
   */
  maxShareCount: bigint;

  /**
   * The storage capacity of the instance in gigabytes (GB = 1024^3 bytes).
   * This capacity can be increased up to `max_capacity_gb` GB in multipliers
   * of `capacity_step_size_gb` GB.
   *
   * @generated from field: int64 capacity_gb = 19;
   */
  capacityGb: bigint;

  /**
   * Indicates whether this instance uses a multi-share configuration with which
   * it can have more than one file-share or none at all. File-shares are added,
   * updated and removed through the separate file-share APIs.
   *
   * @generated from field: bool multi_share_enabled = 20;
   */
  multiShareEnabled: boolean;

  /**
   * Immutable. The protocol indicates the access protocol for all shares in the
   * instance. This field is immutable and it cannot be changed after the
   * instance has been created. Default value: `NFS_V3`.
   *
   * @generated from field: google.cloud.filestore.v1beta1.Instance.FileProtocol protocol = 21;
   */
  protocol: Instance_FileProtocol;

  /**
   * Directory Services configuration for Kerberos-based authentication.
   * Should only be set if protocol is "NFS_V4_1".
   *
   * @generated from field: google.cloud.filestore.v1beta1.DirectoryServicesConfig directory_services = 24;
   */
  directoryServices?: DirectoryServicesConfig;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.Instance.
 * Use `create(InstanceSchema)` to create a new message.
 */
export const InstanceSchema: GenMessage<Instance> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 5);

/**
 * The instance state.
 *
 * @generated from enum google.cloud.filestore.v1beta1.Instance.State
 */
export enum Instance_State {
  /**
   * State not set.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The instance is being created.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The instance is available for use.
   *
   * @generated from enum value: READY = 2;
   */
  READY = 2,

  /**
   * Work is being done on the instance. You can get further details from the
   * `statusMessage` field of the `Instance` resource.
   *
   * @generated from enum value: REPAIRING = 3;
   */
  REPAIRING = 3,

  /**
   * The instance is shutting down.
   *
   * @generated from enum value: DELETING = 4;
   */
  DELETING = 4,

  /**
   * The instance is experiencing an issue and might be unusable. You can get
   * further details from the `statusMessage` field of the `Instance`
   * resource.
   *
   * @generated from enum value: ERROR = 6;
   */
  ERROR = 6,

  /**
   * The instance is restoring a snapshot or backup to an existing file share
   * and may be unusable during this time.
   *
   * @generated from enum value: RESTORING = 7;
   */
  RESTORING = 7,

  /**
   * The instance is suspended. You can get further details from
   * the `suspension_reasons` field of the `Instance` resource.
   *
   * @generated from enum value: SUSPENDED = 8;
   */
  SUSPENDED = 8,

  /**
   * The instance is reverting to a snapshot.
   *
   * @generated from enum value: REVERTING = 9;
   */
  REVERTING = 9,

  /**
   * The instance is in the process of becoming suspended.
   *
   * @generated from enum value: SUSPENDING = 10;
   */
  SUSPENDING = 10,

  /**
   * The instance is in the process of becoming active.
   *
   * @generated from enum value: RESUMING = 11;
   */
  RESUMING = 11,
}

/**
 * Describes the enum google.cloud.filestore.v1beta1.Instance.State.
 */
export const Instance_StateSchema: GenEnum<Instance_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 5, 0);

/**
 * Available service tiers.
 *
 * @generated from enum google.cloud.filestore.v1beta1.Instance.Tier
 */
export enum Instance_Tier {
  /**
   * Not set.
   *
   * @generated from enum value: TIER_UNSPECIFIED = 0;
   */
  TIER_UNSPECIFIED = 0,

  /**
   * STANDARD tier. BASIC_HDD is the preferred term for this tier.
   *
   * @generated from enum value: STANDARD = 1;
   */
  STANDARD = 1,

  /**
   * PREMIUM tier. BASIC_SSD is the preferred term for this tier.
   *
   * @generated from enum value: PREMIUM = 2;
   */
  PREMIUM = 2,

  /**
   * BASIC instances offer a maximum capacity of 63.9 TB.
   * BASIC_HDD is an alias for STANDARD Tier, offering economical
   * performance backed by HDD.
   *
   * @generated from enum value: BASIC_HDD = 3;
   */
  BASIC_HDD = 3,

  /**
   * BASIC instances offer a maximum capacity of 63.9 TB.
   * BASIC_SSD is an alias for PREMIUM Tier, and offers improved
   * performance backed by SSD.
   *
   * @generated from enum value: BASIC_SSD = 4;
   */
  BASIC_SSD = 4,

  /**
   * HIGH_SCALE instances offer expanded capacity and performance scaling
   * capabilities.
   *
   * @generated from enum value: HIGH_SCALE_SSD = 6;
   */
  HIGH_SCALE_SSD = 6,

  /**
   * ENTERPRISE instances offer the features and availability needed for
   * mission-critical workloads.
   *
   * @generated from enum value: ENTERPRISE = 7;
   */
  ENTERPRISE = 7,

  /**
   * ZONAL instances offer expanded capacity and performance scaling
   * capabilities.
   *
   * @generated from enum value: ZONAL = 8;
   */
  ZONAL = 8,

  /**
   * REGIONAL instances offer the features and availability needed for
   * mission-critical workloads.
   *
   * @generated from enum value: REGIONAL = 9;
   */
  REGIONAL = 9,
}

/**
 * Describes the enum google.cloud.filestore.v1beta1.Instance.Tier.
 */
export const Instance_TierSchema: GenEnum<Instance_Tier> = /*@__PURE__*/
  enumDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 5, 1);

/**
 * SuspensionReason contains the possible reasons for a suspension.
 *
 * @generated from enum google.cloud.filestore.v1beta1.Instance.SuspensionReason
 */
export enum Instance_SuspensionReason {
  /**
   * Not set.
   *
   * @generated from enum value: SUSPENSION_REASON_UNSPECIFIED = 0;
   */
  SUSPENSION_REASON_UNSPECIFIED = 0,

  /**
   * The KMS key used by the instance is either revoked or denied access to.
   *
   * @generated from enum value: KMS_KEY_ISSUE = 1;
   */
  KMS_KEY_ISSUE = 1,
}

/**
 * Describes the enum google.cloud.filestore.v1beta1.Instance.SuspensionReason.
 */
export const Instance_SuspensionReasonSchema: GenEnum<Instance_SuspensionReason> = /*@__PURE__*/
  enumDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 5, 2);

/**
 * File access protocol.
 *
 * @generated from enum google.cloud.filestore.v1beta1.Instance.FileProtocol
 */
export enum Instance_FileProtocol {
  /**
   * FILE_PROTOCOL_UNSPECIFIED serves a "not set" default value when
   * a FileProtocol is a separate field in a message.
   *
   * @generated from enum value: FILE_PROTOCOL_UNSPECIFIED = 0;
   */
  FILE_PROTOCOL_UNSPECIFIED = 0,

  /**
   * NFS 3.0.
   *
   * @generated from enum value: NFS_V3 = 1;
   */
  NFS_V3 = 1,

  /**
   * NFS 4.1.
   *
   * @generated from enum value: NFS_V4_1 = 2;
   */
  NFS_V4_1 = 2,
}

/**
 * Describes the enum google.cloud.filestore.v1beta1.Instance.FileProtocol.
 */
export const Instance_FileProtocolSchema: GenEnum<Instance_FileProtocol> = /*@__PURE__*/
  enumDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 5, 3);

/**
 * CreateInstanceRequest creates an instance.
 *
 * @generated from message google.cloud.filestore.v1beta1.CreateInstanceRequest
 */
export type CreateInstanceRequest = Message<"google.cloud.filestore.v1beta1.CreateInstanceRequest"> & {
  /**
   * Required. The instance's project and location, in the format
   * `projects/{project_id}/locations/{location}`. In Filestore,
   * locations map to Google Cloud zones, for example **us-west1-b**.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ID of the instance to create.
   * The ID must be unique within the specified project and location.
   *
   * This value must start with a lowercase letter followed by up to 62
   * lowercase letters, numbers, or hyphens, and cannot end with a hyphen.
   *
   * @generated from field: string instance_id = 2;
   */
  instanceId: string;

  /**
   * Required. An [instance resource][google.cloud.filestore.v1beta1.Instance]
   *
   * @generated from field: google.cloud.filestore.v1beta1.Instance instance = 3;
   */
  instance?: Instance;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.CreateInstanceRequest.
 * Use `create(CreateInstanceRequestSchema)` to create a new message.
 */
export const CreateInstanceRequestSchema: GenMessage<CreateInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 6);

/**
 * GetInstanceRequest gets the state of an instance.
 *
 * @generated from message google.cloud.filestore.v1beta1.GetInstanceRequest
 */
export type GetInstanceRequest = Message<"google.cloud.filestore.v1beta1.GetInstanceRequest"> & {
  /**
   * Required. The instance resource name, in the format
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.GetInstanceRequest.
 * Use `create(GetInstanceRequestSchema)` to create a new message.
 */
export const GetInstanceRequestSchema: GenMessage<GetInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 7);

/**
 * UpdateInstanceRequest updates the settings of an instance.
 *
 * @generated from message google.cloud.filestore.v1beta1.UpdateInstanceRequest
 */
export type UpdateInstanceRequest = Message<"google.cloud.filestore.v1beta1.UpdateInstanceRequest"> & {
  /**
   * Required. Mask of fields to update.  At least one path must be supplied in
   * this field.  The elements of the repeated paths field may only include
   * these fields:
   *
   * * "description"
   * * "file_shares"
   * * "labels"
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. Only fields specified in update_mask are updated.
   *
   * @generated from field: google.cloud.filestore.v1beta1.Instance instance = 2;
   */
  instance?: Instance;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.UpdateInstanceRequest.
 * Use `create(UpdateInstanceRequestSchema)` to create a new message.
 */
export const UpdateInstanceRequestSchema: GenMessage<UpdateInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 8);

/**
 * RestoreInstanceRequest restores an existing instance's file share from a
 * backup.
 *
 * @generated from message google.cloud.filestore.v1beta1.RestoreInstanceRequest
 */
export type RestoreInstanceRequest = Message<"google.cloud.filestore.v1beta1.RestoreInstanceRequest"> & {
  /**
   * Required. The resource name of the instance, in the format
   * `projects/{project_id}/locations/{location_id}/instances/{instance_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Name of the file share in the Filestore instance that the backup
   * is being restored to.
   *
   * @generated from field: string file_share = 2;
   */
  fileShare: string;

  /**
   * @generated from oneof google.cloud.filestore.v1beta1.RestoreInstanceRequest.source
   */
  source: {
    /**
     * The resource name of the snapshot, in the format
     * `projects/{project_id}/locations/{location_id}/snapshots/{snapshot_id}`.
     *
     * @generated from field: string source_snapshot = 3 [deprecated = true];
     * @deprecated
     */
    value: string;
    case: "sourceSnapshot";
  } | {
    /**
     * The resource name of the backup, in the format
     * `projects/{project_id}/locations/{location_id}/backups/{backup_id}`.
     *
     * @generated from field: string source_backup = 4;
     */
    value: string;
    case: "sourceBackup";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.filestore.v1beta1.RestoreInstanceRequest.
 * Use `create(RestoreInstanceRequestSchema)` to create a new message.
 */
export const RestoreInstanceRequestSchema: GenMessage<RestoreInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 9);

/**
 * RevertInstanceRequest reverts the given instance's file share to the
 * specified snapshot.
 *
 * @generated from message google.cloud.filestore.v1beta1.RevertInstanceRequest
 */
export type RevertInstanceRequest = Message<"google.cloud.filestore.v1beta1.RevertInstanceRequest"> & {
  /**
   * Required.
   * `projects/{project_id}/locations/{location_id}/instances/{instance_id}`.
   * The resource name of the instance, in the format
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The snapshot resource ID, in the format 'my-snapshot', where the
   * specified ID is the {snapshot_id} of the fully qualified name like
   * `projects/{project_id}/locations/{location_id}/instances/{instance_id}/snapshots/{snapshot_id}`
   *
   * @generated from field: string target_snapshot_id = 2;
   */
  targetSnapshotId: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.RevertInstanceRequest.
 * Use `create(RevertInstanceRequestSchema)` to create a new message.
 */
export const RevertInstanceRequestSchema: GenMessage<RevertInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 10);

/**
 * DeleteInstanceRequest deletes an instance.
 *
 * @generated from message google.cloud.filestore.v1beta1.DeleteInstanceRequest
 */
export type DeleteInstanceRequest = Message<"google.cloud.filestore.v1beta1.DeleteInstanceRequest"> & {
  /**
   * Required. The instance resource name, in the format
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * If set to true, any snapshots of the instance will also be deleted.
   * (Otherwise, the request will only work if the instance has no snapshots.)
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.DeleteInstanceRequest.
 * Use `create(DeleteInstanceRequestSchema)` to create a new message.
 */
export const DeleteInstanceRequestSchema: GenMessage<DeleteInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 11);

/**
 * ListInstancesRequest lists instances.
 *
 * @generated from message google.cloud.filestore.v1beta1.ListInstancesRequest
 */
export type ListInstancesRequest = Message<"google.cloud.filestore.v1beta1.ListInstancesRequest"> & {
  /**
   * Required. The project and location for which to retrieve instance
   * information, in the format `projects/{project_id}/locations/{location}`. In
   * Cloud Filestore, locations map to Google Cloud zones, for example
   * **us-west1-b**. To retrieve instance information for all locations, use "-"
   * for the
   * `{location}` value.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value to use if there are additional
   * results to retrieve for this list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Sort results. Supported values are "name", "name desc" or "" (unsorted).
   *
   * @generated from field: string order_by = 4;
   */
  orderBy: string;

  /**
   * List filter.
   *
   * @generated from field: string filter = 5;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.ListInstancesRequest.
 * Use `create(ListInstancesRequestSchema)` to create a new message.
 */
export const ListInstancesRequestSchema: GenMessage<ListInstancesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 12);

/**
 * ListInstancesResponse is the result of ListInstancesRequest.
 *
 * @generated from message google.cloud.filestore.v1beta1.ListInstancesResponse
 */
export type ListInstancesResponse = Message<"google.cloud.filestore.v1beta1.ListInstancesResponse"> & {
  /**
   * A list of instances in the project for the specified location.
   *
   * If the `{location}` value in the request is "-", the response contains a
   * list of instances from all locations. If any location is unreachable, the
   * response will only return instances in reachable locations and the
   * "unreachable" field will be populated with a list of unreachable locations.
   *
   * @generated from field: repeated google.cloud.filestore.v1beta1.Instance instances = 1;
   */
  instances: Instance[];

  /**
   * The token you can use to retrieve the next page of results. Not returned
   * if there are no more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.filestore.v1beta1.ListInstancesResponse.
 * Use `create(ListInstancesResponseSchema)` to create a new message.
 */
export const ListInstancesResponseSchema: GenMessage<ListInstancesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 13);

/**
 * A Filestore snapshot.
 *
 * @generated from message google.cloud.filestore.v1beta1.Snapshot
 */
export type Snapshot = Message<"google.cloud.filestore.v1beta1.Snapshot"> & {
  /**
   * Output only. The resource name of the snapshot, in the format
   * `projects/{project_id}/locations/{location_id}/instances/{instance_id}/snapshots/{snapshot_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A description of the snapshot with 2048 characters or less.
   * Requests with longer descriptions will be rejected.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Output only. The snapshot state.
   *
   * @generated from field: google.cloud.filestore.v1beta1.Snapshot.State state = 3;
   */
  state: Snapshot_State;

  /**
   * Output only. The time when the snapshot was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Resource labels to represent user provided metadata.
   *
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };

  /**
   * Output only. The amount of bytes needed to allocate a full copy of the
   * snapshot content
   *
   * @generated from field: int64 filesystem_used_bytes = 12;
   */
  filesystemUsedBytes: bigint;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.Snapshot.
 * Use `create(SnapshotSchema)` to create a new message.
 */
export const SnapshotSchema: GenMessage<Snapshot> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 14);

/**
 * The snapshot state.
 *
 * @generated from enum google.cloud.filestore.v1beta1.Snapshot.State
 */
export enum Snapshot_State {
  /**
   * State not set.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Snapshot is being created.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * Snapshot is available for use.
   *
   * @generated from enum value: READY = 3;
   */
  READY = 3,

  /**
   * Snapshot is being deleted.
   *
   * @generated from enum value: DELETING = 4;
   */
  DELETING = 4,
}

/**
 * Describes the enum google.cloud.filestore.v1beta1.Snapshot.State.
 */
export const Snapshot_StateSchema: GenEnum<Snapshot_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 14, 0);

/**
 * CreateSnapshotRequest creates a snapshot.
 *
 * @generated from message google.cloud.filestore.v1beta1.CreateSnapshotRequest
 */
export type CreateSnapshotRequest = Message<"google.cloud.filestore.v1beta1.CreateSnapshotRequest"> & {
  /**
   * Required. The Filestore Instance to create the snapshots of, in the format
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ID to use for the snapshot.
   * The ID must be unique within the specified instance.
   *
   * This value must start with a lowercase letter followed by up to 62
   * lowercase letters, numbers, or hyphens, and cannot end with a hyphen.
   *
   * @generated from field: string snapshot_id = 2;
   */
  snapshotId: string;

  /**
   * Required. A snapshot resource
   *
   * @generated from field: google.cloud.filestore.v1beta1.Snapshot snapshot = 3;
   */
  snapshot?: Snapshot;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.CreateSnapshotRequest.
 * Use `create(CreateSnapshotRequestSchema)` to create a new message.
 */
export const CreateSnapshotRequestSchema: GenMessage<CreateSnapshotRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 15);

/**
 * GetSnapshotRequest gets the state of a snapshot.
 *
 * @generated from message google.cloud.filestore.v1beta1.GetSnapshotRequest
 */
export type GetSnapshotRequest = Message<"google.cloud.filestore.v1beta1.GetSnapshotRequest"> & {
  /**
   * Required. The snapshot resource name, in the format
   * `projects/{project_id}/locations/{location}/instances/{instance_id}/snapshots/{snapshot_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.GetSnapshotRequest.
 * Use `create(GetSnapshotRequestSchema)` to create a new message.
 */
export const GetSnapshotRequestSchema: GenMessage<GetSnapshotRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 16);

/**
 * DeleteSnapshotRequest deletes a snapshot.
 *
 * @generated from message google.cloud.filestore.v1beta1.DeleteSnapshotRequest
 */
export type DeleteSnapshotRequest = Message<"google.cloud.filestore.v1beta1.DeleteSnapshotRequest"> & {
  /**
   * Required. The snapshot resource name, in the format
   * `projects/{project_id}/locations/{location}/instances/{instance_id}/snapshots/{snapshot_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.DeleteSnapshotRequest.
 * Use `create(DeleteSnapshotRequestSchema)` to create a new message.
 */
export const DeleteSnapshotRequestSchema: GenMessage<DeleteSnapshotRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 17);

/**
 * UpdateSnapshotRequest updates description and/or labels for a snapshot.
 *
 * @generated from message google.cloud.filestore.v1beta1.UpdateSnapshotRequest
 */
export type UpdateSnapshotRequest = Message<"google.cloud.filestore.v1beta1.UpdateSnapshotRequest"> & {
  /**
   * Required. Mask of fields to update.  At least one path must be supplied in
   * this field.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. A snapshot resource
   *
   * @generated from field: google.cloud.filestore.v1beta1.Snapshot snapshot = 2;
   */
  snapshot?: Snapshot;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.UpdateSnapshotRequest.
 * Use `create(UpdateSnapshotRequestSchema)` to create a new message.
 */
export const UpdateSnapshotRequestSchema: GenMessage<UpdateSnapshotRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 18);

/**
 * ListSnapshotsRequest lists snapshots.
 *
 * @generated from message google.cloud.filestore.v1beta1.ListSnapshotsRequest
 */
export type ListSnapshotsRequest = Message<"google.cloud.filestore.v1beta1.ListSnapshotsRequest"> & {
  /**
   * Required. The instance for which to retrieve snapshot information,
   * in the format
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value to use if there are additional
   * results to retrieve for this list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Sort results. Supported values are "name", "name desc" or "" (unsorted).
   *
   * @generated from field: string order_by = 4;
   */
  orderBy: string;

  /**
   * List filter.
   *
   * @generated from field: string filter = 5;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.ListSnapshotsRequest.
 * Use `create(ListSnapshotsRequestSchema)` to create a new message.
 */
export const ListSnapshotsRequestSchema: GenMessage<ListSnapshotsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 19);

/**
 * ListSnapshotsResponse is the result of ListSnapshotsRequest.
 *
 * @generated from message google.cloud.filestore.v1beta1.ListSnapshotsResponse
 */
export type ListSnapshotsResponse = Message<"google.cloud.filestore.v1beta1.ListSnapshotsResponse"> & {
  /**
   * A list of snapshots in the project for the specified instance.
   *
   * @generated from field: repeated google.cloud.filestore.v1beta1.Snapshot snapshots = 1;
   */
  snapshots: Snapshot[];

  /**
   * The token you can use to retrieve the next page of results. Not returned
   * if there are no more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.ListSnapshotsResponse.
 * Use `create(ListSnapshotsResponseSchema)` to create a new message.
 */
export const ListSnapshotsResponseSchema: GenMessage<ListSnapshotsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 20);

/**
 * A Filestore backup.
 *
 * @generated from message google.cloud.filestore.v1beta1.Backup
 */
export type Backup = Message<"google.cloud.filestore.v1beta1.Backup"> & {
  /**
   * Output only. The resource name of the backup, in the format
   * `projects/{project_id}/locations/{location_id}/backups/{backup_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A description of the backup with 2048 characters or less.
   * Requests with longer descriptions will be rejected.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Output only. The backup state.
   *
   * @generated from field: google.cloud.filestore.v1beta1.Backup.State state = 3;
   */
  state: Backup_State;

  /**
   * Output only. The time when the backup was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Resource labels to represent user provided metadata.
   *
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };

  /**
   * Output only. Capacity of the source file share when the backup was created.
   *
   * @generated from field: int64 capacity_gb = 6;
   */
  capacityGb: bigint;

  /**
   * Output only. The size of the storage used by the backup. As backups share
   * storage, this number is expected to change with backup creation/deletion.
   *
   * @generated from field: int64 storage_bytes = 7;
   */
  storageBytes: bigint;

  /**
   * The resource name of the source Filestore instance, in the format
   * `projects/{project_id}/locations/{location_id}/instances/{instance_id}`,
   * used to create this backup.
   *
   * @generated from field: string source_instance = 8;
   */
  sourceInstance: string;

  /**
   * Name of the file share in the source Filestore instance that the
   * backup is created from.
   *
   * @generated from field: string source_file_share = 9;
   */
  sourceFileShare: string;

  /**
   * Output only. The service tier of the source Filestore instance that this
   * backup is created from.
   *
   * @generated from field: google.cloud.filestore.v1beta1.Instance.Tier source_instance_tier = 10;
   */
  sourceInstanceTier: Instance_Tier;

  /**
   * Output only. Amount of bytes that will be downloaded if the backup is
   * restored
   *
   * @generated from field: int64 download_bytes = 11;
   */
  downloadBytes: bigint;

  /**
   * Output only. Reserved for future use.
   *
   * @generated from field: google.protobuf.BoolValue satisfies_pzs = 12;
   */
  satisfiesPzs?: boolean;

  /**
   * Output only. Reserved for future use.
   *
   * @generated from field: bool satisfies_pzi = 14;
   */
  satisfiesPzi: boolean;

  /**
   * Immutable. KMS key name used for data encryption.
   *
   * @generated from field: string kms_key_name = 13;
   */
  kmsKeyName: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.Backup.
 * Use `create(BackupSchema)` to create a new message.
 */
export const BackupSchema: GenMessage<Backup> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 21);

/**
 * The backup state.
 *
 * @generated from enum google.cloud.filestore.v1beta1.Backup.State
 */
export enum Backup_State {
  /**
   * State not set.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Backup is being created.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * Backup has been taken and the operation is being finalized. At this
   * point, changes to the file share will not be reflected in the backup.
   *
   * @generated from enum value: FINALIZING = 2;
   */
  FINALIZING = 2,

  /**
   * Backup is available for use.
   *
   * @generated from enum value: READY = 3;
   */
  READY = 3,

  /**
   * Backup is being deleted.
   *
   * @generated from enum value: DELETING = 4;
   */
  DELETING = 4,

  /**
   * Backup is not valid and cannot be used for creating new instances or
   * restoring existing instances.
   *
   * @generated from enum value: INVALID = 5;
   */
  INVALID = 5,
}

/**
 * Describes the enum google.cloud.filestore.v1beta1.Backup.State.
 */
export const Backup_StateSchema: GenEnum<Backup_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 21, 0);

/**
 * CreateBackupRequest creates a backup.
 *
 * @generated from message google.cloud.filestore.v1beta1.CreateBackupRequest
 */
export type CreateBackupRequest = Message<"google.cloud.filestore.v1beta1.CreateBackupRequest"> & {
  /**
   * Required. The backup's project and location, in the format
   * `projects/{project_id}/locations/{location}`. In Filestore,
   * backup locations map to Google Cloud regions, for example **us-west1**.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. A [backup resource][google.cloud.filestore.v1beta1.Backup]
   *
   * @generated from field: google.cloud.filestore.v1beta1.Backup backup = 2;
   */
  backup?: Backup;

  /**
   * Required. The ID to use for the backup.
   * The ID must be unique within the specified project and location.
   *
   * This value must start with a lowercase letter followed by up to 62
   * lowercase letters, numbers, or hyphens, and cannot end with a hyphen.
   *
   * @generated from field: string backup_id = 3;
   */
  backupId: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.CreateBackupRequest.
 * Use `create(CreateBackupRequestSchema)` to create a new message.
 */
export const CreateBackupRequestSchema: GenMessage<CreateBackupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 22);

/**
 * DeleteBackupRequest deletes a backup.
 *
 * @generated from message google.cloud.filestore.v1beta1.DeleteBackupRequest
 */
export type DeleteBackupRequest = Message<"google.cloud.filestore.v1beta1.DeleteBackupRequest"> & {
  /**
   * Required. The backup resource name, in the format
   * `projects/{project_id}/locations/{location}/backups/{backup_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.DeleteBackupRequest.
 * Use `create(DeleteBackupRequestSchema)` to create a new message.
 */
export const DeleteBackupRequestSchema: GenMessage<DeleteBackupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 23);

/**
 * UpdateBackupRequest updates description and/or labels for a backup.
 *
 * @generated from message google.cloud.filestore.v1beta1.UpdateBackupRequest
 */
export type UpdateBackupRequest = Message<"google.cloud.filestore.v1beta1.UpdateBackupRequest"> & {
  /**
   * Required. A [backup resource][google.cloud.filestore.v1beta1.Backup]
   *
   * @generated from field: google.cloud.filestore.v1beta1.Backup backup = 1;
   */
  backup?: Backup;

  /**
   * Required. Mask of fields to update.  At least one path must be supplied in
   * this field.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.UpdateBackupRequest.
 * Use `create(UpdateBackupRequestSchema)` to create a new message.
 */
export const UpdateBackupRequestSchema: GenMessage<UpdateBackupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 24);

/**
 * GetBackupRequest gets the state of a backup.
 *
 * @generated from message google.cloud.filestore.v1beta1.GetBackupRequest
 */
export type GetBackupRequest = Message<"google.cloud.filestore.v1beta1.GetBackupRequest"> & {
  /**
   * Required. The backup resource name, in the format
   * `projects/{project_id}/locations/{location}/backups/{backup_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.GetBackupRequest.
 * Use `create(GetBackupRequestSchema)` to create a new message.
 */
export const GetBackupRequestSchema: GenMessage<GetBackupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 25);

/**
 * ListBackupsRequest lists backups.
 *
 * @generated from message google.cloud.filestore.v1beta1.ListBackupsRequest
 */
export type ListBackupsRequest = Message<"google.cloud.filestore.v1beta1.ListBackupsRequest"> & {
  /**
   * Required. The project and location for which to retrieve backup
   * information, in the format `projects/{project_id}/locations/{location}`. In
   * Filestore, backup locations map to Google Cloud regions, for example
   * **us-west1**. To retrieve backup information for all locations, use "-" for
   * the
   * `{location}` value.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value to use if there are additional
   * results to retrieve for this list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Sort results. Supported values are "name", "name desc" or "" (unsorted).
   *
   * @generated from field: string order_by = 4;
   */
  orderBy: string;

  /**
   * List filter.
   *
   * @generated from field: string filter = 5;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.ListBackupsRequest.
 * Use `create(ListBackupsRequestSchema)` to create a new message.
 */
export const ListBackupsRequestSchema: GenMessage<ListBackupsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 26);

/**
 * ListBackupsResponse is the result of ListBackupsRequest.
 *
 * @generated from message google.cloud.filestore.v1beta1.ListBackupsResponse
 */
export type ListBackupsResponse = Message<"google.cloud.filestore.v1beta1.ListBackupsResponse"> & {
  /**
   * A list of backups in the project for the specified location.
   *
   * If the `{location}` value in the request is "-", the response contains a
   * list of backups from all locations. If any location is unreachable, the
   * response will only return backups in reachable locations and the
   * "unreachable" field will be populated with a list of unreachable
   * locations.
   *
   * @generated from field: repeated google.cloud.filestore.v1beta1.Backup backups = 1;
   */
  backups: Backup[];

  /**
   * The token you can use to retrieve the next page of results. Not returned
   * if there are no more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.filestore.v1beta1.ListBackupsResponse.
 * Use `create(ListBackupsResponseSchema)` to create a new message.
 */
export const ListBackupsResponseSchema: GenMessage<ListBackupsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 27);

/**
 * A Filestore share.
 *
 * @generated from message google.cloud.filestore.v1beta1.Share
 */
export type Share = Message<"google.cloud.filestore.v1beta1.Share"> & {
  /**
   * Output only. The resource name of the share, in the format
   * `projects/{project_id}/locations/{location_id}/instances/{instance_id}/shares/{share_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The mount name of the share. Must be 63 characters or less and consist of
   * uppercase or lowercase letters, numbers, and underscores.
   *
   * @generated from field: string mount_name = 2;
   */
  mountName: string;

  /**
   * A description of the share with 2048 characters or less. Requests with
   * longer descriptions will be rejected.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * File share capacity in gigabytes (GB). Filestore defines 1 GB as
   * 1024^3 bytes. Must be greater than 0.
   *
   * @generated from field: int64 capacity_gb = 4;
   */
  capacityGb: bigint;

  /**
   * Nfs Export Options.
   * There is a limit of 10 export options per file share.
   *
   * @generated from field: repeated google.cloud.filestore.v1beta1.NfsExportOptions nfs_export_options = 5;
   */
  nfsExportOptions: NfsExportOptions[];

  /**
   * Output only. The share state.
   *
   * @generated from field: google.cloud.filestore.v1beta1.Share.State state = 6;
   */
  state: Share_State;

  /**
   * Output only. The time when the share was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 7;
   */
  createTime?: Timestamp;

  /**
   * Resource labels to represent user provided metadata.
   *
   * @generated from field: map<string, string> labels = 8;
   */
  labels: { [key: string]: string };

  /**
   * The source that this Share has been restored from. Empty if the Share is
   * created from scratch.
   *
   * @generated from oneof google.cloud.filestore.v1beta1.Share.source
   */
  source: {
    /**
     * Immutable. Full name of the Cloud Filestore Backup resource that this
     * Share is restored from, in the format of
     * projects/{project_id}/locations/{location_id}/backups/{backup_id}.
     * Empty, if the Share is created from scratch and not restored from a
     * backup.
     *
     * @generated from field: string backup = 9;
     */
    value: string;
    case: "backup";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.filestore.v1beta1.Share.
 * Use `create(ShareSchema)` to create a new message.
 */
export const ShareSchema: GenMessage<Share> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 28);

/**
 * The share state.
 *
 * @generated from enum google.cloud.filestore.v1beta1.Share.State
 */
export enum Share_State {
  /**
   * State not set.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Share is being created.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * Share is ready for use.
   *
   * @generated from enum value: READY = 3;
   */
  READY = 3,

  /**
   * Share is being deleted.
   *
   * @generated from enum value: DELETING = 4;
   */
  DELETING = 4,
}

/**
 * Describes the enum google.cloud.filestore.v1beta1.Share.State.
 */
export const Share_StateSchema: GenEnum<Share_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 28, 0);

/**
 * CreateShareRequest creates a share.
 *
 * @generated from message google.cloud.filestore.v1beta1.CreateShareRequest
 */
export type CreateShareRequest = Message<"google.cloud.filestore.v1beta1.CreateShareRequest"> & {
  /**
   * Required. The Filestore Instance to create the share for, in the format
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ID to use for the share.
   * The ID must be unique within the specified instance.
   *
   * This value must start with a lowercase letter followed by up to 62
   * lowercase letters, numbers, or hyphens, and cannot end with a hyphen.
   *
   * @generated from field: string share_id = 2;
   */
  shareId: string;

  /**
   * Required. A share resource
   *
   * @generated from field: google.cloud.filestore.v1beta1.Share share = 3;
   */
  share?: Share;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.CreateShareRequest.
 * Use `create(CreateShareRequestSchema)` to create a new message.
 */
export const CreateShareRequestSchema: GenMessage<CreateShareRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 29);

/**
 * GetShareRequest gets the state of a share.
 *
 * @generated from message google.cloud.filestore.v1beta1.GetShareRequest
 */
export type GetShareRequest = Message<"google.cloud.filestore.v1beta1.GetShareRequest"> & {
  /**
   * Required. The share resource name, in the format
   * `projects/{project_id}/locations/{location}/instances/{instance_id}/shares/{share_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.GetShareRequest.
 * Use `create(GetShareRequestSchema)` to create a new message.
 */
export const GetShareRequestSchema: GenMessage<GetShareRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 30);

/**
 * DeleteShareRequest deletes a share.
 *
 * @generated from message google.cloud.filestore.v1beta1.DeleteShareRequest
 */
export type DeleteShareRequest = Message<"google.cloud.filestore.v1beta1.DeleteShareRequest"> & {
  /**
   * Required. The share resource name, in the format
   * `projects/{project_id}/locations/{location}/instances/{instance_id}/share/{share_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.DeleteShareRequest.
 * Use `create(DeleteShareRequestSchema)` to create a new message.
 */
export const DeleteShareRequestSchema: GenMessage<DeleteShareRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 31);

/**
 * ListSharesRequest lists shares.
 *
 * @generated from message google.cloud.filestore.v1beta1.ListSharesRequest
 */
export type ListSharesRequest = Message<"google.cloud.filestore.v1beta1.ListSharesRequest"> & {
  /**
   * Required. The instance for which to retrieve share information,
   * in the format
   * `projects/{project_id}/locations/{location}/instances/{instance_id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value to use if there are additional
   * results to retrieve for this list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Sort results. Supported values are "name", "name desc" or "" (unsorted).
   *
   * @generated from field: string order_by = 4;
   */
  orderBy: string;

  /**
   * List filter.
   *
   * @generated from field: string filter = 5;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.ListSharesRequest.
 * Use `create(ListSharesRequestSchema)` to create a new message.
 */
export const ListSharesRequestSchema: GenMessage<ListSharesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 32);

/**
 * ListSharesResponse is the result of ListSharesRequest.
 *
 * @generated from message google.cloud.filestore.v1beta1.ListSharesResponse
 */
export type ListSharesResponse = Message<"google.cloud.filestore.v1beta1.ListSharesResponse"> & {
  /**
   * A list of shares in the project for the specified instance.
   *
   * @generated from field: repeated google.cloud.filestore.v1beta1.Share shares = 1;
   */
  shares: Share[];

  /**
   * The token you can use to retrieve the next page of results. Not returned
   * if there are no more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.filestore.v1beta1.ListSharesResponse.
 * Use `create(ListSharesResponseSchema)` to create a new message.
 */
export const ListSharesResponseSchema: GenMessage<ListSharesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 33);

/**
 * UpdateShareRequest updates the settings of a share.
 *
 * @generated from message google.cloud.filestore.v1beta1.UpdateShareRequest
 */
export type UpdateShareRequest = Message<"google.cloud.filestore.v1beta1.UpdateShareRequest"> & {
  /**
   * Required. A share resource.
   * Only fields specified in update_mask are updated.
   *
   * @generated from field: google.cloud.filestore.v1beta1.Share share = 1;
   */
  share?: Share;

  /**
   * Required. Mask of fields to update. At least one path must be supplied in
   * this field. The elements of the repeated paths field may only include these
   * fields:
   *
   * * "description"
   * * "capacity_gb"
   * * "labels"
   * * "nfs_export_options"
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.filestore.v1beta1.UpdateShareRequest.
 * Use `create(UpdateShareRequestSchema)` to create a new message.
 */
export const UpdateShareRequestSchema: GenMessage<UpdateShareRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 34);

/**
 * Configures and manages Filestore resources.
 *
 * Filestore Manager v1beta1.
 *
 * The `file.googleapis.com` service implements the Filestore API and
 * defines the following model for managing resources:
 * * The service works with a collection of cloud projects, named: `/projects/*`
 * * Each project has a collection of available locations, named: `/locations/*`
 * * Each location has a collection of instances and backups, named:
 * `/instances/*` and `/backups/*` respectively.
 * * As such, Filestore instances are resources of the form:
 *   `/projects/{project_id}/locations/{location_id}/instances/{instance_id}`
 *   backups are resources of the form:
 *   `/projects/{project_id}/locations/{location_id}/backup/{backup_id}`
 *
 * Note that location_id can represent a Google Cloud `zone` or `region`
 * depending on the resource. for example: A zonal Filestore instance:
 * * `projects/my-project/locations/us-central1-c/instances/my-basic-tier-filer`
 * A regional Filestore instance:
 * * `projects/my-project/locations/us-central1/instances/my-enterprise-filer`
 *
 * @generated from service google.cloud.filestore.v1beta1.CloudFilestoreManager
 */
export const CloudFilestoreManager: GenService<{
  /**
   * Lists all instances in a project for either a specified location
   * or for all locations.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.ListInstances
   */
  listInstances: {
    methodKind: "unary";
    input: typeof ListInstancesRequestSchema;
    output: typeof ListInstancesResponseSchema;
  },
  /**
   * Gets the details of a specific instance.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.GetInstance
   */
  getInstance: {
    methodKind: "unary";
    input: typeof GetInstanceRequestSchema;
    output: typeof InstanceSchema;
  },
  /**
   * Creates an instance.
   * When creating from a backup, the capacity of the new instance needs to be
   * equal to or larger than the capacity of the backup (and also equal to or
   * larger than the minimum capacity of the tier).
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.CreateInstance
   */
  createInstance: {
    methodKind: "unary";
    input: typeof CreateInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the settings of a specific instance.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.UpdateInstance
   */
  updateInstance: {
    methodKind: "unary";
    input: typeof UpdateInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Restores an existing instance's file share from a backup.
   *
   * The capacity of the instance needs to be equal to or larger than the
   * capacity of the backup (and also equal to or larger than the minimum
   * capacity of the tier).
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.RestoreInstance
   */
  restoreInstance: {
    methodKind: "unary";
    input: typeof RestoreInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Revert an existing instance's file system to a specified snapshot.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.RevertInstance
   */
  revertInstance: {
    methodKind: "unary";
    input: typeof RevertInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes an instance.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.DeleteInstance
   */
  deleteInstance: {
    methodKind: "unary";
    input: typeof DeleteInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists all snapshots in a project for either a specified location
   * or for all locations.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.ListSnapshots
   */
  listSnapshots: {
    methodKind: "unary";
    input: typeof ListSnapshotsRequestSchema;
    output: typeof ListSnapshotsResponseSchema;
  },
  /**
   * Gets the details of a specific snapshot.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.GetSnapshot
   */
  getSnapshot: {
    methodKind: "unary";
    input: typeof GetSnapshotRequestSchema;
    output: typeof SnapshotSchema;
  },
  /**
   * Creates a snapshot.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.CreateSnapshot
   */
  createSnapshot: {
    methodKind: "unary";
    input: typeof CreateSnapshotRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a snapshot.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.DeleteSnapshot
   */
  deleteSnapshot: {
    methodKind: "unary";
    input: typeof DeleteSnapshotRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the settings of a specific snapshot.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.UpdateSnapshot
   */
  updateSnapshot: {
    methodKind: "unary";
    input: typeof UpdateSnapshotRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists all backups in a project for either a specified location or for all
   * locations.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.ListBackups
   */
  listBackups: {
    methodKind: "unary";
    input: typeof ListBackupsRequestSchema;
    output: typeof ListBackupsResponseSchema;
  },
  /**
   * Gets the details of a specific backup.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.GetBackup
   */
  getBackup: {
    methodKind: "unary";
    input: typeof GetBackupRequestSchema;
    output: typeof BackupSchema;
  },
  /**
   * Creates a backup.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.CreateBackup
   */
  createBackup: {
    methodKind: "unary";
    input: typeof CreateBackupRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a backup.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.DeleteBackup
   */
  deleteBackup: {
    methodKind: "unary";
    input: typeof DeleteBackupRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the settings of a specific backup.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.UpdateBackup
   */
  updateBackup: {
    methodKind: "unary";
    input: typeof UpdateBackupRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists all shares for a specified instance.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.ListShares
   */
  listShares: {
    methodKind: "unary";
    input: typeof ListSharesRequestSchema;
    output: typeof ListSharesResponseSchema;
  },
  /**
   * Gets the details of a specific share.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.GetShare
   */
  getShare: {
    methodKind: "unary";
    input: typeof GetShareRequestSchema;
    output: typeof ShareSchema;
  },
  /**
   * Creates a share.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.CreateShare
   */
  createShare: {
    methodKind: "unary";
    input: typeof CreateShareRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a share.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.DeleteShare
   */
  deleteShare: {
    methodKind: "unary";
    input: typeof DeleteShareRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the settings of a specific share.
   *
   * @generated from rpc google.cloud.filestore.v1beta1.CloudFilestoreManager.UpdateShare
   */
  updateShare: {
    methodKind: "unary";
    input: typeof UpdateShareRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_filestore_v1beta1_cloud_filestore_service, 0);

