// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/netapp/v1/volume.proto (package google.cloud.netapp.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { EncryptionType, ServiceLevel } from "./common_pb";
import { file_google_cloud_netapp_v1_common } from "./common_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/netapp/v1/volume.proto.
 */
export const file_google_cloud_netapp_v1_volume: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_netapp_v1_common, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Message for requesting list of Volumes
 *
 * @generated from message google.cloud.netapp.v1.ListVolumesRequest
 */
export type ListVolumesRequest = Message<"google.cloud.netapp.v1.ListVolumesRequest"> & {
  /**
   * Required. Parent value for ListVolumesRequest
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Requested page size. Server may return fewer items than requested.
   * If unspecified, the server will pick an appropriate default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filtering results
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Hint for how to order the results
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.netapp.v1.ListVolumesRequest.
 * Use `create(ListVolumesRequestSchema)` to create a new message.
 */
export const ListVolumesRequestSchema: GenMessage<ListVolumesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 0);

/**
 * Message for response to listing Volumes
 *
 * @generated from message google.cloud.netapp.v1.ListVolumesResponse
 */
export type ListVolumesResponse = Message<"google.cloud.netapp.v1.ListVolumesResponse"> & {
  /**
   * The list of Volume
   *
   * @generated from field: repeated google.cloud.netapp.v1.Volume volumes = 1;
   */
  volumes: Volume[];

  /**
   * A token identifying a page of results the server should return.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.netapp.v1.ListVolumesResponse.
 * Use `create(ListVolumesResponseSchema)` to create a new message.
 */
export const ListVolumesResponseSchema: GenMessage<ListVolumesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 1);

/**
 * Message for getting a Volume
 *
 * @generated from message google.cloud.netapp.v1.GetVolumeRequest
 */
export type GetVolumeRequest = Message<"google.cloud.netapp.v1.GetVolumeRequest"> & {
  /**
   * Required. Name of the volume
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.netapp.v1.GetVolumeRequest.
 * Use `create(GetVolumeRequestSchema)` to create a new message.
 */
export const GetVolumeRequestSchema: GenMessage<GetVolumeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 2);

/**
 * Message for creating a Volume
 *
 * @generated from message google.cloud.netapp.v1.CreateVolumeRequest
 */
export type CreateVolumeRequest = Message<"google.cloud.netapp.v1.CreateVolumeRequest"> & {
  /**
   * Required. Value for parent.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Id of the requesting volume. Must be unique within the parent
   * resource. Must contain only letters, numbers, underscore and hyphen, with
   * the first character a letter or underscore, the last a letter or underscore
   * or a number, and a 63 character maximum.
   *
   * @generated from field: string volume_id = 2;
   */
  volumeId: string;

  /**
   * Required. The volume being created.
   *
   * @generated from field: google.cloud.netapp.v1.Volume volume = 3;
   */
  volume?: Volume;
};

/**
 * Describes the message google.cloud.netapp.v1.CreateVolumeRequest.
 * Use `create(CreateVolumeRequestSchema)` to create a new message.
 */
export const CreateVolumeRequestSchema: GenMessage<CreateVolumeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 3);

/**
 * Message for updating a Volume
 *
 * @generated from message google.cloud.netapp.v1.UpdateVolumeRequest
 */
export type UpdateVolumeRequest = Message<"google.cloud.netapp.v1.UpdateVolumeRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * Volume resource by the update.
   * The fields specified in the update_mask are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The volume being updated
   *
   * @generated from field: google.cloud.netapp.v1.Volume volume = 2;
   */
  volume?: Volume;
};

/**
 * Describes the message google.cloud.netapp.v1.UpdateVolumeRequest.
 * Use `create(UpdateVolumeRequestSchema)` to create a new message.
 */
export const UpdateVolumeRequestSchema: GenMessage<UpdateVolumeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 4);

/**
 * Message for deleting a Volume
 *
 * @generated from message google.cloud.netapp.v1.DeleteVolumeRequest
 */
export type DeleteVolumeRequest = Message<"google.cloud.netapp.v1.DeleteVolumeRequest"> & {
  /**
   * Required. Name of the volume
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * If this field is set as true, CCFE will not block the volume resource
   * deletion even if it has any snapshots resource. (Otherwise, the request
   * will only work if the volume has no snapshots.)
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.netapp.v1.DeleteVolumeRequest.
 * Use `create(DeleteVolumeRequestSchema)` to create a new message.
 */
export const DeleteVolumeRequestSchema: GenMessage<DeleteVolumeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 5);

/**
 * RevertVolumeRequest reverts the given volume to the specified snapshot.
 *
 * @generated from message google.cloud.netapp.v1.RevertVolumeRequest
 */
export type RevertVolumeRequest = Message<"google.cloud.netapp.v1.RevertVolumeRequest"> & {
  /**
   * Required. The resource name of the volume, in the format of
   * projects/{project_id}/locations/{location}/volumes/{volume_id}.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The snapshot resource ID, in the format 'my-snapshot', where the
   * specified ID is the {snapshot_id} of the fully qualified name like
   * projects/{project_id}/locations/{location_id}/volumes/{volume_id}/snapshots/{snapshot_id}
   *
   * @generated from field: string snapshot_id = 2;
   */
  snapshotId: string;
};

/**
 * Describes the message google.cloud.netapp.v1.RevertVolumeRequest.
 * Use `create(RevertVolumeRequestSchema)` to create a new message.
 */
export const RevertVolumeRequestSchema: GenMessage<RevertVolumeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 6);

/**
 * Volume provides a filesystem that you can mount.
 *
 * @generated from message google.cloud.netapp.v1.Volume
 */
export type Volume = Message<"google.cloud.netapp.v1.Volume"> & {
  /**
   * Identifier. Name of the volume
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. State of the volume
   *
   * @generated from field: google.cloud.netapp.v1.Volume.State state = 2;
   */
  state: Volume_State;

  /**
   * Output only. State details of the volume
   *
   * @generated from field: string state_details = 3;
   */
  stateDetails: string;

  /**
   * Output only. Create time of the volume
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Required. Share name of the volume
   *
   * @generated from field: string share_name = 5;
   */
  shareName: string;

  /**
   * Output only. This field is not implemented. The values provided in this
   * field are ignored.
   *
   * @generated from field: string psa_range = 6;
   */
  psaRange: string;

  /**
   * Required. StoragePool name of the volume
   *
   * @generated from field: string storage_pool = 7;
   */
  storagePool: string;

  /**
   * Output only. VPC Network name.
   * Format: projects/{project}/global/networks/{network}
   *
   * @generated from field: string network = 8;
   */
  network: string;

  /**
   * Output only. Service level of the volume
   *
   * @generated from field: google.cloud.netapp.v1.ServiceLevel service_level = 9;
   */
  serviceLevel: ServiceLevel;

  /**
   * Required. Capacity in GIB of the volume
   *
   * @generated from field: int64 capacity_gib = 10;
   */
  capacityGib: bigint;

  /**
   * Optional. Export policy of the volume
   *
   * @generated from field: google.cloud.netapp.v1.ExportPolicy export_policy = 11;
   */
  exportPolicy?: ExportPolicy;

  /**
   * Required. Protocols required for the volume
   *
   * @generated from field: repeated google.cloud.netapp.v1.Protocols protocols = 12;
   */
  protocols: Protocols[];

  /**
   * Optional. SMB share settings for the volume.
   *
   * @generated from field: repeated google.cloud.netapp.v1.SMBSettings smb_settings = 13;
   */
  smbSettings: SMBSettings[];

  /**
   * Output only. Mount options of this volume
   *
   * @generated from field: repeated google.cloud.netapp.v1.MountOption mount_options = 14;
   */
  mountOptions: MountOption[];

  /**
   * Optional. Default unix style permission (e.g. 777) the mount point will be
   * created with. Applicable for NFS protocol types only.
   *
   * @generated from field: string unix_permissions = 15;
   */
  unixPermissions: string;

  /**
   * Optional. Labels as key value pairs
   *
   * @generated from field: map<string, string> labels = 16;
   */
  labels: { [key: string]: string };

  /**
   * Optional. Description of the volume
   *
   * @generated from field: string description = 17;
   */
  description: string;

  /**
   * Optional. SnapshotPolicy for a volume.
   *
   * @generated from field: google.cloud.netapp.v1.SnapshotPolicy snapshot_policy = 18;
   */
  snapshotPolicy?: SnapshotPolicy;

  /**
   * Optional. Snap_reserve specifies percentage of volume storage reserved for
   * snapshot storage. Default is 0 percent.
   *
   * @generated from field: double snap_reserve = 19;
   */
  snapReserve: number;

  /**
   * Optional. Snapshot_directory if enabled (true) the volume will contain a
   * read-only .snapshot directory which provides access to each of the volume's
   * snapshots.
   *
   * @generated from field: bool snapshot_directory = 20;
   */
  snapshotDirectory: boolean;

  /**
   * Output only. Used capacity in GIB of the volume. This is computed
   * periodically and it does not represent the realtime usage.
   *
   * @generated from field: int64 used_gib = 21;
   */
  usedGib: bigint;

  /**
   * Optional. Security Style of the Volume
   *
   * @generated from field: google.cloud.netapp.v1.SecurityStyle security_style = 22;
   */
  securityStyle: SecurityStyle;

  /**
   * Optional. Flag indicating if the volume is a kerberos volume or not, export
   * policy rules control kerberos security modes (krb5, krb5i, krb5p).
   *
   * @generated from field: bool kerberos_enabled = 23;
   */
  kerberosEnabled: boolean;

  /**
   * Output only. Flag indicating if the volume is NFS LDAP enabled or not.
   *
   * @generated from field: bool ldap_enabled = 24;
   */
  ldapEnabled: boolean;

  /**
   * Output only. Specifies the ActiveDirectory name of a SMB volume.
   *
   * @generated from field: string active_directory = 25;
   */
  activeDirectory: string;

  /**
   * Optional. Specifies the source of the volume to be created from.
   *
   * @generated from field: google.cloud.netapp.v1.RestoreParameters restore_parameters = 26;
   */
  restoreParameters?: RestoreParameters;

  /**
   * Output only. Specifies the KMS config to be used for volume encryption.
   *
   * @generated from field: string kms_config = 27;
   */
  kmsConfig: string;

  /**
   * Output only. Specified the current volume encryption key source.
   *
   * @generated from field: google.cloud.netapp.v1.EncryptionType encryption_type = 28;
   */
  encryptionType: EncryptionType;

  /**
   * Output only. Indicates whether the volume is part of a replication
   * relationship.
   *
   * @generated from field: bool has_replication = 29;
   */
  hasReplication: boolean;

  /**
   * BackupConfig of the volume.
   *
   * @generated from field: optional google.cloud.netapp.v1.BackupConfig backup_config = 30;
   */
  backupConfig?: BackupConfig;

  /**
   * Optional. List of actions that are restricted on this volume.
   *
   * @generated from field: repeated google.cloud.netapp.v1.RestrictedAction restricted_actions = 31;
   */
  restrictedActions: RestrictedAction[];

  /**
   * Optional. Flag indicating if the volume will be a large capacity volume or
   * a regular volume.
   *
   * @generated from field: bool large_capacity = 32;
   */
  largeCapacity: boolean;

  /**
   * Optional. Flag indicating if the volume will have an IP address per node
   * for volumes supporting multiple IP endpoints. Only the volume with
   * large_capacity will be allowed to have multiple endpoints.
   *
   * @generated from field: bool multiple_endpoints = 33;
   */
  multipleEndpoints: boolean;

  /**
   * Tiering policy for the volume.
   *
   * @generated from field: optional google.cloud.netapp.v1.TieringPolicy tiering_policy = 34;
   */
  tieringPolicy?: TieringPolicy;

  /**
   * Output only. Specifies the replica zone for regional volume.
   *
   * @generated from field: string replica_zone = 36;
   */
  replicaZone: string;

  /**
   * Output only. Specifies the active zone for regional volume.
   *
   * @generated from field: string zone = 37;
   */
  zone: string;

  /**
   * Output only. Size of the volume cold tier data in GiB.
   *
   * @generated from field: int64 cold_tier_size_gib = 39;
   */
  coldTierSizeGib: bigint;
};

/**
 * Describes the message google.cloud.netapp.v1.Volume.
 * Use `create(VolumeSchema)` to create a new message.
 */
export const VolumeSchema: GenMessage<Volume> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 7);

/**
 * The volume states
 *
 * @generated from enum google.cloud.netapp.v1.Volume.State
 */
export enum Volume_State {
  /**
   * Unspecified Volume State
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Volume State is Ready
   *
   * @generated from enum value: READY = 1;
   */
  READY = 1,

  /**
   * Volume State is Creating
   *
   * @generated from enum value: CREATING = 2;
   */
  CREATING = 2,

  /**
   * Volume State is Deleting
   *
   * @generated from enum value: DELETING = 3;
   */
  DELETING = 3,

  /**
   * Volume State is Updating
   *
   * @generated from enum value: UPDATING = 4;
   */
  UPDATING = 4,

  /**
   * Volume State is Restoring
   *
   * @generated from enum value: RESTORING = 5;
   */
  RESTORING = 5,

  /**
   * Volume State is Disabled
   *
   * @generated from enum value: DISABLED = 6;
   */
  DISABLED = 6,

  /**
   * Volume State is Error
   *
   * @generated from enum value: ERROR = 7;
   */
  ERROR = 7,
}

/**
 * Describes the enum google.cloud.netapp.v1.Volume.State.
 */
export const Volume_StateSchema: GenEnum<Volume_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_netapp_v1_volume, 7, 0);

/**
 * Defines the export policy for the volume.
 *
 * @generated from message google.cloud.netapp.v1.ExportPolicy
 */
export type ExportPolicy = Message<"google.cloud.netapp.v1.ExportPolicy"> & {
  /**
   * Required. List of export policy rules
   *
   * @generated from field: repeated google.cloud.netapp.v1.SimpleExportPolicyRule rules = 1;
   */
  rules: SimpleExportPolicyRule[];
};

/**
 * Describes the message google.cloud.netapp.v1.ExportPolicy.
 * Use `create(ExportPolicySchema)` to create a new message.
 */
export const ExportPolicySchema: GenMessage<ExportPolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 8);

/**
 * An export policy rule describing various export options.
 *
 * @generated from message google.cloud.netapp.v1.SimpleExportPolicyRule
 */
export type SimpleExportPolicyRule = Message<"google.cloud.netapp.v1.SimpleExportPolicyRule"> & {
  /**
   * Comma separated list of allowed clients IP addresses
   *
   * @generated from field: optional string allowed_clients = 1;
   */
  allowedClients?: string;

  /**
   * Whether Unix root access will be granted.
   *
   * @generated from field: optional string has_root_access = 2;
   */
  hasRootAccess?: string;

  /**
   * Access type (ReadWrite, ReadOnly, None)
   *
   * @generated from field: optional google.cloud.netapp.v1.AccessType access_type = 3;
   */
  accessType?: AccessType;

  /**
   * NFS V3 protocol.
   *
   * @generated from field: optional bool nfsv3 = 4;
   */
  nfsv3?: boolean;

  /**
   * NFS V4 protocol.
   *
   * @generated from field: optional bool nfsv4 = 5;
   */
  nfsv4?: boolean;

  /**
   * If enabled (true) the rule defines a read only access for clients matching
   * the 'allowedClients' specification. It enables nfs clients to mount using
   * 'authentication' kerberos security mode.
   *
   * @generated from field: optional bool kerberos_5_read_only = 6;
   */
  kerberos5ReadOnly?: boolean;

  /**
   * If enabled (true) the rule defines read and write access for clients
   * matching the 'allowedClients' specification. It enables nfs clients to
   * mount using 'authentication' kerberos security mode. The
   * 'kerberos5ReadOnly' value be ignored if this is enabled.
   *
   * @generated from field: optional bool kerberos_5_read_write = 7;
   */
  kerberos5ReadWrite?: boolean;

  /**
   * If enabled (true) the rule defines a read only access for clients matching
   * the 'allowedClients' specification. It enables nfs clients to mount using
   * 'integrity' kerberos security mode.
   *
   * @generated from field: optional bool kerberos_5i_read_only = 8;
   */
  kerberos5iReadOnly?: boolean;

  /**
   * If enabled (true) the rule defines read and write access for clients
   * matching the 'allowedClients' specification. It enables nfs clients to
   * mount using 'integrity' kerberos security mode. The 'kerberos5iReadOnly'
   * value be ignored if this is enabled.
   *
   * @generated from field: optional bool kerberos_5i_read_write = 9;
   */
  kerberos5iReadWrite?: boolean;

  /**
   * If enabled (true) the rule defines a read only access for clients matching
   * the 'allowedClients' specification. It enables nfs clients to mount using
   * 'privacy' kerberos security mode.
   *
   * @generated from field: optional bool kerberos_5p_read_only = 10;
   */
  kerberos5pReadOnly?: boolean;

  /**
   * If enabled (true) the rule defines read and write access for clients
   * matching the 'allowedClients' specification. It enables nfs clients to
   * mount using 'privacy' kerberos security mode. The 'kerberos5pReadOnly'
   * value be ignored if this is enabled.
   *
   * @generated from field: optional bool kerberos_5p_read_write = 11;
   */
  kerberos5pReadWrite?: boolean;
};

/**
 * Describes the message google.cloud.netapp.v1.SimpleExportPolicyRule.
 * Use `create(SimpleExportPolicyRuleSchema)` to create a new message.
 */
export const SimpleExportPolicyRuleSchema: GenMessage<SimpleExportPolicyRule> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 9);

/**
 * Snapshot Policy for a volume.
 *
 * @generated from message google.cloud.netapp.v1.SnapshotPolicy
 */
export type SnapshotPolicy = Message<"google.cloud.netapp.v1.SnapshotPolicy"> & {
  /**
   * If enabled, make snapshots automatically according to the schedules.
   * Default is false.
   *
   * @generated from field: optional bool enabled = 1;
   */
  enabled?: boolean;

  /**
   * Hourly schedule policy.
   *
   * @generated from field: optional google.cloud.netapp.v1.HourlySchedule hourly_schedule = 2;
   */
  hourlySchedule?: HourlySchedule;

  /**
   * Daily schedule policy.
   *
   * @generated from field: optional google.cloud.netapp.v1.DailySchedule daily_schedule = 3;
   */
  dailySchedule?: DailySchedule;

  /**
   * Weekly schedule policy.
   *
   * @generated from field: optional google.cloud.netapp.v1.WeeklySchedule weekly_schedule = 4;
   */
  weeklySchedule?: WeeklySchedule;

  /**
   * Monthly schedule policy.
   *
   * @generated from field: optional google.cloud.netapp.v1.MonthlySchedule monthly_schedule = 5;
   */
  monthlySchedule?: MonthlySchedule;
};

/**
 * Describes the message google.cloud.netapp.v1.SnapshotPolicy.
 * Use `create(SnapshotPolicySchema)` to create a new message.
 */
export const SnapshotPolicySchema: GenMessage<SnapshotPolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 10);

/**
 * Make a snapshot every hour e.g. at 04:00, 05:00, 06:00.
 *
 * @generated from message google.cloud.netapp.v1.HourlySchedule
 */
export type HourlySchedule = Message<"google.cloud.netapp.v1.HourlySchedule"> & {
  /**
   * The maximum number of Snapshots to keep for the hourly schedule
   *
   * @generated from field: optional double snapshots_to_keep = 1;
   */
  snapshotsToKeep?: number;

  /**
   * Set the minute of the hour to start the snapshot (0-59), defaults to the
   * top of the hour (0).
   *
   * @generated from field: optional double minute = 2;
   */
  minute?: number;
};

/**
 * Describes the message google.cloud.netapp.v1.HourlySchedule.
 * Use `create(HourlyScheduleSchema)` to create a new message.
 */
export const HourlyScheduleSchema: GenMessage<HourlySchedule> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 11);

/**
 * Make a snapshot every day e.g. at 04:00, 05:20, 23:50
 *
 * @generated from message google.cloud.netapp.v1.DailySchedule
 */
export type DailySchedule = Message<"google.cloud.netapp.v1.DailySchedule"> & {
  /**
   * The maximum number of Snapshots to keep for the hourly schedule
   *
   * @generated from field: optional double snapshots_to_keep = 1;
   */
  snapshotsToKeep?: number;

  /**
   * Set the minute of the hour to start the snapshot (0-59), defaults to the
   * top of the hour (0).
   *
   * @generated from field: optional double minute = 2;
   */
  minute?: number;

  /**
   * Set the hour to start the snapshot (0-23), defaults to midnight (0).
   *
   * @generated from field: optional double hour = 3;
   */
  hour?: number;
};

/**
 * Describes the message google.cloud.netapp.v1.DailySchedule.
 * Use `create(DailyScheduleSchema)` to create a new message.
 */
export const DailyScheduleSchema: GenMessage<DailySchedule> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 12);

/**
 * Make a snapshot every week e.g. at Monday 04:00, Wednesday 05:20, Sunday
 * 23:50
 *
 * @generated from message google.cloud.netapp.v1.WeeklySchedule
 */
export type WeeklySchedule = Message<"google.cloud.netapp.v1.WeeklySchedule"> & {
  /**
   * The maximum number of Snapshots to keep for the hourly schedule
   *
   * @generated from field: optional double snapshots_to_keep = 1;
   */
  snapshotsToKeep?: number;

  /**
   * Set the minute of the hour to start the snapshot (0-59), defaults to the
   * top of the hour (0).
   *
   * @generated from field: optional double minute = 2;
   */
  minute?: number;

  /**
   * Set the hour to start the snapshot (0-23), defaults to midnight (0).
   *
   * @generated from field: optional double hour = 3;
   */
  hour?: number;

  /**
   * Set the day or days of the week to make a snapshot. Accepts a comma
   * separated days of the week. Defaults to 'Sunday'.
   *
   * @generated from field: optional string day = 4;
   */
  day?: string;
};

/**
 * Describes the message google.cloud.netapp.v1.WeeklySchedule.
 * Use `create(WeeklyScheduleSchema)` to create a new message.
 */
export const WeeklyScheduleSchema: GenMessage<WeeklySchedule> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 13);

/**
 * Make a snapshot once a month e.g. at 2nd 04:00, 7th 05:20, 24th 23:50
 *
 * @generated from message google.cloud.netapp.v1.MonthlySchedule
 */
export type MonthlySchedule = Message<"google.cloud.netapp.v1.MonthlySchedule"> & {
  /**
   * The maximum number of Snapshots to keep for the hourly schedule
   *
   * @generated from field: optional double snapshots_to_keep = 1;
   */
  snapshotsToKeep?: number;

  /**
   * Set the minute of the hour to start the snapshot (0-59), defaults to the
   * top of the hour (0).
   *
   * @generated from field: optional double minute = 2;
   */
  minute?: number;

  /**
   * Set the hour to start the snapshot (0-23), defaults to midnight (0).
   *
   * @generated from field: optional double hour = 3;
   */
  hour?: number;

  /**
   * Set the day or days of the month to make a snapshot (1-31). Accepts a
   * comma separated number of days. Defaults to '1'.
   *
   * @generated from field: optional string days_of_month = 4;
   */
  daysOfMonth?: string;
};

/**
 * Describes the message google.cloud.netapp.v1.MonthlySchedule.
 * Use `create(MonthlyScheduleSchema)` to create a new message.
 */
export const MonthlyScheduleSchema: GenMessage<MonthlySchedule> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 14);

/**
 * View only mount options for a volume.
 *
 * @generated from message google.cloud.netapp.v1.MountOption
 */
export type MountOption = Message<"google.cloud.netapp.v1.MountOption"> & {
  /**
   * Export string
   *
   * @generated from field: string export = 1;
   */
  export: string;

  /**
   * Full export string
   *
   * @generated from field: string export_full = 2;
   */
  exportFull: string;

  /**
   * Protocol to mount with.
   *
   * @generated from field: google.cloud.netapp.v1.Protocols protocol = 3;
   */
  protocol: Protocols;

  /**
   * Instructions for mounting
   *
   * @generated from field: string instructions = 4;
   */
  instructions: string;
};

/**
 * Describes the message google.cloud.netapp.v1.MountOption.
 * Use `create(MountOptionSchema)` to create a new message.
 */
export const MountOptionSchema: GenMessage<MountOption> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 15);

/**
 * The RestoreParameters if volume is created from a snapshot or backup.
 *
 * @generated from message google.cloud.netapp.v1.RestoreParameters
 */
export type RestoreParameters = Message<"google.cloud.netapp.v1.RestoreParameters"> & {
  /**
   * The source that the volume is created from.
   *
   * @generated from oneof google.cloud.netapp.v1.RestoreParameters.source
   */
  source: {
    /**
     * Full name of the snapshot resource.
     * Format:
     * projects/{project}/locations/{location}/volumes/{volume}/snapshots/{snapshot}
     *
     * @generated from field: string source_snapshot = 1;
     */
    value: string;
    case: "sourceSnapshot";
  } | {
    /**
     * Full name of the backup resource.
     * Format:
     * projects/{project}/locations/{location}/backupVaults/{backup_vault_id}/backups/{backup_id}
     *
     * @generated from field: string source_backup = 2;
     */
    value: string;
    case: "sourceBackup";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.netapp.v1.RestoreParameters.
 * Use `create(RestoreParametersSchema)` to create a new message.
 */
export const RestoreParametersSchema: GenMessage<RestoreParameters> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 16);

/**
 * BackupConfig contains backup related config on a volume.
 *
 * @generated from message google.cloud.netapp.v1.BackupConfig
 */
export type BackupConfig = Message<"google.cloud.netapp.v1.BackupConfig"> & {
  /**
   * Optional. When specified, schedule backups will be created based on the
   * policy configuration.
   *
   * @generated from field: repeated string backup_policies = 1;
   */
  backupPolicies: string[];

  /**
   * Optional. Name of backup vault.
   * Format:
   * projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}
   *
   * @generated from field: string backup_vault = 2;
   */
  backupVault: string;

  /**
   * Optional. When set to true, scheduled backup is enabled on the volume.
   * This field should be nil when there's no backup policy attached.
   *
   * @generated from field: optional bool scheduled_backup_enabled = 3;
   */
  scheduledBackupEnabled?: boolean;

  /**
   * Output only. Total size of all backups in a chain in bytes = baseline
   * backup size + sum(incremental backup size).
   *
   * @generated from field: optional int64 backup_chain_bytes = 4;
   */
  backupChainBytes?: bigint;
};

/**
 * Describes the message google.cloud.netapp.v1.BackupConfig.
 * Use `create(BackupConfigSchema)` to create a new message.
 */
export const BackupConfigSchema: GenMessage<BackupConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 17);

/**
 * Defines tiering policy for the volume.
 *
 * @generated from message google.cloud.netapp.v1.TieringPolicy
 */
export type TieringPolicy = Message<"google.cloud.netapp.v1.TieringPolicy"> & {
  /**
   * Optional. Flag indicating if the volume has tiering policy enable/pause.
   * Default is PAUSED.
   *
   * @generated from field: optional google.cloud.netapp.v1.TieringPolicy.TierAction tier_action = 1;
   */
  tierAction?: TieringPolicy_TierAction;

  /**
   * Optional. Time in days to mark the volume's data block as cold and make it
   * eligible for tiering, can be range from 7-183. Default is 31.
   *
   * @generated from field: optional int32 cooling_threshold_days = 2;
   */
  coolingThresholdDays?: number;
};

/**
 * Describes the message google.cloud.netapp.v1.TieringPolicy.
 * Use `create(TieringPolicySchema)` to create a new message.
 */
export const TieringPolicySchema: GenMessage<TieringPolicy> = /*@__PURE__*/
  messageDesc(file_google_cloud_netapp_v1_volume, 18);

/**
 * Tier action for the volume.
 *
 * @generated from enum google.cloud.netapp.v1.TieringPolicy.TierAction
 */
export enum TieringPolicy_TierAction {
  /**
   * Unspecified.
   *
   * @generated from enum value: TIER_ACTION_UNSPECIFIED = 0;
   */
  TIER_ACTION_UNSPECIFIED = 0,

  /**
   * When tiering is enabled, new cold data will be tiered.
   *
   * @generated from enum value: ENABLED = 1;
   */
  ENABLED = 1,

  /**
   * When paused, tiering won't be performed on new data. Existing data stays
   * tiered until accessed.
   *
   * @generated from enum value: PAUSED = 2;
   */
  PAUSED = 2,
}

/**
 * Describes the enum google.cloud.netapp.v1.TieringPolicy.TierAction.
 */
export const TieringPolicy_TierActionSchema: GenEnum<TieringPolicy_TierAction> = /*@__PURE__*/
  enumDesc(file_google_cloud_netapp_v1_volume, 18, 0);

/**
 * Protocols is an enum of all the supported network protocols for a volume.
 *
 * @generated from enum google.cloud.netapp.v1.Protocols
 */
export enum Protocols {
  /**
   * Unspecified protocol
   *
   * @generated from enum value: PROTOCOLS_UNSPECIFIED = 0;
   */
  PROTOCOLS_UNSPECIFIED = 0,

  /**
   * NFS V3 protocol
   *
   * @generated from enum value: NFSV3 = 1;
   */
  NFSV3 = 1,

  /**
   * NFS V4 protocol
   *
   * @generated from enum value: NFSV4 = 2;
   */
  NFSV4 = 2,

  /**
   * SMB protocol
   *
   * @generated from enum value: SMB = 3;
   */
  SMB = 3,
}

/**
 * Describes the enum google.cloud.netapp.v1.Protocols.
 */
export const ProtocolsSchema: GenEnum<Protocols> = /*@__PURE__*/
  enumDesc(file_google_cloud_netapp_v1_volume, 0);

/**
 * AccessType is an enum of all the supported access types for a volume.
 *
 * @generated from enum google.cloud.netapp.v1.AccessType
 */
export enum AccessType {
  /**
   * Unspecified Access Type
   *
   * @generated from enum value: ACCESS_TYPE_UNSPECIFIED = 0;
   */
  ACCESS_TYPE_UNSPECIFIED = 0,

  /**
   * Read Only
   *
   * @generated from enum value: READ_ONLY = 1;
   */
  READ_ONLY = 1,

  /**
   * Read Write
   *
   * @generated from enum value: READ_WRITE = 2;
   */
  READ_WRITE = 2,

  /**
   * None
   *
   * @generated from enum value: READ_NONE = 3;
   */
  READ_NONE = 3,
}

/**
 * Describes the enum google.cloud.netapp.v1.AccessType.
 */
export const AccessTypeSchema: GenEnum<AccessType> = /*@__PURE__*/
  enumDesc(file_google_cloud_netapp_v1_volume, 1);

/**
 * SMBSettings
 * Modifies the behaviour of a SMB volume.
 *
 * @generated from enum google.cloud.netapp.v1.SMBSettings
 */
export enum SMBSettings {
  /**
   * Unspecified default option
   *
   * @generated from enum value: SMB_SETTINGS_UNSPECIFIED = 0;
   */
  SMB_SETTINGS_UNSPECIFIED = 0,

  /**
   * SMB setting encrypt data
   *
   * @generated from enum value: ENCRYPT_DATA = 1;
   */
  ENCRYPT_DATA = 1,

  /**
   * SMB setting browsable
   *
   * @generated from enum value: BROWSABLE = 2;
   */
  BROWSABLE = 2,

  /**
   * SMB setting notify change
   *
   * @generated from enum value: CHANGE_NOTIFY = 3;
   */
  CHANGE_NOTIFY = 3,

  /**
   * SMB setting not to notify change
   *
   * @generated from enum value: NON_BROWSABLE = 4;
   */
  NON_BROWSABLE = 4,

  /**
   * SMB setting oplocks
   *
   * @generated from enum value: OPLOCKS = 5;
   */
  OPLOCKS = 5,

  /**
   * SMB setting to show snapshots
   *
   * @generated from enum value: SHOW_SNAPSHOT = 6;
   */
  SHOW_SNAPSHOT = 6,

  /**
   * SMB setting to show previous versions
   *
   * @generated from enum value: SHOW_PREVIOUS_VERSIONS = 7;
   */
  SHOW_PREVIOUS_VERSIONS = 7,

  /**
   * SMB setting to access volume based on enumerartion
   *
   * @generated from enum value: ACCESS_BASED_ENUMERATION = 8;
   */
  ACCESS_BASED_ENUMERATION = 8,

  /**
   * Continuously available enumeration
   *
   * @generated from enum value: CONTINUOUSLY_AVAILABLE = 9;
   */
  CONTINUOUSLY_AVAILABLE = 9,
}

/**
 * Describes the enum google.cloud.netapp.v1.SMBSettings.
 */
export const SMBSettingsSchema: GenEnum<SMBSettings> = /*@__PURE__*/
  enumDesc(file_google_cloud_netapp_v1_volume, 2);

/**
 * The security style of the volume, can be either UNIX or NTFS.
 *
 * @generated from enum google.cloud.netapp.v1.SecurityStyle
 */
export enum SecurityStyle {
  /**
   * SecurityStyle is unspecified
   *
   * @generated from enum value: SECURITY_STYLE_UNSPECIFIED = 0;
   */
  SECURITY_STYLE_UNSPECIFIED = 0,

  /**
   * SecurityStyle uses NTFS
   *
   * @generated from enum value: NTFS = 1;
   */
  NTFS = 1,

  /**
   * SecurityStyle uses UNIX
   *
   * @generated from enum value: UNIX = 2;
   */
  UNIX = 2,
}

/**
 * Describes the enum google.cloud.netapp.v1.SecurityStyle.
 */
export const SecurityStyleSchema: GenEnum<SecurityStyle> = /*@__PURE__*/
  enumDesc(file_google_cloud_netapp_v1_volume, 3);

/**
 * Actions to be restricted for a volume.
 *
 * @generated from enum google.cloud.netapp.v1.RestrictedAction
 */
export enum RestrictedAction {
  /**
   * Unspecified restricted action
   *
   * @generated from enum value: RESTRICTED_ACTION_UNSPECIFIED = 0;
   */
  RESTRICTED_ACTION_UNSPECIFIED = 0,

  /**
   * Prevent volume from being deleted when mounted.
   *
   * @generated from enum value: DELETE = 1;
   */
  DELETE = 1,
}

/**
 * Describes the enum google.cloud.netapp.v1.RestrictedAction.
 */
export const RestrictedActionSchema: GenEnum<RestrictedAction> = /*@__PURE__*/
  enumDesc(file_google_cloud_netapp_v1_volume, 4);

