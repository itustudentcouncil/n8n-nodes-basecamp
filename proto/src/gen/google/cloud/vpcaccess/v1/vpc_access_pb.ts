// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/vpcaccess/v1/vpc_access.proto (package google.cloud.vpcaccess.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/vpcaccess/v1/vpc_access.proto.
 */
export const file_google_cloud_vpcaccess_v1_vpc_access: GenFile = /*@__PURE__*/
  fileDesc("Cipnb29nbGUvY2xvdWQvdnBjYWNjZXNzL3YxL3ZwY19hY2Nlc3MucHJvdG8SGWdvb2dsZS5jbG91ZC52cGNhY2Nlc3MudjEiyAQKCUNvbm5lY3RvchIMCgRuYW1lGAEgASgJEg8KB25ldHdvcmsYAiABKAkSFQoNaXBfY2lkcl9yYW5nZRgDIAEoCRI+CgVzdGF0ZRgEIAEoDjIqLmdvb2dsZS5jbG91ZC52cGNhY2Nlc3MudjEuQ29ubmVjdG9yLlN0YXRlQgPgQQMSFgoObWluX3Rocm91Z2hwdXQYBSABKAUSFgoObWF4X3Rocm91Z2hwdXQYBiABKAUSHwoSY29ubmVjdGVkX3Byb2plY3RzGAcgAygJQgPgQQMSOwoGc3VibmV0GAggASgLMisuZ29vZ2xlLmNsb3VkLnZwY2FjY2Vzcy52MS5Db25uZWN0b3IuU3VibmV0EhQKDG1hY2hpbmVfdHlwZRgKIAEoCRIVCg1taW5faW5zdGFuY2VzGAsgASgFEhUKDW1heF9pbnN0YW5jZXMYDCABKAUaKgoGU3VibmV0EgwKBG5hbWUYASABKAkSEgoKcHJvamVjdF9pZBgCIAEoCSJeCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgkKBVJFQURZEAESDAoIQ1JFQVRJTkcQAhIMCghERUxFVElORxADEgkKBUVSUk9SEAQSDAoIVVBEQVRJTkcQBTpn6kFkCiJ2cGNhY2Nlc3MuZ29vZ2xlYXBpcy5jb20vQ29ubmVjdG9yEj5wcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vY29ubmVjdG9ycy97Y29ubmVjdG9yfSKsAQoWQ3JlYXRlQ29ubmVjdG9yUmVxdWVzdBI5CgZwYXJlbnQYASABKAlCKeBBAvpBIwohbG9jYXRpb25zLmdvb2dsZWFwaXMuY29tL0xvY2F0aW9uEhkKDGNvbm5lY3Rvcl9pZBgCIAEoCUID4EECEjwKCWNvbm5lY3RvchgDIAEoCzIkLmdvb2dsZS5jbG91ZC52cGNhY2Nlc3MudjEuQ29ubmVjdG9yQgPgQQIiTwoTR2V0Q29ubmVjdG9yUmVxdWVzdBI4CgRuYW1lGAEgASgJQirgQQL6QSQKInZwY2FjY2Vzcy5nb29nbGVhcGlzLmNvbS9Db25uZWN0b3IieQoVTGlzdENvbm5lY3RvcnNSZXF1ZXN0EjkKBnBhcmVudBgBIAEoCUIp4EEC+kEjCiFsb2NhdGlvbnMuZ29vZ2xlYXBpcy5jb20vTG9jYXRpb24SEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkiawoWTGlzdENvbm5lY3RvcnNSZXNwb25zZRI4Cgpjb25uZWN0b3JzGAEgAygLMiQuZ29vZ2xlLmNsb3VkLnZwY2FjY2Vzcy52MS5Db25uZWN0b3ISFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIlIKFkRlbGV0ZUNvbm5lY3RvclJlcXVlc3QSOAoEbmFtZRgBIAEoCUIq4EEC+kEkCiJ2cGNhY2Nlc3MuZ29vZ2xlYXBpcy5jb20vQ29ubmVjdG9yIs0BChFPcGVyYXRpb25NZXRhZGF0YRITCgZtZXRob2QYASABKAlCA+BBAxI0CgtjcmVhdGVfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxIxCghlbmRfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI6CgZ0YXJnZXQYBSABKAlCKuBBA/pBJAoidnBjYWNjZXNzLmdvb2dsZWFwaXMuY29tL0Nvbm5lY3RvcjL8BgoQVnBjQWNjZXNzU2VydmljZRLoAQoPQ3JlYXRlQ29ubmVjdG9yEjEuZ29vZ2xlLmNsb3VkLnZwY2FjY2Vzcy52MS5DcmVhdGVDb25uZWN0b3JSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKCAcpBHgoJQ29ubmVjdG9yEhFPcGVyYXRpb25NZXRhZGF0YdpBHXBhcmVudCxjb25uZWN0b3JfaWQsY29ubmVjdG9ygtPkkwI7Ogljb25uZWN0b3IiLi92MS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L2Nvbm5lY3RvcnMSowEKDEdldENvbm5lY3RvchIuLmdvb2dsZS5jbG91ZC52cGNhY2Nlc3MudjEuR2V0Q29ubmVjdG9yUmVxdWVzdBokLmdvb2dsZS5jbG91ZC52cGNhY2Nlc3MudjEuQ29ubmVjdG9yIj3aQQRuYW1lgtPkkwIwEi4vdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jb25uZWN0b3JzLyp9ErYBCg5MaXN0Q29ubmVjdG9ycxIwLmdvb2dsZS5jbG91ZC52cGNhY2Nlc3MudjEuTGlzdENvbm5lY3RvcnNSZXF1ZXN0GjEuZ29vZ2xlLmNsb3VkLnZwY2FjY2Vzcy52MS5MaXN0Q29ubmVjdG9yc1Jlc3BvbnNlIj/aQQZwYXJlbnSC0+STAjASLi92MS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L2Nvbm5lY3RvcnMSzwEKD0RlbGV0ZUNvbm5lY3RvchIxLmdvb2dsZS5jbG91ZC52cGNhY2Nlc3MudjEuRGVsZXRlQ29ubmVjdG9yUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24iaspBKgoVZ29vZ2xlLnByb3RvYnVmLkVtcHR5EhFPcGVyYXRpb25NZXRhZGF0YdpBBG5hbWWC0+STAjAqLi92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2Nvbm5lY3RvcnMvKn0aTMpBGHZwY2FjY2Vzcy5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1CxQEKHWNvbS5nb29nbGUuY2xvdWQudnBjYWNjZXNzLnYxQg5WcGNBY2Nlc3NQcm90b1ABWjtjbG91ZC5nb29nbGUuY29tL2dvL3ZwY2FjY2Vzcy9hcGl2MS92cGNhY2Nlc3NwYjt2cGNhY2Nlc3NwYqoCGUdvb2dsZS5DbG91ZC5WcGNBY2Nlc3MuVjHKAhlHb29nbGVcQ2xvdWRcVnBjQWNjZXNzXFYx6gIcR29vZ2xlOjpDbG91ZDo6VnBjQWNjZXNzOjpWMWIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_longrunning_operations, file_google_protobuf_timestamp]);

/**
 * Definition of a Serverless VPC Access connector.
 *
 * @generated from message google.cloud.vpcaccess.v1.Connector
 */
export type Connector = Message<"google.cloud.vpcaccess.v1.Connector"> & {
  /**
   * The resource name in the format `projects/*\/locations/*\/connectors/*`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Name of a VPC network.
   *
   * @generated from field: string network = 2;
   */
  network: string;

  /**
   * The range of internal addresses that follows RFC 4632 notation.
   * Example: `10.132.0.0/28`.
   *
   * @generated from field: string ip_cidr_range = 3;
   */
  ipCidrRange: string;

  /**
   * Output only. State of the VPC access connector.
   *
   * @generated from field: google.cloud.vpcaccess.v1.Connector.State state = 4;
   */
  state: Connector_State;

  /**
   * Minimum throughput of the connector in Mbps. Default and min is 200.
   *
   * @generated from field: int32 min_throughput = 5;
   */
  minThroughput: number;

  /**
   * Maximum throughput of the connector in Mbps. Default is 300, max is 1000.
   *
   * @generated from field: int32 max_throughput = 6;
   */
  maxThroughput: number;

  /**
   * Output only. List of projects using the connector.
   *
   * @generated from field: repeated string connected_projects = 7;
   */
  connectedProjects: string[];

  /**
   * The subnet in which to house the VPC Access Connector.
   *
   * @generated from field: google.cloud.vpcaccess.v1.Connector.Subnet subnet = 8;
   */
  subnet?: Connector_Subnet;

  /**
   * Machine type of VM Instance underlying connector. Default is e2-micro
   *
   * @generated from field: string machine_type = 10;
   */
  machineType: string;

  /**
   * Minimum value of instances in autoscaling group underlying the connector.
   *
   * @generated from field: int32 min_instances = 11;
   */
  minInstances: number;

  /**
   * Maximum value of instances in autoscaling group underlying the connector.
   *
   * @generated from field: int32 max_instances = 12;
   */
  maxInstances: number;
};

/**
 * Describes the message google.cloud.vpcaccess.v1.Connector.
 * Use `create(ConnectorSchema)` to create a new message.
 */
export const ConnectorSchema: GenMessage<Connector> = /*@__PURE__*/
  messageDesc(file_google_cloud_vpcaccess_v1_vpc_access, 0);

/**
 * The subnet in which to house the connector
 *
 * @generated from message google.cloud.vpcaccess.v1.Connector.Subnet
 */
export type Connector_Subnet = Message<"google.cloud.vpcaccess.v1.Connector.Subnet"> & {
  /**
   * Subnet name (relative, not fully qualified).
   * E.g. if the full subnet selfLink is
   * https://compute.googleapis.com/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetName}
   * the correct input for this field would be {subnetName}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Project in which the subnet exists.
   * If not set, this project is assumed to be the project for which
   * the connector create request was issued.
   *
   * @generated from field: string project_id = 2;
   */
  projectId: string;
};

/**
 * Describes the message google.cloud.vpcaccess.v1.Connector.Subnet.
 * Use `create(Connector_SubnetSchema)` to create a new message.
 */
export const Connector_SubnetSchema: GenMessage<Connector_Subnet> = /*@__PURE__*/
  messageDesc(file_google_cloud_vpcaccess_v1_vpc_access, 0, 0);

/**
 * State of a connector.
 *
 * @generated from enum google.cloud.vpcaccess.v1.Connector.State
 */
export enum Connector_State {
  /**
   * Invalid state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Connector is deployed and ready to receive traffic.
   *
   * @generated from enum value: READY = 1;
   */
  READY = 1,

  /**
   * An Insert operation is in progress. Transient condition.
   *
   * @generated from enum value: CREATING = 2;
   */
  CREATING = 2,

  /**
   * A Delete operation is in progress. Transient condition.
   *
   * @generated from enum value: DELETING = 3;
   */
  DELETING = 3,

  /**
   * Connector is in a bad state, manual deletion recommended.
   *
   * @generated from enum value: ERROR = 4;
   */
  ERROR = 4,

  /**
   * The connector is being updated.
   *
   * @generated from enum value: UPDATING = 5;
   */
  UPDATING = 5,
}

/**
 * Describes the enum google.cloud.vpcaccess.v1.Connector.State.
 */
export const Connector_StateSchema: GenEnum<Connector_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_vpcaccess_v1_vpc_access, 0, 0);

/**
 * Request for creating a Serverless VPC Access connector.
 *
 * @generated from message google.cloud.vpcaccess.v1.CreateConnectorRequest
 */
export type CreateConnectorRequest = Message<"google.cloud.vpcaccess.v1.CreateConnectorRequest"> & {
  /**
   * Required. The project and location in which the configuration should be created,
   * specified in the format `projects/*\/locations/*`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ID to use for this connector.
   *
   * @generated from field: string connector_id = 2;
   */
  connectorId: string;

  /**
   * Required. Resource to create.
   *
   * @generated from field: google.cloud.vpcaccess.v1.Connector connector = 3;
   */
  connector?: Connector;
};

/**
 * Describes the message google.cloud.vpcaccess.v1.CreateConnectorRequest.
 * Use `create(CreateConnectorRequestSchema)` to create a new message.
 */
export const CreateConnectorRequestSchema: GenMessage<CreateConnectorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vpcaccess_v1_vpc_access, 1);

/**
 * Request for getting a Serverless VPC Access connector.
 *
 * @generated from message google.cloud.vpcaccess.v1.GetConnectorRequest
 */
export type GetConnectorRequest = Message<"google.cloud.vpcaccess.v1.GetConnectorRequest"> & {
  /**
   * Required. Name of a Serverless VPC Access connector to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vpcaccess.v1.GetConnectorRequest.
 * Use `create(GetConnectorRequestSchema)` to create a new message.
 */
export const GetConnectorRequestSchema: GenMessage<GetConnectorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vpcaccess_v1_vpc_access, 2);

/**
 * Request for listing Serverless VPC Access connectors in a location.
 *
 * @generated from message google.cloud.vpcaccess.v1.ListConnectorsRequest
 */
export type ListConnectorsRequest = Message<"google.cloud.vpcaccess.v1.ListConnectorsRequest"> & {
  /**
   * Required. The project and location from which the routes should be listed.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Maximum number of functions to return per call.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Continuation token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.vpcaccess.v1.ListConnectorsRequest.
 * Use `create(ListConnectorsRequestSchema)` to create a new message.
 */
export const ListConnectorsRequestSchema: GenMessage<ListConnectorsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vpcaccess_v1_vpc_access, 3);

/**
 * Response for listing Serverless VPC Access connectors.
 *
 * @generated from message google.cloud.vpcaccess.v1.ListConnectorsResponse
 */
export type ListConnectorsResponse = Message<"google.cloud.vpcaccess.v1.ListConnectorsResponse"> & {
  /**
   * List of Serverless VPC Access connectors.
   *
   * @generated from field: repeated google.cloud.vpcaccess.v1.Connector connectors = 1;
   */
  connectors: Connector[];

  /**
   * Continuation token.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.vpcaccess.v1.ListConnectorsResponse.
 * Use `create(ListConnectorsResponseSchema)` to create a new message.
 */
export const ListConnectorsResponseSchema: GenMessage<ListConnectorsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vpcaccess_v1_vpc_access, 4);

/**
 * Request for deleting a Serverless VPC Access connector.
 *
 * @generated from message google.cloud.vpcaccess.v1.DeleteConnectorRequest
 */
export type DeleteConnectorRequest = Message<"google.cloud.vpcaccess.v1.DeleteConnectorRequest"> & {
  /**
   * Required. Name of a Serverless VPC Access connector to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vpcaccess.v1.DeleteConnectorRequest.
 * Use `create(DeleteConnectorRequestSchema)` to create a new message.
 */
export const DeleteConnectorRequestSchema: GenMessage<DeleteConnectorRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vpcaccess_v1_vpc_access, 5);

/**
 * Metadata for google.longrunning.Operation.
 *
 * @generated from message google.cloud.vpcaccess.v1.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.vpcaccess.v1.OperationMetadata"> & {
  /**
   * Output only. Method that initiated the operation e.g.
   * google.cloud.vpcaccess.v1.Connectors.CreateConnector.
   *
   * @generated from field: string method = 1;
   */
  method: string;

  /**
   * Output only. Time when the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. Time when the operation completed.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;

  /**
   * Output only. Name of the resource that this operation is acting on e.g.
   * projects/my-project/locations/us-central1/connectors/v1.
   *
   * @generated from field: string target = 5;
   */
  target: string;
};

/**
 * Describes the message google.cloud.vpcaccess.v1.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_vpcaccess_v1_vpc_access, 6);

/**
 * Serverless VPC Access API allows users to create and manage connectors for
 * App Engine, Cloud Functions and Cloud Run to have internal connections to
 * Virtual Private Cloud networks.
 *
 * @generated from service google.cloud.vpcaccess.v1.VpcAccessService
 */
export const VpcAccessService: GenService<{
  /**
   * Creates a Serverless VPC Access connector, returns an operation.
   *
   * @generated from rpc google.cloud.vpcaccess.v1.VpcAccessService.CreateConnector
   */
  createConnector: {
    methodKind: "unary";
    input: typeof CreateConnectorRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets a Serverless VPC Access connector. Returns NOT_FOUND if the resource
   * does not exist.
   *
   * @generated from rpc google.cloud.vpcaccess.v1.VpcAccessService.GetConnector
   */
  getConnector: {
    methodKind: "unary";
    input: typeof GetConnectorRequestSchema;
    output: typeof ConnectorSchema;
  },
  /**
   * Lists Serverless VPC Access connectors.
   *
   * @generated from rpc google.cloud.vpcaccess.v1.VpcAccessService.ListConnectors
   */
  listConnectors: {
    methodKind: "unary";
    input: typeof ListConnectorsRequestSchema;
    output: typeof ListConnectorsResponseSchema;
  },
  /**
   * Deletes a Serverless VPC Access connector. Returns NOT_FOUND if the
   * resource does not exist.
   *
   * @generated from rpc google.cloud.vpcaccess.v1.VpcAccessService.DeleteConnector
   */
  deleteConnector: {
    methodKind: "unary";
    input: typeof DeleteConnectorRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_vpcaccess_v1_vpc_access, 0);

