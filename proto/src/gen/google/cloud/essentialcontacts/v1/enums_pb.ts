// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/essentialcontacts/v1/enums.proto (package google.cloud.essentialcontacts.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc } from "@bufbuild/protobuf/codegenv1";

/**
 * Describes the file google/cloud/essentialcontacts/v1/enums.proto.
 */
export const file_google_cloud_essentialcontacts_v1_enums: GenFile = /*@__PURE__*/
  fileDesc("Ci1nb29nbGUvY2xvdWQvZXNzZW50aWFsY29udGFjdHMvdjEvZW51bXMucHJvdG8SIWdvb2dsZS5jbG91ZC5lc3NlbnRpYWxjb250YWN0cy52MSq5AQoUTm90aWZpY2F0aW9uQ2F0ZWdvcnkSJQohTk9USUZJQ0FUSU9OX0NBVEVHT1JZX1VOU1BFQ0lGSUVEEAASBwoDQUxMEAISDgoKU1VTUEVOU0lPThADEgwKCFNFQ1VSSVRZEAUSDQoJVEVDSE5JQ0FMEAYSCwoHQklMTElORxAHEgkKBUxFR0FMEAgSEwoPUFJPRFVDVF9VUERBVEVTEAkSFwoTVEVDSE5JQ0FMX0lOQ0lERU5UUxAKKksKD1ZhbGlkYXRpb25TdGF0ZRIgChxWQUxJREFUSU9OX1NUQVRFX1VOU1BFQ0lGSUVEEAASCQoFVkFMSUQQARILCgdJTlZBTElEEAJC+QEKJWNvbS5nb29nbGUuY2xvdWQuZXNzZW50aWFsY29udGFjdHMudjFCCkVudW1zUHJvdG9QAVpTY2xvdWQuZ29vZ2xlLmNvbS9nby9lc3NlbnRpYWxjb250YWN0cy9hcGl2MS9lc3NlbnRpYWxjb250YWN0c3BiO2Vzc2VudGlhbGNvbnRhY3RzcGKqAiFHb29nbGUuQ2xvdWQuRXNzZW50aWFsQ29udGFjdHMuVjHKAiFHb29nbGVcQ2xvdWRcRXNzZW50aWFsQ29udGFjdHNcVjHqAiRHb29nbGU6OkNsb3VkOjpFc3NlbnRpYWxDb250YWN0czo6VjFiBnByb3RvMw");

/**
 * The notification categories that an essential contact can be subscribed to.
 * Each notification will be categorized by the sender into one of the following
 * categories. All contacts that are subscribed to that category will receive
 * the notification.
 *
 * @generated from enum google.cloud.essentialcontacts.v1.NotificationCategory
 */
export enum NotificationCategory {
  /**
   * Notification category is unrecognized or unspecified.
   *
   * @generated from enum value: NOTIFICATION_CATEGORY_UNSPECIFIED = 0;
   */
  NOTIFICATION_CATEGORY_UNSPECIFIED = 0,

  /**
   * All notifications related to the resource, including notifications
   * pertaining to categories added in the future.
   *
   * @generated from enum value: ALL = 2;
   */
  ALL = 2,

  /**
   * Notifications related to imminent account suspension.
   *
   * @generated from enum value: SUSPENSION = 3;
   */
  SUSPENSION = 3,

  /**
   * Notifications related to security/privacy incidents, notifications, and
   * vulnerabilities.
   *
   * @generated from enum value: SECURITY = 5;
   */
  SECURITY = 5,

  /**
   * Notifications related to technical events and issues such as outages,
   * errors, or bugs.
   *
   * @generated from enum value: TECHNICAL = 6;
   */
  TECHNICAL = 6,

  /**
   * Notifications related to billing and payments notifications, price updates,
   * errors, or credits.
   *
   * @generated from enum value: BILLING = 7;
   */
  BILLING = 7,

  /**
   * Notifications related to enforcement actions, regulatory compliance, or
   * government notices.
   *
   * @generated from enum value: LEGAL = 8;
   */
  LEGAL = 8,

  /**
   * Notifications related to new versions, product terms updates, or
   * deprecations.
   *
   * @generated from enum value: PRODUCT_UPDATES = 9;
   */
  PRODUCT_UPDATES = 9,

  /**
   * Child category of TECHNICAL. If assigned, technical incident notifications
   * will go to these contacts instead of TECHNICAL.
   *
   * @generated from enum value: TECHNICAL_INCIDENTS = 10;
   */
  TECHNICAL_INCIDENTS = 10,
}

/**
 * Describes the enum google.cloud.essentialcontacts.v1.NotificationCategory.
 */
export const NotificationCategorySchema: GenEnum<NotificationCategory> = /*@__PURE__*/
  enumDesc(file_google_cloud_essentialcontacts_v1_enums, 0);

/**
 * A contact's validation state indicates whether or not it is the correct
 * contact to be receiving notifications for a particular resource.
 *
 * @generated from enum google.cloud.essentialcontacts.v1.ValidationState
 */
export enum ValidationState {
  /**
   * The validation state is unknown or unspecified.
   *
   * @generated from enum value: VALIDATION_STATE_UNSPECIFIED = 0;
   */
  VALIDATION_STATE_UNSPECIFIED = 0,

  /**
   * The contact is marked as valid. This is usually done manually by the
   * contact admin. All new contacts begin in the valid state.
   *
   * @generated from enum value: VALID = 1;
   */
  VALID = 1,

  /**
   * The contact is considered invalid. This may become the state if the
   * contact's email is found to be unreachable.
   *
   * @generated from enum value: INVALID = 2;
   */
  INVALID = 2,
}

/**
 * Describes the enum google.cloud.essentialcontacts.v1.ValidationState.
 */
export const ValidationStateSchema: GenEnum<ValidationState> = /*@__PURE__*/
  enumDesc(file_google_cloud_essentialcontacts_v1_enums, 1);

