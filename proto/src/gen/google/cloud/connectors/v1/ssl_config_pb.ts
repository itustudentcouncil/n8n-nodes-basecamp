// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/connectors/v1/ssl_config.proto (package google.cloud.connectors.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { ConfigVariable, ConfigVariableTemplate, Secret } from "./common_pb";
import { file_google_cloud_connectors_v1_common } from "./common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/connectors/v1/ssl_config.proto.
 */
export const file_google_cloud_connectors_v1_ssl_config: GenFile = /*@__PURE__*/
  fileDesc("Citnb29nbGUvY2xvdWQvY29ubmVjdG9ycy92MS9zc2xfY29uZmlnLnByb3RvEhpnb29nbGUuY2xvdWQuY29ubmVjdG9ycy52MSK2AgoRU3NsQ29uZmlnVGVtcGxhdGUSNQoIc3NsX3R5cGUYASABKA4yIy5nb29nbGUuY2xvdWQuY29ubmVjdG9ycy52MS5Tc2xUeXBlEhgKEGlzX3Rsc19tYW5kYXRvcnkYAiABKAgSPgoQc2VydmVyX2NlcnRfdHlwZRgDIAMoDjIkLmdvb2dsZS5jbG91ZC5jb25uZWN0b3JzLnYxLkNlcnRUeXBlEj4KEGNsaWVudF9jZXJ0X3R5cGUYBCADKA4yJC5nb29nbGUuY2xvdWQuY29ubmVjdG9ycy52MS5DZXJ0VHlwZRJQChRhZGRpdGlvbmFsX3ZhcmlhYmxlcxgFIAMoCzIyLmdvb2dsZS5jbG91ZC5jb25uZWN0b3JzLnYxLkNvbmZpZ1ZhcmlhYmxlVGVtcGxhdGUiogUKCVNzbENvbmZpZxIxCgR0eXBlGAEgASgOMiMuZ29vZ2xlLmNsb3VkLmNvbm5lY3RvcnMudjEuU3NsVHlwZRJFCgt0cnVzdF9tb2RlbBgCIAEoDjIwLmdvb2dsZS5jbG91ZC5jb25uZWN0b3JzLnYxLlNzbENvbmZpZy5UcnVzdE1vZGVsEkYKGnByaXZhdGVfc2VydmVyX2NlcnRpZmljYXRlGAMgASgLMiIuZ29vZ2xlLmNsb3VkLmNvbm5lY3RvcnMudjEuU2VjcmV0Ej4KEmNsaWVudF9jZXJ0aWZpY2F0ZRgEIAEoCzIiLmdvb2dsZS5jbG91ZC5jb25uZWN0b3JzLnYxLlNlY3JldBI+ChJjbGllbnRfcHJpdmF0ZV9rZXkYBSABKAsyIi5nb29nbGUuY2xvdWQuY29ubmVjdG9ycy52MS5TZWNyZXQSQwoXY2xpZW50X3ByaXZhdGVfa2V5X3Bhc3MYBiABKAsyIi5nb29nbGUuY2xvdWQuY29ubmVjdG9ycy52MS5TZWNyZXQSPgoQc2VydmVyX2NlcnRfdHlwZRgHIAEoDjIkLmdvb2dsZS5jbG91ZC5jb25uZWN0b3JzLnYxLkNlcnRUeXBlEj4KEGNsaWVudF9jZXJ0X3R5cGUYCCABKA4yJC5nb29nbGUuY2xvdWQuY29ubmVjdG9ycy52MS5DZXJ0VHlwZRIPCgd1c2Vfc3NsGAkgASgIEkgKFGFkZGl0aW9uYWxfdmFyaWFibGVzGAogAygLMiouZ29vZ2xlLmNsb3VkLmNvbm5lY3RvcnMudjEuQ29uZmlnVmFyaWFibGUiMwoKVHJ1c3RNb2RlbBIKCgZQVUJMSUMQABILCgdQUklWQVRFEAESDAoISU5TRUNVUkUQAio2CgdTc2xUeXBlEhgKFFNTTF9UWVBFX1VOU1BFQ0lGSUVEEAASBwoDVExTEAESCAoETVRMUxACKi4KCENlcnRUeXBlEhkKFUNFUlRfVFlQRV9VTlNQRUNJRklFRBAAEgcKA1BFTRABQnIKHmNvbS5nb29nbGUuY2xvdWQuY29ubmVjdG9ycy52MUIOU3NsQ29uZmlnUHJvdG9QAVo+Y2xvdWQuZ29vZ2xlLmNvbS9nby9jb25uZWN0b3JzL2FwaXYxL2Nvbm5lY3RvcnNwYjtjb25uZWN0b3JzcGJiBnByb3RvMw", [file_google_cloud_connectors_v1_common]);

/**
 * Ssl config details of a connector version
 *
 * @generated from message google.cloud.connectors.v1.SslConfigTemplate
 */
export type SslConfigTemplate = Message<"google.cloud.connectors.v1.SslConfigTemplate"> & {
  /**
   * Controls the ssl type for the given connector version
   *
   * @generated from field: google.cloud.connectors.v1.SslType ssl_type = 1;
   */
  sslType: SslType;

  /**
   * Boolean for determining if the connector version mandates TLS.
   *
   * @generated from field: bool is_tls_mandatory = 2;
   */
  isTlsMandatory: boolean;

  /**
   * List of supported Server Cert Types
   *
   * @generated from field: repeated google.cloud.connectors.v1.CertType server_cert_type = 3;
   */
  serverCertType: CertType[];

  /**
   * List of supported Client Cert Types
   *
   * @generated from field: repeated google.cloud.connectors.v1.CertType client_cert_type = 4;
   */
  clientCertType: CertType[];

  /**
   * Any additional fields that need to be rendered
   *
   * @generated from field: repeated google.cloud.connectors.v1.ConfigVariableTemplate additional_variables = 5;
   */
  additionalVariables: ConfigVariableTemplate[];
};

/**
 * Describes the message google.cloud.connectors.v1.SslConfigTemplate.
 * Use `create(SslConfigTemplateSchema)` to create a new message.
 */
export const SslConfigTemplateSchema: GenMessage<SslConfigTemplate> = /*@__PURE__*/
  messageDesc(file_google_cloud_connectors_v1_ssl_config, 0);

/**
 * SSL Configuration of a connection
 *
 * @generated from message google.cloud.connectors.v1.SslConfig
 */
export type SslConfig = Message<"google.cloud.connectors.v1.SslConfig"> & {
  /**
   * Controls the ssl type for the given connector version.
   *
   * @generated from field: google.cloud.connectors.v1.SslType type = 1;
   */
  type: SslType;

  /**
   * Trust Model of the SSL connection
   *
   * @generated from field: google.cloud.connectors.v1.SslConfig.TrustModel trust_model = 2;
   */
  trustModel: SslConfig_TrustModel;

  /**
   * Private Server Certificate. Needs to be specified if trust model is
   * `PRIVATE`.
   *
   * @generated from field: google.cloud.connectors.v1.Secret private_server_certificate = 3;
   */
  privateServerCertificate?: Secret;

  /**
   * Client Certificate
   *
   * @generated from field: google.cloud.connectors.v1.Secret client_certificate = 4;
   */
  clientCertificate?: Secret;

  /**
   * Client Private Key
   *
   * @generated from field: google.cloud.connectors.v1.Secret client_private_key = 5;
   */
  clientPrivateKey?: Secret;

  /**
   * Secret containing the passphrase protecting the Client Private Key
   *
   * @generated from field: google.cloud.connectors.v1.Secret client_private_key_pass = 6;
   */
  clientPrivateKeyPass?: Secret;

  /**
   * Type of Server Cert (PEM/JKS/.. etc.)
   *
   * @generated from field: google.cloud.connectors.v1.CertType server_cert_type = 7;
   */
  serverCertType: CertType;

  /**
   * Type of Client Cert (PEM/JKS/.. etc.)
   *
   * @generated from field: google.cloud.connectors.v1.CertType client_cert_type = 8;
   */
  clientCertType: CertType;

  /**
   * Bool for enabling SSL
   *
   * @generated from field: bool use_ssl = 9;
   */
  useSsl: boolean;

  /**
   * Additional SSL related field values
   *
   * @generated from field: repeated google.cloud.connectors.v1.ConfigVariable additional_variables = 10;
   */
  additionalVariables: ConfigVariable[];
};

/**
 * Describes the message google.cloud.connectors.v1.SslConfig.
 * Use `create(SslConfigSchema)` to create a new message.
 */
export const SslConfigSchema: GenMessage<SslConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_connectors_v1_ssl_config, 1);

/**
 * Enum for Ttust Model
 *
 * @generated from enum google.cloud.connectors.v1.SslConfig.TrustModel
 */
export enum SslConfig_TrustModel {
  /**
   * Public Trust Model. Takes the Default Java trust store.
   *
   * @generated from enum value: PUBLIC = 0;
   */
  PUBLIC = 0,

  /**
   * Private Trust Model. Takes custom/private trust store.
   *
   * @generated from enum value: PRIVATE = 1;
   */
  PRIVATE = 1,

  /**
   * Insecure Trust Model. Accept all certificates.
   *
   * @generated from enum value: INSECURE = 2;
   */
  INSECURE = 2,
}

/**
 * Describes the enum google.cloud.connectors.v1.SslConfig.TrustModel.
 */
export const SslConfig_TrustModelSchema: GenEnum<SslConfig_TrustModel> = /*@__PURE__*/
  enumDesc(file_google_cloud_connectors_v1_ssl_config, 1, 0);

/**
 * Enum for controlling the SSL Type (TLS/MTLS)
 *
 * @generated from enum google.cloud.connectors.v1.SslType
 */
export enum SslType {
  /**
   * No SSL configuration required.
   *
   * @generated from enum value: SSL_TYPE_UNSPECIFIED = 0;
   */
  SSL_TYPE_UNSPECIFIED = 0,

  /**
   * TLS Handshake
   *
   * @generated from enum value: TLS = 1;
   */
  TLS = 1,

  /**
   * mutual TLS (MTLS) Handshake
   *
   * @generated from enum value: MTLS = 2;
   */
  MTLS = 2,
}

/**
 * Describes the enum google.cloud.connectors.v1.SslType.
 */
export const SslTypeSchema: GenEnum<SslType> = /*@__PURE__*/
  enumDesc(file_google_cloud_connectors_v1_ssl_config, 0);

/**
 * Enum for Cert Types
 *
 * @generated from enum google.cloud.connectors.v1.CertType
 */
export enum CertType {
  /**
   * Cert type unspecified.
   *
   * @generated from enum value: CERT_TYPE_UNSPECIFIED = 0;
   */
  CERT_TYPE_UNSPECIFIED = 0,

  /**
   * Privacy Enhanced Mail (PEM) Type
   *
   * @generated from enum value: PEM = 1;
   */
  PEM = 1,
}

/**
 * Describes the enum google.cloud.connectors.v1.CertType.
 */
export const CertTypeSchema: GenEnum<CertType> = /*@__PURE__*/
  enumDesc(file_google_cloud_connectors_v1_ssl_config, 1);

