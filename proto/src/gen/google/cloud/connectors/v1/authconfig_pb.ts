// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/connectors/v1/authconfig.proto (package google.cloud.connectors.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { ConfigVariable, ConfigVariableTemplate, Secret } from "./common_pb";
import { file_google_cloud_connectors_v1_common } from "./common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/connectors/v1/authconfig.proto.
 */
export const file_google_cloud_connectors_v1_authconfig: GenFile = /*@__PURE__*/
  fileDesc("Citnb29nbGUvY2xvdWQvY29ubmVjdG9ycy92MS9hdXRoY29uZmlnLnByb3RvEhpnb29nbGUuY2xvdWQuY29ubmVjdG9ycy52MSLGCAoKQXV0aENvbmZpZxI3CglhdXRoX3R5cGUYASABKA4yJC5nb29nbGUuY2xvdWQuY29ubmVjdG9ycy52MS5BdXRoVHlwZRJMCg11c2VyX3Bhc3N3b3JkGAIgASgLMjMuZ29vZ2xlLmNsb3VkLmNvbm5lY3RvcnMudjEuQXV0aENvbmZpZy5Vc2VyUGFzc3dvcmRIABJTChFvYXV0aDJfand0X2JlYXJlchgDIAEoCzI2Lmdvb2dsZS5jbG91ZC5jb25uZWN0b3JzLnYxLkF1dGhDb25maWcuT2F1dGgySnd0QmVhcmVySAASYwoZb2F1dGgyX2NsaWVudF9jcmVkZW50aWFscxgEIAEoCzI+Lmdvb2dsZS5jbG91ZC5jb25uZWN0b3JzLnYxLkF1dGhDb25maWcuT2F1dGgyQ2xpZW50Q3JlZGVudGlhbHNIABJNCg5zc2hfcHVibGljX2tleRgGIAEoCzIzLmdvb2dsZS5jbG91ZC5jb25uZWN0b3JzLnYxLkF1dGhDb25maWcuU3NoUHVibGljS2V5SAASSAoUYWRkaXRpb25hbF92YXJpYWJsZXMYBSADKAsyKi5nb29nbGUuY2xvdWQuY29ubmVjdG9ycy52MS5Db25maWdWYXJpYWJsZRpWCgxVc2VyUGFzc3dvcmQSEAoIdXNlcm5hbWUYASABKAkSNAoIcGFzc3dvcmQYAiABKAsyIi5nb29nbGUuY2xvdWQuY29ubmVjdG9ycy52MS5TZWNyZXQa3wEKD09hdXRoMkp3dEJlYXJlchI2CgpjbGllbnRfa2V5GAEgASgLMiIuZ29vZ2xlLmNsb3VkLmNvbm5lY3RvcnMudjEuU2VjcmV0ElQKCmp3dF9jbGFpbXMYAiABKAsyQC5nb29nbGUuY2xvdWQuY29ubmVjdG9ycy52MS5BdXRoQ29uZmlnLk9hdXRoMkp3dEJlYXJlci5Kd3RDbGFpbXMaPgoJSnd0Q2xhaW1zEg4KBmlzc3VlchgBIAEoCRIPCgdzdWJqZWN0GAIgASgJEhAKCGF1ZGllbmNlGAMgASgJGmcKF09hdXRoMkNsaWVudENyZWRlbnRpYWxzEhEKCWNsaWVudF9pZBgBIAEoCRI5Cg1jbGllbnRfc2VjcmV0GAIgASgLMiIuZ29vZ2xlLmNsb3VkLmNvbm5lY3RvcnMudjEuU2VjcmV0GrIBCgxTc2hQdWJsaWNLZXkSEAoIdXNlcm5hbWUYASABKAkSOwoPc3NoX2NsaWVudF9jZXJ0GAMgASgLMiIuZ29vZ2xlLmNsb3VkLmNvbm5lY3RvcnMudjEuU2VjcmV0EhEKCWNlcnRfdHlwZRgEIAEoCRJAChRzc2hfY2xpZW50X2NlcnRfcGFzcxgFIAEoCzIiLmdvb2dsZS5jbG91ZC5jb25uZWN0b3JzLnYxLlNlY3JldEIGCgR0eXBlIs8BChJBdXRoQ29uZmlnVGVtcGxhdGUSNwoJYXV0aF90eXBlGAEgASgOMiQuZ29vZ2xlLmNsb3VkLmNvbm5lY3RvcnMudjEuQXV0aFR5cGUSVQoZY29uZmlnX3ZhcmlhYmxlX3RlbXBsYXRlcxgCIAMoCzIyLmdvb2dsZS5jbG91ZC5jb25uZWN0b3JzLnYxLkNvbmZpZ1ZhcmlhYmxlVGVtcGxhdGUSFAoMZGlzcGxheV9uYW1lGAMgASgJEhMKC2Rlc2NyaXB0aW9uGAQgASgJKp0BCghBdXRoVHlwZRIZChVBVVRIX1RZUEVfVU5TUEVDSUZJRUQQABIRCg1VU0VSX1BBU1NXT1JEEAESFQoRT0FVVEgyX0pXVF9CRUFSRVIQAhIdChlPQVVUSDJfQ0xJRU5UX0NSRURFTlRJQUxTEAMSEgoOU1NIX1BVQkxJQ19LRVkQBBIZChVPQVVUSDJfQVVUSF9DT0RFX0ZMT1cQBUJzCh5jb20uZ29vZ2xlLmNsb3VkLmNvbm5lY3RvcnMudjFCD0F1dGhDb25maWdQcm90b1ABWj5jbG91ZC5nb29nbGUuY29tL2dvL2Nvbm5lY3RvcnMvYXBpdjEvY29ubmVjdG9yc3BiO2Nvbm5lY3RvcnNwYmIGcHJvdG8z", [file_google_cloud_connectors_v1_common]);

/**
 * AuthConfig defines details of a authentication type.
 *
 * @generated from message google.cloud.connectors.v1.AuthConfig
 */
export type AuthConfig = Message<"google.cloud.connectors.v1.AuthConfig"> & {
  /**
   * The type of authentication configured.
   *
   * @generated from field: google.cloud.connectors.v1.AuthType auth_type = 1;
   */
  authType: AuthType;

  /**
   * Supported auth types.
   *
   * @generated from oneof google.cloud.connectors.v1.AuthConfig.type
   */
  type: {
    /**
     * UserPassword.
     *
     * @generated from field: google.cloud.connectors.v1.AuthConfig.UserPassword user_password = 2;
     */
    value: AuthConfig_UserPassword;
    case: "userPassword";
  } | {
    /**
     * Oauth2JwtBearer.
     *
     * @generated from field: google.cloud.connectors.v1.AuthConfig.Oauth2JwtBearer oauth2_jwt_bearer = 3;
     */
    value: AuthConfig_Oauth2JwtBearer;
    case: "oauth2JwtBearer";
  } | {
    /**
     * Oauth2ClientCredentials.
     *
     * @generated from field: google.cloud.connectors.v1.AuthConfig.Oauth2ClientCredentials oauth2_client_credentials = 4;
     */
    value: AuthConfig_Oauth2ClientCredentials;
    case: "oauth2ClientCredentials";
  } | {
    /**
     * SSH Public Key.
     *
     * @generated from field: google.cloud.connectors.v1.AuthConfig.SshPublicKey ssh_public_key = 6;
     */
    value: AuthConfig_SshPublicKey;
    case: "sshPublicKey";
  } | { case: undefined; value?: undefined };

  /**
   * List containing additional auth configs.
   *
   * @generated from field: repeated google.cloud.connectors.v1.ConfigVariable additional_variables = 5;
   */
  additionalVariables: ConfigVariable[];
};

/**
 * Describes the message google.cloud.connectors.v1.AuthConfig.
 * Use `create(AuthConfigSchema)` to create a new message.
 */
export const AuthConfigSchema: GenMessage<AuthConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_connectors_v1_authconfig, 0);

/**
 * Parameters to support Username and Password Authentication.
 *
 * @generated from message google.cloud.connectors.v1.AuthConfig.UserPassword
 */
export type AuthConfig_UserPassword = Message<"google.cloud.connectors.v1.AuthConfig.UserPassword"> & {
  /**
   * Username.
   *
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * Secret version reference containing the password.
   *
   * @generated from field: google.cloud.connectors.v1.Secret password = 2;
   */
  password?: Secret;
};

/**
 * Describes the message google.cloud.connectors.v1.AuthConfig.UserPassword.
 * Use `create(AuthConfig_UserPasswordSchema)` to create a new message.
 */
export const AuthConfig_UserPasswordSchema: GenMessage<AuthConfig_UserPassword> = /*@__PURE__*/
  messageDesc(file_google_cloud_connectors_v1_authconfig, 0, 0);

/**
 * Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0
 * Authorization Grant based authentication.
 * See https://tools.ietf.org/html/rfc7523 for more details.
 *
 * @generated from message google.cloud.connectors.v1.AuthConfig.Oauth2JwtBearer
 */
export type AuthConfig_Oauth2JwtBearer = Message<"google.cloud.connectors.v1.AuthConfig.Oauth2JwtBearer"> & {
  /**
   * Secret version reference containing a PKCS#8 PEM-encoded private
   * key associated with the Client Certificate. This private key will be
   * used to sign JWTs used for the jwt-bearer authorization grant.
   * Specified in the form as: `projects/*\/secrets/*\/versions/*`.
   *
   * @generated from field: google.cloud.connectors.v1.Secret client_key = 1;
   */
  clientKey?: Secret;

  /**
   * JwtClaims providers fields to generate the token.
   *
   * @generated from field: google.cloud.connectors.v1.AuthConfig.Oauth2JwtBearer.JwtClaims jwt_claims = 2;
   */
  jwtClaims?: AuthConfig_Oauth2JwtBearer_JwtClaims;
};

/**
 * Describes the message google.cloud.connectors.v1.AuthConfig.Oauth2JwtBearer.
 * Use `create(AuthConfig_Oauth2JwtBearerSchema)` to create a new message.
 */
export const AuthConfig_Oauth2JwtBearerSchema: GenMessage<AuthConfig_Oauth2JwtBearer> = /*@__PURE__*/
  messageDesc(file_google_cloud_connectors_v1_authconfig, 0, 1);

/**
 * JWT claims used for the jwt-bearer authorization grant.
 *
 * @generated from message google.cloud.connectors.v1.AuthConfig.Oauth2JwtBearer.JwtClaims
 */
export type AuthConfig_Oauth2JwtBearer_JwtClaims = Message<"google.cloud.connectors.v1.AuthConfig.Oauth2JwtBearer.JwtClaims"> & {
  /**
   * Value for the "iss" claim.
   *
   * @generated from field: string issuer = 1;
   */
  issuer: string;

  /**
   * Value for the "sub" claim.
   *
   * @generated from field: string subject = 2;
   */
  subject: string;

  /**
   * Value for the "aud" claim.
   *
   * @generated from field: string audience = 3;
   */
  audience: string;
};

/**
 * Describes the message google.cloud.connectors.v1.AuthConfig.Oauth2JwtBearer.JwtClaims.
 * Use `create(AuthConfig_Oauth2JwtBearer_JwtClaimsSchema)` to create a new message.
 */
export const AuthConfig_Oauth2JwtBearer_JwtClaimsSchema: GenMessage<AuthConfig_Oauth2JwtBearer_JwtClaims> = /*@__PURE__*/
  messageDesc(file_google_cloud_connectors_v1_authconfig, 0, 1, 0);

/**
 * Parameters to support Oauth 2.0 Client Credentials Grant Authentication.
 * See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.
 *
 * @generated from message google.cloud.connectors.v1.AuthConfig.Oauth2ClientCredentials
 */
export type AuthConfig_Oauth2ClientCredentials = Message<"google.cloud.connectors.v1.AuthConfig.Oauth2ClientCredentials"> & {
  /**
   * The client identifier.
   *
   * @generated from field: string client_id = 1;
   */
  clientId: string;

  /**
   * Secret version reference containing the client secret.
   *
   * @generated from field: google.cloud.connectors.v1.Secret client_secret = 2;
   */
  clientSecret?: Secret;
};

/**
 * Describes the message google.cloud.connectors.v1.AuthConfig.Oauth2ClientCredentials.
 * Use `create(AuthConfig_Oauth2ClientCredentialsSchema)` to create a new message.
 */
export const AuthConfig_Oauth2ClientCredentialsSchema: GenMessage<AuthConfig_Oauth2ClientCredentials> = /*@__PURE__*/
  messageDesc(file_google_cloud_connectors_v1_authconfig, 0, 2);

/**
 * Parameters to support Ssh public key Authentication.
 *
 * @generated from message google.cloud.connectors.v1.AuthConfig.SshPublicKey
 */
export type AuthConfig_SshPublicKey = Message<"google.cloud.connectors.v1.AuthConfig.SshPublicKey"> & {
  /**
   * The user account used to authenticate.
   *
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * SSH Client Cert. It should contain both public and private key.
   *
   * @generated from field: google.cloud.connectors.v1.Secret ssh_client_cert = 3;
   */
  sshClientCert?: Secret;

  /**
   * Format of SSH Client cert.
   *
   * @generated from field: string cert_type = 4;
   */
  certType: string;

  /**
   * Password (passphrase) for ssh client certificate if it has one.
   *
   * @generated from field: google.cloud.connectors.v1.Secret ssh_client_cert_pass = 5;
   */
  sshClientCertPass?: Secret;
};

/**
 * Describes the message google.cloud.connectors.v1.AuthConfig.SshPublicKey.
 * Use `create(AuthConfig_SshPublicKeySchema)` to create a new message.
 */
export const AuthConfig_SshPublicKeySchema: GenMessage<AuthConfig_SshPublicKey> = /*@__PURE__*/
  messageDesc(file_google_cloud_connectors_v1_authconfig, 0, 3);

/**
 * AuthConfigTemplate defines required field over an authentication type.
 *
 * @generated from message google.cloud.connectors.v1.AuthConfigTemplate
 */
export type AuthConfigTemplate = Message<"google.cloud.connectors.v1.AuthConfigTemplate"> & {
  /**
   * The type of authentication configured.
   *
   * @generated from field: google.cloud.connectors.v1.AuthType auth_type = 1;
   */
  authType: AuthType;

  /**
   * Config variables to describe an `AuthConfig` for a `Connection`.
   *
   * @generated from field: repeated google.cloud.connectors.v1.ConfigVariableTemplate config_variable_templates = 2;
   */
  configVariableTemplates: ConfigVariableTemplate[];

  /**
   * Display name for authentication template.
   *
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * Connector specific description for an authentication template.
   *
   * @generated from field: string description = 4;
   */
  description: string;
};

/**
 * Describes the message google.cloud.connectors.v1.AuthConfigTemplate.
 * Use `create(AuthConfigTemplateSchema)` to create a new message.
 */
export const AuthConfigTemplateSchema: GenMessage<AuthConfigTemplate> = /*@__PURE__*/
  messageDesc(file_google_cloud_connectors_v1_authconfig, 1);

/**
 * AuthType defines different authentication types.
 *
 * @generated from enum google.cloud.connectors.v1.AuthType
 */
export enum AuthType {
  /**
   * Authentication type not specified.
   *
   * @generated from enum value: AUTH_TYPE_UNSPECIFIED = 0;
   */
  AUTH_TYPE_UNSPECIFIED = 0,

  /**
   * Username and Password Authentication.
   *
   * @generated from enum value: USER_PASSWORD = 1;
   */
  USER_PASSWORD = 1,

  /**
   * JSON Web Token (JWT) Profile for Oauth 2.0
   * Authorization Grant based authentication
   *
   * @generated from enum value: OAUTH2_JWT_BEARER = 2;
   */
  OAUTH2_JWT_BEARER = 2,

  /**
   * Oauth 2.0 Client Credentials Grant Authentication
   *
   * @generated from enum value: OAUTH2_CLIENT_CREDENTIALS = 3;
   */
  OAUTH2_CLIENT_CREDENTIALS = 3,

  /**
   * SSH Public Key Authentication
   *
   * @generated from enum value: SSH_PUBLIC_KEY = 4;
   */
  SSH_PUBLIC_KEY = 4,

  /**
   * Oauth 2.0 Authorization Code Flow
   *
   * @generated from enum value: OAUTH2_AUTH_CODE_FLOW = 5;
   */
  OAUTH2_AUTH_CODE_FLOW = 5,
}

/**
 * Describes the enum google.cloud.connectors.v1.AuthType.
 */
export const AuthTypeSchema: GenEnum<AuthType> = /*@__PURE__*/
  enumDesc(file_google_cloud_connectors_v1_authconfig, 0);

