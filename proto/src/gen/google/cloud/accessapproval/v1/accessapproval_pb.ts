// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/accessapproval/v1/accessapproval.proto (package google.cloud.accessapproval.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/accessapproval/v1/accessapproval.proto.
 */
export const file_google_cloud_accessapproval_v1_accessapproval: GenFile = /*@__PURE__*/
  fileDesc("CjNnb29nbGUvY2xvdWQvYWNjZXNzYXBwcm92YWwvdjEvYWNjZXNzYXBwcm92YWwucHJvdG8SHmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MSJgCg9BY2Nlc3NMb2NhdGlvbnMSIAoYcHJpbmNpcGFsX29mZmljZV9jb3VudHJ5GAEgASgJEisKI3ByaW5jaXBhbF9waHlzaWNhbF9sb2NhdGlvbl9jb3VudHJ5GAIgASgJIqACCgxBY2Nlc3NSZWFzb24SPwoEdHlwZRgBIAEoDjIxLmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MS5BY2Nlc3NSZWFzb24uVHlwZRIOCgZkZXRhaWwYAiABKAkivgEKBFR5cGUSFAoQVFlQRV9VTlNQRUNJRklFRBAAEh4KGkNVU1RPTUVSX0lOSVRJQVRFRF9TVVBQT1JUEAESHAoYR09PR0xFX0lOSVRJQVRFRF9TRVJWSUNFEAISGwoXR09PR0xFX0lOSVRJQVRFRF9SRVZJRVcQAxIcChhUSElSRF9QQVJUWV9EQVRBX1JFUVVFU1QQBBInCiNHT09HTEVfUkVTUE9OU0VfVE9fUFJPRFVDVElPTl9BTEVSVBAFInwKDVNpZ25hdHVyZUluZm8SEQoJc2lnbmF0dXJlGAEgASgMEh8KFWdvb2dsZV9wdWJsaWNfa2V5X3BlbRgCIAEoCUgAEiIKGGN1c3RvbWVyX2ttc19rZXlfdmVyc2lvbhgDIAEoCUgAQhMKEXZlcmlmaWNhdGlvbl9pbmZvIocCCg9BcHByb3ZlRGVjaXNpb24SMAoMYXBwcm92ZV90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIvCgtleHBpcmVfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMwoPaW52YWxpZGF0ZV90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJFCg5zaWduYXR1cmVfaW5mbxgEIAEoCzItLmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MS5TaWduYXR1cmVJbmZvEhUKDWF1dG9fYXBwcm92ZWQYBSABKAgiVQoPRGlzbWlzc0RlY2lzaW9uEjAKDGRpc21pc3NfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEAoIaW1wbGljaXQYAiABKAgiMgoSUmVzb3VyY2VQcm9wZXJ0aWVzEhwKFGV4Y2x1ZGVzX2Rlc2NlbmRhbnRzGAEgASgIIpcGCg9BcHByb3ZhbFJlcXVlc3QSDAoEbmFtZRgBIAEoCRIfChdyZXF1ZXN0ZWRfcmVzb3VyY2VfbmFtZRgCIAEoCRJZCh1yZXF1ZXN0ZWRfcmVzb3VyY2VfcHJvcGVydGllcxgJIAEoCzIyLmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MS5SZXNvdXJjZVByb3BlcnRpZXMSRgoQcmVxdWVzdGVkX3JlYXNvbhgDIAEoCzIsLmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MS5BY2Nlc3NSZWFzb24STAoTcmVxdWVzdGVkX2xvY2F0aW9ucxgEIAEoCzIvLmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MS5BY2Nlc3NMb2NhdGlvbnMSMAoMcmVxdWVzdF90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI4ChRyZXF1ZXN0ZWRfZXhwaXJhdGlvbhgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASQgoHYXBwcm92ZRgHIAEoCzIvLmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MS5BcHByb3ZlRGVjaXNpb25IABJCCgdkaXNtaXNzGAggASgLMi8uZ29vZ2xlLmNsb3VkLmFjY2Vzc2FwcHJvdmFsLnYxLkRpc21pc3NEZWNpc2lvbkgAOuMB6kHfAQotYWNjZXNzYXBwcm92YWwuZ29vZ2xlYXBpcy5jb20vQXBwcm92YWxSZXF1ZXN0EjZwcm9qZWN0cy97cHJvamVjdH0vYXBwcm92YWxSZXF1ZXN0cy97YXBwcm92YWxfcmVxdWVzdH0SNGZvbGRlcnMve2ZvbGRlcn0vYXBwcm92YWxSZXF1ZXN0cy97YXBwcm92YWxfcmVxdWVzdH0SQG9yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbn0vYXBwcm92YWxSZXF1ZXN0cy97YXBwcm92YWxfcmVxdWVzdH1CCgoIZGVjaXNpb24icwoPRW5yb2xsZWRTZXJ2aWNlEhUKDWNsb3VkX3Byb2R1Y3QYASABKAkSSQoQZW5yb2xsbWVudF9sZXZlbBgCIAEoDjIvLmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MS5FbnJvbGxtZW50TGV2ZWwinAQKFkFjY2Vzc0FwcHJvdmFsU2V0dGluZ3MSRwoEbmFtZRgBIAEoCUI5+kE2CjRhY2Nlc3NhcHByb3ZhbC5nb29nbGVhcGlzLmNvbS9BY2Nlc3NBcHByb3ZhbFNldHRpbmdzEhsKE25vdGlmaWNhdGlvbl9lbWFpbHMYAiADKAkSSgoRZW5yb2xsZWRfc2VydmljZXMYAyADKAsyLy5nb29nbGUuY2xvdWQuYWNjZXNzYXBwcm92YWwudjEuRW5yb2xsZWRTZXJ2aWNlEh4KEWVucm9sbGVkX2FuY2VzdG9yGAQgASgIQgPgQQMSGgoSYWN0aXZlX2tleV92ZXJzaW9uGAYgASgJEiwKH2FuY2VzdG9yX2hhc19hY3RpdmVfa2V5X3ZlcnNpb24YByABKAhCA+BBAxIgChNpbnZhbGlkX2tleV92ZXJzaW9uGAggASgIQgPgQQM6wwHqQb8BCjRhY2Nlc3NhcHByb3ZhbC5nb29nbGVhcGlzLmNvbS9BY2Nlc3NBcHByb3ZhbFNldHRpbmdzEilwcm9qZWN0cy97cHJvamVjdH0vYWNjZXNzQXBwcm92YWxTZXR0aW5ncxInZm9sZGVycy97Zm9sZGVyfS9hY2Nlc3NBcHByb3ZhbFNldHRpbmdzEjNvcmdhbml6YXRpb25zL3tvcmdhbml6YXRpb259L2FjY2Vzc0FwcHJvdmFsU2V0dGluZ3MiuAIKHEFjY2Vzc0FwcHJvdmFsU2VydmljZUFjY291bnQSTQoEbmFtZRgBIAEoCUI/+kE8CjphY2Nlc3NhcHByb3ZhbC5nb29nbGVhcGlzLmNvbS9BY2Nlc3NBcHByb3ZhbFNlcnZpY2VBY2NvdW50EhUKDWFjY291bnRfZW1haWwYAiABKAk6sQHqQa0BCjphY2Nlc3NhcHByb3ZhbC5nb29nbGVhcGlzLmNvbS9BY2Nlc3NBcHByb3ZhbFNlcnZpY2VBY2NvdW50EiFwcm9qZWN0cy97cHJvamVjdH0vc2VydmljZUFjY291bnQSH2ZvbGRlcnMve2ZvbGRlcn0vc2VydmljZUFjY291bnQSK29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbn0vc2VydmljZUFjY291bnQimAEKG0xpc3RBcHByb3ZhbFJlcXVlc3RzTWVzc2FnZRJCCgZwYXJlbnQYASABKAlCMvpBLxItYWNjZXNzYXBwcm92YWwuZ29vZ2xlYXBpcy5jb20vQXBwcm92YWxSZXF1ZXN0Eg4KBmZpbHRlchgCIAEoCRIRCglwYWdlX3NpemUYAyABKAUSEgoKcGFnZV90b2tlbhgEIAEoCSKDAQocTGlzdEFwcHJvdmFsUmVxdWVzdHNSZXNwb25zZRJKChFhcHByb3ZhbF9yZXF1ZXN0cxgBIAMoCzIvLmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MS5BcHByb3ZhbFJlcXVlc3QSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIl0KGUdldEFwcHJvdmFsUmVxdWVzdE1lc3NhZ2USQAoEbmFtZRgBIAEoCUIy+kEvCi1hY2Nlc3NhcHByb3ZhbC5nb29nbGVhcGlzLmNvbS9BcHByb3ZhbFJlcXVlc3QikgEKHUFwcHJvdmVBcHByb3ZhbFJlcXVlc3RNZXNzYWdlEkAKBG5hbWUYASABKAlCMvpBLwotYWNjZXNzYXBwcm92YWwuZ29vZ2xlYXBpcy5jb20vQXBwcm92YWxSZXF1ZXN0Ei8KC2V4cGlyZV90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJhCh1EaXNtaXNzQXBwcm92YWxSZXF1ZXN0TWVzc2FnZRJACgRuYW1lGAEgASgJQjL6QS8KLWFjY2Vzc2FwcHJvdmFsLmdvb2dsZWFwaXMuY29tL0FwcHJvdmFsUmVxdWVzdCJkCiBJbnZhbGlkYXRlQXBwcm92YWxSZXF1ZXN0TWVzc2FnZRJACgRuYW1lGAEgASgJQjL6QS8KLWFjY2Vzc2FwcHJvdmFsLmdvb2dsZWFwaXMuY29tL0FwcHJvdmFsUmVxdWVzdCJrCiBHZXRBY2Nlc3NBcHByb3ZhbFNldHRpbmdzTWVzc2FnZRJHCgRuYW1lGAEgASgJQjn6QTYKNGFjY2Vzc2FwcHJvdmFsLmdvb2dsZWFwaXMuY29tL0FjY2Vzc0FwcHJvdmFsU2V0dGluZ3MioAEKI1VwZGF0ZUFjY2Vzc0FwcHJvdmFsU2V0dGluZ3NNZXNzYWdlEkgKCHNldHRpbmdzGAEgASgLMjYuZ29vZ2xlLmNsb3VkLmFjY2Vzc2FwcHJvdmFsLnYxLkFjY2Vzc0FwcHJvdmFsU2V0dGluZ3MSLwoLdXBkYXRlX21hc2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrIm4KI0RlbGV0ZUFjY2Vzc0FwcHJvdmFsU2V0dGluZ3NNZXNzYWdlEkcKBG5hbWUYASABKAlCOfpBNgo0YWNjZXNzYXBwcm92YWwuZ29vZ2xlYXBpcy5jb20vQWNjZXNzQXBwcm92YWxTZXR0aW5ncyI2CiZHZXRBY2Nlc3NBcHByb3ZhbFNlcnZpY2VBY2NvdW50TWVzc2FnZRIMCgRuYW1lGAEgASgJKkIKD0Vucm9sbG1lbnRMZXZlbBIgChxFTlJPTExNRU5UX0xFVkVMX1VOU1BFQ0lGSUVEEAASDQoJQkxPQ0tfQUxMEAEyhxcKDkFjY2Vzc0FwcHJvdmFsEqoCChRMaXN0QXBwcm92YWxSZXF1ZXN0cxI7Lmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MS5MaXN0QXBwcm92YWxSZXF1ZXN0c01lc3NhZ2UaPC5nb29nbGUuY2xvdWQuYWNjZXNzYXBwcm92YWwudjEuTGlzdEFwcHJvdmFsUmVxdWVzdHNSZXNwb25zZSKWAdpBBnBhcmVudILT5JMChgFaKRInL3YxL3twYXJlbnQ9Zm9sZGVycy8qfS9hcHByb3ZhbFJlcXVlc3RzWi8SLS92MS97cGFyZW50PW9yZ2FuaXphdGlvbnMvKn0vYXBwcm92YWxSZXF1ZXN0cxIoL3YxL3twYXJlbnQ9cHJvamVjdHMvKn0vYXBwcm92YWxSZXF1ZXN0cxKXAgoSR2V0QXBwcm92YWxSZXF1ZXN0EjkuZ29vZ2xlLmNsb3VkLmFjY2Vzc2FwcHJvdmFsLnYxLkdldEFwcHJvdmFsUmVxdWVzdE1lc3NhZ2UaLy5nb29nbGUuY2xvdWQuYWNjZXNzYXBwcm92YWwudjEuQXBwcm92YWxSZXF1ZXN0IpQB2kEEbmFtZYLT5JMChgFaKRInL3YxL3tuYW1lPWZvbGRlcnMvKi9hcHByb3ZhbFJlcXVlc3RzLyp9Wi8SLS92MS97bmFtZT1vcmdhbml6YXRpb25zLyovYXBwcm92YWxSZXF1ZXN0cy8qfRIoL3YxL3tuYW1lPXByb2plY3RzLyovYXBwcm92YWxSZXF1ZXN0cy8qfRK5AgoWQXBwcm92ZUFwcHJvdmFsUmVxdWVzdBI9Lmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MS5BcHByb3ZlQXBwcm92YWxSZXF1ZXN0TWVzc2FnZRovLmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MS5BcHByb3ZhbFJlcXVlc3QirgGC0+STAqcBOgEqWjQ6ASoiLy92MS97bmFtZT1mb2xkZXJzLyovYXBwcm92YWxSZXF1ZXN0cy8qfTphcHByb3ZlWjo6ASoiNS92MS97bmFtZT1vcmdhbml6YXRpb25zLyovYXBwcm92YWxSZXF1ZXN0cy8qfTphcHByb3ZlIjAvdjEve25hbWU9cHJvamVjdHMvKi9hcHByb3ZhbFJlcXVlc3RzLyp9OmFwcHJvdmUSuQIKFkRpc21pc3NBcHByb3ZhbFJlcXVlc3QSPS5nb29nbGUuY2xvdWQuYWNjZXNzYXBwcm92YWwudjEuRGlzbWlzc0FwcHJvdmFsUmVxdWVzdE1lc3NhZ2UaLy5nb29nbGUuY2xvdWQuYWNjZXNzYXBwcm92YWwudjEuQXBwcm92YWxSZXF1ZXN0Iq4BgtPkkwKnAToBKlo0OgEqIi8vdjEve25hbWU9Zm9sZGVycy8qL2FwcHJvdmFsUmVxdWVzdHMvKn06ZGlzbWlzc1o6OgEqIjUvdjEve25hbWU9b3JnYW5pemF0aW9ucy8qL2FwcHJvdmFsUmVxdWVzdHMvKn06ZGlzbWlzcyIwL3YxL3tuYW1lPXByb2plY3RzLyovYXBwcm92YWxSZXF1ZXN0cy8qfTpkaXNtaXNzEsgCChlJbnZhbGlkYXRlQXBwcm92YWxSZXF1ZXN0EkAuZ29vZ2xlLmNsb3VkLmFjY2Vzc2FwcHJvdmFsLnYxLkludmFsaWRhdGVBcHByb3ZhbFJlcXVlc3RNZXNzYWdlGi8uZ29vZ2xlLmNsb3VkLmFjY2Vzc2FwcHJvdmFsLnYxLkFwcHJvdmFsUmVxdWVzdCK3AYLT5JMCsAE6ASpaNzoBKiIyL3YxL3tuYW1lPWZvbGRlcnMvKi9hcHByb3ZhbFJlcXVlc3RzLyp9OmludmFsaWRhdGVaPToBKiI4L3YxL3tuYW1lPW9yZ2FuaXphdGlvbnMvKi9hcHByb3ZhbFJlcXVlc3RzLyp9OmludmFsaWRhdGUiMy92MS97bmFtZT1wcm9qZWN0cy8qL2FwcHJvdmFsUmVxdWVzdHMvKn06aW52YWxpZGF0ZRK4AgoZR2V0QWNjZXNzQXBwcm92YWxTZXR0aW5ncxJALmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MS5HZXRBY2Nlc3NBcHByb3ZhbFNldHRpbmdzTWVzc2FnZRo2Lmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MS5BY2Nlc3NBcHByb3ZhbFNldHRpbmdzIqAB2kEEbmFtZYLT5JMCkgFaLRIrL3YxL3tuYW1lPWZvbGRlcnMvKi9hY2Nlc3NBcHByb3ZhbFNldHRpbmdzfVozEjEvdjEve25hbWU9b3JnYW5pemF0aW9ucy8qL2FjY2Vzc0FwcHJvdmFsU2V0dGluZ3N9EiwvdjEve25hbWU9cHJvamVjdHMvKi9hY2Nlc3NBcHByb3ZhbFNldHRpbmdzfRKHAwocVXBkYXRlQWNjZXNzQXBwcm92YWxTZXR0aW5ncxJDLmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MS5VcGRhdGVBY2Nlc3NBcHByb3ZhbFNldHRpbmdzTWVzc2FnZRo2Lmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MS5BY2Nlc3NBcHByb3ZhbFNldHRpbmdzIukB2kEUc2V0dGluZ3MsdXBkYXRlX21hc2uC0+STAssBOghzZXR0aW5nc1pAOghzZXR0aW5nczI0L3YxL3tzZXR0aW5ncy5uYW1lPWZvbGRlcnMvKi9hY2Nlc3NBcHByb3ZhbFNldHRpbmdzfVpGOghzZXR0aW5nczI6L3YxL3tzZXR0aW5ncy5uYW1lPW9yZ2FuaXphdGlvbnMvKi9hY2Nlc3NBcHByb3ZhbFNldHRpbmdzfTI1L3YxL3tzZXR0aW5ncy5uYW1lPXByb2plY3RzLyovYWNjZXNzQXBwcm92YWxTZXR0aW5nc30SngIKHERlbGV0ZUFjY2Vzc0FwcHJvdmFsU2V0dGluZ3MSQy5nb29nbGUuY2xvdWQuYWNjZXNzYXBwcm92YWwudjEuRGVsZXRlQWNjZXNzQXBwcm92YWxTZXR0aW5nc01lc3NhZ2UaFi5nb29nbGUucHJvdG9idWYuRW1wdHkioAHaQQRuYW1lgtPkkwKSAVotKisvdjEve25hbWU9Zm9sZGVycy8qL2FjY2Vzc0FwcHJvdmFsU2V0dGluZ3N9WjMqMS92MS97bmFtZT1vcmdhbml6YXRpb25zLyovYWNjZXNzQXBwcm92YWxTZXR0aW5nc30qLC92MS97bmFtZT1wcm9qZWN0cy8qL2FjY2Vzc0FwcHJvdmFsU2V0dGluZ3N9ErECCh9HZXRBY2Nlc3NBcHByb3ZhbFNlcnZpY2VBY2NvdW50EkYuZ29vZ2xlLmNsb3VkLmFjY2Vzc2FwcHJvdmFsLnYxLkdldEFjY2Vzc0FwcHJvdmFsU2VydmljZUFjY291bnRNZXNzYWdlGjwuZ29vZ2xlLmNsb3VkLmFjY2Vzc2FwcHJvdmFsLnYxLkFjY2Vzc0FwcHJvdmFsU2VydmljZUFjY291bnQihwHaQQRuYW1lgtPkkwJ6WiUSIy92MS97bmFtZT1mb2xkZXJzLyovc2VydmljZUFjY291bnR9WisSKS92MS97bmFtZT1vcmdhbml6YXRpb25zLyovc2VydmljZUFjY291bnR9EiQvdjEve25hbWU9cHJvamVjdHMvKi9zZXJ2aWNlQWNjb3VudH0aUcpBHWFjY2Vzc2FwcHJvdmFsLmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybULtAQoiY29tLmdvb2dsZS5jbG91ZC5hY2Nlc3NhcHByb3ZhbC52MUITQWNjZXNzQXBwcm92YWxQcm90b1ABWkpjbG91ZC5nb29nbGUuY29tL2dvL2FjY2Vzc2FwcHJvdmFsL2FwaXYxL2FjY2Vzc2FwcHJvdmFscGI7YWNjZXNzYXBwcm92YWxwYqoCHkdvb2dsZS5DbG91ZC5BY2Nlc3NBcHByb3ZhbC5WMcoCHkdvb2dsZVxDbG91ZFxBY2Nlc3NBcHByb3ZhbFxWMeoCIUdvb2dsZTo6Q2xvdWQ6OkFjY2Vzc0FwcHJvdmFsOjpWMWIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Home office and physical location of the principal.
 *
 * @generated from message google.cloud.accessapproval.v1.AccessLocations
 */
export type AccessLocations = Message<"google.cloud.accessapproval.v1.AccessLocations"> & {
  /**
   * The "home office" location of the principal. A two-letter country code
   * (ISO 3166-1 alpha-2), such as "US", "DE" or "GB" or a region code. In some
   * limited situations Google systems may refer refer to a region code instead
   * of a country code.
   * Possible Region Codes:
   *
   *   * ASI: Asia
   *   * EUR: Europe
   *   * OCE: Oceania
   *   * AFR: Africa
   *   * NAM: North America
   *   * SAM: South America
   *   * ANT: Antarctica
   *   * ANY: Any location
   *
   * @generated from field: string principal_office_country = 1;
   */
  principalOfficeCountry: string;

  /**
   * Physical location of the principal at the time of the access. A
   * two-letter country code (ISO 3166-1 alpha-2), such as "US", "DE" or "GB" or
   * a region code. In some limited situations Google systems may refer refer to
   * a region code instead of a country code.
   * Possible Region Codes:
   *
   *   * ASI: Asia
   *   * EUR: Europe
   *   * OCE: Oceania
   *   * AFR: Africa
   *   * NAM: North America
   *   * SAM: South America
   *   * ANT: Antarctica
   *   * ANY: Any location
   *
   * @generated from field: string principal_physical_location_country = 2;
   */
  principalPhysicalLocationCountry: string;
};

/**
 * Describes the message google.cloud.accessapproval.v1.AccessLocations.
 * Use `create(AccessLocationsSchema)` to create a new message.
 */
export const AccessLocationsSchema: GenMessage<AccessLocations> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 0);

/**
 * @generated from message google.cloud.accessapproval.v1.AccessReason
 */
export type AccessReason = Message<"google.cloud.accessapproval.v1.AccessReason"> & {
  /**
   * Type of access justification.
   *
   * @generated from field: google.cloud.accessapproval.v1.AccessReason.Type type = 1;
   */
  type: AccessReason_Type;

  /**
   * More detail about certain reason types. See comments for each type above.
   *
   * @generated from field: string detail = 2;
   */
  detail: string;
};

/**
 * Describes the message google.cloud.accessapproval.v1.AccessReason.
 * Use `create(AccessReasonSchema)` to create a new message.
 */
export const AccessReasonSchema: GenMessage<AccessReason> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 1);

/**
 * Type of access justification.
 *
 * @generated from enum google.cloud.accessapproval.v1.AccessReason.Type
 */
export enum AccessReason_Type {
  /**
   * Default value for proto, shouldn't be used.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Customer made a request or raised an issue that required the principal to
   * access customer data. `detail` is of the form ("#####" is the issue ID):
   *
   *   * "Feedback Report: #####"
   *   * "Case Number: #####"
   *   * "Case ID: #####"
   *   * "E-PIN Reference: #####"
   *   * "Google-#####"
   *   * "T-#####"
   *
   * @generated from enum value: CUSTOMER_INITIATED_SUPPORT = 1;
   */
  CUSTOMER_INITIATED_SUPPORT = 1,

  /**
   * The principal accessed customer data in order to diagnose or resolve a
   * suspected issue in services. Often this access is used to confirm that
   * customers are not affected by a suspected service issue or to remediate a
   * reversible system issue.
   *
   * @generated from enum value: GOOGLE_INITIATED_SERVICE = 2;
   */
  GOOGLE_INITIATED_SERVICE = 2,

  /**
   * Google initiated service for security, fraud, abuse, or compliance
   * purposes.
   *
   * @generated from enum value: GOOGLE_INITIATED_REVIEW = 3;
   */
  GOOGLE_INITIATED_REVIEW = 3,

  /**
   * The principal was compelled to access customer data in order to respond
   * to a legal third party data request or process, including legal processes
   * from customers themselves.
   *
   * @generated from enum value: THIRD_PARTY_DATA_REQUEST = 4;
   */
  THIRD_PARTY_DATA_REQUEST = 4,

  /**
   * The principal accessed customer data in order to diagnose or resolve a
   * suspected issue in services or a known outage.
   *
   * @generated from enum value: GOOGLE_RESPONSE_TO_PRODUCTION_ALERT = 5;
   */
  GOOGLE_RESPONSE_TO_PRODUCTION_ALERT = 5,
}

/**
 * Describes the enum google.cloud.accessapproval.v1.AccessReason.Type.
 */
export const AccessReason_TypeSchema: GenEnum<AccessReason_Type> = /*@__PURE__*/
  enumDesc(file_google_cloud_accessapproval_v1_accessapproval, 1, 0);

/**
 * Information about the digital signature of the resource.
 *
 * @generated from message google.cloud.accessapproval.v1.SignatureInfo
 */
export type SignatureInfo = Message<"google.cloud.accessapproval.v1.SignatureInfo"> & {
  /**
   * The digital signature.
   *
   * @generated from field: bytes signature = 1;
   */
  signature: Uint8Array;

  /**
   * How this signature may be verified.
   *
   * @generated from oneof google.cloud.accessapproval.v1.SignatureInfo.verification_info
   */
  verificationInfo: {
    /**
     * The public key for the Google default signing, encoded in PEM format. The
     * signature was created using a private key which may be verified using
     * this public key.
     *
     * @generated from field: string google_public_key_pem = 2;
     */
    value: string;
    case: "googlePublicKeyPem";
  } | {
    /**
     * The resource name of the customer CryptoKeyVersion used for signing.
     *
     * @generated from field: string customer_kms_key_version = 3;
     */
    value: string;
    case: "customerKmsKeyVersion";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.accessapproval.v1.SignatureInfo.
 * Use `create(SignatureInfoSchema)` to create a new message.
 */
export const SignatureInfoSchema: GenMessage<SignatureInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 2);

/**
 * A decision that has been made to approve access to a resource.
 *
 * @generated from message google.cloud.accessapproval.v1.ApproveDecision
 */
export type ApproveDecision = Message<"google.cloud.accessapproval.v1.ApproveDecision"> & {
  /**
   * The time at which approval was granted.
   *
   * @generated from field: google.protobuf.Timestamp approve_time = 1;
   */
  approveTime?: Timestamp;

  /**
   * The time at which the approval expires.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 2;
   */
  expireTime?: Timestamp;

  /**
   * If set, denotes the timestamp at which the approval is invalidated.
   *
   * @generated from field: google.protobuf.Timestamp invalidate_time = 3;
   */
  invalidateTime?: Timestamp;

  /**
   * The signature for the ApprovalRequest and details on how it was signed.
   *
   * @generated from field: google.cloud.accessapproval.v1.SignatureInfo signature_info = 4;
   */
  signatureInfo?: SignatureInfo;

  /**
   * True when the request has been auto-approved.
   *
   * @generated from field: bool auto_approved = 5;
   */
  autoApproved: boolean;
};

/**
 * Describes the message google.cloud.accessapproval.v1.ApproveDecision.
 * Use `create(ApproveDecisionSchema)` to create a new message.
 */
export const ApproveDecisionSchema: GenMessage<ApproveDecision> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 3);

/**
 * A decision that has been made to dismiss an approval request.
 *
 * @generated from message google.cloud.accessapproval.v1.DismissDecision
 */
export type DismissDecision = Message<"google.cloud.accessapproval.v1.DismissDecision"> & {
  /**
   * The time at which the approval request was dismissed.
   *
   * @generated from field: google.protobuf.Timestamp dismiss_time = 1;
   */
  dismissTime?: Timestamp;

  /**
   * This field will be true if the ApprovalRequest was implicitly dismissed due
   * to inaction by the access approval approvers (the request is not acted
   * on by the approvers before the exiration time).
   *
   * @generated from field: bool implicit = 2;
   */
  implicit: boolean;
};

/**
 * Describes the message google.cloud.accessapproval.v1.DismissDecision.
 * Use `create(DismissDecisionSchema)` to create a new message.
 */
export const DismissDecisionSchema: GenMessage<DismissDecision> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 4);

/**
 * The properties associated with the resource of the request.
 *
 * @generated from message google.cloud.accessapproval.v1.ResourceProperties
 */
export type ResourceProperties = Message<"google.cloud.accessapproval.v1.ResourceProperties"> & {
  /**
   * Whether an approval will exclude the descendants of the resource being
   * requested.
   *
   * @generated from field: bool excludes_descendants = 1;
   */
  excludesDescendants: boolean;
};

/**
 * Describes the message google.cloud.accessapproval.v1.ResourceProperties.
 * Use `create(ResourcePropertiesSchema)` to create a new message.
 */
export const ResourcePropertiesSchema: GenMessage<ResourceProperties> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 5);

/**
 * A request for the customer to approve access to a resource.
 *
 * @generated from message google.cloud.accessapproval.v1.ApprovalRequest
 */
export type ApprovalRequest = Message<"google.cloud.accessapproval.v1.ApprovalRequest"> & {
  /**
   * The resource name of the request. Format is
   * "{projects|folders|organizations}/{id}/approvalRequests/{approval_request}".
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The resource for which approval is being requested. The format of the
   * resource name is defined at
   * https://cloud.google.com/apis/design/resource_names. The resource name here
   * may either be a "full" resource name (e.g.
   * "//library.googleapis.com/shelves/shelf1/books/book2") or a "relative"
   * resource name (e.g. "shelves/shelf1/books/book2") as described in the
   * resource name specification.
   *
   * @generated from field: string requested_resource_name = 2;
   */
  requestedResourceName: string;

  /**
   * Properties related to the resource represented by requested_resource_name.
   *
   * @generated from field: google.cloud.accessapproval.v1.ResourceProperties requested_resource_properties = 9;
   */
  requestedResourceProperties?: ResourceProperties;

  /**
   * The justification for which approval is being requested.
   *
   * @generated from field: google.cloud.accessapproval.v1.AccessReason requested_reason = 3;
   */
  requestedReason?: AccessReason;

  /**
   * The locations for which approval is being requested.
   *
   * @generated from field: google.cloud.accessapproval.v1.AccessLocations requested_locations = 4;
   */
  requestedLocations?: AccessLocations;

  /**
   * The time at which approval was requested.
   *
   * @generated from field: google.protobuf.Timestamp request_time = 5;
   */
  requestTime?: Timestamp;

  /**
   * The requested expiration for the approval. If the request is approved,
   * access will be granted from the time of approval until the expiration time.
   *
   * @generated from field: google.protobuf.Timestamp requested_expiration = 6;
   */
  requestedExpiration?: Timestamp;

  /**
   * The current decision on the approval request.
   *
   * @generated from oneof google.cloud.accessapproval.v1.ApprovalRequest.decision
   */
  decision: {
    /**
     * Access was approved.
     *
     * @generated from field: google.cloud.accessapproval.v1.ApproveDecision approve = 7;
     */
    value: ApproveDecision;
    case: "approve";
  } | {
    /**
     * The request was dismissed.
     *
     * @generated from field: google.cloud.accessapproval.v1.DismissDecision dismiss = 8;
     */
    value: DismissDecision;
    case: "dismiss";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.accessapproval.v1.ApprovalRequest.
 * Use `create(ApprovalRequestSchema)` to create a new message.
 */
export const ApprovalRequestSchema: GenMessage<ApprovalRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 6);

/**
 * Represents the enrollment of a cloud resource into a specific service.
 *
 * @generated from message google.cloud.accessapproval.v1.EnrolledService
 */
export type EnrolledService = Message<"google.cloud.accessapproval.v1.EnrolledService"> & {
  /**
   * The product for which Access Approval will be enrolled. Allowed values are
   * listed below (case-sensitive):
   *
   *   * all
   *   * GA
   *   * App Engine
   *   * BigQuery
   *   * Cloud Bigtable
   *   * Cloud Key Management Service
   *   * Compute Engine
   *   * Cloud Dataflow
   *   * Cloud Dataproc
   *   * Cloud DLP
   *   * Cloud EKM
   *   * Cloud HSM
   *   * Cloud Identity and Access Management
   *   * Cloud Logging
   *   * Cloud Pub/Sub
   *   * Cloud Spanner
   *   * Cloud SQL
   *   * Cloud Storage
   *   * Google Kubernetes Engine
   *   * Organization Policy Serivice
   *   * Persistent Disk
   *   * Resource Manager
   *   * Secret Manager
   *   * Speaker ID
   *
   * Note: These values are supported as input for legacy purposes, but will not
   * be returned from the API.
   *
   *   * all
   *   * ga-only
   *   * appengine.googleapis.com
   *   * bigquery.googleapis.com
   *   * bigtable.googleapis.com
   *   * container.googleapis.com
   *   * cloudkms.googleapis.com
   *   * cloudresourcemanager.googleapis.com
   *   * cloudsql.googleapis.com
   *   * compute.googleapis.com
   *   * dataflow.googleapis.com
   *   * dataproc.googleapis.com
   *   * dlp.googleapis.com
   *   * iam.googleapis.com
   *   * logging.googleapis.com
   *   * orgpolicy.googleapis.com
   *   * pubsub.googleapis.com
   *   * spanner.googleapis.com
   *   * secretmanager.googleapis.com
   *   * speakerid.googleapis.com
   *   * storage.googleapis.com
   *
   * Calls to UpdateAccessApprovalSettings using 'all' or any of the
   * XXX.googleapis.com will be translated to the associated product name
   * ('all', 'App Engine', etc.).
   *
   * Note: 'all' will enroll the resource in all products supported at both 'GA'
   * and 'Preview' levels.
   *
   * More information about levels of support is available at
   * https://cloud.google.com/access-approval/docs/supported-services
   *
   * @generated from field: string cloud_product = 1;
   */
  cloudProduct: string;

  /**
   * The enrollment level of the service.
   *
   * @generated from field: google.cloud.accessapproval.v1.EnrollmentLevel enrollment_level = 2;
   */
  enrollmentLevel: EnrollmentLevel;
};

/**
 * Describes the message google.cloud.accessapproval.v1.EnrolledService.
 * Use `create(EnrolledServiceSchema)` to create a new message.
 */
export const EnrolledServiceSchema: GenMessage<EnrolledService> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 7);

/**
 * Settings on a Project/Folder/Organization related to Access Approval.
 *
 * @generated from message google.cloud.accessapproval.v1.AccessApprovalSettings
 */
export type AccessApprovalSettings = Message<"google.cloud.accessapproval.v1.AccessApprovalSettings"> & {
  /**
   * The resource name of the settings. Format is one of:
   *
   *   * "projects/{project}/accessApprovalSettings"
   *   * "folders/{folder}/accessApprovalSettings"
   *   * "organizations/{organization}/accessApprovalSettings"
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A list of email addresses to which notifications relating to approval
   * requests should be sent. Notifications relating to a resource will be sent
   * to all emails in the settings of ancestor resources of that resource. A
   * maximum of 50 email addresses are allowed.
   *
   * @generated from field: repeated string notification_emails = 2;
   */
  notificationEmails: string[];

  /**
   * A list of Google Cloud Services for which the given resource has Access
   * Approval enrolled. Access requests for the resource given by name against
   * any of these services contained here will be required to have explicit
   * approval. If name refers to an organization, enrollment can be done for
   * individual services. If name refers to a folder or project, enrollment can
   * only be done on an all or nothing basis.
   *
   * If a cloud_product is repeated in this list, the first entry will be
   * honored and all following entries will be discarded. A maximum of 10
   * enrolled services will be enforced, to be expanded as the set of supported
   * services is expanded.
   *
   * @generated from field: repeated google.cloud.accessapproval.v1.EnrolledService enrolled_services = 3;
   */
  enrolledServices: EnrolledService[];

  /**
   * Output only. This field is read only (not settable via
   * UpdateAccessApprovalSettings method). If the field is true, that
   * indicates that at least one service is enrolled for Access Approval in one
   * or more ancestors of the Project or Folder (this field will always be
   * unset for the organization since organizations do not have ancestors).
   *
   * @generated from field: bool enrolled_ancestor = 4;
   */
  enrolledAncestor: boolean;

  /**
   * The asymmetric crypto key version to use for signing approval requests.
   * Empty active_key_version indicates that a Google-managed key should be used
   * for signing. This property will be ignored if set by an ancestor of this
   * resource, and new non-empty values may not be set.
   *
   * @generated from field: string active_key_version = 6;
   */
  activeKeyVersion: string;

  /**
   * Output only. This field is read only (not settable via UpdateAccessApprovalSettings
   * method). If the field is true, that indicates that an ancestor of this
   * Project or Folder has set active_key_version (this field will always be
   * unset for the organization since organizations do not have ancestors).
   *
   * @generated from field: bool ancestor_has_active_key_version = 7;
   */
  ancestorHasActiveKeyVersion: boolean;

  /**
   * Output only. This field is read only (not settable via UpdateAccessApprovalSettings
   * method). If the field is true, that indicates that there is some
   * configuration issue with the active_key_version configured at this level in
   * the resource hierarchy (e.g. it doesn't exist or the Access Approval
   * service account doesn't have the correct permissions on it, etc.) This key
   * version is not necessarily the effective key version at this level, as key
   * versions are inherited top-down.
   *
   * @generated from field: bool invalid_key_version = 8;
   */
  invalidKeyVersion: boolean;
};

/**
 * Describes the message google.cloud.accessapproval.v1.AccessApprovalSettings.
 * Use `create(AccessApprovalSettingsSchema)` to create a new message.
 */
export const AccessApprovalSettingsSchema: GenMessage<AccessApprovalSettings> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 8);

/**
 * Access Approval service account related to a project/folder/organization.
 *
 * @generated from message google.cloud.accessapproval.v1.AccessApprovalServiceAccount
 */
export type AccessApprovalServiceAccount = Message<"google.cloud.accessapproval.v1.AccessApprovalServiceAccount"> & {
  /**
   * The resource name of the Access Approval service account. Format is one of:
   *
   *   * "projects/{project}/serviceAccount"
   *   * "folders/{folder}/serviceAccount"
   *   * "organizations/{organization}/serviceAccount"
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Email address of the service account.
   *
   * @generated from field: string account_email = 2;
   */
  accountEmail: string;
};

/**
 * Describes the message google.cloud.accessapproval.v1.AccessApprovalServiceAccount.
 * Use `create(AccessApprovalServiceAccountSchema)` to create a new message.
 */
export const AccessApprovalServiceAccountSchema: GenMessage<AccessApprovalServiceAccount> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 9);

/**
 * Request to list approval requests.
 *
 * @generated from message google.cloud.accessapproval.v1.ListApprovalRequestsMessage
 */
export type ListApprovalRequestsMessage = Message<"google.cloud.accessapproval.v1.ListApprovalRequestsMessage"> & {
  /**
   * The parent resource. This may be "projects/{project}",
   * "folders/{folder}", or "organizations/{organization}".
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * A filter on the type of approval requests to retrieve. Must be one of the
   * following values:
   *
   *   * [not set]: Requests that are pending or have active approvals.
   *   * ALL: All requests.
   *   * PENDING: Only pending requests.
   *   * ACTIVE: Only active (i.e. currently approved) requests.
   *   * DISMISSED: Only requests that have been dismissed, or requests that
   *     are not approved and past expiration.
   *   * EXPIRED: Only requests that have been approved, and the approval has
   *     expired.
   *   * HISTORY: Active, dismissed and expired requests.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Requested page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * A token identifying the page of results to return.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.accessapproval.v1.ListApprovalRequestsMessage.
 * Use `create(ListApprovalRequestsMessageSchema)` to create a new message.
 */
export const ListApprovalRequestsMessageSchema: GenMessage<ListApprovalRequestsMessage> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 10);

/**
 * Response to listing of ApprovalRequest objects.
 *
 * @generated from message google.cloud.accessapproval.v1.ListApprovalRequestsResponse
 */
export type ListApprovalRequestsResponse = Message<"google.cloud.accessapproval.v1.ListApprovalRequestsResponse"> & {
  /**
   * Approval request details.
   *
   * @generated from field: repeated google.cloud.accessapproval.v1.ApprovalRequest approval_requests = 1;
   */
  approvalRequests: ApprovalRequest[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.accessapproval.v1.ListApprovalRequestsResponse.
 * Use `create(ListApprovalRequestsResponseSchema)` to create a new message.
 */
export const ListApprovalRequestsResponseSchema: GenMessage<ListApprovalRequestsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 11);

/**
 * Request to get an approval request.
 *
 * @generated from message google.cloud.accessapproval.v1.GetApprovalRequestMessage
 */
export type GetApprovalRequestMessage = Message<"google.cloud.accessapproval.v1.GetApprovalRequestMessage"> & {
  /**
   * The name of the approval request to retrieve.
   * Format:
   * "{projects|folders|organizations}/{id}/approvalRequests/{approval_request}"
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.accessapproval.v1.GetApprovalRequestMessage.
 * Use `create(GetApprovalRequestMessageSchema)` to create a new message.
 */
export const GetApprovalRequestMessageSchema: GenMessage<GetApprovalRequestMessage> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 12);

/**
 * Request to approve an ApprovalRequest.
 *
 * @generated from message google.cloud.accessapproval.v1.ApproveApprovalRequestMessage
 */
export type ApproveApprovalRequestMessage = Message<"google.cloud.accessapproval.v1.ApproveApprovalRequestMessage"> & {
  /**
   * Name of the approval request to approve.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The expiration time of this approval.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 2;
   */
  expireTime?: Timestamp;
};

/**
 * Describes the message google.cloud.accessapproval.v1.ApproveApprovalRequestMessage.
 * Use `create(ApproveApprovalRequestMessageSchema)` to create a new message.
 */
export const ApproveApprovalRequestMessageSchema: GenMessage<ApproveApprovalRequestMessage> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 13);

/**
 * Request to dismiss an approval request.
 *
 * @generated from message google.cloud.accessapproval.v1.DismissApprovalRequestMessage
 */
export type DismissApprovalRequestMessage = Message<"google.cloud.accessapproval.v1.DismissApprovalRequestMessage"> & {
  /**
   * Name of the ApprovalRequest to dismiss.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.accessapproval.v1.DismissApprovalRequestMessage.
 * Use `create(DismissApprovalRequestMessageSchema)` to create a new message.
 */
export const DismissApprovalRequestMessageSchema: GenMessage<DismissApprovalRequestMessage> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 14);

/**
 * Request to invalidate an existing approval.
 *
 * @generated from message google.cloud.accessapproval.v1.InvalidateApprovalRequestMessage
 */
export type InvalidateApprovalRequestMessage = Message<"google.cloud.accessapproval.v1.InvalidateApprovalRequestMessage"> & {
  /**
   * Name of the ApprovalRequest to invalidate.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.accessapproval.v1.InvalidateApprovalRequestMessage.
 * Use `create(InvalidateApprovalRequestMessageSchema)` to create a new message.
 */
export const InvalidateApprovalRequestMessageSchema: GenMessage<InvalidateApprovalRequestMessage> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 15);

/**
 * Request to get access approval settings.
 *
 * @generated from message google.cloud.accessapproval.v1.GetAccessApprovalSettingsMessage
 */
export type GetAccessApprovalSettingsMessage = Message<"google.cloud.accessapproval.v1.GetAccessApprovalSettingsMessage"> & {
  /**
   * The name of the AccessApprovalSettings to retrieve.
   * Format: "{projects|folders|organizations}/{id}/accessApprovalSettings"
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.accessapproval.v1.GetAccessApprovalSettingsMessage.
 * Use `create(GetAccessApprovalSettingsMessageSchema)` to create a new message.
 */
export const GetAccessApprovalSettingsMessageSchema: GenMessage<GetAccessApprovalSettingsMessage> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 16);

/**
 * Request to update access approval settings.
 *
 * @generated from message google.cloud.accessapproval.v1.UpdateAccessApprovalSettingsMessage
 */
export type UpdateAccessApprovalSettingsMessage = Message<"google.cloud.accessapproval.v1.UpdateAccessApprovalSettingsMessage"> & {
  /**
   * The new AccessApprovalSettings.
   *
   * @generated from field: google.cloud.accessapproval.v1.AccessApprovalSettings settings = 1;
   */
  settings?: AccessApprovalSettings;

  /**
   * The update mask applies to the settings. Only the top level fields of
   * AccessApprovalSettings (notification_emails & enrolled_services) are
   * supported. For each field, if it is included, the currently stored value
   * will be entirely overwritten with the value of the field passed in this
   * request.
   *
   * For the `FieldMask` definition, see
   * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
   * If this field is left unset, only the notification_emails field will be
   * updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.accessapproval.v1.UpdateAccessApprovalSettingsMessage.
 * Use `create(UpdateAccessApprovalSettingsMessageSchema)` to create a new message.
 */
export const UpdateAccessApprovalSettingsMessageSchema: GenMessage<UpdateAccessApprovalSettingsMessage> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 17);

/**
 * Request to delete access approval settings.
 *
 * @generated from message google.cloud.accessapproval.v1.DeleteAccessApprovalSettingsMessage
 */
export type DeleteAccessApprovalSettingsMessage = Message<"google.cloud.accessapproval.v1.DeleteAccessApprovalSettingsMessage"> & {
  /**
   * Name of the AccessApprovalSettings to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.accessapproval.v1.DeleteAccessApprovalSettingsMessage.
 * Use `create(DeleteAccessApprovalSettingsMessageSchema)` to create a new message.
 */
export const DeleteAccessApprovalSettingsMessageSchema: GenMessage<DeleteAccessApprovalSettingsMessage> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 18);

/**
 * Request to get an Access Approval service account.
 *
 * @generated from message google.cloud.accessapproval.v1.GetAccessApprovalServiceAccountMessage
 */
export type GetAccessApprovalServiceAccountMessage = Message<"google.cloud.accessapproval.v1.GetAccessApprovalServiceAccountMessage"> & {
  /**
   * Name of the AccessApprovalServiceAccount to retrieve.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.accessapproval.v1.GetAccessApprovalServiceAccountMessage.
 * Use `create(GetAccessApprovalServiceAccountMessageSchema)` to create a new message.
 */
export const GetAccessApprovalServiceAccountMessageSchema: GenMessage<GetAccessApprovalServiceAccountMessage> = /*@__PURE__*/
  messageDesc(file_google_cloud_accessapproval_v1_accessapproval, 19);

/**
 * Represents the type of enrollment for a given service to Access Approval.
 *
 * @generated from enum google.cloud.accessapproval.v1.EnrollmentLevel
 */
export enum EnrollmentLevel {
  /**
   * Default value for proto, shouldn't be used.
   *
   * @generated from enum value: ENROLLMENT_LEVEL_UNSPECIFIED = 0;
   */
  ENROLLMENT_LEVEL_UNSPECIFIED = 0,

  /**
   * Service is enrolled in Access Approval for all requests
   *
   * @generated from enum value: BLOCK_ALL = 1;
   */
  BLOCK_ALL = 1,
}

/**
 * Describes the enum google.cloud.accessapproval.v1.EnrollmentLevel.
 */
export const EnrollmentLevelSchema: GenEnum<EnrollmentLevel> = /*@__PURE__*/
  enumDesc(file_google_cloud_accessapproval_v1_accessapproval, 0);

/**
 * This API allows a customer to manage accesses to cloud resources by
 * Google personnel. It defines the following resource model:
 *
 * - The API has a collection of
 *   [ApprovalRequest][google.cloud.accessapproval.v1.ApprovalRequest]
 *   resources, named `approvalRequests/{approval_request}`
 * - The API has top-level settings per Project/Folder/Organization, named
 *   `accessApprovalSettings`
 *
 * The service also periodically emails a list of recipients, defined at the
 * Project/Folder/Organization level in the accessApprovalSettings, when there
 * is a pending ApprovalRequest for them to act on. The ApprovalRequests can
 * also optionally be published to a Pub/Sub topic owned by the customer
 * (contact support if you would like to enable Pub/Sub notifications).
 *
 * ApprovalRequests can be approved or dismissed. Google personnel can only
 * access the indicated resource or resources if the request is approved
 * (subject to some exclusions:
 * https://cloud.google.com/access-approval/docs/overview#exclusions).
 *
 * Note: Using Access Approval functionality will mean that Google may not be
 * able to meet the SLAs for your chosen products, as any support response times
 * may be dramatically increased. As such the SLAs do not apply to any service
 * disruption to the extent impacted by Customer's use of Access Approval. Do
 * not enable Access Approval for projects where you may require high service
 * availability and rapid response by Google Cloud Support.
 *
 * After a request is approved or dismissed, no further action may be taken on
 * it. Requests with the requested_expiration in the past or with no activity
 * for 14 days are considered dismissed. When an approval expires, the request
 * is considered dismissed.
 *
 * If a request is not approved or dismissed, we call it pending.
 *
 * @generated from service google.cloud.accessapproval.v1.AccessApproval
 */
export const AccessApproval: GenService<{
  /**
   * Lists approval requests associated with a project, folder, or organization.
   * Approval requests can be filtered by state (pending, active, dismissed).
   * The order is reverse chronological.
   *
   * @generated from rpc google.cloud.accessapproval.v1.AccessApproval.ListApprovalRequests
   */
  listApprovalRequests: {
    methodKind: "unary";
    input: typeof ListApprovalRequestsMessageSchema;
    output: typeof ListApprovalRequestsResponseSchema;
  },
  /**
   * Gets an approval request. Returns NOT_FOUND if the request does not exist.
   *
   * @generated from rpc google.cloud.accessapproval.v1.AccessApproval.GetApprovalRequest
   */
  getApprovalRequest: {
    methodKind: "unary";
    input: typeof GetApprovalRequestMessageSchema;
    output: typeof ApprovalRequestSchema;
  },
  /**
   * Approves a request and returns the updated ApprovalRequest.
   *
   * Returns NOT_FOUND if the request does not exist. Returns
   * FAILED_PRECONDITION if the request exists but is not in a pending state.
   *
   * @generated from rpc google.cloud.accessapproval.v1.AccessApproval.ApproveApprovalRequest
   */
  approveApprovalRequest: {
    methodKind: "unary";
    input: typeof ApproveApprovalRequestMessageSchema;
    output: typeof ApprovalRequestSchema;
  },
  /**
   * Dismisses a request. Returns the updated ApprovalRequest.
   *
   * NOTE: This does not deny access to the resource if another request has been
   * made and approved. It is equivalent in effect to ignoring the request
   * altogether.
   *
   * Returns NOT_FOUND if the request does not exist.
   *
   * Returns FAILED_PRECONDITION if the request exists but is not in a pending
   * state.
   *
   * @generated from rpc google.cloud.accessapproval.v1.AccessApproval.DismissApprovalRequest
   */
  dismissApprovalRequest: {
    methodKind: "unary";
    input: typeof DismissApprovalRequestMessageSchema;
    output: typeof ApprovalRequestSchema;
  },
  /**
   * Invalidates an existing ApprovalRequest. Returns the updated
   * ApprovalRequest.
   *
   * NOTE: This does not deny access to the resource if another request has been
   * made and approved. It only invalidates a single approval.
   *
   * Returns FAILED_PRECONDITION if the request exists but is not in an approved
   * state.
   *
   * @generated from rpc google.cloud.accessapproval.v1.AccessApproval.InvalidateApprovalRequest
   */
  invalidateApprovalRequest: {
    methodKind: "unary";
    input: typeof InvalidateApprovalRequestMessageSchema;
    output: typeof ApprovalRequestSchema;
  },
  /**
   * Gets the settings associated with a project, folder, or organization.
   *
   * @generated from rpc google.cloud.accessapproval.v1.AccessApproval.GetAccessApprovalSettings
   */
  getAccessApprovalSettings: {
    methodKind: "unary";
    input: typeof GetAccessApprovalSettingsMessageSchema;
    output: typeof AccessApprovalSettingsSchema;
  },
  /**
   * Updates the settings associated with a project, folder, or organization.
   * Settings to update are determined by the value of field_mask.
   *
   * @generated from rpc google.cloud.accessapproval.v1.AccessApproval.UpdateAccessApprovalSettings
   */
  updateAccessApprovalSettings: {
    methodKind: "unary";
    input: typeof UpdateAccessApprovalSettingsMessageSchema;
    output: typeof AccessApprovalSettingsSchema;
  },
  /**
   * Deletes the settings associated with a project, folder, or organization.
   * This will have the effect of disabling Access Approval for the project,
   * folder, or organization, but only if all ancestors also have Access
   * Approval disabled. If Access Approval is enabled at a higher level of the
   * hierarchy, then Access Approval will still be enabled at this level as
   * the settings are inherited.
   *
   * @generated from rpc google.cloud.accessapproval.v1.AccessApproval.DeleteAccessApprovalSettings
   */
  deleteAccessApprovalSettings: {
    methodKind: "unary";
    input: typeof DeleteAccessApprovalSettingsMessageSchema;
    output: typeof EmptySchema;
  },
  /**
   * Retrieves the service account that is used by Access Approval to access KMS
   * keys for signing approved approval requests.
   *
   * @generated from rpc google.cloud.accessapproval.v1.AccessApproval.GetAccessApprovalServiceAccount
   */
  getAccessApprovalServiceAccount: {
    methodKind: "unary";
    input: typeof GetAccessApprovalServiceAccountMessageSchema;
    output: typeof AccessApprovalServiceAccountSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_accessapproval_v1_accessapproval, 0);

