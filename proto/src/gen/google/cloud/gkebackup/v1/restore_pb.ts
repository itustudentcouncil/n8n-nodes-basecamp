// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/gkebackup/v1/restore.proto (package google.cloud.gkebackup.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { NamespacedNames, Namespaces, VolumeTypeEnum_VolumeType } from "./common_pb";
import { file_google_cloud_gkebackup_v1_common } from "./common_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/gkebackup/v1/restore.proto.
 */
export const file_google_cloud_gkebackup_v1_restore: GenFile = /*@__PURE__*/
  fileDesc("Cidnb29nbGUvY2xvdWQvZ2tlYmFja3VwL3YxL3Jlc3RvcmUucHJvdG8SGWdvb2dsZS5jbG91ZC5na2ViYWNrdXAudjEi2QoKB1Jlc3RvcmUSEQoEbmFtZRgBIAEoCUID4EEDEhAKA3VpZBgCIAEoCUID4EEDEjQKC2NyZWF0ZV90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC3VwZGF0ZV90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEhMKC2Rlc2NyaXB0aW9uGAUgASgJEjoKBmJhY2t1cBgGIAEoCUIq4EEF4EEC+kEhCh9na2ViYWNrdXAuZ29vZ2xlYXBpcy5jb20vQmFja3VwEjkKB2NsdXN0ZXIYByABKAlCKOBBA/pBIgogY29udGFpbmVyLmdvb2dsZWFwaXMuY29tL0NsdXN0ZXISRQoOcmVzdG9yZV9jb25maWcYCCABKAsyKC5nb29nbGUuY2xvdWQuZ2tlYmFja3VwLnYxLlJlc3RvcmVDb25maWdCA+BBAxI+CgZsYWJlbHMYCSADKAsyLi5nb29nbGUuY2xvdWQuZ2tlYmFja3VwLnYxLlJlc3RvcmUuTGFiZWxzRW50cnkSPAoFc3RhdGUYCiABKA4yKC5nb29nbGUuY2xvdWQuZ2tlYmFja3VwLnYxLlJlc3RvcmUuU3RhdGVCA+BBAxIZCgxzdGF0ZV9yZWFzb24YCyABKAlCA+BBAxI2Cg1jb21wbGV0ZV90aW1lGAwgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEiUKGHJlc291cmNlc19yZXN0b3JlZF9jb3VudBgNIAEoBUID4EEDEiUKGHJlc291cmNlc19leGNsdWRlZF9jb3VudBgOIAEoBUID4EEDEiMKFnJlc291cmNlc19mYWlsZWRfY291bnQYDyABKAVCA+BBAxIjChZ2b2x1bWVzX3Jlc3RvcmVkX2NvdW50GBAgASgFQgPgQQMSEQoEZXRhZxgRIAEoCUID4EEDEkEKBmZpbHRlchgSIAEoCzIpLmdvb2dsZS5jbG91ZC5na2ViYWNrdXAudjEuUmVzdG9yZS5GaWx0ZXJCBuBBBeBBARJwCiR2b2x1bWVfZGF0YV9yZXN0b3JlX3BvbGljeV9vdmVycmlkZXMYEyADKAsyOi5nb29nbGUuY2xvdWQuZ2tlYmFja3VwLnYxLlZvbHVtZURhdGFSZXN0b3JlUG9saWN5T3ZlcnJpZGVCBuBBBeBBARqiAQoGRmlsdGVyEksKEWluY2x1c2lvbl9maWx0ZXJzGAEgAygLMisuZ29vZ2xlLmNsb3VkLmdrZWJhY2t1cC52MS5SZXNvdXJjZVNlbGVjdG9yQgPgQQESSwoRZXhjbHVzaW9uX2ZpbHRlcnMYAiADKAsyKy5nb29nbGUuY2xvdWQuZ2tlYmFja3VwLnYxLlJlc291cmNlU2VsZWN0b3JCA+BBARotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBImYKBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAASDAoIQ1JFQVRJTkcQARIPCgtJTl9QUk9HUkVTUxACEg0KCVNVQ0NFRURFRBADEgoKBkZBSUxFRBAEEgwKCERFTEVUSU5HEAU6fepBegogZ2tlYmFja3VwLmdvb2dsZWFwaXMuY29tL1Jlc3RvcmUSVnByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9yZXN0b3JlUGxhbnMve3Jlc3RvcmVfcGxhbn0vcmVzdG9yZXMve3Jlc3RvcmV9Iu8aCg1SZXN0b3JlQ29uZmlnEmkKGnZvbHVtZV9kYXRhX3Jlc3RvcmVfcG9saWN5GAEgASgOMkAuZ29vZ2xlLmNsb3VkLmdrZWJhY2t1cC52MS5SZXN0b3JlQ29uZmlnLlZvbHVtZURhdGFSZXN0b3JlUG9saWN5QgPgQQESdQogY2x1c3Rlcl9yZXNvdXJjZV9jb25mbGljdF9wb2xpY3kYAiABKA4yRi5nb29nbGUuY2xvdWQuZ2tlYmFja3VwLnYxLlJlc3RvcmVDb25maWcuQ2x1c3RlclJlc291cmNlQ29uZmxpY3RQb2xpY3lCA+BBARJ1CiBuYW1lc3BhY2VkX3Jlc291cmNlX3Jlc3RvcmVfbW9kZRgDIAEoDjJGLmdvb2dsZS5jbG91ZC5na2ViYWNrdXAudjEuUmVzdG9yZUNvbmZpZy5OYW1lc3BhY2VkUmVzb3VyY2VSZXN0b3JlTW9kZUID4EEBEnEKHmNsdXN0ZXJfcmVzb3VyY2VfcmVzdG9yZV9zY29wZRgEIAEoCzJELmdvb2dsZS5jbG91ZC5na2ViYWNrdXAudjEuUmVzdG9yZUNvbmZpZy5DbHVzdGVyUmVzb3VyY2VSZXN0b3JlU2NvcGVCA+BBARIYCg5hbGxfbmFtZXNwYWNlcxgFIAEoCEgAEkQKE3NlbGVjdGVkX25hbWVzcGFjZXMYBiABKAsyJS5nb29nbGUuY2xvdWQuZ2tlYmFja3VwLnYxLk5hbWVzcGFjZXNIABJLChVzZWxlY3RlZF9hcHBsaWNhdGlvbnMYByABKAsyKi5nb29nbGUuY2xvdWQuZ2tlYmFja3VwLnYxLk5hbWVzcGFjZWROYW1lc0gAEhcKDW5vX25hbWVzcGFjZXMYCSABKAhIABJEChNleGNsdWRlZF9uYW1lc3BhY2VzGAogASgLMiUuZ29vZ2xlLmNsb3VkLmdrZWJhY2t1cC52MS5OYW1lc3BhY2VzSAASWgoSc3Vic3RpdHV0aW9uX3J1bGVzGAggAygLMjkuZ29vZ2xlLmNsb3VkLmdrZWJhY2t1cC52MS5SZXN0b3JlQ29uZmlnLlN1YnN0aXR1dGlvblJ1bGVCA+BBARJeChR0cmFuc2Zvcm1hdGlvbl9ydWxlcxgLIAMoCzI7Lmdvb2dsZS5jbG91ZC5na2ViYWNrdXAudjEuUmVzdG9yZUNvbmZpZy5UcmFuc2Zvcm1hdGlvblJ1bGVCA+BBARJ5CiN2b2x1bWVfZGF0YV9yZXN0b3JlX3BvbGljeV9iaW5kaW5ncxgMIAMoCzJHLmdvb2dsZS5jbG91ZC5na2ViYWNrdXAudjEuUmVzdG9yZUNvbmZpZy5Wb2x1bWVEYXRhUmVzdG9yZVBvbGljeUJpbmRpbmdCA+BBARJRCg1yZXN0b3JlX29yZGVyGA0gASgLMjUuZ29vZ2xlLmNsb3VkLmdrZWJhY2t1cC52MS5SZXN0b3JlQ29uZmlnLlJlc3RvcmVPcmRlckID4EEBGkQKCUdyb3VwS2luZBIbCg5yZXNvdXJjZV9ncm91cBgBIAEoCUID4EEBEhoKDXJlc291cmNlX2tpbmQYAiABKAlCA+BBARqGAgobQ2x1c3RlclJlc291cmNlUmVzdG9yZVNjb3BlElUKFHNlbGVjdGVkX2dyb3VwX2tpbmRzGAEgAygLMjIuZ29vZ2xlLmNsb3VkLmdrZWJhY2t1cC52MS5SZXN0b3JlQ29uZmlnLkdyb3VwS2luZEID4EEBElUKFGV4Y2x1ZGVkX2dyb3VwX2tpbmRzGAIgAygLMjIuZ29vZ2xlLmNsb3VkLmdrZWJhY2t1cC52MS5SZXN0b3JlQ29uZmlnLkdyb3VwS2luZEID4EEBEhwKD2FsbF9ncm91cF9raW5kcxgDIAEoCEID4EEBEhsKDm5vX2dyb3VwX2tpbmRzGAQgASgIQgPgQQEa4wEKEFN1YnN0aXR1dGlvblJ1bGUSHgoRdGFyZ2V0X25hbWVzcGFjZXMYASADKAlCA+BBARJTChJ0YXJnZXRfZ3JvdXBfa2luZHMYAiADKAsyMi5nb29nbGUuY2xvdWQuZ2tlYmFja3VwLnYxLlJlc3RvcmVDb25maWcuR3JvdXBLaW5kQgPgQQESHQoQdGFyZ2V0X2pzb25fcGF0aBgDIAEoCUID4EECEiMKFm9yaWdpbmFsX3ZhbHVlX3BhdHRlcm4YBCABKAlCA+BBARIWCgluZXdfdmFsdWUYBSABKAlCA+BBARqKAgoYVHJhbnNmb3JtYXRpb25SdWxlQWN0aW9uElUKAm9wGAEgASgOMkQuZ29vZ2xlLmNsb3VkLmdrZWJhY2t1cC52MS5SZXN0b3JlQ29uZmlnLlRyYW5zZm9ybWF0aW9uUnVsZUFjdGlvbi5PcEID4EECEhYKCWZyb21fcGF0aBgCIAEoCUID4EEBEhEKBHBhdGgYAyABKAlCA+BBARISCgV2YWx1ZRgEIAEoCUID4EEBIlgKAk9wEhIKDk9QX1VOU1BFQ0lGSUVEEAASCgoGUkVNT1ZFEAESCAoETU9WRRACEggKBENPUFkQAxIHCgNBREQQBBIICgRURVNUEAUSCwoHUkVQTEFDRRAGGo8BCg5SZXNvdXJjZUZpbHRlchIXCgpuYW1lc3BhY2VzGAEgAygJQgPgQQESTAoLZ3JvdXBfa2luZHMYAiADKAsyMi5nb29nbGUuY2xvdWQuZ2tlYmFja3VwLnYxLlJlc3RvcmVDb25maWcuR3JvdXBLaW5kQgPgQQESFgoJanNvbl9wYXRoGAMgASgJQgPgQQEa5AEKElRyYW5zZm9ybWF0aW9uUnVsZRJdCg1maWVsZF9hY3Rpb25zGAEgAygLMkEuZ29vZ2xlLmNsb3VkLmdrZWJhY2t1cC52MS5SZXN0b3JlQ29uZmlnLlRyYW5zZm9ybWF0aW9uUnVsZUFjdGlvbkID4EECElUKD3Jlc291cmNlX2ZpbHRlchgCIAEoCzI3Lmdvb2dsZS5jbG91ZC5na2ViYWNrdXAudjEuUmVzdG9yZUNvbmZpZy5SZXNvdXJjZUZpbHRlckID4EEBEhgKC2Rlc2NyaXB0aW9uGAMgASgJQgPgQQEazQEKHlZvbHVtZURhdGFSZXN0b3JlUG9saWN5QmluZGluZxJVCgZwb2xpY3kYASABKA4yQC5nb29nbGUuY2xvdWQuZ2tlYmFja3VwLnYxLlJlc3RvcmVDb25maWcuVm9sdW1lRGF0YVJlc3RvcmVQb2xpY3lCA+BBAhJLCgt2b2x1bWVfdHlwZRgCIAEoDjI0Lmdvb2dsZS5jbG91ZC5na2ViYWNrdXAudjEuVm9sdW1lVHlwZUVudW0uVm9sdW1lVHlwZUgAQgcKBXNjb3BlGrACCgxSZXN0b3JlT3JkZXISbwoXZ3JvdXBfa2luZF9kZXBlbmRlbmNpZXMYASADKAsySS5nb29nbGUuY2xvdWQuZ2tlYmFja3VwLnYxLlJlc3RvcmVDb25maWcuUmVzdG9yZU9yZGVyLkdyb3VwS2luZERlcGVuZGVuY3lCA+BBARquAQoTR3JvdXBLaW5kRGVwZW5kZW5jeRJLCgpzYXRpc2Z5aW5nGAEgASgLMjIuZ29vZ2xlLmNsb3VkLmdrZWJhY2t1cC52MS5SZXN0b3JlQ29uZmlnLkdyb3VwS2luZEID4EECEkoKCXJlcXVpcmluZxgCIAEoCzIyLmdvb2dsZS5jbG91ZC5na2ViYWNrdXAudjEuUmVzdG9yZUNvbmZpZy5Hcm91cEtpbmRCA+BBAiKvAQoXVm9sdW1lRGF0YVJlc3RvcmVQb2xpY3kSKgomVk9MVU1FX0RBVEFfUkVTVE9SRV9QT0xJQ1lfVU5TUEVDSUZJRUQQABIjCh9SRVNUT1JFX1ZPTFVNRV9EQVRBX0ZST01fQkFDS1VQEAESIwofUkVVU0VfVk9MVU1FX0hBTkRMRV9GUk9NX0JBQ0tVUBACEh4KGk5PX1ZPTFVNRV9EQVRBX1JFU1RPUkFUSU9OEAMigwEKHUNsdXN0ZXJSZXNvdXJjZUNvbmZsaWN0UG9saWN5EjAKLENMVVNURVJfUkVTT1VSQ0VfQ09ORkxJQ1RfUE9MSUNZX1VOU1BFQ0lGSUVEEAASGAoUVVNFX0VYSVNUSU5HX1ZFUlNJT04QARIWChJVU0VfQkFDS1VQX1ZFUlNJT04QAiLgAQodTmFtZXNwYWNlZFJlc291cmNlUmVzdG9yZU1vZGUSMAosTkFNRVNQQUNFRF9SRVNPVVJDRV9SRVNUT1JFX01PREVfVU5TUEVDSUZJRUQQABIWChJERUxFVEVfQU5EX1JFU1RPUkUQARIUChBGQUlMX09OX0NPTkZMSUNUEAISGgoWTUVSR0VfU0tJUF9PTl9DT05GTElDVBADEiQKIE1FUkdFX1JFUExBQ0VfVk9MVU1FX09OX0NPTkZMSUNUEAQSHQoZTUVSR0VfUkVQTEFDRV9PTl9DT05GTElDVBAFQiMKIW5hbWVzcGFjZWRfcmVzb3VyY2VfcmVzdG9yZV9zY29wZSKHAgoQUmVzb3VyY2VTZWxlY3RvchJLCgpncm91cF9raW5kGAEgASgLMjIuZ29vZ2xlLmNsb3VkLmdrZWJhY2t1cC52MS5SZXN0b3JlQ29uZmlnLkdyb3VwS2luZEID4EEBEhEKBG5hbWUYAiABKAlCA+BBARIWCgluYW1lc3BhY2UYAyABKAlCA+BBARJMCgZsYWJlbHMYBCADKAsyNy5nb29nbGUuY2xvdWQuZ2tlYmFja3VwLnYxLlJlc291cmNlU2VsZWN0b3IuTGFiZWxzRW50cnlCA+BBARotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIsYBCh9Wb2x1bWVEYXRhUmVzdG9yZVBvbGljeU92ZXJyaWRlElUKBnBvbGljeRgBIAEoDjJALmdvb2dsZS5jbG91ZC5na2ViYWNrdXAudjEuUmVzdG9yZUNvbmZpZy5Wb2x1bWVEYXRhUmVzdG9yZVBvbGljeUID4EECEkMKDXNlbGVjdGVkX3B2Y3MYAiABKAsyKi5nb29nbGUuY2xvdWQuZ2tlYmFja3VwLnYxLk5hbWVzcGFjZWROYW1lc0gAQgcKBXNjb3BlQsMBCh1jb20uZ29vZ2xlLmNsb3VkLmdrZWJhY2t1cC52MUIMUmVzdG9yZVByb3RvUAFaO2Nsb3VkLmdvb2dsZS5jb20vZ28vZ2tlYmFja3VwL2FwaXYxL2drZWJhY2t1cHBiO2drZWJhY2t1cHBiqgIZR29vZ2xlLkNsb3VkLkdrZUJhY2t1cC5WMcoCGUdvb2dsZVxDbG91ZFxHa2VCYWNrdXBcVjHqAhxHb29nbGU6OkNsb3VkOjpHa2VCYWNrdXA6OlYxYgZwcm90bzM", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_gkebackup_v1_common, file_google_protobuf_timestamp]);

/**
 * Represents both a request to Restore some portion of a Backup into
 * a target GKE cluster and a record of the restore operation itself.
 *
 * @generated from message google.cloud.gkebackup.v1.Restore
 */
export type Restore = Message<"google.cloud.gkebackup.v1.Restore"> & {
  /**
   * Output only. The full name of the Restore resource.
   * Format: `projects/*\/locations/*\/restorePlans/*\/restores/*`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Server generated global unique identifier of
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
   *
   * @generated from field: string uid = 2;
   */
  uid: string;

  /**
   * Output only. The timestamp when this Restore resource was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * Output only. The timestamp when this Restore resource was last
   * updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;

  /**
   * User specified descriptive string for this Restore.
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * Required. Immutable. A reference to the
   * [Backup][google.cloud.gkebackup.v1.Backup] used as the source from which
   * this Restore will restore. Note that this Backup must be a sub-resource of
   * the RestorePlan's
   * [backup_plan][google.cloud.gkebackup.v1.RestorePlan.backup_plan]. Format:
   * `projects/*\/locations/*\/backupPlans/*\/backups/*`.
   *
   * @generated from field: string backup = 6;
   */
  backup: string;

  /**
   * Output only. The target cluster into which this Restore will restore data.
   * Valid formats:
   *
   *   - `projects/*\/locations/*\/clusters/*`
   *   - `projects/*\/zones/*\/clusters/*`
   *
   * Inherited from parent RestorePlan's
   * [cluster][google.cloud.gkebackup.v1.RestorePlan.cluster] value.
   *
   * @generated from field: string cluster = 7;
   */
  cluster: string;

  /**
   * Output only. Configuration of the Restore.  Inherited from parent
   * RestorePlan's
   * [restore_config][google.cloud.gkebackup.v1.RestorePlan.restore_config].
   *
   * @generated from field: google.cloud.gkebackup.v1.RestoreConfig restore_config = 8;
   */
  restoreConfig?: RestoreConfig;

  /**
   * A set of custom labels supplied by user.
   *
   * @generated from field: map<string, string> labels = 9;
   */
  labels: { [key: string]: string };

  /**
   * Output only. The current state of the Restore.
   *
   * @generated from field: google.cloud.gkebackup.v1.Restore.State state = 10;
   */
  state: Restore_State;

  /**
   * Output only. Human-readable description of why the Restore is in its
   * current state.
   *
   * @generated from field: string state_reason = 11;
   */
  stateReason: string;

  /**
   * Output only. Timestamp of when the restore operation completed.
   *
   * @generated from field: google.protobuf.Timestamp complete_time = 12;
   */
  completeTime?: Timestamp;

  /**
   * Output only. Number of resources restored during the restore execution.
   *
   * @generated from field: int32 resources_restored_count = 13;
   */
  resourcesRestoredCount: number;

  /**
   * Output only. Number of resources excluded during the restore execution.
   *
   * @generated from field: int32 resources_excluded_count = 14;
   */
  resourcesExcludedCount: number;

  /**
   * Output only. Number of resources that failed to be restored during the
   * restore execution.
   *
   * @generated from field: int32 resources_failed_count = 15;
   */
  resourcesFailedCount: number;

  /**
   * Output only. Number of volumes restored during the restore execution.
   *
   * @generated from field: int32 volumes_restored_count = 16;
   */
  volumesRestoredCount: number;

  /**
   * Output only. `etag` is used for optimistic concurrency control as a way to
   * help prevent simultaneous updates of a restore from overwriting each other.
   * It is strongly suggested that systems make use of the `etag` in the
   * read-modify-write cycle to perform restore updates in order to avoid
   * race conditions: An `etag` is returned in the response to `GetRestore`,
   * and systems are expected to put that etag in the request to
   * `UpdateRestore` or `DeleteRestore` to ensure that their change will be
   * applied to the same version of the resource.
   *
   * @generated from field: string etag = 17;
   */
  etag: string;

  /**
   * Optional. Immutable. Filters resources for `Restore`. If not specified, the
   * scope of the restore will remain the same as defined in the `RestorePlan`.
   * If this is specified, and no resources are matched by the
   * `inclusion_filters` or everyting is excluded by the `exclusion_filters`,
   * nothing will be restored. This filter can only be specified if the value of
   * [namespaced_resource_restore_mode][google.cloud.gkebackup.v1.RestoreConfig.namespaced_resource_restore_mode]
   * is set to `MERGE_SKIP_ON_CONFLICT`, `MERGE_REPLACE_VOLUME_ON_CONFLICT` or
   * `MERGE_REPLACE_ON_CONFLICT`.
   *
   * @generated from field: google.cloud.gkebackup.v1.Restore.Filter filter = 18;
   */
  filter?: Restore_Filter;

  /**
   * Optional. Immutable. Overrides the volume data restore policies selected in
   * the Restore Config for override-scoped resources.
   *
   * @generated from field: repeated google.cloud.gkebackup.v1.VolumeDataRestorePolicyOverride volume_data_restore_policy_overrides = 19;
   */
  volumeDataRestorePolicyOverrides: VolumeDataRestorePolicyOverride[];
};

/**
 * Describes the message google.cloud.gkebackup.v1.Restore.
 * Use `create(RestoreSchema)` to create a new message.
 */
export const RestoreSchema: GenMessage<Restore> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_v1_restore, 0);

/**
 * Defines the filter for `Restore`. This filter can be used to further
 * refine the resource selection of the `Restore` beyond the coarse-grained
 * scope defined in the `RestorePlan`. `exclusion_filters` take precedence
 * over `inclusion_filters`. If a resource matches both `inclusion_filters`
 * and `exclusion_filters`, it will not be restored.
 *
 * @generated from message google.cloud.gkebackup.v1.Restore.Filter
 */
export type Restore_Filter = Message<"google.cloud.gkebackup.v1.Restore.Filter"> & {
  /**
   * Optional. Selects resources for restoration. If specified, only resources
   * which match `inclusion_filters` will be selected for restoration. A
   * resource will be selected if it matches any `ResourceSelector` of the
   * `inclusion_filters`.
   *
   * @generated from field: repeated google.cloud.gkebackup.v1.ResourceSelector inclusion_filters = 1;
   */
  inclusionFilters: ResourceSelector[];

  /**
   * Optional. Excludes resources from restoration. If specified,
   * a resource will not be restored if it matches
   * any `ResourceSelector` of the `exclusion_filters`.
   *
   * @generated from field: repeated google.cloud.gkebackup.v1.ResourceSelector exclusion_filters = 2;
   */
  exclusionFilters: ResourceSelector[];
};

/**
 * Describes the message google.cloud.gkebackup.v1.Restore.Filter.
 * Use `create(Restore_FilterSchema)` to create a new message.
 */
export const Restore_FilterSchema: GenMessage<Restore_Filter> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_v1_restore, 0, 0);

/**
 * Possible values for state of the Restore.
 *
 * @generated from enum google.cloud.gkebackup.v1.Restore.State
 */
export enum Restore_State {
  /**
   * The Restore resource is in the process of being created.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The Restore resource has been created and the associated RestoreJob
   * Kubernetes resource has been injected into target cluster.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The gkebackup agent in the cluster has begun executing the restore
   * operation.
   *
   * @generated from enum value: IN_PROGRESS = 2;
   */
  IN_PROGRESS = 2,

  /**
   * The restore operation has completed successfully. Restored workloads may
   * not yet be operational.
   *
   * @generated from enum value: SUCCEEDED = 3;
   */
  SUCCEEDED = 3,

  /**
   * The restore operation has failed.
   *
   * @generated from enum value: FAILED = 4;
   */
  FAILED = 4,

  /**
   * This Restore resource is in the process of being deleted.
   *
   * @generated from enum value: DELETING = 5;
   */
  DELETING = 5,
}

/**
 * Describes the enum google.cloud.gkebackup.v1.Restore.State.
 */
export const Restore_StateSchema: GenEnum<Restore_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkebackup_v1_restore, 0, 0);

/**
 * Configuration of a restore.
 *
 * @generated from message google.cloud.gkebackup.v1.RestoreConfig
 */
export type RestoreConfig = Message<"google.cloud.gkebackup.v1.RestoreConfig"> & {
  /**
   * Optional. Specifies the mechanism to be used to restore volume data.
   * Default: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED (will be treated as
   * NO_VOLUME_DATA_RESTORATION).
   *
   * @generated from field: google.cloud.gkebackup.v1.RestoreConfig.VolumeDataRestorePolicy volume_data_restore_policy = 1;
   */
  volumeDataRestorePolicy: RestoreConfig_VolumeDataRestorePolicy;

  /**
   * Optional. Defines the behavior for handling the situation where
   * cluster-scoped resources being restored already exist in the target
   * cluster. This MUST be set to a value other than
   * CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED if
   * [cluster_resource_restore_scope][google.cloud.gkebackup.v1.RestoreConfig.cluster_resource_restore_scope]
   * is not empty.
   *
   * @generated from field: google.cloud.gkebackup.v1.RestoreConfig.ClusterResourceConflictPolicy cluster_resource_conflict_policy = 2;
   */
  clusterResourceConflictPolicy: RestoreConfig_ClusterResourceConflictPolicy;

  /**
   * Optional. Defines the behavior for handling the situation where sets of
   * namespaced resources being restored already exist in the target cluster.
   * This MUST be set to a value other than
   * NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED.
   *
   * @generated from field: google.cloud.gkebackup.v1.RestoreConfig.NamespacedResourceRestoreMode namespaced_resource_restore_mode = 3;
   */
  namespacedResourceRestoreMode: RestoreConfig_NamespacedResourceRestoreMode;

  /**
   * Optional. Identifies the cluster-scoped resources to restore from the
   * Backup. Not specifying it means NO cluster resource will be restored.
   *
   * @generated from field: google.cloud.gkebackup.v1.RestoreConfig.ClusterResourceRestoreScope cluster_resource_restore_scope = 4;
   */
  clusterResourceRestoreScope?: RestoreConfig_ClusterResourceRestoreScope;

  /**
   * Specifies the namespaced resources to restore from the Backup.
   * Only one of the entries may be specified. If not specified, NO namespaced
   * resources will be restored.
   *
   * Note: Resources will never be restored into *managed* namespaces such as
   * `kube-system`, `kube-public`, or `kube-node-lease`. These namespaces
   * are silently skipped when
   * [all_namespaces][google.cloud.gkebackup.v1.RestoreConfig.all_namespaces] is
   * selected. Listing them explicitly will result in an error.
   *
   * @generated from oneof google.cloud.gkebackup.v1.RestoreConfig.namespaced_resource_restore_scope
   */
  namespacedResourceRestoreScope: {
    /**
     * Restore all namespaced resources in the Backup if set to "True".
     * Specifying this field to "False" is an error.
     *
     * @generated from field: bool all_namespaces = 5;
     */
    value: boolean;
    case: "allNamespaces";
  } | {
    /**
     * A list of selected Namespaces to restore from the Backup. The listed
     * Namespaces and all resources contained in them will be restored.
     *
     * @generated from field: google.cloud.gkebackup.v1.Namespaces selected_namespaces = 6;
     */
    value: Namespaces;
    case: "selectedNamespaces";
  } | {
    /**
     * A list of selected ProtectedApplications to restore. The listed
     * ProtectedApplications and all the resources to which they refer will be
     * restored.
     *
     * @generated from field: google.cloud.gkebackup.v1.NamespacedNames selected_applications = 7;
     */
    value: NamespacedNames;
    case: "selectedApplications";
  } | {
    /**
     * Do not restore any namespaced resources if set to "True".
     * Specifying this field to "False" is not allowed.
     *
     * @generated from field: bool no_namespaces = 9;
     */
    value: boolean;
    case: "noNamespaces";
  } | {
    /**
     * A list of selected namespaces excluded from restoration. All
     * namespaces except those in this list will be restored.
     *
     * @generated from field: google.cloud.gkebackup.v1.Namespaces excluded_namespaces = 10;
     */
    value: Namespaces;
    case: "excludedNamespaces";
  } | { case: undefined; value?: undefined };

  /**
   * Optional. A list of transformation rules to be applied against Kubernetes
   * resources as they are selected for restoration from a Backup. Rules are
   * executed in order defined - this order matters, as changes made by a rule
   * may impact the filtering logic of subsequent rules. An empty list means no
   * substitution will occur.
   *
   * @generated from field: repeated google.cloud.gkebackup.v1.RestoreConfig.SubstitutionRule substitution_rules = 8;
   */
  substitutionRules: RestoreConfig_SubstitutionRule[];

  /**
   * Optional. A list of transformation rules to be applied against Kubernetes
   * resources as they are selected for restoration from a Backup. Rules are
   * executed in order defined - this order matters, as changes made by a rule
   * may impact the filtering logic of subsequent rules. An empty list means no
   * transformation will occur.
   *
   * @generated from field: repeated google.cloud.gkebackup.v1.RestoreConfig.TransformationRule transformation_rules = 11;
   */
  transformationRules: RestoreConfig_TransformationRule[];

  /**
   * Optional. A table that binds volumes by their scope to a restore policy.
   * Bindings must have a unique scope. Any volumes not scoped in the bindings
   * are subject to the policy defined in volume_data_restore_policy.
   *
   * @generated from field: repeated google.cloud.gkebackup.v1.RestoreConfig.VolumeDataRestorePolicyBinding volume_data_restore_policy_bindings = 12;
   */
  volumeDataRestorePolicyBindings: RestoreConfig_VolumeDataRestorePolicyBinding[];

  /**
   * Optional. RestoreOrder contains custom ordering to use on a Restore.
   *
   * @generated from field: google.cloud.gkebackup.v1.RestoreConfig.RestoreOrder restore_order = 13;
   */
  restoreOrder?: RestoreConfig_RestoreOrder;
};

/**
 * Describes the message google.cloud.gkebackup.v1.RestoreConfig.
 * Use `create(RestoreConfigSchema)` to create a new message.
 */
export const RestoreConfigSchema: GenMessage<RestoreConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_v1_restore, 1);

/**
 * This is a direct map to the Kubernetes GroupKind type
 * [GroupKind](https://godoc.org/k8s.io/apimachinery/pkg/runtime/schema#GroupKind)
 * and is used for identifying specific "types" of resources to restore.
 *
 * @generated from message google.cloud.gkebackup.v1.RestoreConfig.GroupKind
 */
export type RestoreConfig_GroupKind = Message<"google.cloud.gkebackup.v1.RestoreConfig.GroupKind"> & {
  /**
   * Optional. API group string of a Kubernetes resource, e.g.
   * "apiextensions.k8s.io", "storage.k8s.io", etc.
   * Note: use empty string for core API group
   *
   * @generated from field: string resource_group = 1;
   */
  resourceGroup: string;

  /**
   * Optional. Kind of a Kubernetes resource, must be in UpperCamelCase
   * (PascalCase) and singular form. E.g. "CustomResourceDefinition",
   * "StorageClass", etc.
   *
   * @generated from field: string resource_kind = 2;
   */
  resourceKind: string;
};

/**
 * Describes the message google.cloud.gkebackup.v1.RestoreConfig.GroupKind.
 * Use `create(RestoreConfig_GroupKindSchema)` to create a new message.
 */
export const RestoreConfig_GroupKindSchema: GenMessage<RestoreConfig_GroupKind> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_v1_restore, 1, 0);

/**
 * Defines the scope of cluster-scoped resources to restore.
 *
 * Some group kinds are not reasonable choices for a restore, and will cause
 * an error if selected here. Any scope selection that would restore
 * "all valid" resources automatically excludes these group kinds.
 * - gkebackup.gke.io/BackupJob
 * - gkebackup.gke.io/RestoreJob
 * - metrics.k8s.io/NodeMetrics
 * - migration.k8s.io/StorageState
 * - migration.k8s.io/StorageVersionMigration
 * - Node
 * - snapshot.storage.k8s.io/VolumeSnapshotContent
 * - storage.k8s.io/CSINode
 *
 * Some group kinds are driven by restore configuration elsewhere,
 * and will cause an error if selected here.
 * - Namespace
 * - PersistentVolume
 *
 * @generated from message google.cloud.gkebackup.v1.RestoreConfig.ClusterResourceRestoreScope
 */
export type RestoreConfig_ClusterResourceRestoreScope = Message<"google.cloud.gkebackup.v1.RestoreConfig.ClusterResourceRestoreScope"> & {
  /**
   * Optional. A list of cluster-scoped resource group kinds to restore from
   * the backup. If specified, only the selected resources will be restored.
   * Mutually exclusive to any other field in the message.
   *
   * @generated from field: repeated google.cloud.gkebackup.v1.RestoreConfig.GroupKind selected_group_kinds = 1;
   */
  selectedGroupKinds: RestoreConfig_GroupKind[];

  /**
   * Optional. A list of cluster-scoped resource group kinds to NOT restore
   * from the backup. If specified, all valid cluster-scoped resources will be
   * restored except for those specified in the list.
   * Mutually exclusive to any other field in the message.
   *
   * @generated from field: repeated google.cloud.gkebackup.v1.RestoreConfig.GroupKind excluded_group_kinds = 2;
   */
  excludedGroupKinds: RestoreConfig_GroupKind[];

  /**
   * Optional. If True, all valid cluster-scoped resources will be restored.
   * Mutually exclusive to any other field in the message.
   *
   * @generated from field: bool all_group_kinds = 3;
   */
  allGroupKinds: boolean;

  /**
   * Optional. If True, no cluster-scoped resources will be restored.
   * This has the same restore scope as if the message is not defined.
   * Mutually exclusive to any other field in the message.
   *
   * @generated from field: bool no_group_kinds = 4;
   */
  noGroupKinds: boolean;
};

/**
 * Describes the message google.cloud.gkebackup.v1.RestoreConfig.ClusterResourceRestoreScope.
 * Use `create(RestoreConfig_ClusterResourceRestoreScopeSchema)` to create a new message.
 */
export const RestoreConfig_ClusterResourceRestoreScopeSchema: GenMessage<RestoreConfig_ClusterResourceRestoreScope> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_v1_restore, 1, 1);

/**
 * A transformation rule to be applied against Kubernetes resources as they
 * are selected for restoration from a Backup. A rule contains both filtering
 * logic (which resources are subject to substitution) and substitution logic.
 *
 * @generated from message google.cloud.gkebackup.v1.RestoreConfig.SubstitutionRule
 */
export type RestoreConfig_SubstitutionRule = Message<"google.cloud.gkebackup.v1.RestoreConfig.SubstitutionRule"> & {
  /**
   * Optional. (Filtering parameter) Any resource subject to substitution must
   * be contained within one of the listed Kubernetes Namespace in the Backup.
   * If this field is not provided, no namespace filtering will be performed
   * (all resources in all Namespaces, including all cluster-scoped resources,
   * will be candidates for substitution).
   * To mix cluster-scoped and namespaced resources in the same rule, use an
   * empty string ("") as one of the target namespaces.
   *
   * @generated from field: repeated string target_namespaces = 1;
   */
  targetNamespaces: string[];

  /**
   * Optional. (Filtering parameter) Any resource subject to substitution must
   * belong to one of the listed "types". If this field is not provided, no
   * type filtering will be performed (all resources of all types matching
   * previous filtering parameters will be candidates for substitution).
   *
   * @generated from field: repeated google.cloud.gkebackup.v1.RestoreConfig.GroupKind target_group_kinds = 2;
   */
  targetGroupKinds: RestoreConfig_GroupKind[];

  /**
   * Required. This is a [JSONPath]
   * (https://kubernetes.io/docs/reference/kubectl/jsonpath/)
   * expression that matches specific fields of candidate
   * resources and it operates as both a filtering parameter (resources that
   * are not matched with this expression will not be candidates for
   * substitution) as well as a field identifier (identifies exactly which
   * fields out of the candidate resources will be modified).
   *
   * @generated from field: string target_json_path = 3;
   */
  targetJsonPath: string;

  /**
   * Optional. (Filtering parameter) This is a [regular expression]
   * (https://en.wikipedia.org/wiki/Regular_expression)
   * that is compared against the fields matched by the target_json_path
   * expression (and must also have passed the previous filters).
   * Substitution will not be performed against fields whose
   * value does not match this expression. If this field is NOT specified,
   * then ALL fields matched by the target_json_path expression will undergo
   * substitution. Note that an empty (e.g., "", rather than unspecified)
   * value for this field will only match empty fields.
   *
   * @generated from field: string original_value_pattern = 4;
   */
  originalValuePattern: string;

  /**
   * Optional. This is the new value to set for any fields that pass the
   * filtering and selection criteria. To remove a value from a Kubernetes
   * resource, either leave this field unspecified, or set it to the empty
   * string ("").
   *
   * @generated from field: string new_value = 5;
   */
  newValue: string;
};

/**
 * Describes the message google.cloud.gkebackup.v1.RestoreConfig.SubstitutionRule.
 * Use `create(RestoreConfig_SubstitutionRuleSchema)` to create a new message.
 */
export const RestoreConfig_SubstitutionRuleSchema: GenMessage<RestoreConfig_SubstitutionRule> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_v1_restore, 1, 2);

/**
 * TransformationRuleAction defines a TransformationRule action based on the
 * JSON Patch RFC (https://www.rfc-editor.org/rfc/rfc6902)
 *
 * @generated from message google.cloud.gkebackup.v1.RestoreConfig.TransformationRuleAction
 */
export type RestoreConfig_TransformationRuleAction = Message<"google.cloud.gkebackup.v1.RestoreConfig.TransformationRuleAction"> & {
  /**
   * Required. op specifies the operation to perform.
   *
   * @generated from field: google.cloud.gkebackup.v1.RestoreConfig.TransformationRuleAction.Op op = 1;
   */
  op: RestoreConfig_TransformationRuleAction_Op;

  /**
   * Optional. A string containing a JSON Pointer value that references the
   * location in the target document to move the value from.
   *
   * @generated from field: string from_path = 2;
   */
  fromPath: string;

  /**
   * Optional. A string containing a JSON-Pointer value that references a
   * location within the target document where the operation is performed.
   *
   * @generated from field: string path = 3;
   */
  path: string;

  /**
   * Optional. A string that specifies the desired value in string format to
   * use for transformation.
   *
   * @generated from field: string value = 4;
   */
  value: string;
};

/**
 * Describes the message google.cloud.gkebackup.v1.RestoreConfig.TransformationRuleAction.
 * Use `create(RestoreConfig_TransformationRuleActionSchema)` to create a new message.
 */
export const RestoreConfig_TransformationRuleActionSchema: GenMessage<RestoreConfig_TransformationRuleAction> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_v1_restore, 1, 3);

/**
 * Possible values for operations of a transformation rule action.
 *
 * @generated from enum google.cloud.gkebackup.v1.RestoreConfig.TransformationRuleAction.Op
 */
export enum RestoreConfig_TransformationRuleAction_Op {
  /**
   * Unspecified operation
   *
   * @generated from enum value: OP_UNSPECIFIED = 0;
   */
  OP_UNSPECIFIED = 0,

  /**
   * The "remove" operation removes the value at the target location.
   *
   * @generated from enum value: REMOVE = 1;
   */
  REMOVE = 1,

  /**
   * The "move" operation removes the value at a specified location and
   * adds it to the target location.
   *
   * @generated from enum value: MOVE = 2;
   */
  MOVE = 2,

  /**
   * The "copy" operation copies the value at a specified location to the
   * target location.
   *
   * @generated from enum value: COPY = 3;
   */
  COPY = 3,

  /**
   * The "add" operation performs one of the following functions,
   * depending upon what the target location references:
   * 1. If the target location specifies an array index, a new value is
   * inserted into the array at the specified index.
   * 2. If the target location specifies an object member that does not
   * already exist, a new member is added to the object.
   * 3. If the target location specifies an object member that does exist,
   * that member's value is replaced.
   *
   * @generated from enum value: ADD = 4;
   */
  ADD = 4,

  /**
   * The "test" operation tests that a value at the target location is
   * equal to a specified value.
   *
   * @generated from enum value: TEST = 5;
   */
  TEST = 5,

  /**
   * The "replace" operation replaces the value at the target location
   * with a new value.  The operation object MUST contain a "value" member
   * whose content specifies the replacement value.
   *
   * @generated from enum value: REPLACE = 6;
   */
  REPLACE = 6,
}

/**
 * Describes the enum google.cloud.gkebackup.v1.RestoreConfig.TransformationRuleAction.Op.
 */
export const RestoreConfig_TransformationRuleAction_OpSchema: GenEnum<RestoreConfig_TransformationRuleAction_Op> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkebackup_v1_restore, 1, 3, 0);

/**
 * ResourceFilter specifies matching criteria to limit the scope of a
 * change to a specific set of kubernetes resources that are selected for
 * restoration from a backup.
 *
 * @generated from message google.cloud.gkebackup.v1.RestoreConfig.ResourceFilter
 */
export type RestoreConfig_ResourceFilter = Message<"google.cloud.gkebackup.v1.RestoreConfig.ResourceFilter"> & {
  /**
   * Optional. (Filtering parameter) Any resource subject to transformation
   * must be contained within one of the listed Kubernetes Namespace in the
   * Backup. If this field is not provided, no namespace filtering will be
   * performed (all resources in all Namespaces, including all cluster-scoped
   * resources, will be candidates for transformation).
   *
   * @generated from field: repeated string namespaces = 1;
   */
  namespaces: string[];

  /**
   * Optional. (Filtering parameter) Any resource subject to transformation
   * must belong to one of the listed "types". If this field is not provided,
   * no type filtering will be performed (all resources of all types matching
   * previous filtering parameters will be candidates for transformation).
   *
   * @generated from field: repeated google.cloud.gkebackup.v1.RestoreConfig.GroupKind group_kinds = 2;
   */
  groupKinds: RestoreConfig_GroupKind[];

  /**
   * Optional. This is a [JSONPath]
   * (https://github.com/json-path/JsonPath/blob/master/README.md)
   * expression that matches specific fields of candidate
   * resources and it operates as a filtering parameter (resources that
   * are not matched with this expression will not be candidates for
   * transformation).
   *
   * @generated from field: string json_path = 3;
   */
  jsonPath: string;
};

/**
 * Describes the message google.cloud.gkebackup.v1.RestoreConfig.ResourceFilter.
 * Use `create(RestoreConfig_ResourceFilterSchema)` to create a new message.
 */
export const RestoreConfig_ResourceFilterSchema: GenMessage<RestoreConfig_ResourceFilter> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_v1_restore, 1, 4);

/**
 * A transformation rule to be applied against Kubernetes resources as they
 * are selected for restoration from a Backup. A rule contains both filtering
 * logic (which resources are subject to transform) and transformation logic.
 *
 * @generated from message google.cloud.gkebackup.v1.RestoreConfig.TransformationRule
 */
export type RestoreConfig_TransformationRule = Message<"google.cloud.gkebackup.v1.RestoreConfig.TransformationRule"> & {
  /**
   * Required. A list of transformation rule actions to take against candidate
   * resources. Actions are executed in order defined - this order matters, as
   * they could potentially interfere with each other and the first operation
   * could affect the outcome of the second operation.
   *
   * @generated from field: repeated google.cloud.gkebackup.v1.RestoreConfig.TransformationRuleAction field_actions = 1;
   */
  fieldActions: RestoreConfig_TransformationRuleAction[];

  /**
   * Optional. This field is used to specify a set of fields that should be
   * used to determine which resources in backup should be acted upon by the
   * supplied transformation rule actions, and this will ensure that only
   * specific resources are affected by transformation rule actions.
   *
   * @generated from field: google.cloud.gkebackup.v1.RestoreConfig.ResourceFilter resource_filter = 2;
   */
  resourceFilter?: RestoreConfig_ResourceFilter;

  /**
   * Optional. The description is a user specified string description of the
   * transformation rule.
   *
   * @generated from field: string description = 3;
   */
  description: string;
};

/**
 * Describes the message google.cloud.gkebackup.v1.RestoreConfig.TransformationRule.
 * Use `create(RestoreConfig_TransformationRuleSchema)` to create a new message.
 */
export const RestoreConfig_TransformationRuleSchema: GenMessage<RestoreConfig_TransformationRule> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_v1_restore, 1, 5);

/**
 * Binds resources in the scope to the given VolumeDataRestorePolicy.
 *
 * @generated from message google.cloud.gkebackup.v1.RestoreConfig.VolumeDataRestorePolicyBinding
 */
export type RestoreConfig_VolumeDataRestorePolicyBinding = Message<"google.cloud.gkebackup.v1.RestoreConfig.VolumeDataRestorePolicyBinding"> & {
  /**
   * Required. The VolumeDataRestorePolicy to apply when restoring volumes in
   * scope.
   *
   * @generated from field: google.cloud.gkebackup.v1.RestoreConfig.VolumeDataRestorePolicy policy = 1;
   */
  policy: RestoreConfig_VolumeDataRestorePolicy;

  /**
   * @generated from oneof google.cloud.gkebackup.v1.RestoreConfig.VolumeDataRestorePolicyBinding.scope
   */
  scope: {
    /**
     * The volume type, as determined by the PVC's bound PV,
     * to apply the policy to.
     *
     * @generated from field: google.cloud.gkebackup.v1.VolumeTypeEnum.VolumeType volume_type = 2;
     */
    value: VolumeTypeEnum_VolumeType;
    case: "volumeType";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.gkebackup.v1.RestoreConfig.VolumeDataRestorePolicyBinding.
 * Use `create(RestoreConfig_VolumeDataRestorePolicyBindingSchema)` to create a new message.
 */
export const RestoreConfig_VolumeDataRestorePolicyBindingSchema: GenMessage<RestoreConfig_VolumeDataRestorePolicyBinding> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_v1_restore, 1, 6);

/**
 * Allows customers to specify dependencies between resources
 * that Backup for GKE can use to compute a resasonable restore order.
 *
 * @generated from message google.cloud.gkebackup.v1.RestoreConfig.RestoreOrder
 */
export type RestoreConfig_RestoreOrder = Message<"google.cloud.gkebackup.v1.RestoreConfig.RestoreOrder"> & {
  /**
   * Optional. Contains a list of group kind dependency pairs provided
   * by the customer, that is used by Backup for GKE to
   * generate a group kind restore order.
   *
   * @generated from field: repeated google.cloud.gkebackup.v1.RestoreConfig.RestoreOrder.GroupKindDependency group_kind_dependencies = 1;
   */
  groupKindDependencies: RestoreConfig_RestoreOrder_GroupKindDependency[];
};

/**
 * Describes the message google.cloud.gkebackup.v1.RestoreConfig.RestoreOrder.
 * Use `create(RestoreConfig_RestoreOrderSchema)` to create a new message.
 */
export const RestoreConfig_RestoreOrderSchema: GenMessage<RestoreConfig_RestoreOrder> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_v1_restore, 1, 7);

/**
 * Defines a dependency between two group kinds.
 *
 * @generated from message google.cloud.gkebackup.v1.RestoreConfig.RestoreOrder.GroupKindDependency
 */
export type RestoreConfig_RestoreOrder_GroupKindDependency = Message<"google.cloud.gkebackup.v1.RestoreConfig.RestoreOrder.GroupKindDependency"> & {
  /**
   * Required. The satisfying group kind must be restored first
   * in order to satisfy the dependency.
   *
   * @generated from field: google.cloud.gkebackup.v1.RestoreConfig.GroupKind satisfying = 1;
   */
  satisfying?: RestoreConfig_GroupKind;

  /**
   * Required. The requiring group kind requires that the other
   * group kind be restored first.
   *
   * @generated from field: google.cloud.gkebackup.v1.RestoreConfig.GroupKind requiring = 2;
   */
  requiring?: RestoreConfig_GroupKind;
};

/**
 * Describes the message google.cloud.gkebackup.v1.RestoreConfig.RestoreOrder.GroupKindDependency.
 * Use `create(RestoreConfig_RestoreOrder_GroupKindDependencySchema)` to create a new message.
 */
export const RestoreConfig_RestoreOrder_GroupKindDependencySchema: GenMessage<RestoreConfig_RestoreOrder_GroupKindDependency> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_v1_restore, 1, 7, 0);

/**
 * Defines how volume data should be restored.
 *
 * @generated from enum google.cloud.gkebackup.v1.RestoreConfig.VolumeDataRestorePolicy
 */
export enum RestoreConfig_VolumeDataRestorePolicy {
  /**
   * Unspecified (illegal).
   *
   * @generated from enum value: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED = 0;
   */
  VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED = 0,

  /**
   * For each PVC to be restored, create a new underlying volume and PV
   * from the corresponding VolumeBackup contained within the Backup.
   *
   * @generated from enum value: RESTORE_VOLUME_DATA_FROM_BACKUP = 1;
   */
  RESTORE_VOLUME_DATA_FROM_BACKUP = 1,

  /**
   * For each PVC to be restored, attempt to reuse the original PV contained
   * in the Backup (with its original underlying volume). This option
   * is likely only usable when restoring a workload to its original cluster.
   *
   * @generated from enum value: REUSE_VOLUME_HANDLE_FROM_BACKUP = 2;
   */
  REUSE_VOLUME_HANDLE_FROM_BACKUP = 2,

  /**
   * For each PVC to be restored, create PVC without any particular
   * action to restore data. In this case, the normal Kubernetes provisioning
   * logic would kick in, and this would likely result in either dynamically
   * provisioning blank PVs or binding to statically provisioned PVs.
   *
   * @generated from enum value: NO_VOLUME_DATA_RESTORATION = 3;
   */
  NO_VOLUME_DATA_RESTORATION = 3,
}

/**
 * Describes the enum google.cloud.gkebackup.v1.RestoreConfig.VolumeDataRestorePolicy.
 */
export const RestoreConfig_VolumeDataRestorePolicySchema: GenEnum<RestoreConfig_VolumeDataRestorePolicy> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkebackup_v1_restore, 1, 0);

/**
 * Defines the behavior for handling the situation where cluster-scoped
 * resources being restored already exist in the target cluster.
 *
 * @generated from enum google.cloud.gkebackup.v1.RestoreConfig.ClusterResourceConflictPolicy
 */
export enum RestoreConfig_ClusterResourceConflictPolicy {
  /**
   * Unspecified. Only allowed if no cluster-scoped resources will be
   * restored.
   *
   * @generated from enum value: CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED = 0;
   */
  CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED = 0,

  /**
   * Do not attempt to restore the conflicting resource.
   *
   * @generated from enum value: USE_EXISTING_VERSION = 1;
   */
  USE_EXISTING_VERSION = 1,

  /**
   * Delete the existing version before re-creating it from the Backup.
   * This is a dangerous option which could cause unintentional
   * data loss if used inappropriately. For example, deleting a CRD will
   * cause Kubernetes to delete all CRs of that type.
   *
   * @generated from enum value: USE_BACKUP_VERSION = 2;
   */
  USE_BACKUP_VERSION = 2,
}

/**
 * Describes the enum google.cloud.gkebackup.v1.RestoreConfig.ClusterResourceConflictPolicy.
 */
export const RestoreConfig_ClusterResourceConflictPolicySchema: GenEnum<RestoreConfig_ClusterResourceConflictPolicy> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkebackup_v1_restore, 1, 1);

/**
 * Defines the behavior for handling the situation where sets of namespaced
 * resources being restored already exist in the target cluster.
 *
 * @generated from enum google.cloud.gkebackup.v1.RestoreConfig.NamespacedResourceRestoreMode
 */
export enum RestoreConfig_NamespacedResourceRestoreMode {
  /**
   * Unspecified (invalid).
   *
   * @generated from enum value: NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED = 0;
   */
  NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED = 0,

  /**
   * When conflicting top-level resources (either Namespaces or
   * ProtectedApplications, depending upon the scope) are encountered, this
   * will first trigger a delete of the conflicting resource AND ALL OF ITS
   * REFERENCED RESOURCES (e.g., all resources in the Namespace or all
   * resources referenced by the ProtectedApplication) before restoring the
   * resources from the Backup. This mode should only be used when you are
   * intending to revert some portion of a cluster to an earlier state.
   *
   * @generated from enum value: DELETE_AND_RESTORE = 1;
   */
  DELETE_AND_RESTORE = 1,

  /**
   * If conflicting top-level resources (either Namespaces or
   * ProtectedApplications, depending upon the scope) are encountered at the
   * beginning of a restore process, the Restore will fail.  If a conflict
   * occurs during the restore process itself (e.g., because an out of band
   * process creates conflicting resources), a conflict will be reported.
   *
   * @generated from enum value: FAIL_ON_CONFLICT = 2;
   */
  FAIL_ON_CONFLICT = 2,

  /**
   * This mode merges the backup and the target cluster and skips the
   * conflicting resources. If a single resource to restore exists in the
   * cluster before restoration, the resource will be skipped, otherwise it
   * will be restored.
   *
   * @generated from enum value: MERGE_SKIP_ON_CONFLICT = 3;
   */
  MERGE_SKIP_ON_CONFLICT = 3,

  /**
   * This mode merges the backup and the target cluster and skips the
   * conflicting resources except volume data. If a PVC to restore already
   * exists, this mode will restore/reconnect the volume without overwriting
   * the PVC. It is similar to MERGE_SKIP_ON_CONFLICT except that it will
   * apply the volume data policy for the conflicting PVCs:
   * - RESTORE_VOLUME_DATA_FROM_BACKUP: restore data only and respect the
   *   reclaim policy of the original PV;
   * - REUSE_VOLUME_HANDLE_FROM_BACKUP: reconnect and respect the reclaim
   *   policy of the original PV;
   * - NO_VOLUME_DATA_RESTORATION: new provision and respect the reclaim
   *   policy of the original PV.
   * Note that this mode could cause data loss as the original PV can be
   * retained or deleted depending on its reclaim policy.
   *
   * @generated from enum value: MERGE_REPLACE_VOLUME_ON_CONFLICT = 4;
   */
  MERGE_REPLACE_VOLUME_ON_CONFLICT = 4,

  /**
   * This mode merges the backup and the target cluster and replaces the
   * conflicting resources with the ones in the backup. If a single resource
   * to restore exists in the cluster before restoration, the resource will be
   * replaced with the one from the backup. To replace an existing resource,
   * the first attempt is to update the resource to match the one from the
   * backup; if the update fails, the second attempt is to delete the resource
   * and restore it from the backup.
   * Note that this mode could cause data loss as it replaces the existing
   * resources in the target cluster, and the original PV can be retained or
   * deleted depending on its reclaim policy.
   *
   * @generated from enum value: MERGE_REPLACE_ON_CONFLICT = 5;
   */
  MERGE_REPLACE_ON_CONFLICT = 5,
}

/**
 * Describes the enum google.cloud.gkebackup.v1.RestoreConfig.NamespacedResourceRestoreMode.
 */
export const RestoreConfig_NamespacedResourceRestoreModeSchema: GenEnum<RestoreConfig_NamespacedResourceRestoreMode> = /*@__PURE__*/
  enumDesc(file_google_cloud_gkebackup_v1_restore, 1, 2);

/**
 * Defines a selector to identify a single or a group of resources.
 * Conditions in the selector are optional, but at least one field
 * should be set to a non-empty value. If a condition is not specified,
 * no restrictions will be applied on that dimension.
 * If more than one condition is specified, a resource will be selected
 * if and only if all conditions are met.
 *
 * @generated from message google.cloud.gkebackup.v1.ResourceSelector
 */
export type ResourceSelector = Message<"google.cloud.gkebackup.v1.ResourceSelector"> & {
  /**
   * Optional. Selects resources using their Kubernetes GroupKinds. If
   * specified, only resources of provided GroupKind will be selected.
   *
   * @generated from field: google.cloud.gkebackup.v1.RestoreConfig.GroupKind group_kind = 1;
   */
  groupKind?: RestoreConfig_GroupKind;

  /**
   * Optional. Selects resources using their resource names. If specified,
   * only resources with the provided name will be selected.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Optional. Selects resources using their namespaces. This only applies to
   * namespace scoped resources and cannot be used for selecting
   * cluster scoped resources. If specified, only resources in the provided
   * namespace will be selected. If not specified, the filter will apply to
   * both cluster scoped and namespace scoped resources (e.g. name or label).
   * The [Namespace](https://pkg.go.dev/k8s.io/api/core/v1#Namespace) resource
   * itself will be restored if and only if any resources within the namespace
   * are restored.
   *
   * @generated from field: string namespace = 3;
   */
  namespace: string;

  /**
   * Optional. Selects resources using Kubernetes
   * [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
   * If specified, a resource will be selected if and only if the resource
   * has all of the provided labels and all the label values match.
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message google.cloud.gkebackup.v1.ResourceSelector.
 * Use `create(ResourceSelectorSchema)` to create a new message.
 */
export const ResourceSelectorSchema: GenMessage<ResourceSelector> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_v1_restore, 2);

/**
 * Defines an override to apply a VolumeDataRestorePolicy for scoped resources.
 *
 * @generated from message google.cloud.gkebackup.v1.VolumeDataRestorePolicyOverride
 */
export type VolumeDataRestorePolicyOverride = Message<"google.cloud.gkebackup.v1.VolumeDataRestorePolicyOverride"> & {
  /**
   * Required. The VolumeDataRestorePolicy to apply when restoring volumes in
   * scope.
   *
   * @generated from field: google.cloud.gkebackup.v1.RestoreConfig.VolumeDataRestorePolicy policy = 1;
   */
  policy: RestoreConfig_VolumeDataRestorePolicy;

  /**
   * @generated from oneof google.cloud.gkebackup.v1.VolumeDataRestorePolicyOverride.scope
   */
  scope: {
    /**
     * A list of PVCs to apply the policy override to.
     *
     * @generated from field: google.cloud.gkebackup.v1.NamespacedNames selected_pvcs = 2;
     */
    value: NamespacedNames;
    case: "selectedPvcs";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.gkebackup.v1.VolumeDataRestorePolicyOverride.
 * Use `create(VolumeDataRestorePolicyOverrideSchema)` to create a new message.
 */
export const VolumeDataRestorePolicyOverrideSchema: GenMessage<VolumeDataRestorePolicyOverride> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_v1_restore, 3);

