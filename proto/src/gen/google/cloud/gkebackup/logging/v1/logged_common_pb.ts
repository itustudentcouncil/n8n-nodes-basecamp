// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/gkebackup/logging/v1/logged_common.proto (package google.cloud.gkebackup.logging.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/gkebackup/logging/v1/logged_common.proto.
 */
export const file_google_cloud_gkebackup_logging_v1_logged_common: GenFile = /*@__PURE__*/
  fileDesc("CjVnb29nbGUvY2xvdWQvZ2tlYmFja3VwL2xvZ2dpbmcvdjEvbG9nZ2VkX2NvbW1vbi5wcm90bxIhZ29vZ2xlLmNsb3VkLmdrZWJhY2t1cC5sb2dnaW5nLnYxIiAKCk5hbWVzcGFjZXMSEgoKbmFtZXNwYWNlcxgBIAMoCSIxCg5OYW1lc3BhY2VkTmFtZRIRCgluYW1lc3BhY2UYASABKAkSDAoEbmFtZRgCIAEoCSJeCg9OYW1lc3BhY2VkTmFtZXMSSwoQbmFtZXNwYWNlZF9uYW1lcxgBIAMoCzIxLmdvb2dsZS5jbG91ZC5na2ViYWNrdXAubG9nZ2luZy52MS5OYW1lc3BhY2VkTmFtZSIvCg1FbmNyeXB0aW9uS2V5Eh4KFmdjcF9rbXNfZW5jcnlwdGlvbl9rZXkYASABKAlC6QEKIWdvb2dsZS5jbG91ZC5na2ViYWNrdXAubG9nZ2luZy52MUIRTG9nZ2VkQ29tbW9uUHJvdG9QAVo/Y2xvdWQuZ29vZ2xlLmNvbS9nby9na2ViYWNrdXAvbG9nZ2luZy9hcGl2MS9sb2dnaW5ncGI7bG9nZ2luZ3BiqgIhR29vZ2xlLkNsb3VkLkdrZUJhY2t1cC5Mb2dnaW5nLlYxygIhR29vZ2xlXENsb3VkXEdrZUJhY2t1cFxMb2dnaW5nXFYx6gIlR29vZ2xlOjpDbG91ZDo6R2tlQmFja3VwOjpMb2dnaW5nOjpWMWIGcHJvdG8z");

/**
 * Namespaces, list of namespaces
 *
 * @generated from message google.cloud.gkebackup.logging.v1.Namespaces
 */
export type Namespaces = Message<"google.cloud.gkebackup.logging.v1.Namespaces"> & {
  /**
   * namespaces
   *
   * @generated from field: repeated string namespaces = 1;
   */
  namespaces: string[];
};

/**
 * Describes the message google.cloud.gkebackup.logging.v1.Namespaces.
 * Use `create(NamespacesSchema)` to create a new message.
 */
export const NamespacesSchema: GenMessage<Namespaces> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_logging_v1_logged_common, 0);

/**
 * NamespacedName
 *
 * @generated from message google.cloud.gkebackup.logging.v1.NamespacedName
 */
export type NamespacedName = Message<"google.cloud.gkebackup.logging.v1.NamespacedName"> & {
  /**
   * the namespace of the resource in Kubernetes
   *
   * @generated from field: string namespace = 1;
   */
  namespace: string;

  /**
   * the name of the resource in Kubernetes
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message google.cloud.gkebackup.logging.v1.NamespacedName.
 * Use `create(NamespacedNameSchema)` to create a new message.
 */
export const NamespacedNameSchema: GenMessage<NamespacedName> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_logging_v1_logged_common, 1);

/**
 * NamespacedNames
 *
 * @generated from message google.cloud.gkebackup.logging.v1.NamespacedNames
 */
export type NamespacedNames = Message<"google.cloud.gkebackup.logging.v1.NamespacedNames"> & {
  /**
   * a list of namespaced names in Kubernetes
   *
   * @generated from field: repeated google.cloud.gkebackup.logging.v1.NamespacedName namespaced_names = 1;
   */
  namespacedNames: NamespacedName[];
};

/**
 * Describes the message google.cloud.gkebackup.logging.v1.NamespacedNames.
 * Use `create(NamespacedNamesSchema)` to create a new message.
 */
export const NamespacedNamesSchema: GenMessage<NamespacedNames> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_logging_v1_logged_common, 2);

/**
 * Encryption key.
 * This only contains the key metadata, and no key material.
 *
 * @generated from message google.cloud.gkebackup.logging.v1.EncryptionKey
 */
export type EncryptionKey = Message<"google.cloud.gkebackup.logging.v1.EncryptionKey"> & {
  /**
   * Google KMS encryption key in the format:
   * projects/<project>/locations/<location>/keyRings/<key-ring>/cryptoKeys/<key>
   *
   * @generated from field: string gcp_kms_encryption_key = 1;
   */
  gcpKmsEncryptionKey: string;
};

/**
 * Describes the message google.cloud.gkebackup.logging.v1.EncryptionKey.
 * Use `create(EncryptionKeySchema)` to create a new message.
 */
export const EncryptionKeySchema: GenMessage<EncryptionKey> = /*@__PURE__*/
  messageDesc(file_google_cloud_gkebackup_logging_v1_logged_common, 3);

