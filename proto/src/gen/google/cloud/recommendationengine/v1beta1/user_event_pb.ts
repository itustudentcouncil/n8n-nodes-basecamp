// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/recommendationengine/v1beta1/user_event.proto (package google.cloud.recommendationengine.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { CatalogItem_CategoryHierarchy, ProductCatalogItem_StockState } from "./catalog_pb";
import { file_google_cloud_recommendationengine_v1beta1_catalog } from "./catalog_pb";
import type { FeatureMap } from "./common_pb";
import { file_google_cloud_recommendationengine_v1beta1_common } from "./common_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/recommendationengine/v1beta1/user_event.proto.
 */
export const file_google_cloud_recommendationengine_v1beta1_user_event: GenFile = /*@__PURE__*/
  fileDesc("Cjpnb29nbGUvY2xvdWQvcmVjb21tZW5kYXRpb25lbmdpbmUvdjFiZXRhMS91c2VyX2V2ZW50LnByb3RvEilnb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMSKSBAoJVXNlckV2ZW50EhcKCmV2ZW50X3R5cGUYASABKAlCA+BBAhJLCgl1c2VyX2luZm8YAiABKAsyMy5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5Vc2VySW5mb0ID4EECElEKDGV2ZW50X2RldGFpbBgDIAEoCzI2Lmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExLkV2ZW50RGV0YWlsQgPgQQESYAoUcHJvZHVjdF9ldmVudF9kZXRhaWwYBCABKAsyPS5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5Qcm9kdWN0RXZlbnREZXRhaWxCA+BBARIzCgpldmVudF90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEBElsKDGV2ZW50X3NvdXJjZRgGIAEoDjJALmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExLlVzZXJFdmVudC5FdmVudFNvdXJjZUID4EEBIlgKC0V2ZW50U291cmNlEhwKGEVWRU5UX1NPVVJDRV9VTlNQRUNJRklFRBAAEgoKBkFVVE9NTBABEg0KCUVDT01NRVJDRRACEhAKDEJBVENIX1VQTE9BRBADIo0BCghVc2VySW5mbxIXCgp2aXNpdG9yX2lkGAEgASgJQgPgQQISFAoHdXNlcl9pZBgCIAEoCUID4EEBEhcKCmlwX2FkZHJlc3MYAyABKAlCA+BBARIXCgp1c2VyX2FnZW50GAQgASgJQgPgQQESIAoTZGlyZWN0X3VzZXJfcmVxdWVzdBgFIAEoCEID4EEBIusBCgtFdmVudERldGFpbBIQCgN1cmkYASABKAlCA+BBARIZCgxyZWZlcnJlcl91cmkYBiABKAlCA+BBARIZCgxwYWdlX3ZpZXdfaWQYAiABKAlCA+BBARIbCg5leHBlcmltZW50X2lkcxgDIAMoCUID4EEBEiEKFHJlY29tbWVuZGF0aW9uX3Rva2VuGAQgASgJQgPgQQESVAoQZXZlbnRfYXR0cmlidXRlcxgFIAEoCzI1Lmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExLkZlYXR1cmVNYXBCA+BBASLqAgoSUHJvZHVjdEV2ZW50RGV0YWlsEhQKDHNlYXJjaF9xdWVyeRgBIAEoCRJhCg9wYWdlX2NhdGVnb3JpZXMYAiADKAsySC5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5DYXRhbG9nSXRlbS5DYXRlZ29yeUhpZXJhcmNoeRJRCg9wcm9kdWN0X2RldGFpbHMYAyADKAsyOC5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5Qcm9kdWN0RGV0YWlsEg8KB2xpc3RfaWQYBCABKAkSFAoHY2FydF9pZBgFIAEoCUID4EEBEmEKFHB1cmNoYXNlX3RyYW5zYWN0aW9uGAYgASgLMj4uZ29vZ2xlLmNsb3VkLnJlY29tbWVuZGF0aW9uZW5naW5lLnYxYmV0YTEuUHVyY2hhc2VUcmFuc2FjdGlvbkID4EEBIvICChNQdXJjaGFzZVRyYW5zYWN0aW9uEg8KAmlkGAEgASgJQgPgQQESFAoHcmV2ZW51ZRgCIAEoAkID4EECEl0KBXRheGVzGAMgAygLMkkuZ29vZ2xlLmNsb3VkLnJlY29tbWVuZGF0aW9uZW5naW5lLnYxYmV0YTEuUHVyY2hhc2VUcmFuc2FjdGlvbi5UYXhlc0VudHJ5QgPgQQESXQoFY29zdHMYBCADKAsySS5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5QdXJjaGFzZVRyYW5zYWN0aW9uLkNvc3RzRW50cnlCA+BBARIaCg1jdXJyZW5jeV9jb2RlGAYgASgJQgPgQQIaLAoKVGF4ZXNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAI6AjgBGiwKCkNvc3RzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgCOgI4ASLmAgoNUHJvZHVjdERldGFpbBIPCgJpZBgBIAEoCUID4EECEhoKDWN1cnJlbmN5X2NvZGUYAiABKAlCA+BBARIbCg5vcmlnaW5hbF9wcmljZRgDIAEoAkID4EEBEhoKDWRpc3BsYXlfcHJpY2UYBCABKAJCA+BBARJiCgtzdG9ja19zdGF0ZRgFIAEoDjJILmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExLlByb2R1Y3RDYXRhbG9nSXRlbS5TdG9ja1N0YXRlQgPgQQESFQoIcXVhbnRpdHkYBiABKAVCA+BBARIfChJhdmFpbGFibGVfcXVhbnRpdHkYByABKAVCA+BBARJTCg9pdGVtX2F0dHJpYnV0ZXMYCCABKAsyNS5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5GZWF0dXJlTWFwQgPgQQFCowIKLWNvbS5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMVABWmFjbG91ZC5nb29nbGUuY29tL2dvL3JlY29tbWVuZGF0aW9uZW5naW5lL2FwaXYxYmV0YTEvcmVjb21tZW5kYXRpb25lbmdpbmVwYjtyZWNvbW1lbmRhdGlvbmVuZ2luZXBiogIFUkVDQUmqAilHb29nbGUuQ2xvdWQuUmVjb21tZW5kYXRpb25FbmdpbmUuVjFCZXRhMcoCKUdvb2dsZVxDbG91ZFxSZWNvbW1lbmRhdGlvbkVuZ2luZVxWMWJldGEx6gIsR29vZ2xlOjpDbG91ZDo6UmVjb21tZW5kYXRpb25FbmdpbmU6OlYxYmV0YTFiBnByb3RvMw", [file_google_api_field_behavior, file_google_cloud_recommendationengine_v1beta1_catalog, file_google_cloud_recommendationengine_v1beta1_common, file_google_protobuf_timestamp]);

/**
 * UserEvent captures all metadata information recommendation engine needs to
 * know about how end users interact with customers' website.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.UserEvent
 */
export type UserEvent = Message<"google.cloud.recommendationengine.v1beta1.UserEvent"> & {
  /**
   * Required. User event type. Allowed values are:
   *
   * * `add-to-cart` Products being added to cart.
   * * `add-to-list` Items being added to a list (shopping list, favorites
   *   etc).
   * * `category-page-view` Special pages such as sale or promotion pages
   *   viewed.
   * * `checkout-start` User starting a checkout process.
   * * `detail-page-view` Products detail page viewed.
   * * `home-page-view` Homepage viewed.
   * * `page-visit` Generic page visits not included in the event types above.
   * * `purchase-complete` User finishing a purchase.
   * * `refund` Purchased items being refunded or returned.
   * * `remove-from-cart` Products being removed from cart.
   * * `remove-from-list` Items being removed from a list.
   * * `search` Product search.
   * * `shopping-cart-page-view` User viewing a shopping cart.
   * * `impression` List of items displayed. Used by Google Tag Manager.
   *
   * @generated from field: string event_type = 1;
   */
  eventType: string;

  /**
   * Required. User information.
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.UserInfo user_info = 2;
   */
  userInfo?: UserInfo;

  /**
   * Optional. User event detailed information common across different
   * recommendation types.
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.EventDetail event_detail = 3;
   */
  eventDetail?: EventDetail;

  /**
   * Optional. Retail product specific user event metadata.
   *
   * This field is required for the following event types:
   *
   * * `add-to-cart`
   * * `add-to-list`
   * * `category-page-view`
   * * `checkout-start`
   * * `detail-page-view`
   * * `purchase-complete`
   * * `refund`
   * * `remove-from-cart`
   * * `remove-from-list`
   * * `search`
   *
   * This field is optional for the following event types:
   *
   * * `page-visit`
   * * `shopping-cart-page-view` - note that 'product_event_detail' should be
   *   set for this unless the shopping cart is empty.
   *
   * This field is not allowed for the following event types:
   *
   * * `home-page-view`
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.ProductEventDetail product_event_detail = 4;
   */
  productEventDetail?: ProductEventDetail;

  /**
   * Optional. Only required for ImportUserEvents method. Timestamp of user
   * event created.
   *
   * @generated from field: google.protobuf.Timestamp event_time = 5;
   */
  eventTime?: Timestamp;

  /**
   * Optional. This field should *not* be set when using JavaScript pixel
   * or the Recommendations AI Tag. Defaults to `EVENT_SOURCE_UNSPECIFIED`.
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.UserEvent.EventSource event_source = 6;
   */
  eventSource: UserEvent_EventSource;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.UserEvent.
 * Use `create(UserEventSchema)` to create a new message.
 */
export const UserEventSchema: GenMessage<UserEvent> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_user_event, 0);

/**
 * User event source.
 *
 * @generated from enum google.cloud.recommendationengine.v1beta1.UserEvent.EventSource
 */
export enum UserEvent_EventSource {
  /**
   * Unspecified event source.
   *
   * @generated from enum value: EVENT_SOURCE_UNSPECIFIED = 0;
   */
  EVENT_SOURCE_UNSPECIFIED = 0,

  /**
   * The event is ingested via a javascript pixel or Recommendations AI Tag
   * through automl datalayer or JS Macros.
   *
   * @generated from enum value: AUTOML = 1;
   */
  AUTOML = 1,

  /**
   * The event is ingested via Recommendations AI Tag through Enhanced
   * Ecommerce datalayer.
   *
   * @generated from enum value: ECOMMERCE = 2;
   */
  ECOMMERCE = 2,

  /**
   * The event is ingested via Import user events API.
   *
   * @generated from enum value: BATCH_UPLOAD = 3;
   */
  BATCH_UPLOAD = 3,
}

/**
 * Describes the enum google.cloud.recommendationengine.v1beta1.UserEvent.EventSource.
 */
export const UserEvent_EventSourceSchema: GenEnum<UserEvent_EventSource> = /*@__PURE__*/
  enumDesc(file_google_cloud_recommendationengine_v1beta1_user_event, 0, 0);

/**
 * Information of end users.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.UserInfo
 */
export type UserInfo = Message<"google.cloud.recommendationengine.v1beta1.UserInfo"> & {
  /**
   * Required. A unique identifier for tracking visitors with a length limit of
   * 128 bytes.
   *
   * For example, this could be implemented with a http cookie, which should be
   * able to uniquely identify a visitor on a single device. This unique
   * identifier should not change if the visitor log in/out of the website.
   * Maximum length 128 bytes. Cannot be empty.
   *
   * @generated from field: string visitor_id = 1;
   */
  visitorId: string;

  /**
   * Optional. Unique identifier for logged-in user with a length limit of 128
   * bytes. Required only for logged-in users.
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or
   * IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be
   * set when using the javascript pixel or if `direct_user_request` is set.
   * Used to extract location information for personalization.
   *
   * @generated from field: string ip_address = 3;
   */
  ipAddress: string;

  /**
   * Optional. User agent as included in the HTTP header. UTF-8 encoded string
   * with a length limit of 1 KiB.
   *
   * This should *not* be set when using the JavaScript pixel or if
   * `directUserRequest` is set.
   *
   * @generated from field: string user_agent = 4;
   */
  userAgent: string;

  /**
   * Optional. Indicates if the request is made directly from the end user
   * in which case the user_agent and ip_address fields can be populated
   * from the HTTP request. This should *not* be set when using the javascript
   * pixel. This flag should be set only if the API request is made directly
   * from the end user such as a mobile app (and not if a gateway or a server is
   * processing and pushing the user events).
   *
   * @generated from field: bool direct_user_request = 5;
   */
  directUserRequest: boolean;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.UserInfo.
 * Use `create(UserInfoSchema)` to create a new message.
 */
export const UserInfoSchema: GenMessage<UserInfo> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_user_event, 1);

/**
 * User event details shared by all recommendation types.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.EventDetail
 */
export type EventDetail = Message<"google.cloud.recommendationengine.v1beta1.EventDetail"> & {
  /**
   * Optional. Complete url (window.location.href) of the user's current page.
   * When using the JavaScript pixel, this value is filled in automatically.
   * Maximum length 5KB.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * Optional. The referrer url of the current page. When using
   * the JavaScript pixel, this value is filled in automatically.
   *
   * @generated from field: string referrer_uri = 6;
   */
  referrerUri: string;

  /**
   * Optional. A unique id of a web page view.
   * This should be kept the same for all user events triggered from the same
   * pageview. For example, an item detail page view could trigger multiple
   * events as the user is browsing the page.
   * The `pageViewId` property should be kept the same for all these events so
   * that they can be grouped together properly. This `pageViewId` will be
   * automatically generated if using the JavaScript pixel.
   *
   * @generated from field: string page_view_id = 2;
   */
  pageViewId: string;

  /**
   * Optional. A list of identifiers for the independent experiment groups
   * this user event belongs to. This is used to distinguish between user events
   * associated with different experiment setups (e.g. using Recommendation
   * Engine system, using different recommendation models).
   *
   * @generated from field: repeated string experiment_ids = 3;
   */
  experimentIds: string[];

  /**
   * Optional. Recommendation token included in the recommendation prediction
   * response.
   *
   * This field enables accurate attribution of recommendation model
   * performance.
   *
   * This token enables us to accurately attribute page view or purchase back to
   * the event and the particular predict response containing this
   * clicked/purchased item. If user clicks on product K in the recommendation
   * results, pass the `PredictResponse.recommendationToken` property as a url
   * parameter to product K's page. When recording events on product K's page,
   * log the PredictResponse.recommendation_token to this field.
   *
   * Optional, but highly encouraged for user events that are the result of a
   * recommendation prediction query.
   *
   * @generated from field: string recommendation_token = 4;
   */
  recommendationToken: string;

  /**
   * Optional. Extra user event features to include in the recommendation
   * model.
   *
   * For product recommendation, an example of extra user information is
   * traffic_channel, i.e. how user arrives at the site. Users can arrive
   * at the site by coming to the site directly, or coming through Google
   * search, and etc.
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.FeatureMap event_attributes = 5;
   */
  eventAttributes?: FeatureMap;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.EventDetail.
 * Use `create(EventDetailSchema)` to create a new message.
 */
export const EventDetailSchema: GenMessage<EventDetail> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_user_event, 2);

/**
 * ProductEventDetail captures user event information specific to retail
 * products.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.ProductEventDetail
 */
export type ProductEventDetail = Message<"google.cloud.recommendationengine.v1beta1.ProductEventDetail"> & {
  /**
   * Required for `search` events. Other event types should not set this field.
   * The user's search query as UTF-8 encoded text with a length limit of 5 KiB.
   *
   * @generated from field: string search_query = 1;
   */
  searchQuery: string;

  /**
   * Required for `category-page-view` events. Other event types should not set
   * this field.
   * The categories associated with a category page.
   * Category pages include special pages such as sales or promotions. For
   * instance, a special sale page may have the category hierarchy:
   * categories : ["Sales", "2017 Black Friday Deals"].
   *
   * @generated from field: repeated google.cloud.recommendationengine.v1beta1.CatalogItem.CategoryHierarchy page_categories = 2;
   */
  pageCategories: CatalogItem_CategoryHierarchy[];

  /**
   * The main product details related to the event.
   *
   * This field is required for the following event types:
   *
   * * `add-to-cart`
   * * `add-to-list`
   * * `checkout-start`
   * * `detail-page-view`
   * * `purchase-complete`
   * * `refund`
   * * `remove-from-cart`
   * * `remove-from-list`
   *
   * This field is optional for the following event types:
   *
   * * `page-visit`
   * * `shopping-cart-page-view` - note that 'product_details' should be set for
   *   this unless the shopping cart is empty.
   *
   * This field is not allowed for the following event types:
   *
   * * `category-page-view`
   * * `home-page-view`
   * * `search`
   *
   * @generated from field: repeated google.cloud.recommendationengine.v1beta1.ProductDetail product_details = 3;
   */
  productDetails: ProductDetail[];

  /**
   * Required for `add-to-list` and `remove-from-list` events. The id or name of
   * the list that the item is being added to or removed from. Other event types
   * should not set this field.
   *
   * @generated from field: string list_id = 4;
   */
  listId: string;

  /**
   * Optional. The id or name of the associated shopping cart. This id is used
   * to associate multiple items added or present in the cart before purchase.
   *
   * This can only be set for `add-to-cart`, `remove-from-cart`,
   * `checkout-start`, `purchase-complete`, or `shopping-cart-page-view` events.
   *
   * @generated from field: string cart_id = 5;
   */
  cartId: string;

  /**
   * Optional. A transaction represents the entire purchase transaction.
   * Required for `purchase-complete` events. Optional for `checkout-start`
   * events. Other event types should not set this field.
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.PurchaseTransaction purchase_transaction = 6;
   */
  purchaseTransaction?: PurchaseTransaction;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.ProductEventDetail.
 * Use `create(ProductEventDetailSchema)` to create a new message.
 */
export const ProductEventDetailSchema: GenMessage<ProductEventDetail> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_user_event, 3);

/**
 * A transaction represents the entire purchase transaction.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.PurchaseTransaction
 */
export type PurchaseTransaction = Message<"google.cloud.recommendationengine.v1beta1.PurchaseTransaction"> & {
  /**
   * Optional. The transaction ID with a length limit of 128 bytes.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required. Total revenue or grand total associated with the transaction.
   * This value include shipping, tax, or other adjustments to total revenue
   * that you want to include as part of your revenue calculations. This field
   * is not required if the event type is `refund`.
   *
   * @generated from field: float revenue = 2;
   */
  revenue: number;

  /**
   * Optional. All the taxes associated with the transaction.
   *
   * @generated from field: map<string, float> taxes = 3;
   */
  taxes: { [key: string]: number };

  /**
   * Optional. All the costs associated with the product. These can be
   * manufacturing costs, shipping expenses not borne by the end user, or any
   * other costs.
   *
   * Total product cost such that
   *   profit = revenue - (sum(taxes) + sum(costs))
   * If product_cost is not set, then
   *   profit = revenue - tax - shipping - sum(CatalogItem.costs).
   *
   * If CatalogItem.cost is not specified for one of the items, CatalogItem.cost
   * based profit *cannot* be calculated for this Transaction.
   *
   * @generated from field: map<string, float> costs = 4;
   */
  costs: { [key: string]: number };

  /**
   * Required. Currency code. Use three-character ISO-4217 code. This field
   * is not required if the event type is `refund`.
   *
   * @generated from field: string currency_code = 6;
   */
  currencyCode: string;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.PurchaseTransaction.
 * Use `create(PurchaseTransactionSchema)` to create a new message.
 */
export const PurchaseTransactionSchema: GenMessage<PurchaseTransaction> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_user_event, 4);

/**
 * Detailed product information associated with a user event.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.ProductDetail
 */
export type ProductDetail = Message<"google.cloud.recommendationengine.v1beta1.ProductDetail"> & {
  /**
   * Required. Catalog item ID. UTF-8 encoded string with a length limit of 128
   * characters.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional. Currency code for price/costs. Use three-character ISO-4217
   * code. Required only if originalPrice or displayPrice is set.
   *
   * @generated from field: string currency_code = 2;
   */
  currencyCode: string;

  /**
   * Optional. Original price of the product. If provided, this will override
   * the original price in Catalog for this product.
   *
   * @generated from field: float original_price = 3;
   */
  originalPrice: number;

  /**
   * Optional. Display price of the product (e.g. discounted price). If
   * provided, this will override the display price in Catalog for this product.
   *
   * @generated from field: float display_price = 4;
   */
  displayPrice: number;

  /**
   * Optional. Item stock state. If provided, this overrides the stock state
   * in Catalog for items in this event.
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.ProductCatalogItem.StockState stock_state = 5;
   */
  stockState: ProductCatalogItem_StockState;

  /**
   * Optional. Quantity of the product associated with the user event. For
   * example, this field will be 2 if two products are added to the shopping
   * cart for `add-to-cart` event. Required for `add-to-cart`, `add-to-list`,
   * `remove-from-cart`, `checkout-start`, `purchase-complete`, `refund` event
   * types.
   *
   * @generated from field: int32 quantity = 6;
   */
  quantity: number;

  /**
   * Optional. Quantity of the products in stock when a user event happens.
   * Optional. If provided, this overrides the available quantity in Catalog for
   * this event. and can only be set if `stock_status` is set to `IN_STOCK`.
   *
   * Note that if an item is out of stock, you must set the `stock_state` field
   * to be `OUT_OF_STOCK`. Leaving this field unspecified / as zero is not
   * sufficient to mark the item out of stock.
   *
   * @generated from field: int32 available_quantity = 7;
   */
  availableQuantity: number;

  /**
   * Optional. Extra features associated with a product in the user event.
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.FeatureMap item_attributes = 8;
   */
  itemAttributes?: FeatureMap;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.ProductDetail.
 * Use `create(ProductDetailSchema)` to create a new message.
 */
export const ProductDetailSchema: GenMessage<ProductDetail> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_user_event, 5);

