// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/recommendationengine/v1beta1/user_event_service.proto (package google.cloud.recommendationengine.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { HttpBodySchema } from "../../../api/httpbody_pb";
import { file_google_api_httpbody } from "../../../api/httpbody_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { ImportUserEventsRequestSchema } from "./import_pb";
import { file_google_cloud_recommendationengine_v1beta1_import } from "./import_pb";
import type { UserEvent, UserEventSchema } from "./user_event_pb";
import { file_google_cloud_recommendationengine_v1beta1_user_event } from "./user_event_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_api_client } from "../../../api/client_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/recommendationengine/v1beta1/user_event_service.proto.
 */
export const file_google_cloud_recommendationengine_v1beta1_user_event_service: GenFile = /*@__PURE__*/
  fileDesc("CkJnb29nbGUvY2xvdWQvcmVjb21tZW5kYXRpb25lbmdpbmUvdjFiZXRhMS91c2VyX2V2ZW50X3NlcnZpY2UucHJvdG8SKWdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExIokBChZQdXJnZVVzZXJFdmVudHNSZXF1ZXN0EkYKBnBhcmVudBgBIAEoCUI24EEC+kEwCi5yZWNvbW1lbmRhdGlvbmVuZ2luZS5nb29nbGVhcGlzLmNvbS9FdmVudFN0b3JlEhMKBmZpbHRlchgCIAEoCUID4EECEhIKBWZvcmNlGAMgASgIQgPgQQEiYgoXUHVyZ2VVc2VyRXZlbnRzTWV0YWRhdGESFgoOb3BlcmF0aW9uX25hbWUYASABKAkSLwoLY3JlYXRlX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIogBChdQdXJnZVVzZXJFdmVudHNSZXNwb25zZRIbChNwdXJnZWRfZXZlbnRzX2NvdW50GAEgASgDElAKEnVzZXJfZXZlbnRzX3NhbXBsZRgCIAMoCzI0Lmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExLlVzZXJFdmVudCKuAQoVV3JpdGVVc2VyRXZlbnRSZXF1ZXN0EkYKBnBhcmVudBgBIAEoCUI24EEC+kEwCi5yZWNvbW1lbmRhdGlvbmVuZ2luZS5nb29nbGVhcGlzLmNvbS9FdmVudFN0b3JlEk0KCnVzZXJfZXZlbnQYAiABKAsyNC5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5Vc2VyRXZlbnRCA+BBAiKeAQoXQ29sbGVjdFVzZXJFdmVudFJlcXVlc3QSRgoGcGFyZW50GAEgASgJQjbgQQL6QTAKLnJlY29tbWVuZGF0aW9uZW5naW5lLmdvb2dsZWFwaXMuY29tL0V2ZW50U3RvcmUSFwoKdXNlcl9ldmVudBgCIAEoCUID4EECEhAKA3VyaRgDIAEoCUID4EEBEhAKA2V0cxgEIAEoA0ID4EEBIqUBChVMaXN0VXNlckV2ZW50c1JlcXVlc3QSRgoGcGFyZW50GAEgASgJQjbgQQL6QTAKLnJlY29tbWVuZGF0aW9uZW5naW5lLmdvb2dsZWFwaXMuY29tL0V2ZW50U3RvcmUSFgoJcGFnZV9zaXplGAIgASgFQgPgQQESFwoKcGFnZV90b2tlbhgDIAEoCUID4EEBEhMKBmZpbHRlchgEIAEoCUID4EEBInwKFkxpc3RVc2VyRXZlbnRzUmVzcG9uc2USSQoLdXNlcl9ldmVudHMYASADKAsyNC5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5Vc2VyRXZlbnQSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJMtgMChBVc2VyRXZlbnRTZXJ2aWNlEoQCCg5Xcml0ZVVzZXJFdmVudBJALmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExLldyaXRlVXNlckV2ZW50UmVxdWVzdBo0Lmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExLlVzZXJFdmVudCJ62kERcGFyZW50LHVzZXJfZXZlbnSC0+STAmA6CnVzZXJfZXZlbnQiUi92MWJldGExL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jYXRhbG9ncy8qL2V2ZW50U3RvcmVzLyp9L3VzZXJFdmVudHM6d3JpdGUS5gEKEENvbGxlY3RVc2VyRXZlbnQSQi5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5Db2xsZWN0VXNlckV2ZW50UmVxdWVzdBoULmdvb2dsZS5hcGkuSHR0cEJvZHkieNpBGXBhcmVudCx1c2VyX2V2ZW50LHVyaSxldHOC0+STAlYSVC92MWJldGExL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jYXRhbG9ncy8qL2V2ZW50U3RvcmVzLyp9L3VzZXJFdmVudHM6Y29sbGVjdBL7AQoOTGlzdFVzZXJFdmVudHMSQC5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5MaXN0VXNlckV2ZW50c1JlcXVlc3QaQS5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5MaXN0VXNlckV2ZW50c1Jlc3BvbnNlImTaQQ1wYXJlbnQsZmlsdGVygtPkkwJOEkwvdjFiZXRhMS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovY2F0YWxvZ3MvKi9ldmVudFN0b3Jlcy8qfS91c2VyRXZlbnRzEvMCCg9QdXJnZVVzZXJFdmVudHMSQS5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5QdXJnZVVzZXJFdmVudHNSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiL9AcpBhgEKQWdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExLlB1cmdlVXNlckV2ZW50c1Jlc3BvbnNlEkFnb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5QdXJnZVVzZXJFdmVudHNNZXRhZGF0YdpBE3BhcmVudCxmaWx0ZXIsZm9yY2WC0+STAlc6ASoiUi92MWJldGExL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jYXRhbG9ncy8qL2V2ZW50U3RvcmVzLyp9L3VzZXJFdmVudHM6cHVyZ2UShgMKEEltcG9ydFVzZXJFdmVudHMSQi5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5JbXBvcnRVc2VyRXZlbnRzUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24ijgLKQX4KQmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExLkltcG9ydFVzZXJFdmVudHNSZXNwb25zZRI4Z29vZ2xlLmNsb3VkLnJlY29tbWVuZGF0aW9uZW5naW5lLnYxYmV0YTEuSW1wb3J0TWV0YWRhdGHaQSxwYXJlbnQscmVxdWVzdF9pZCxpbnB1dF9jb25maWcsZXJyb3JzX2NvbmZpZ4LT5JMCWDoBKiJTL3YxYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2NhdGFsb2dzLyovZXZlbnRTdG9yZXMvKn0vdXNlckV2ZW50czppbXBvcnQaV8pBI3JlY29tbWVuZGF0aW9uZW5naW5lLmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybUKjAgotY29tLmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExUAFaYWNsb3VkLmdvb2dsZS5jb20vZ28vcmVjb21tZW5kYXRpb25lbmdpbmUvYXBpdjFiZXRhMS9yZWNvbW1lbmRhdGlvbmVuZ2luZXBiO3JlY29tbWVuZGF0aW9uZW5naW5lcGKiAgVSRUNBSaoCKUdvb2dsZS5DbG91ZC5SZWNvbW1lbmRhdGlvbkVuZ2luZS5WMUJldGExygIpR29vZ2xlXENsb3VkXFJlY29tbWVuZGF0aW9uRW5naW5lXFYxYmV0YTHqAixHb29nbGU6OkNsb3VkOjpSZWNvbW1lbmRhdGlvbkVuZ2luZTo6VjFiZXRhMWIGcHJvdG8z", [file_google_api_annotations, file_google_api_field_behavior, file_google_api_httpbody, file_google_api_resource, file_google_cloud_recommendationengine_v1beta1_import, file_google_cloud_recommendationengine_v1beta1_user_event, file_google_longrunning_operations, file_google_protobuf_timestamp, file_google_api_client]);

/**
 * Request message for PurgeUserEvents method.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.PurgeUserEventsRequest
 */
export type PurgeUserEventsRequest = Message<"google.cloud.recommendationengine.v1beta1.PurgeUserEventsRequest"> & {
  /**
   * Required. The resource name of the event_store under which the events are
   * created. The format is
   * `projects/${projectId}/locations/global/catalogs/${catalogId}/eventStores/${eventStoreId}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The filter string to specify the events to be deleted. Empty
   * string filter is not allowed. This filter can also be used with
   * ListUserEvents API to list events that will be deleted. The eligible fields
   * for filtering are:
   * * eventType - UserEvent.eventType field of type string.
   * * eventTime - in ISO 8601 "zulu" format.
   * * visitorId - field of type string. Specifying this will delete all events
   * associated with a visitor.
   * * userId - field of type string. Specifying this will delete all events
   * associated with a user.
   * Example 1: Deleting all events in a time range.
   * `eventTime > "2012-04-23T18:25:43.511Z" eventTime <
   * "2012-04-23T18:30:43.511Z"`
   * Example 2: Deleting specific eventType in time range.
   * `eventTime > "2012-04-23T18:25:43.511Z" eventType = "detail-page-view"`
   * Example 3: Deleting all events for a specific visitor
   * `visitorId = visitor1024`
   * The filtering fields are assumed to have an implicit AND.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Optional. The default value is false. Override this flag to true to
   * actually perform the purge. If the field is not set to true, a sampling of
   * events to be deleted will be returned.
   *
   * @generated from field: bool force = 3;
   */
  force: boolean;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.PurgeUserEventsRequest.
 * Use `create(PurgeUserEventsRequestSchema)` to create a new message.
 */
export const PurgeUserEventsRequestSchema: GenMessage<PurgeUserEventsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_user_event_service, 0);

/**
 * Metadata related to the progress of the PurgeUserEvents operation.
 * This will be returned by the google.longrunning.Operation.metadata field.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.PurgeUserEventsMetadata
 */
export type PurgeUserEventsMetadata = Message<"google.cloud.recommendationengine.v1beta1.PurgeUserEventsMetadata"> & {
  /**
   * The ID of the request / operation.
   *
   * @generated from field: string operation_name = 1;
   */
  operationName: string;

  /**
   * Operation create time.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.PurgeUserEventsMetadata.
 * Use `create(PurgeUserEventsMetadataSchema)` to create a new message.
 */
export const PurgeUserEventsMetadataSchema: GenMessage<PurgeUserEventsMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_user_event_service, 1);

/**
 * Response of the PurgeUserEventsRequest. If the long running operation is
 * successfully done, then this message is returned by the
 * google.longrunning.Operations.response field.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.PurgeUserEventsResponse
 */
export type PurgeUserEventsResponse = Message<"google.cloud.recommendationengine.v1beta1.PurgeUserEventsResponse"> & {
  /**
   * The total count of events purged as a result of the operation.
   *
   * @generated from field: int64 purged_events_count = 1;
   */
  purgedEventsCount: bigint;

  /**
   * A sampling of events deleted (or will be deleted) depending on the `force`
   * property in the request. Max of 500 items will be returned.
   *
   * @generated from field: repeated google.cloud.recommendationengine.v1beta1.UserEvent user_events_sample = 2;
   */
  userEventsSample: UserEvent[];
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.PurgeUserEventsResponse.
 * Use `create(PurgeUserEventsResponseSchema)` to create a new message.
 */
export const PurgeUserEventsResponseSchema: GenMessage<PurgeUserEventsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_user_event_service, 2);

/**
 * Request message for WriteUserEvent method.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.WriteUserEventRequest
 */
export type WriteUserEventRequest = Message<"google.cloud.recommendationengine.v1beta1.WriteUserEventRequest"> & {
  /**
   * Required. The parent eventStore resource name, such as
   * `projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. User event to write.
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.UserEvent user_event = 2;
   */
  userEvent?: UserEvent;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.WriteUserEventRequest.
 * Use `create(WriteUserEventRequestSchema)` to create a new message.
 */
export const WriteUserEventRequestSchema: GenMessage<WriteUserEventRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_user_event_service, 3);

/**
 * Request message for CollectUserEvent method.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.CollectUserEventRequest
 */
export type CollectUserEventRequest = Message<"google.cloud.recommendationengine.v1beta1.CollectUserEventRequest"> & {
  /**
   * Required. The parent eventStore name, such as
   * `projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. URL encoded UserEvent proto.
   *
   * @generated from field: string user_event = 2;
   */
  userEvent: string;

  /**
   * Optional. The url including cgi-parameters but excluding the hash fragment.
   * The URL must be truncated to 1.5K bytes to conservatively be under the 2K
   * bytes. This is often more useful than the referer url, because many
   * browsers only send the domain for 3rd party requests.
   *
   * @generated from field: string uri = 3;
   */
  uri: string;

  /**
   * Optional. The event timestamp in milliseconds. This prevents browser
   * caching of otherwise identical get requests. The name is abbreviated to
   * reduce the payload bytes.
   *
   * @generated from field: int64 ets = 4;
   */
  ets: bigint;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.CollectUserEventRequest.
 * Use `create(CollectUserEventRequestSchema)` to create a new message.
 */
export const CollectUserEventRequestSchema: GenMessage<CollectUserEventRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_user_event_service, 4);

/**
 * Request message for ListUserEvents method.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.ListUserEventsRequest
 */
export type ListUserEventsRequest = Message<"google.cloud.recommendationengine.v1beta1.ListUserEventsRequest"> & {
  /**
   * Required. The parent eventStore resource name, such as
   * `projects/*\/locations/*\/catalogs/default_catalog/eventStores/default_event_store`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Maximum number of results to return per page. If zero, the
   * service will choose a reasonable default.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. The previous ListUserEventsResponse.next_page_token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Filtering expression to specify restrictions over
   * returned events. This is a sequence of terms, where each term applies some
   * kind of a restriction to the returned user events. Use this expression to
   * restrict results to a specific time range, or filter events by eventType.
   *    eg: eventTime > "2012-04-23T18:25:43.511Z" eventsMissingCatalogItems
   *    eventTime<"2012-04-23T18:25:43.511Z" eventType=search
   *
   *   We expect only 3 types of fields:
   *
   *    * eventTime: this can be specified a maximum of 2 times, once with a
   *      less than operator and once with a greater than operator. The
   *      eventTime restrict should result in one contiguous valid eventTime
   *      range.
   *
   *    * eventType: only 1 eventType restriction can be specified.
   *
   *    * eventsMissingCatalogItems: specififying this will restrict results
   *      to events for which catalog items were not found in the catalog. The
   *      default behavior is to return only those events for which catalog
   *      items were found.
   *
   *   Some examples of valid filters expressions:
   *
   *   * Example 1: eventTime > "2012-04-23T18:25:43.511Z"
   *             eventTime < "2012-04-23T18:30:43.511Z"
   *   * Example 2: eventTime > "2012-04-23T18:25:43.511Z"
   *             eventType = detail-page-view
   *   * Example 3: eventsMissingCatalogItems
   *             eventType = search eventTime < "2018-04-23T18:30:43.511Z"
   *   * Example 4: eventTime > "2012-04-23T18:25:43.511Z"
   *   * Example 5: eventType = search
   *   * Example 6: eventsMissingCatalogItems
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.ListUserEventsRequest.
 * Use `create(ListUserEventsRequestSchema)` to create a new message.
 */
export const ListUserEventsRequestSchema: GenMessage<ListUserEventsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_user_event_service, 5);

/**
 * Response message for ListUserEvents method.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.ListUserEventsResponse
 */
export type ListUserEventsResponse = Message<"google.cloud.recommendationengine.v1beta1.ListUserEventsResponse"> & {
  /**
   * The user events.
   *
   * @generated from field: repeated google.cloud.recommendationengine.v1beta1.UserEvent user_events = 1;
   */
  userEvents: UserEvent[];

  /**
   * If empty, the list is complete. If nonempty, the token to pass to the next
   * request's ListUserEvents.page_token.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.ListUserEventsResponse.
 * Use `create(ListUserEventsResponseSchema)` to create a new message.
 */
export const ListUserEventsResponseSchema: GenMessage<ListUserEventsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_user_event_service, 6);

/**
 * Service for ingesting end user actions on the customer website.
 *
 * @generated from service google.cloud.recommendationengine.v1beta1.UserEventService
 */
export const UserEventService: GenService<{
  /**
   * Writes a single user event.
   *
   * @generated from rpc google.cloud.recommendationengine.v1beta1.UserEventService.WriteUserEvent
   */
  writeUserEvent: {
    methodKind: "unary";
    input: typeof WriteUserEventRequestSchema;
    output: typeof UserEventSchema;
  },
  /**
   * Writes a single user event from the browser. This uses a GET request to
   * due to browser restriction of POST-ing to a 3rd party domain.
   *
   * This method is used only by the Recommendations AI JavaScript pixel.
   * Users should not call this method directly.
   *
   * @generated from rpc google.cloud.recommendationengine.v1beta1.UserEventService.CollectUserEvent
   */
  collectUserEvent: {
    methodKind: "unary";
    input: typeof CollectUserEventRequestSchema;
    output: typeof HttpBodySchema;
  },
  /**
   * Gets a list of user events within a time range, with potential filtering.
   *
   * @generated from rpc google.cloud.recommendationengine.v1beta1.UserEventService.ListUserEvents
   */
  listUserEvents: {
    methodKind: "unary";
    input: typeof ListUserEventsRequestSchema;
    output: typeof ListUserEventsResponseSchema;
  },
  /**
   * Deletes permanently all user events specified by the filter provided.
   * Depending on the number of events specified by the filter, this operation
   * could take hours or days to complete. To test a filter, use the list
   * command first.
   *
   * @generated from rpc google.cloud.recommendationengine.v1beta1.UserEventService.PurgeUserEvents
   */
  purgeUserEvents: {
    methodKind: "unary";
    input: typeof PurgeUserEventsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Bulk import of User events. Request processing might be
   * synchronous. Events that already exist are skipped.
   * Use this method for backfilling historical user events.
   *
   * Operation.response is of type ImportResponse. Note that it is
   * possible for a subset of the items to be successfully inserted.
   * Operation.metadata is of type ImportMetadata.
   *
   * @generated from rpc google.cloud.recommendationengine.v1beta1.UserEventService.ImportUserEvents
   */
  importUserEvents: {
    methodKind: "unary";
    input: typeof ImportUserEventsRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_recommendationengine_v1beta1_user_event_service, 0);

