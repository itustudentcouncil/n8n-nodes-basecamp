// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/recommendationengine/v1beta1/import.proto (package google.cloud.recommendationengine.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { CatalogItem } from "./catalog_pb";
import { file_google_cloud_recommendationengine_v1beta1_catalog } from "./catalog_pb";
import type { UserEvent } from "./user_event_pb";
import { file_google_cloud_recommendationengine_v1beta1_user_event } from "./user_event_pb";
import { file_google_cloud_recommendationengine_v1beta1_recommendationengine_resources } from "./recommendationengine_resources_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/recommendationengine/v1beta1/import.proto.
 */
export const file_google_cloud_recommendationengine_v1beta1_import: GenFile = /*@__PURE__*/
  fileDesc("CjZnb29nbGUvY2xvdWQvcmVjb21tZW5kYXRpb25lbmdpbmUvdjFiZXRhMS9pbXBvcnQucHJvdG8SKWdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExIiQKCUdjc1NvdXJjZRIXCgppbnB1dF91cmlzGAEgAygJQgPgQQIiaQoTQ2F0YWxvZ0lubGluZVNvdXJjZRJSCg1jYXRhbG9nX2l0ZW1zGAEgAygLMjYuZ29vZ2xlLmNsb3VkLnJlY29tbWVuZGF0aW9uZW5naW5lLnYxYmV0YTEuQ2F0YWxvZ0l0ZW1CA+BBASJnChVVc2VyRXZlbnRJbmxpbmVTb3VyY2USTgoLdXNlcl9ldmVudHMYASADKAsyNC5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5Vc2VyRXZlbnRCA+BBASI5ChJJbXBvcnRFcnJvcnNDb25maWcSFAoKZ2NzX3ByZWZpeBgBIAEoCUgAQg0KC2Rlc3RpbmF0aW9uIqcCChlJbXBvcnRDYXRhbG9nSXRlbXNSZXF1ZXN0EkMKBnBhcmVudBgBIAEoCUIz4EEC+kEtCityZWNvbW1lbmRhdGlvbmVuZ2luZS5nb29nbGVhcGlzLmNvbS9DYXRhbG9nEhcKCnJlcXVlc3RfaWQYAiABKAlCA+BBARJRCgxpbnB1dF9jb25maWcYAyABKAsyNi5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5JbnB1dENvbmZpZ0ID4EECElkKDWVycm9yc19jb25maWcYBCABKAsyPS5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5JbXBvcnRFcnJvcnNDb25maWdCA+BBASKoAgoXSW1wb3J0VXNlckV2ZW50c1JlcXVlc3QSRgoGcGFyZW50GAEgASgJQjbgQQL6QTAKLnJlY29tbWVuZGF0aW9uZW5naW5lLmdvb2dsZWFwaXMuY29tL0V2ZW50U3RvcmUSFwoKcmVxdWVzdF9pZBgCIAEoCUID4EEBElEKDGlucHV0X2NvbmZpZxgDIAEoCzI2Lmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExLklucHV0Q29uZmlnQgPgQQISWQoNZXJyb3JzX2NvbmZpZxgEIAEoCzI9Lmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExLkltcG9ydEVycm9yc0NvbmZpZ0ID4EEBIqoCCgtJbnB1dENvbmZpZxJfChVjYXRhbG9nX2lubGluZV9zb3VyY2UYASABKAsyPi5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5DYXRhbG9nSW5saW5lU291cmNlSAASSgoKZ2NzX3NvdXJjZRgCIAEoCzI0Lmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExLkdjc1NvdXJjZUgAEmQKGHVzZXJfZXZlbnRfaW5saW5lX3NvdXJjZRgDIAEoCzJALmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExLlVzZXJFdmVudElubGluZVNvdXJjZUgAQggKBnNvdXJjZSLMAQoOSW1wb3J0TWV0YWRhdGESFgoOb3BlcmF0aW9uX25hbWUYBSABKAkSEgoKcmVxdWVzdF9pZBgDIAEoCRIvCgtjcmVhdGVfdGltZRgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASFQoNc3VjY2Vzc19jb3VudBgBIAEoAxIVCg1mYWlsdXJlX2NvdW50GAIgASgDEi8KC3VwZGF0ZV90aW1lGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCKdAQoaSW1wb3J0Q2F0YWxvZ0l0ZW1zUmVzcG9uc2USKQoNZXJyb3Jfc2FtcGxlcxgBIAMoCzISLmdvb2dsZS5ycGMuU3RhdHVzElQKDWVycm9yc19jb25maWcYAiABKAsyPS5nb29nbGUuY2xvdWQucmVjb21tZW5kYXRpb25lbmdpbmUudjFiZXRhMS5JbXBvcnRFcnJvcnNDb25maWci9gEKGEltcG9ydFVzZXJFdmVudHNSZXNwb25zZRIpCg1lcnJvcl9zYW1wbGVzGAEgAygLMhIuZ29vZ2xlLnJwYy5TdGF0dXMSVAoNZXJyb3JzX2NvbmZpZxgCIAEoCzI9Lmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExLkltcG9ydEVycm9yc0NvbmZpZxJZCg5pbXBvcnRfc3VtbWFyeRgDIAEoCzJBLmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExLlVzZXJFdmVudEltcG9ydFN1bW1hcnkiVAoWVXNlckV2ZW50SW1wb3J0U3VtbWFyeRIbChNqb2luZWRfZXZlbnRzX2NvdW50GAEgASgDEh0KFXVuam9pbmVkX2V2ZW50c19jb3VudBgCIAEoA0KjAgotY29tLmdvb2dsZS5jbG91ZC5yZWNvbW1lbmRhdGlvbmVuZ2luZS52MWJldGExUAFaYWNsb3VkLmdvb2dsZS5jb20vZ28vcmVjb21tZW5kYXRpb25lbmdpbmUvYXBpdjFiZXRhMS9yZWNvbW1lbmRhdGlvbmVuZ2luZXBiO3JlY29tbWVuZGF0aW9uZW5naW5lcGKiAgVSRUNBSaoCKUdvb2dsZS5DbG91ZC5SZWNvbW1lbmRhdGlvbkVuZ2luZS5WMUJldGExygIpR29vZ2xlXENsb3VkXFJlY29tbWVuZGF0aW9uRW5naW5lXFYxYmV0YTHqAixHb29nbGU6OkNsb3VkOjpSZWNvbW1lbmRhdGlvbkVuZ2luZTo6VjFiZXRhMWIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_recommendationengine_v1beta1_catalog, file_google_cloud_recommendationengine_v1beta1_user_event, file_google_cloud_recommendationengine_v1beta1_recommendationengine_resources, file_google_protobuf_timestamp, file_google_rpc_status]);

/**
 * Google Cloud Storage location for input content.
 * format.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.GcsSource
 */
export type GcsSource = Message<"google.cloud.recommendationengine.v1beta1.GcsSource"> & {
  /**
   * Required. Google Cloud Storage URIs to input files. URI can be up to
   * 2000 characters long. URIs can match the full object path (for example,
   * `gs://bucket/directory/object.json`) or a pattern matching one or more
   * files, such as `gs://bucket/directory/*.json`. A request can
   * contain at most 100 files, and each file can be up to 2 GB. See
   * [Importing catalog information](/recommendations-ai/docs/upload-catalog)
   * for the expected file format and setup instructions.
   *
   * @generated from field: repeated string input_uris = 1;
   */
  inputUris: string[];
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.GcsSource.
 * Use `create(GcsSourceSchema)` to create a new message.
 */
export const GcsSourceSchema: GenMessage<GcsSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_import, 0);

/**
 * The inline source for the input config for ImportCatalogItems method.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.CatalogInlineSource
 */
export type CatalogInlineSource = Message<"google.cloud.recommendationengine.v1beta1.CatalogInlineSource"> & {
  /**
   * Optional. A list of catalog items to update/create. Recommended max of 10k
   * items.
   *
   * @generated from field: repeated google.cloud.recommendationengine.v1beta1.CatalogItem catalog_items = 1;
   */
  catalogItems: CatalogItem[];
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.CatalogInlineSource.
 * Use `create(CatalogInlineSourceSchema)` to create a new message.
 */
export const CatalogInlineSourceSchema: GenMessage<CatalogInlineSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_import, 1);

/**
 * The inline source for the input config for ImportUserEvents method.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.UserEventInlineSource
 */
export type UserEventInlineSource = Message<"google.cloud.recommendationengine.v1beta1.UserEventInlineSource"> & {
  /**
   * Optional. A list of user events to import. Recommended max of 10k items.
   *
   * @generated from field: repeated google.cloud.recommendationengine.v1beta1.UserEvent user_events = 1;
   */
  userEvents: UserEvent[];
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.UserEventInlineSource.
 * Use `create(UserEventInlineSourceSchema)` to create a new message.
 */
export const UserEventInlineSourceSchema: GenMessage<UserEventInlineSource> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_import, 2);

/**
 * Configuration of destination for Import related errors.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.ImportErrorsConfig
 */
export type ImportErrorsConfig = Message<"google.cloud.recommendationengine.v1beta1.ImportErrorsConfig"> & {
  /**
   * Required. Errors destination.
   *
   * @generated from oneof google.cloud.recommendationengine.v1beta1.ImportErrorsConfig.destination
   */
  destination: {
    /**
     * Google Cloud Storage path for import errors. This must be an empty,
     * existing Cloud Storage bucket. Import errors will be written to a file in
     * this bucket, one per line, as a JSON-encoded
     * `google.rpc.Status` message.
     *
     * @generated from field: string gcs_prefix = 1;
     */
    value: string;
    case: "gcsPrefix";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.ImportErrorsConfig.
 * Use `create(ImportErrorsConfigSchema)` to create a new message.
 */
export const ImportErrorsConfigSchema: GenMessage<ImportErrorsConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_import, 3);

/**
 * Request message for Import methods.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.ImportCatalogItemsRequest
 */
export type ImportCatalogItemsRequest = Message<"google.cloud.recommendationengine.v1beta1.ImportCatalogItemsRequest"> & {
  /**
   * Required. `projects/1234/locations/global/catalogs/default_catalog`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Unique identifier provided by client, within the ancestor
   * dataset scope. Ensures idempotency and used for request deduplication.
   * Server-generated if unspecified. Up to 128 characters long. This is
   * returned as google.longrunning.Operation.name in the response.
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;

  /**
   * Required. The desired input location of the data.
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.InputConfig input_config = 3;
   */
  inputConfig?: InputConfig;

  /**
   * Optional. The desired location of errors incurred during the Import.
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.ImportErrorsConfig errors_config = 4;
   */
  errorsConfig?: ImportErrorsConfig;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.ImportCatalogItemsRequest.
 * Use `create(ImportCatalogItemsRequestSchema)` to create a new message.
 */
export const ImportCatalogItemsRequestSchema: GenMessage<ImportCatalogItemsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_import, 4);

/**
 * Request message for the ImportUserEvents request.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.ImportUserEventsRequest
 */
export type ImportUserEventsRequest = Message<"google.cloud.recommendationengine.v1beta1.ImportUserEventsRequest"> & {
  /**
   * Required.
   * `projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Unique identifier provided by client, within the ancestor
   * dataset scope. Ensures idempotency for expensive long running operations.
   * Server-generated if unspecified. Up to 128 characters long. This is
   * returned as google.longrunning.Operation.name in the response. Note that
   * this field must not be set if the desired input config is
   * catalog_inline_source.
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;

  /**
   * Required. The desired input location of the data.
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.InputConfig input_config = 3;
   */
  inputConfig?: InputConfig;

  /**
   * Optional. The desired location of errors incurred during the Import.
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.ImportErrorsConfig errors_config = 4;
   */
  errorsConfig?: ImportErrorsConfig;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.ImportUserEventsRequest.
 * Use `create(ImportUserEventsRequestSchema)` to create a new message.
 */
export const ImportUserEventsRequestSchema: GenMessage<ImportUserEventsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_import, 5);

/**
 * The input config source.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.InputConfig
 */
export type InputConfig = Message<"google.cloud.recommendationengine.v1beta1.InputConfig"> & {
  /**
   * Required. The source of the input.
   *
   * @generated from oneof google.cloud.recommendationengine.v1beta1.InputConfig.source
   */
  source: {
    /**
     * The Inline source for the input content for Catalog items.
     *
     * @generated from field: google.cloud.recommendationengine.v1beta1.CatalogInlineSource catalog_inline_source = 1;
     */
    value: CatalogInlineSource;
    case: "catalogInlineSource";
  } | {
    /**
     * Google Cloud Storage location for the input content.
     *
     * @generated from field: google.cloud.recommendationengine.v1beta1.GcsSource gcs_source = 2;
     */
    value: GcsSource;
    case: "gcsSource";
  } | {
    /**
     * The Inline source for the input content for UserEvents.
     *
     * @generated from field: google.cloud.recommendationengine.v1beta1.UserEventInlineSource user_event_inline_source = 3;
     */
    value: UserEventInlineSource;
    case: "userEventInlineSource";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.InputConfig.
 * Use `create(InputConfigSchema)` to create a new message.
 */
export const InputConfigSchema: GenMessage<InputConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_import, 6);

/**
 * Metadata related to the progress of the Import operation. This will be
 * returned by the google.longrunning.Operation.metadata field.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.ImportMetadata
 */
export type ImportMetadata = Message<"google.cloud.recommendationengine.v1beta1.ImportMetadata"> & {
  /**
   * Name of the operation.
   *
   * @generated from field: string operation_name = 5;
   */
  operationName: string;

  /**
   * Id of the request / operation. This is parroting back the requestId that
   * was passed in the request.
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;

  /**
   * Operation create time.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Count of entries that were processed successfully.
   *
   * @generated from field: int64 success_count = 1;
   */
  successCount: bigint;

  /**
   * Count of entries that encountered errors while processing.
   *
   * @generated from field: int64 failure_count = 2;
   */
  failureCount: bigint;

  /**
   * Operation last update time. If the operation is done, this is also the
   * finish time.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 6;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.ImportMetadata.
 * Use `create(ImportMetadataSchema)` to create a new message.
 */
export const ImportMetadataSchema: GenMessage<ImportMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_import, 7);

/**
 * Response of the ImportCatalogItemsRequest. If the long running
 * operation is done, then this message is returned by the
 * google.longrunning.Operations.response field if the operation was successful.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.ImportCatalogItemsResponse
 */
export type ImportCatalogItemsResponse = Message<"google.cloud.recommendationengine.v1beta1.ImportCatalogItemsResponse"> & {
  /**
   * A sample of errors encountered while processing the request.
   *
   * @generated from field: repeated google.rpc.Status error_samples = 1;
   */
  errorSamples: Status[];

  /**
   * Echoes the destination for the complete errors in the request if set.
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.ImportErrorsConfig errors_config = 2;
   */
  errorsConfig?: ImportErrorsConfig;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.ImportCatalogItemsResponse.
 * Use `create(ImportCatalogItemsResponseSchema)` to create a new message.
 */
export const ImportCatalogItemsResponseSchema: GenMessage<ImportCatalogItemsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_import, 8);

/**
 * Response of the ImportUserEventsRequest. If the long running
 * operation was successful, then this message is returned by the
 * google.longrunning.Operations.response field if the operation was successful.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.ImportUserEventsResponse
 */
export type ImportUserEventsResponse = Message<"google.cloud.recommendationengine.v1beta1.ImportUserEventsResponse"> & {
  /**
   * A sample of errors encountered while processing the request.
   *
   * @generated from field: repeated google.rpc.Status error_samples = 1;
   */
  errorSamples: Status[];

  /**
   * Echoes the destination for the complete errors if this field was set in
   * the request.
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.ImportErrorsConfig errors_config = 2;
   */
  errorsConfig?: ImportErrorsConfig;

  /**
   * Aggregated statistics of user event import status.
   *
   * @generated from field: google.cloud.recommendationengine.v1beta1.UserEventImportSummary import_summary = 3;
   */
  importSummary?: UserEventImportSummary;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.ImportUserEventsResponse.
 * Use `create(ImportUserEventsResponseSchema)` to create a new message.
 */
export const ImportUserEventsResponseSchema: GenMessage<ImportUserEventsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_import, 9);

/**
 * A summary of import result. The UserEventImportSummary summarizes
 * the import status for user events.
 *
 * @generated from message google.cloud.recommendationengine.v1beta1.UserEventImportSummary
 */
export type UserEventImportSummary = Message<"google.cloud.recommendationengine.v1beta1.UserEventImportSummary"> & {
  /**
   * Count of user events imported with complete existing catalog information.
   *
   * @generated from field: int64 joined_events_count = 1;
   */
  joinedEventsCount: bigint;

  /**
   * Count of user events imported, but with catalog information not found
   * in the imported catalog.
   *
   * @generated from field: int64 unjoined_events_count = 2;
   */
  unjoinedEventsCount: bigint;
};

/**
 * Describes the message google.cloud.recommendationengine.v1beta1.UserEventImportSummary.
 * Use `create(UserEventImportSummarySchema)` to create a new message.
 */
export const UserEventImportSummarySchema: GenMessage<UserEventImportSummary> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommendationengine_v1beta1_import, 10);

