// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/networkconnectivity/v1/hub.proto (package google.cloud.networkconnectivity.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import { file_google_cloud_networkconnectivity_v1_common } from "./common_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/networkconnectivity/v1/hub.proto.
 */
export const file_google_cloud_networkconnectivity_v1_hub: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_networkconnectivity_v1_common, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * A Network Connectivity Center hub is a global management resource to which
 * you attach spokes. A single hub can contain spokes from multiple regions.
 * However, if any of a hub's spokes use the site-to-site data transfer feature,
 * the resources associated with those spokes must all be in the same VPC
 * network. Spokes that do not use site-to-site data transfer can be associated
 * with any VPC network in your project.
 *
 * @generated from message google.cloud.networkconnectivity.v1.Hub
 */
export type Hub = Message<"google.cloud.networkconnectivity.v1.Hub"> & {
  /**
   * Immutable. The name of the hub. Hub names must be unique. They use the
   * following form:
   *     `projects/{project_number}/locations/global/hubs/{hub_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The time the hub was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the hub was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Optional labels in key-value pair format. For more information about
   * labels, see [Requirements for
   * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * An optional description of the hub.
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * Output only. The Google-generated UUID for the hub. This value is unique
   * across all hub resources. If a hub is deleted and another with the same
   * name is created, the new hub is assigned a different unique_id.
   *
   * @generated from field: string unique_id = 8;
   */
  uniqueId: string;

  /**
   * Output only. The current lifecycle state of this hub.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.State state = 9;
   */
  state: State;

  /**
   * The VPC networks associated with this hub's spokes.
   *
   * This field is read-only. Network Connectivity Center automatically
   * populates it based on the set of spokes attached to the hub.
   *
   * @generated from field: repeated google.cloud.networkconnectivity.v1.RoutingVPC routing_vpcs = 10;
   */
  routingVpcs: RoutingVPC[];

  /**
   * Output only. The route tables that belong to this hub. They use the
   * following form:
   *    `projects/{project_number}/locations/global/hubs/{hub_id}/routeTables/{route_table_id}`
   *
   * This field is read-only. Network Connectivity Center automatically
   * populates it based on the route tables nested under the hub.
   *
   * @generated from field: repeated string route_tables = 11;
   */
  routeTables: string[];

  /**
   * Output only. A summary of the spokes associated with a hub. The
   * summary includes a count of spokes according to type
   * and according to state. If any spokes are inactive,
   * the summary also lists the reasons they are inactive,
   * including a count for each reason.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.SpokeSummary spoke_summary = 12;
   */
  spokeSummary?: SpokeSummary;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.Hub.
 * Use `create(HubSchema)` to create a new message.
 */
export const HubSchema: GenMessage<Hub> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 0);

/**
 * RoutingVPC contains information about the VPC networks associated
 * with the spokes of a Network Connectivity Center hub.
 *
 * @generated from message google.cloud.networkconnectivity.v1.RoutingVPC
 */
export type RoutingVPC = Message<"google.cloud.networkconnectivity.v1.RoutingVPC"> & {
  /**
   * The URI of the VPC network.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * Output only. If true, indicates that this VPC network is currently
   * associated with spokes that use the data transfer feature (spokes where the
   * site_to_site_data_transfer field is set to true). If you create new spokes
   * that use data transfer, they must be associated with this VPC network. At
   * most, one VPC network will have this field set to true.
   *
   * @generated from field: bool required_for_new_site_to_site_data_transfer_spokes = 2;
   */
  requiredForNewSiteToSiteDataTransferSpokes: boolean;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.RoutingVPC.
 * Use `create(RoutingVPCSchema)` to create a new message.
 */
export const RoutingVPCSchema: GenMessage<RoutingVPC> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 1);

/**
 * A Network Connectivity Center spoke represents one or more network
 * connectivity resources.
 *
 * When you create a spoke, you associate it with a hub. You must also
 * identify a value for exactly one of the following fields:
 *
 * * linked_vpn_tunnels
 * * linked_interconnect_attachments
 * * linked_router_appliance_instances
 * * linked_vpc_network
 *
 * @generated from message google.cloud.networkconnectivity.v1.Spoke
 */
export type Spoke = Message<"google.cloud.networkconnectivity.v1.Spoke"> & {
  /**
   * Immutable. The name of the spoke. Spoke names must be unique. They use the
   * following form:
   *     `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The time the spoke was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the spoke was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Optional labels in key-value pair format. For more information about
   * labels, see [Requirements for
   * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * An optional description of the spoke.
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * Immutable. The name of the hub that this spoke is attached to.
   *
   * @generated from field: string hub = 6;
   */
  hub: string;

  /**
   * Optional. The name of the group that this spoke is associated with.
   *
   * @generated from field: string group = 23;
   */
  group: string;

  /**
   * VPN tunnels that are associated with the spoke.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.LinkedVpnTunnels linked_vpn_tunnels = 17;
   */
  linkedVpnTunnels?: LinkedVpnTunnels;

  /**
   * VLAN attachments that are associated with the spoke.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.LinkedInterconnectAttachments linked_interconnect_attachments = 18;
   */
  linkedInterconnectAttachments?: LinkedInterconnectAttachments;

  /**
   * Router appliance instances that are associated with the spoke.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.LinkedRouterApplianceInstances linked_router_appliance_instances = 19;
   */
  linkedRouterApplianceInstances?: LinkedRouterApplianceInstances;

  /**
   * Optional. VPC network that is associated with the spoke.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.LinkedVpcNetwork linked_vpc_network = 20;
   */
  linkedVpcNetwork?: LinkedVpcNetwork;

  /**
   * Output only. The Google-generated UUID for the spoke. This value is unique
   * across all spoke resources. If a spoke is deleted and another with the same
   * name is created, the new spoke is assigned a different `unique_id`.
   *
   * @generated from field: string unique_id = 11;
   */
  uniqueId: string;

  /**
   * Output only. The current lifecycle state of this spoke.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.State state = 15;
   */
  state: State;

  /**
   * Output only. The reasons for current state of the spoke. Only present when
   * the spoke is in the `INACTIVE` state.
   *
   * @generated from field: repeated google.cloud.networkconnectivity.v1.Spoke.StateReason reasons = 21;
   */
  reasons: Spoke_StateReason[];

  /**
   * Output only. The type of resource associated with the spoke.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.SpokeType spoke_type = 22;
   */
  spokeType: SpokeType;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.Spoke.
 * Use `create(SpokeSchema)` to create a new message.
 */
export const SpokeSchema: GenMessage<Spoke> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 2);

/**
 * The reason a spoke is inactive.
 *
 * @generated from message google.cloud.networkconnectivity.v1.Spoke.StateReason
 */
export type Spoke_StateReason = Message<"google.cloud.networkconnectivity.v1.Spoke.StateReason"> & {
  /**
   * The code associated with this reason.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.Spoke.StateReason.Code code = 1;
   */
  code: Spoke_StateReason_Code;

  /**
   * Human-readable details about this reason.
   *
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * Additional information provided by the user in the RejectSpoke call.
   *
   * @generated from field: string user_details = 3;
   */
  userDetails: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.Spoke.StateReason.
 * Use `create(Spoke_StateReasonSchema)` to create a new message.
 */
export const Spoke_StateReasonSchema: GenMessage<Spoke_StateReason> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 2, 0);

/**
 * The Code enum represents the various reasons a state can be `INACTIVE`.
 *
 * @generated from enum google.cloud.networkconnectivity.v1.Spoke.StateReason.Code
 */
export enum Spoke_StateReason_Code {
  /**
   * No information available.
   *
   * @generated from enum value: CODE_UNSPECIFIED = 0;
   */
  CODE_UNSPECIFIED = 0,

  /**
   * The proposed spoke is pending review.
   *
   * @generated from enum value: PENDING_REVIEW = 1;
   */
  PENDING_REVIEW = 1,

  /**
   * The proposed spoke has been rejected by the hub administrator.
   *
   * @generated from enum value: REJECTED = 2;
   */
  REJECTED = 2,

  /**
   * The spoke has been deactivated internally.
   *
   * @generated from enum value: PAUSED = 3;
   */
  PAUSED = 3,

  /**
   * Network Connectivity Center encountered errors while accepting
   * the spoke.
   *
   * @generated from enum value: FAILED = 4;
   */
  FAILED = 4,
}

/**
 * Describes the enum google.cloud.networkconnectivity.v1.Spoke.StateReason.Code.
 */
export const Spoke_StateReason_CodeSchema: GenEnum<Spoke_StateReason_Code> = /*@__PURE__*/
  enumDesc(file_google_cloud_networkconnectivity_v1_hub, 2, 0, 0);

/**
 * @generated from message google.cloud.networkconnectivity.v1.RouteTable
 */
export type RouteTable = Message<"google.cloud.networkconnectivity.v1.RouteTable"> & {
  /**
   * Immutable. The name of the route table. Route table names must be unique.
   * They use the following form:
   *      `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The time the route table was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the route table was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Optional labels in key-value pair format. For more information about
   * labels, see [Requirements for
   * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * An optional description of the route table.
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * Output only. The Google-generated UUID for the route table. This value is
   * unique across all route table resources. If a route table is deleted and
   * another with the same name is created, the new route table is assigned
   * a different `uid`.
   *
   * @generated from field: string uid = 6;
   */
  uid: string;

  /**
   * Output only. The current lifecycle state of this route table.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.State state = 7;
   */
  state: State;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.RouteTable.
 * Use `create(RouteTableSchema)` to create a new message.
 */
export const RouteTableSchema: GenMessage<RouteTable> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 3);

/**
 * A route defines a path from VM instances within a spoke to a specific
 * destination resource. Only VPC spokes have routes.
 *
 * @generated from message google.cloud.networkconnectivity.v1.Route
 */
export type Route = Message<"google.cloud.networkconnectivity.v1.Route"> & {
  /**
   * Immutable. The name of the route. Route names must be unique. Route names
   * use the following form:
   *      `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}/routes/{route_id}`
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Output only. The time the route was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the route was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 5;
   */
  updateTime?: Timestamp;

  /**
   * The destination IP address range.
   *
   * @generated from field: string ip_cidr_range = 1;
   */
  ipCidrRange: string;

  /**
   * Output only. The route's type. Its type is determined by the properties of
   * its IP address range.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.RouteType type = 10;
   */
  type: RouteType;

  /**
   * Immutable. The destination VPC network for packets on this route.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.NextHopVpcNetwork next_hop_vpc_network = 2;
   */
  nextHopVpcNetwork?: NextHopVpcNetwork;

  /**
   * Optional labels in key-value pair format. For more information about
   * labels, see [Requirements for
   * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
   *
   * @generated from field: map<string, string> labels = 6;
   */
  labels: { [key: string]: string };

  /**
   * An optional description of the route.
   *
   * @generated from field: string description = 7;
   */
  description: string;

  /**
   * Output only. The Google-generated UUID for the route. This value is unique
   * across all Network Connectivity Center route resources. If a
   * route is deleted and another with the same name is created,
   * the new route is assigned a different `uid`.
   *
   * @generated from field: string uid = 8;
   */
  uid: string;

  /**
   * Output only. The current lifecycle state of the route.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.State state = 9;
   */
  state: State;

  /**
   * Immutable. The spoke that this route leads to.
   * Example: projects/12345/locations/global/spokes/SPOKE
   *
   * @generated from field: string spoke = 11;
   */
  spoke: string;

  /**
   * Output only. The location of the route.
   * Uses the following form: "projects/{project}/locations/{location}"
   * Example: projects/1234/locations/us-central1
   *
   * @generated from field: string location = 12;
   */
  location: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.Route.
 * Use `create(RouteSchema)` to create a new message.
 */
export const RouteSchema: GenMessage<Route> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 4);

/**
 * A group represents a subset of spokes attached to a hub.
 *
 * @generated from message google.cloud.networkconnectivity.v1.Group
 */
export type Group = Message<"google.cloud.networkconnectivity.v1.Group"> & {
  /**
   * Immutable. The name of the group. Group names must be unique. They
   * use the following form:
   *      `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The time the group was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the group was last updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Optional. Labels in key-value pair format. For more information about
   * labels, see [Requirements for
   * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Optional. The description of the group.
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * Output only. The Google-generated UUID for the group. This value is unique
   * across all group resources. If a group is deleted and
   * another with the same name is created, the new route table is assigned
   * a different unique_id.
   *
   * @generated from field: string uid = 6;
   */
  uid: string;

  /**
   * Output only. The current lifecycle state of this group.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.State state = 7;
   */
  state: State;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.Group.
 * Use `create(GroupSchema)` to create a new message.
 */
export const GroupSchema: GenMessage<Group> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 5);

/**
 * Request for
 * [HubService.ListHubs][google.cloud.networkconnectivity.v1.HubService.ListHubs]
 * method.
 *
 * @generated from message google.cloud.networkconnectivity.v1.ListHubsRequest
 */
export type ListHubsRequest = Message<"google.cloud.networkconnectivity.v1.ListHubsRequest"> & {
  /**
   * Required. The parent resource's name.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of results per page to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * An expression that filters the list of results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Sort the results by a certain order.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.ListHubsRequest.
 * Use `create(ListHubsRequestSchema)` to create a new message.
 */
export const ListHubsRequestSchema: GenMessage<ListHubsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 6);

/**
 * Response for
 * [HubService.ListHubs][google.cloud.networkconnectivity.v1.HubService.ListHubs]
 * method.
 *
 * @generated from message google.cloud.networkconnectivity.v1.ListHubsResponse
 */
export type ListHubsResponse = Message<"google.cloud.networkconnectivity.v1.ListHubsResponse"> & {
  /**
   * The requested hubs.
   *
   * @generated from field: repeated google.cloud.networkconnectivity.v1.Hub hubs = 1;
   */
  hubs: Hub[];

  /**
   * The token for the next page of the response. To see more results,
   * use this value as the page_token for your next request. If this value
   * is empty, there are no more results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.ListHubsResponse.
 * Use `create(ListHubsResponseSchema)` to create a new message.
 */
export const ListHubsResponseSchema: GenMessage<ListHubsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 7);

/**
 * Request for
 * [HubService.GetHub][google.cloud.networkconnectivity.v1.HubService.GetHub]
 * method.
 *
 * @generated from message google.cloud.networkconnectivity.v1.GetHubRequest
 */
export type GetHubRequest = Message<"google.cloud.networkconnectivity.v1.GetHubRequest"> & {
  /**
   * Required. The name of the hub resource to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.GetHubRequest.
 * Use `create(GetHubRequestSchema)` to create a new message.
 */
export const GetHubRequestSchema: GenMessage<GetHubRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 8);

/**
 * Request for
 * [HubService.CreateHub][google.cloud.networkconnectivity.v1.HubService.CreateHub]
 * method.
 *
 * @generated from message google.cloud.networkconnectivity.v1.CreateHubRequest
 */
export type CreateHubRequest = Message<"google.cloud.networkconnectivity.v1.CreateHubRequest"> & {
  /**
   * Required. The parent resource.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. A unique identifier for the hub.
   *
   * @generated from field: string hub_id = 2;
   */
  hubId: string;

  /**
   * Required. The initial values for a new hub.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.Hub hub = 3;
   */
  hub?: Hub;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID so
   * that if you must retry your request, the server knows to ignore the request
   * if it has already been completed. The server guarantees that a request
   * doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check to see whether the original operation
   * was received. If it was, the server ignores the second request. This
   * behavior prevents clients from mistakenly creating duplicate commitments.
   *
   * The request ID must be a valid UUID, with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.CreateHubRequest.
 * Use `create(CreateHubRequestSchema)` to create a new message.
 */
export const CreateHubRequestSchema: GenMessage<CreateHubRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 9);

/**
 * Request for
 * [HubService.UpdateHub][google.cloud.networkconnectivity.v1.HubService.UpdateHub]
 * method.
 *
 * @generated from message google.cloud.networkconnectivity.v1.UpdateHubRequest
 */
export type UpdateHubRequest = Message<"google.cloud.networkconnectivity.v1.UpdateHubRequest"> & {
  /**
   * Optional. In the case of an update to an existing hub, field mask is used
   * to specify the fields to be overwritten. The fields specified in the
   * update_mask are relative to the resource, not the full request. A field is
   * overwritten if it is in the mask. If the user does not provide a mask, then
   * all fields are overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The state that the hub should be in after the update.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.Hub hub = 2;
   */
  hub?: Hub;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID so
   * that if you must retry your request, the server knows to ignore the request
   * if it has already been completed. The server guarantees that a request
   * doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check to see whether the original operation
   * was received. If it was, the server ignores the second request. This
   * behavior prevents clients from mistakenly creating duplicate commitments.
   *
   * The request ID must be a valid UUID, with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.UpdateHubRequest.
 * Use `create(UpdateHubRequestSchema)` to create a new message.
 */
export const UpdateHubRequestSchema: GenMessage<UpdateHubRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 10);

/**
 * The request for
 * [HubService.DeleteHub][google.cloud.networkconnectivity.v1.HubService.DeleteHub].
 *
 * @generated from message google.cloud.networkconnectivity.v1.DeleteHubRequest
 */
export type DeleteHubRequest = Message<"google.cloud.networkconnectivity.v1.DeleteHubRequest"> & {
  /**
   * Required. The name of the hub to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID so
   * that if you must retry your request, the server knows to ignore the request
   * if it has already been completed. The server guarantees that a request
   * doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check to see whether the original operation
   * was received. If it was, the server ignores the second request. This
   * behavior prevents clients from mistakenly creating duplicate commitments.
   *
   * The request ID must be a valid UUID, with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.DeleteHubRequest.
 * Use `create(DeleteHubRequestSchema)` to create a new message.
 */
export const DeleteHubRequestSchema: GenMessage<DeleteHubRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 11);

/**
 * The request for
 * [HubService.ListHubSpokes][google.cloud.networkconnectivity.v1.HubService.ListHubSpokes].
 *
 *
 * @generated from message google.cloud.networkconnectivity.v1.ListHubSpokesRequest
 */
export type ListHubSpokesRequest = Message<"google.cloud.networkconnectivity.v1.ListHubSpokesRequest"> & {
  /**
   * Required. The name of the hub.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A list of locations.
   * Specify one of the following: `[global]`, a single region (for
   * example, `[us-central1]`), or a combination of
   * values (for example, `[global, us-central1, us-west1]`).
   * If the spoke_locations field is populated, the list of results
   * includes only spokes in the specified location.
   * If the spoke_locations field is not populated, the list of results
   * includes spokes in all locations.
   *
   * @generated from field: repeated string spoke_locations = 2;
   */
  spokeLocations: string[];

  /**
   * The maximum number of results to return per page.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The page token.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * An expression that filters the list of results.
   *
   * @generated from field: string filter = 5;
   */
  filter: string;

  /**
   * Sort the results by name or create_time.
   *
   * @generated from field: string order_by = 6;
   */
  orderBy: string;

  /**
   * The view of the spoke to return.
   * The view that you use determines which spoke fields are included in the
   * response.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.ListHubSpokesRequest.SpokeView view = 7;
   */
  view: ListHubSpokesRequest_SpokeView;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.ListHubSpokesRequest.
 * Use `create(ListHubSpokesRequestSchema)` to create a new message.
 */
export const ListHubSpokesRequestSchema: GenMessage<ListHubSpokesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 12);

/**
 * Enum that controls which spoke fields are included in the response.
 *
 * @generated from enum google.cloud.networkconnectivity.v1.ListHubSpokesRequest.SpokeView
 */
export enum ListHubSpokesRequest_SpokeView {
  /**
   * The spoke view is unspecified. When the spoke view is unspecified, the
   * API returns the same fields as the `BASIC` view.
   *
   * @generated from enum value: SPOKE_VIEW_UNSPECIFIED = 0;
   */
  SPOKE_VIEW_UNSPECIFIED = 0,

  /**
   * Includes `name`, `create_time`, `hub`, `unique_id`, `state`, `reasons`,
   * and `spoke_type`. This is the default value.
   *
   * @generated from enum value: BASIC = 1;
   */
  BASIC = 1,

  /**
   * Includes all spoke fields except `labels`.
   * You can use the `DETAILED` view only when you set the `spoke_locations`
   * field to `[global]`.
   *
   * @generated from enum value: DETAILED = 2;
   */
  DETAILED = 2,
}

/**
 * Describes the enum google.cloud.networkconnectivity.v1.ListHubSpokesRequest.SpokeView.
 */
export const ListHubSpokesRequest_SpokeViewSchema: GenEnum<ListHubSpokesRequest_SpokeView> = /*@__PURE__*/
  enumDesc(file_google_cloud_networkconnectivity_v1_hub, 12, 0);

/**
 * The response for
 * [HubService.ListHubSpokes][google.cloud.networkconnectivity.v1.HubService.ListHubSpokes].
 *
 * @generated from message google.cloud.networkconnectivity.v1.ListHubSpokesResponse
 */
export type ListHubSpokesResponse = Message<"google.cloud.networkconnectivity.v1.ListHubSpokesResponse"> & {
  /**
   * The requested spokes.
   * The spoke fields can be partially populated based on the `view` field in
   * the request message.
   *
   * @generated from field: repeated google.cloud.networkconnectivity.v1.Spoke spokes = 1;
   */
  spokes: Spoke[];

  /**
   * The token for the next page of the response. To see more results,
   * use this value as the page_token for your next request. If this value
   * is empty, there are no more results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.ListHubSpokesResponse.
 * Use `create(ListHubSpokesResponseSchema)` to create a new message.
 */
export const ListHubSpokesResponseSchema: GenMessage<ListHubSpokesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 13);

/**
 * The request for
 * [HubService.ListSpokes][google.cloud.networkconnectivity.v1.HubService.ListSpokes].
 *
 * @generated from message google.cloud.networkconnectivity.v1.ListSpokesRequest
 */
export type ListSpokesRequest = Message<"google.cloud.networkconnectivity.v1.ListSpokesRequest"> & {
  /**
   * Required. The parent resource.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of results to return per page.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * An expression that filters the list of results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Sort the results by a certain order.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.ListSpokesRequest.
 * Use `create(ListSpokesRequestSchema)` to create a new message.
 */
export const ListSpokesRequestSchema: GenMessage<ListSpokesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 14);

/**
 * The response for
 * [HubService.ListSpokes][google.cloud.networkconnectivity.v1.HubService.ListSpokes].
 *
 * @generated from message google.cloud.networkconnectivity.v1.ListSpokesResponse
 */
export type ListSpokesResponse = Message<"google.cloud.networkconnectivity.v1.ListSpokesResponse"> & {
  /**
   * The requested spokes.
   *
   * @generated from field: repeated google.cloud.networkconnectivity.v1.Spoke spokes = 1;
   */
  spokes: Spoke[];

  /**
   * The token for the next page of the response. To see more results,
   * use this value as the page_token for your next request. If this value
   * is empty, there are no more results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.ListSpokesResponse.
 * Use `create(ListSpokesResponseSchema)` to create a new message.
 */
export const ListSpokesResponseSchema: GenMessage<ListSpokesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 15);

/**
 * The request for
 * [HubService.GetSpoke][google.cloud.networkconnectivity.v1.HubService.GetSpoke].
 *
 * @generated from message google.cloud.networkconnectivity.v1.GetSpokeRequest
 */
export type GetSpokeRequest = Message<"google.cloud.networkconnectivity.v1.GetSpokeRequest"> & {
  /**
   * Required. The name of the spoke resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.GetSpokeRequest.
 * Use `create(GetSpokeRequestSchema)` to create a new message.
 */
export const GetSpokeRequestSchema: GenMessage<GetSpokeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 16);

/**
 * The request for
 * [HubService.CreateSpoke][google.cloud.networkconnectivity.v1.HubService.CreateSpoke].
 *
 * @generated from message google.cloud.networkconnectivity.v1.CreateSpokeRequest
 */
export type CreateSpokeRequest = Message<"google.cloud.networkconnectivity.v1.CreateSpokeRequest"> & {
  /**
   * Required. The parent resource.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Unique id for the spoke to create.
   *
   * @generated from field: string spoke_id = 2;
   */
  spokeId: string;

  /**
   * Required. The initial values for a new spoke.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.Spoke spoke = 3;
   */
  spoke?: Spoke;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID so
   * that if you must retry your request, the server knows to ignore the request
   * if it has already been completed. The server guarantees that a request
   * doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check to see whether the original operation
   * was received. If it was, the server ignores the second request. This
   * behavior prevents clients from mistakenly creating duplicate commitments.
   *
   * The request ID must be a valid UUID, with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.CreateSpokeRequest.
 * Use `create(CreateSpokeRequestSchema)` to create a new message.
 */
export const CreateSpokeRequestSchema: GenMessage<CreateSpokeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 17);

/**
 * Request for
 * [HubService.UpdateSpoke][google.cloud.networkconnectivity.v1.HubService.UpdateSpoke]
 * method.
 *
 * @generated from message google.cloud.networkconnectivity.v1.UpdateSpokeRequest
 */
export type UpdateSpokeRequest = Message<"google.cloud.networkconnectivity.v1.UpdateSpokeRequest"> & {
  /**
   * Optional. In the case of an update to an existing spoke, field mask is used
   * to specify the fields to be overwritten. The fields specified in the
   * update_mask are relative to the resource, not the full request. A field is
   * overwritten if it is in the mask. If the user does not provide a mask, then
   * all fields are overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The state that the spoke should be in after the update.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.Spoke spoke = 2;
   */
  spoke?: Spoke;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID so
   * that if you must retry your request, the server knows to ignore the request
   * if it has already been completed. The server guarantees that a request
   * doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check to see whether the original operation
   * was received. If it was, the server ignores the second request. This
   * behavior prevents clients from mistakenly creating duplicate commitments.
   *
   * The request ID must be a valid UUID, with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.UpdateSpokeRequest.
 * Use `create(UpdateSpokeRequestSchema)` to create a new message.
 */
export const UpdateSpokeRequestSchema: GenMessage<UpdateSpokeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 18);

/**
 * The request for
 * [HubService.DeleteSpoke][google.cloud.networkconnectivity.v1.HubService.DeleteSpoke].
 *
 * @generated from message google.cloud.networkconnectivity.v1.DeleteSpokeRequest
 */
export type DeleteSpokeRequest = Message<"google.cloud.networkconnectivity.v1.DeleteSpokeRequest"> & {
  /**
   * Required. The name of the spoke to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID so
   * that if you must retry your request, the server knows to ignore the request
   * if it has already been completed. The server guarantees that a request
   * doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check to see whether the original operation
   * was received. If it was, the server ignores the second request. This
   * behavior prevents clients from mistakenly creating duplicate commitments.
   *
   * The request ID must be a valid UUID, with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.DeleteSpokeRequest.
 * Use `create(DeleteSpokeRequestSchema)` to create a new message.
 */
export const DeleteSpokeRequestSchema: GenMessage<DeleteSpokeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 19);

/**
 * The request for
 * [HubService.AcceptHubSpoke][google.cloud.networkconnectivity.v1.HubService.AcceptHubSpoke].
 *
 * @generated from message google.cloud.networkconnectivity.v1.AcceptHubSpokeRequest
 */
export type AcceptHubSpokeRequest = Message<"google.cloud.networkconnectivity.v1.AcceptHubSpokeRequest"> & {
  /**
   * Required. The name of the hub into which to accept the spoke.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The URI of the spoke to accept into the hub.
   *
   * @generated from field: string spoke_uri = 2;
   */
  spokeUri: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID so
   * that if you must retry your request, the server knows to ignore the request
   * if it has already been completed. The server guarantees that a request
   * doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check to see whether the original operation
   * was received. If it was, the server ignores the second request. This
   * behavior prevents clients from mistakenly creating duplicate commitments.
   *
   * The request ID must be a valid UUID, with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.AcceptHubSpokeRequest.
 * Use `create(AcceptHubSpokeRequestSchema)` to create a new message.
 */
export const AcceptHubSpokeRequestSchema: GenMessage<AcceptHubSpokeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 20);

/**
 * The response for
 * [HubService.AcceptHubSpoke][google.cloud.networkconnectivity.v1.HubService.AcceptHubSpoke].
 *
 * @generated from message google.cloud.networkconnectivity.v1.AcceptHubSpokeResponse
 */
export type AcceptHubSpokeResponse = Message<"google.cloud.networkconnectivity.v1.AcceptHubSpokeResponse"> & {
  /**
   * The spoke that was operated on.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.Spoke spoke = 1;
   */
  spoke?: Spoke;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.AcceptHubSpokeResponse.
 * Use `create(AcceptHubSpokeResponseSchema)` to create a new message.
 */
export const AcceptHubSpokeResponseSchema: GenMessage<AcceptHubSpokeResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 21);

/**
 * The request for
 * [HubService.RejectHubSpoke][google.cloud.networkconnectivity.v1.HubService.RejectHubSpoke].
 *
 * @generated from message google.cloud.networkconnectivity.v1.RejectHubSpokeRequest
 */
export type RejectHubSpokeRequest = Message<"google.cloud.networkconnectivity.v1.RejectHubSpokeRequest"> & {
  /**
   * Required. The name of the hub from which to reject the spoke.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The URI of the spoke to reject from the hub.
   *
   * @generated from field: string spoke_uri = 2;
   */
  spokeUri: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID so
   * that if you must retry your request, the server knows to ignore the request
   * if it has already been completed. The server guarantees that a request
   * doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check to see whether the original operation
   * was received. If it was, the server ignores the second request. This
   * behavior prevents clients from mistakenly creating duplicate commitments.
   *
   * The request ID must be a valid UUID, with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;

  /**
   * Optional. Additional information provided by the hub administrator.
   *
   * @generated from field: string details = 4;
   */
  details: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.RejectHubSpokeRequest.
 * Use `create(RejectHubSpokeRequestSchema)` to create a new message.
 */
export const RejectHubSpokeRequestSchema: GenMessage<RejectHubSpokeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 22);

/**
 * The response for
 * [HubService.RejectHubSpoke][google.cloud.networkconnectivity.v1.HubService.RejectHubSpoke].
 *
 * @generated from message google.cloud.networkconnectivity.v1.RejectHubSpokeResponse
 */
export type RejectHubSpokeResponse = Message<"google.cloud.networkconnectivity.v1.RejectHubSpokeResponse"> & {
  /**
   * The spoke that was operated on.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.Spoke spoke = 1;
   */
  spoke?: Spoke;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.RejectHubSpokeResponse.
 * Use `create(RejectHubSpokeResponseSchema)` to create a new message.
 */
export const RejectHubSpokeResponseSchema: GenMessage<RejectHubSpokeResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 23);

/**
 * The request for
 * [HubService.GetRouteTable][google.cloud.networkconnectivity.v1.HubService.GetRouteTable].
 *
 * @generated from message google.cloud.networkconnectivity.v1.GetRouteTableRequest
 */
export type GetRouteTableRequest = Message<"google.cloud.networkconnectivity.v1.GetRouteTableRequest"> & {
  /**
   * Required. The name of the route table resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.GetRouteTableRequest.
 * Use `create(GetRouteTableRequestSchema)` to create a new message.
 */
export const GetRouteTableRequestSchema: GenMessage<GetRouteTableRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 24);

/**
 * The request for
 * [HubService.GetRoute][google.cloud.networkconnectivity.v1.HubService.GetRoute].
 *
 * @generated from message google.cloud.networkconnectivity.v1.GetRouteRequest
 */
export type GetRouteRequest = Message<"google.cloud.networkconnectivity.v1.GetRouteRequest"> & {
  /**
   * Required. The name of the route resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.GetRouteRequest.
 * Use `create(GetRouteRequestSchema)` to create a new message.
 */
export const GetRouteRequestSchema: GenMessage<GetRouteRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 25);

/**
 * Request for
 * [HubService.ListRoutes][google.cloud.networkconnectivity.v1.HubService.ListRoutes]
 * method.
 *
 * @generated from message google.cloud.networkconnectivity.v1.ListRoutesRequest
 */
export type ListRoutesRequest = Message<"google.cloud.networkconnectivity.v1.ListRoutesRequest"> & {
  /**
   * Required. The parent resource's name.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of results to return per page.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * An expression that filters the list of results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Sort the results by a certain order.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.ListRoutesRequest.
 * Use `create(ListRoutesRequestSchema)` to create a new message.
 */
export const ListRoutesRequestSchema: GenMessage<ListRoutesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 26);

/**
 * Response for
 * [HubService.ListRoutes][google.cloud.networkconnectivity.v1.HubService.ListRoutes]
 * method.
 *
 * @generated from message google.cloud.networkconnectivity.v1.ListRoutesResponse
 */
export type ListRoutesResponse = Message<"google.cloud.networkconnectivity.v1.ListRoutesResponse"> & {
  /**
   * The requested routes.
   *
   * @generated from field: repeated google.cloud.networkconnectivity.v1.Route routes = 1;
   */
  routes: Route[];

  /**
   * The token for the next page of the response. To see more results,
   * use this value as the page_token for your next request. If this value
   * is empty, there are no more results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * RouteTables that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.ListRoutesResponse.
 * Use `create(ListRoutesResponseSchema)` to create a new message.
 */
export const ListRoutesResponseSchema: GenMessage<ListRoutesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 27);

/**
 * Request for
 * [HubService.ListRouteTables][google.cloud.networkconnectivity.v1.HubService.ListRouteTables]
 * method.
 *
 * @generated from message google.cloud.networkconnectivity.v1.ListRouteTablesRequest
 */
export type ListRouteTablesRequest = Message<"google.cloud.networkconnectivity.v1.ListRouteTablesRequest"> & {
  /**
   * Required. The parent resource's name.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of results to return per page.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * An expression that filters the list of results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Sort the results by a certain order.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.ListRouteTablesRequest.
 * Use `create(ListRouteTablesRequestSchema)` to create a new message.
 */
export const ListRouteTablesRequestSchema: GenMessage<ListRouteTablesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 28);

/**
 * Response for
 * [HubService.ListRouteTables][google.cloud.networkconnectivity.v1.HubService.ListRouteTables]
 * method.
 *
 * @generated from message google.cloud.networkconnectivity.v1.ListRouteTablesResponse
 */
export type ListRouteTablesResponse = Message<"google.cloud.networkconnectivity.v1.ListRouteTablesResponse"> & {
  /**
   * The requested route tables.
   *
   * @generated from field: repeated google.cloud.networkconnectivity.v1.RouteTable route_tables = 1;
   */
  routeTables: RouteTable[];

  /**
   * The token for the next page of the response. To see more results,
   * use this value as the page_token for your next request. If this value
   * is empty, there are no more results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Hubs that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.ListRouteTablesResponse.
 * Use `create(ListRouteTablesResponseSchema)` to create a new message.
 */
export const ListRouteTablesResponseSchema: GenMessage<ListRouteTablesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 29);

/**
 * Request for
 * [HubService.ListGroups][google.cloud.networkconnectivity.v1.HubService.ListGroups]
 * method.
 *
 * @generated from message google.cloud.networkconnectivity.v1.ListGroupsRequest
 */
export type ListGroupsRequest = Message<"google.cloud.networkconnectivity.v1.ListGroupsRequest"> & {
  /**
   * Required. The parent resource's name.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of results to return per page.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * An expression that filters the list of results.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Sort the results by a certain order.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.ListGroupsRequest.
 * Use `create(ListGroupsRequestSchema)` to create a new message.
 */
export const ListGroupsRequestSchema: GenMessage<ListGroupsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 30);

/**
 * Response for
 * [HubService.ListGroups][google.cloud.networkconnectivity.v1.HubService.ListGroups]
 * method.
 *
 * @generated from message google.cloud.networkconnectivity.v1.ListGroupsResponse
 */
export type ListGroupsResponse = Message<"google.cloud.networkconnectivity.v1.ListGroupsResponse"> & {
  /**
   * The requested groups.
   *
   * @generated from field: repeated google.cloud.networkconnectivity.v1.Group groups = 1;
   */
  groups: Group[];

  /**
   * The token for the next page of the response. To see more results,
   * use this value as the page_token for your next request. If this value
   * is empty, there are no more results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Hubs that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.ListGroupsResponse.
 * Use `create(ListGroupsResponseSchema)` to create a new message.
 */
export const ListGroupsResponseSchema: GenMessage<ListGroupsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 31);

/**
 * A collection of Cloud VPN tunnel resources. These resources should be
 * redundant HA VPN tunnels that all advertise the same prefixes to Google
 * Cloud. Alternatively, in a passive/active configuration, all tunnels
 * should be capable of advertising the same prefixes.
 *
 * @generated from message google.cloud.networkconnectivity.v1.LinkedVpnTunnels
 */
export type LinkedVpnTunnels = Message<"google.cloud.networkconnectivity.v1.LinkedVpnTunnels"> & {
  /**
   * The URIs of linked VPN tunnel resources.
   *
   * @generated from field: repeated string uris = 1;
   */
  uris: string[];

  /**
   * A value that controls whether site-to-site data transfer is enabled for
   * these resources. Data transfer is available only in [supported
   * locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
   *
   * @generated from field: bool site_to_site_data_transfer = 2;
   */
  siteToSiteDataTransfer: boolean;

  /**
   * Output only. The VPC network where these VPN tunnels are located.
   *
   * @generated from field: string vpc_network = 3;
   */
  vpcNetwork: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.LinkedVpnTunnels.
 * Use `create(LinkedVpnTunnelsSchema)` to create a new message.
 */
export const LinkedVpnTunnelsSchema: GenMessage<LinkedVpnTunnels> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 32);

/**
 * A collection of VLAN attachment resources. These resources should
 * be redundant attachments that all advertise the same prefixes to Google
 * Cloud. Alternatively, in active/passive configurations, all attachments
 * should be capable of advertising the same prefixes.
 *
 * @generated from message google.cloud.networkconnectivity.v1.LinkedInterconnectAttachments
 */
export type LinkedInterconnectAttachments = Message<"google.cloud.networkconnectivity.v1.LinkedInterconnectAttachments"> & {
  /**
   * The URIs of linked interconnect attachment resources
   *
   * @generated from field: repeated string uris = 1;
   */
  uris: string[];

  /**
   * A value that controls whether site-to-site data transfer is enabled for
   * these resources. Data transfer is available only in [supported
   * locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
   *
   * @generated from field: bool site_to_site_data_transfer = 2;
   */
  siteToSiteDataTransfer: boolean;

  /**
   * Output only. The VPC network where these VLAN attachments are located.
   *
   * @generated from field: string vpc_network = 3;
   */
  vpcNetwork: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.LinkedInterconnectAttachments.
 * Use `create(LinkedInterconnectAttachmentsSchema)` to create a new message.
 */
export const LinkedInterconnectAttachmentsSchema: GenMessage<LinkedInterconnectAttachments> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 33);

/**
 * A collection of router appliance instances. If you configure multiple router
 * appliance instances to receive data from the same set of sites outside of
 * Google Cloud, we recommend that you associate those instances with the same
 * spoke.
 *
 * @generated from message google.cloud.networkconnectivity.v1.LinkedRouterApplianceInstances
 */
export type LinkedRouterApplianceInstances = Message<"google.cloud.networkconnectivity.v1.LinkedRouterApplianceInstances"> & {
  /**
   * The list of router appliance instances.
   *
   * @generated from field: repeated google.cloud.networkconnectivity.v1.RouterApplianceInstance instances = 1;
   */
  instances: RouterApplianceInstance[];

  /**
   * A value that controls whether site-to-site data transfer is enabled for
   * these resources. Data transfer is available only in [supported
   * locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
   *
   * @generated from field: bool site_to_site_data_transfer = 2;
   */
  siteToSiteDataTransfer: boolean;

  /**
   * Output only. The VPC network where these router appliance instances are
   * located.
   *
   * @generated from field: string vpc_network = 3;
   */
  vpcNetwork: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.LinkedRouterApplianceInstances.
 * Use `create(LinkedRouterApplianceInstancesSchema)` to create a new message.
 */
export const LinkedRouterApplianceInstancesSchema: GenMessage<LinkedRouterApplianceInstances> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 34);

/**
 * An existing VPC network.
 *
 * @generated from message google.cloud.networkconnectivity.v1.LinkedVpcNetwork
 */
export type LinkedVpcNetwork = Message<"google.cloud.networkconnectivity.v1.LinkedVpcNetwork"> & {
  /**
   * Required. The URI of the VPC network resource.
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * Optional. IP ranges encompassing the subnets to be excluded from peering.
   *
   * @generated from field: repeated string exclude_export_ranges = 2;
   */
  excludeExportRanges: string[];
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.LinkedVpcNetwork.
 * Use `create(LinkedVpcNetworkSchema)` to create a new message.
 */
export const LinkedVpcNetworkSchema: GenMessage<LinkedVpcNetwork> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 35);

/**
 * A router appliance instance is a Compute Engine virtual machine (VM) instance
 * that acts as a BGP speaker. A router appliance instance is specified by the
 * URI of the VM and the internal IP address of one of the VM's network
 * interfaces.
 *
 * @generated from message google.cloud.networkconnectivity.v1.RouterApplianceInstance
 */
export type RouterApplianceInstance = Message<"google.cloud.networkconnectivity.v1.RouterApplianceInstance"> & {
  /**
   * The URI of the VM.
   *
   * @generated from field: string virtual_machine = 1;
   */
  virtualMachine: string;

  /**
   * The IP address on the VM to use for peering.
   *
   * @generated from field: string ip_address = 3;
   */
  ipAddress: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.RouterApplianceInstance.
 * Use `create(RouterApplianceInstanceSchema)` to create a new message.
 */
export const RouterApplianceInstanceSchema: GenMessage<RouterApplianceInstance> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 36);

/**
 * Metadata about locations
 *
 * @generated from message google.cloud.networkconnectivity.v1.LocationMetadata
 */
export type LocationMetadata = Message<"google.cloud.networkconnectivity.v1.LocationMetadata"> & {
  /**
   * List of supported features
   *
   * @generated from field: repeated google.cloud.networkconnectivity.v1.LocationFeature location_features = 1;
   */
  locationFeatures: LocationFeature[];
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.LocationMetadata.
 * Use `create(LocationMetadataSchema)` to create a new message.
 */
export const LocationMetadataSchema: GenMessage<LocationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 37);

/**
 * @generated from message google.cloud.networkconnectivity.v1.NextHopVpcNetwork
 */
export type NextHopVpcNetwork = Message<"google.cloud.networkconnectivity.v1.NextHopVpcNetwork"> & {
  /**
   * The URI of the VPC network resource
   *
   * @generated from field: string uri = 1;
   */
  uri: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.NextHopVpcNetwork.
 * Use `create(NextHopVpcNetworkSchema)` to create a new message.
 */
export const NextHopVpcNetworkSchema: GenMessage<NextHopVpcNetwork> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 38);

/**
 * Summarizes information about the spokes associated with a hub.
 * The summary includes a count of spokes according to type
 * and according to state. If any spokes are inactive,
 * the summary also lists the reasons they are inactive,
 * including a count for each reason.
 *
 * @generated from message google.cloud.networkconnectivity.v1.SpokeSummary
 */
export type SpokeSummary = Message<"google.cloud.networkconnectivity.v1.SpokeSummary"> & {
  /**
   * Output only. Counts the number of spokes of each type that are
   * associated with a specific hub.
   *
   * @generated from field: repeated google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1;
   */
  spokeTypeCounts: SpokeSummary_SpokeTypeCount[];

  /**
   * Output only. Counts the number of spokes that are in each state
   * and associated with a given hub.
   *
   * @generated from field: repeated google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2;
   */
  spokeStateCounts: SpokeSummary_SpokeStateCount[];

  /**
   * Output only. Counts the number of spokes that are inactive for each
   * possible reason and associated with a given hub.
   *
   * @generated from field: repeated google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3;
   */
  spokeStateReasonCounts: SpokeSummary_SpokeStateReasonCount[];
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.SpokeSummary.
 * Use `create(SpokeSummarySchema)` to create a new message.
 */
export const SpokeSummarySchema: GenMessage<SpokeSummary> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 39);

/**
 * The number of spokes of a given type that are associated
 * with a specific hub. The type indicates what kind of
 * resource is associated with the spoke.
 *
 * @generated from message google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount
 */
export type SpokeSummary_SpokeTypeCount = Message<"google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount"> & {
  /**
   * Output only. The type of the spokes.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.SpokeType spoke_type = 1;
   */
  spokeType: SpokeType;

  /**
   * Output only. The total number of spokes of this type that are
   * associated with the hub.
   *
   * @generated from field: int64 count = 2;
   */
  count: bigint;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.
 * Use `create(SpokeSummary_SpokeTypeCountSchema)` to create a new message.
 */
export const SpokeSummary_SpokeTypeCountSchema: GenMessage<SpokeSummary_SpokeTypeCount> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 39, 0);

/**
 * The number of spokes that are in a particular state
 * and associated with a given hub.
 *
 * @generated from message google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount
 */
export type SpokeSummary_SpokeStateCount = Message<"google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount"> & {
  /**
   * Output only. The state of the spokes.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.State state = 1;
   */
  state: State;

  /**
   * Output only. The total number of spokes that are in this state
   * and associated with a given hub.
   *
   * @generated from field: int64 count = 2;
   */
  count: bigint;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.
 * Use `create(SpokeSummary_SpokeStateCountSchema)` to create a new message.
 */
export const SpokeSummary_SpokeStateCountSchema: GenMessage<SpokeSummary_SpokeStateCount> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 39, 1);

/**
 * The number of spokes in the hub that are inactive for this reason.
 *
 * @generated from message google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
 */
export type SpokeSummary_SpokeStateReasonCount = Message<"google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount"> & {
  /**
   * Output only. The reason that a spoke is inactive.
   *
   * @generated from field: google.cloud.networkconnectivity.v1.Spoke.StateReason.Code state_reason_code = 1;
   */
  stateReasonCode: Spoke_StateReason_Code;

  /**
   * Output only. The total number of spokes that are inactive for a
   * particular reason and associated with a given hub.
   *
   * @generated from field: int64 count = 2;
   */
  count: bigint;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.
 * Use `create(SpokeSummary_SpokeStateReasonCountSchema)` to create a new message.
 */
export const SpokeSummary_SpokeStateReasonCountSchema: GenMessage<SpokeSummary_SpokeStateReasonCount> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 39, 2);

/**
 * The request for
 * [HubService.GetGroup][google.cloud.networkconnectivity.v1.HubService.GetGroup].
 *
 * @generated from message google.cloud.networkconnectivity.v1.GetGroupRequest
 */
export type GetGroupRequest = Message<"google.cloud.networkconnectivity.v1.GetGroupRequest"> & {
  /**
   * Required. The name of the route table resource.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.networkconnectivity.v1.GetGroupRequest.
 * Use `create(GetGroupRequestSchema)` to create a new message.
 */
export const GetGroupRequestSchema: GenMessage<GetGroupRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_networkconnectivity_v1_hub, 40);

/**
 * Supported features for a location
 *
 * @generated from enum google.cloud.networkconnectivity.v1.LocationFeature
 */
export enum LocationFeature {
  /**
   * No publicly supported feature in this location
   *
   * @generated from enum value: LOCATION_FEATURE_UNSPECIFIED = 0;
   */
  LOCATION_FEATURE_UNSPECIFIED = 0,

  /**
   * Site-to-cloud spokes are supported in this location
   *
   * @generated from enum value: SITE_TO_CLOUD_SPOKES = 1;
   */
  SITE_TO_CLOUD_SPOKES = 1,

  /**
   * Site-to-site spokes are supported in this location
   *
   * @generated from enum value: SITE_TO_SITE_SPOKES = 2;
   */
  SITE_TO_SITE_SPOKES = 2,
}

/**
 * Describes the enum google.cloud.networkconnectivity.v1.LocationFeature.
 */
export const LocationFeatureSchema: GenEnum<LocationFeature> = /*@__PURE__*/
  enumDesc(file_google_cloud_networkconnectivity_v1_hub, 0);

/**
 * The route's type
 *
 * @generated from enum google.cloud.networkconnectivity.v1.RouteType
 */
export enum RouteType {
  /**
   * No route type information specified
   *
   * @generated from enum value: ROUTE_TYPE_UNSPECIFIED = 0;
   */
  ROUTE_TYPE_UNSPECIFIED = 0,

  /**
   * The route leads to a destination within the primary address range of the
   * VPC network's subnet.
   *
   * @generated from enum value: VPC_PRIMARY_SUBNET = 1;
   */
  VPC_PRIMARY_SUBNET = 1,

  /**
   * The route leads to a destination within the secondary address range of the
   * VPC network's subnet.
   *
   * @generated from enum value: VPC_SECONDARY_SUBNET = 2;
   */
  VPC_SECONDARY_SUBNET = 2,
}

/**
 * Describes the enum google.cloud.networkconnectivity.v1.RouteType.
 */
export const RouteTypeSchema: GenEnum<RouteType> = /*@__PURE__*/
  enumDesc(file_google_cloud_networkconnectivity_v1_hub, 1);

/**
 * The State enum represents the lifecycle stage of a Network Connectivity
 * Center resource.
 *
 * @generated from enum google.cloud.networkconnectivity.v1.State
 */
export enum State {
  /**
   * No state information available
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The resource's create operation is in progress.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The resource is active
   *
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * The resource's delete operation is in progress.
   *
   * @generated from enum value: DELETING = 3;
   */
  DELETING = 3,

  /**
   * The resource's accept operation is in progress.
   *
   * @generated from enum value: ACCEPTING = 8;
   */
  ACCEPTING = 8,

  /**
   * The resource's reject operation is in progress.
   *
   * @generated from enum value: REJECTING = 9;
   */
  REJECTING = 9,

  /**
   * The resource's update operation is in progress.
   *
   * @generated from enum value: UPDATING = 6;
   */
  UPDATING = 6,

  /**
   * The resource is inactive.
   *
   * @generated from enum value: INACTIVE = 7;
   */
  INACTIVE = 7,

  /**
   * The hub associated with this spoke resource has been deleted.
   * This state applies to spoke resources only.
   *
   * @generated from enum value: OBSOLETE = 10;
   */
  OBSOLETE = 10,
}

/**
 * Describes the enum google.cloud.networkconnectivity.v1.State.
 */
export const StateSchema: GenEnum<State> = /*@__PURE__*/
  enumDesc(file_google_cloud_networkconnectivity_v1_hub, 2);

/**
 * The SpokeType enum represents the type of spoke. The type
 * reflects the kind of resource that a spoke is associated with.
 *
 * @generated from enum google.cloud.networkconnectivity.v1.SpokeType
 */
export enum SpokeType {
  /**
   * Unspecified spoke type.
   *
   * @generated from enum value: SPOKE_TYPE_UNSPECIFIED = 0;
   */
  SPOKE_TYPE_UNSPECIFIED = 0,

  /**
   * Spokes associated with VPN tunnels.
   *
   * @generated from enum value: VPN_TUNNEL = 1;
   */
  VPN_TUNNEL = 1,

  /**
   * Spokes associated with VLAN attachments.
   *
   * @generated from enum value: INTERCONNECT_ATTACHMENT = 2;
   */
  INTERCONNECT_ATTACHMENT = 2,

  /**
   * Spokes associated with router appliance instances.
   *
   * @generated from enum value: ROUTER_APPLIANCE = 3;
   */
  ROUTER_APPLIANCE = 3,

  /**
   * Spokes associated with VPC networks.
   *
   * @generated from enum value: VPC_NETWORK = 4;
   */
  VPC_NETWORK = 4,
}

/**
 * Describes the enum google.cloud.networkconnectivity.v1.SpokeType.
 */
export const SpokeTypeSchema: GenEnum<SpokeType> = /*@__PURE__*/
  enumDesc(file_google_cloud_networkconnectivity_v1_hub, 3);

/**
 * Network Connectivity Center is a hub-and-spoke abstraction for network
 * connectivity management in Google Cloud. It reduces operational complexity
 * through a simple, centralized connectivity management model.
 *
 * @generated from service google.cloud.networkconnectivity.v1.HubService
 */
export const HubService: GenService<{
  /**
   * Lists the Network Connectivity Center hubs associated with a given project.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.ListHubs
   */
  listHubs: {
    methodKind: "unary";
    input: typeof ListHubsRequestSchema;
    output: typeof ListHubsResponseSchema;
  },
  /**
   * Gets details about a Network Connectivity Center hub.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.GetHub
   */
  getHub: {
    methodKind: "unary";
    input: typeof GetHubRequestSchema;
    output: typeof HubSchema;
  },
  /**
   * Creates a new Network Connectivity Center hub in the specified project.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.CreateHub
   */
  createHub: {
    methodKind: "unary";
    input: typeof CreateHubRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the description and/or labels of a Network Connectivity Center
   * hub.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.UpdateHub
   */
  updateHub: {
    methodKind: "unary";
    input: typeof UpdateHubRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a Network Connectivity Center hub.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.DeleteHub
   */
  deleteHub: {
    methodKind: "unary";
    input: typeof DeleteHubRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists the Network Connectivity Center spokes associated with a
   * specified hub and location. The list includes both spokes that are attached
   * to the hub and spokes that have been proposed but not yet accepted.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.ListHubSpokes
   */
  listHubSpokes: {
    methodKind: "unary";
    input: typeof ListHubSpokesRequestSchema;
    output: typeof ListHubSpokesResponseSchema;
  },
  /**
   * Lists the Network Connectivity Center spokes in a specified project and
   * location.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.ListSpokes
   */
  listSpokes: {
    methodKind: "unary";
    input: typeof ListSpokesRequestSchema;
    output: typeof ListSpokesResponseSchema;
  },
  /**
   * Gets details about a Network Connectivity Center spoke.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.GetSpoke
   */
  getSpoke: {
    methodKind: "unary";
    input: typeof GetSpokeRequestSchema;
    output: typeof SpokeSchema;
  },
  /**
   * Creates a Network Connectivity Center spoke.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.CreateSpoke
   */
  createSpoke: {
    methodKind: "unary";
    input: typeof CreateSpokeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a Network Connectivity Center spoke.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.UpdateSpoke
   */
  updateSpoke: {
    methodKind: "unary";
    input: typeof UpdateSpokeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Rejects a Network Connectivity Center spoke from being attached to a hub.
   * If the spoke was previously in the `ACTIVE` state, it
   * transitions to the `INACTIVE` state and is no longer able to
   * connect to other spokes that are attached to the hub.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.RejectHubSpoke
   */
  rejectHubSpoke: {
    methodKind: "unary";
    input: typeof RejectHubSpokeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Accepts a proposal to attach a Network Connectivity Center spoke
   * to a hub.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.AcceptHubSpoke
   */
  acceptHubSpoke: {
    methodKind: "unary";
    input: typeof AcceptHubSpokeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a Network Connectivity Center spoke.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.DeleteSpoke
   */
  deleteSpoke: {
    methodKind: "unary";
    input: typeof DeleteSpokeRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets details about a Network Connectivity Center route table.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.GetRouteTable
   */
  getRouteTable: {
    methodKind: "unary";
    input: typeof GetRouteTableRequestSchema;
    output: typeof RouteTableSchema;
  },
  /**
   * Gets details about the specified route.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.GetRoute
   */
  getRoute: {
    methodKind: "unary";
    input: typeof GetRouteRequestSchema;
    output: typeof RouteSchema;
  },
  /**
   * Lists routes in a given project.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.ListRoutes
   */
  listRoutes: {
    methodKind: "unary";
    input: typeof ListRoutesRequestSchema;
    output: typeof ListRoutesResponseSchema;
  },
  /**
   * Lists route tables in a given project.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.ListRouteTables
   */
  listRouteTables: {
    methodKind: "unary";
    input: typeof ListRouteTablesRequestSchema;
    output: typeof ListRouteTablesResponseSchema;
  },
  /**
   * Gets details about a Network Connectivity Center group.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.GetGroup
   */
  getGroup: {
    methodKind: "unary";
    input: typeof GetGroupRequestSchema;
    output: typeof GroupSchema;
  },
  /**
   * Lists groups in a given hub.
   *
   * @generated from rpc google.cloud.networkconnectivity.v1.HubService.ListGroups
   */
  listGroups: {
    methodKind: "unary";
    input: typeof ListGroupsRequestSchema;
    output: typeof ListGroupsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_networkconnectivity_v1_hub, 0);

