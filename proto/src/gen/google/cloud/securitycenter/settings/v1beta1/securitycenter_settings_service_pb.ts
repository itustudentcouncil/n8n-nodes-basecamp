// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/securitycenter/settings/v1beta1/securitycenter_settings_service.proto (package google.cloud.securitycenter.settings.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { ComponentSettings, ComponentSettingsSchema } from "./component_settings_pb";
import { file_google_cloud_securitycenter_settings_v1beta1_component_settings } from "./component_settings_pb";
import type { Detector } from "./detector_pb";
import { file_google_cloud_securitycenter_settings_v1beta1_detector } from "./detector_pb";
import type { Settings, SettingsSchema } from "./settings_pb";
import { file_google_cloud_securitycenter_settings_v1beta1_settings } from "./settings_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/securitycenter/settings/v1beta1/securitycenter_settings_service.proto.
 */
export const file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_securitycenter_settings_v1beta1_component_settings, file_google_cloud_securitycenter_settings_v1beta1_detector, file_google_cloud_securitycenter_settings_v1beta1_settings, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * Request message for GetServiceAccount.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.GetServiceAccountRequest
 */
export type GetServiceAccountRequest = Message<"google.cloud.securitycenter.settings.v1beta1.GetServiceAccountRequest"> & {
  /**
   * Required. The relative resource name of the service account resource.
   * Format:
   *  * `organizations/{organization}/serviceAccount`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.GetServiceAccountRequest.
 * Use `create(GetServiceAccountRequestSchema)` to create a new message.
 */
export const GetServiceAccountRequestSchema: GenMessage<GetServiceAccountRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 0);

/**
 * An organization-level service account to be used by threat detection
 * components.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.ServiceAccount
 */
export type ServiceAccount = Message<"google.cloud.securitycenter.settings.v1beta1.ServiceAccount"> & {
  /**
   * The relative resource name of the service account resource.
   * Format:
   *  * `organizations/{organization}/serviceAccount`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Security Center managed service account for the organization
   * example service-org-1234@scc.iam.gserviceaccount.com
   * This service_account will be stored in the ComponentSettings field for the
   * SCC, SHA, and Infra Automation components.
   *
   * @generated from field: string service_account = 2;
   */
  serviceAccount: string;
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.ServiceAccount.
 * Use `create(ServiceAccountSchema)` to create a new message.
 */
export const ServiceAccountSchema: GenMessage<ServiceAccount> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 1);

/**
 * Request message for GetSettings.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.GetSettingsRequest
 */
export type GetSettingsRequest = Message<"google.cloud.securitycenter.settings.v1beta1.GetSettingsRequest"> & {
  /**
   * Required. The name of the settings to retrieve.
   * Formats:
   *  * `organizations/{organization}/settings`
   *  * `folders/{folder}/settings`
   *  * `projects/{project}/settings`
   *  * `projects/{project}/locations/{location}/clusters/{cluster}/settings`
   *  * `projects/{project}/regions/{region}/clusters/{cluster}/settings`
   *  * `projects/{project}/zones/{zone}/clusters/{cluster}/settings`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.GetSettingsRequest.
 * Use `create(GetSettingsRequestSchema)` to create a new message.
 */
export const GetSettingsRequestSchema: GenMessage<GetSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 2);

/**
 * Request message for UpdateSettings.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.UpdateSettingsRequest
 */
export type UpdateSettingsRequest = Message<"google.cloud.securitycenter.settings.v1beta1.UpdateSettingsRequest"> & {
  /**
   * Required. The settings to update.
   *
   * The settings' `name` field is used to identify the settings to be updated.
   * Formats:
   *  * `organizations/{organization}/settings`
   *  * `folders/{folder}/settings`
   *  * `projects/{project}/settings`
   *  * `projects/{project}/locations/{location}/clusters/{cluster}/settings`
   *  * `projects/{project}/regions/{region}/clusters/{cluster}/settings`
   *  * `projects/{project}/zones/{zone}/clusters/{cluster}/settings`
   *
   * @generated from field: google.cloud.securitycenter.settings.v1beta1.Settings settings = 1;
   */
  settings?: Settings;

  /**
   * The list of fields to be updated on the settings.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.UpdateSettingsRequest.
 * Use `create(UpdateSettingsRequestSchema)` to create a new message.
 */
export const UpdateSettingsRequestSchema: GenMessage<UpdateSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 3);

/**
 * Request message for ResetSettings.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.ResetSettingsRequest
 */
export type ResetSettingsRequest = Message<"google.cloud.securitycenter.settings.v1beta1.ResetSettingsRequest"> & {
  /**
   * Required. The name of the settings to reset.
   * Formats:
   *  * `organizations/{organization}/settings`
   *  * `folders/{folder}/settings`
   *  * `projects/{project}/settings`
   *  * `projects/{project}/locations/{location}/clusters/{cluster}/settings`
   *  * `projects/{project}/regions/{region}/clusters/{cluster}/settings`
   *  * `projects/{project}/zones/{zone}/clusters/{cluster}/settings`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A fingerprint used for optimistic concurrency. If none is provided,
   * then the existing settings will be blindly overwritten.
   *
   * @generated from field: string etag = 2;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.ResetSettingsRequest.
 * Use `create(ResetSettingsRequestSchema)` to create a new message.
 */
export const ResetSettingsRequestSchema: GenMessage<ResetSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 4);

/**
 * Request message for BatchGetSettings.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.BatchGetSettingsRequest
 */
export type BatchGetSettingsRequest = Message<"google.cloud.securitycenter.settings.v1beta1.BatchGetSettingsRequest"> & {
  /**
   * Required. The relative resource name of the organization shared by all of the
   * settings being retrieved.
   * Format:
   *  * `organizations/{organization}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The names of the settings to retrieve.
   * A maximum of 1000 settings can be retrieved in a batch.
   * Formats:
   *  * `organizations/{organization}/settings`
   *  * `folders/{folder}/settings`
   *  * `projects/{project}/settings`
   *  * `projects/{project}/locations/{location}/clusters/{cluster}/settings`
   *  * `projects/{project}/regions/{region}/clusters/{cluster}/settings`
   *  * `projects/{project}/zones/{zone}/clusters/{cluster}/settings`
   *
   * @generated from field: repeated string names = 2;
   */
  names: string[];
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.BatchGetSettingsRequest.
 * Use `create(BatchGetSettingsRequestSchema)` to create a new message.
 */
export const BatchGetSettingsRequestSchema: GenMessage<BatchGetSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 5);

/**
 * Response message for BatchGetSettings.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.BatchGetSettingsResponse
 */
export type BatchGetSettingsResponse = Message<"google.cloud.securitycenter.settings.v1beta1.BatchGetSettingsResponse"> & {
  /**
   * Settings requested.
   *
   * @generated from field: repeated google.cloud.securitycenter.settings.v1beta1.Settings settings = 1;
   */
  settings: Settings[];
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.BatchGetSettingsResponse.
 * Use `create(BatchGetSettingsResponseSchema)` to create a new message.
 */
export const BatchGetSettingsResponseSchema: GenMessage<BatchGetSettingsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 6);

/**
 * Request message for CalculateEffectiveSettings.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.CalculateEffectiveSettingsRequest
 */
export type CalculateEffectiveSettingsRequest = Message<"google.cloud.securitycenter.settings.v1beta1.CalculateEffectiveSettingsRequest"> & {
  /**
   * Required. The name of the effective settings to retrieve.
   * Formats:
   *  * `organizations/{organization}/effectiveSettings`
   *  * `folders/{folder}/effectiveSettings`
   *  * `projects/{project}/effectiveSettings`
   *  * `projects/{project}/locations/{location}/clusters/{cluster}/effectiveSettings`
   *  * `projects/{project}/regions/{region}/clusters/{cluster}/effectiveSettings`
   *  * `projects/{project}/zones/{zone}/clusters/{cluster}/effectiveSettings`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.CalculateEffectiveSettingsRequest.
 * Use `create(CalculateEffectiveSettingsRequestSchema)` to create a new message.
 */
export const CalculateEffectiveSettingsRequestSchema: GenMessage<CalculateEffectiveSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 7);

/**
 * Request message for BatchGetEffectiveSettings.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.BatchCalculateEffectiveSettingsRequest
 */
export type BatchCalculateEffectiveSettingsRequest = Message<"google.cloud.securitycenter.settings.v1beta1.BatchCalculateEffectiveSettingsRequest"> & {
  /**
   * Required. The relative resource name of the organization shared by all of the
   * settings being retrieved.
   * Format:
   *  * `organizations/{organization}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The requests specifying the effective settings to retrieve.
   * A maximum of 1000 effective settings can be retrieved in a batch.
   *
   * @generated from field: repeated google.cloud.securitycenter.settings.v1beta1.CalculateEffectiveSettingsRequest requests = 2;
   */
  requests: CalculateEffectiveSettingsRequest[];
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.BatchCalculateEffectiveSettingsRequest.
 * Use `create(BatchCalculateEffectiveSettingsRequestSchema)` to create a new message.
 */
export const BatchCalculateEffectiveSettingsRequestSchema: GenMessage<BatchCalculateEffectiveSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 8);

/**
 * Response message for BatchGetEffectiveSettings.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.BatchCalculateEffectiveSettingsResponse
 */
export type BatchCalculateEffectiveSettingsResponse = Message<"google.cloud.securitycenter.settings.v1beta1.BatchCalculateEffectiveSettingsResponse"> & {
  /**
   * Settings requested.
   *
   * @generated from field: repeated google.cloud.securitycenter.settings.v1beta1.Settings settings = 1;
   */
  settings: Settings[];
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.BatchCalculateEffectiveSettingsResponse.
 * Use `create(BatchCalculateEffectiveSettingsResponseSchema)` to create a new message.
 */
export const BatchCalculateEffectiveSettingsResponseSchema: GenMessage<BatchCalculateEffectiveSettingsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 9);

/**
 * Request message for GetComponentSettings.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.GetComponentSettingsRequest
 */
export type GetComponentSettingsRequest = Message<"google.cloud.securitycenter.settings.v1beta1.GetComponentSettingsRequest"> & {
  /**
   * Required. The component settings to retrieve.
   *
   * Formats:
   *  * `organizations/{organization}/components/{component}/settings`
   *  * `folders/{folder}/components/{component}/settings`
   *  * `projects/{project}/components/{component}/settings`
   *  * `projects/{project}/locations/{location}/clusters/{cluster}/components/{component}/settings`
   *  * `projects/{project}/regions/{region}/clusters/{cluster}/components/{component}/settings`
   *  * `projects/{project}/zones/{zone}/clusters/{cluster}/components/{component}/settings`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.GetComponentSettingsRequest.
 * Use `create(GetComponentSettingsRequestSchema)` to create a new message.
 */
export const GetComponentSettingsRequestSchema: GenMessage<GetComponentSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 10);

/**
 * Request message for UpdateComponentSettings.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.UpdateComponentSettingsRequest
 */
export type UpdateComponentSettingsRequest = Message<"google.cloud.securitycenter.settings.v1beta1.UpdateComponentSettingsRequest"> & {
  /**
   * Required. The component settings to update.
   *
   * The component settings' `name` field is used to identify the component
   * settings to be updated. Formats:
   *  * `organizations/{organization}/components/{component}/settings`
   *  * `folders/{folder}/components/{component}/settings`
   *  * `projects/{project}/components/{component}/settings`
   *  * `projects/{project}/locations/{location}/clusters/{cluster}/components/{component}/settings`
   *  * `projects/{project}/regions/{region}/clusters/{cluster}/components/{component}/settings`
   *  * `projects/{project}/zones/{zone}/clusters/{cluster}/components/{component}/settings`
   *
   * @generated from field: google.cloud.securitycenter.settings.v1beta1.ComponentSettings component_settings = 1;
   */
  componentSettings?: ComponentSettings;

  /**
   * The list of fields to be updated on the component settings resource.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.UpdateComponentSettingsRequest.
 * Use `create(UpdateComponentSettingsRequestSchema)` to create a new message.
 */
export const UpdateComponentSettingsRequestSchema: GenMessage<UpdateComponentSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 11);

/**
 * Request message for ResetComponentSettings.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.ResetComponentSettingsRequest
 */
export type ResetComponentSettingsRequest = Message<"google.cloud.securitycenter.settings.v1beta1.ResetComponentSettingsRequest"> & {
  /**
   * Required. The component settings to reset.
   *
   * Formats:
   *  * `organizations/{organization}/components/{component}/settings`
   *  * `folders/{folder}/components/{component}/settings`
   *  * `projects/{project}/components/{component}/settings`
   *  * `projects/{project}/locations/{location}/clusters/{cluster}/components/{component}/settings`
   *  * `projects/{project}/regions/{region}/clusters/{cluster}/components/{component}/settings`
   *  * `projects/{project}/zones/{zone}/clusters/{cluster}/components/{component}/settings`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * An fingerprint used for optimistic concurrency. If none is provided,
   * then the existing settings will be blindly overwritten.
   *
   * @generated from field: string etag = 2;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.ResetComponentSettingsRequest.
 * Use `create(ResetComponentSettingsRequestSchema)` to create a new message.
 */
export const ResetComponentSettingsRequestSchema: GenMessage<ResetComponentSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 12);

/**
 * Request message for CalculateEffectiveComponentSettings.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.CalculateEffectiveComponentSettingsRequest
 */
export type CalculateEffectiveComponentSettingsRequest = Message<"google.cloud.securitycenter.settings.v1beta1.CalculateEffectiveComponentSettingsRequest"> & {
  /**
   * Required. The effective component settings to retrieve.
   *
   * Formats:
   *  * `organizations/{organization}/components/{component}/settings`
   *  * `folders/{folder}/components/{component}/settings`
   *  * `projects/{project}/components/{component}/settings`
   *  * `projects/{project}/locations/{location}/clusters/{cluster}/components/{component}/settings`
   *  * `projects/{project}/regions/{region}/clusters/{cluster}/components/{component}/settings`
   *  * `projects/{project}/zones/{zone}/clusters/{cluster}/components/{component}/settings`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.CalculateEffectiveComponentSettingsRequest.
 * Use `create(CalculateEffectiveComponentSettingsRequestSchema)` to create a new message.
 */
export const CalculateEffectiveComponentSettingsRequestSchema: GenMessage<CalculateEffectiveComponentSettingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 13);

/**
 * Request message for ListDetectors.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.ListDetectorsRequest
 */
export type ListDetectorsRequest = Message<"google.cloud.securitycenter.settings.v1beta1.ListDetectorsRequest"> & {
  /**
   * Required. The parent, which owns this collection of detectors.
   * Format:
   *  * `organizations/{organization}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Filters to apply on the response. Filters can be applied on:
   *  * components
   *  * labels
   *  * billing tiers
   *
   * Component filters will retrieve only detectors for the components
   * specified. Label filters will retrieve only detectors that match one of the
   * labels specified. Billing tier filters will retrieve only detectors for
   * that billing tier.
   *
   * The filters
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * The maximum number of detectors to return. The service may return fewer
   * than this value. If unspecified, at most 100 detectors will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListDetectors` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListDetectors` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.ListDetectorsRequest.
 * Use `create(ListDetectorsRequestSchema)` to create a new message.
 */
export const ListDetectorsRequestSchema: GenMessage<ListDetectorsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 14);

/**
 * Response message for ListDetectors.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.ListDetectorsResponse
 */
export type ListDetectorsResponse = Message<"google.cloud.securitycenter.settings.v1beta1.ListDetectorsResponse"> & {
  /**
   * The detectors from the specified organization.
   *
   * @generated from field: repeated google.cloud.securitycenter.settings.v1beta1.Detector detectors = 1;
   */
  detectors: Detector[];

  /**
   * A token that can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.ListDetectorsResponse.
 * Use `create(ListDetectorsResponseSchema)` to create a new message.
 */
export const ListDetectorsResponseSchema: GenMessage<ListDetectorsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 15);

/**
 * Request message for ListComponents.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.ListComponentsRequest
 */
export type ListComponentsRequest = Message<"google.cloud.securitycenter.settings.v1beta1.ListComponentsRequest"> & {
  /**
   * Required. The parent, which owns this collection of components.
   * Format:
   *  * `organizations/{organization}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of components to return. The service may return fewer
   * than this value. If unspecified, at most 100 components will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListComponents` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListComponents` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.ListComponentsRequest.
 * Use `create(ListComponentsRequestSchema)` to create a new message.
 */
export const ListComponentsRequestSchema: GenMessage<ListComponentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 16);

/**
 * Response message for ListComponents.
 *
 * @generated from message google.cloud.securitycenter.settings.v1beta1.ListComponentsResponse
 */
export type ListComponentsResponse = Message<"google.cloud.securitycenter.settings.v1beta1.ListComponentsResponse"> & {
  /**
   * The components from the specified organization.
   *
   * @generated from field: repeated string components = 1;
   */
  components: string[];

  /**
   * A token that can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.securitycenter.settings.v1beta1.ListComponentsResponse.
 * Use `create(ListComponentsResponseSchema)` to create a new message.
 */
export const ListComponentsResponseSchema: GenMessage<ListComponentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 17);

/**
 * ## API Overview
 *
 * The SecurityCenterSettingsService is a sub-api of
 * `securitycenter.googleapis.com`. The service provides methods to manage
 * Security Center Settings, and Component Settings for GCP organizations,
 * folders, projects, and clusters.
 *
 * @generated from service google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService
 */
export const SecurityCenterSettingsService: GenService<{
  /**
   * Retrieves the organizations service account, if it exists, otherwise it
   * creates the organization service account. This API is idempotent and
   * will only create a service account once. On subsequent calls it will
   * return the previously created service account.  SHA, SCC and CTD Infra
   * Automation will use this SA.  This SA will not have any permissions when
   * created.  The UI will provision this via IAM or the user will using
   * their own internal process. This API only creates SAs on the organization.
   * Folders are not supported and projects will use per-project SAs associated
   * with APIs enabled on a project. This API will be called by the UX
   * onboarding workflow.
   *
   * @generated from rpc google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService.GetServiceAccount
   */
  getServiceAccount: {
    methodKind: "unary";
    input: typeof GetServiceAccountRequestSchema;
    output: typeof ServiceAccountSchema;
  },
  /**
   * Gets the Settings.
   *
   * @generated from rpc google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService.GetSettings
   */
  getSettings: {
    methodKind: "unary";
    input: typeof GetSettingsRequestSchema;
    output: typeof SettingsSchema;
  },
  /**
   * Updates the Settings.
   *
   * @generated from rpc google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService.UpdateSettings
   */
  updateSettings: {
    methodKind: "unary";
    input: typeof UpdateSettingsRequestSchema;
    output: typeof SettingsSchema;
  },
  /**
   * Reset the organization, folder or project's settings and return
   * the settings of just that resource to the default.
   *
   * Settings are present at the organization, folder, project, and cluster
   * levels. Using Reset on a sub-organization level will remove that resource's
   * override and result in the parent's settings being used (eg: if Reset on a
   * cluster, project settings will be used).
   *
   * Using Reset on organization will remove the override that was set and
   * result in default settings being used.
   *
   * @generated from rpc google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService.ResetSettings
   */
  resetSettings: {
    methodKind: "unary";
    input: typeof ResetSettingsRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Gets a list of settings.
   *
   * @generated from rpc google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService.BatchGetSettings
   */
  batchGetSettings: {
    methodKind: "unary";
    input: typeof BatchGetSettingsRequestSchema;
    output: typeof BatchGetSettingsResponseSchema;
  },
  /**
   * CalculateEffectiveSettings looks up all of the Security Center
   * Settings resources in the GCP resource hierarchy, and calculates the
   * effective settings on that resource by applying the following rules:
   *  * Settings provided closer to the target resource take precedence over
   *    those further away (e.g. folder will override organization level
   *    settings).
   *  * Product defaults can be overridden at org, folder, project, and cluster
   *  levels.
   *  * Detectors will be filtered out if they belong to a billing tier the
   *  customer
   *    has not configured.
   *
   * @generated from rpc google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService.CalculateEffectiveSettings
   */
  calculateEffectiveSettings: {
    methodKind: "unary";
    input: typeof CalculateEffectiveSettingsRequestSchema;
    output: typeof SettingsSchema;
  },
  /**
   * Gets a list of effective settings.
   *
   * @generated from rpc google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService.BatchCalculateEffectiveSettings
   */
  batchCalculateEffectiveSettings: {
    methodKind: "unary";
    input: typeof BatchCalculateEffectiveSettingsRequestSchema;
    output: typeof BatchCalculateEffectiveSettingsResponseSchema;
  },
  /**
   * Gets the Component Settings.
   *
   * @generated from rpc google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService.GetComponentSettings
   */
  getComponentSettings: {
    methodKind: "unary";
    input: typeof GetComponentSettingsRequestSchema;
    output: typeof ComponentSettingsSchema;
  },
  /**
   * Updates the Component Settings.
   *
   * @generated from rpc google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService.UpdateComponentSettings
   */
  updateComponentSettings: {
    methodKind: "unary";
    input: typeof UpdateComponentSettingsRequestSchema;
    output: typeof ComponentSettingsSchema;
  },
  /**
   * Reset the organization, folder or project's component settings and return
   * the settings to the default. Settings are present at the
   * organization, folder and project levels. Using Reset for a folder or
   * project will remove the override that was set and result in the
   * organization-level settings being used.
   *
   * @generated from rpc google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService.ResetComponentSettings
   */
  resetComponentSettings: {
    methodKind: "unary";
    input: typeof ResetComponentSettingsRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Gets the Effective Component Settings.
   *
   * @generated from rpc google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService.CalculateEffectiveComponentSettings
   */
  calculateEffectiveComponentSettings: {
    methodKind: "unary";
    input: typeof CalculateEffectiveComponentSettingsRequestSchema;
    output: typeof ComponentSettingsSchema;
  },
  /**
   * Retrieves an unordered list of available detectors.
   *
   * @generated from rpc google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService.ListDetectors
   */
  listDetectors: {
    methodKind: "unary";
    input: typeof ListDetectorsRequestSchema;
    output: typeof ListDetectorsResponseSchema;
  },
  /**
   * Retrieves an unordered list of available SCC components.
   *
   * @generated from rpc google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService.ListComponents
   */
  listComponents: {
    methodKind: "unary";
    input: typeof ListComponentsRequestSchema;
    output: typeof ListComponentsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_securitycenter_settings_v1beta1_securitycenter_settings_service, 0);

