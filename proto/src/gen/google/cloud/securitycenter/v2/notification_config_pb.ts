// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/securitycenter/v2/notification_config.proto (package google.cloud.securitycenter.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/securitycenter/v2/notification_config.proto.
 */
export const file_google_cloud_securitycenter_v2_notification_config: GenFile = /*@__PURE__*/
  fileDesc("Cjhnb29nbGUvY2xvdWQvc2VjdXJpdHljZW50ZXIvdjIvbm90aWZpY2F0aW9uX2NvbmZpZy5wcm90bxIeZ29vZ2xlLmNsb3VkLnNlY3VyaXR5Y2VudGVyLnYyIokFChJOb3RpZmljYXRpb25Db25maWcSEQoEbmFtZRgBIAEoCUID4EEIEhMKC2Rlc2NyaXB0aW9uGAIgASgJEjYKDHB1YnN1Yl90b3BpYxgDIAEoCUIg+kEdChtwdWJzdWIuZ29vZ2xlYXBpcy5jb20vVG9waWMSHAoPc2VydmljZV9hY2NvdW50GAQgASgJQgPgQQMSXgoQc3RyZWFtaW5nX2NvbmZpZxgFIAEoCzJCLmdvb2dsZS5jbG91ZC5zZWN1cml0eWNlbnRlci52Mi5Ob3RpZmljYXRpb25Db25maWcuU3RyZWFtaW5nQ29uZmlnSAAaIQoPU3RyZWFtaW5nQ29uZmlnEg4KBmZpbHRlchgBIAEoCTrgAupB3AIKMHNlY3VyaXR5Y2VudGVyLmdvb2dsZWFwaXMuY29tL05vdGlmaWNhdGlvbkNvbmZpZxJbb3JnYW5pemF0aW9ucy97b3JnYW5pemF0aW9ufS9sb2NhdGlvbnMve2xvY2F0aW9ufS9ub3RpZmljYXRpb25Db25maWdzL3tub3RpZmljYXRpb25fY29uZmlnfRJPZm9sZGVycy97Zm9sZGVyfS9sb2NhdGlvbnMve2xvY2F0aW9ufS9ub3RpZmljYXRpb25Db25maWdzL3tub3RpZmljYXRpb25fY29uZmlnfRJRcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L25vdGlmaWNhdGlvbkNvbmZpZ3Mve25vdGlmaWNhdGlvbl9jb25maWd9KhNub3RpZmljYXRpb25Db25maWdzMhJub3RpZmljYXRpb25Db25maWdCDwoNbm90aWZ5X2NvbmZpZ0K0AgoiY29tLmdvb2dsZS5jbG91ZC5zZWN1cml0eWNlbnRlci52MkIXTm90aWZpY2F0aW9uQ29uZmlnUHJvdG9QAVpKY2xvdWQuZ29vZ2xlLmNvbS9nby9zZWN1cml0eWNlbnRlci9hcGl2Mi9zZWN1cml0eWNlbnRlcnBiO3NlY3VyaXR5Y2VudGVycGKqAh5Hb29nbGUuQ2xvdWQuU2VjdXJpdHlDZW50ZXIuVjLKAh5Hb29nbGVcQ2xvdWRcU2VjdXJpdHlDZW50ZXJcVjLqAiFHb29nbGU6OkNsb3VkOjpTZWN1cml0eUNlbnRlcjo6VjLqQUAKG3B1YnN1Yi5nb29nbGVhcGlzLmNvbS9Ub3BpYxIhcHJvamVjdHMve3Byb2plY3R9L3RvcGljcy97dG9waWN9YgZwcm90bzM", [file_google_api_field_behavior, file_google_api_resource]);

/**
 * Cloud Security Command Center (Cloud SCC) notification configs.
 *
 * A notification config is a Cloud SCC resource that contains the configuration
 * to send notifications for create/update events of findings, assets and etc.
 *
 * @generated from message google.cloud.securitycenter.v2.NotificationConfig
 */
export type NotificationConfig = Message<"google.cloud.securitycenter.v2.NotificationConfig"> & {
  /**
   * Identifier. The relative resource name of this notification config. See:
   * https://cloud.google.com/apis/design/resource_names#relative_resource_name
   * The following list shows some examples:
   * +
   * `organizations/{organization_id}/locations/{location_id}/notificationConfigs/notify_public_bucket`
   * +
   * `folders/{folder_id}/locations/{location_id}/notificationConfigs/notify_public_bucket`
   * +
   * `projects/{project_id}/locations/{location_id}/notificationConfigs/notify_public_bucket`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The description of the notification config (max of 1024 characters).
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * The Pub/Sub topic to send notifications to. Its format is
   * "projects/[project_id]/topics/[topic]".
   *
   * @generated from field: string pubsub_topic = 3;
   */
  pubsubTopic: string;

  /**
   * Output only. The service account that needs "pubsub.topics.publish"
   * permission to publish to the Pub/Sub topic.
   *
   * @generated from field: string service_account = 4;
   */
  serviceAccount: string;

  /**
   * The config for triggering notifications.
   *
   * @generated from oneof google.cloud.securitycenter.v2.NotificationConfig.notify_config
   */
  notifyConfig: {
    /**
     * The config for triggering streaming-based notifications.
     *
     * @generated from field: google.cloud.securitycenter.v2.NotificationConfig.StreamingConfig streaming_config = 5;
     */
    value: NotificationConfig_StreamingConfig;
    case: "streamingConfig";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.securitycenter.v2.NotificationConfig.
 * Use `create(NotificationConfigSchema)` to create a new message.
 */
export const NotificationConfigSchema: GenMessage<NotificationConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_v2_notification_config, 0);

/**
 * The config for streaming-based notifications, which send each event as soon
 * as it is detected.
 *
 * @generated from message google.cloud.securitycenter.v2.NotificationConfig.StreamingConfig
 */
export type NotificationConfig_StreamingConfig = Message<"google.cloud.securitycenter.v2.NotificationConfig.StreamingConfig"> & {
  /**
   * Expression that defines the filter to apply across create/update events
   * of assets or findings as specified by the event type. The expression is a
   * list of zero or more restrictions combined via logical operators `AND`
   * and `OR`. Parentheses are supported, and `OR` has higher precedence than
   * `AND`.
   *
   * Restrictions have the form `<field> <operator> <value>` and may have a
   * `-` character in front of them to indicate negation. The fields map to
   * those defined in the corresponding resource.
   *
   * The supported operators are:
   *
   * * `=` for all value types.
   * * `>`, `<`, `>=`, `<=` for integer values.
   * * `:`, meaning substring matching, for strings.
   *
   * The supported value types are:
   *
   * * string literals in quotes.
   * * integer literals without quotes.
   * * boolean literals `true` and `false` without quotes.
   *
   * @generated from field: string filter = 1;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.securitycenter.v2.NotificationConfig.StreamingConfig.
 * Use `create(NotificationConfig_StreamingConfigSchema)` to create a new message.
 */
export const NotificationConfig_StreamingConfigSchema: GenMessage<NotificationConfig_StreamingConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_v2_notification_config, 0, 0);

