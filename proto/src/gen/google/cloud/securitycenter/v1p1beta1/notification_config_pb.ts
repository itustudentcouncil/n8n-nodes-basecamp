// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/securitycenter/v1p1beta1/notification_config.proto (package google.cloud.securitycenter.v1p1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/securitycenter/v1p1beta1/notification_config.proto.
 */
export const file_google_cloud_securitycenter_v1p1beta1_notification_config: GenFile = /*@__PURE__*/
  fileDesc("Cj9nb29nbGUvY2xvdWQvc2VjdXJpdHljZW50ZXIvdjFwMWJldGExL25vdGlmaWNhdGlvbl9jb25maWcucHJvdG8SJWdvb2dsZS5jbG91ZC5zZWN1cml0eWNlbnRlci52MXAxYmV0YTEitgQKEk5vdGlmaWNhdGlvbkNvbmZpZxIMCgRuYW1lGAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIgASgJElcKCmV2ZW50X3R5cGUYAyABKA4yQy5nb29nbGUuY2xvdWQuc2VjdXJpdHljZW50ZXIudjFwMWJldGExLk5vdGlmaWNhdGlvbkNvbmZpZy5FdmVudFR5cGUSNgoMcHVic3ViX3RvcGljGAQgASgJQiD6QR0KG3B1YnN1Yi5nb29nbGVhcGlzLmNvbS9Ub3BpYxIcCg9zZXJ2aWNlX2FjY291bnQYBSABKAlCA+BBAxJlChBzdHJlYW1pbmdfY29uZmlnGAYgASgLMkkuZ29vZ2xlLmNsb3VkLnNlY3VyaXR5Y2VudGVyLnYxcDFiZXRhMS5Ob3RpZmljYXRpb25Db25maWcuU3RyZWFtaW5nQ29uZmlnSAAaIQoPU3RyZWFtaW5nQ29uZmlnEg4KBmZpbHRlchgBIAEoCSI0CglFdmVudFR5cGUSGgoWRVZFTlRfVFlQRV9VTlNQRUNJRklFRBAAEgsKB0ZJTkRJTkcQATp96kF6CjBzZWN1cml0eWNlbnRlci5nb29nbGVhcGlzLmNvbS9Ob3RpZmljYXRpb25Db25maWcSRm9yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbn0vbm90aWZpY2F0aW9uQ29uZmlncy97bm90aWZpY2F0aW9uX2NvbmZpZ31CDwoNbm90aWZ5X2NvbmZpZ0K+AgopY29tLmdvb2dsZS5jbG91ZC5zZWN1cml0eWNlbnRlci52MXAxYmV0YTFQAVpRY2xvdWQuZ29vZ2xlLmNvbS9nby9zZWN1cml0eWNlbnRlci9hcGl2MXAxYmV0YTEvc2VjdXJpdHljZW50ZXJwYjtzZWN1cml0eWNlbnRlcnBiqgIlR29vZ2xlLkNsb3VkLlNlY3VyaXR5Q2VudGVyLlYxUDFCZXRhMcoCJUdvb2dsZVxDbG91ZFxTZWN1cml0eUNlbnRlclxWMXAxYmV0YTHqAihHb29nbGU6OkNsb3VkOjpTZWN1cml0eUNlbnRlcjo6VjFwMWJldGEx6kFAChtwdWJzdWIuZ29vZ2xlYXBpcy5jb20vVG9waWMSIXByb2plY3RzL3twcm9qZWN0fS90b3BpY3Mve3RvcGljfWIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource]);

/**
 * Security Command Center notification configs.
 *
 * A notification config is a Security Command Center resource that contains the
 * configuration to send notifications for create/update events of findings,
 * assets and etc.
 *
 * @generated from message google.cloud.securitycenter.v1p1beta1.NotificationConfig
 */
export type NotificationConfig = Message<"google.cloud.securitycenter.v1p1beta1.NotificationConfig"> & {
  /**
   * The relative resource name of this notification config. See:
   * https://cloud.google.com/apis/design/resource_names#relative_resource_name
   * Example:
   * "organizations/{organization_id}/notificationConfigs/notify_public_bucket".
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The description of the notification config (max of 1024 characters).
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * The type of events the config is for, e.g. FINDING.
   *
   * @generated from field: google.cloud.securitycenter.v1p1beta1.NotificationConfig.EventType event_type = 3;
   */
  eventType: NotificationConfig_EventType;

  /**
   * The Pub/Sub topic to send notifications to. Its format is
   * "projects/[project_id]/topics/[topic]".
   *
   * @generated from field: string pubsub_topic = 4;
   */
  pubsubTopic: string;

  /**
   * Output only. The service account that needs "pubsub.topics.publish"
   * permission to publish to the Pub/Sub topic.
   *
   * @generated from field: string service_account = 5;
   */
  serviceAccount: string;

  /**
   * The config for triggering notifications.
   *
   * @generated from oneof google.cloud.securitycenter.v1p1beta1.NotificationConfig.notify_config
   */
  notifyConfig: {
    /**
     * The config for triggering streaming-based notifications.
     *
     * @generated from field: google.cloud.securitycenter.v1p1beta1.NotificationConfig.StreamingConfig streaming_config = 6;
     */
    value: NotificationConfig_StreamingConfig;
    case: "streamingConfig";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.securitycenter.v1p1beta1.NotificationConfig.
 * Use `create(NotificationConfigSchema)` to create a new message.
 */
export const NotificationConfigSchema: GenMessage<NotificationConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_v1p1beta1_notification_config, 0);

/**
 * The config for streaming-based notifications, which send each event as soon
 * as it is detected.
 *
 * @generated from message google.cloud.securitycenter.v1p1beta1.NotificationConfig.StreamingConfig
 */
export type NotificationConfig_StreamingConfig = Message<"google.cloud.securitycenter.v1p1beta1.NotificationConfig.StreamingConfig"> & {
  /**
   * Expression that defines the filter to apply across create/update events
   * of assets or findings as specified by the event type. The expression is a
   * list of zero or more restrictions combined via logical operators `AND`
   * and `OR`. Parentheses are supported, and `OR` has higher precedence than
   * `AND`.
   *
   * Restrictions have the form `<field> <operator> <value>` and may have a
   * `-` character in front of them to indicate negation. The fields map to
   * those defined in the corresponding resource.
   *
   * The supported operators are:
   *
   * * `=` for all value types.
   * * `>`, `<`, `>=`, `<=` for integer values.
   * * `:`, meaning substring matching, for strings.
   *
   * The supported value types are:
   *
   * * string literals in quotes.
   * * integer literals without quotes.
   * * boolean literals `true` and `false` without quotes.
   *
   * @generated from field: string filter = 1;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.securitycenter.v1p1beta1.NotificationConfig.StreamingConfig.
 * Use `create(NotificationConfig_StreamingConfigSchema)` to create a new message.
 */
export const NotificationConfig_StreamingConfigSchema: GenMessage<NotificationConfig_StreamingConfig> = /*@__PURE__*/
  messageDesc(file_google_cloud_securitycenter_v1p1beta1_notification_config, 0, 0);

/**
 * The type of events.
 *
 * @generated from enum google.cloud.securitycenter.v1p1beta1.NotificationConfig.EventType
 */
export enum NotificationConfig_EventType {
  /**
   * Unspecified event type.
   *
   * @generated from enum value: EVENT_TYPE_UNSPECIFIED = 0;
   */
  EVENT_TYPE_UNSPECIFIED = 0,

  /**
   * Events for findings.
   *
   * @generated from enum value: FINDING = 1;
   */
  FINDING = 1,
}

/**
 * Describes the enum google.cloud.securitycenter.v1p1beta1.NotificationConfig.EventType.
 */
export const NotificationConfig_EventTypeSchema: GenEnum<NotificationConfig_EventType> = /*@__PURE__*/
  enumDesc(file_google_cloud_securitycenter_v1p1beta1_notification_config, 0, 0);

