// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/vmwareengine/v1/vmwareengine.proto (package google.cloud.vmwareengine.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_field_info } from "../../../api/field_info_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Cluster, ClusterSchema, CredentialsSchema, DnsBindPermissionSchema, DnsForwarding, DnsForwardingSchema, ExternalAccessRule, ExternalAccessRuleSchema, ExternalAddress, ExternalAddressSchema, HcxActivationKey, HcxActivationKeySchema, LoggingServer, LoggingServerSchema, ManagementDnsZoneBinding, ManagementDnsZoneBindingSchema, NetworkPeering, NetworkPeeringSchema, NetworkPolicy, NetworkPolicySchema, Node, NodeSchema, NodeType, NodeTypeSchema, PeeringRoute, Principal, PrivateCloud, PrivateCloudSchema, PrivateConnection, PrivateConnectionSchema, Subnet, SubnetSchema, VmwareEngineNetwork, VmwareEngineNetworkSchema } from "./vmwareengine_resources_pb";
import { file_google_cloud_vmwareengine_v1_vmwareengine_resources } from "./vmwareengine_resources_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/vmwareengine/v1/vmwareengine.proto.
 */
export const file_google_cloud_vmwareengine_v1_vmwareengine: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_field_info, file_google_api_resource, file_google_cloud_vmwareengine_v1_vmwareengine_resources, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Request message for
 * [VmwareEngine.ListPrivateClouds][google.cloud.vmwareengine.v1.VmwareEngine.ListPrivateClouds]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
 */
export type ListPrivateCloudsRequest = Message<"google.cloud.vmwareengine.v1.ListPrivateCloudsRequest"> & {
  /**
   * Required. The resource name of the private cloud to be queried for
   * clusters. Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of private clouds to return in one page.
   * The service may return fewer than this value.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListPrivateClouds` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListPrivateClouds` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter expression that matches resources returned in the response.
   * The expression must specify the field name, a comparison operator, and the
   * value that you want to use for filtering. The value must be a string, a
   * number, or a boolean. The comparison operator must be `=`, `!=`, `>`, or
   * `<`.
   *
   * For example, if you are filtering a list of private clouds, you can exclude
   * the ones named `example-pc` by specifying `name != "example-pc"`.
   *
   * You can also filter nested fields. For example, you could specify
   * `networkConfig.managementCidr = "192.168.0.0/24"` to include private clouds
   * only if they have a matching address in their network configuration.
   *
   * To filter on multiple expressions, provide each separate expression within
   * parentheses. For example:
   * ```
   * (name = "example-pc")
   * (createTime > "2021-04-12T08:15:10.40Z")
   * ```
   *
   * By default, each expression is an `AND` expression. However, you can
   * include `AND` and `OR` expressions explicitly. For example:
   * ```
   * (name = "private-cloud-1") AND
   * (createTime > "2021-04-12T08:15:10.40Z") OR
   * (name = "private-cloud-2")
   * ```
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Sorts list results by a certain order. By default, returned results are
   * ordered by `name` in ascending order. You can also sort results in
   * descending order based on the `name` value using `orderBy="name desc"`.
   * Currently, only ordering by `name` is supported.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListPrivateCloudsRequest.
 * Use `create(ListPrivateCloudsRequestSchema)` to create a new message.
 */
export const ListPrivateCloudsRequestSchema: GenMessage<ListPrivateCloudsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 0);

/**
 * Response message for
 * [VmwareEngine.ListPrivateClouds][google.cloud.vmwareengine.v1.VmwareEngine.ListPrivateClouds]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListPrivateCloudsResponse
 */
export type ListPrivateCloudsResponse = Message<"google.cloud.vmwareengine.v1.ListPrivateCloudsResponse"> & {
  /**
   * A list of private clouds.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.PrivateCloud private_clouds = 1;
   */
  privateClouds: PrivateCloud[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached when making an aggregated query using
   * wildcards.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListPrivateCloudsResponse.
 * Use `create(ListPrivateCloudsResponseSchema)` to create a new message.
 */
export const ListPrivateCloudsResponseSchema: GenMessage<ListPrivateCloudsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 1);

/**
 * Request message for
 * [VmwareEngine.GetPrivateCloud][google.cloud.vmwareengine.v1.VmwareEngine.GetPrivateCloud]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetPrivateCloudRequest
 */
export type GetPrivateCloudRequest = Message<"google.cloud.vmwareengine.v1.GetPrivateCloudRequest"> & {
  /**
   * Required. The resource name of the private cloud to retrieve.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetPrivateCloudRequest.
 * Use `create(GetPrivateCloudRequestSchema)` to create a new message.
 */
export const GetPrivateCloudRequestSchema: GenMessage<GetPrivateCloudRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 2);

/**
 * Request message for
 * [VmwareEngine.CreatePrivateCloud][google.cloud.vmwareengine.v1.VmwareEngine.CreatePrivateCloud]
 *
 * @generated from message google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
 */
export type CreatePrivateCloudRequest = Message<"google.cloud.vmwareengine.v1.CreatePrivateCloudRequest"> & {
  /**
   * Required. The resource name of the location to create the new
   * private cloud in. Resource names are schemeless URIs that follow the
   * conventions in https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The user-provided identifier of the private cloud to be created.
   * This identifier must be unique among each `PrivateCloud` within the parent
   * and becomes the final token in the name URI.
   * The identifier must meet the following requirements:
   *
   * * Only contains 1-63 alphanumeric characters and hyphens
   * * Begins with an alphabetical character
   * * Ends with a non-hyphen character
   * * Not formatted as a UUID
   * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   * (section 3.5)
   *
   * @generated from field: string private_cloud_id = 2;
   */
  privateCloudId: string;

  /**
   * Required. The initial description of the new private cloud.
   *
   * @generated from field: google.cloud.vmwareengine.v1.PrivateCloud private_cloud = 3;
   */
  privateCloud?: PrivateCloud;

  /**
   * Optional. The request ID must be a valid UUID with the exception that zero
   * UUID is not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;

  /**
   * Optional. True if you want the request to be validated and not executed;
   * false otherwise.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.CreatePrivateCloudRequest.
 * Use `create(CreatePrivateCloudRequestSchema)` to create a new message.
 */
export const CreatePrivateCloudRequestSchema: GenMessage<CreatePrivateCloudRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 3);

/**
 * Request message for
 * [VmwareEngine.UpdatePrivateCloud][google.cloud.vmwareengine.v1.VmwareEngine.UpdatePrivateCloud]
 *
 * @generated from message google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest
 */
export type UpdatePrivateCloudRequest = Message<"google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest"> & {
  /**
   * Required. Private cloud description.
   *
   * @generated from field: google.cloud.vmwareengine.v1.PrivateCloud private_cloud = 1;
   */
  privateCloud?: PrivateCloud;

  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * `PrivateCloud` resource by the update. The fields specified in `updateMask`
   * are relative to the resource, not the full request. A field will be
   * overwritten if it is in the mask. If the user does not provide a mask then
   * all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * Optional. The request ID must be a valid UUID with the exception that zero
   * UUID is not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest.
 * Use `create(UpdatePrivateCloudRequestSchema)` to create a new message.
 */
export const UpdatePrivateCloudRequestSchema: GenMessage<UpdatePrivateCloudRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 4);

/**
 * Request message for
 * [VmwareEngine.DeletePrivateCloud][google.cloud.vmwareengine.v1.VmwareEngine.DeletePrivateCloud]
 *
 * @generated from message google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
 */
export type DeletePrivateCloudRequest = Message<"google.cloud.vmwareengine.v1.DeletePrivateCloudRequest"> & {
  /**
   * Required. The resource name of the private cloud to delete.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The request ID must be a valid UUID with the exception that zero
   * UUID is not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;

  /**
   * Optional. If set to true, cascade delete is enabled and all children of
   * this private cloud resource are also deleted. When this flag is set to
   * false, the private cloud will not be deleted if there are any children
   * other than the management cluster. The management cluster is always
   * deleted.
   *
   * @generated from field: bool force = 3;
   */
  force: boolean;

  /**
   * Optional. Time delay of the deletion specified in hours. The default value
   * is `3`. Specifying a non-zero value for this field changes the value of
   * `PrivateCloud.state` to `DELETED` and sets `expire_time` to the planned
   * deletion time. Deletion can be cancelled before `expire_time` elapses using
   * [VmwareEngine.UndeletePrivateCloud][google.cloud.vmwareengine.v1.VmwareEngine.UndeletePrivateCloud].
   * Specifying a value of `0` for this field instead begins the deletion
   * process and ceases billing immediately. During the final deletion process,
   * the value of `PrivateCloud.state` becomes `PURGING`.
   *
   * @generated from field: optional int32 delay_hours = 4;
   */
  delayHours?: number;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.DeletePrivateCloudRequest.
 * Use `create(DeletePrivateCloudRequestSchema)` to create a new message.
 */
export const DeletePrivateCloudRequestSchema: GenMessage<DeletePrivateCloudRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 5);

/**
 * Request message for
 * [VmwareEngine.UndeletePrivateCloud][google.cloud.vmwareengine.v1.VmwareEngine.UndeletePrivateCloud]
 *
 * @generated from message google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest
 */
export type UndeletePrivateCloudRequest = Message<"google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest"> & {
  /**
   * Required. The resource name of the private cloud scheduled for deletion.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The request ID must be a valid UUID with the exception that zero
   * UUID is not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest.
 * Use `create(UndeletePrivateCloudRequestSchema)` to create a new message.
 */
export const UndeletePrivateCloudRequestSchema: GenMessage<UndeletePrivateCloudRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 6);

/**
 * Request message for
 * [VmwareEngine.ListClusters][google.cloud.vmwareengine.v1.VmwareEngine.ListClusters]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListClustersRequest
 */
export type ListClustersRequest = Message<"google.cloud.vmwareengine.v1.ListClustersRequest"> & {
  /**
   * Required. The resource name of the private cloud to query for clusters.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of clusters to return in one page.
   * The service may return fewer than this value.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListClusters` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListClusters`
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   *
   * To filter on multiple expressions, provide each separate expression within
   * parentheses. For example:
   * ```
   * (name = "example-cluster")
   * (nodeCount = "3")
   * ```
   *
   * By default, each expression is an `AND` expression. However, you can
   * include `AND` and `OR` expressions explicitly. For example:
   * ```
   * (name = "example-cluster-1") AND
   * (createTime > "2021-04-12T08:15:10.40Z") OR
   * (name = "example-cluster-2")
   * ```
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Sorts list results by a certain order. By default, returned results are
   * ordered by `name` in ascending order. You can also sort results in
   * descending order based on the `name` value using `orderBy="name desc"`.
   * Currently, only ordering by `name` is supported.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListClustersRequest.
 * Use `create(ListClustersRequestSchema)` to create a new message.
 */
export const ListClustersRequestSchema: GenMessage<ListClustersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 7);

/**
 * Response message for
 * [VmwareEngine.ListClusters][google.cloud.vmwareengine.v1.VmwareEngine.ListClusters]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListClustersResponse
 */
export type ListClustersResponse = Message<"google.cloud.vmwareengine.v1.ListClustersResponse"> & {
  /**
   * A list of private cloud clusters.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.Cluster clusters = 1;
   */
  clusters: Cluster[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached when making an aggregated query using
   * wildcards.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListClustersResponse.
 * Use `create(ListClustersResponseSchema)` to create a new message.
 */
export const ListClustersResponseSchema: GenMessage<ListClustersResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 8);

/**
 * Request message for
 * [VmwareEngine.GetCluster][google.cloud.vmwareengine.v1.VmwareEngine.GetCluster]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetClusterRequest
 */
export type GetClusterRequest = Message<"google.cloud.vmwareengine.v1.GetClusterRequest"> & {
  /**
   * Required. The cluster resource name to retrieve.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetClusterRequest.
 * Use `create(GetClusterRequestSchema)` to create a new message.
 */
export const GetClusterRequestSchema: GenMessage<GetClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 9);

/**
 * Request message for
 * [VmwareEngine.CreateCluster][google.cloud.vmwareengine.v1.VmwareEngine.CreateCluster]
 *
 * @generated from message google.cloud.vmwareengine.v1.CreateClusterRequest
 */
export type CreateClusterRequest = Message<"google.cloud.vmwareengine.v1.CreateClusterRequest"> & {
  /**
   * Required. The resource name of the private cloud to create a new cluster
   * in. Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The user-provided identifier of the new `Cluster`.
   * This identifier must be unique among clusters within the parent and becomes
   * the final token in the name URI.
   * The identifier must meet the following requirements:
   *
   * * Only contains 1-63 alphanumeric characters and hyphens
   * * Begins with an alphabetical character
   * * Ends with a non-hyphen character
   * * Not formatted as a UUID
   * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   * (section 3.5)
   *
   * @generated from field: string cluster_id = 2;
   */
  clusterId: string;

  /**
   * Required. The initial description of the new cluster.
   *
   * @generated from field: google.cloud.vmwareengine.v1.Cluster cluster = 3;
   */
  cluster?: Cluster;

  /**
   * Optional. The request ID must be a valid UUID with the exception that zero
   * UUID is not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;

  /**
   * Optional. True if you want the request to be validated and not executed;
   * false otherwise.
   *
   * @generated from field: bool validate_only = 5;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.CreateClusterRequest.
 * Use `create(CreateClusterRequestSchema)` to create a new message.
 */
export const CreateClusterRequestSchema: GenMessage<CreateClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 10);

/**
 * Request message for
 * [VmwareEngine.UpdateCluster][google.cloud.vmwareengine.v1.VmwareEngine.UpdateCluster]
 *
 * @generated from message google.cloud.vmwareengine.v1.UpdateClusterRequest
 */
export type UpdateClusterRequest = Message<"google.cloud.vmwareengine.v1.UpdateClusterRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * `Cluster` resource by the update. The fields specified in the `updateMask`
   * are relative to the resource, not the full request. A field will be
   * overwritten if it is in the mask. If the user does not provide a mask then
   * all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. The description of the cluster.
   *
   * @generated from field: google.cloud.vmwareengine.v1.Cluster cluster = 2;
   */
  cluster?: Cluster;

  /**
   * Optional. The request ID must be a valid UUID with the exception that
   * zero UUID is not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;

  /**
   * Optional. True if you want the request to be validated and not executed;
   * false otherwise.
   *
   * @generated from field: bool validate_only = 4;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.UpdateClusterRequest.
 * Use `create(UpdateClusterRequestSchema)` to create a new message.
 */
export const UpdateClusterRequestSchema: GenMessage<UpdateClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 11);

/**
 * Request message for
 * [VmwareEngine.DeleteCluster][google.cloud.vmwareengine.v1.VmwareEngine.DeleteCluster]
 *
 * @generated from message google.cloud.vmwareengine.v1.DeleteClusterRequest
 */
export type DeleteClusterRequest = Message<"google.cloud.vmwareengine.v1.DeleteClusterRequest"> & {
  /**
   * Required. The resource name of the cluster to delete.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. The request ID must be a valid UUID with the exception that zero
   * UUID is not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.DeleteClusterRequest.
 * Use `create(DeleteClusterRequestSchema)` to create a new message.
 */
export const DeleteClusterRequestSchema: GenMessage<DeleteClusterRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 12);

/**
 * Request message for
 * [VmwareEngine.ListNodes][google.cloud.vmwareengine.v1.VmwareEngine.ListNodes]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListNodesRequest
 */
export type ListNodesRequest = Message<"google.cloud.vmwareengine.v1.ListNodesRequest"> & {
  /**
   * Required. The resource name of the cluster to be queried for nodes.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of nodes to return in one page.
   * The service may return fewer than this value.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListNodes` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListNodes` must match the call that provided the page
   * token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListNodesRequest.
 * Use `create(ListNodesRequestSchema)` to create a new message.
 */
export const ListNodesRequestSchema: GenMessage<ListNodesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 13);

/**
 * Response message for
 * [VmwareEngine.ListNodes][google.cloud.vmwareengine.v1.VmwareEngine.ListNodes]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListNodesResponse
 */
export type ListNodesResponse = Message<"google.cloud.vmwareengine.v1.ListNodesResponse"> & {
  /**
   * The nodes.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.Node nodes = 1;
   */
  nodes: Node[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListNodesResponse.
 * Use `create(ListNodesResponseSchema)` to create a new message.
 */
export const ListNodesResponseSchema: GenMessage<ListNodesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 14);

/**
 * Request message for
 * [VmwareEngine.GetNode][google.cloud.vmwareengine.v1.VmwareEngine.GetNode]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetNodeRequest
 */
export type GetNodeRequest = Message<"google.cloud.vmwareengine.v1.GetNodeRequest"> & {
  /**
   * Required. The resource name of the node to retrieve.
   * For example:
   * `projects/{project}/locations/{location}/privateClouds/{private_cloud}/clusters/{cluster}/nodes/{node}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetNodeRequest.
 * Use `create(GetNodeRequestSchema)` to create a new message.
 */
export const GetNodeRequestSchema: GenMessage<GetNodeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 15);

/**
 * Request message for
 * [VmwareEngine.ListExternalAddresses][google.cloud.vmwareengine.v1.VmwareEngine.ListExternalAddresses]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListExternalAddressesRequest
 */
export type ListExternalAddressesRequest = Message<"google.cloud.vmwareengine.v1.ListExternalAddressesRequest"> & {
  /**
   * Required. The resource name of the private cloud to be queried for
   * external IP addresses.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of external IP addresses to return in one page.
   * The service may return fewer than this value.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListExternalAddresses` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListExternalAddresses` must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter expression that matches resources returned in the response.
   * The expression must specify the field name, a comparison
   * operator, and the value that you want to use for filtering. The value
   * must be a string, a number, or a boolean. The comparison operator
   * must be `=`, `!=`, `>`, or `<`.
   *
   * For example, if you are filtering a list of IP addresses, you can
   * exclude the ones named `example-ip` by specifying
   * `name != "example-ip"`.
   *
   * To filter on multiple expressions, provide each separate expression within
   * parentheses. For example:
   * ```
   * (name = "example-ip")
   * (createTime > "2021-04-12T08:15:10.40Z")
   * ```
   *
   * By default, each expression is an `AND` expression. However, you
   * can include `AND` and `OR` expressions explicitly.
   * For example:
   * ```
   * (name = "example-ip-1") AND
   * (createTime > "2021-04-12T08:15:10.40Z") OR
   * (name = "example-ip-2")
   * ```
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Sorts list results by a certain order. By default, returned results
   * are ordered by `name` in ascending order.
   * You can also sort results in descending order based on the `name` value
   * using `orderBy="name desc"`.
   * Currently, only ordering by `name` is supported.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListExternalAddressesRequest.
 * Use `create(ListExternalAddressesRequestSchema)` to create a new message.
 */
export const ListExternalAddressesRequestSchema: GenMessage<ListExternalAddressesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 16);

/**
 * Response message for
 * [VmwareEngine.ListExternalAddresses][google.cloud.vmwareengine.v1.VmwareEngine.ListExternalAddresses]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListExternalAddressesResponse
 */
export type ListExternalAddressesResponse = Message<"google.cloud.vmwareengine.v1.ListExternalAddressesResponse"> & {
  /**
   * A list of external IP addresses.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.ExternalAddress external_addresses = 1;
   */
  externalAddresses: ExternalAddress[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached when making an aggregated query using
   * wildcards.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListExternalAddressesResponse.
 * Use `create(ListExternalAddressesResponseSchema)` to create a new message.
 */
export const ListExternalAddressesResponseSchema: GenMessage<ListExternalAddressesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 17);

/**
 * Request message for
 * [VmwareEngine.FetchNetworkPolicyExternalAddresses][google.cloud.vmwareengine.v1.VmwareEngine.FetchNetworkPolicyExternalAddresses]
 *
 * @generated from message google.cloud.vmwareengine.v1.FetchNetworkPolicyExternalAddressesRequest
 */
export type FetchNetworkPolicyExternalAddressesRequest = Message<"google.cloud.vmwareengine.v1.FetchNetworkPolicyExternalAddressesRequest"> & {
  /**
   * Required. The resource name of the network policy to query for assigned
   * external IP addresses. Resource names are schemeless URIs that follow the
   * conventions in https://cloud.google.com/apis/design/resource_names. For
   * example:
   * `projects/my-project/locations/us-central1/networkPolicies/my-policy`
   *
   * @generated from field: string network_policy = 1;
   */
  networkPolicy: string;

  /**
   * The maximum number of external IP addresses to return in one page.
   * The service may return fewer than this value.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous
   * `FetchNetworkPolicyExternalAddresses` call. Provide this to retrieve the
   * subsequent page.
   *
   * When paginating, all parameters provided to
   * `FetchNetworkPolicyExternalAddresses`, except for `page_size` and
   * `page_token`, must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.FetchNetworkPolicyExternalAddressesRequest.
 * Use `create(FetchNetworkPolicyExternalAddressesRequestSchema)` to create a new message.
 */
export const FetchNetworkPolicyExternalAddressesRequestSchema: GenMessage<FetchNetworkPolicyExternalAddressesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 18);

/**
 * Response message for
 * [VmwareEngine.FetchNetworkPolicyExternalAddresses][google.cloud.vmwareengine.v1.VmwareEngine.FetchNetworkPolicyExternalAddresses]
 *
 * @generated from message google.cloud.vmwareengine.v1.FetchNetworkPolicyExternalAddressesResponse
 */
export type FetchNetworkPolicyExternalAddressesResponse = Message<"google.cloud.vmwareengine.v1.FetchNetworkPolicyExternalAddressesResponse"> & {
  /**
   * A list of external IP addresses assigned to VMware workload VMs within the
   * scope of the given network policy.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.ExternalAddress external_addresses = 1;
   */
  externalAddresses: ExternalAddress[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.FetchNetworkPolicyExternalAddressesResponse.
 * Use `create(FetchNetworkPolicyExternalAddressesResponseSchema)` to create a new message.
 */
export const FetchNetworkPolicyExternalAddressesResponseSchema: GenMessage<FetchNetworkPolicyExternalAddressesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 19);

/**
 * Request message for
 * [VmwareEngine.GetExternalAddress][google.cloud.vmwareengine.v1.VmwareEngine.GetExternalAddress]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetExternalAddressRequest
 */
export type GetExternalAddressRequest = Message<"google.cloud.vmwareengine.v1.GetExternalAddressRequest"> & {
  /**
   * Required. The resource name of the external IP address to retrieve.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/externalAddresses/my-ip`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetExternalAddressRequest.
 * Use `create(GetExternalAddressRequestSchema)` to create a new message.
 */
export const GetExternalAddressRequestSchema: GenMessage<GetExternalAddressRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 20);

/**
 * Request message for
 * [VmwareEngine.CreateExternalAddress][google.cloud.vmwareengine.v1.VmwareEngine.CreateExternalAddress]
 *
 * @generated from message google.cloud.vmwareengine.v1.CreateExternalAddressRequest
 */
export type CreateExternalAddressRequest = Message<"google.cloud.vmwareengine.v1.CreateExternalAddressRequest"> & {
  /**
   * Required. The resource name of the private cloud
   * to create a new external IP address in.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The initial description of a new external IP address.
   *
   * @generated from field: google.cloud.vmwareengine.v1.ExternalAddress external_address = 2;
   */
  externalAddress?: ExternalAddress;

  /**
   * Required. The user-provided identifier of the `ExternalAddress` to be
   * created. This identifier must be unique among `ExternalAddress` resources
   * within the parent and becomes the final token in the name URI. The
   * identifier must meet the following requirements:
   *
   * * Only contains 1-63 alphanumeric characters and hyphens
   * * Begins with an alphabetical character
   * * Ends with a non-hyphen character
   * * Not formatted as a UUID
   * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   * (section 3.5)
   *
   * @generated from field: string external_address_id = 3;
   */
  externalAddressId: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if the original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.CreateExternalAddressRequest.
 * Use `create(CreateExternalAddressRequestSchema)` to create a new message.
 */
export const CreateExternalAddressRequestSchema: GenMessage<CreateExternalAddressRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 21);

/**
 * Request message for
 * [VmwareEngine.UpdateExternalAddress][google.cloud.vmwareengine.v1.VmwareEngine.UpdateExternalAddress]
 *
 * @generated from message google.cloud.vmwareengine.v1.UpdateExternalAddressRequest
 */
export type UpdateExternalAddressRequest = Message<"google.cloud.vmwareengine.v1.UpdateExternalAddressRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * `ExternalAddress` resource by the update.
   * The fields specified in the `update_mask` are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. External IP address description.
   *
   * @generated from field: google.cloud.vmwareengine.v1.ExternalAddress external_address = 2;
   */
  externalAddress?: ExternalAddress;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if the original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.UpdateExternalAddressRequest.
 * Use `create(UpdateExternalAddressRequestSchema)` to create a new message.
 */
export const UpdateExternalAddressRequestSchema: GenMessage<UpdateExternalAddressRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 22);

/**
 * Request message for
 * [VmwareEngine.DeleteExternalAddress][google.cloud.vmwareengine.v1.VmwareEngine.DeleteExternalAddress]
 *
 * @generated from message google.cloud.vmwareengine.v1.DeleteExternalAddressRequest
 */
export type DeleteExternalAddressRequest = Message<"google.cloud.vmwareengine.v1.DeleteExternalAddressRequest"> & {
  /**
   * Required. The resource name of the external IP address to delete.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/externalAddresses/my-ip`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if the original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.DeleteExternalAddressRequest.
 * Use `create(DeleteExternalAddressRequestSchema)` to create a new message.
 */
export const DeleteExternalAddressRequestSchema: GenMessage<DeleteExternalAddressRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 23);

/**
 * Request message for
 * [VmwareEngine.ListSubnets][google.cloud.vmwareengine.v1.VmwareEngine.ListSubnets]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListSubnetsRequest
 */
export type ListSubnetsRequest = Message<"google.cloud.vmwareengine.v1.ListSubnetsRequest"> & {
  /**
   * Required. The resource name of the private cloud to be queried for
   * subnets.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of subnets to return in one page.
   * The service may return fewer than this value.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListSubnetsRequest` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListSubnetsRequest` must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListSubnetsRequest.
 * Use `create(ListSubnetsRequestSchema)` to create a new message.
 */
export const ListSubnetsRequestSchema: GenMessage<ListSubnetsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 24);

/**
 * Response message for
 * [VmwareEngine.ListSubnets][google.cloud.vmwareengine.v1.VmwareEngine.ListSubnets]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListSubnetsResponse
 */
export type ListSubnetsResponse = Message<"google.cloud.vmwareengine.v1.ListSubnetsResponse"> & {
  /**
   * A list of subnets.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.Subnet subnets = 1;
   */
  subnets: Subnet[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached when making an aggregated query using
   * wildcards.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListSubnetsResponse.
 * Use `create(ListSubnetsResponseSchema)` to create a new message.
 */
export const ListSubnetsResponseSchema: GenMessage<ListSubnetsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 25);

/**
 * Request message for
 * [VmwareEngine.GetSubnet][google.cloud.vmwareengine.v1.VmwareEngine.GetSubnet]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetSubnetRequest
 */
export type GetSubnetRequest = Message<"google.cloud.vmwareengine.v1.GetSubnetRequest"> & {
  /**
   * Required. The resource name of the subnet to retrieve.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/subnets/my-subnet`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetSubnetRequest.
 * Use `create(GetSubnetRequestSchema)` to create a new message.
 */
export const GetSubnetRequestSchema: GenMessage<GetSubnetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 26);

/**
 * Request message for
 * [VmwareEngine.UpdateSubnet][google.cloud.vmwareengine.v1.VmwareEngine.UpdateSubnet]
 *
 * @generated from message google.cloud.vmwareengine.v1.UpdateSubnetRequest
 */
export type UpdateSubnetRequest = Message<"google.cloud.vmwareengine.v1.UpdateSubnetRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * `Subnet` resource by the update.
   * The fields specified in the `update_mask` are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. Subnet description.
   *
   * @generated from field: google.cloud.vmwareengine.v1.Subnet subnet = 2;
   */
  subnet?: Subnet;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.UpdateSubnetRequest.
 * Use `create(UpdateSubnetRequestSchema)` to create a new message.
 */
export const UpdateSubnetRequestSchema: GenMessage<UpdateSubnetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 27);

/**
 * Request message for
 * [VmwareEngine.ListExternalAccessRules][google.cloud.vmwareengine.v1.VmwareEngine.ListExternalAccessRules]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListExternalAccessRulesRequest
 */
export type ListExternalAccessRulesRequest = Message<"google.cloud.vmwareengine.v1.ListExternalAccessRulesRequest"> & {
  /**
   * Required. The resource name of the network policy to query for external
   * access firewall rules. Resource names are schemeless URIs that follow the
   * conventions in https://cloud.google.com/apis/design/resource_names. For
   * example:
   * `projects/my-project/locations/us-central1/networkPolicies/my-policy`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of external access rules to return in one page.
   * The service may return fewer than this value.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListExternalAccessRulesRequest`
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListExternalAccessRulesRequest` must match the call that provided the page
   * token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter expression that matches resources returned in the response.
   * The expression must specify the field name, a comparison
   * operator, and the value that you want to use for filtering. The value
   * must be a string, a number, or a boolean. The comparison operator
   * must be `=`, `!=`, `>`, or `<`.
   *
   * For example, if you are filtering a list of external access rules, you can
   * exclude the ones named `example-rule` by specifying
   * `name != "example-rule"`.
   *
   * To filter on multiple expressions, provide each separate expression within
   * parentheses. For example:
   * ```
   * (name = "example-rule")
   * (createTime > "2021-04-12T08:15:10.40Z")
   * ```
   *
   * By default, each expression is an `AND` expression. However, you
   * can include `AND` and `OR` expressions explicitly.
   * For example:
   * ```
   * (name = "example-rule-1") AND
   * (createTime > "2021-04-12T08:15:10.40Z") OR
   * (name = "example-rule-2")
   * ```
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Sorts list results by a certain order. By default, returned results
   * are ordered by `name` in ascending order.
   * You can also sort results in descending order based on the `name` value
   * using `orderBy="name desc"`.
   * Currently, only ordering by `name` is supported.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListExternalAccessRulesRequest.
 * Use `create(ListExternalAccessRulesRequestSchema)` to create a new message.
 */
export const ListExternalAccessRulesRequestSchema: GenMessage<ListExternalAccessRulesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 28);

/**
 * Response message for
 * [VmwareEngine.ListExternalAccessRules][google.cloud.vmwareengine.v1.VmwareEngine.ListExternalAccessRules]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListExternalAccessRulesResponse
 */
export type ListExternalAccessRulesResponse = Message<"google.cloud.vmwareengine.v1.ListExternalAccessRulesResponse"> & {
  /**
   * A list of external access firewall rules.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.ExternalAccessRule external_access_rules = 1;
   */
  externalAccessRules: ExternalAccessRule[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached when making an aggregated query using
   * wildcards.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListExternalAccessRulesResponse.
 * Use `create(ListExternalAccessRulesResponseSchema)` to create a new message.
 */
export const ListExternalAccessRulesResponseSchema: GenMessage<ListExternalAccessRulesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 29);

/**
 * Request message for
 * [VmwareEngine.GetExternalAccessRule][google.cloud.vmwareengine.v1.VmwareEngine.GetExternalAccessRule]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetExternalAccessRuleRequest
 */
export type GetExternalAccessRuleRequest = Message<"google.cloud.vmwareengine.v1.GetExternalAccessRuleRequest"> & {
  /**
   * Required. The resource name of the external access firewall rule to
   * retrieve. Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1/networkPolicies/my-policy/externalAccessRules/my-rule`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetExternalAccessRuleRequest.
 * Use `create(GetExternalAccessRuleRequestSchema)` to create a new message.
 */
export const GetExternalAccessRuleRequestSchema: GenMessage<GetExternalAccessRuleRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 30);

/**
 * Request message for
 * [VmwareEngine.CreateExternalAccessRule][google.cloud.vmwareengine.v1.VmwareEngine.CreateExternalAccessRule]
 *
 * @generated from message google.cloud.vmwareengine.v1.CreateExternalAccessRuleRequest
 */
export type CreateExternalAccessRuleRequest = Message<"google.cloud.vmwareengine.v1.CreateExternalAccessRuleRequest"> & {
  /**
   * Required. The resource name of the network policy
   * to create a new external access firewall rule in.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1/networkPolicies/my-policy`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The initial description of a new external access rule.
   *
   * @generated from field: google.cloud.vmwareengine.v1.ExternalAccessRule external_access_rule = 2;
   */
  externalAccessRule?: ExternalAccessRule;

  /**
   * Required. The user-provided identifier of the `ExternalAccessRule` to be
   * created. This identifier must be unique among `ExternalAccessRule`
   * resources within the parent and becomes the final token in the name URI.
   * The identifier must meet the following requirements:
   *
   * * Only contains 1-63 alphanumeric characters and hyphens
   * * Begins with an alphabetical character
   * * Ends with a non-hyphen character
   * * Not formatted as a UUID
   * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   * (section 3.5)
   *
   * @generated from field: string external_access_rule_id = 3;
   */
  externalAccessRuleId: string;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if the original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.CreateExternalAccessRuleRequest.
 * Use `create(CreateExternalAccessRuleRequestSchema)` to create a new message.
 */
export const CreateExternalAccessRuleRequestSchema: GenMessage<CreateExternalAccessRuleRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 31);

/**
 * Request message for
 * [VmwareEngine.UpdateExternalAccessRule][google.cloud.vmwareengine.v1.VmwareEngine.UpdateExternalAccessRule]
 *
 * @generated from message google.cloud.vmwareengine.v1.UpdateExternalAccessRuleRequest
 */
export type UpdateExternalAccessRuleRequest = Message<"google.cloud.vmwareengine.v1.UpdateExternalAccessRuleRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * `ExternalAccessRule` resource by the update.
   * The fields specified in the `update_mask` are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. Description of the external access rule.
   *
   * @generated from field: google.cloud.vmwareengine.v1.ExternalAccessRule external_access_rule = 2;
   */
  externalAccessRule?: ExternalAccessRule;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if the original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.UpdateExternalAccessRuleRequest.
 * Use `create(UpdateExternalAccessRuleRequestSchema)` to create a new message.
 */
export const UpdateExternalAccessRuleRequestSchema: GenMessage<UpdateExternalAccessRuleRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 32);

/**
 * Request message for
 * [VmwareEngine.DeleteExternalAccessRule][google.cloud.vmwareengine.v1.VmwareEngine.DeleteExternalAccessRule]
 *
 * @generated from message google.cloud.vmwareengine.v1.DeleteExternalAccessRuleRequest
 */
export type DeleteExternalAccessRuleRequest = Message<"google.cloud.vmwareengine.v1.DeleteExternalAccessRuleRequest"> & {
  /**
   * Required. The resource name of the external access firewall rule to delete.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1/networkPolicies/my-policy/externalAccessRules/my-rule`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if the original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.DeleteExternalAccessRuleRequest.
 * Use `create(DeleteExternalAccessRuleRequestSchema)` to create a new message.
 */
export const DeleteExternalAccessRuleRequestSchema: GenMessage<DeleteExternalAccessRuleRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 33);

/**
 * Request message for
 * [VmwareEngine.ListLoggingServers][google.cloud.vmwareengine.v1.VmwareEngine.ListLoggingServers]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListLoggingServersRequest
 */
export type ListLoggingServersRequest = Message<"google.cloud.vmwareengine.v1.ListLoggingServersRequest"> & {
  /**
   * Required. The resource name of the private cloud to be queried for
   * logging servers.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of logging servers to return in one page.
   * The service may return fewer than this value.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListLoggingServersRequest` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListLoggingServersRequest` must match the call that provided the page
   * token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter expression that matches resources returned in the response.
   * The expression must specify the field name, a comparison
   * operator, and the value that you want to use for filtering. The value
   * must be a string, a number, or a boolean. The comparison operator
   * must be `=`, `!=`, `>`, or `<`.
   *
   * For example, if you are filtering a list of logging servers, you can
   * exclude the ones named `example-server` by specifying
   * `name != "example-server"`.
   *
   * To filter on multiple expressions, provide each separate expression within
   * parentheses. For example:
   * ```
   * (name = "example-server")
   * (createTime > "2021-04-12T08:15:10.40Z")
   * ```
   *
   * By default, each expression is an `AND` expression. However, you
   * can include `AND` and `OR` expressions explicitly.
   * For example:
   * ```
   * (name = "example-server-1") AND
   * (createTime > "2021-04-12T08:15:10.40Z") OR
   * (name = "example-server-2")
   * ```
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Sorts list results by a certain order. By default, returned results
   * are ordered by `name` in ascending order.
   * You can also sort results in descending order based on the `name` value
   * using `orderBy="name desc"`.
   * Currently, only ordering by `name` is supported.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListLoggingServersRequest.
 * Use `create(ListLoggingServersRequestSchema)` to create a new message.
 */
export const ListLoggingServersRequestSchema: GenMessage<ListLoggingServersRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 34);

/**
 * Response message for
 * [VmwareEngine.ListLoggingServers][google.cloud.vmwareengine.v1.VmwareEngine.ListLoggingServers]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListLoggingServersResponse
 */
export type ListLoggingServersResponse = Message<"google.cloud.vmwareengine.v1.ListLoggingServersResponse"> & {
  /**
   * A list of Logging Servers.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.LoggingServer logging_servers = 1;
   */
  loggingServers: LoggingServer[];

  /**
   * A token, which can be send as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached when making an aggregated query using
   * wildcards.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListLoggingServersResponse.
 * Use `create(ListLoggingServersResponseSchema)` to create a new message.
 */
export const ListLoggingServersResponseSchema: GenMessage<ListLoggingServersResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 35);

/**
 * Request message for
 * [VmwareEngine.GetLoggingServer][google.cloud.vmwareengine.v1.VmwareEngine.GetLoggingServer]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetLoggingServerRequest
 */
export type GetLoggingServerRequest = Message<"google.cloud.vmwareengine.v1.GetLoggingServerRequest"> & {
  /**
   * Required. The resource name of the Logging Server to retrieve.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/loggingServers/my-logging-server`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetLoggingServerRequest.
 * Use `create(GetLoggingServerRequestSchema)` to create a new message.
 */
export const GetLoggingServerRequestSchema: GenMessage<GetLoggingServerRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 36);

/**
 * Request message for
 * [VmwareEngine.CreateLoggingServer][google.cloud.vmwareengine.v1.VmwareEngine.CreateLoggingServer]
 *
 * @generated from message google.cloud.vmwareengine.v1.CreateLoggingServerRequest
 */
export type CreateLoggingServerRequest = Message<"google.cloud.vmwareengine.v1.CreateLoggingServerRequest"> & {
  /**
   * Required. The resource name of the private cloud
   * to create a new Logging Server in.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The initial description of a new logging server.
   *
   * @generated from field: google.cloud.vmwareengine.v1.LoggingServer logging_server = 2;
   */
  loggingServer?: LoggingServer;

  /**
   * Required. The user-provided identifier of the `LoggingServer` to be
   * created. This identifier must be unique among `LoggingServer` resources
   * within the parent and becomes the final token in the name URI.
   * The identifier must meet the following requirements:
   *
   * * Only contains 1-63 alphanumeric characters and hyphens
   * * Begins with an alphabetical character
   * * Ends with a non-hyphen character
   * * Not formatted as a UUID
   * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   * (section 3.5)
   *
   * @generated from field: string logging_server_id = 3;
   */
  loggingServerId: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.CreateLoggingServerRequest.
 * Use `create(CreateLoggingServerRequestSchema)` to create a new message.
 */
export const CreateLoggingServerRequestSchema: GenMessage<CreateLoggingServerRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 37);

/**
 * Request message for
 * [VmwareEngine.UpdateLoggingServer][google.cloud.vmwareengine.v1.VmwareEngine.UpdateLoggingServer]
 *
 * @generated from message google.cloud.vmwareengine.v1.UpdateLoggingServerRequest
 */
export type UpdateLoggingServerRequest = Message<"google.cloud.vmwareengine.v1.UpdateLoggingServerRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * `LoggingServer` resource by the update.
   * The fields specified in the `update_mask` are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. Logging server description.
   *
   * @generated from field: google.cloud.vmwareengine.v1.LoggingServer logging_server = 2;
   */
  loggingServer?: LoggingServer;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.UpdateLoggingServerRequest.
 * Use `create(UpdateLoggingServerRequestSchema)` to create a new message.
 */
export const UpdateLoggingServerRequestSchema: GenMessage<UpdateLoggingServerRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 38);

/**
 * Request message for
 * [VmwareEngine.DeleteLoggingServer][google.cloud.vmwareengine.v1.VmwareEngine.DeleteLoggingServer]
 *
 * @generated from message google.cloud.vmwareengine.v1.DeleteLoggingServerRequest
 */
export type DeleteLoggingServerRequest = Message<"google.cloud.vmwareengine.v1.DeleteLoggingServerRequest"> & {
  /**
   * Required. The resource name of the logging server to delete.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/loggingServers/my-logging-server`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.DeleteLoggingServerRequest.
 * Use `create(DeleteLoggingServerRequestSchema)` to create a new message.
 */
export const DeleteLoggingServerRequestSchema: GenMessage<DeleteLoggingServerRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 39);

/**
 * Represents the metadata of the long-running operation.
 *
 * @generated from message google.cloud.vmwareengine.v1.OperationMetadata
 */
export type OperationMetadata = Message<"google.cloud.vmwareengine.v1.OperationMetadata"> & {
  /**
   * Output only. The time the operation was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 1;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time the operation finished running.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Output only. Server-defined resource path for the target of the operation.
   *
   * @generated from field: string target = 3;
   */
  target: string;

  /**
   * Output only. Name of the verb executed by the operation.
   *
   * @generated from field: string verb = 4;
   */
  verb: string;

  /**
   * Output only. Human-readable status of the operation, if any.
   *
   * @generated from field: string status_message = 5;
   */
  statusMessage: string;

  /**
   * Output only. True if the user has requested cancellation
   * of the operation; false otherwise.
   * Operations that have successfully been cancelled
   * have [Operation.error][] value with a
   * [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
   * `Code.CANCELLED`.
   *
   * @generated from field: bool requested_cancellation = 6;
   */
  requestedCancellation: boolean;

  /**
   * Output only. API version used to start the operation.
   *
   * @generated from field: string api_version = 7;
   */
  apiVersion: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.OperationMetadata.
 * Use `create(OperationMetadataSchema)` to create a new message.
 */
export const OperationMetadataSchema: GenMessage<OperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 40);

/**
 * Request message for
 * [VmwareEngine.ListNodeTypes][google.cloud.vmwareengine.v1.VmwareEngine.ListNodeTypes]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListNodeTypesRequest
 */
export type ListNodeTypesRequest = Message<"google.cloud.vmwareengine.v1.ListNodeTypesRequest"> & {
  /**
   * Required. The resource name of the location to be queried for node types.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of node types to return in one page.
   * The service may return fewer than this value.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListNodeTypes` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListNodeTypes` must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter expression that matches resources returned in the response.
   * The expression must specify the field name, a comparison
   * operator, and the value that you want to use for filtering. The value
   * must be a string, a number, or a boolean. The comparison operator
   * must be `=`, `!=`, `>`, or `<`.
   *
   * For example, if you are filtering a list of node types, you can
   * exclude the ones named `standard-72` by specifying
   * `name != "standard-72"`.
   *
   * To filter on multiple expressions, provide each separate expression within
   * parentheses. For example:
   * ```
   * (name = "standard-72")
   * (virtual_cpu_count > 2)
   * ```
   *
   * By default, each expression is an `AND` expression. However, you
   * can include `AND` and `OR` expressions explicitly.
   * For example:
   * ```
   * (name = "standard-96") AND
   * (virtual_cpu_count > 2) OR
   * (name = "standard-72")
   * ```
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListNodeTypesRequest.
 * Use `create(ListNodeTypesRequestSchema)` to create a new message.
 */
export const ListNodeTypesRequestSchema: GenMessage<ListNodeTypesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 41);

/**
 * Response message for
 * [VmwareEngine.ListNodeTypes][google.cloud.vmwareengine.v1.VmwareEngine.ListNodeTypes]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListNodeTypesResponse
 */
export type ListNodeTypesResponse = Message<"google.cloud.vmwareengine.v1.ListNodeTypesResponse"> & {
  /**
   * A list of Node Types.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.NodeType node_types = 1;
   */
  nodeTypes: NodeType[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached when making an aggregated query using
   * wildcards.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListNodeTypesResponse.
 * Use `create(ListNodeTypesResponseSchema)` to create a new message.
 */
export const ListNodeTypesResponseSchema: GenMessage<ListNodeTypesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 42);

/**
 * Request message for
 * [VmwareEngine.GetNodeType][google.cloud.vmwareengine.v1.VmwareEngine.GetNodeType]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetNodeTypeRequest
 */
export type GetNodeTypeRequest = Message<"google.cloud.vmwareengine.v1.GetNodeTypeRequest"> & {
  /**
   * Required. The resource name of the node type to retrieve.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-proj/locations/us-central1-a/nodeTypes/standard-72`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetNodeTypeRequest.
 * Use `create(GetNodeTypeRequestSchema)` to create a new message.
 */
export const GetNodeTypeRequestSchema: GenMessage<GetNodeTypeRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 43);

/**
 * Request message for
 * [VmwareEngine.ShowNsxCredentials][google.cloud.vmwareengine.v1.VmwareEngine.ShowNsxCredentials]
 *
 * @generated from message google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest
 */
export type ShowNsxCredentialsRequest = Message<"google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest"> & {
  /**
   * Required. The resource name of the private cloud
   * to be queried for credentials.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string private_cloud = 1;
   */
  privateCloud: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest.
 * Use `create(ShowNsxCredentialsRequestSchema)` to create a new message.
 */
export const ShowNsxCredentialsRequestSchema: GenMessage<ShowNsxCredentialsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 44);

/**
 * Request message for
 * [VmwareEngine.ShowVcenterCredentials][google.cloud.vmwareengine.v1.VmwareEngine.ShowVcenterCredentials]
 *
 * @generated from message google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest
 */
export type ShowVcenterCredentialsRequest = Message<"google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest"> & {
  /**
   * Required. The resource name of the private cloud
   * to be queried for credentials.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string private_cloud = 1;
   */
  privateCloud: string;

  /**
   * Optional. The username of the user to be queried for credentials.
   * The default value of this field is CloudOwner@gve.local.
   * The provided value must be one of the following:
   * CloudOwner@gve.local,
   * solution-user-01@gve.local,
   * solution-user-02@gve.local,
   * solution-user-03@gve.local,
   * solution-user-04@gve.local,
   * solution-user-05@gve.local,
   * zertoadmin@gve.local.
   *
   * @generated from field: string username = 2;
   */
  username: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest.
 * Use `create(ShowVcenterCredentialsRequestSchema)` to create a new message.
 */
export const ShowVcenterCredentialsRequestSchema: GenMessage<ShowVcenterCredentialsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 45);

/**
 * Request message for
 * [VmwareEngine.ResetNsxCredentials][google.cloud.vmwareengine.v1.VmwareEngine.ResetNsxCredentials]
 *
 * @generated from message google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest
 */
export type ResetNsxCredentialsRequest = Message<"google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest"> & {
  /**
   * Required. The resource name of the private cloud
   * to reset credentials for.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string private_cloud = 1;
   */
  privateCloud: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest.
 * Use `create(ResetNsxCredentialsRequestSchema)` to create a new message.
 */
export const ResetNsxCredentialsRequestSchema: GenMessage<ResetNsxCredentialsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 46);

/**
 * Request message for
 * [VmwareEngine.ResetVcenterCredentials][google.cloud.vmwareengine.v1.VmwareEngine.ResetVcenterCredentials]
 *
 * @generated from message google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest
 */
export type ResetVcenterCredentialsRequest = Message<"google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest"> & {
  /**
   * Required. The resource name of the private cloud
   * to reset credentials for.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string private_cloud = 1;
   */
  privateCloud: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;

  /**
   * Optional. The username of the user to be to reset the credentials.
   * The default value of this field is CloudOwner@gve.local.
   * The provided value should be one of the following:
   * solution-user-01@gve.local,
   * solution-user-02@gve.local,
   * solution-user-03@gve.local,
   * solution-user-04@gve.local,
   * solution-user-05@gve.local,
   * zertoadmin@gve.local.
   *
   * @generated from field: string username = 3;
   */
  username: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest.
 * Use `create(ResetVcenterCredentialsRequestSchema)` to create a new message.
 */
export const ResetVcenterCredentialsRequestSchema: GenMessage<ResetVcenterCredentialsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 47);

/**
 * Response message for
 * [VmwareEngine.ListHcxActivationKeys][google.cloud.vmwareengine.v1.VmwareEngine.ListHcxActivationKeys]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse
 */
export type ListHcxActivationKeysResponse = Message<"google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse"> & {
  /**
   * List of HCX activation keys.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.HcxActivationKey hcx_activation_keys = 1;
   */
  hcxActivationKeys: HcxActivationKey[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached when making an aggregated query using
   * wildcards.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse.
 * Use `create(ListHcxActivationKeysResponseSchema)` to create a new message.
 */
export const ListHcxActivationKeysResponseSchema: GenMessage<ListHcxActivationKeysResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 48);

/**
 * Request message for
 * [VmwareEngine.ListHcxActivationKeys][google.cloud.vmwareengine.v1.VmwareEngine.ListHcxActivationKeys]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest
 */
export type ListHcxActivationKeysRequest = Message<"google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest"> & {
  /**
   * Required. The resource name of the private cloud
   * to be queried for HCX activation keys.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1/privateClouds/my-cloud`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of HCX activation keys to return in one page.
   * The service may return fewer than this value.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListHcxActivationKeys` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListHcxActivationKeys` must match the call that provided the page
   * token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest.
 * Use `create(ListHcxActivationKeysRequestSchema)` to create a new message.
 */
export const ListHcxActivationKeysRequestSchema: GenMessage<ListHcxActivationKeysRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 49);

/**
 * Request message for [VmwareEngine.GetHcxActivationKeys][]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest
 */
export type GetHcxActivationKeyRequest = Message<"google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest"> & {
  /**
   * Required. The resource name of the HCX activation key to retrieve.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1/privateClouds/my-cloud/hcxActivationKeys/my-key`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest.
 * Use `create(GetHcxActivationKeyRequestSchema)` to create a new message.
 */
export const GetHcxActivationKeyRequestSchema: GenMessage<GetHcxActivationKeyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 50);

/**
 * Request message for
 * [VmwareEngine.CreateHcxActivationKey][google.cloud.vmwareengine.v1.VmwareEngine.CreateHcxActivationKey]
 *
 * @generated from message google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest
 */
export type CreateHcxActivationKeyRequest = Message<"google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest"> & {
  /**
   * Required. The resource name of the private cloud to create the key for.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1/privateClouds/my-cloud`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The initial description of a new HCX activation key. When
   * creating a new key, this field must be an empty object.
   *
   * @generated from field: google.cloud.vmwareengine.v1.HcxActivationKey hcx_activation_key = 2;
   */
  hcxActivationKey?: HcxActivationKey;

  /**
   * Required. The user-provided identifier of the `HcxActivationKey` to be
   * created. This identifier must be unique among `HcxActivationKey` resources
   * within the parent and becomes the final token in the name URI.
   * The identifier must meet the following requirements:
   *
   * * Only contains 1-63 alphanumeric characters and hyphens
   * * Begins with an alphabetical character
   * * Ends with a non-hyphen character
   * * Not formatted as a UUID
   * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   * (section 3.5)
   *
   * @generated from field: string hcx_activation_key_id = 3;
   */
  hcxActivationKeyId: string;

  /**
   * A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest.
 * Use `create(CreateHcxActivationKeyRequestSchema)` to create a new message.
 */
export const CreateHcxActivationKeyRequestSchema: GenMessage<CreateHcxActivationKeyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 51);

/**
 * Request message for
 * [VmwareEngine.GetDnsForwarding][google.cloud.vmwareengine.v1.VmwareEngine.GetDnsForwarding]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetDnsForwardingRequest
 */
export type GetDnsForwardingRequest = Message<"google.cloud.vmwareengine.v1.GetDnsForwardingRequest"> & {
  /**
   * Required. The resource name of a `DnsForwarding` to retrieve.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/dnsForwarding`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetDnsForwardingRequest.
 * Use `create(GetDnsForwardingRequestSchema)` to create a new message.
 */
export const GetDnsForwardingRequestSchema: GenMessage<GetDnsForwardingRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 52);

/**
 * Request message for
 * [VmwareEngine.UpdateDnsForwarding][google.cloud.vmwareengine.v1.VmwareEngine.UpdateDnsForwarding]
 *
 * @generated from message google.cloud.vmwareengine.v1.UpdateDnsForwardingRequest
 */
export type UpdateDnsForwardingRequest = Message<"google.cloud.vmwareengine.v1.UpdateDnsForwardingRequest"> & {
  /**
   * Required. DnsForwarding config details.
   *
   * @generated from field: google.cloud.vmwareengine.v1.DnsForwarding dns_forwarding = 1;
   */
  dnsForwarding?: DnsForwarding;

  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * `DnsForwarding` resource by the update.
   * The fields specified in the `update_mask` are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.UpdateDnsForwardingRequest.
 * Use `create(UpdateDnsForwardingRequestSchema)` to create a new message.
 */
export const UpdateDnsForwardingRequestSchema: GenMessage<UpdateDnsForwardingRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 53);

/**
 * Request message for
 * [VmwareEngine.CreateNetworkPeering][google.cloud.vmwareengine.v1.VmwareEngine.CreateNetworkPeering]
 *
 * @generated from message google.cloud.vmwareengine.v1.CreateNetworkPeeringRequest
 */
export type CreateNetworkPeeringRequest = Message<"google.cloud.vmwareengine.v1.CreateNetworkPeeringRequest"> & {
  /**
   * Required. The resource name of the location to create the new network
   * peering in. This value is always `global`, because `NetworkPeering` is a
   * global resource. Resource names are schemeless URIs that follow the
   * conventions in https://cloud.google.com/apis/design/resource_names. For
   * example: `projects/my-project/locations/global`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The user-provided identifier of the new `NetworkPeering`.
   * This identifier must be unique among `NetworkPeering` resources within the
   * parent and becomes the final token in the name URI.
   * The identifier must meet the following requirements:
   *
   * * Only contains 1-63 alphanumeric characters and hyphens
   * * Begins with an alphabetical character
   * * Ends with a non-hyphen character
   * * Not formatted as a UUID
   * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   * (section 3.5)
   *
   * @generated from field: string network_peering_id = 2;
   */
  networkPeeringId: string;

  /**
   * Required. The initial description of the new network peering.
   *
   * @generated from field: google.cloud.vmwareengine.v1.NetworkPeering network_peering = 3;
   */
  networkPeering?: NetworkPeering;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.CreateNetworkPeeringRequest.
 * Use `create(CreateNetworkPeeringRequestSchema)` to create a new message.
 */
export const CreateNetworkPeeringRequestSchema: GenMessage<CreateNetworkPeeringRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 54);

/**
 * Request message for
 * [VmwareEngine.DeleteNetworkPeering][google.cloud.vmwareengine.v1.VmwareEngine.DeleteNetworkPeering]
 *
 * @generated from message google.cloud.vmwareengine.v1.DeleteNetworkPeeringRequest
 */
export type DeleteNetworkPeeringRequest = Message<"google.cloud.vmwareengine.v1.DeleteNetworkPeeringRequest"> & {
  /**
   * Required. The resource name of the network peering to be deleted.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/global/networkPeerings/my-peering`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.DeleteNetworkPeeringRequest.
 * Use `create(DeleteNetworkPeeringRequestSchema)` to create a new message.
 */
export const DeleteNetworkPeeringRequestSchema: GenMessage<DeleteNetworkPeeringRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 55);

/**
 * Request message for
 * [VmwareEngine.GetNetworkPeering][google.cloud.vmwareengine.v1.VmwareEngine.GetNetworkPeering]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetNetworkPeeringRequest
 */
export type GetNetworkPeeringRequest = Message<"google.cloud.vmwareengine.v1.GetNetworkPeeringRequest"> & {
  /**
   * Required. The resource name of the network peering to retrieve.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/global/networkPeerings/my-peering`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetNetworkPeeringRequest.
 * Use `create(GetNetworkPeeringRequestSchema)` to create a new message.
 */
export const GetNetworkPeeringRequestSchema: GenMessage<GetNetworkPeeringRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 56);

/**
 * Request message for
 * [VmwareEngine.ListNetworkPeerings][google.cloud.vmwareengine.v1.VmwareEngine.ListNetworkPeerings]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListNetworkPeeringsRequest
 */
export type ListNetworkPeeringsRequest = Message<"google.cloud.vmwareengine.v1.ListNetworkPeeringsRequest"> & {
  /**
   * Required. The resource name of the location (global) to query for
   * network peerings. Resource names are schemeless URIs that follow the
   * conventions in https://cloud.google.com/apis/design/resource_names. For
   * example: `projects/my-project/locations/global`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of network peerings to return in one page.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListNetworkPeerings` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListNetworkPeerings` must match the call that provided the page
   * token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter expression that matches resources returned in the response.
   * The expression must specify the field name, a comparison
   * operator, and the value that you want to use for filtering. The value
   * must be a string, a number, or a boolean. The comparison operator
   * must be `=`, `!=`, `>`, or `<`.
   *
   * For example, if you are filtering a list of network peerings, you can
   * exclude the ones named `example-peering` by specifying
   * `name != "example-peering"`.
   *
   * To filter on multiple expressions, provide each separate expression within
   * parentheses. For example:
   * ```
   * (name = "example-peering")
   * (createTime > "2021-04-12T08:15:10.40Z")
   * ```
   *
   * By default, each expression is an `AND` expression. However, you
   * can include `AND` and `OR` expressions explicitly.
   * For example:
   * ```
   * (name = "example-peering-1") AND
   * (createTime > "2021-04-12T08:15:10.40Z") OR
   * (name = "example-peering-2")
   * ```
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Sorts list results by a certain order. By default, returned results
   * are ordered by `name` in ascending order.
   * You can also sort results in descending order based on the `name` value
   * using `orderBy="name desc"`.
   * Currently, only ordering by `name` is supported.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListNetworkPeeringsRequest.
 * Use `create(ListNetworkPeeringsRequestSchema)` to create a new message.
 */
export const ListNetworkPeeringsRequestSchema: GenMessage<ListNetworkPeeringsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 57);

/**
 * Request message for
 * [VmwareEngine.UpdateNetworkPeering][google.cloud.vmwareengine.v1.VmwareEngine.UpdateNetworkPeering]
 *
 * @generated from message google.cloud.vmwareengine.v1.UpdateNetworkPeeringRequest
 */
export type UpdateNetworkPeeringRequest = Message<"google.cloud.vmwareengine.v1.UpdateNetworkPeeringRequest"> & {
  /**
   * Required. Network peering description.
   *
   * @generated from field: google.cloud.vmwareengine.v1.NetworkPeering network_peering = 1;
   */
  networkPeering?: NetworkPeering;

  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * `NetworkPeering` resource by the update.
   * The fields specified in the `update_mask` are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.UpdateNetworkPeeringRequest.
 * Use `create(UpdateNetworkPeeringRequestSchema)` to create a new message.
 */
export const UpdateNetworkPeeringRequestSchema: GenMessage<UpdateNetworkPeeringRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 58);

/**
 * Response message for
 * [VmwareEngine.ListNetworkPeerings][google.cloud.vmwareengine.v1.VmwareEngine.ListNetworkPeerings]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListNetworkPeeringsResponse
 */
export type ListNetworkPeeringsResponse = Message<"google.cloud.vmwareengine.v1.ListNetworkPeeringsResponse"> & {
  /**
   * A list of network peerings.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.NetworkPeering network_peerings = 1;
   */
  networkPeerings: NetworkPeering[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Unreachable resources.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListNetworkPeeringsResponse.
 * Use `create(ListNetworkPeeringsResponseSchema)` to create a new message.
 */
export const ListNetworkPeeringsResponseSchema: GenMessage<ListNetworkPeeringsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 59);

/**
 * Request message for
 * [VmwareEngine.ListPeeringRoutes][google.cloud.vmwareengine.v1.VmwareEngine.ListPeeringRoutes]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListPeeringRoutesRequest
 */
export type ListPeeringRoutesRequest = Message<"google.cloud.vmwareengine.v1.ListPeeringRoutesRequest"> & {
  /**
   * Required. The resource name of the network peering to retrieve peering
   * routes from. Resource names are schemeless URIs that follow the conventions
   * in https://cloud.google.com/apis/design/resource_names. For example:
   * `projects/my-project/locations/global/networkPeerings/my-peering`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of peering routes to return in one page.
   * The service may return fewer than this value.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListPeeringRoutes` call.
   * Provide this to retrieve the subsequent page.
   * When paginating, all other parameters provided to `ListPeeringRoutes` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter expression that matches resources returned in the response.
   * Currently, only filtering on the `direction` field is supported. To return
   * routes imported from the peer network, provide "direction=INCOMING". To
   * return routes exported from the VMware Engine network, provide
   * "direction=OUTGOING". Other filter expressions return an error.
   *
   * @generated from field: string filter = 6;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListPeeringRoutesRequest.
 * Use `create(ListPeeringRoutesRequestSchema)` to create a new message.
 */
export const ListPeeringRoutesRequestSchema: GenMessage<ListPeeringRoutesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 60);

/**
 * Response message for
 * [VmwareEngine.ListPeeringRoutes][google.cloud.vmwareengine.v1.VmwareEngine.ListPeeringRoutes]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListPeeringRoutesResponse
 */
export type ListPeeringRoutesResponse = Message<"google.cloud.vmwareengine.v1.ListPeeringRoutesResponse"> & {
  /**
   * A list of peering routes.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.PeeringRoute peering_routes = 1;
   */
  peeringRoutes: PeeringRoute[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListPeeringRoutesResponse.
 * Use `create(ListPeeringRoutesResponseSchema)` to create a new message.
 */
export const ListPeeringRoutesResponseSchema: GenMessage<ListPeeringRoutesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 61);

/**
 * Request message for
 * [VmwareEngine.ListNetworkPolicies][google.cloud.vmwareengine.v1.VmwareEngine.ListNetworkPolicies]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
 */
export type ListNetworkPoliciesRequest = Message<"google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest"> & {
  /**
   * Required. The resource name of the location (region) to query for
   * network policies. Resource names are schemeless URIs that follow the
   * conventions in https://cloud.google.com/apis/design/resource_names. For
   * example: `projects/my-project/locations/us-central1`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of network policies to return in one page.
   * The service may return fewer than this value.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListNetworkPolicies` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListNetworkPolicies` must match the call that provided the page
   * token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter expression that matches resources returned in the response.
   * The expression must specify the field name, a comparison
   * operator, and the value that you want to use for filtering. The value
   * must be a string, a number, or a boolean. The comparison operator
   * must be `=`, `!=`, `>`, or `<`.
   *
   * For example, if you are filtering a list of network policies, you can
   * exclude the ones named `example-policy` by specifying
   * `name != "example-policy"`.
   *
   * To filter on multiple expressions, provide each separate expression within
   * parentheses. For example:
   * ```
   * (name = "example-policy")
   * (createTime > "2021-04-12T08:15:10.40Z")
   * ```
   *
   * By default, each expression is an `AND` expression. However, you
   * can include `AND` and `OR` expressions explicitly.
   * For example:
   * ```
   * (name = "example-policy-1") AND
   * (createTime > "2021-04-12T08:15:10.40Z") OR
   * (name = "example-policy-2")
   * ```
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Sorts list results by a certain order. By default, returned results
   * are ordered by `name` in ascending order.
   * You can also sort results in descending order based on the `name` value
   * using `orderBy="name desc"`.
   * Currently, only ordering by `name` is supported.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest.
 * Use `create(ListNetworkPoliciesRequestSchema)` to create a new message.
 */
export const ListNetworkPoliciesRequestSchema: GenMessage<ListNetworkPoliciesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 62);

/**
 * Response message for
 * [VmwareEngine.ListNetworkPolicies][google.cloud.vmwareengine.v1.VmwareEngine.ListNetworkPolicies]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse
 */
export type ListNetworkPoliciesResponse = Message<"google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse"> & {
  /**
   * A list of network policies.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.NetworkPolicy network_policies = 1;
   */
  networkPolicies: NetworkPolicy[];

  /**
   * A token, which can be send as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached when making an aggregated query using
   * wildcards.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse.
 * Use `create(ListNetworkPoliciesResponseSchema)` to create a new message.
 */
export const ListNetworkPoliciesResponseSchema: GenMessage<ListNetworkPoliciesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 63);

/**
 * Request message for
 * [VmwareEngine.GetNetworkPolicy][google.cloud.vmwareengine.v1.VmwareEngine.GetNetworkPolicy]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetNetworkPolicyRequest
 */
export type GetNetworkPolicyRequest = Message<"google.cloud.vmwareengine.v1.GetNetworkPolicyRequest"> & {
  /**
   * Required. The resource name of the network policy to retrieve.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetNetworkPolicyRequest.
 * Use `create(GetNetworkPolicyRequestSchema)` to create a new message.
 */
export const GetNetworkPolicyRequestSchema: GenMessage<GetNetworkPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 64);

/**
 * Request message for
 * [VmwareEngine.UpdateNetworkPolicy][google.cloud.vmwareengine.v1.VmwareEngine.UpdateNetworkPolicy]
 *
 * @generated from message google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest
 */
export type UpdateNetworkPolicyRequest = Message<"google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest"> & {
  /**
   * Required. Network policy description.
   *
   * @generated from field: google.cloud.vmwareengine.v1.NetworkPolicy network_policy = 1;
   */
  networkPolicy?: NetworkPolicy;

  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * `NetworkPolicy` resource by the update.
   * The fields specified in the `update_mask` are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest.
 * Use `create(UpdateNetworkPolicyRequestSchema)` to create a new message.
 */
export const UpdateNetworkPolicyRequestSchema: GenMessage<UpdateNetworkPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 65);

/**
 * Request message for
 * [VmwareEngine.CreateNetworkPolicy][google.cloud.vmwareengine.v1.VmwareEngine.CreateNetworkPolicy]
 *
 * @generated from message google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest
 */
export type CreateNetworkPolicyRequest = Message<"google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest"> & {
  /**
   * Required. The resource name of the location (region)
   * to create the new network policy in.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   *  `projects/my-project/locations/us-central1`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The user-provided identifier of the network policy to be created.
   * This identifier must be unique within parent
   * `projects/{my-project}/locations/{us-central1}/networkPolicies` and becomes
   * the final token in the name URI.
   * The identifier must meet the following requirements:
   *
   * * Only contains 1-63 alphanumeric characters and hyphens
   * * Begins with an alphabetical character
   * * Ends with a non-hyphen character
   * * Not formatted as a UUID
   * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   * (section 3.5)
   *
   * @generated from field: string network_policy_id = 2;
   */
  networkPolicyId: string;

  /**
   * Required. The network policy configuration to use in the request.
   *
   * @generated from field: google.cloud.vmwareengine.v1.NetworkPolicy network_policy = 3;
   */
  networkPolicy?: NetworkPolicy;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest.
 * Use `create(CreateNetworkPolicyRequestSchema)` to create a new message.
 */
export const CreateNetworkPolicyRequestSchema: GenMessage<CreateNetworkPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 66);

/**
 * Request message for
 * [VmwareEngine.DeleteNetworkPolicy][google.cloud.vmwareengine.v1.VmwareEngine.DeleteNetworkPolicy]
 *
 * @generated from message google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest
 */
export type DeleteNetworkPolicyRequest = Message<"google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest"> & {
  /**
   * Required. The resource name of the network policy to delete.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest.
 * Use `create(DeleteNetworkPolicyRequestSchema)` to create a new message.
 */
export const DeleteNetworkPolicyRequestSchema: GenMessage<DeleteNetworkPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 67);

/**
 * Request message for
 * [VmwareEngine.ListManagementDnsZoneBindings][google.cloud.vmwareengine.v1.VmwareEngine.ListManagementDnsZoneBindings]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListManagementDnsZoneBindingsRequest
 */
export type ListManagementDnsZoneBindingsRequest = Message<"google.cloud.vmwareengine.v1.ListManagementDnsZoneBindingsRequest"> & {
  /**
   * Required. The resource name of the private cloud to be queried for
   * management DNS zone bindings.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of management DNS zone bindings to return in one page.
   * The service may return fewer than this value.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListManagementDnsZoneBindings`
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListManagementDnsZoneBindings` must match the call that provided the page
   * token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter expression that matches resources returned in the response.
   * The expression must specify the field name, a comparison
   * operator, and the value that you want to use for filtering. The value
   * must be a string, a number, or a boolean. The comparison operator
   * must be `=`, `!=`, `>`, or `<`.
   *
   * For example, if you are filtering a list of Management DNS Zone Bindings,
   * you can exclude the ones named `example-management-dns-zone-binding` by
   * specifying `name != "example-management-dns-zone-binding"`.
   *
   * To filter on multiple expressions, provide each separate expression within
   * parentheses. For example:
   * ```
   * (name = "example-management-dns-zone-binding")
   * (createTime > "2021-04-12T08:15:10.40Z")
   * ```
   *
   * By default, each expression is an `AND` expression. However, you
   * can include `AND` and `OR` expressions explicitly.
   * For example:
   * ```
   * (name = "example-management-dns-zone-binding-1") AND
   * (createTime > "2021-04-12T08:15:10.40Z") OR
   * (name = "example-management-dns-zone-binding-2")
   * ```
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Sorts list results by a certain order. By default, returned results
   * are ordered by `name` in ascending order.
   * You can also sort results in descending order based on the `name` value
   * using `orderBy="name desc"`.
   * Currently, only ordering by `name` is supported.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListManagementDnsZoneBindingsRequest.
 * Use `create(ListManagementDnsZoneBindingsRequestSchema)` to create a new message.
 */
export const ListManagementDnsZoneBindingsRequestSchema: GenMessage<ListManagementDnsZoneBindingsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 68);

/**
 * Response message for
 * [VmwareEngine.ListManagementDnsZoneBindings][google.cloud.vmwareengine.v1.VmwareEngine.ListManagementDnsZoneBindings]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListManagementDnsZoneBindingsResponse
 */
export type ListManagementDnsZoneBindingsResponse = Message<"google.cloud.vmwareengine.v1.ListManagementDnsZoneBindingsResponse"> & {
  /**
   * A list of management DNS zone bindings.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.ManagementDnsZoneBinding management_dns_zone_bindings = 1;
   */
  managementDnsZoneBindings: ManagementDnsZoneBinding[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Locations that could not be reached when making an aggregated query using
   * wildcards.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListManagementDnsZoneBindingsResponse.
 * Use `create(ListManagementDnsZoneBindingsResponseSchema)` to create a new message.
 */
export const ListManagementDnsZoneBindingsResponseSchema: GenMessage<ListManagementDnsZoneBindingsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 69);

/**
 * Request message for
 * [VmwareEngine.GetManagementDnsZoneBinding][google.cloud.vmwareengine.v1.VmwareEngine.GetManagementDnsZoneBinding]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetManagementDnsZoneBindingRequest
 */
export type GetManagementDnsZoneBindingRequest = Message<"google.cloud.vmwareengine.v1.GetManagementDnsZoneBindingRequest"> & {
  /**
   * Required. The resource name of the management DNS zone binding to
   * retrieve. Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/managementDnsZoneBindings/my-management-dns-zone-binding`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetManagementDnsZoneBindingRequest.
 * Use `create(GetManagementDnsZoneBindingRequestSchema)` to create a new message.
 */
export const GetManagementDnsZoneBindingRequestSchema: GenMessage<GetManagementDnsZoneBindingRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 70);

/**
 * Request message for [VmwareEngine.CreateManagementDnsZoneBindings][]
 *
 * @generated from message google.cloud.vmwareengine.v1.CreateManagementDnsZoneBindingRequest
 */
export type CreateManagementDnsZoneBindingRequest = Message<"google.cloud.vmwareengine.v1.CreateManagementDnsZoneBindingRequest"> & {
  /**
   * Required. The resource name of the private cloud
   * to create a new management DNS zone binding for.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The initial values for a new management DNS zone binding.
   *
   * @generated from field: google.cloud.vmwareengine.v1.ManagementDnsZoneBinding management_dns_zone_binding = 2;
   */
  managementDnsZoneBinding?: ManagementDnsZoneBinding;

  /**
   * Required. The user-provided identifier of the `ManagementDnsZoneBinding`
   * resource to be created. This identifier must be unique among
   * `ManagementDnsZoneBinding` resources within the parent and becomes the
   * final token in the name URI. The identifier must meet the following
   * requirements:
   *
   * * Only contains 1-63 alphanumeric characters and hyphens
   * * Begins with an alphabetical character
   * * Ends with a non-hyphen character
   * * Not formatted as a UUID
   * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   * (section 3.5)
   *
   * @generated from field: string management_dns_zone_binding_id = 3;
   */
  managementDnsZoneBindingId: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if the original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.CreateManagementDnsZoneBindingRequest.
 * Use `create(CreateManagementDnsZoneBindingRequestSchema)` to create a new message.
 */
export const CreateManagementDnsZoneBindingRequestSchema: GenMessage<CreateManagementDnsZoneBindingRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 71);

/**
 * Request message for
 * [VmwareEngine.UpdateManagementDnsZoneBinding][google.cloud.vmwareengine.v1.VmwareEngine.UpdateManagementDnsZoneBinding]
 *
 * @generated from message google.cloud.vmwareengine.v1.UpdateManagementDnsZoneBindingRequest
 */
export type UpdateManagementDnsZoneBindingRequest = Message<"google.cloud.vmwareengine.v1.UpdateManagementDnsZoneBindingRequest"> & {
  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * `ManagementDnsZoneBinding` resource by the update.
   * The fields specified in the `update_mask` are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 1;
   */
  updateMask?: FieldMask;

  /**
   * Required. New values to update the management DNS zone binding with.
   *
   * @generated from field: google.cloud.vmwareengine.v1.ManagementDnsZoneBinding management_dns_zone_binding = 2;
   */
  managementDnsZoneBinding?: ManagementDnsZoneBinding;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if the original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.UpdateManagementDnsZoneBindingRequest.
 * Use `create(UpdateManagementDnsZoneBindingRequestSchema)` to create a new message.
 */
export const UpdateManagementDnsZoneBindingRequestSchema: GenMessage<UpdateManagementDnsZoneBindingRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 72);

/**
 * Request message for
 * [VmwareEngine.DeleteManagementDnsZoneBinding][google.cloud.vmwareengine.v1.VmwareEngine.DeleteManagementDnsZoneBinding]
 *
 * @generated from message google.cloud.vmwareengine.v1.DeleteManagementDnsZoneBindingRequest
 */
export type DeleteManagementDnsZoneBindingRequest = Message<"google.cloud.vmwareengine.v1.DeleteManagementDnsZoneBindingRequest"> & {
  /**
   * Required. The resource name of the management DNS zone binding to delete.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/managementDnsZoneBindings/my-management-dns-zone-binding`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if the original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.DeleteManagementDnsZoneBindingRequest.
 * Use `create(DeleteManagementDnsZoneBindingRequestSchema)` to create a new message.
 */
export const DeleteManagementDnsZoneBindingRequestSchema: GenMessage<DeleteManagementDnsZoneBindingRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 73);

/**
 * Request message for [VmwareEngine.RepairManagementDnsZoneBindings][]
 *
 * @generated from message google.cloud.vmwareengine.v1.RepairManagementDnsZoneBindingRequest
 */
export type RepairManagementDnsZoneBindingRequest = Message<"google.cloud.vmwareengine.v1.RepairManagementDnsZoneBindingRequest"> & {
  /**
   * Required. The resource name of the management DNS zone binding to repair.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/managementDnsZoneBindings/my-management-dns-zone-binding`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request ID,
   * the server can check if the original operation with the same request ID was
   * received, and if so, will ignore the second request. This prevents clients
   * from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.RepairManagementDnsZoneBindingRequest.
 * Use `create(RepairManagementDnsZoneBindingRequestSchema)` to create a new message.
 */
export const RepairManagementDnsZoneBindingRequestSchema: GenMessage<RepairManagementDnsZoneBindingRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 74);

/**
 * Request message for
 * [VmwareEngine.CreateVmwareEngineNetwork][google.cloud.vmwareengine.v1.VmwareEngine.CreateVmwareEngineNetwork]
 *
 * @generated from message google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest
 */
export type CreateVmwareEngineNetworkRequest = Message<"google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest"> & {
  /**
   * Required. The resource name of the location to create the new VMware Engine
   * network in. A VMware Engine network of type
   * `LEGACY` is a regional resource, and a VMware
   * Engine network of type `STANDARD` is a global resource.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names. For example:
   * `projects/my-project/locations/global`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The user-provided identifier of the new VMware Engine network.
   * This identifier must be unique among VMware Engine network resources
   * within the parent and becomes the final token in the name URI. The
   * identifier must meet the following requirements:
   *
   * * For networks of type LEGACY, adheres to the format:
   * `{region-id}-default`. Replace `{region-id}` with the region where you want
   * to create the VMware Engine network. For example, "us-central1-default".
   * * Only contains 1-63 alphanumeric characters and hyphens
   * * Begins with an alphabetical character
   * * Ends with a non-hyphen character
   * * Not formatted as a UUID
   * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   * (section 3.5)
   *
   * @generated from field: string vmware_engine_network_id = 2;
   */
  vmwareEngineNetworkId: string;

  /**
   * Required. The initial description of the new VMware Engine network.
   *
   * @generated from field: google.cloud.vmwareengine.v1.VmwareEngineNetwork vmware_engine_network = 3;
   */
  vmwareEngineNetwork?: VmwareEngineNetwork;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest.
 * Use `create(CreateVmwareEngineNetworkRequestSchema)` to create a new message.
 */
export const CreateVmwareEngineNetworkRequestSchema: GenMessage<CreateVmwareEngineNetworkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 75);

/**
 * Request message for
 * [VmwareEngine.UpdateVmwareEngineNetwork][google.cloud.vmwareengine.v1.VmwareEngine.UpdateVmwareEngineNetwork]
 *
 * @generated from message google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest
 */
export type UpdateVmwareEngineNetworkRequest = Message<"google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest"> & {
  /**
   * Required. VMware Engine network description.
   *
   * @generated from field: google.cloud.vmwareengine.v1.VmwareEngineNetwork vmware_engine_network = 1;
   */
  vmwareEngineNetwork?: VmwareEngineNetwork;

  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * VMware Engine network resource by the update.
   * The fields specified in the `update_mask` are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten. Only the
   * following fields can be updated: `description`.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest.
 * Use `create(UpdateVmwareEngineNetworkRequestSchema)` to create a new message.
 */
export const UpdateVmwareEngineNetworkRequestSchema: GenMessage<UpdateVmwareEngineNetworkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 76);

/**
 * Request message for
 * [VmwareEngine.DeleteVmwareEngineNetwork][google.cloud.vmwareengine.v1.VmwareEngine.DeleteVmwareEngineNetwork]
 *
 * @generated from message google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest
 */
export type DeleteVmwareEngineNetworkRequest = Message<"google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest"> & {
  /**
   * Required. The resource name of the VMware Engine network to be deleted.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/global/vmwareEngineNetworks/my-network`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;

  /**
   * Optional. Checksum used to ensure that the user-provided value is up to
   * date before the server processes the request. The server compares provided
   * checksum with the current checksum of the resource. If the user-provided
   * value is out of date, this request returns an `ABORTED` error.
   *
   * @generated from field: string etag = 3;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest.
 * Use `create(DeleteVmwareEngineNetworkRequestSchema)` to create a new message.
 */
export const DeleteVmwareEngineNetworkRequestSchema: GenMessage<DeleteVmwareEngineNetworkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 77);

/**
 * Request message for
 * [VmwareEngine.GetVmwareEngineNetwork][google.cloud.vmwareengine.v1.VmwareEngine.GetVmwareEngineNetwork]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest
 */
export type GetVmwareEngineNetworkRequest = Message<"google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest"> & {
  /**
   * Required. The resource name of the VMware Engine network to retrieve.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/global/vmwareEngineNetworks/my-network`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest.
 * Use `create(GetVmwareEngineNetworkRequestSchema)` to create a new message.
 */
export const GetVmwareEngineNetworkRequestSchema: GenMessage<GetVmwareEngineNetworkRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 78);

/**
 * Request message for
 * [VmwareEngine.ListVmwareEngineNetworks][google.cloud.vmwareengine.v1.VmwareEngine.ListVmwareEngineNetworks]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
 */
export type ListVmwareEngineNetworksRequest = Message<"google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest"> & {
  /**
   * Required. The resource name of the location to query for
   * VMware Engine networks. Resource names are schemeless URIs that follow the
   * conventions in https://cloud.google.com/apis/design/resource_names. For
   * example: `projects/my-project/locations/global`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of results to return in one page.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListVmwareEngineNetworks` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListVmwareEngineNetworks` must match the call that provided the page
   * token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter expression that matches resources returned in the response.
   * The expression must specify the field name, a comparison
   * operator, and the value that you want to use for filtering. The value
   * must be a string, a number, or a boolean. The comparison operator
   * must be `=`, `!=`, `>`, or `<`.
   *
   * For example, if you are filtering a list of network peerings, you can
   * exclude the ones named `example-network` by specifying
   * `name != "example-network"`.
   *
   * To filter on multiple expressions, provide each separate expression within
   * parentheses. For example:
   * ```
   * (name = "example-network")
   * (createTime > "2021-04-12T08:15:10.40Z")
   * ```
   *
   * By default, each expression is an `AND` expression. However, you
   * can include `AND` and `OR` expressions explicitly.
   * For example:
   * ```
   * (name = "example-network-1") AND
   * (createTime > "2021-04-12T08:15:10.40Z") OR
   * (name = "example-network-2")
   * ```
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Sorts list results by a certain order. By default, returned results
   * are ordered by `name` in ascending order.
   * You can also sort results in descending order based on the `name` value
   * using `orderBy="name desc"`.
   * Currently, only ordering by `name` is supported.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest.
 * Use `create(ListVmwareEngineNetworksRequestSchema)` to create a new message.
 */
export const ListVmwareEngineNetworksRequestSchema: GenMessage<ListVmwareEngineNetworksRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 79);

/**
 * Response message for
 * [VmwareEngine.ListVmwareEngineNetworks][google.cloud.vmwareengine.v1.VmwareEngine.ListVmwareEngineNetworks]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse
 */
export type ListVmwareEngineNetworksResponse = Message<"google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse"> & {
  /**
   * A list of VMware Engine networks.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.VmwareEngineNetwork vmware_engine_networks = 1;
   */
  vmwareEngineNetworks: VmwareEngineNetwork[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Unreachable resources.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse.
 * Use `create(ListVmwareEngineNetworksResponseSchema)` to create a new message.
 */
export const ListVmwareEngineNetworksResponseSchema: GenMessage<ListVmwareEngineNetworksResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 80);

/**
 * Request message for
 * [VmwareEngine.CreatePrivateConnection][google.cloud.vmwareengine.v1.VmwareEngine.CreatePrivateConnection]
 *
 * @generated from message google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest
 */
export type CreatePrivateConnectionRequest = Message<"google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest"> & {
  /**
   * Required. The resource name of the location to create the new private
   * connection in. Private connection is a regional resource.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names. For example:
   * `projects/my-project/locations/us-central1`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The user-provided identifier of the new private connection.
   * This identifier must be unique among private connection resources
   * within the parent and becomes the final token in the name URI. The
   * identifier must meet the following requirements:
   *
   * * Only contains 1-63 alphanumeric characters and hyphens
   * * Begins with an alphabetical character
   * * Ends with a non-hyphen character
   * * Not formatted as a UUID
   * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   * (section 3.5)
   *
   * @generated from field: string private_connection_id = 2;
   */
  privateConnectionId: string;

  /**
   * Required. The initial description of the new private connection.
   *
   * @generated from field: google.cloud.vmwareengine.v1.PrivateConnection private_connection = 3;
   */
  privateConnection?: PrivateConnection;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 4;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest.
 * Use `create(CreatePrivateConnectionRequestSchema)` to create a new message.
 */
export const CreatePrivateConnectionRequestSchema: GenMessage<CreatePrivateConnectionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 81);

/**
 * Request message for
 * [VmwareEngine.GetPrivateConnection][google.cloud.vmwareengine.v1.VmwareEngine.GetPrivateConnection]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetPrivateConnectionRequest
 */
export type GetPrivateConnectionRequest = Message<"google.cloud.vmwareengine.v1.GetPrivateConnectionRequest"> & {
  /**
   * Required. The resource name of the private connection to retrieve.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1/privateConnections/my-connection`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetPrivateConnectionRequest.
 * Use `create(GetPrivateConnectionRequestSchema)` to create a new message.
 */
export const GetPrivateConnectionRequestSchema: GenMessage<GetPrivateConnectionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 82);

/**
 * Request message for
 * [VmwareEngine.ListPrivateConnections][google.cloud.vmwareengine.v1.VmwareEngine.ListPrivateConnections]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
 */
export type ListPrivateConnectionsRequest = Message<"google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest"> & {
  /**
   * Required. The resource name of the location to query for
   * private connections. Resource names are schemeless URIs that follow the
   * conventions in https://cloud.google.com/apis/design/resource_names. For
   * example: `projects/my-project/locations/us-central1`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of private connections to return in one page.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListPrivateConnections` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to
   * `ListPrivateConnections` must match the call that provided the page
   * token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * A filter expression that matches resources returned in the response.
   * The expression must specify the field name, a comparison
   * operator, and the value that you want to use for filtering. The value
   * must be a string, a number, or a boolean. The comparison operator
   * must be `=`, `!=`, `>`, or `<`.
   *
   * For example, if you are filtering a list of private connections, you can
   * exclude the ones named `example-connection` by specifying
   * `name != "example-connection"`.
   *
   * To filter on multiple expressions, provide each separate expression within
   * parentheses. For example:
   * ```
   * (name = "example-connection")
   * (createTime > "2022-09-22T08:15:10.40Z")
   * ```
   *
   * By default, each expression is an `AND` expression. However, you
   * can include `AND` and `OR` expressions explicitly.
   * For example:
   * ```
   * (name = "example-connection-1") AND
   * (createTime > "2021-04-12T08:15:10.40Z") OR
   * (name = "example-connection-2")
   * ```
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Sorts list results by a certain order. By default, returned results
   * are ordered by `name` in ascending order.
   * You can also sort results in descending order based on the `name` value
   * using `orderBy="name desc"`.
   * Currently, only ordering by `name` is supported.
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest.
 * Use `create(ListPrivateConnectionsRequestSchema)` to create a new message.
 */
export const ListPrivateConnectionsRequestSchema: GenMessage<ListPrivateConnectionsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 83);

/**
 * Response message for
 * [VmwareEngine.ListPrivateConnections][google.cloud.vmwareengine.v1.VmwareEngine.ListPrivateConnections]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse
 */
export type ListPrivateConnectionsResponse = Message<"google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse"> & {
  /**
   * A list of private connections.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.PrivateConnection private_connections = 1;
   */
  privateConnections: PrivateConnection[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Unreachable resources.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse.
 * Use `create(ListPrivateConnectionsResponseSchema)` to create a new message.
 */
export const ListPrivateConnectionsResponseSchema: GenMessage<ListPrivateConnectionsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 84);

/**
 * Request message for
 * [VmwareEngine.UpdatePrivateConnection][google.cloud.vmwareengine.v1.VmwareEngine.UpdatePrivateConnection]
 *
 * @generated from message google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest
 */
export type UpdatePrivateConnectionRequest = Message<"google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest"> & {
  /**
   * Required. Private connection description.
   *
   * @generated from field: google.cloud.vmwareengine.v1.PrivateConnection private_connection = 1;
   */
  privateConnection?: PrivateConnection;

  /**
   * Required. Field mask is used to specify the fields to be overwritten in the
   * `PrivateConnection` resource by the update.
   * The fields specified in the `update_mask` are relative to the resource, not
   * the full request. A field will be overwritten if it is in the mask. If the
   * user does not provide a mask then all fields will be overwritten.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest.
 * Use `create(UpdatePrivateConnectionRequestSchema)` to create a new message.
 */
export const UpdatePrivateConnectionRequestSchema: GenMessage<UpdatePrivateConnectionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 85);

/**
 * Request message for
 * [VmwareEngine.DeletePrivateConnection][google.cloud.vmwareengine.v1.VmwareEngine.DeletePrivateConnection]
 *
 * @generated from message google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest
 */
export type DeletePrivateConnectionRequest = Message<"google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest"> & {
  /**
   * Required. The resource name of the private connection to be deleted.
   * Resource names are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names.
   * For example:
   * `projects/my-project/locations/us-central1/privateConnections/my-connection`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 2;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest.
 * Use `create(DeletePrivateConnectionRequestSchema)` to create a new message.
 */
export const DeletePrivateConnectionRequestSchema: GenMessage<DeletePrivateConnectionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 86);

/**
 * Request message for
 * [VmwareEngine.ListPrivateConnectionPeeringRoutes][google.cloud.vmwareengine.v1.VmwareEngine.ListPrivateConnectionPeeringRoutes]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest
 */
export type ListPrivateConnectionPeeringRoutesRequest = Message<"google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest"> & {
  /**
   * Required. The resource name of the private connection to retrieve peering
   * routes from. Resource names are schemeless URIs that follow the conventions
   * in https://cloud.google.com/apis/design/resource_names. For example:
   * `projects/my-project/locations/us-west1/privateConnections/my-connection`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of peering routes to return in one page.
   * The service may return fewer than this value.
   * The maximum value is coerced to 1000.
   * The default value of this field is 500.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListPrivateConnectionPeeringRoutes`
   * call. Provide this to retrieve the subsequent page. When paginating, all
   * other parameters provided to `ListPrivateConnectionPeeringRoutes` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest.
 * Use `create(ListPrivateConnectionPeeringRoutesRequestSchema)` to create a new message.
 */
export const ListPrivateConnectionPeeringRoutesRequestSchema: GenMessage<ListPrivateConnectionPeeringRoutesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 87);

/**
 * Response message for
 * [VmwareEngine.ListPrivateConnectionPeeringRoutes][google.cloud.vmwareengine.v1.VmwareEngine.ListPrivateConnectionPeeringRoutes]
 *
 * @generated from message google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse
 */
export type ListPrivateConnectionPeeringRoutesResponse = Message<"google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse"> & {
  /**
   * A list of peering routes.
   *
   * @generated from field: repeated google.cloud.vmwareengine.v1.PeeringRoute peering_routes = 1;
   */
  peeringRoutes: PeeringRoute[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse.
 * Use `create(ListPrivateConnectionPeeringRoutesResponseSchema)` to create a new message.
 */
export const ListPrivateConnectionPeeringRoutesResponseSchema: GenMessage<ListPrivateConnectionPeeringRoutesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 88);

/**
 * Request message for
 * [VmwareEngine.GrantDnsBindPermission][google.cloud.vmwareengine.v1.VmwareEngine.GrantDnsBindPermission]
 *
 * @generated from message google.cloud.vmwareengine.v1.GrantDnsBindPermissionRequest
 */
export type GrantDnsBindPermissionRequest = Message<"google.cloud.vmwareengine.v1.GrantDnsBindPermissionRequest"> & {
  /**
   * Required. The name of the resource which stores the users/service accounts
   * having the permission to bind to the corresponding intranet VPC of the
   * consumer project. DnsBindPermission is a global resource. Resource names
   * are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names. For example:
   * `projects/my-project/locations/global/dnsBindPermission`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The consumer provided user/service account which needs to be
   * granted permission to bind with the intranet VPC corresponding to the
   * consumer project.
   *
   * @generated from field: google.cloud.vmwareengine.v1.Principal principal = 2;
   */
  principal?: Principal;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GrantDnsBindPermissionRequest.
 * Use `create(GrantDnsBindPermissionRequestSchema)` to create a new message.
 */
export const GrantDnsBindPermissionRequestSchema: GenMessage<GrantDnsBindPermissionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 89);

/**
 * Request message for
 * [VmwareEngine.RevokeDnsBindPermission][google.cloud.vmwareengine.v1.VmwareEngine.RevokeDnsBindPermission]
 *
 * @generated from message google.cloud.vmwareengine.v1.RevokeDnsBindPermissionRequest
 */
export type RevokeDnsBindPermissionRequest = Message<"google.cloud.vmwareengine.v1.RevokeDnsBindPermissionRequest"> & {
  /**
   * Required. The name of the resource which stores the users/service accounts
   * having the permission to bind to the corresponding intranet VPC of the
   * consumer project. DnsBindPermission is a global resource. Resource names
   * are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names. For example:
   * `projects/my-project/locations/global/dnsBindPermission`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The consumer provided user/service account which needs to be
   * granted permission to bind with the intranet VPC corresponding to the
   * consumer project.
   *
   * @generated from field: google.cloud.vmwareengine.v1.Principal principal = 2;
   */
  principal?: Principal;

  /**
   * Optional. A request ID to identify requests. Specify a unique request ID
   * so that if you must retry your request, the server will know to ignore
   * the request if it has already been completed. The server guarantees that a
   * request doesn't result in creation of duplicate commitments for at least 60
   * minutes.
   *
   * For example, consider a situation where you make an initial request and the
   * request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   *
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.RevokeDnsBindPermissionRequest.
 * Use `create(RevokeDnsBindPermissionRequestSchema)` to create a new message.
 */
export const RevokeDnsBindPermissionRequestSchema: GenMessage<RevokeDnsBindPermissionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 90);

/**
 * Request message for
 * [VmwareEngine.GetDnsBindPermission][google.cloud.vmwareengine.v1.VmwareEngine.GetDnsBindPermission]
 *
 * @generated from message google.cloud.vmwareengine.v1.GetDnsBindPermissionRequest
 */
export type GetDnsBindPermissionRequest = Message<"google.cloud.vmwareengine.v1.GetDnsBindPermissionRequest"> & {
  /**
   * Required. The name of the resource which stores the users/service accounts
   * having the permission to bind to the corresponding intranet VPC of the
   * consumer project. DnsBindPermission is a global resource. Resource names
   * are schemeless URIs that follow the conventions in
   * https://cloud.google.com/apis/design/resource_names. For example:
   * `projects/my-project/locations/global/dnsBindPermission`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.vmwareengine.v1.GetDnsBindPermissionRequest.
 * Use `create(GetDnsBindPermissionRequestSchema)` to create a new message.
 */
export const GetDnsBindPermissionRequestSchema: GenMessage<GetDnsBindPermissionRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 91);

/**
 * VMwareEngine manages VMware's private clusters in the Cloud.
 *
 * @generated from service google.cloud.vmwareengine.v1.VmwareEngine
 */
export const VmwareEngine: GenService<{
  /**
   * Lists `PrivateCloud` resources in a given project and location.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListPrivateClouds
   */
  listPrivateClouds: {
    methodKind: "unary";
    input: typeof ListPrivateCloudsRequestSchema;
    output: typeof ListPrivateCloudsResponseSchema;
  },
  /**
   * Retrieves a `PrivateCloud` resource by its resource name.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetPrivateCloud
   */
  getPrivateCloud: {
    methodKind: "unary";
    input: typeof GetPrivateCloudRequestSchema;
    output: typeof PrivateCloudSchema;
  },
  /**
   * Creates a new `PrivateCloud` resource in a given project and location.
   * Private clouds of type `STANDARD` and
   * `TIME_LIMITED` are zonal resources, `STRETCHED` private clouds are
   * regional.
   * Creating a private cloud also creates a [management
   * cluster](https://cloud.google.com/vmware-engine/docs/concepts-vmware-components)
   * for that private cloud.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.CreatePrivateCloud
   */
  createPrivateCloud: {
    methodKind: "unary";
    input: typeof CreatePrivateCloudRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Modifies a `PrivateCloud` resource. Only the following fields can be
   * updated: `description`.
   * Only fields specified in `updateMask` are applied.
   *
   * During operation processing, the resource is temporarily in the `ACTIVE`
   * state before the operation fully completes. For that period of time, you
   * can't update the resource. Use the operation status to determine when the
   * processing fully completes.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.UpdatePrivateCloud
   */
  updatePrivateCloud: {
    methodKind: "unary";
    input: typeof UpdatePrivateCloudRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Schedules a `PrivateCloud` resource for deletion.
   *
   * A `PrivateCloud` resource scheduled for deletion has `PrivateCloud.state`
   * set to `DELETED` and `expireTime` set to the time when deletion is final
   * and can no longer be reversed. The delete operation is marked as done
   * as soon as the `PrivateCloud` is successfully scheduled for deletion
   * (this also applies when `delayHours` is set to zero), and the operation is
   * not kept in pending state until `PrivateCloud` is purged.
   * `PrivateCloud` can be restored using `UndeletePrivateCloud` method before
   * the `expireTime` elapses. When `expireTime` is reached, deletion is final
   * and all private cloud resources are irreversibly removed and billing stops.
   * During the final removal process, `PrivateCloud.state` is set to `PURGING`.
   * `PrivateCloud` can be polled using standard `GET` method for the whole
   * period of deletion and purging. It will not be returned only
   * when it is completely purged.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.DeletePrivateCloud
   */
  deletePrivateCloud: {
    methodKind: "unary";
    input: typeof DeletePrivateCloudRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Restores a private cloud that was previously scheduled for deletion by
   * `DeletePrivateCloud`. A `PrivateCloud` resource scheduled for deletion has
   * `PrivateCloud.state` set to `DELETED` and `PrivateCloud.expireTime` set to
   * the time when deletion can no longer be reversed.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.UndeletePrivateCloud
   */
  undeletePrivateCloud: {
    methodKind: "unary";
    input: typeof UndeletePrivateCloudRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists `Cluster` resources in a given private cloud.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListClusters
   */
  listClusters: {
    methodKind: "unary";
    input: typeof ListClustersRequestSchema;
    output: typeof ListClustersResponseSchema;
  },
  /**
   * Retrieves a `Cluster` resource by its resource name.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetCluster
   */
  getCluster: {
    methodKind: "unary";
    input: typeof GetClusterRequestSchema;
    output: typeof ClusterSchema;
  },
  /**
   * Creates a new cluster in a given private cloud.
   * Creating a new cluster provides additional nodes for
   * use in the parent private cloud and requires sufficient [node
   * quota](https://cloud.google.com/vmware-engine/quotas).
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.CreateCluster
   */
  createCluster: {
    methodKind: "unary";
    input: typeof CreateClusterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Modifies a `Cluster` resource. Only fields specified in `updateMask` are
   * applied.
   *
   * During operation processing, the resource is temporarily in the `ACTIVE`
   * state before the operation fully completes. For that period of time, you
   * can't update the resource. Use the operation status to determine when the
   * processing fully completes.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.UpdateCluster
   */
  updateCluster: {
    methodKind: "unary";
    input: typeof UpdateClusterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a `Cluster` resource. To avoid unintended data loss, migrate or
   * gracefully shut down any workloads running on the cluster before deletion.
   * You cannot delete the management cluster of a private cloud using this
   * method.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.DeleteCluster
   */
  deleteCluster: {
    methodKind: "unary";
    input: typeof DeleteClusterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists nodes in a given cluster.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListNodes
   */
  listNodes: {
    methodKind: "unary";
    input: typeof ListNodesRequestSchema;
    output: typeof ListNodesResponseSchema;
  },
  /**
   * Gets details of a single node.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetNode
   */
  getNode: {
    methodKind: "unary";
    input: typeof GetNodeRequestSchema;
    output: typeof NodeSchema;
  },
  /**
   * Lists external IP addresses assigned to VMware workload VMs in a given
   * private cloud.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListExternalAddresses
   */
  listExternalAddresses: {
    methodKind: "unary";
    input: typeof ListExternalAddressesRequestSchema;
    output: typeof ListExternalAddressesResponseSchema;
  },
  /**
   * Lists external IP addresses assigned to VMware workload VMs within the
   * scope of the given network policy.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.FetchNetworkPolicyExternalAddresses
   */
  fetchNetworkPolicyExternalAddresses: {
    methodKind: "unary";
    input: typeof FetchNetworkPolicyExternalAddressesRequestSchema;
    output: typeof FetchNetworkPolicyExternalAddressesResponseSchema;
  },
  /**
   * Gets details of a single external IP address.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetExternalAddress
   */
  getExternalAddress: {
    methodKind: "unary";
    input: typeof GetExternalAddressRequestSchema;
    output: typeof ExternalAddressSchema;
  },
  /**
   * Creates a new `ExternalAddress` resource in a given private cloud. The
   * network policy that corresponds to the private cloud must have the external
   * IP address network service enabled (`NetworkPolicy.external_ip`).
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.CreateExternalAddress
   */
  createExternalAddress: {
    methodKind: "unary";
    input: typeof CreateExternalAddressRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single external IP address.
   * Only fields specified in `update_mask` are applied.
   *
   * During operation processing, the resource is temporarily in the `ACTIVE`
   * state before the operation fully completes. For that period of time, you
   * can't update the resource. Use the operation status to determine when the
   * processing fully completes.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.UpdateExternalAddress
   */
  updateExternalAddress: {
    methodKind: "unary";
    input: typeof UpdateExternalAddressRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single external IP address. When you delete an external IP
   * address, connectivity between the external IP address and the corresponding
   * internal IP address is lost.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.DeleteExternalAddress
   */
  deleteExternalAddress: {
    methodKind: "unary";
    input: typeof DeleteExternalAddressRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists subnets in a given private cloud.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListSubnets
   */
  listSubnets: {
    methodKind: "unary";
    input: typeof ListSubnetsRequestSchema;
    output: typeof ListSubnetsResponseSchema;
  },
  /**
   * Gets details of a single subnet.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetSubnet
   */
  getSubnet: {
    methodKind: "unary";
    input: typeof GetSubnetRequestSchema;
    output: typeof SubnetSchema;
  },
  /**
   * Updates the parameters of a single subnet. Only fields specified in
   * `update_mask` are applied.
   *
   * *Note*: This API is synchronous and always returns a successful
   * `google.longrunning.Operation` (LRO). The returned LRO will only have
   * `done` and `response` fields.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.UpdateSubnet
   */
  updateSubnet: {
    methodKind: "unary";
    input: typeof UpdateSubnetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists `ExternalAccessRule` resources in the specified network policy.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListExternalAccessRules
   */
  listExternalAccessRules: {
    methodKind: "unary";
    input: typeof ListExternalAccessRulesRequestSchema;
    output: typeof ListExternalAccessRulesResponseSchema;
  },
  /**
   * Gets details of a single external access rule.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetExternalAccessRule
   */
  getExternalAccessRule: {
    methodKind: "unary";
    input: typeof GetExternalAccessRuleRequestSchema;
    output: typeof ExternalAccessRuleSchema;
  },
  /**
   * Creates a new external access rule in a given network policy.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.CreateExternalAccessRule
   */
  createExternalAccessRule: {
    methodKind: "unary";
    input: typeof CreateExternalAccessRuleRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single external access rule.
   * Only fields specified in `update_mask` are applied.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.UpdateExternalAccessRule
   */
  updateExternalAccessRule: {
    methodKind: "unary";
    input: typeof UpdateExternalAccessRuleRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single external access rule.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.DeleteExternalAccessRule
   */
  deleteExternalAccessRule: {
    methodKind: "unary";
    input: typeof DeleteExternalAccessRuleRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists logging servers configured for a given private
   * cloud.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListLoggingServers
   */
  listLoggingServers: {
    methodKind: "unary";
    input: typeof ListLoggingServersRequestSchema;
    output: typeof ListLoggingServersResponseSchema;
  },
  /**
   * Gets details of a logging server.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetLoggingServer
   */
  getLoggingServer: {
    methodKind: "unary";
    input: typeof GetLoggingServerRequestSchema;
    output: typeof LoggingServerSchema;
  },
  /**
   * Create a new logging server for a given private cloud.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.CreateLoggingServer
   */
  createLoggingServer: {
    methodKind: "unary";
    input: typeof CreateLoggingServerRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates the parameters of a single logging server.
   * Only fields specified in `update_mask` are applied.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.UpdateLoggingServer
   */
  updateLoggingServer: {
    methodKind: "unary";
    input: typeof UpdateLoggingServerRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a single logging server.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.DeleteLoggingServer
   */
  deleteLoggingServer: {
    methodKind: "unary";
    input: typeof DeleteLoggingServerRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists node types
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListNodeTypes
   */
  listNodeTypes: {
    methodKind: "unary";
    input: typeof ListNodeTypesRequestSchema;
    output: typeof ListNodeTypesResponseSchema;
  },
  /**
   * Gets details of a single `NodeType`.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetNodeType
   */
  getNodeType: {
    methodKind: "unary";
    input: typeof GetNodeTypeRequestSchema;
    output: typeof NodeTypeSchema;
  },
  /**
   * Gets details of credentials for NSX appliance.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ShowNsxCredentials
   */
  showNsxCredentials: {
    methodKind: "unary";
    input: typeof ShowNsxCredentialsRequestSchema;
    output: typeof CredentialsSchema;
  },
  /**
   * Gets details of credentials for Vcenter appliance.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ShowVcenterCredentials
   */
  showVcenterCredentials: {
    methodKind: "unary";
    input: typeof ShowVcenterCredentialsRequestSchema;
    output: typeof CredentialsSchema;
  },
  /**
   * Resets credentials of the NSX appliance.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ResetNsxCredentials
   */
  resetNsxCredentials: {
    methodKind: "unary";
    input: typeof ResetNsxCredentialsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Resets credentials of the Vcenter appliance.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ResetVcenterCredentials
   */
  resetVcenterCredentials: {
    methodKind: "unary";
    input: typeof ResetVcenterCredentialsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets details of the `DnsForwarding` config.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetDnsForwarding
   */
  getDnsForwarding: {
    methodKind: "unary";
    input: typeof GetDnsForwardingRequestSchema;
    output: typeof DnsForwardingSchema;
  },
  /**
   * Updates the parameters of the `DnsForwarding` config, like associated
   * domains. Only fields specified in `update_mask` are applied.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.UpdateDnsForwarding
   */
  updateDnsForwarding: {
    methodKind: "unary";
    input: typeof UpdateDnsForwardingRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Retrieves a `NetworkPeering` resource by its resource name. The resource
   * contains details of the network peering, such as peered
   * networks, import and export custom route configurations, and peering state.
   * NetworkPeering is a global resource and location can only be global.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetNetworkPeering
   */
  getNetworkPeering: {
    methodKind: "unary";
    input: typeof GetNetworkPeeringRequestSchema;
    output: typeof NetworkPeeringSchema;
  },
  /**
   * Lists `NetworkPeering` resources in a given project. NetworkPeering is a
   * global resource and location can only be global.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListNetworkPeerings
   */
  listNetworkPeerings: {
    methodKind: "unary";
    input: typeof ListNetworkPeeringsRequestSchema;
    output: typeof ListNetworkPeeringsResponseSchema;
  },
  /**
   * Creates a new network peering between the peer network and VMware Engine
   * network provided in a `NetworkPeering` resource. NetworkPeering is a
   * global resource and location can only be global.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.CreateNetworkPeering
   */
  createNetworkPeering: {
    methodKind: "unary";
    input: typeof CreateNetworkPeeringRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a `NetworkPeering` resource. When a network peering is deleted for
   * a VMware Engine network, the peer network becomes inaccessible to that
   * VMware Engine network. NetworkPeering is a global resource and location can
   * only be global.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.DeleteNetworkPeering
   */
  deleteNetworkPeering: {
    methodKind: "unary";
    input: typeof DeleteNetworkPeeringRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Modifies a `NetworkPeering` resource. Only the `description` field can be
   * updated. Only fields specified in `updateMask` are applied. NetworkPeering
   * is a global resource and location can only be global.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.UpdateNetworkPeering
   */
  updateNetworkPeering: {
    methodKind: "unary";
    input: typeof UpdateNetworkPeeringRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists the network peering routes exchanged over a peering connection.
   * NetworkPeering is a global resource and location can only be global.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListPeeringRoutes
   */
  listPeeringRoutes: {
    methodKind: "unary";
    input: typeof ListPeeringRoutesRequestSchema;
    output: typeof ListPeeringRoutesResponseSchema;
  },
  /**
   * Creates a new HCX activation key in a given private cloud.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.CreateHcxActivationKey
   */
  createHcxActivationKey: {
    methodKind: "unary";
    input: typeof CreateHcxActivationKeyRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists `HcxActivationKey` resources in a given private cloud.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListHcxActivationKeys
   */
  listHcxActivationKeys: {
    methodKind: "unary";
    input: typeof ListHcxActivationKeysRequestSchema;
    output: typeof ListHcxActivationKeysResponseSchema;
  },
  /**
   * Retrieves a `HcxActivationKey` resource by its resource name.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetHcxActivationKey
   */
  getHcxActivationKey: {
    methodKind: "unary";
    input: typeof GetHcxActivationKeyRequestSchema;
    output: typeof HcxActivationKeySchema;
  },
  /**
   * Retrieves a `NetworkPolicy` resource by its resource name.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetNetworkPolicy
   */
  getNetworkPolicy: {
    methodKind: "unary";
    input: typeof GetNetworkPolicyRequestSchema;
    output: typeof NetworkPolicySchema;
  },
  /**
   * Lists `NetworkPolicy` resources in a specified project and location.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListNetworkPolicies
   */
  listNetworkPolicies: {
    methodKind: "unary";
    input: typeof ListNetworkPoliciesRequestSchema;
    output: typeof ListNetworkPoliciesResponseSchema;
  },
  /**
   * Creates a new network policy in a given VMware Engine network of a
   * project and location (region). A new network policy cannot be created if
   * another network policy already exists in the same scope.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.CreateNetworkPolicy
   */
  createNetworkPolicy: {
    methodKind: "unary";
    input: typeof CreateNetworkPolicyRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Modifies a `NetworkPolicy` resource. Only the following fields can be
   * updated: `internet_access`, `external_ip`, `edge_services_cidr`.
   * Only fields specified in `updateMask` are applied. When updating a network
   * policy, the external IP network service can only be disabled if there are
   * no external IP addresses present in the scope of the policy. Also, a
   * `NetworkService` cannot be updated when `NetworkService.state` is set
   * to `RECONCILING`.
   *
   * During operation processing, the resource is temporarily in the `ACTIVE`
   * state before the operation fully completes. For that period of time, you
   * can't update the resource. Use the operation status to determine when the
   * processing fully completes.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.UpdateNetworkPolicy
   */
  updateNetworkPolicy: {
    methodKind: "unary";
    input: typeof UpdateNetworkPolicyRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a `NetworkPolicy` resource. A network policy cannot be deleted
   * when `NetworkService.state` is set to `RECONCILING` for either its external
   * IP or internet access service.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.DeleteNetworkPolicy
   */
  deleteNetworkPolicy: {
    methodKind: "unary";
    input: typeof DeleteNetworkPolicyRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists Consumer VPCs bound to Management DNS Zone of a given private cloud.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListManagementDnsZoneBindings
   */
  listManagementDnsZoneBindings: {
    methodKind: "unary";
    input: typeof ListManagementDnsZoneBindingsRequestSchema;
    output: typeof ListManagementDnsZoneBindingsResponseSchema;
  },
  /**
   * Retrieves a 'ManagementDnsZoneBinding' resource by its resource name.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetManagementDnsZoneBinding
   */
  getManagementDnsZoneBinding: {
    methodKind: "unary";
    input: typeof GetManagementDnsZoneBindingRequestSchema;
    output: typeof ManagementDnsZoneBindingSchema;
  },
  /**
   * Creates a new `ManagementDnsZoneBinding` resource in a private cloud.
   * This RPC creates the DNS binding and the resource that represents the
   * DNS binding of the consumer VPC network to the management DNS zone. A
   * management DNS zone is the Cloud DNS cross-project binding zone that
   * VMware Engine creates for each private cloud. It contains FQDNs and
   * corresponding IP addresses for the private cloud's ESXi hosts and
   * management VM appliances like vCenter and NSX Manager.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.CreateManagementDnsZoneBinding
   */
  createManagementDnsZoneBinding: {
    methodKind: "unary";
    input: typeof CreateManagementDnsZoneBindingRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a `ManagementDnsZoneBinding` resource.
   * Only fields specified in `update_mask` are applied.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.UpdateManagementDnsZoneBinding
   */
  updateManagementDnsZoneBinding: {
    methodKind: "unary";
    input: typeof UpdateManagementDnsZoneBindingRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a `ManagementDnsZoneBinding` resource. When a management DNS zone
   * binding is deleted, the corresponding consumer VPC network is no longer
   * bound to the management DNS zone.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.DeleteManagementDnsZoneBinding
   */
  deleteManagementDnsZoneBinding: {
    methodKind: "unary";
    input: typeof DeleteManagementDnsZoneBindingRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Retries to create a `ManagementDnsZoneBinding` resource that is
   * in failed state.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.RepairManagementDnsZoneBinding
   */
  repairManagementDnsZoneBinding: {
    methodKind: "unary";
    input: typeof RepairManagementDnsZoneBindingRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Creates a new VMware Engine network that can be used by a private cloud.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.CreateVmwareEngineNetwork
   */
  createVmwareEngineNetwork: {
    methodKind: "unary";
    input: typeof CreateVmwareEngineNetworkRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Modifies a VMware Engine network resource. Only the following fields can be
   * updated: `description`. Only fields specified in `updateMask` are
   * applied.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.UpdateVmwareEngineNetwork
   */
  updateVmwareEngineNetwork: {
    methodKind: "unary";
    input: typeof UpdateVmwareEngineNetworkRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a `VmwareEngineNetwork` resource. You can only delete a VMware
   * Engine network after all resources that refer to it are deleted. For
   * example, a private cloud, a network peering, and a network policy can all
   * refer to the same VMware Engine network.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.DeleteVmwareEngineNetwork
   */
  deleteVmwareEngineNetwork: {
    methodKind: "unary";
    input: typeof DeleteVmwareEngineNetworkRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Retrieves a `VmwareEngineNetwork` resource by its resource name. The
   * resource contains details of the VMware Engine network, such as its VMware
   * Engine network type, peered networks in a service project, and state
   * (for example, `CREATING`, `ACTIVE`, `DELETING`).
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetVmwareEngineNetwork
   */
  getVmwareEngineNetwork: {
    methodKind: "unary";
    input: typeof GetVmwareEngineNetworkRequestSchema;
    output: typeof VmwareEngineNetworkSchema;
  },
  /**
   * Lists `VmwareEngineNetwork` resources in a given project and location.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListVmwareEngineNetworks
   */
  listVmwareEngineNetworks: {
    methodKind: "unary";
    input: typeof ListVmwareEngineNetworksRequestSchema;
    output: typeof ListVmwareEngineNetworksResponseSchema;
  },
  /**
   * Creates a new private connection that can be used for accessing private
   * Clouds.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.CreatePrivateConnection
   */
  createPrivateConnection: {
    methodKind: "unary";
    input: typeof CreatePrivateConnectionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Retrieves a `PrivateConnection` resource by its resource name. The resource
   * contains details of the private connection, such as connected
   * network, routing mode and state.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetPrivateConnection
   */
  getPrivateConnection: {
    methodKind: "unary";
    input: typeof GetPrivateConnectionRequestSchema;
    output: typeof PrivateConnectionSchema;
  },
  /**
   * Lists `PrivateConnection` resources in a given project and location.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListPrivateConnections
   */
  listPrivateConnections: {
    methodKind: "unary";
    input: typeof ListPrivateConnectionsRequestSchema;
    output: typeof ListPrivateConnectionsResponseSchema;
  },
  /**
   * Modifies a `PrivateConnection` resource. Only `description` and
   * `routing_mode` fields can be updated. Only fields specified in `updateMask`
   * are applied.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.UpdatePrivateConnection
   */
  updatePrivateConnection: {
    methodKind: "unary";
    input: typeof UpdatePrivateConnectionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a `PrivateConnection` resource. When a private connection is
   * deleted for a VMware Engine network, the connected network becomes
   * inaccessible to that VMware Engine network.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.DeletePrivateConnection
   */
  deletePrivateConnection: {
    methodKind: "unary";
    input: typeof DeletePrivateConnectionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists the private connection routes exchanged over a peering connection.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.ListPrivateConnectionPeeringRoutes
   */
  listPrivateConnectionPeeringRoutes: {
    methodKind: "unary";
    input: typeof ListPrivateConnectionPeeringRoutesRequestSchema;
    output: typeof ListPrivateConnectionPeeringRoutesResponseSchema;
  },
  /**
   * Grants the bind permission to the customer provided principal(user /
   * service account) to bind their DNS zone with the intranet VPC associated
   * with the project. DnsBindPermission is a global resource and location can
   * only be global.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GrantDnsBindPermission
   */
  grantDnsBindPermission: {
    methodKind: "unary";
    input: typeof GrantDnsBindPermissionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets all the principals having bind permission on the intranet VPC
   * associated with the consumer project granted by the Grant API.
   * DnsBindPermission is a global resource and location can only be global.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.GetDnsBindPermission
   */
  getDnsBindPermission: {
    methodKind: "unary";
    input: typeof GetDnsBindPermissionRequestSchema;
    output: typeof DnsBindPermissionSchema;
  },
  /**
   * Revokes the bind permission from the customer provided principal(user /
   * service account) on the intranet VPC associated with the consumer project.
   * DnsBindPermission is a global resource and location can only be global.
   *
   * @generated from rpc google.cloud.vmwareengine.v1.VmwareEngine.RevokeDnsBindPermission
   */
  revokeDnsBindPermission: {
    methodKind: "unary";
    input: typeof RevokeDnsBindPermissionRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_vmwareengine_v1_vmwareengine, 0);

