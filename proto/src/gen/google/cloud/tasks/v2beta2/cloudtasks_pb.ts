// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/tasks/v2beta2/cloudtasks.proto (package google.cloud.tasks.v2beta2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { HttpBody } from "../../../api/httpbody_pb";
import { file_google_api_httpbody } from "../../../api/httpbody_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Queue, QueueSchema } from "./queue_pb";
import { file_google_cloud_tasks_v2beta2_queue } from "./queue_pb";
import type { Task, Task_View, TaskSchema } from "./task_pb";
import { file_google_cloud_tasks_v2beta2_task } from "./task_pb";
import type { GetIamPolicyRequestSchema, SetIamPolicyRequestSchema, TestIamPermissionsRequestSchema, TestIamPermissionsResponseSchema } from "../../../iam/v1/iam_policy_pb";
import { file_google_iam_v1_iam_policy } from "../../../iam/v1/iam_policy_pb";
import type { PolicySchema } from "../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../iam/v1/policy_pb";
import type { Duration, EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/tasks/v2beta2/cloudtasks.proto.
 */
export const file_google_cloud_tasks_v2beta2_cloudtasks: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_httpbody, file_google_api_resource, file_google_cloud_tasks_v2beta2_queue, file_google_cloud_tasks_v2beta2_task, file_google_iam_v1_iam_policy, file_google_iam_v1_policy, file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Request message for
 * [ListQueues][google.cloud.tasks.v2beta2.CloudTasks.ListQueues].
 *
 * @generated from message google.cloud.tasks.v2beta2.ListQueuesRequest
 */
export type ListQueuesRequest = Message<"google.cloud.tasks.v2beta2.ListQueuesRequest"> & {
  /**
   * Required. The location name.
   * For example: `projects/PROJECT_ID/locations/LOCATION_ID`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * `filter` can be used to specify a subset of queues. Any
   * [Queue][google.cloud.tasks.v2beta2.Queue] field can be used as a filter and
   * several operators as supported. For example: `<=, <, >=, >, !=, =, :`. The
   * filter syntax is the same as described in [Stackdriver's Advanced Logs
   * Filters](https://cloud.google.com/logging/docs/view/advanced_filters).
   *
   * Sample filter "app_engine_http_target: *".
   *
   * Note that using filters might cause fewer queues than the
   * requested_page size to be returned.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Requested page size.
   *
   * The maximum page size is 9800. If unspecified, the page size will
   * be the maximum. Fewer queues than requested might be returned,
   * even if more queues exist; use the
   * [next_page_token][google.cloud.tasks.v2beta2.ListQueuesResponse.next_page_token]
   * in the response to determine if more queues exist.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * A token identifying the page of results to return.
   *
   * To request the first page results, page_token must be empty. To
   * request the next page of results, page_token must be the value of
   * [next_page_token][google.cloud.tasks.v2beta2.ListQueuesResponse.next_page_token]
   * returned from the previous call to
   * [ListQueues][google.cloud.tasks.v2beta2.CloudTasks.ListQueues] method. It
   * is an error to switch the value of the
   * [filter][google.cloud.tasks.v2beta2.ListQueuesRequest.filter] while
   * iterating through pages.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Optional. Read mask is used for a more granular control over what the API
   * returns. If the mask is not present all fields will be returned except
   * [Queue.stats]. [Queue.stats] will be returned only if it was  explicitly
   * specified in the mask.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 5;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.ListQueuesRequest.
 * Use `create(ListQueuesRequestSchema)` to create a new message.
 */
export const ListQueuesRequestSchema: GenMessage<ListQueuesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 0);

/**
 * Response message for
 * [ListQueues][google.cloud.tasks.v2beta2.CloudTasks.ListQueues].
 *
 * @generated from message google.cloud.tasks.v2beta2.ListQueuesResponse
 */
export type ListQueuesResponse = Message<"google.cloud.tasks.v2beta2.ListQueuesResponse"> & {
  /**
   * The list of queues.
   *
   * @generated from field: repeated google.cloud.tasks.v2beta2.Queue queues = 1;
   */
  queues: Queue[];

  /**
   * A token to retrieve next page of results.
   *
   * To return the next page of results, call
   * [ListQueues][google.cloud.tasks.v2beta2.CloudTasks.ListQueues] with this
   * value as the
   * [page_token][google.cloud.tasks.v2beta2.ListQueuesRequest.page_token].
   *
   * If the next_page_token is empty, there are no more results.
   *
   * The page token is valid for only 2 hours.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.ListQueuesResponse.
 * Use `create(ListQueuesResponseSchema)` to create a new message.
 */
export const ListQueuesResponseSchema: GenMessage<ListQueuesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 1);

/**
 * Request message for
 * [GetQueue][google.cloud.tasks.v2beta2.CloudTasks.GetQueue].
 *
 * @generated from message google.cloud.tasks.v2beta2.GetQueueRequest
 */
export type GetQueueRequest = Message<"google.cloud.tasks.v2beta2.GetQueueRequest"> & {
  /**
   * Required. The resource name of the queue. For example:
   * `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. Read mask is used for a more granular control over what the API
   * returns. If the mask is not present all fields will be returned except
   * [Queue.stats]. [Queue.stats] will be returned only if it was  explicitly
   * specified in the mask.
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 2;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.GetQueueRequest.
 * Use `create(GetQueueRequestSchema)` to create a new message.
 */
export const GetQueueRequestSchema: GenMessage<GetQueueRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 2);

/**
 * Request message for
 * [CreateQueue][google.cloud.tasks.v2beta2.CloudTasks.CreateQueue].
 *
 * @generated from message google.cloud.tasks.v2beta2.CreateQueueRequest
 */
export type CreateQueueRequest = Message<"google.cloud.tasks.v2beta2.CreateQueueRequest"> & {
  /**
   * Required. The location name in which the queue will be created.
   * For example: `projects/PROJECT_ID/locations/LOCATION_ID`
   *
   * The list of allowed locations can be obtained by calling Cloud
   * Tasks' implementation of
   * [ListLocations][google.cloud.location.Locations.ListLocations].
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The queue to create.
   *
   * [Queue's name][google.cloud.tasks.v2beta2.Queue.name] cannot be the same as
   * an existing queue.
   *
   * @generated from field: google.cloud.tasks.v2beta2.Queue queue = 2;
   */
  queue?: Queue;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.CreateQueueRequest.
 * Use `create(CreateQueueRequestSchema)` to create a new message.
 */
export const CreateQueueRequestSchema: GenMessage<CreateQueueRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 3);

/**
 * Request message for
 * [UpdateQueue][google.cloud.tasks.v2beta2.CloudTasks.UpdateQueue].
 *
 * @generated from message google.cloud.tasks.v2beta2.UpdateQueueRequest
 */
export type UpdateQueueRequest = Message<"google.cloud.tasks.v2beta2.UpdateQueueRequest"> & {
  /**
   * Required. The queue to create or update.
   *
   * The queue's [name][google.cloud.tasks.v2beta2.Queue.name] must be
   * specified.
   *
   * Output only fields cannot be modified using UpdateQueue.
   * Any value specified for an output only field will be ignored.
   * The queue's [name][google.cloud.tasks.v2beta2.Queue.name] cannot be
   * changed.
   *
   * @generated from field: google.cloud.tasks.v2beta2.Queue queue = 1;
   */
  queue?: Queue;

  /**
   * A mask used to specify which fields of the queue are being updated.
   *
   * If empty, then all fields will be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.UpdateQueueRequest.
 * Use `create(UpdateQueueRequestSchema)` to create a new message.
 */
export const UpdateQueueRequestSchema: GenMessage<UpdateQueueRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 4);

/**
 * Request message for
 * [DeleteQueue][google.cloud.tasks.v2beta2.CloudTasks.DeleteQueue].
 *
 * @generated from message google.cloud.tasks.v2beta2.DeleteQueueRequest
 */
export type DeleteQueueRequest = Message<"google.cloud.tasks.v2beta2.DeleteQueueRequest"> & {
  /**
   * Required. The queue name. For example:
   * `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.DeleteQueueRequest.
 * Use `create(DeleteQueueRequestSchema)` to create a new message.
 */
export const DeleteQueueRequestSchema: GenMessage<DeleteQueueRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 5);

/**
 * Request message for
 * [PurgeQueue][google.cloud.tasks.v2beta2.CloudTasks.PurgeQueue].
 *
 * @generated from message google.cloud.tasks.v2beta2.PurgeQueueRequest
 */
export type PurgeQueueRequest = Message<"google.cloud.tasks.v2beta2.PurgeQueueRequest"> & {
  /**
   * Required. The queue name. For example:
   * `projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.PurgeQueueRequest.
 * Use `create(PurgeQueueRequestSchema)` to create a new message.
 */
export const PurgeQueueRequestSchema: GenMessage<PurgeQueueRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 6);

/**
 * Request message for
 * [PauseQueue][google.cloud.tasks.v2beta2.CloudTasks.PauseQueue].
 *
 * @generated from message google.cloud.tasks.v2beta2.PauseQueueRequest
 */
export type PauseQueueRequest = Message<"google.cloud.tasks.v2beta2.PauseQueueRequest"> & {
  /**
   * Required. The queue name. For example:
   * `projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.PauseQueueRequest.
 * Use `create(PauseQueueRequestSchema)` to create a new message.
 */
export const PauseQueueRequestSchema: GenMessage<PauseQueueRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 7);

/**
 * Request message for
 * [ResumeQueue][google.cloud.tasks.v2beta2.CloudTasks.ResumeQueue].
 *
 * @generated from message google.cloud.tasks.v2beta2.ResumeQueueRequest
 */
export type ResumeQueueRequest = Message<"google.cloud.tasks.v2beta2.ResumeQueueRequest"> & {
  /**
   * Required. The queue name. For example:
   * `projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.ResumeQueueRequest.
 * Use `create(ResumeQueueRequestSchema)` to create a new message.
 */
export const ResumeQueueRequestSchema: GenMessage<ResumeQueueRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 8);

/**
 * Request message for
 * [UploadQueueYaml][google.cloud.tasks.v2beta2.CloudTasks.UploadQueueYaml].
 *
 * @generated from message google.cloud.tasks.v2beta2.UploadQueueYamlRequest
 */
export type UploadQueueYamlRequest = Message<"google.cloud.tasks.v2beta2.UploadQueueYamlRequest"> & {
  /**
   * Required. The App ID is supplied as an HTTP parameter. Unlike internal
   * usage of App ID, it does not include a region prefix. Rather, the App ID
   * represents the Project ID against which to make the request.
   *
   * @generated from field: string app_id = 1;
   */
  appId: string;

  /**
   * The http body contains the queue.yaml file which used to update queue lists
   *
   * @generated from field: optional google.api.HttpBody http_body = 2;
   */
  httpBody?: HttpBody;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.UploadQueueYamlRequest.
 * Use `create(UploadQueueYamlRequestSchema)` to create a new message.
 */
export const UploadQueueYamlRequestSchema: GenMessage<UploadQueueYamlRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 9);

/**
 * Request message for listing tasks using
 * [ListTasks][google.cloud.tasks.v2beta2.CloudTasks.ListTasks].
 *
 * @generated from message google.cloud.tasks.v2beta2.ListTasksRequest
 */
export type ListTasksRequest = Message<"google.cloud.tasks.v2beta2.ListTasksRequest"> & {
  /**
   * Required. The queue name. For example:
   * `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The response_view specifies which subset of the
   * [Task][google.cloud.tasks.v2beta2.Task] will be returned.
   *
   * By default response_view is
   * [BASIC][google.cloud.tasks.v2beta2.Task.View.BASIC]; not all information is
   * retrieved by default because some data, such as payloads, might be
   * desirable to return only when needed because of its large size or because
   * of the sensitivity of data that it contains.
   *
   * Authorization for [FULL][google.cloud.tasks.v2beta2.Task.View.FULL]
   * requires `cloudtasks.tasks.fullView` [Google
   * IAM](https://cloud.google.com/iam/) permission on the
   * [Task][google.cloud.tasks.v2beta2.Task] resource.
   *
   * @generated from field: google.cloud.tasks.v2beta2.Task.View response_view = 2;
   */
  responseView: Task_View;

  /**
   * Maximum page size.
   *
   * Fewer tasks than requested might be returned, even if more tasks exist; use
   * [next_page_token][google.cloud.tasks.v2beta2.ListTasksResponse.next_page_token]
   * in the response to determine if more tasks exist.
   *
   * The maximum page size is 1000. If unspecified, the page size will be the
   * maximum.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;

  /**
   * A token identifying the page of results to return.
   *
   * To request the first page results, page_token must be empty. To
   * request the next page of results, page_token must be the value of
   * [next_page_token][google.cloud.tasks.v2beta2.ListTasksResponse.next_page_token]
   * returned from the previous call to
   * [ListTasks][google.cloud.tasks.v2beta2.CloudTasks.ListTasks] method.
   *
   * The page token is valid for only 2 hours.
   *
   * @generated from field: string page_token = 5;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.ListTasksRequest.
 * Use `create(ListTasksRequestSchema)` to create a new message.
 */
export const ListTasksRequestSchema: GenMessage<ListTasksRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 10);

/**
 * Response message for listing tasks using
 * [ListTasks][google.cloud.tasks.v2beta2.CloudTasks.ListTasks].
 *
 * @generated from message google.cloud.tasks.v2beta2.ListTasksResponse
 */
export type ListTasksResponse = Message<"google.cloud.tasks.v2beta2.ListTasksResponse"> & {
  /**
   * The list of tasks.
   *
   * @generated from field: repeated google.cloud.tasks.v2beta2.Task tasks = 1;
   */
  tasks: Task[];

  /**
   * A token to retrieve next page of results.
   *
   * To return the next page of results, call
   * [ListTasks][google.cloud.tasks.v2beta2.CloudTasks.ListTasks] with this
   * value as the
   * [page_token][google.cloud.tasks.v2beta2.ListTasksRequest.page_token].
   *
   * If the next_page_token is empty, there are no more results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.ListTasksResponse.
 * Use `create(ListTasksResponseSchema)` to create a new message.
 */
export const ListTasksResponseSchema: GenMessage<ListTasksResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 11);

/**
 * Request message for getting a task using
 * [GetTask][google.cloud.tasks.v2beta2.CloudTasks.GetTask].
 *
 * @generated from message google.cloud.tasks.v2beta2.GetTaskRequest
 */
export type GetTaskRequest = Message<"google.cloud.tasks.v2beta2.GetTaskRequest"> & {
  /**
   * Required. The task name. For example:
   * `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The response_view specifies which subset of the
   * [Task][google.cloud.tasks.v2beta2.Task] will be returned.
   *
   * By default response_view is
   * [BASIC][google.cloud.tasks.v2beta2.Task.View.BASIC]; not all information is
   * retrieved by default because some data, such as payloads, might be
   * desirable to return only when needed because of its large size or because
   * of the sensitivity of data that it contains.
   *
   * Authorization for [FULL][google.cloud.tasks.v2beta2.Task.View.FULL]
   * requires `cloudtasks.tasks.fullView` [Google
   * IAM](https://cloud.google.com/iam/) permission on the
   * [Task][google.cloud.tasks.v2beta2.Task] resource.
   *
   * @generated from field: google.cloud.tasks.v2beta2.Task.View response_view = 2;
   */
  responseView: Task_View;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.GetTaskRequest.
 * Use `create(GetTaskRequestSchema)` to create a new message.
 */
export const GetTaskRequestSchema: GenMessage<GetTaskRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 12);

/**
 * Request message for
 * [CreateTask][google.cloud.tasks.v2beta2.CloudTasks.CreateTask].
 *
 * @generated from message google.cloud.tasks.v2beta2.CreateTaskRequest
 */
export type CreateTaskRequest = Message<"google.cloud.tasks.v2beta2.CreateTaskRequest"> & {
  /**
   * Required. The queue name. For example:
   * `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
   *
   * The queue must already exist.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The task to add.
   *
   * Task names have the following format:
   * `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`.
   * The user can optionally specify a task
   * [name][google.cloud.tasks.v2beta2.Task.name]. If a name is not specified
   * then the system will generate a random unique task id, which will be set in
   * the task returned in the [response][google.cloud.tasks.v2beta2.Task.name].
   *
   * If [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] is not
   * set or is in the past then Cloud Tasks will set it to the current time.
   *
   * Task De-duplication:
   *
   * Explicitly specifying a task ID enables task de-duplication.  If
   * a task's ID is identical to that of an existing task or a task
   * that was deleted or completed recently then the call will fail
   * with [ALREADY_EXISTS][google.rpc.Code.ALREADY_EXISTS].
   * If the task's queue was created using Cloud Tasks, then another task with
   * the same name can't be created for ~1 hour after the original task was
   * deleted or completed. If the task's queue was created using queue.yaml or
   * queue.xml, then another task with the same name can't be created
   * for ~9 days after the original task was deleted or completed.
   *
   * Because there is an extra lookup cost to identify duplicate task
   * names, these [CreateTask][google.cloud.tasks.v2beta2.CloudTasks.CreateTask]
   * calls have significantly increased latency. Using hashed strings for the
   * task id or for the prefix of the task id is recommended. Choosing task ids
   * that are sequential or have sequential prefixes, for example using a
   * timestamp, causes an increase in latency and error rates in all
   * task commands. The infrastructure relies on an approximately
   * uniform distribution of task ids to store and serve tasks
   * efficiently.
   *
   * @generated from field: google.cloud.tasks.v2beta2.Task task = 2;
   */
  task?: Task;

  /**
   * The response_view specifies which subset of the
   * [Task][google.cloud.tasks.v2beta2.Task] will be returned.
   *
   * By default response_view is
   * [BASIC][google.cloud.tasks.v2beta2.Task.View.BASIC]; not all information is
   * retrieved by default because some data, such as payloads, might be
   * desirable to return only when needed because of its large size or because
   * of the sensitivity of data that it contains.
   *
   * Authorization for [FULL][google.cloud.tasks.v2beta2.Task.View.FULL]
   * requires `cloudtasks.tasks.fullView` [Google
   * IAM](https://cloud.google.com/iam/) permission on the
   * [Task][google.cloud.tasks.v2beta2.Task] resource.
   *
   * @generated from field: google.cloud.tasks.v2beta2.Task.View response_view = 3;
   */
  responseView: Task_View;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.CreateTaskRequest.
 * Use `create(CreateTaskRequestSchema)` to create a new message.
 */
export const CreateTaskRequestSchema: GenMessage<CreateTaskRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 13);

/**
 * Request message for deleting a task using
 * [DeleteTask][google.cloud.tasks.v2beta2.CloudTasks.DeleteTask].
 *
 * @generated from message google.cloud.tasks.v2beta2.DeleteTaskRequest
 */
export type DeleteTaskRequest = Message<"google.cloud.tasks.v2beta2.DeleteTaskRequest"> & {
  /**
   * Required. The task name. For example:
   * `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.DeleteTaskRequest.
 * Use `create(DeleteTaskRequestSchema)` to create a new message.
 */
export const DeleteTaskRequestSchema: GenMessage<DeleteTaskRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 14);

/**
 * Request message for leasing tasks using
 * [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks].
 *
 * @generated from message google.cloud.tasks.v2beta2.LeaseTasksRequest
 */
export type LeaseTasksRequest = Message<"google.cloud.tasks.v2beta2.LeaseTasksRequest"> & {
  /**
   * Required. The queue name. For example:
   * `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of tasks to lease.
   *
   * The system will make a best effort to return as close to as
   * `max_tasks` as possible.
   *
   * The largest that `max_tasks` can be is 1000.
   *
   * The maximum total size of a [lease tasks
   * response][google.cloud.tasks.v2beta2.LeaseTasksResponse] is 32 MB. If the
   * sum of all task sizes requested reaches this limit, fewer tasks than
   * requested are returned.
   *
   * @generated from field: int32 max_tasks = 2;
   */
  maxTasks: number;

  /**
   * Required. The duration of the lease.
   *
   * Each task returned in the
   * [response][google.cloud.tasks.v2beta2.LeaseTasksResponse] will have its
   * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] set to the
   * current time plus the `lease_duration`. The task is leased until its
   * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time]; thus, the
   * task will not be returned to another
   * [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] call before
   * its [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time].
   *
   *
   * After the worker has successfully finished the work associated
   * with the task, the worker must call via
   * [AcknowledgeTask][google.cloud.tasks.v2beta2.CloudTasks.AcknowledgeTask]
   * before the [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time].
   * Otherwise the task will be returned to a later
   * [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] call so that
   * another worker can retry it.
   *
   * The maximum lease duration is 1 week.
   * `lease_duration` will be truncated to the nearest second.
   *
   * @generated from field: google.protobuf.Duration lease_duration = 3;
   */
  leaseDuration?: Duration;

  /**
   * The response_view specifies which subset of the
   * [Task][google.cloud.tasks.v2beta2.Task] will be returned.
   *
   * By default response_view is
   * [BASIC][google.cloud.tasks.v2beta2.Task.View.BASIC]; not all information is
   * retrieved by default because some data, such as payloads, might be
   * desirable to return only when needed because of its large size or because
   * of the sensitivity of data that it contains.
   *
   * Authorization for [FULL][google.cloud.tasks.v2beta2.Task.View.FULL]
   * requires `cloudtasks.tasks.fullView` [Google
   * IAM](https://cloud.google.com/iam/) permission on the
   * [Task][google.cloud.tasks.v2beta2.Task] resource.
   *
   * @generated from field: google.cloud.tasks.v2beta2.Task.View response_view = 4;
   */
  responseView: Task_View;

  /**
   * `filter` can be used to specify a subset of tasks to lease.
   *
   * When `filter` is set to `tag=<my-tag>` then the
   * [response][google.cloud.tasks.v2beta2.LeaseTasksResponse] will contain only
   * tasks whose [tag][google.cloud.tasks.v2beta2.PullMessage.tag] is equal to
   * `<my-tag>`. `<my-tag>` must be less than 500 characters.
   *
   * When `filter` is set to `tag_function=oldest_tag()`, only tasks which have
   * the same tag as the task with the oldest
   * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] will be
   * returned.
   *
   * Grammar Syntax:
   *
   * * `filter = "tag=" tag | "tag_function=" function`
   *
   * * `tag = string`
   *
   * * `function = "oldest_tag()"`
   *
   * The `oldest_tag()` function returns tasks which have the same tag as the
   * oldest task (ordered by schedule time).
   *
   * SDK compatibility: Although the SDK allows tags to be either
   * string or
   * [bytes](https://cloud.google.com/appengine/docs/standard/java/javadoc/com/google/appengine/api/taskqueue/TaskOptions.html#tag-byte:A-),
   * only UTF-8 encoded tags can be used in Cloud Tasks. Tag which
   * aren't UTF-8 encoded can't be used in the
   * [filter][google.cloud.tasks.v2beta2.LeaseTasksRequest.filter] and the
   * task's [tag][google.cloud.tasks.v2beta2.PullMessage.tag] will be displayed
   * as empty in Cloud Tasks.
   *
   * @generated from field: string filter = 5;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.LeaseTasksRequest.
 * Use `create(LeaseTasksRequestSchema)` to create a new message.
 */
export const LeaseTasksRequestSchema: GenMessage<LeaseTasksRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 15);

/**
 * Response message for leasing tasks using
 * [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks].
 *
 * @generated from message google.cloud.tasks.v2beta2.LeaseTasksResponse
 */
export type LeaseTasksResponse = Message<"google.cloud.tasks.v2beta2.LeaseTasksResponse"> & {
  /**
   * The leased tasks.
   *
   * @generated from field: repeated google.cloud.tasks.v2beta2.Task tasks = 1;
   */
  tasks: Task[];
};

/**
 * Describes the message google.cloud.tasks.v2beta2.LeaseTasksResponse.
 * Use `create(LeaseTasksResponseSchema)` to create a new message.
 */
export const LeaseTasksResponseSchema: GenMessage<LeaseTasksResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 16);

/**
 * Request message for acknowledging a task using
 * [AcknowledgeTask][google.cloud.tasks.v2beta2.CloudTasks.AcknowledgeTask].
 *
 * @generated from message google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
 */
export type AcknowledgeTaskRequest = Message<"google.cloud.tasks.v2beta2.AcknowledgeTaskRequest"> & {
  /**
   * Required. The task name. For example:
   * `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The task's current schedule time, available in the
   * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] returned by
   * [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] response or
   * [RenewLease][google.cloud.tasks.v2beta2.CloudTasks.RenewLease] response.
   * This restriction is to ensure that your worker currently holds the lease.
   *
   * @generated from field: google.protobuf.Timestamp schedule_time = 2;
   */
  scheduleTime?: Timestamp;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.AcknowledgeTaskRequest.
 * Use `create(AcknowledgeTaskRequestSchema)` to create a new message.
 */
export const AcknowledgeTaskRequestSchema: GenMessage<AcknowledgeTaskRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 17);

/**
 * Request message for renewing a lease using
 * [RenewLease][google.cloud.tasks.v2beta2.CloudTasks.RenewLease].
 *
 * @generated from message google.cloud.tasks.v2beta2.RenewLeaseRequest
 */
export type RenewLeaseRequest = Message<"google.cloud.tasks.v2beta2.RenewLeaseRequest"> & {
  /**
   * Required. The task name. For example:
   * `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The task's current schedule time, available in the
   * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] returned by
   * [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] response or
   * [RenewLease][google.cloud.tasks.v2beta2.CloudTasks.RenewLease] response.
   * This restriction is to ensure that your worker currently holds the lease.
   *
   * @generated from field: google.protobuf.Timestamp schedule_time = 2;
   */
  scheduleTime?: Timestamp;

  /**
   * Required. The desired new lease duration, starting from now.
   *
   *
   * The maximum lease duration is 1 week.
   * `lease_duration` will be truncated to the nearest second.
   *
   * @generated from field: google.protobuf.Duration lease_duration = 3;
   */
  leaseDuration?: Duration;

  /**
   * The response_view specifies which subset of the
   * [Task][google.cloud.tasks.v2beta2.Task] will be returned.
   *
   * By default response_view is
   * [BASIC][google.cloud.tasks.v2beta2.Task.View.BASIC]; not all information is
   * retrieved by default because some data, such as payloads, might be
   * desirable to return only when needed because of its large size or because
   * of the sensitivity of data that it contains.
   *
   * Authorization for [FULL][google.cloud.tasks.v2beta2.Task.View.FULL]
   * requires `cloudtasks.tasks.fullView` [Google
   * IAM](https://cloud.google.com/iam/) permission on the
   * [Task][google.cloud.tasks.v2beta2.Task] resource.
   *
   * @generated from field: google.cloud.tasks.v2beta2.Task.View response_view = 4;
   */
  responseView: Task_View;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.RenewLeaseRequest.
 * Use `create(RenewLeaseRequestSchema)` to create a new message.
 */
export const RenewLeaseRequestSchema: GenMessage<RenewLeaseRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 18);

/**
 * Request message for canceling a lease using
 * [CancelLease][google.cloud.tasks.v2beta2.CloudTasks.CancelLease].
 *
 * @generated from message google.cloud.tasks.v2beta2.CancelLeaseRequest
 */
export type CancelLeaseRequest = Message<"google.cloud.tasks.v2beta2.CancelLeaseRequest"> & {
  /**
   * Required. The task name. For example:
   * `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The task's current schedule time, available in the
   * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] returned by
   * [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] response or
   * [RenewLease][google.cloud.tasks.v2beta2.CloudTasks.RenewLease] response.
   * This restriction is to ensure that your worker currently holds the lease.
   *
   * @generated from field: google.protobuf.Timestamp schedule_time = 2;
   */
  scheduleTime?: Timestamp;

  /**
   * The response_view specifies which subset of the
   * [Task][google.cloud.tasks.v2beta2.Task] will be returned.
   *
   * By default response_view is
   * [BASIC][google.cloud.tasks.v2beta2.Task.View.BASIC]; not all information is
   * retrieved by default because some data, such as payloads, might be
   * desirable to return only when needed because of its large size or because
   * of the sensitivity of data that it contains.
   *
   * Authorization for [FULL][google.cloud.tasks.v2beta2.Task.View.FULL]
   * requires `cloudtasks.tasks.fullView` [Google
   * IAM](https://cloud.google.com/iam/) permission on the
   * [Task][google.cloud.tasks.v2beta2.Task] resource.
   *
   * @generated from field: google.cloud.tasks.v2beta2.Task.View response_view = 3;
   */
  responseView: Task_View;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.CancelLeaseRequest.
 * Use `create(CancelLeaseRequestSchema)` to create a new message.
 */
export const CancelLeaseRequestSchema: GenMessage<CancelLeaseRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 19);

/**
 * Request message for forcing a task to run now using
 * [RunTask][google.cloud.tasks.v2beta2.CloudTasks.RunTask].
 *
 * @generated from message google.cloud.tasks.v2beta2.RunTaskRequest
 */
export type RunTaskRequest = Message<"google.cloud.tasks.v2beta2.RunTaskRequest"> & {
  /**
   * Required. The task name. For example:
   * `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The response_view specifies which subset of the
   * [Task][google.cloud.tasks.v2beta2.Task] will be returned.
   *
   * By default response_view is
   * [BASIC][google.cloud.tasks.v2beta2.Task.View.BASIC]; not all information is
   * retrieved by default because some data, such as payloads, might be
   * desirable to return only when needed because of its large size or because
   * of the sensitivity of data that it contains.
   *
   * Authorization for [FULL][google.cloud.tasks.v2beta2.Task.View.FULL]
   * requires `cloudtasks.tasks.fullView` [Google
   * IAM](https://cloud.google.com/iam/) permission on the
   * [Task][google.cloud.tasks.v2beta2.Task] resource.
   *
   * @generated from field: google.cloud.tasks.v2beta2.Task.View response_view = 2;
   */
  responseView: Task_View;
};

/**
 * Describes the message google.cloud.tasks.v2beta2.RunTaskRequest.
 * Use `create(RunTaskRequestSchema)` to create a new message.
 */
export const RunTaskRequestSchema: GenMessage<RunTaskRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 20);

/**
 * Cloud Tasks allows developers to manage the execution of background
 * work in their applications.
 *
 * @generated from service google.cloud.tasks.v2beta2.CloudTasks
 */
export const CloudTasks: GenService<{
  /**
   * Lists queues.
   *
   * Queues are returned in lexicographical order.
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.ListQueues
   */
  listQueues: {
    methodKind: "unary";
    input: typeof ListQueuesRequestSchema;
    output: typeof ListQueuesResponseSchema;
  },
  /**
   * Gets a queue.
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.GetQueue
   */
  getQueue: {
    methodKind: "unary";
    input: typeof GetQueueRequestSchema;
    output: typeof QueueSchema;
  },
  /**
   * Creates a queue.
   *
   * Queues created with this method allow tasks to live for a maximum of 31
   * days. After a task is 31 days old, the task will be deleted regardless of
   * whether it was dispatched or not.
   *
   * WARNING: Using this method may have unintended side effects if you are
   * using an App Engine `queue.yaml` or `queue.xml` file to manage your queues.
   * Read
   * [Overview of Queue Management and
   * queue.yaml](https://cloud.google.com/tasks/docs/queue-yaml) before using
   * this method.
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.CreateQueue
   */
  createQueue: {
    methodKind: "unary";
    input: typeof CreateQueueRequestSchema;
    output: typeof QueueSchema;
  },
  /**
   * Updates a queue.
   *
   * This method creates the queue if it does not exist and updates
   * the queue if it does exist.
   *
   * Queues created with this method allow tasks to live for a maximum of 31
   * days. After a task is 31 days old, the task will be deleted regardless of
   * whether it was dispatched or not.
   *
   * WARNING: Using this method may have unintended side effects if you are
   * using an App Engine `queue.yaml` or `queue.xml` file to manage your queues.
   * Read
   * [Overview of Queue Management and
   * queue.yaml](https://cloud.google.com/tasks/docs/queue-yaml) before using
   * this method.
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.UpdateQueue
   */
  updateQueue: {
    methodKind: "unary";
    input: typeof UpdateQueueRequestSchema;
    output: typeof QueueSchema;
  },
  /**
   * Deletes a queue.
   *
   * This command will delete the queue even if it has tasks in it.
   *
   * Note: If you delete a queue, a queue with the same name can't be created
   * for 7 days.
   *
   * WARNING: Using this method may have unintended side effects if you are
   * using an App Engine `queue.yaml` or `queue.xml` file to manage your queues.
   * Read
   * [Overview of Queue Management and
   * queue.yaml](https://cloud.google.com/tasks/docs/queue-yaml) before using
   * this method.
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.DeleteQueue
   */
  deleteQueue: {
    methodKind: "unary";
    input: typeof DeleteQueueRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Purges a queue by deleting all of its tasks.
   *
   * All tasks created before this method is called are permanently deleted.
   *
   * Purge operations can take up to one minute to take effect. Tasks
   * might be dispatched before the purge takes effect. A purge is irreversible.
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.PurgeQueue
   */
  purgeQueue: {
    methodKind: "unary";
    input: typeof PurgeQueueRequestSchema;
    output: typeof QueueSchema;
  },
  /**
   * Pauses the queue.
   *
   * If a queue is paused then the system will stop dispatching tasks
   * until the queue is resumed via
   * [ResumeQueue][google.cloud.tasks.v2beta2.CloudTasks.ResumeQueue]. Tasks can
   * still be added when the queue is paused. A queue is paused if its
   * [state][google.cloud.tasks.v2beta2.Queue.state] is
   * [PAUSED][google.cloud.tasks.v2beta2.Queue.State.PAUSED].
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.PauseQueue
   */
  pauseQueue: {
    methodKind: "unary";
    input: typeof PauseQueueRequestSchema;
    output: typeof QueueSchema;
  },
  /**
   * Resume a queue.
   *
   * This method resumes a queue after it has been
   * [PAUSED][google.cloud.tasks.v2beta2.Queue.State.PAUSED] or
   * [DISABLED][google.cloud.tasks.v2beta2.Queue.State.DISABLED]. The state of a
   * queue is stored in the queue's
   * [state][google.cloud.tasks.v2beta2.Queue.state]; after calling this method
   * it will be set to
   * [RUNNING][google.cloud.tasks.v2beta2.Queue.State.RUNNING].
   *
   * WARNING: Resuming many high-QPS queues at the same time can
   * lead to target overloading. If you are resuming high-QPS
   * queues, follow the 500/50/5 pattern described in
   * [Managing Cloud Tasks Scaling
   * Risks](https://cloud.google.com/tasks/docs/manage-cloud-task-scaling).
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.ResumeQueue
   */
  resumeQueue: {
    methodKind: "unary";
    input: typeof ResumeQueueRequestSchema;
    output: typeof QueueSchema;
  },
  /**
   * Update queue list by uploading a queue.yaml file.
   *
   * The queue.yaml file is supplied in the request body as a YAML encoded
   * string. This method was added to support gcloud clients versions before
   * 322.0.0. New clients should use CreateQueue instead of this method.
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.UploadQueueYaml
   */
  uploadQueueYaml: {
    methodKind: "unary";
    input: typeof UploadQueueYamlRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Gets the access control policy for a
   * [Queue][google.cloud.tasks.v2beta2.Queue]. Returns an empty policy if the
   * resource exists and does not have a policy set.
   *
   * Authorization requires the following
   * [Google IAM](https://cloud.google.com/iam) permission on the specified
   * resource parent:
   *
   * * `cloudtasks.queues.getIamPolicy`
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.GetIamPolicy
   */
  getIamPolicy: {
    methodKind: "unary";
    input: typeof GetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Sets the access control policy for a
   * [Queue][google.cloud.tasks.v2beta2.Queue]. Replaces any existing policy.
   *
   * Note: The Cloud Console does not check queue-level IAM permissions yet.
   * Project-level permissions are required to use the Cloud Console.
   *
   * Authorization requires the following
   * [Google IAM](https://cloud.google.com/iam) permission on the specified
   * resource parent:
   *
   * * `cloudtasks.queues.setIamPolicy`
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.SetIamPolicy
   */
  setIamPolicy: {
    methodKind: "unary";
    input: typeof SetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Returns permissions that a caller has on a
   * [Queue][google.cloud.tasks.v2beta2.Queue]. If the resource does not exist,
   * this will return an empty set of permissions, not a
   * [NOT_FOUND][google.rpc.Code.NOT_FOUND] error.
   *
   * Note: This operation is designed to be used for building permission-aware
   * UIs and command-line tools, not for authorization checking. This operation
   * may "fail open" without warning.
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.TestIamPermissions
   */
  testIamPermissions: {
    methodKind: "unary";
    input: typeof TestIamPermissionsRequestSchema;
    output: typeof TestIamPermissionsResponseSchema;
  },
  /**
   * Lists the tasks in a queue.
   *
   * By default, only the [BASIC][google.cloud.tasks.v2beta2.Task.View.BASIC]
   * view is retrieved due to performance considerations;
   * [response_view][google.cloud.tasks.v2beta2.ListTasksRequest.response_view]
   * controls the subset of information which is returned.
   *
   * The tasks may be returned in any order. The ordering may change at any
   * time.
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.ListTasks
   */
  listTasks: {
    methodKind: "unary";
    input: typeof ListTasksRequestSchema;
    output: typeof ListTasksResponseSchema;
  },
  /**
   * Gets a task.
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.GetTask
   */
  getTask: {
    methodKind: "unary";
    input: typeof GetTaskRequestSchema;
    output: typeof TaskSchema;
  },
  /**
   * Creates a task and adds it to a queue.
   *
   * Tasks cannot be updated after creation; there is no UpdateTask command.
   *
   * * For [App Engine queues][google.cloud.tasks.v2beta2.AppEngineHttpTarget],
   * the maximum task size is
   *   100KB.
   * * For [pull queues][google.cloud.tasks.v2beta2.PullTarget], the maximum
   * task size is 1MB.
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.CreateTask
   */
  createTask: {
    methodKind: "unary";
    input: typeof CreateTaskRequestSchema;
    output: typeof TaskSchema;
  },
  /**
   * Deletes a task.
   *
   * A task can be deleted if it is scheduled or dispatched. A task
   * cannot be deleted if it has completed successfully or permanently
   * failed.
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.DeleteTask
   */
  deleteTask: {
    methodKind: "unary";
    input: typeof DeleteTaskRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Leases tasks from a pull queue for
   * [lease_duration][google.cloud.tasks.v2beta2.LeaseTasksRequest.lease_duration].
   *
   * This method is invoked by the worker to obtain a lease. The
   * worker must acknowledge the task via
   * [AcknowledgeTask][google.cloud.tasks.v2beta2.CloudTasks.AcknowledgeTask]
   * after they have performed the work associated with the task.
   *
   * The [payload][google.cloud.tasks.v2beta2.PullMessage.payload] is intended
   * to store data that the worker needs to perform the work associated with the
   * task. To return the payloads in the
   * [response][google.cloud.tasks.v2beta2.LeaseTasksResponse], set
   * [response_view][google.cloud.tasks.v2beta2.LeaseTasksRequest.response_view]
   * to [FULL][google.cloud.tasks.v2beta2.Task.View.FULL].
   *
   * A maximum of 10 qps of
   * [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] requests are
   * allowed per queue. [RESOURCE_EXHAUSTED][google.rpc.Code.RESOURCE_EXHAUSTED]
   * is returned when this limit is
   * exceeded. [RESOURCE_EXHAUSTED][google.rpc.Code.RESOURCE_EXHAUSTED]
   * is also returned when
   * [max_tasks_dispatched_per_second][google.cloud.tasks.v2beta2.RateLimits.max_tasks_dispatched_per_second]
   * is exceeded.
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks
   */
  leaseTasks: {
    methodKind: "unary";
    input: typeof LeaseTasksRequestSchema;
    output: typeof LeaseTasksResponseSchema;
  },
  /**
   * Acknowledges a pull task.
   *
   * The worker, that is, the entity that
   * [leased][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] this task must
   * call this method to indicate that the work associated with the task has
   * finished.
   *
   * The worker must acknowledge a task within the
   * [lease_duration][google.cloud.tasks.v2beta2.LeaseTasksRequest.lease_duration]
   * or the lease will expire and the task will become available to be leased
   * again. After the task is acknowledged, it will not be returned
   * by a later [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks],
   * [GetTask][google.cloud.tasks.v2beta2.CloudTasks.GetTask], or
   * [ListTasks][google.cloud.tasks.v2beta2.CloudTasks.ListTasks].
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.AcknowledgeTask
   */
  acknowledgeTask: {
    methodKind: "unary";
    input: typeof AcknowledgeTaskRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Renew the current lease of a pull task.
   *
   * The worker can use this method to extend the lease by a new
   * duration, starting from now. The new task lease will be
   * returned in the task's
   * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time].
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.RenewLease
   */
  renewLease: {
    methodKind: "unary";
    input: typeof RenewLeaseRequestSchema;
    output: typeof TaskSchema;
  },
  /**
   * Cancel a pull task's lease.
   *
   * The worker can use this method to cancel a task's lease by
   * setting its [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time]
   * to now. This will make the task available to be leased to the next caller
   * of [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks].
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.CancelLease
   */
  cancelLease: {
    methodKind: "unary";
    input: typeof CancelLeaseRequestSchema;
    output: typeof TaskSchema;
  },
  /**
   * Forces a task to run now.
   *
   * When this method is called, Cloud Tasks will dispatch the task, even if
   * the task is already running, the queue has reached its
   * [RateLimits][google.cloud.tasks.v2beta2.RateLimits] or is
   * [PAUSED][google.cloud.tasks.v2beta2.Queue.State.PAUSED].
   *
   * This command is meant to be used for manual debugging. For
   * example, [RunTask][google.cloud.tasks.v2beta2.CloudTasks.RunTask] can be
   * used to retry a failed task after a fix has been made or to manually force
   * a task to be dispatched now.
   *
   * The dispatched task is returned. That is, the task that is returned
   * contains the [status][google.cloud.tasks.v2beta2.Task.status] after the
   * task is dispatched but before the task is received by its target.
   *
   * If Cloud Tasks receives a successful response from the task's
   * target, then the task will be deleted; otherwise the task's
   * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] will be
   * reset to the time that
   * [RunTask][google.cloud.tasks.v2beta2.CloudTasks.RunTask] was called plus
   * the retry delay specified in the queue's
   * [RetryConfig][google.cloud.tasks.v2beta2.RetryConfig].
   *
   * [RunTask][google.cloud.tasks.v2beta2.CloudTasks.RunTask] returns
   * [NOT_FOUND][google.rpc.Code.NOT_FOUND] when it is called on a
   * task that has already succeeded or permanently failed.
   *
   * [RunTask][google.cloud.tasks.v2beta2.CloudTasks.RunTask] cannot be called
   * on a [pull task][google.cloud.tasks.v2beta2.PullMessage].
   *
   * @generated from rpc google.cloud.tasks.v2beta2.CloudTasks.RunTask
   */
  runTask: {
    methodKind: "unary";
    input: typeof RunTaskRequestSchema;
    output: typeof TaskSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_tasks_v2beta2_cloudtasks, 0);

