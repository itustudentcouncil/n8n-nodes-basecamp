// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/contentwarehouse/v1/synonymset_service_request.proto (package google.cloud.contentwarehouse.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { SynonymSet } from "./synonymset_pb";
import { file_google_cloud_contentwarehouse_v1_synonymset } from "./synonymset_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/contentwarehouse/v1/synonymset_service_request.proto.
 */
export const file_google_cloud_contentwarehouse_v1_synonymset_service_request: GenFile = /*@__PURE__*/
  fileDesc("CkFnb29nbGUvY2xvdWQvY29udGVudHdhcmVob3VzZS92MS9zeW5vbnltc2V0X3NlcnZpY2VfcmVxdWVzdC5wcm90bxIgZ29vZ2xlLmNsb3VkLmNvbnRlbnR3YXJlaG91c2UudjEiowEKF0NyZWF0ZVN5bm9ueW1TZXRSZXF1ZXN0EkAKBnBhcmVudBgBIAEoCUIw4EEC+kEqCihjb250ZW50d2FyZWhvdXNlLmdvb2dsZWFwaXMuY29tL0xvY2F0aW9uEkYKC3N5bm9ueW1fc2V0GAIgASgLMiwuZ29vZ2xlLmNsb3VkLmNvbnRlbnR3YXJlaG91c2UudjEuU3lub255bVNldEID4EECIlgKFEdldFN5bm9ueW1TZXRSZXF1ZXN0EkAKBG5hbWUYASABKAlCMuBBAvpBLAoqY29udGVudHdhcmVob3VzZS5nb29nbGVhcGlzLmNvbS9TeW5vbnltU2V0IoEBChZMaXN0U3lub255bVNldHNSZXF1ZXN0EkAKBnBhcmVudBgBIAEoCUIw4EEC+kEqCihjb250ZW50d2FyZWhvdXNlLmdvb2dsZWFwaXMuY29tL0xvY2F0aW9uEhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMgASgJInYKF0xpc3RTeW5vbnltU2V0c1Jlc3BvbnNlEkIKDHN5bm9ueW1fc2V0cxgBIAMoCzIsLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLlN5bm9ueW1TZXQSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIqMBChdVcGRhdGVTeW5vbnltU2V0UmVxdWVzdBJACgRuYW1lGAEgASgJQjLgQQL6QSwKKmNvbnRlbnR3YXJlaG91c2UuZ29vZ2xlYXBpcy5jb20vU3lub255bVNldBJGCgtzeW5vbnltX3NldBgCIAEoCzIsLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLlN5bm9ueW1TZXRCA+BBAiJbChdEZWxldGVTeW5vbnltU2V0UmVxdWVzdBJACgRuYW1lGAEgASgJQjLgQQL6QSwKKmNvbnRlbnR3YXJlaG91c2UuZ29vZ2xlYXBpcy5jb20vU3lub255bVNldEKFAgokY29tLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxQh1TeW5vbnltU2V0U2VydmljZVJlcXVlc3RQcm90b1ABWlBjbG91ZC5nb29nbGUuY29tL2dvL2NvbnRlbnR3YXJlaG91c2UvYXBpdjEvY29udGVudHdhcmVob3VzZXBiO2NvbnRlbnR3YXJlaG91c2VwYqoCIEdvb2dsZS5DbG91ZC5Db250ZW50V2FyZWhvdXNlLlYxygIgR29vZ2xlXENsb3VkXENvbnRlbnRXYXJlaG91c2VcVjHqAiNHb29nbGU6OkNsb3VkOjpDb250ZW50V2FyZWhvdXNlOjpWMWIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_contentwarehouse_v1_synonymset]);

/**
 * Request message for SynonymSetService.CreateSynonymSet.
 *
 * @generated from message google.cloud.contentwarehouse.v1.CreateSynonymSetRequest
 */
export type CreateSynonymSetRequest = Message<"google.cloud.contentwarehouse.v1.CreateSynonymSetRequest"> & {
  /**
   * Required. The parent name.
   * Format: projects/{project_number}/locations/{location}.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The synonymSet to be created for a context
   *
   * @generated from field: google.cloud.contentwarehouse.v1.SynonymSet synonym_set = 2;
   */
  synonymSet?: SynonymSet;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.CreateSynonymSetRequest.
 * Use `create(CreateSynonymSetRequestSchema)` to create a new message.
 */
export const CreateSynonymSetRequestSchema: GenMessage<CreateSynonymSetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_synonymset_service_request, 0);

/**
 * Request message for SynonymSetService.GetSynonymSet.
 * Will return synonymSet for a certain context.
 *
 * @generated from message google.cloud.contentwarehouse.v1.GetSynonymSetRequest
 */
export type GetSynonymSetRequest = Message<"google.cloud.contentwarehouse.v1.GetSynonymSetRequest"> & {
  /**
   * Required. The name of the synonymSet to retrieve
   * Format:
   * projects/{project_number}/locations/{location}/synonymSets/{context}.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.GetSynonymSetRequest.
 * Use `create(GetSynonymSetRequestSchema)` to create a new message.
 */
export const GetSynonymSetRequestSchema: GenMessage<GetSynonymSetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_synonymset_service_request, 1);

/**
 * Request message for SynonymSetService.ListSynonymSets.
 * Will return all synonymSets belonging to the customer project.
 *
 * @generated from message google.cloud.contentwarehouse.v1.ListSynonymSetsRequest
 */
export type ListSynonymSetsRequest = Message<"google.cloud.contentwarehouse.v1.ListSynonymSetsRequest"> & {
  /**
   * Required. The parent name.
   * Format: projects/{project_number}/locations/{location}.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of synonymSets to return. The service may return
   * fewer than this value.
   * If unspecified, at most 50 rule sets will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListSynonymSets` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListSynonymSets`
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.ListSynonymSetsRequest.
 * Use `create(ListSynonymSetsRequestSchema)` to create a new message.
 */
export const ListSynonymSetsRequestSchema: GenMessage<ListSynonymSetsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_synonymset_service_request, 2);

/**
 * Response message for SynonymSetService.ListSynonymSets.
 *
 * @generated from message google.cloud.contentwarehouse.v1.ListSynonymSetsResponse
 */
export type ListSynonymSetsResponse = Message<"google.cloud.contentwarehouse.v1.ListSynonymSetsResponse"> & {
  /**
   * The synonymSets from the specified parent.
   *
   * @generated from field: repeated google.cloud.contentwarehouse.v1.SynonymSet synonym_sets = 1;
   */
  synonymSets: SynonymSet[];

  /**
   * A page token, received from a previous `ListSynonymSets` call.
   * Provide this to retrieve the subsequent page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.ListSynonymSetsResponse.
 * Use `create(ListSynonymSetsResponseSchema)` to create a new message.
 */
export const ListSynonymSetsResponseSchema: GenMessage<ListSynonymSetsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_synonymset_service_request, 3);

/**
 * Request message for SynonymSetService.UpdateSynonymSet.
 * Removes the SynonymSet for the specified context and replaces
 * it with the SynonymSet in this request.
 *
 * @generated from message google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest
 */
export type UpdateSynonymSetRequest = Message<"google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest"> & {
  /**
   * Required. The name of the synonymSet to update
   * Format:
   * projects/{project_number}/locations/{location}/synonymSets/{context}.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The synonymSet to be updated for the customer
   *
   * @generated from field: google.cloud.contentwarehouse.v1.SynonymSet synonym_set = 2;
   */
  synonymSet?: SynonymSet;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest.
 * Use `create(UpdateSynonymSetRequestSchema)` to create a new message.
 */
export const UpdateSynonymSetRequestSchema: GenMessage<UpdateSynonymSetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_synonymset_service_request, 4);

/**
 * Request message for SynonymSetService.DeleteSynonymSet.
 *
 * @generated from message google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest
 */
export type DeleteSynonymSetRequest = Message<"google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest"> & {
  /**
   * Required. The name of the synonymSet to delete
   * Format:
   * projects/{project_number}/locations/{location}/synonymSets/{context}.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest.
 * Use `create(DeleteSynonymSetRequestSchema)` to create a new message.
 */
export const DeleteSynonymSetRequestSchema: GenMessage<DeleteSynonymSetRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_synonymset_service_request, 5);

