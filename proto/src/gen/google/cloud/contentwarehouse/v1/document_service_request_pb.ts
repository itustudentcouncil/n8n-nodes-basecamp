// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/contentwarehouse/v1/document_service_request.proto (package google.cloud.contentwarehouse.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { RequestMetadata, UpdateOptions, UserInfo } from "./common_pb";
import { file_google_cloud_contentwarehouse_v1_common } from "./common_pb";
import type { Document } from "./document_pb";
import { file_google_cloud_contentwarehouse_v1_document } from "./document_pb";
import type { DocumentQuery } from "./filters_pb";
import { file_google_cloud_contentwarehouse_v1_filters } from "./filters_pb";
import type { HistogramQuery } from "./histogram_pb";
import { file_google_cloud_contentwarehouse_v1_histogram } from "./histogram_pb";
import type { Policy } from "../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../iam/v1/policy_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/contentwarehouse/v1/document_service_request.proto.
 */
export const file_google_cloud_contentwarehouse_v1_document_service_request: GenFile = /*@__PURE__*/
  fileDesc("Cj9nb29nbGUvY2xvdWQvY29udGVudHdhcmVob3VzZS92MS9kb2N1bWVudF9zZXJ2aWNlX3JlcXVlc3QucHJvdG8SIGdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxIqcCChVDbG91ZEFJRG9jdW1lbnRPcHRpb24SIwobZW5hYmxlX2VudGl0aWVzX2NvbnZlcnNpb25zGAEgASgIEpgBCipjdXN0b21pemVkX2VudGl0aWVzX3Byb3BlcnRpZXNfY29udmVyc2lvbnMYAiADKAsyZC5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5DbG91ZEFJRG9jdW1lbnRPcHRpb24uQ3VzdG9taXplZEVudGl0aWVzUHJvcGVydGllc0NvbnZlcnNpb25zRW50cnkaTgosQ3VzdG9taXplZEVudGl0aWVzUHJvcGVydGllc0NvbnZlcnNpb25zRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASKcAwoVQ3JlYXRlRG9jdW1lbnRSZXF1ZXN0EkAKBnBhcmVudBgBIAEoCUIw4EEC+kEqCihjb250ZW50d2FyZWhvdXNlLmdvb2dsZWFwaXMuY29tL0xvY2F0aW9uEkEKCGRvY3VtZW50GAIgASgLMiouZ29vZ2xlLmNsb3VkLmNvbnRlbnR3YXJlaG91c2UudjEuRG9jdW1lbnRCA+BBAhJLChByZXF1ZXN0X21ldGFkYXRhGAMgASgLMjEuZ29vZ2xlLmNsb3VkLmNvbnRlbnR3YXJlaG91c2UudjEuUmVxdWVzdE1ldGFkYXRhEiUKBnBvbGljeRgEIAEoCzIVLmdvb2dsZS5pYW0udjEuUG9saWN5ElkKGGNsb3VkX2FpX2RvY3VtZW50X29wdGlvbhgFIAEoCzI3Lmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLkNsb3VkQUlEb2N1bWVudE9wdGlvbhIvCgtjcmVhdGVfbWFzaxgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2sioQEKEkdldERvY3VtZW50UmVxdWVzdBI+CgRuYW1lGAEgASgJQjDgQQL6QSoKKGNvbnRlbnR3YXJlaG91c2UuZ29vZ2xlYXBpcy5jb20vRG9jdW1lbnQSSwoQcmVxdWVzdF9tZXRhZGF0YRgCIAEoCzIxLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLlJlcXVlc3RNZXRhZGF0YSKLAwoVVXBkYXRlRG9jdW1lbnRSZXF1ZXN0Ej4KBG5hbWUYASABKAlCMOBBAvpBKgooY29udGVudHdhcmVob3VzZS5nb29nbGVhcGlzLmNvbS9Eb2N1bWVudBJBCghkb2N1bWVudBgCIAEoCzIqLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLkRvY3VtZW50QgPgQQISSwoQcmVxdWVzdF9tZXRhZGF0YRgDIAEoCzIxLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLlJlcXVlc3RNZXRhZGF0YRJZChhjbG91ZF9haV9kb2N1bWVudF9vcHRpb24YBSABKAsyNy5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5DbG91ZEFJRG9jdW1lbnRPcHRpb24SRwoOdXBkYXRlX29wdGlvbnMYBiABKAsyLy5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5VcGRhdGVPcHRpb25zIqQBChVEZWxldGVEb2N1bWVudFJlcXVlc3QSPgoEbmFtZRgBIAEoCUIw4EEC+kEqCihjb250ZW50d2FyZWhvdXNlLmdvb2dsZWFwaXMuY29tL0RvY3VtZW50EksKEHJlcXVlc3RfbWV0YWRhdGEYAiABKAsyMS5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5SZXF1ZXN0TWV0YWRhdGEi+QQKFlNlYXJjaERvY3VtZW50c1JlcXVlc3QSQAoGcGFyZW50GAEgASgJQjDgQQL6QSoKKGNvbnRlbnR3YXJlaG91c2UuZ29vZ2xlYXBpcy5jb20vTG9jYXRpb24SSwoQcmVxdWVzdF9tZXRhZGF0YRgDIAEoCzIxLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLlJlcXVlc3RNZXRhZGF0YRJHCg5kb2N1bWVudF9xdWVyeRgEIAEoCzIvLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLkRvY3VtZW50UXVlcnkSDgoGb2Zmc2V0GAUgASgFEhEKCXBhZ2Vfc2l6ZRgGIAEoBRISCgpwYWdlX3Rva2VuGAcgASgJEhAKCG9yZGVyX2J5GAggASgJEksKEWhpc3RvZ3JhbV9xdWVyaWVzGAkgAygLMjAuZ29vZ2xlLmNsb3VkLmNvbnRlbnR3YXJlaG91c2UudjEuSGlzdG9ncmFtUXVlcnkSGgoScmVxdWlyZV90b3RhbF9zaXplGAogASgIEmMKEXRvdGFsX3Jlc3VsdF9zaXplGAwgASgOMkguZ29vZ2xlLmNsb3VkLmNvbnRlbnR3YXJlaG91c2UudjEuU2VhcmNoRG9jdW1lbnRzUmVxdWVzdC5Ub3RhbFJlc3VsdFNpemUSFQoNcWFfc2l6ZV9saW1pdBgLIAEoBSJZCg9Ub3RhbFJlc3VsdFNpemUSIQodVE9UQUxfUkVTVUxUX1NJWkVfVU5TUEVDSUZJRUQQABISCg5FU1RJTUFURURfU0laRRABEg8KC0FDVFVBTF9TSVpFEAIirgEKE0xvY2tEb2N1bWVudFJlcXVlc3QSPgoEbmFtZRgBIAEoCUIw4EEC+kEqCihjb250ZW50d2FyZWhvdXNlLmdvb2dsZWFwaXMuY29tL0RvY3VtZW50EhUKDWNvbGxlY3Rpb25faWQYAiABKAkSQAoMbG9ja2luZ191c2VyGAMgASgLMiouZ29vZ2xlLmNsb3VkLmNvbnRlbnR3YXJlaG91c2UudjEuVXNlckluZm8ijAEKD0ZldGNoQWNsUmVxdWVzdBIVCghyZXNvdXJjZRgBIAEoCUID4EECEksKEHJlcXVlc3RfbWV0YWRhdGEYAiABKAsyMS5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5SZXF1ZXN0TWV0YWRhdGESFQoNcHJvamVjdF9vd25lchgDIAEoCCK2AQoNU2V0QWNsUmVxdWVzdBIVCghyZXNvdXJjZRgBIAEoCUID4EECEioKBnBvbGljeRgCIAEoCzIVLmdvb2dsZS5pYW0udjEuUG9saWN5QgPgQQISSwoQcmVxdWVzdF9tZXRhZGF0YRgDIAEoCzIxLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLlJlcXVlc3RNZXRhZGF0YRIVCg1wcm9qZWN0X293bmVyGAQgASgIQoMCCiRjb20uZ29vZ2xlLmNsb3VkLmNvbnRlbnR3YXJlaG91c2UudjFCG0RvY3VtZW50U2VydmljZVJlcXVlc3RQcm90b1ABWlBjbG91ZC5nb29nbGUuY29tL2dvL2NvbnRlbnR3YXJlaG91c2UvYXBpdjEvY29udGVudHdhcmVob3VzZXBiO2NvbnRlbnR3YXJlaG91c2VwYqoCIEdvb2dsZS5DbG91ZC5Db250ZW50V2FyZWhvdXNlLlYxygIgR29vZ2xlXENsb3VkXENvbnRlbnRXYXJlaG91c2VcVjHqAiNHb29nbGU6OkNsb3VkOjpDb250ZW50V2FyZWhvdXNlOjpWMWIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource, file_google_cloud_contentwarehouse_v1_common, file_google_cloud_contentwarehouse_v1_document, file_google_cloud_contentwarehouse_v1_filters, file_google_cloud_contentwarehouse_v1_histogram, file_google_iam_v1_policy, file_google_protobuf_field_mask]);

/**
 * Request Option for processing Cloud AI Document in CW Document.
 *
 * @generated from message google.cloud.contentwarehouse.v1.CloudAIDocumentOption
 */
export type CloudAIDocumentOption = Message<"google.cloud.contentwarehouse.v1.CloudAIDocumentOption"> & {
  /**
   * Whether to convert all the entities to properties.
   *
   * @generated from field: bool enable_entities_conversions = 1;
   */
  enableEntitiesConversions: boolean;

  /**
   * If set, only selected entities will be converted to properties.
   *
   * @generated from field: map<string, string> customized_entities_properties_conversions = 2;
   */
  customizedEntitiesPropertiesConversions: { [key: string]: string };
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.CloudAIDocumentOption.
 * Use `create(CloudAIDocumentOptionSchema)` to create a new message.
 */
export const CloudAIDocumentOptionSchema: GenMessage<CloudAIDocumentOption> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service_request, 0);

/**
 * Request message for DocumentService.CreateDocument.
 *
 * @generated from message google.cloud.contentwarehouse.v1.CreateDocumentRequest
 */
export type CreateDocumentRequest = Message<"google.cloud.contentwarehouse.v1.CreateDocumentRequest"> & {
  /**
   * Required. The parent name.
   * Format: projects/{project_number}/locations/{location}.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The document to create.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.Document document = 2;
   */
  document?: Document;

  /**
   * The meta information collected about the end user, used to enforce access
   * control for the service.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.RequestMetadata request_metadata = 3;
   */
  requestMetadata?: RequestMetadata;

  /**
   * Default document policy during creation.
   * This refers to an Identity and Access (IAM) policy, which specifies access
   * controls for the Document.
   * Conditions defined in the policy will be ignored.
   *
   * @generated from field: google.iam.v1.Policy policy = 4;
   */
  policy?: Policy;

  /**
   * Request Option for processing Cloud AI Document in Document Warehouse.
   * This field offers limited support for mapping entities from Cloud AI
   * Document to Warehouse Document. Please consult with product team before
   * using this field and other available options.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.CloudAIDocumentOption cloud_ai_document_option = 5;
   */
  cloudAiDocumentOption?: CloudAIDocumentOption;

  /**
   * Field mask for creating Document fields. If mask path is empty,
   * it means all fields are masked.
   * For the `FieldMask` definition,
   * see
   * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.
   *
   * @generated from field: google.protobuf.FieldMask create_mask = 6;
   */
  createMask?: FieldMask;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.CreateDocumentRequest.
 * Use `create(CreateDocumentRequestSchema)` to create a new message.
 */
export const CreateDocumentRequestSchema: GenMessage<CreateDocumentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service_request, 1);

/**
 * Request message for DocumentService.GetDocument.
 *
 * @generated from message google.cloud.contentwarehouse.v1.GetDocumentRequest
 */
export type GetDocumentRequest = Message<"google.cloud.contentwarehouse.v1.GetDocumentRequest"> & {
  /**
   * Required. The name of the document to retrieve.
   * Format:
   * projects/{project_number}/locations/{location}/documents/{document_id} or
   * projects/{project_number}/locations/{location}/documents/referenceId/{reference_id}.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The meta information collected about the end user, used to enforce access
   * control for the service.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.RequestMetadata request_metadata = 2;
   */
  requestMetadata?: RequestMetadata;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.GetDocumentRequest.
 * Use `create(GetDocumentRequestSchema)` to create a new message.
 */
export const GetDocumentRequestSchema: GenMessage<GetDocumentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service_request, 2);

/**
 * Request message for DocumentService.UpdateDocument.
 *
 * @generated from message google.cloud.contentwarehouse.v1.UpdateDocumentRequest
 */
export type UpdateDocumentRequest = Message<"google.cloud.contentwarehouse.v1.UpdateDocumentRequest"> & {
  /**
   * Required. The name of the document to update.
   * Format:
   * projects/{project_number}/locations/{location}/documents/{document_id}
   * or
   * projects/{project_number}/locations/{location}/documents/referenceId/{reference_id}.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The document to update.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.Document document = 2;
   */
  document?: Document;

  /**
   * The meta information collected about the end user, used to enforce access
   * control for the service.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.RequestMetadata request_metadata = 3;
   */
  requestMetadata?: RequestMetadata;

  /**
   * Request Option for processing Cloud AI Document in Document Warehouse.
   * This field offers limited support for mapping entities from Cloud AI
   * Document to Warehouse Document. Please consult with product team before
   * using this field and other available options.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.CloudAIDocumentOption cloud_ai_document_option = 5;
   */
  cloudAiDocumentOption?: CloudAIDocumentOption;

  /**
   * Options for the update operation.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.UpdateOptions update_options = 6;
   */
  updateOptions?: UpdateOptions;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.UpdateDocumentRequest.
 * Use `create(UpdateDocumentRequestSchema)` to create a new message.
 */
export const UpdateDocumentRequestSchema: GenMessage<UpdateDocumentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service_request, 3);

/**
 * Request message for DocumentService.DeleteDocument.
 *
 * @generated from message google.cloud.contentwarehouse.v1.DeleteDocumentRequest
 */
export type DeleteDocumentRequest = Message<"google.cloud.contentwarehouse.v1.DeleteDocumentRequest"> & {
  /**
   * Required. The name of the document to delete.
   * Format:
   * projects/{project_number}/locations/{location}/documents/{document_id}
   * or
   * projects/{project_number}/locations/{location}/documents/referenceId/{reference_id}.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The meta information collected about the end user, used to enforce access
   * control for the service.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.RequestMetadata request_metadata = 2;
   */
  requestMetadata?: RequestMetadata;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.DeleteDocumentRequest.
 * Use `create(DeleteDocumentRequestSchema)` to create a new message.
 */
export const DeleteDocumentRequestSchema: GenMessage<DeleteDocumentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service_request, 4);

/**
 * Request message for DocumentService.SearchDocuments.
 *
 * @generated from message google.cloud.contentwarehouse.v1.SearchDocumentsRequest
 */
export type SearchDocumentsRequest = Message<"google.cloud.contentwarehouse.v1.SearchDocumentsRequest"> & {
  /**
   * Required. The parent, which owns this collection of documents.
   * Format: projects/{project_number}/locations/{location}.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The meta information collected about the end user, used to enforce access
   * control and improve the search quality of the service.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.RequestMetadata request_metadata = 3;
   */
  requestMetadata?: RequestMetadata;

  /**
   * Query used to search against documents (keyword, filters, etc.).
   *
   * @generated from field: google.cloud.contentwarehouse.v1.DocumentQuery document_query = 4;
   */
  documentQuery?: DocumentQuery;

  /**
   * An integer that specifies the current offset (that is, starting result
   * location, amongst the documents deemed by the API as relevant) in search
   * results. This field is only considered if
   * [page_token][google.cloud.contentwarehouse.v1.SearchDocumentsRequest.page_token]
   * is unset.
   *
   * The maximum allowed value is 5000. Otherwise an error is thrown.
   *
   * For example, 0 means to  return results starting from the first matching
   * document, and 10 means to return from the 11th document. This can be used
   * for pagination, (for example, pageSize = 10 and offset = 10 means to return
   * from the second page).
   *
   * @generated from field: int32 offset = 5;
   */
  offset: number;

  /**
   * A limit on the number of documents returned in the search results.
   * Increasing this value above the default value of 10 can increase search
   * response time. The value can be between 1 and 100.
   *
   * @generated from field: int32 page_size = 6;
   */
  pageSize: number;

  /**
   * The token specifying the current offset within search results.
   * See
   * [SearchDocumentsResponse.next_page_token][google.cloud.contentwarehouse.v1.SearchDocumentsResponse.next_page_token]
   * for an explanation of how to obtain the next set of query results.
   *
   * @generated from field: string page_token = 7;
   */
  pageToken: string;

  /**
   * The criteria determining how search results are sorted. For non-empty
   * query, default is `"relevance desc"`. For empty query, default is
   * `"upload_date desc"`.
   *
   * Supported options are:
   *
   * * `"relevance desc"`: By relevance descending, as determined by the API
   *   algorithms.
   * * `"upload_date desc"`: By upload date descending.
   * * `"upload_date"`: By upload date ascending.
   * * `"update_date desc"`: By last updated date descending.
   * * `"update_date"`: By last updated date ascending.
   * * `"retrieval_importance desc"`: By retrieval importance of properties
   *   descending. This feature is still under development, please do not use
   *   unless otherwise instructed to do so.
   *
   * @generated from field: string order_by = 8;
   */
  orderBy: string;

  /**
   * An expression specifying a histogram request against matching
   * documents. Expression syntax is an aggregation function call with
   * histogram facets and other options.
   *
   * The following aggregation functions are supported:
   *
   * * `count(string_histogram_facet)`: Count the number of matching entities
   * for each distinct attribute value.
   *
   * Data types:
   *
   * * Histogram facet (aka filterable properties): Facet names with format
   * &lt;schema id&gt;.&lt;facet&gt;. Facets will have the
   * format of: `[a-zA-Z][a-zA-Z0-9_:/-.]`. If the facet is a child
   * facet, then the parent hierarchy needs to be specified separated by
   * dots in the prefix after the schema id. Thus, the format for a multi-
   * level facet is: &lt;schema id&gt;.&lt;parent facet name&gt;.
   * &lt;child facet name&gt;. Example:
   * schema123.root_parent_facet.middle_facet.child_facet
   * * DocumentSchemaId: (with no schema id prefix) to get
   * histograms for each document type (returns the schema id path, e.g.
   * projects/12345/locations/us-west/documentSchemas/abc123).
   *
   * Example expression:
   *
   * * Document type counts:
   *   count('DocumentSchemaId')
   *
   * * For schema id, abc123, get the counts for MORTGAGE_TYPE:
   *   count('abc123.MORTGAGE_TYPE')
   *
   * @generated from field: repeated google.cloud.contentwarehouse.v1.HistogramQuery histogram_queries = 9;
   */
  histogramQueries: HistogramQuery[];

  /**
   * Controls if the search document request requires the return of a total size
   * of matched documents. See
   * [SearchDocumentsResponse.total_size][google.cloud.contentwarehouse.v1.SearchDocumentsResponse.total_size].
   *
   * Enabling this flag may adversely impact performance. Hint: If this is
   * used with pagination, set this flag on the initial query but set this
   * to false on subsequent page calls (keep the total count locally).
   *
   * Defaults to false.
   *
   * @generated from field: bool require_total_size = 10;
   */
  requireTotalSize: boolean;

  /**
   * Controls if the search document request requires the return of a total size
   * of matched documents. See
   * [SearchDocumentsResponse.total_size][google.cloud.contentwarehouse.v1.SearchDocumentsResponse.total_size].
   *
   * @generated from field: google.cloud.contentwarehouse.v1.SearchDocumentsRequest.TotalResultSize total_result_size = 12;
   */
  totalResultSize: SearchDocumentsRequest_TotalResultSize;

  /**
   * Experimental, do not use.
   * The limit on the number of documents returned for the question-answering
   * feature. To enable the question-answering feature, set
   * [DocumentQuery].[is_nl_query][] to true.
   *
   * @generated from field: int32 qa_size_limit = 11;
   */
  qaSizeLimit: number;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.SearchDocumentsRequest.
 * Use `create(SearchDocumentsRequestSchema)` to create a new message.
 */
export const SearchDocumentsRequestSchema: GenMessage<SearchDocumentsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service_request, 5);

/**
 * The total number of matching documents.
 *
 * @generated from enum google.cloud.contentwarehouse.v1.SearchDocumentsRequest.TotalResultSize
 */
export enum SearchDocumentsRequest_TotalResultSize {
  /**
   * Total number calculation will be skipped.
   *
   * @generated from enum value: TOTAL_RESULT_SIZE_UNSPECIFIED = 0;
   */
  TOTAL_RESULT_SIZE_UNSPECIFIED = 0,

  /**
   * Estimate total number. The total result size will be accurated up to
   * 10,000. This option will add cost and latency to your request.
   *
   * @generated from enum value: ESTIMATED_SIZE = 1;
   */
  ESTIMATED_SIZE = 1,

  /**
   * It may adversely impact performance. The limit is 1000,000.
   *
   * @generated from enum value: ACTUAL_SIZE = 2;
   */
  ACTUAL_SIZE = 2,
}

/**
 * Describes the enum google.cloud.contentwarehouse.v1.SearchDocumentsRequest.TotalResultSize.
 */
export const SearchDocumentsRequest_TotalResultSizeSchema: GenEnum<SearchDocumentsRequest_TotalResultSize> = /*@__PURE__*/
  enumDesc(file_google_cloud_contentwarehouse_v1_document_service_request, 5, 0);

/**
 * Request message for DocumentService.LockDocument.
 *
 * @generated from message google.cloud.contentwarehouse.v1.LockDocumentRequest
 */
export type LockDocumentRequest = Message<"google.cloud.contentwarehouse.v1.LockDocumentRequest"> & {
  /**
   * Required. The name of the document to lock.
   * Format:
   * projects/{project_number}/locations/{location}/documents/{document}.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The collection the document connects to.
   *
   * @generated from field: string collection_id = 2;
   */
  collectionId: string;

  /**
   * The user information who locks the document.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.UserInfo locking_user = 3;
   */
  lockingUser?: UserInfo;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.LockDocumentRequest.
 * Use `create(LockDocumentRequestSchema)` to create a new message.
 */
export const LockDocumentRequestSchema: GenMessage<LockDocumentRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service_request, 6);

/**
 * Request message for DocumentService.FetchAcl
 *
 * @generated from message google.cloud.contentwarehouse.v1.FetchAclRequest
 */
export type FetchAclRequest = Message<"google.cloud.contentwarehouse.v1.FetchAclRequest"> & {
  /**
   * Required. REQUIRED: The resource for which the policy is being requested.
   * Format for document:
   * projects/{project_number}/locations/{location}/documents/{document_id}.
   * Format for collection:
   * projects/{project_number}/locations/{location}/collections/{collection_id}.
   * Format for project: projects/{project_number}.
   *
   * @generated from field: string resource = 1;
   */
  resource: string;

  /**
   * The meta information collected about the end user, used to enforce access
   * control for the service.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.RequestMetadata request_metadata = 2;
   */
  requestMetadata?: RequestMetadata;

  /**
   * For Get Project ACL only. Authorization check for end user will be ignored
   * when project_owner=true.
   *
   * @generated from field: bool project_owner = 3;
   */
  projectOwner: boolean;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.FetchAclRequest.
 * Use `create(FetchAclRequestSchema)` to create a new message.
 */
export const FetchAclRequestSchema: GenMessage<FetchAclRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service_request, 7);

/**
 * Request message for DocumentService.SetAcl.
 *
 * @generated from message google.cloud.contentwarehouse.v1.SetAclRequest
 */
export type SetAclRequest = Message<"google.cloud.contentwarehouse.v1.SetAclRequest"> & {
  /**
   * Required. REQUIRED: The resource for which the policy is being requested.
   * Format for document:
   * projects/{project_number}/locations/{location}/documents/{document_id}.
   * Format for collection:
   * projects/{project_number}/locations/{location}/collections/{collection_id}.
   * Format for project: projects/{project_number}.
   *
   * @generated from field: string resource = 1;
   */
  resource: string;

  /**
   * Required. REQUIRED: The complete policy to be applied to the `resource`.
   * The size of the policy is limited to a few 10s of KB. This refers to an
   * Identity and Access (IAM) policy, which specifies access controls for the
   * Document.
   *
   * You can set ACL with condition for projects only.
   *
   * Supported operators are: `=`, `!=`, `<`, `<=`, `>`, and `>=` where
   * the left of the operator is `DocumentSchemaId` or property name and the
   * right of the operator is a number or a quoted string. You must escape
   * backslash (\\) and quote (\") characters.
   *
   * Boolean expressions (AND/OR) are supported up to 3 levels of nesting (for
   * example, "((A AND B AND C) OR D) AND E"), a maximum of 10 comparisons are
   * allowed in the expression. The expression must be < 6000 bytes in length.
   *
   * Sample condition:
   *     `"DocumentSchemaId = \"some schema id\" OR SchemaId.floatPropertyName
   *     >= 10"`
   *
   * @generated from field: google.iam.v1.Policy policy = 2;
   */
  policy?: Policy;

  /**
   * The meta information collected about the end user, used to enforce access
   * control for the service.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.RequestMetadata request_metadata = 3;
   */
  requestMetadata?: RequestMetadata;

  /**
   * For Set Project ACL only. Authorization check for end user will be ignored
   * when project_owner=true.
   *
   * @generated from field: bool project_owner = 4;
   */
  projectOwner: boolean;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.SetAclRequest.
 * Use `create(SetAclRequestSchema)` to create a new message.
 */
export const SetAclRequestSchema: GenMessage<SetAclRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service_request, 8);

