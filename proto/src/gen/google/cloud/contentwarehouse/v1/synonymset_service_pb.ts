// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/contentwarehouse/v1/synonymset_service.proto (package google.cloud.contentwarehouse.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import type { SynonymSetSchema } from "./synonymset_pb";
import { file_google_cloud_contentwarehouse_v1_synonymset } from "./synonymset_pb";
import type { CreateSynonymSetRequestSchema, DeleteSynonymSetRequestSchema, GetSynonymSetRequestSchema, ListSynonymSetsRequestSchema, ListSynonymSetsResponseSchema, UpdateSynonymSetRequestSchema } from "./synonymset_service_request_pb";
import { file_google_cloud_contentwarehouse_v1_synonymset_service_request } from "./synonymset_service_request_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file google/cloud/contentwarehouse/v1/synonymset_service.proto.
 */
export const file_google_cloud_contentwarehouse_v1_synonymset_service: GenFile = /*@__PURE__*/
  fileDesc("Cjlnb29nbGUvY2xvdWQvY29udGVudHdhcmVob3VzZS92MS9zeW5vbnltc2V0X3NlcnZpY2UucHJvdG8SIGdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxMsMIChFTeW5vbnltU2V0U2VydmljZRLWAQoQQ3JlYXRlU3lub255bVNldBI5Lmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLkNyZWF0ZVN5bm9ueW1TZXRSZXF1ZXN0GiwuZ29vZ2xlLmNsb3VkLmNvbnRlbnR3YXJlaG91c2UudjEuU3lub255bVNldCJZ2kEScGFyZW50LHN5bm9ueW1fc2V0gtPkkwI+OgtzeW5vbnltX3NldCIvL3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vc3lub255bVNldHMStQEKDUdldFN5bm9ueW1TZXQSNi5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5HZXRTeW5vbnltU2V0UmVxdWVzdBosLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLlN5bm9ueW1TZXQiPtpBBG5hbWWC0+STAjESLy92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3N5bm9ueW1TZXRzLyp9EtQBChBVcGRhdGVTeW5vbnltU2V0EjkuZ29vZ2xlLmNsb3VkLmNvbnRlbnR3YXJlaG91c2UudjEuVXBkYXRlU3lub255bVNldFJlcXVlc3QaLC5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5TeW5vbnltU2V0IlfaQRBuYW1lLHN5bm9ueW1fc2V0gtPkkwI+OgtzeW5vbnltX3NldDIvL3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovc3lub255bVNldHMvKn0SpQEKEERlbGV0ZVN5bm9ueW1TZXQSOS5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5EZWxldGVTeW5vbnltU2V0UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSI+2kEEbmFtZYLT5JMCMSovL3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovc3lub255bVNldHMvKn0SyAEKD0xpc3RTeW5vbnltU2V0cxI4Lmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLkxpc3RTeW5vbnltU2V0c1JlcXVlc3QaOS5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5MaXN0U3lub255bVNldHNSZXNwb25zZSJA2kEGcGFyZW50gtPkkwIxEi8vdjEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9zeW5vbnltU2V0cxpTykEfY29udGVudHdhcmVob3VzZS5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1C/gEKJGNvbS5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MUIWU3lub255bVNldFNlcnZpY2VQcm90b1ABWlBjbG91ZC5nb29nbGUuY29tL2dvL2NvbnRlbnR3YXJlaG91c2UvYXBpdjEvY29udGVudHdhcmVob3VzZXBiO2NvbnRlbnR3YXJlaG91c2VwYqoCIEdvb2dsZS5DbG91ZC5Db250ZW50V2FyZWhvdXNlLlYxygIgR29vZ2xlXENsb3VkXENvbnRlbnRXYXJlaG91c2VcVjHqAiNHb29nbGU6OkNsb3VkOjpDb250ZW50V2FyZWhvdXNlOjpWMWIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_cloud_contentwarehouse_v1_synonymset, file_google_cloud_contentwarehouse_v1_synonymset_service_request, file_google_protobuf_empty]);

/**
 * A Service that manage/custom customer specified SynonymSets.
 *
 * @generated from service google.cloud.contentwarehouse.v1.SynonymSetService
 */
export const SynonymSetService: GenService<{
  /**
   * Creates a SynonymSet for a single context.
   * Throws an ALREADY_EXISTS exception if a synonymset already exists
   * for the context.
   *
   * @generated from rpc google.cloud.contentwarehouse.v1.SynonymSetService.CreateSynonymSet
   */
  createSynonymSet: {
    methodKind: "unary";
    input: typeof CreateSynonymSetRequestSchema;
    output: typeof SynonymSetSchema;
  },
  /**
   * Gets a SynonymSet for a particular context.
   * Throws a NOT_FOUND exception if the Synonymset
   * does not exist
   *
   * @generated from rpc google.cloud.contentwarehouse.v1.SynonymSetService.GetSynonymSet
   */
  getSynonymSet: {
    methodKind: "unary";
    input: typeof GetSynonymSetRequestSchema;
    output: typeof SynonymSetSchema;
  },
  /**
   * Remove the existing SynonymSet for the context and replaces it
   * with a new one.
   * Throws a NOT_FOUND exception if the SynonymSet is not found.
   *
   * @generated from rpc google.cloud.contentwarehouse.v1.SynonymSetService.UpdateSynonymSet
   */
  updateSynonymSet: {
    methodKind: "unary";
    input: typeof UpdateSynonymSetRequestSchema;
    output: typeof SynonymSetSchema;
  },
  /**
   * Deletes a SynonymSet for a given context.
   * Throws a NOT_FOUND exception if the SynonymSet is not found.
   *
   * @generated from rpc google.cloud.contentwarehouse.v1.SynonymSetService.DeleteSynonymSet
   */
  deleteSynonymSet: {
    methodKind: "unary";
    input: typeof DeleteSynonymSetRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Returns all SynonymSets (for all contexts) for the specified location.
   *
   * @generated from rpc google.cloud.contentwarehouse.v1.SynonymSetService.ListSynonymSets
   */
  listSynonymSets: {
    methodKind: "unary";
    input: typeof ListSynonymSetsRequestSchema;
    output: typeof ListSynonymSetsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_contentwarehouse_v1_synonymset_service, 0);

