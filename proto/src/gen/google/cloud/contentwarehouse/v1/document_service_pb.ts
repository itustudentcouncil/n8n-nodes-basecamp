// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/contentwarehouse/v1/document_service.proto (package google.cloud.contentwarehouse.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { ResponseMetadata } from "./common_pb";
import { file_google_cloud_contentwarehouse_v1_common } from "./common_pb";
import type { Document, DocumentSchema } from "./document_pb";
import { file_google_cloud_contentwarehouse_v1_document } from "./document_pb";
import type { CreateDocumentRequestSchema, DeleteDocumentRequestSchema, FetchAclRequestSchema, GetDocumentRequestSchema, LockDocumentRequestSchema, SearchDocumentsRequestSchema, SetAclRequestSchema, UpdateDocumentRequestSchema } from "./document_service_request_pb";
import { file_google_cloud_contentwarehouse_v1_document_service_request } from "./document_service_request_pb";
import type { HistogramQueryResult } from "./histogram_pb";
import { file_google_cloud_contentwarehouse_v1_histogram } from "./histogram_pb";
import type { RuleEngineOutput } from "./rule_engine_pb";
import { file_google_cloud_contentwarehouse_v1_rule_engine } from "./rule_engine_pb";
import type { Policy } from "../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../iam/v1/policy_pb";
import type { Operation } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/contentwarehouse/v1/document_service.proto.
 */
export const file_google_cloud_contentwarehouse_v1_document_service: GenFile = /*@__PURE__*/
  fileDesc("Cjdnb29nbGUvY2xvdWQvY29udGVudHdhcmVob3VzZS92MS9kb2N1bWVudF9zZXJ2aWNlLnByb3RvEiBnb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MSKsAgoWQ3JlYXRlRG9jdW1lbnRSZXNwb25zZRI8Cghkb2N1bWVudBgBIAEoCzIqLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLkRvY3VtZW50Ek4KEnJ1bGVfZW5naW5lX291dHB1dBgCIAEoCzIyLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLlJ1bGVFbmdpbmVPdXRwdXQSRAoIbWV0YWRhdGEYAyABKAsyMi5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5SZXNwb25zZU1ldGFkYXRhEj4KF2xvbmdfcnVubmluZ19vcGVyYXRpb25zGAQgAygLMh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiLsAQoWVXBkYXRlRG9jdW1lbnRSZXNwb25zZRI8Cghkb2N1bWVudBgBIAEoCzIqLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLkRvY3VtZW50Ek4KEnJ1bGVfZW5naW5lX291dHB1dBgCIAEoCzIyLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLlJ1bGVFbmdpbmVPdXRwdXQSRAoIbWV0YWRhdGEYAyABKAsyMi5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5SZXNwb25zZU1ldGFkYXRhIqMBCghRQVJlc3VsdBJICgpoaWdobGlnaHRzGAEgAygLMjQuZ29vZ2xlLmNsb3VkLmNvbnRlbnR3YXJlaG91c2UudjEuUUFSZXN1bHQuSGlnaGxpZ2h0EhgKEGNvbmZpZGVuY2Vfc2NvcmUYAiABKAIaMwoJSGlnaGxpZ2h0EhMKC3N0YXJ0X2luZGV4GAEgASgFEhEKCWVuZF9pbmRleBgCIAEoBSK5BAoXU2VhcmNoRG9jdW1lbnRzUmVzcG9uc2USZgoSbWF0Y2hpbmdfZG9jdW1lbnRzGAEgAygLMkouZ29vZ2xlLmNsb3VkLmNvbnRlbnR3YXJlaG91c2UudjEuU2VhcmNoRG9jdW1lbnRzUmVzcG9uc2UuTWF0Y2hpbmdEb2N1bWVudBIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkSEgoKdG90YWxfc2l6ZRgDIAEoBRJECghtZXRhZGF0YRgEIAEoCzIyLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLlJlc3BvbnNlTWV0YWRhdGESVwoXaGlzdG9ncmFtX3F1ZXJ5X3Jlc3VsdHMYBiADKAsyNi5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5IaXN0b2dyYW1RdWVyeVJlc3VsdBIXCg9xdWVzdGlvbl9hbnN3ZXIYByABKAka0AEKEE1hdGNoaW5nRG9jdW1lbnQSPAoIZG9jdW1lbnQYASABKAsyKi5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5Eb2N1bWVudBIbChNzZWFyY2hfdGV4dF9zbmlwcGV0GAIgASgJEj0KCXFhX3Jlc3VsdBgDIAEoCzIqLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLlFBUmVzdWx0EiIKGm1hdGNoZWRfdG9rZW5fcGFnZV9pbmRpY2VzGAQgAygDIn8KEEZldGNoQWNsUmVzcG9uc2USJQoGcG9saWN5GAEgASgLMhUuZ29vZ2xlLmlhbS52MS5Qb2xpY3kSRAoIbWV0YWRhdGEYAiABKAsyMi5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5SZXNwb25zZU1ldGFkYXRhIn0KDlNldEFjbFJlc3BvbnNlEiUKBnBvbGljeRgBIAEoCzIVLmdvb2dsZS5pYW0udjEuUG9saWN5EkQKCG1ldGFkYXRhGAIgASgLMjIuZ29vZ2xlLmNsb3VkLmNvbnRlbnR3YXJlaG91c2UudjEuUmVzcG9uc2VNZXRhZGF0YTKiDwoPRG9jdW1lbnRTZXJ2aWNlEs8BCg5DcmVhdGVEb2N1bWVudBI3Lmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLkNyZWF0ZURvY3VtZW50UmVxdWVzdBo4Lmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLkNyZWF0ZURvY3VtZW50UmVzcG9uc2UiStpBD3BhcmVudCxkb2N1bWVudILT5JMCMjoBKiItL3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vZG9jdW1lbnRzEvkBCgtHZXREb2N1bWVudBI0Lmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLkdldERvY3VtZW50UmVxdWVzdBoqLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLkRvY3VtZW50IocB2kEEbmFtZYLT5JMCejoBKlpCOgEqIj0vdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9kb2N1bWVudHMvcmVmZXJlbmNlSWQvKn06Z2V0IjEvdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9kb2N1bWVudHMvKn06Z2V0Eo4CCg5VcGRhdGVEb2N1bWVudBI3Lmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLlVwZGF0ZURvY3VtZW50UmVxdWVzdBo4Lmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLlVwZGF0ZURvY3VtZW50UmVzcG9uc2UiiAHaQQ1uYW1lLGRvY3VtZW50gtPkkwJyOgEqWj46ASoyOS92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2RvY3VtZW50cy9yZWZlcmVuY2VJZC8qfTItL3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovZG9jdW1lbnRzLyp9EvIBCg5EZWxldGVEb2N1bWVudBI3Lmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLkRlbGV0ZURvY3VtZW50UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSKOAdpBBG5hbWWC0+STAoABOgEqWkU6ASoiQC92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2RvY3VtZW50cy9yZWZlcmVuY2VJZC8qfTpkZWxldGUiNC92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2RvY3VtZW50cy8qfTpkZWxldGUS0AEKD1NlYXJjaERvY3VtZW50cxI4Lmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLlNlYXJjaERvY3VtZW50c1JlcXVlc3QaOS5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5TZWFyY2hEb2N1bWVudHNSZXNwb25zZSJI2kEGcGFyZW50gtPkkwI5OgEqIjQvdjEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9kb2N1bWVudHM6c2VhcmNoErcBCgxMb2NrRG9jdW1lbnQSNS5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5Mb2NrRG9jdW1lbnRSZXF1ZXN0GiouZ29vZ2xlLmNsb3VkLmNvbnRlbnR3YXJlaG91c2UudjEuRG9jdW1lbnQiRNpBBG5hbWWC0+STAjc6ASoiMi92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2RvY3VtZW50cy8qfTpsb2NrEuwBCghGZXRjaEFjbBIxLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLkZldGNoQWNsUmVxdWVzdBoyLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLkZldGNoQWNsUmVzcG9uc2UiedpBCHJlc291cmNlgtPkkwJoOgEqWic6ASoiIi92MS97cmVzb3VyY2U9cHJvamVjdHMvKn06ZmV0Y2hBY2wiOi92MS97cmVzb3VyY2U9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9kb2N1bWVudHMvKn06ZmV0Y2hBY2wS6QEKBlNldEFjbBIvLmdvb2dsZS5jbG91ZC5jb250ZW50d2FyZWhvdXNlLnYxLlNldEFjbFJlcXVlc3QaMC5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MS5TZXRBY2xSZXNwb25zZSJ82kEPcmVzb3VyY2UscG9saWN5gtPkkwJkOgEqWiU6ASoiIC92MS97cmVzb3VyY2U9cHJvamVjdHMvKn06c2V0QWNsIjgvdjEve3Jlc291cmNlPXByb2plY3RzLyovbG9jYXRpb25zLyovZG9jdW1lbnRzLyp9OnNldEFjbBpTykEfY29udGVudHdhcmVob3VzZS5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1C/AEKJGNvbS5nb29nbGUuY2xvdWQuY29udGVudHdhcmVob3VzZS52MUIURG9jdW1lbnRTZXJ2aWNlUHJvdG9QAVpQY2xvdWQuZ29vZ2xlLmNvbS9nby9jb250ZW50d2FyZWhvdXNlL2FwaXYxL2NvbnRlbnR3YXJlaG91c2VwYjtjb250ZW50d2FyZWhvdXNlcGKqAiBHb29nbGUuQ2xvdWQuQ29udGVudFdhcmVob3VzZS5WMcoCIEdvb2dsZVxDbG91ZFxDb250ZW50V2FyZWhvdXNlXFYx6gIjR29vZ2xlOjpDbG91ZDo6Q29udGVudFdhcmVob3VzZTo6VjFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_resource, file_google_cloud_contentwarehouse_v1_common, file_google_cloud_contentwarehouse_v1_document, file_google_cloud_contentwarehouse_v1_document_service_request, file_google_cloud_contentwarehouse_v1_histogram, file_google_cloud_contentwarehouse_v1_rule_engine, file_google_iam_v1_policy, file_google_longrunning_operations, file_google_protobuf_empty]);

/**
 * Response message for DocumentService.CreateDocument.
 *
 * @generated from message google.cloud.contentwarehouse.v1.CreateDocumentResponse
 */
export type CreateDocumentResponse = Message<"google.cloud.contentwarehouse.v1.CreateDocumentResponse"> & {
  /**
   * Document created after executing create request.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.Document document = 1;
   */
  document?: Document;

  /**
   * Output from Rule Engine recording the rule evaluator and action executor's
   * output.
   *
   * Refer format in: google/cloud/contentwarehouse/v1/rule_engine.proto
   *
   * @generated from field: google.cloud.contentwarehouse.v1.RuleEngineOutput rule_engine_output = 2;
   */
  ruleEngineOutput?: RuleEngineOutput;

  /**
   * Additional information for the API invocation, such as the request tracking
   * id.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.ResponseMetadata metadata = 3;
   */
  metadata?: ResponseMetadata;

  /**
   * post-processing LROs
   *
   * @generated from field: repeated google.longrunning.Operation long_running_operations = 4;
   */
  longRunningOperations: Operation[];
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.CreateDocumentResponse.
 * Use `create(CreateDocumentResponseSchema)` to create a new message.
 */
export const CreateDocumentResponseSchema: GenMessage<CreateDocumentResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service, 0);

/**
 * Response message for DocumentService.UpdateDocument.
 *
 * @generated from message google.cloud.contentwarehouse.v1.UpdateDocumentResponse
 */
export type UpdateDocumentResponse = Message<"google.cloud.contentwarehouse.v1.UpdateDocumentResponse"> & {
  /**
   * Updated document after executing update request.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.Document document = 1;
   */
  document?: Document;

  /**
   * Output from Rule Engine recording the rule evaluator and action executor's
   * output.
   *
   * Refer format in: google/cloud/contentwarehouse/v1/rule_engine.proto
   *
   * @generated from field: google.cloud.contentwarehouse.v1.RuleEngineOutput rule_engine_output = 2;
   */
  ruleEngineOutput?: RuleEngineOutput;

  /**
   * Additional information for the API invocation, such as the request tracking
   * id.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.ResponseMetadata metadata = 3;
   */
  metadata?: ResponseMetadata;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.UpdateDocumentResponse.
 * Use `create(UpdateDocumentResponseSchema)` to create a new message.
 */
export const UpdateDocumentResponseSchema: GenMessage<UpdateDocumentResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service, 1);

/**
 * Additional result info for the question-answering feature.
 *
 * @generated from message google.cloud.contentwarehouse.v1.QAResult
 */
export type QAResult = Message<"google.cloud.contentwarehouse.v1.QAResult"> & {
  /**
   * Highlighted sections in the snippet.
   *
   * @generated from field: repeated google.cloud.contentwarehouse.v1.QAResult.Highlight highlights = 1;
   */
  highlights: QAResult_Highlight[];

  /**
   * The calibrated confidence score for this document, in the range
   * [0., 1.]. This represents the confidence level for whether the returned
   * document and snippet answers the user's query.
   *
   * @generated from field: float confidence_score = 2;
   */
  confidenceScore: number;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.QAResult.
 * Use `create(QAResultSchema)` to create a new message.
 */
export const QAResultSchema: GenMessage<QAResult> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service, 2);

/**
 * A text span in the search text snippet that represents a highlighted
 * section (answer context, highly relevant sentence, etc.).
 *
 * @generated from message google.cloud.contentwarehouse.v1.QAResult.Highlight
 */
export type QAResult_Highlight = Message<"google.cloud.contentwarehouse.v1.QAResult.Highlight"> & {
  /**
   * Start index of the highlight.
   *
   * @generated from field: int32 start_index = 1;
   */
  startIndex: number;

  /**
   * End index of the highlight, exclusive.
   *
   * @generated from field: int32 end_index = 2;
   */
  endIndex: number;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.QAResult.Highlight.
 * Use `create(QAResult_HighlightSchema)` to create a new message.
 */
export const QAResult_HighlightSchema: GenMessage<QAResult_Highlight> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service, 2, 0);

/**
 * Response message for DocumentService.SearchDocuments.
 *
 * @generated from message google.cloud.contentwarehouse.v1.SearchDocumentsResponse
 */
export type SearchDocumentsResponse = Message<"google.cloud.contentwarehouse.v1.SearchDocumentsResponse"> & {
  /**
   * The document entities that match the specified
   * [SearchDocumentsRequest][google.cloud.contentwarehouse.v1.SearchDocumentsRequest].
   *
   * @generated from field: repeated google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument matching_documents = 1;
   */
  matchingDocuments: SearchDocumentsResponse_MatchingDocument[];

  /**
   * The token that specifies the starting position of the next page of results.
   * This field is empty if there are no more results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * The total number of matched documents which is available only if the client
   * set
   * [SearchDocumentsRequest.require_total_size][google.cloud.contentwarehouse.v1.SearchDocumentsRequest.require_total_size]
   * to `true` or set
   * [SearchDocumentsRequest.total_result_size][google.cloud.contentwarehouse.v1.SearchDocumentsRequest.total_result_size]
   * to `ESTIMATED_SIZE` or `ACTUAL_SIZE`. Otherwise, the value will be `-1`.
   * Typically a UI would handle this condition by displaying &quot;of
   * many&quot;, for example: &quot;Displaying 10 of many&quot;.
   *
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;

  /**
   * Additional information for the API invocation, such as the request tracking
   * id.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.ResponseMetadata metadata = 4;
   */
  metadata?: ResponseMetadata;

  /**
   * The histogram results that match with the specified
   * [SearchDocumentsRequest.histogram_queries][google.cloud.contentwarehouse.v1.SearchDocumentsRequest.histogram_queries].
   *
   * @generated from field: repeated google.cloud.contentwarehouse.v1.HistogramQueryResult histogram_query_results = 6;
   */
  histogramQueryResults: HistogramQueryResult[];

  /**
   * Experimental.
   * Question answer from the query against the document.
   *
   * @generated from field: string question_answer = 7;
   */
  questionAnswer: string;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.SearchDocumentsResponse.
 * Use `create(SearchDocumentsResponseSchema)` to create a new message.
 */
export const SearchDocumentsResponseSchema: GenMessage<SearchDocumentsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service, 3);

/**
 * Document entry with metadata inside
 * [SearchDocumentsResponse][google.cloud.contentwarehouse.v1.SearchDocumentsResponse]
 *
 * @generated from message google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument
 */
export type SearchDocumentsResponse_MatchingDocument = Message<"google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument"> & {
  /**
   * Document that matches the specified
   * [SearchDocumentsRequest][google.cloud.contentwarehouse.v1.SearchDocumentsRequest].
   * This document only contains indexed metadata information.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.Document document = 1;
   */
  document?: Document;

  /**
   * Contains snippets of text from the document full raw text that most
   * closely match a search query's keywords, if available. All HTML tags in
   * the original fields are stripped when returned in this field, and
   * matching query keywords are enclosed in HTML bold tags.
   *
   * If the question-answering feature is enabled, this field will instead
   * contain a snippet that answers the user's natural-language query. No HTML
   * bold tags will be present, and highlights in the answer snippet can be
   * found in
   * [QAResult.highlights][google.cloud.contentwarehouse.v1.QAResult.highlights].
   *
   * @generated from field: string search_text_snippet = 2;
   */
  searchTextSnippet: string;

  /**
   * Experimental.
   * Additional result info if the question-answering feature is enabled.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.QAResult qa_result = 3;
   */
  qaResult?: QAResult;

  /**
   * Return the 1-based page indices where those pages have one or more
   * matched tokens.
   *
   * @generated from field: repeated int64 matched_token_page_indices = 4;
   */
  matchedTokenPageIndices: bigint[];
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument.
 * Use `create(SearchDocumentsResponse_MatchingDocumentSchema)` to create a new message.
 */
export const SearchDocumentsResponse_MatchingDocumentSchema: GenMessage<SearchDocumentsResponse_MatchingDocument> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service, 3, 0);

/**
 * Response message for DocumentService.FetchAcl.
 *
 * @generated from message google.cloud.contentwarehouse.v1.FetchAclResponse
 */
export type FetchAclResponse = Message<"google.cloud.contentwarehouse.v1.FetchAclResponse"> & {
  /**
   * The IAM policy.
   *
   * @generated from field: google.iam.v1.Policy policy = 1;
   */
  policy?: Policy;

  /**
   * Additional information for the API invocation, such as the request tracking
   * id.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.ResponseMetadata metadata = 2;
   */
  metadata?: ResponseMetadata;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.FetchAclResponse.
 * Use `create(FetchAclResponseSchema)` to create a new message.
 */
export const FetchAclResponseSchema: GenMessage<FetchAclResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service, 4);

/**
 * Response message for DocumentService.SetAcl.
 *
 * @generated from message google.cloud.contentwarehouse.v1.SetAclResponse
 */
export type SetAclResponse = Message<"google.cloud.contentwarehouse.v1.SetAclResponse"> & {
  /**
   * The policy will be attached to a resource (e.g. projecct, document).
   *
   * @generated from field: google.iam.v1.Policy policy = 1;
   */
  policy?: Policy;

  /**
   * Additional information for the API invocation, such as the request tracking
   * id.
   *
   * @generated from field: google.cloud.contentwarehouse.v1.ResponseMetadata metadata = 2;
   */
  metadata?: ResponseMetadata;
};

/**
 * Describes the message google.cloud.contentwarehouse.v1.SetAclResponse.
 * Use `create(SetAclResponseSchema)` to create a new message.
 */
export const SetAclResponseSchema: GenMessage<SetAclResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_contentwarehouse_v1_document_service, 5);

/**
 * This service lets you manage document.
 *
 * @generated from service google.cloud.contentwarehouse.v1.DocumentService
 */
export const DocumentService: GenService<{
  /**
   * Creates a document.
   *
   * @generated from rpc google.cloud.contentwarehouse.v1.DocumentService.CreateDocument
   */
  createDocument: {
    methodKind: "unary";
    input: typeof CreateDocumentRequestSchema;
    output: typeof CreateDocumentResponseSchema;
  },
  /**
   * Gets a document. Returns NOT_FOUND if the document does not exist.
   *
   * @generated from rpc google.cloud.contentwarehouse.v1.DocumentService.GetDocument
   */
  getDocument: {
    methodKind: "unary";
    input: typeof GetDocumentRequestSchema;
    output: typeof DocumentSchema;
  },
  /**
   * Updates a document. Returns INVALID_ARGUMENT if the name of the document
   * is non-empty and does not equal the existing name.
   *
   * @generated from rpc google.cloud.contentwarehouse.v1.DocumentService.UpdateDocument
   */
  updateDocument: {
    methodKind: "unary";
    input: typeof UpdateDocumentRequestSchema;
    output: typeof UpdateDocumentResponseSchema;
  },
  /**
   * Deletes a document. Returns NOT_FOUND if the document does not exist.
   *
   * @generated from rpc google.cloud.contentwarehouse.v1.DocumentService.DeleteDocument
   */
  deleteDocument: {
    methodKind: "unary";
    input: typeof DeleteDocumentRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Searches for documents using provided
   * [SearchDocumentsRequest][google.cloud.contentwarehouse.v1.SearchDocumentsRequest].
   * This call only returns documents that the caller has permission to search
   * against.
   *
   * @generated from rpc google.cloud.contentwarehouse.v1.DocumentService.SearchDocuments
   */
  searchDocuments: {
    methodKind: "unary";
    input: typeof SearchDocumentsRequestSchema;
    output: typeof SearchDocumentsResponseSchema;
  },
  /**
   * Lock the document so the document cannot be updated by other users.
   *
   * @generated from rpc google.cloud.contentwarehouse.v1.DocumentService.LockDocument
   */
  lockDocument: {
    methodKind: "unary";
    input: typeof LockDocumentRequestSchema;
    output: typeof DocumentSchema;
  },
  /**
   * Gets the access control policy for a resource. Returns NOT_FOUND error if
   * the resource does not exist. Returns an empty policy if the resource exists
   * but does not have a policy set.
   *
   * @generated from rpc google.cloud.contentwarehouse.v1.DocumentService.FetchAcl
   */
  fetchAcl: {
    methodKind: "unary";
    input: typeof FetchAclRequestSchema;
    output: typeof FetchAclResponseSchema;
  },
  /**
   * Sets the access control policy for a resource. Replaces any existing
   * policy.
   *
   * @generated from rpc google.cloud.contentwarehouse.v1.DocumentService.SetAcl
   */
  setAcl: {
    methodKind: "unary";
    input: typeof SetAclRequestSchema;
    output: typeof SetAclResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_contentwarehouse_v1_document_service, 0);

