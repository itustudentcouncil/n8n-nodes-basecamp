// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/dataqna/v1alpha/annotated_string.proto (package google.cloud.dataqna.v1alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/dataqna/v1alpha/annotated_string.proto.
 */
export const file_google_cloud_dataqna_v1alpha_annotated_string: GenFile = /*@__PURE__*/
  fileDesc("CjNnb29nbGUvY2xvdWQvZGF0YXFuYS92MWFscGhhL2Fubm90YXRlZF9zdHJpbmcucHJvdG8SHGdvb2dsZS5jbG91ZC5kYXRhcW5hLnYxYWxwaGEimQMKD0Fubm90YXRlZFN0cmluZxIWCg50ZXh0X2Zvcm1hdHRlZBgBIAEoCRIWCg5odG1sX2Zvcm1hdHRlZBgCIAEoCRJNCgdtYXJrdXBzGAMgAygLMjwuZ29vZ2xlLmNsb3VkLmRhdGFxbmEudjFhbHBoYS5Bbm5vdGF0ZWRTdHJpbmcuU2VtYW50aWNNYXJrdXAaigEKDlNlbWFudGljTWFya3VwEk4KBHR5cGUYASABKA4yQC5nb29nbGUuY2xvdWQuZGF0YXFuYS52MWFscGhhLkFubm90YXRlZFN0cmluZy5TZW1hbnRpY01hcmt1cFR5cGUSGAoQc3RhcnRfY2hhcl9pbmRleBgCIAEoBRIOCgZsZW5ndGgYAyABKAUiegoSU2VtYW50aWNNYXJrdXBUeXBlEhsKF01BUktVUF9UWVBFX1VOU1BFQ0lGSUVEEAASCgoGTUVUUklDEAESDQoJRElNRU5TSU9OEAISCgoGRklMVEVSEAMSCgoGVU5VU0VEEAQSCwoHQkxPQ0tFRBAFEgcKA1JPVxAGQtYBCiBjb20uZ29vZ2xlLmNsb3VkLmRhdGFxbmEudjFhbHBoYUIUQW5ub3RhdGVkU3RyaW5nUHJvdG9QAVo6Y2xvdWQuZ29vZ2xlLmNvbS9nby9kYXRhcW5hL2FwaXYxYWxwaGEvZGF0YXFuYXBiO2RhdGFxbmFwYqoCHEdvb2dsZS5DbG91ZC5EYXRhUW5BLlYxQWxwaGHKAhxHb29nbGVcQ2xvdWRcRGF0YVFuQVxWMWFscGhh6gIfR29vZ2xlOjpDbG91ZDo6RGF0YVFuQTo6VjFhbHBoYWIGcHJvdG8z");

/**
 * Describes string annotation from both semantic and formatting perspectives.
 * Example:
 *
 * User Query:
 *
 *   top countries by population in Africa
 *
 *   0   4         14 17         28 31    37
 *
 * Table Data:
 *
 * + "country" - dimension
 * + "population" - metric
 * + "Africa" - value in the "continent" column
 *
 * text_formatted = `"top countries by population in Africa"`
 *
 * html_formatted =
 *   `"top <b>countries</b> by <b>population</b> in <i>Africa</i>"`
 *
 * ```
 * markups = [
 *   {DIMENSION, 4, 12}, // 'countries'
 *   {METRIC, 17, 26}, // 'population'
 *   {FILTER, 31, 36}  // 'Africa'
 * ]
 * ```
 *
 * Note that html formattings for 'DIMENSION' and 'METRIC' are the same, while
 * semantic markups are different.
 *
 * @generated from message google.cloud.dataqna.v1alpha.AnnotatedString
 */
export type AnnotatedString = Message<"google.cloud.dataqna.v1alpha.AnnotatedString"> & {
  /**
   * Text version of the string.
   *
   * @generated from field: string text_formatted = 1;
   */
  textFormatted: string;

  /**
   * HTML version of the string annotation.
   *
   * @generated from field: string html_formatted = 2;
   */
  htmlFormatted: string;

  /**
   * Semantic version of the string annotation.
   *
   * @generated from field: repeated google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup markups = 3;
   */
  markups: AnnotatedString_SemanticMarkup[];
};

/**
 * Describes the message google.cloud.dataqna.v1alpha.AnnotatedString.
 * Use `create(AnnotatedStringSchema)` to create a new message.
 */
export const AnnotatedStringSchema: GenMessage<AnnotatedString> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataqna_v1alpha_annotated_string, 0);

/**
 * Semantic markup denotes a substring (by index and length) with markup
 * information.
 *
 * @generated from message google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup
 */
export type AnnotatedString_SemanticMarkup = Message<"google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup"> & {
  /**
   * The semantic type of the markup substring.
   *
   * @generated from field: google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType type = 1;
   */
  type: AnnotatedString_SemanticMarkupType;

  /**
   * Unicode character index of the query.
   *
   * @generated from field: int32 start_char_index = 2;
   */
  startCharIndex: number;

  /**
   * The length (number of unicode characters) of the markup substring.
   *
   * @generated from field: int32 length = 3;
   */
  length: number;
};

/**
 * Describes the message google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkup.
 * Use `create(AnnotatedString_SemanticMarkupSchema)` to create a new message.
 */
export const AnnotatedString_SemanticMarkupSchema: GenMessage<AnnotatedString_SemanticMarkup> = /*@__PURE__*/
  messageDesc(file_google_cloud_dataqna_v1alpha_annotated_string, 0, 0);

/**
 * Semantic markup types.
 *
 * @generated from enum google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType
 */
export enum AnnotatedString_SemanticMarkupType {
  /**
   * No markup type was specified.
   *
   * @generated from enum value: MARKUP_TYPE_UNSPECIFIED = 0;
   */
  MARKUP_TYPE_UNSPECIFIED = 0,

  /**
   * Markup for a substring denoting a metric.
   *
   * @generated from enum value: METRIC = 1;
   */
  METRIC = 1,

  /**
   * Markup for a substring denoting a dimension.
   *
   * @generated from enum value: DIMENSION = 2;
   */
  DIMENSION = 2,

  /**
   * Markup for a substring denoting a filter.
   *
   * @generated from enum value: FILTER = 3;
   */
  FILTER = 3,

  /**
   * Markup for an unused substring.
   *
   * @generated from enum value: UNUSED = 4;
   */
  UNUSED = 4,

  /**
   * Markup for a substring containing blocked phrases.
   *
   * @generated from enum value: BLOCKED = 5;
   */
  BLOCKED = 5,

  /**
   * Markup for a substring that contains terms for row.
   *
   * @generated from enum value: ROW = 6;
   */
  ROW = 6,
}

/**
 * Describes the enum google.cloud.dataqna.v1alpha.AnnotatedString.SemanticMarkupType.
 */
export const AnnotatedString_SemanticMarkupTypeSchema: GenEnum<AnnotatedString_SemanticMarkupType> = /*@__PURE__*/
  enumDesc(file_google_cloud_dataqna_v1alpha_annotated_string, 0, 0);

