// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/recommender/v1/recommender_service.proto (package google.cloud.recommender.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Insight, InsightSchema } from "./insight_pb";
import { file_google_cloud_recommender_v1_insight } from "./insight_pb";
import type { InsightTypeConfig, InsightTypeConfigSchema } from "./insight_type_config_pb";
import { file_google_cloud_recommender_v1_insight_type_config } from "./insight_type_config_pb";
import type { Recommendation, RecommendationSchema } from "./recommendation_pb";
import { file_google_cloud_recommender_v1_recommendation } from "./recommendation_pb";
import type { RecommenderConfig, RecommenderConfigSchema } from "./recommender_config_pb";
import { file_google_cloud_recommender_v1_recommender_config } from "./recommender_config_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/recommender/v1/recommender_service.proto.
 */
export const file_google_cloud_recommender_v1_recommender_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_recommender_v1_insight, file_google_cloud_recommender_v1_insight_type_config, file_google_cloud_recommender_v1_recommendation, file_google_cloud_recommender_v1_recommender_config, file_google_protobuf_field_mask]);

/**
 * Request for the `ListInsights` method.
 *
 * @generated from message google.cloud.recommender.v1.ListInsightsRequest
 */
export type ListInsightsRequest = Message<"google.cloud.recommender.v1.ListInsightsRequest"> & {
  /**
   * Required. The container resource on which to execute the request.
   * Acceptable formats:
   *
   * * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]`
   *
   * * `projects/[PROJECT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]`
   *
   * * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]`
   *
   * * `folders/[FOLDER_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]`
   *
   * * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]`
   *
   * LOCATION here refers to GCP Locations:
   * https://cloud.google.com/about/locations/
   * INSIGHT_TYPE_ID refers to supported insight types:
   * https://cloud.google.com/recommender/docs/insights/insight-types.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of results to return from this request.
   * Non-positive values are ignored. If not specified, the server will
   * determine the number of results to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. If present, retrieves the next batch of results from the
   * preceding call to this method. `page_token` must be the value of
   * `next_page_token` from the previous response. The values of other method
   * parameters must be identical to those in the previous call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Filter expression to restrict the insights returned. Supported
   * filter fields:
   *
   * * `stateInfo.state`
   *
   * * `insightSubtype`
   *
   * * `severity`
   *
   * * `targetResources`
   *
   * Examples:
   *
   * * `stateInfo.state = ACTIVE OR stateInfo.state = DISMISSED`
   *
   * * `insightSubtype = PERMISSIONS_USAGE`
   *
   * * `severity = CRITICAL OR severity = HIGH`
   *
   * * `targetResources :
   * //compute.googleapis.com/projects/1234/zones/us-central1-a/instances/instance-1`
   *
   * * `stateInfo.state = ACTIVE AND (severity = CRITICAL OR severity = HIGH)`
   *
   * The max allowed filter length is 500 characters.
   *
   * (These expressions are based on the filter language described at
   * https://google.aip.dev/160)
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.recommender.v1.ListInsightsRequest.
 * Use `create(ListInsightsRequestSchema)` to create a new message.
 */
export const ListInsightsRequestSchema: GenMessage<ListInsightsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommender_v1_recommender_service, 0);

/**
 * Response to the `ListInsights` method.
 *
 * @generated from message google.cloud.recommender.v1.ListInsightsResponse
 */
export type ListInsightsResponse = Message<"google.cloud.recommender.v1.ListInsightsResponse"> & {
  /**
   * The set of insights for the `parent` resource.
   *
   * @generated from field: repeated google.cloud.recommender.v1.Insight insights = 1;
   */
  insights: Insight[];

  /**
   * A token that can be used to request the next page of results. This field is
   * empty if there are no additional results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.recommender.v1.ListInsightsResponse.
 * Use `create(ListInsightsResponseSchema)` to create a new message.
 */
export const ListInsightsResponseSchema: GenMessage<ListInsightsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommender_v1_recommender_service, 1);

/**
 * Request to the `GetInsight` method.
 *
 * @generated from message google.cloud.recommender.v1.GetInsightRequest
 */
export type GetInsightRequest = Message<"google.cloud.recommender.v1.GetInsightRequest"> & {
  /**
   * Required. Name of the insight.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.recommender.v1.GetInsightRequest.
 * Use `create(GetInsightRequestSchema)` to create a new message.
 */
export const GetInsightRequestSchema: GenMessage<GetInsightRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommender_v1_recommender_service, 2);

/**
 * Request for the `MarkInsightAccepted` method.
 *
 * @generated from message google.cloud.recommender.v1.MarkInsightAcceptedRequest
 */
export type MarkInsightAcceptedRequest = Message<"google.cloud.recommender.v1.MarkInsightAcceptedRequest"> & {
  /**
   * Required. Name of the insight.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. State properties user wish to include with this state.  Full
   * replace of the current state_metadata.
   *
   * @generated from field: map<string, string> state_metadata = 2;
   */
  stateMetadata: { [key: string]: string };

  /**
   * Required. Fingerprint of the Insight. Provides optimistic locking.
   *
   * @generated from field: string etag = 3;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.recommender.v1.MarkInsightAcceptedRequest.
 * Use `create(MarkInsightAcceptedRequestSchema)` to create a new message.
 */
export const MarkInsightAcceptedRequestSchema: GenMessage<MarkInsightAcceptedRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommender_v1_recommender_service, 3);

/**
 * Request for the `ListRecommendations` method.
 *
 * @generated from message google.cloud.recommender.v1.ListRecommendationsRequest
 */
export type ListRecommendationsRequest = Message<"google.cloud.recommender.v1.ListRecommendationsRequest"> & {
  /**
   * Required. The container resource on which to execute the request.
   * Acceptable formats:
   *
   * * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]`
   *
   * * `projects/[PROJECT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]`
   *
   * * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]`
   *
   * * `folders/[FOLDER_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]`
   *
   * * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]`
   *
   * LOCATION here refers to GCP Locations:
   * https://cloud.google.com/about/locations/
   * RECOMMENDER_ID refers to supported recommenders:
   * https://cloud.google.com/recommender/docs/recommenders.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of results to return from this request.
   * Non-positive values are ignored. If not specified, the server will
   * determine the number of results to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. If present, retrieves the next batch of results from the
   * preceding call to this method. `page_token` must be the value of
   * `next_page_token` from the previous response. The values of other method
   * parameters must be identical to those in the previous call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filter expression to restrict the recommendations returned. Supported
   * filter fields:
   *
   * * `state_info.state`
   *
   * * `recommenderSubtype`
   *
   * * `priority`
   *
   * * `targetResources`
   *
   * Examples:
   *
   * * `stateInfo.state = ACTIVE OR stateInfo.state = DISMISSED`
   *
   * * `recommenderSubtype = REMOVE_ROLE OR recommenderSubtype = REPLACE_ROLE`
   *
   * * `priority = P1 OR priority = P2`
   *
   * * `targetResources :
   * //compute.googleapis.com/projects/1234/zones/us-central1-a/instances/instance-1`
   *
   * * `stateInfo.state = ACTIVE AND (priority = P1 OR priority = P2)`
   *
   * The max allowed filter length is 500 characters.
   *
   * (These expressions are based on the filter language described at
   * https://google.aip.dev/160)
   *
   * @generated from field: string filter = 5;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.recommender.v1.ListRecommendationsRequest.
 * Use `create(ListRecommendationsRequestSchema)` to create a new message.
 */
export const ListRecommendationsRequestSchema: GenMessage<ListRecommendationsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommender_v1_recommender_service, 4);

/**
 * Response to the `ListRecommendations` method.
 *
 * @generated from message google.cloud.recommender.v1.ListRecommendationsResponse
 */
export type ListRecommendationsResponse = Message<"google.cloud.recommender.v1.ListRecommendationsResponse"> & {
  /**
   * The set of recommendations for the `parent` resource.
   *
   * @generated from field: repeated google.cloud.recommender.v1.Recommendation recommendations = 1;
   */
  recommendations: Recommendation[];

  /**
   * A token that can be used to request the next page of results. This field is
   * empty if there are no additional results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.recommender.v1.ListRecommendationsResponse.
 * Use `create(ListRecommendationsResponseSchema)` to create a new message.
 */
export const ListRecommendationsResponseSchema: GenMessage<ListRecommendationsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommender_v1_recommender_service, 5);

/**
 * Request to the `GetRecommendation` method.
 *
 * @generated from message google.cloud.recommender.v1.GetRecommendationRequest
 */
export type GetRecommendationRequest = Message<"google.cloud.recommender.v1.GetRecommendationRequest"> & {
  /**
   * Required. Name of the recommendation.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.recommender.v1.GetRecommendationRequest.
 * Use `create(GetRecommendationRequestSchema)` to create a new message.
 */
export const GetRecommendationRequestSchema: GenMessage<GetRecommendationRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommender_v1_recommender_service, 6);

/**
 * Request for the `MarkRecommendationDismissed` Method.
 *
 * @generated from message google.cloud.recommender.v1.MarkRecommendationDismissedRequest
 */
export type MarkRecommendationDismissedRequest = Message<"google.cloud.recommender.v1.MarkRecommendationDismissedRequest"> & {
  /**
   * Required. Name of the recommendation.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Fingerprint of the Recommendation. Provides optimistic locking.
   *
   * @generated from field: string etag = 2;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.recommender.v1.MarkRecommendationDismissedRequest.
 * Use `create(MarkRecommendationDismissedRequestSchema)` to create a new message.
 */
export const MarkRecommendationDismissedRequestSchema: GenMessage<MarkRecommendationDismissedRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommender_v1_recommender_service, 7);

/**
 * Request for the `MarkRecommendationClaimed` Method.
 *
 * @generated from message google.cloud.recommender.v1.MarkRecommendationClaimedRequest
 */
export type MarkRecommendationClaimedRequest = Message<"google.cloud.recommender.v1.MarkRecommendationClaimedRequest"> & {
  /**
   * Required. Name of the recommendation.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * State properties to include with this state. Overwrites any existing
   * `state_metadata`.
   * Keys must match the regex `/^[a-z0-9][a-z0-9_.-]{0,62}$/`.
   * Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`.
   *
   * @generated from field: map<string, string> state_metadata = 2;
   */
  stateMetadata: { [key: string]: string };

  /**
   * Required. Fingerprint of the Recommendation. Provides optimistic locking.
   *
   * @generated from field: string etag = 3;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.recommender.v1.MarkRecommendationClaimedRequest.
 * Use `create(MarkRecommendationClaimedRequestSchema)` to create a new message.
 */
export const MarkRecommendationClaimedRequestSchema: GenMessage<MarkRecommendationClaimedRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommender_v1_recommender_service, 8);

/**
 * Request for the `MarkRecommendationSucceeded` Method.
 *
 * @generated from message google.cloud.recommender.v1.MarkRecommendationSucceededRequest
 */
export type MarkRecommendationSucceededRequest = Message<"google.cloud.recommender.v1.MarkRecommendationSucceededRequest"> & {
  /**
   * Required. Name of the recommendation.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * State properties to include with this state. Overwrites any existing
   * `state_metadata`.
   * Keys must match the regex `/^[a-z0-9][a-z0-9_.-]{0,62}$/`.
   * Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`.
   *
   * @generated from field: map<string, string> state_metadata = 2;
   */
  stateMetadata: { [key: string]: string };

  /**
   * Required. Fingerprint of the Recommendation. Provides optimistic locking.
   *
   * @generated from field: string etag = 3;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.recommender.v1.MarkRecommendationSucceededRequest.
 * Use `create(MarkRecommendationSucceededRequestSchema)` to create a new message.
 */
export const MarkRecommendationSucceededRequestSchema: GenMessage<MarkRecommendationSucceededRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommender_v1_recommender_service, 9);

/**
 * Request for the `MarkRecommendationFailed` Method.
 *
 * @generated from message google.cloud.recommender.v1.MarkRecommendationFailedRequest
 */
export type MarkRecommendationFailedRequest = Message<"google.cloud.recommender.v1.MarkRecommendationFailedRequest"> & {
  /**
   * Required. Name of the recommendation.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * State properties to include with this state. Overwrites any existing
   * `state_metadata`.
   * Keys must match the regex `/^[a-z0-9][a-z0-9_.-]{0,62}$/`.
   * Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`.
   *
   * @generated from field: map<string, string> state_metadata = 2;
   */
  stateMetadata: { [key: string]: string };

  /**
   * Required. Fingerprint of the Recommendation. Provides optimistic locking.
   *
   * @generated from field: string etag = 3;
   */
  etag: string;
};

/**
 * Describes the message google.cloud.recommender.v1.MarkRecommendationFailedRequest.
 * Use `create(MarkRecommendationFailedRequestSchema)` to create a new message.
 */
export const MarkRecommendationFailedRequestSchema: GenMessage<MarkRecommendationFailedRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommender_v1_recommender_service, 10);

/**
 * Request for the GetRecommenderConfig` method.
 *
 * @generated from message google.cloud.recommender.v1.GetRecommenderConfigRequest
 */
export type GetRecommenderConfigRequest = Message<"google.cloud.recommender.v1.GetRecommenderConfigRequest"> & {
  /**
   * Required. Name of the Recommendation Config to get.
   *
   * Acceptable formats:
   *
   * * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config`
   *
   * * `projects/[PROJECT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config`
   *
   * * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config`
   *
   * * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.recommender.v1.GetRecommenderConfigRequest.
 * Use `create(GetRecommenderConfigRequestSchema)` to create a new message.
 */
export const GetRecommenderConfigRequestSchema: GenMessage<GetRecommenderConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommender_v1_recommender_service, 11);

/**
 * Request for the `UpdateRecommenderConfig` method.
 *
 * @generated from message google.cloud.recommender.v1.UpdateRecommenderConfigRequest
 */
export type UpdateRecommenderConfigRequest = Message<"google.cloud.recommender.v1.UpdateRecommenderConfigRequest"> & {
  /**
   * Required. The RecommenderConfig to update.
   *
   * @generated from field: google.cloud.recommender.v1.RecommenderConfig recommender_config = 1;
   */
  recommenderConfig?: RecommenderConfig;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * If true, validate the request and preview the change, but do not actually
   * update it.
   *
   * @generated from field: bool validate_only = 3;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.recommender.v1.UpdateRecommenderConfigRequest.
 * Use `create(UpdateRecommenderConfigRequestSchema)` to create a new message.
 */
export const UpdateRecommenderConfigRequestSchema: GenMessage<UpdateRecommenderConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommender_v1_recommender_service, 12);

/**
 * Request for the GetInsightTypeConfig` method.
 *
 * @generated from message google.cloud.recommender.v1.GetInsightTypeConfigRequest
 */
export type GetInsightTypeConfigRequest = Message<"google.cloud.recommender.v1.GetInsightTypeConfigRequest"> & {
  /**
   * Required. Name of the InsightTypeConfig to get.
   *
   * Acceptable formats:
   *
   * * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/config`
   *
   * * `projects/[PROJECT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/config`
   *
   * * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/config`
   *
   * * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/config`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.recommender.v1.GetInsightTypeConfigRequest.
 * Use `create(GetInsightTypeConfigRequestSchema)` to create a new message.
 */
export const GetInsightTypeConfigRequestSchema: GenMessage<GetInsightTypeConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommender_v1_recommender_service, 13);

/**
 * Request for the `UpdateInsightTypeConfig` method.
 *
 * @generated from message google.cloud.recommender.v1.UpdateInsightTypeConfigRequest
 */
export type UpdateInsightTypeConfigRequest = Message<"google.cloud.recommender.v1.UpdateInsightTypeConfigRequest"> & {
  /**
   * Required. The InsightTypeConfig to update.
   *
   * @generated from field: google.cloud.recommender.v1.InsightTypeConfig insight_type_config = 1;
   */
  insightTypeConfig?: InsightTypeConfig;

  /**
   * The list of fields to be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * If true, validate the request and preview the change, but do not actually
   * update it.
   *
   * @generated from field: bool validate_only = 3;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.cloud.recommender.v1.UpdateInsightTypeConfigRequest.
 * Use `create(UpdateInsightTypeConfigRequestSchema)` to create a new message.
 */
export const UpdateInsightTypeConfigRequestSchema: GenMessage<UpdateInsightTypeConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_recommender_v1_recommender_service, 14);

/**
 * Provides insights and recommendations for cloud customers for various
 * categories like performance optimization, cost savings, reliability, feature
 * discovery, etc. Insights and recommendations are generated automatically
 * based on analysis of user resources, configuration and monitoring metrics.
 *
 * @generated from service google.cloud.recommender.v1.Recommender
 */
export const Recommender: GenService<{
  /**
   * Lists insights for the specified Cloud Resource. Requires the
   * recommender.*.list IAM permission for the specified insight type.
   *
   * @generated from rpc google.cloud.recommender.v1.Recommender.ListInsights
   */
  listInsights: {
    methodKind: "unary";
    input: typeof ListInsightsRequestSchema;
    output: typeof ListInsightsResponseSchema;
  },
  /**
   * Gets the requested insight. Requires the recommender.*.get IAM permission
   * for the specified insight type.
   *
   * @generated from rpc google.cloud.recommender.v1.Recommender.GetInsight
   */
  getInsight: {
    methodKind: "unary";
    input: typeof GetInsightRequestSchema;
    output: typeof InsightSchema;
  },
  /**
   * Marks the Insight State as Accepted. Users can use this method to
   * indicate to the Recommender API that they have applied some action based
   * on the insight. This stops the insight content from being updated.
   *
   * MarkInsightAccepted can be applied to insights in ACTIVE state. Requires
   * the recommender.*.update IAM permission for the specified insight.
   *
   * @generated from rpc google.cloud.recommender.v1.Recommender.MarkInsightAccepted
   */
  markInsightAccepted: {
    methodKind: "unary";
    input: typeof MarkInsightAcceptedRequestSchema;
    output: typeof InsightSchema;
  },
  /**
   * Lists recommendations for the specified Cloud Resource. Requires the
   * recommender.*.list IAM permission for the specified recommender.
   *
   * @generated from rpc google.cloud.recommender.v1.Recommender.ListRecommendations
   */
  listRecommendations: {
    methodKind: "unary";
    input: typeof ListRecommendationsRequestSchema;
    output: typeof ListRecommendationsResponseSchema;
  },
  /**
   * Gets the requested recommendation. Requires the recommender.*.get
   * IAM permission for the specified recommender.
   *
   * @generated from rpc google.cloud.recommender.v1.Recommender.GetRecommendation
   */
  getRecommendation: {
    methodKind: "unary";
    input: typeof GetRecommendationRequestSchema;
    output: typeof RecommendationSchema;
  },
  /**
   * Mark the Recommendation State as Dismissed. Users can use this method to
   * indicate to the Recommender API that an ACTIVE recommendation has to
   * be marked back as DISMISSED.
   *
   * MarkRecommendationDismissed can be applied to recommendations in ACTIVE
   * state.
   *
   * Requires the recommender.*.update IAM permission for the specified
   * recommender.
   *
   * @generated from rpc google.cloud.recommender.v1.Recommender.MarkRecommendationDismissed
   */
  markRecommendationDismissed: {
    methodKind: "unary";
    input: typeof MarkRecommendationDismissedRequestSchema;
    output: typeof RecommendationSchema;
  },
  /**
   * Marks the Recommendation State as Claimed. Users can use this method to
   * indicate to the Recommender API that they are starting to apply the
   * recommendation themselves. This stops the recommendation content from being
   * updated. Associated insights are frozen and placed in the ACCEPTED state.
   *
   * MarkRecommendationClaimed can be applied to recommendations in CLAIMED,
   * SUCCEEDED, FAILED, or ACTIVE state.
   *
   * Requires the recommender.*.update IAM permission for the specified
   * recommender.
   *
   * @generated from rpc google.cloud.recommender.v1.Recommender.MarkRecommendationClaimed
   */
  markRecommendationClaimed: {
    methodKind: "unary";
    input: typeof MarkRecommendationClaimedRequestSchema;
    output: typeof RecommendationSchema;
  },
  /**
   * Marks the Recommendation State as Succeeded. Users can use this method to
   * indicate to the Recommender API that they have applied the recommendation
   * themselves, and the operation was successful. This stops the recommendation
   * content from being updated. Associated insights are frozen and placed in
   * the ACCEPTED state.
   *
   * MarkRecommendationSucceeded can be applied to recommendations in ACTIVE,
   * CLAIMED, SUCCEEDED, or FAILED state.
   *
   * Requires the recommender.*.update IAM permission for the specified
   * recommender.
   *
   * @generated from rpc google.cloud.recommender.v1.Recommender.MarkRecommendationSucceeded
   */
  markRecommendationSucceeded: {
    methodKind: "unary";
    input: typeof MarkRecommendationSucceededRequestSchema;
    output: typeof RecommendationSchema;
  },
  /**
   * Marks the Recommendation State as Failed. Users can use this method to
   * indicate to the Recommender API that they have applied the recommendation
   * themselves, and the operation failed. This stops the recommendation content
   * from being updated. Associated insights are frozen and placed in the
   * ACCEPTED state.
   *
   * MarkRecommendationFailed can be applied to recommendations in ACTIVE,
   * CLAIMED, SUCCEEDED, or FAILED state.
   *
   * Requires the recommender.*.update IAM permission for the specified
   * recommender.
   *
   * @generated from rpc google.cloud.recommender.v1.Recommender.MarkRecommendationFailed
   */
  markRecommendationFailed: {
    methodKind: "unary";
    input: typeof MarkRecommendationFailedRequestSchema;
    output: typeof RecommendationSchema;
  },
  /**
   * Gets the requested Recommender Config. There is only one instance of the
   * config for each Recommender.
   *
   * @generated from rpc google.cloud.recommender.v1.Recommender.GetRecommenderConfig
   */
  getRecommenderConfig: {
    methodKind: "unary";
    input: typeof GetRecommenderConfigRequestSchema;
    output: typeof RecommenderConfigSchema;
  },
  /**
   * Updates a Recommender Config. This will create a new revision of the
   * config.
   *
   * @generated from rpc google.cloud.recommender.v1.Recommender.UpdateRecommenderConfig
   */
  updateRecommenderConfig: {
    methodKind: "unary";
    input: typeof UpdateRecommenderConfigRequestSchema;
    output: typeof RecommenderConfigSchema;
  },
  /**
   * Gets the requested InsightTypeConfig. There is only one instance of the
   * config for each InsightType.
   *
   * @generated from rpc google.cloud.recommender.v1.Recommender.GetInsightTypeConfig
   */
  getInsightTypeConfig: {
    methodKind: "unary";
    input: typeof GetInsightTypeConfigRequestSchema;
    output: typeof InsightTypeConfigSchema;
  },
  /**
   * Updates an InsightTypeConfig change. This will create a new revision of the
   * config.
   *
   * @generated from rpc google.cloud.recommender.v1.Recommender.UpdateInsightTypeConfig
   */
  updateInsightTypeConfig: {
    methodKind: "unary";
    input: typeof UpdateInsightTypeConfigRequestSchema;
    output: typeof InsightTypeConfigSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_recommender_v1_recommender_service, 0);

