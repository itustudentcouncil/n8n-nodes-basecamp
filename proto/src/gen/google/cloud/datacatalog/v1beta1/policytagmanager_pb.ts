// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/datacatalog/v1beta1/policytagmanager.proto (package google.cloud.datacatalog.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { ManagingSystem } from "./common_pb";
import { file_google_cloud_datacatalog_v1beta1_common } from "./common_pb";
import type { SystemTimestamps } from "./timestamps_pb";
import { file_google_cloud_datacatalog_v1beta1_timestamps } from "./timestamps_pb";
import type { GetIamPolicyRequestSchema, SetIamPolicyRequestSchema, TestIamPermissionsRequestSchema, TestIamPermissionsResponseSchema } from "../../../iam/v1/iam_policy_pb";
import { file_google_iam_v1_iam_policy } from "../../../iam/v1/iam_policy_pb";
import type { PolicySchema } from "../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../iam/v1/policy_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/datacatalog/v1beta1/policytagmanager.proto.
 */
export const file_google_cloud_datacatalog_v1beta1_policytagmanager: GenFile = /*@__PURE__*/
  fileDesc("Cjdnb29nbGUvY2xvdWQvZGF0YWNhdGFsb2cvdjFiZXRhMS9wb2xpY3l0YWdtYW5hZ2VyLnByb3RvEiBnb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMSL/BAoIVGF4b25vbXkSEQoEbmFtZRgBIAEoCUID4EEIEhkKDGRpc3BsYXlfbmFtZRgCIAEoCUID4EECEhgKC2Rlc2NyaXB0aW9uGAMgASgJQgPgQQESHQoQcG9saWN5X3RhZ19jb3VudBgEIAEoBUID4EEDElQKE3RheG9ub215X3RpbWVzdGFtcHMYBSABKAsyMi5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMS5TeXN0ZW1UaW1lc3RhbXBzQgPgQQMSWgoWYWN0aXZhdGVkX3BvbGljeV90eXBlcxgGIAMoDjI1Lmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExLlRheG9ub215LlBvbGljeVR5cGVCA+BBARJICgdzZXJ2aWNlGAcgASgLMjIuZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxYmV0YTEuVGF4b25vbXkuU2VydmljZUID4EEDGlsKB1NlcnZpY2USPgoEbmFtZRgBIAEoDjIwLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExLk1hbmFnaW5nU3lzdGVtEhAKCGlkZW50aXR5GAIgASgJIkoKClBvbGljeVR5cGUSGwoXUE9MSUNZX1RZUEVfVU5TUEVDSUZJRUQQABIfChtGSU5FX0dSQUlORURfQUNDRVNTX0NPTlRST0wQATpn6kFkCiNkYXRhY2F0YWxvZy5nb29nbGVhcGlzLmNvbS9UYXhvbm9teRI9cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L3RheG9ub21pZXMve3RheG9ub215fSKMAgoJUG9saWN5VGFnEhEKBG5hbWUYASABKAlCA+BBCBIZCgxkaXNwbGF5X25hbWUYAiABKAlCA+BBAhITCgtkZXNjcmlwdGlvbhgDIAEoCRIZChFwYXJlbnRfcG9saWN5X3RhZxgEIAEoCRIeChFjaGlsZF9wb2xpY3lfdGFncxgFIAMoCUID4EEDOoAB6kF9CiRkYXRhY2F0YWxvZy5nb29nbGVhcGlzLmNvbS9Qb2xpY3lUYWcSVXByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS90YXhvbm9taWVzL3t0YXhvbm9teX0vcG9saWN5VGFncy97cG9saWN5X3RhZ30ikgEKFUNyZWF0ZVRheG9ub215UmVxdWVzdBI7CgZwYXJlbnQYASABKAlCK+BBAvpBJRIjZGF0YWNhdGFsb2cuZ29vZ2xlYXBpcy5jb20vVGF4b25vbXkSPAoIdGF4b25vbXkYAiABKAsyKi5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMS5UYXhvbm9teSJSChVEZWxldGVUYXhvbm9teVJlcXVlc3QSOQoEbmFtZRgBIAEoCUIr4EEC+kElCiNkYXRhY2F0YWxvZy5nb29nbGVhcGlzLmNvbS9UYXhvbm9teSKGAQoVVXBkYXRlVGF4b25vbXlSZXF1ZXN0EjwKCHRheG9ub215GAEgASgLMiouZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxYmV0YTEuVGF4b25vbXkSLwoLdXBkYXRlX21hc2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrIosBChVMaXN0VGF4b25vbWllc1JlcXVlc3QSOwoGcGFyZW50GAEgASgJQivgQQL6QSUSI2RhdGFjYXRhbG9nLmdvb2dsZWFwaXMuY29tL1RheG9ub215EhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMgASgJEg4KBmZpbHRlchgEIAEoCSJxChZMaXN0VGF4b25vbWllc1Jlc3BvbnNlEj4KCnRheG9ub21pZXMYASADKAsyKi5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMS5UYXhvbm9teRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiTwoSR2V0VGF4b25vbXlSZXF1ZXN0EjkKBG5hbWUYASABKAlCK+BBAvpBJQojZGF0YWNhdGFsb2cuZ29vZ2xlYXBpcy5jb20vVGF4b25vbXkilwEKFkNyZWF0ZVBvbGljeVRhZ1JlcXVlc3QSPAoGcGFyZW50GAEgASgJQizgQQL6QSYSJGRhdGFjYXRhbG9nLmdvb2dsZWFwaXMuY29tL1BvbGljeVRhZxI/Cgpwb2xpY3lfdGFnGAIgASgLMisuZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxYmV0YTEuUG9saWN5VGFnIlQKFkRlbGV0ZVBvbGljeVRhZ1JlcXVlc3QSOgoEbmFtZRgBIAEoCUIs4EEC+kEmCiRkYXRhY2F0YWxvZy5nb29nbGVhcGlzLmNvbS9Qb2xpY3lUYWciigEKFlVwZGF0ZVBvbGljeVRhZ1JlcXVlc3QSPwoKcG9saWN5X3RhZxgBIAEoCzIrLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExLlBvbGljeVRhZxIvCgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2sifAoVTGlzdFBvbGljeVRhZ3NSZXF1ZXN0EjwKBnBhcmVudBgBIAEoCUIs4EEC+kEmEiRkYXRhY2F0YWxvZy5nb29nbGVhcGlzLmNvbS9Qb2xpY3lUYWcSEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkicwoWTGlzdFBvbGljeVRhZ3NSZXNwb25zZRJACgtwb2xpY3lfdGFncxgBIAMoCzIrLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExLlBvbGljeVRhZxIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiUQoTR2V0UG9saWN5VGFnUmVxdWVzdBI6CgRuYW1lGAEgASgJQizgQQL6QSYKJGRhdGFjYXRhbG9nLmdvb2dsZWFwaXMuY29tL1BvbGljeVRhZzLlFgoQUG9saWN5VGFnTWFuYWdlchLOAQoOQ3JlYXRlVGF4b25vbXkSNy5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMS5DcmVhdGVUYXhvbm9teVJlcXVlc3QaKi5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMS5UYXhvbm9teSJX2kEPcGFyZW50LHRheG9ub215gtPkkwI/Ogh0YXhvbm9teSIzL3YxYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS90YXhvbm9taWVzEqUBCg5EZWxldGVUYXhvbm9teRI3Lmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExLkRlbGV0ZVRheG9ub215UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSJC2kEEbmFtZYLT5JMCNSozL3YxYmV0YTEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi90YXhvbm9taWVzLyp9EtABCg5VcGRhdGVUYXhvbm9teRI3Lmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExLlVwZGF0ZVRheG9ub215UmVxdWVzdBoqLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExLlRheG9ub215IlnaQQh0YXhvbm9teYLT5JMCSDoIdGF4b25vbXkyPC92MWJldGExL3t0YXhvbm9teS5uYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovdGF4b25vbWllcy8qfRLJAQoOTGlzdFRheG9ub21pZXMSNy5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMS5MaXN0VGF4b25vbWllc1JlcXVlc3QaOC5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMS5MaXN0VGF4b25vbWllc1Jlc3BvbnNlIkTaQQZwYXJlbnSC0+STAjUSMy92MWJldGExL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vdGF4b25vbWllcxKzAQoLR2V0VGF4b25vbXkSNC5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMS5HZXRUYXhvbm9teVJlcXVlc3QaKi5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMS5UYXhvbm9teSJC2kEEbmFtZYLT5JMCNRIzL3YxYmV0YTEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi90YXhvbm9taWVzLyp9EuIBCg9DcmVhdGVQb2xpY3lUYWcSOC5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMS5DcmVhdGVQb2xpY3lUYWdSZXF1ZXN0GisuZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxYmV0YTEuUG9saWN5VGFnImjaQRFwYXJlbnQscG9saWN5X3RhZ4LT5JMCTjoKcG9saWN5X3RhZyJAL3YxYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3RheG9ub21pZXMvKn0vcG9saWN5VGFncxK0AQoPRGVsZXRlUG9saWN5VGFnEjguZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxYmV0YTEuRGVsZXRlUG9saWN5VGFnUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSJP2kEEbmFtZYLT5JMCQipAL3YxYmV0YTEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi90YXhvbm9taWVzLyovcG9saWN5VGFncy8qfRLmAQoPVXBkYXRlUG9saWN5VGFnEjguZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxYmV0YTEuVXBkYXRlUG9saWN5VGFnUmVxdWVzdBorLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExLlBvbGljeVRhZyJs2kEKcG9saWN5X3RhZ4LT5JMCWToKcG9saWN5X3RhZzJLL3YxYmV0YTEve3BvbGljeV90YWcubmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3RheG9ub21pZXMvKi9wb2xpY3lUYWdzLyp9EtYBCg5MaXN0UG9saWN5VGFncxI3Lmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExLkxpc3RQb2xpY3lUYWdzUmVxdWVzdBo4Lmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExLkxpc3RQb2xpY3lUYWdzUmVzcG9uc2UiUdpBBnBhcmVudILT5JMCQhJAL3YxYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3RheG9ub21pZXMvKn0vcG9saWN5VGFncxLDAQoMR2V0UG9saWN5VGFnEjUuZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxYmV0YTEuR2V0UG9saWN5VGFnUmVxdWVzdBorLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExLlBvbGljeVRhZyJP2kEEbmFtZYLT5JMCQhJAL3YxYmV0YTEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi90YXhvbm9taWVzLyovcG9saWN5VGFncy8qfRL0AQoMR2V0SWFtUG9saWN5EiIuZ29vZ2xlLmlhbS52MS5HZXRJYW1Qb2xpY3lSZXF1ZXN0GhUuZ29vZ2xlLmlhbS52MS5Qb2xpY3kiqAGC0+STAqEBOgEqWlY6ASoiUS92MWJldGExL3tyZXNvdXJjZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3RheG9ub21pZXMvKi9wb2xpY3lUYWdzLyp9OmdldElhbVBvbGljeSJEL3YxYmV0YTEve3Jlc291cmNlPXByb2plY3RzLyovbG9jYXRpb25zLyovdGF4b25vbWllcy8qfTpnZXRJYW1Qb2xpY3kS9AEKDFNldElhbVBvbGljeRIiLmdvb2dsZS5pYW0udjEuU2V0SWFtUG9saWN5UmVxdWVzdBoVLmdvb2dsZS5pYW0udjEuUG9saWN5IqgBgtPkkwKhAToBKlpWOgEqIlEvdjFiZXRhMS97cmVzb3VyY2U9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi90YXhvbm9taWVzLyovcG9saWN5VGFncy8qfTpzZXRJYW1Qb2xpY3kiRC92MWJldGExL3tyZXNvdXJjZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3RheG9ub21pZXMvKn06c2V0SWFtUG9saWN5EqACChJUZXN0SWFtUGVybWlzc2lvbnMSKC5nb29nbGUuaWFtLnYxLlRlc3RJYW1QZXJtaXNzaW9uc1JlcXVlc3QaKS5nb29nbGUuaWFtLnYxLlRlc3RJYW1QZXJtaXNzaW9uc1Jlc3BvbnNlIrQBgtPkkwKtAToBKlpcOgEqIlcvdjFiZXRhMS97cmVzb3VyY2U9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi90YXhvbm9taWVzLyovcG9saWN5VGFncy8qfTp0ZXN0SWFtUGVybWlzc2lvbnMiSi92MWJldGExL3tyZXNvdXJjZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3RheG9ub21pZXMvKn06dGVzdElhbVBlcm1pc3Npb25zGk7KQRpkYXRhY2F0YWxvZy5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1C9gEKJGNvbS5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMUIVUG9saWN5VGFnTWFuYWdlclByb3RvUAFaRmNsb3VkLmdvb2dsZS5jb20vZ28vZGF0YWNhdGFsb2cvYXBpdjFiZXRhMS9kYXRhY2F0YWxvZ3BiO2RhdGFjYXRhbG9ncGL4AQGqAiBHb29nbGUuQ2xvdWQuRGF0YUNhdGFsb2cuVjFCZXRhMcoCIEdvb2dsZVxDbG91ZFxEYXRhQ2F0YWxvZ1xWMWJldGEx6gIjR29vZ2xlOjpDbG91ZDo6RGF0YUNhdGFsb2c6OlYxYmV0YTFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_datacatalog_v1beta1_common, file_google_cloud_datacatalog_v1beta1_timestamps, file_google_iam_v1_iam_policy, file_google_iam_v1_policy, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * A taxonomy is a collection of policy tags that classify data along a common
 * axis. For instance a data *sensitivity* taxonomy could contain policy tags
 * denoting PII such as age, zipcode, and SSN. A data *origin* taxonomy could
 * contain policy tags to distinguish user data, employee data, partner data,
 * public data.
 *
 * @generated from message google.cloud.datacatalog.v1beta1.Taxonomy
 */
export type Taxonomy = Message<"google.cloud.datacatalog.v1beta1.Taxonomy"> & {
  /**
   * Identifier. Resource name of this taxonomy, whose format is:
   * "projects/{project_number}/locations/{location_id}/taxonomies/{id}".
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. User defined name of this taxonomy. It must: contain only unicode
   * letters, numbers, underscores, dashes and spaces; not start or end with
   * spaces; and be at most 200 bytes long when encoded in UTF-8.
   *
   * The taxonomy display name must be unique within an organization.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Optional. Description of this taxonomy. It must: contain only unicode
   * characters, tabs, newlines, carriage returns and page breaks; and be at
   * most 2000 bytes long when encoded in UTF-8. If not set, defaults to an
   * empty description.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Output only. Number of policy tags contained in this taxonomy.
   *
   * @generated from field: int32 policy_tag_count = 4;
   */
  policyTagCount: number;

  /**
   * Output only. Timestamps about this taxonomy. Only create_time and
   * update_time are used.
   *
   * @generated from field: google.cloud.datacatalog.v1beta1.SystemTimestamps taxonomy_timestamps = 5;
   */
  taxonomyTimestamps?: SystemTimestamps;

  /**
   * Optional. A list of policy types that are activated for this taxonomy. If
   * not set, defaults to an empty list.
   *
   * @generated from field: repeated google.cloud.datacatalog.v1beta1.Taxonomy.PolicyType activated_policy_types = 6;
   */
  activatedPolicyTypes: Taxonomy_PolicyType[];

  /**
   * Output only. Identity of the service which owns the Taxonomy. This field is
   * only populated when the taxonomy is created by a Google Cloud service.
   * Currently only 'DATAPLEX' is supported.
   *
   * @generated from field: google.cloud.datacatalog.v1beta1.Taxonomy.Service service = 7;
   */
  service?: Taxonomy_Service;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.Taxonomy.
 * Use `create(TaxonomySchema)` to create a new message.
 */
export const TaxonomySchema: GenMessage<Taxonomy> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 0);

/**
 * The source system of the Taxonomy.
 *
 * @generated from message google.cloud.datacatalog.v1beta1.Taxonomy.Service
 */
export type Taxonomy_Service = Message<"google.cloud.datacatalog.v1beta1.Taxonomy.Service"> & {
  /**
   * The Google Cloud service name.
   *
   * @generated from field: google.cloud.datacatalog.v1beta1.ManagingSystem name = 1;
   */
  name: ManagingSystem;

  /**
   * The service agent for the service.
   *
   * @generated from field: string identity = 2;
   */
  identity: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.Taxonomy.Service.
 * Use `create(Taxonomy_ServiceSchema)` to create a new message.
 */
export const Taxonomy_ServiceSchema: GenMessage<Taxonomy_Service> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 0, 0);

/**
 * Defines policy types where policy tag can be used for.
 *
 * @generated from enum google.cloud.datacatalog.v1beta1.Taxonomy.PolicyType
 */
export enum Taxonomy_PolicyType {
  /**
   * Unspecified policy type.
   *
   * @generated from enum value: POLICY_TYPE_UNSPECIFIED = 0;
   */
  POLICY_TYPE_UNSPECIFIED = 0,

  /**
   * Fine grained access control policy, which enables access control on
   * tagged resources.
   *
   * @generated from enum value: FINE_GRAINED_ACCESS_CONTROL = 1;
   */
  FINE_GRAINED_ACCESS_CONTROL = 1,
}

/**
 * Describes the enum google.cloud.datacatalog.v1beta1.Taxonomy.PolicyType.
 */
export const Taxonomy_PolicyTypeSchema: GenEnum<Taxonomy_PolicyType> = /*@__PURE__*/
  enumDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 0, 0);

/**
 * Denotes one policy tag in a taxonomy (e.g. ssn). Policy Tags can be defined
 * in a hierarchy. For example, consider the following hierarchy:
 * Geolocation -&gt; (LatLong, City, ZipCode). PolicyTag "Geolocation"
 * contains three child policy tags: "LatLong", "City", and "ZipCode".
 *
 * @generated from message google.cloud.datacatalog.v1beta1.PolicyTag
 */
export type PolicyTag = Message<"google.cloud.datacatalog.v1beta1.PolicyTag"> & {
  /**
   * Identifier. Resource name of this policy tag, whose format is:
   * "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. User defined name of this policy tag. It must: be unique within
   * the parent taxonomy; contain only unicode letters, numbers, underscores,
   * dashes and spaces; not start or end with spaces; and be at most 200 bytes
   * long when encoded in UTF-8.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Description of this policy tag. It must: contain only unicode characters,
   * tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes
   * long when encoded in UTF-8. If not set, defaults to an empty description.
   * If not set, defaults to an empty description.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Resource name of this policy tag's parent policy tag (e.g. for the
   * "LatLong" policy tag in the example above, this field contains the
   * resource name of the "Geolocation" policy tag). If empty, it means this
   * policy tag is a top level policy tag (e.g. this field is empty for the
   * "Geolocation" policy tag in the example above). If not set, defaults to an
   * empty string.
   *
   * @generated from field: string parent_policy_tag = 4;
   */
  parentPolicyTag: string;

  /**
   * Output only. Resource names of child policy tags of this policy tag.
   *
   * @generated from field: repeated string child_policy_tags = 5;
   */
  childPolicyTags: string[];
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.PolicyTag.
 * Use `create(PolicyTagSchema)` to create a new message.
 */
export const PolicyTagSchema: GenMessage<PolicyTag> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 1);

/**
 * Request message for
 * [CreateTaxonomy][google.cloud.datacatalog.v1beta1.PolicyTagManager.CreateTaxonomy].
 *
 * @generated from message google.cloud.datacatalog.v1beta1.CreateTaxonomyRequest
 */
export type CreateTaxonomyRequest = Message<"google.cloud.datacatalog.v1beta1.CreateTaxonomyRequest"> & {
  /**
   * Required. Resource name of the project that the taxonomy will belong to.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The taxonomy to be created.
   *
   * @generated from field: google.cloud.datacatalog.v1beta1.Taxonomy taxonomy = 2;
   */
  taxonomy?: Taxonomy;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.CreateTaxonomyRequest.
 * Use `create(CreateTaxonomyRequestSchema)` to create a new message.
 */
export const CreateTaxonomyRequestSchema: GenMessage<CreateTaxonomyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 2);

/**
 * Request message for
 * [DeleteTaxonomy][google.cloud.datacatalog.v1beta1.PolicyTagManager.DeleteTaxonomy].
 *
 * @generated from message google.cloud.datacatalog.v1beta1.DeleteTaxonomyRequest
 */
export type DeleteTaxonomyRequest = Message<"google.cloud.datacatalog.v1beta1.DeleteTaxonomyRequest"> & {
  /**
   * Required. Resource name of the taxonomy to be deleted. All policy tags in
   * this taxonomy will also be deleted.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.DeleteTaxonomyRequest.
 * Use `create(DeleteTaxonomyRequestSchema)` to create a new message.
 */
export const DeleteTaxonomyRequestSchema: GenMessage<DeleteTaxonomyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 3);

/**
 * Request message for
 * [UpdateTaxonomy][google.cloud.datacatalog.v1beta1.PolicyTagManager.UpdateTaxonomy].
 *
 * @generated from message google.cloud.datacatalog.v1beta1.UpdateTaxonomyRequest
 */
export type UpdateTaxonomyRequest = Message<"google.cloud.datacatalog.v1beta1.UpdateTaxonomyRequest"> & {
  /**
   * The taxonomy to update. Only description, display_name, and activated
   * policy types can be updated.
   *
   * @generated from field: google.cloud.datacatalog.v1beta1.Taxonomy taxonomy = 1;
   */
  taxonomy?: Taxonomy;

  /**
   * The update mask applies to the resource. For the `FieldMask` definition,
   * see
   * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
   * If not set, defaults to all of the fields that are allowed to update.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.UpdateTaxonomyRequest.
 * Use `create(UpdateTaxonomyRequestSchema)` to create a new message.
 */
export const UpdateTaxonomyRequestSchema: GenMessage<UpdateTaxonomyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 4);

/**
 * Request message for
 * [ListTaxonomies][google.cloud.datacatalog.v1beta1.PolicyTagManager.ListTaxonomies].
 *
 * @generated from message google.cloud.datacatalog.v1beta1.ListTaxonomiesRequest
 */
export type ListTaxonomiesRequest = Message<"google.cloud.datacatalog.v1beta1.ListTaxonomiesRequest"> & {
  /**
   * Required. Resource name of the project to list the taxonomies of.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return. Must be a value between 1 and 1000.
   * If not set, defaults to 50.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous list request, if any. If
   * not set, defaults to an empty string.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Supported field for filter is 'service' and value is 'dataplex'.
   * Eg: service=dataplex.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.ListTaxonomiesRequest.
 * Use `create(ListTaxonomiesRequestSchema)` to create a new message.
 */
export const ListTaxonomiesRequestSchema: GenMessage<ListTaxonomiesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 5);

/**
 * Response message for
 * [ListTaxonomies][google.cloud.datacatalog.v1beta1.PolicyTagManager.ListTaxonomies].
 *
 * @generated from message google.cloud.datacatalog.v1beta1.ListTaxonomiesResponse
 */
export type ListTaxonomiesResponse = Message<"google.cloud.datacatalog.v1beta1.ListTaxonomiesResponse"> & {
  /**
   * Taxonomies that the project contains.
   *
   * @generated from field: repeated google.cloud.datacatalog.v1beta1.Taxonomy taxonomies = 1;
   */
  taxonomies: Taxonomy[];

  /**
   * Token used to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.ListTaxonomiesResponse.
 * Use `create(ListTaxonomiesResponseSchema)` to create a new message.
 */
export const ListTaxonomiesResponseSchema: GenMessage<ListTaxonomiesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 6);

/**
 * Request message for
 * [GetTaxonomy][google.cloud.datacatalog.v1beta1.PolicyTagManager.GetTaxonomy].
 *
 * @generated from message google.cloud.datacatalog.v1beta1.GetTaxonomyRequest
 */
export type GetTaxonomyRequest = Message<"google.cloud.datacatalog.v1beta1.GetTaxonomyRequest"> & {
  /**
   * Required. Resource name of the requested taxonomy.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.GetTaxonomyRequest.
 * Use `create(GetTaxonomyRequestSchema)` to create a new message.
 */
export const GetTaxonomyRequestSchema: GenMessage<GetTaxonomyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 7);

/**
 * Request message for
 * [CreatePolicyTag][google.cloud.datacatalog.v1beta1.PolicyTagManager.CreatePolicyTag].
 *
 * @generated from message google.cloud.datacatalog.v1beta1.CreatePolicyTagRequest
 */
export type CreatePolicyTagRequest = Message<"google.cloud.datacatalog.v1beta1.CreatePolicyTagRequest"> & {
  /**
   * Required. Resource name of the taxonomy that the policy tag will belong to.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The policy tag to be created.
   *
   * @generated from field: google.cloud.datacatalog.v1beta1.PolicyTag policy_tag = 2;
   */
  policyTag?: PolicyTag;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.CreatePolicyTagRequest.
 * Use `create(CreatePolicyTagRequestSchema)` to create a new message.
 */
export const CreatePolicyTagRequestSchema: GenMessage<CreatePolicyTagRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 8);

/**
 * Request message for
 * [DeletePolicyTag][google.cloud.datacatalog.v1beta1.PolicyTagManager.DeletePolicyTag].
 *
 * @generated from message google.cloud.datacatalog.v1beta1.DeletePolicyTagRequest
 */
export type DeletePolicyTagRequest = Message<"google.cloud.datacatalog.v1beta1.DeletePolicyTagRequest"> & {
  /**
   * Required. Resource name of the policy tag to be deleted. All of its
   * descendant policy tags will also be deleted.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.DeletePolicyTagRequest.
 * Use `create(DeletePolicyTagRequestSchema)` to create a new message.
 */
export const DeletePolicyTagRequestSchema: GenMessage<DeletePolicyTagRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 9);

/**
 * Request message for
 * [UpdatePolicyTag][google.cloud.datacatalog.v1beta1.PolicyTagManager.UpdatePolicyTag].
 *
 * @generated from message google.cloud.datacatalog.v1beta1.UpdatePolicyTagRequest
 */
export type UpdatePolicyTagRequest = Message<"google.cloud.datacatalog.v1beta1.UpdatePolicyTagRequest"> & {
  /**
   * The policy tag to update. Only the description, display_name, and
   * parent_policy_tag fields can be updated.
   *
   * @generated from field: google.cloud.datacatalog.v1beta1.PolicyTag policy_tag = 1;
   */
  policyTag?: PolicyTag;

  /**
   * The update mask applies to the resource. Only display_name, description and
   * parent_policy_tag can be updated and thus can be listed in the mask. If
   * update_mask is not provided, all allowed fields (i.e. display_name,
   * description and parent) will be updated. For more information including the
   * `FieldMask` definition, see
   * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
   * If not set, defaults to all of the fields that are allowed to update.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.UpdatePolicyTagRequest.
 * Use `create(UpdatePolicyTagRequestSchema)` to create a new message.
 */
export const UpdatePolicyTagRequestSchema: GenMessage<UpdatePolicyTagRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 10);

/**
 * Request message for
 * [ListPolicyTags][google.cloud.datacatalog.v1beta1.PolicyTagManager.ListPolicyTags].
 *
 * @generated from message google.cloud.datacatalog.v1beta1.ListPolicyTagsRequest
 */
export type ListPolicyTagsRequest = Message<"google.cloud.datacatalog.v1beta1.ListPolicyTagsRequest"> & {
  /**
   * Required. Resource name of the taxonomy to list the policy tags of.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return. Must be a value between 1 and 1000.
   * If not set, defaults to 50.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The next_page_token value returned from a previous List request, if any. If
   * not set, defaults to an empty string.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.ListPolicyTagsRequest.
 * Use `create(ListPolicyTagsRequestSchema)` to create a new message.
 */
export const ListPolicyTagsRequestSchema: GenMessage<ListPolicyTagsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 11);

/**
 * Response message for
 * [ListPolicyTags][google.cloud.datacatalog.v1beta1.PolicyTagManager.ListPolicyTags].
 *
 * @generated from message google.cloud.datacatalog.v1beta1.ListPolicyTagsResponse
 */
export type ListPolicyTagsResponse = Message<"google.cloud.datacatalog.v1beta1.ListPolicyTagsResponse"> & {
  /**
   * The policy tags that are in the requested taxonomy.
   *
   * @generated from field: repeated google.cloud.datacatalog.v1beta1.PolicyTag policy_tags = 1;
   */
  policyTags: PolicyTag[];

  /**
   * Token used to retrieve the next page of results, or empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.ListPolicyTagsResponse.
 * Use `create(ListPolicyTagsResponseSchema)` to create a new message.
 */
export const ListPolicyTagsResponseSchema: GenMessage<ListPolicyTagsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 12);

/**
 * Request message for
 * [GetPolicyTag][google.cloud.datacatalog.v1beta1.PolicyTagManager.GetPolicyTag].
 *
 * @generated from message google.cloud.datacatalog.v1beta1.GetPolicyTagRequest
 */
export type GetPolicyTagRequest = Message<"google.cloud.datacatalog.v1beta1.GetPolicyTagRequest"> & {
  /**
   * Required. Resource name of the requested policy tag.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.GetPolicyTagRequest.
 * Use `create(GetPolicyTagRequestSchema)` to create a new message.
 */
export const GetPolicyTagRequestSchema: GenMessage<GetPolicyTagRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 13);

/**
 * The policy tag manager API service allows clients to manage their taxonomies
 * and policy tags.
 *
 * @generated from service google.cloud.datacatalog.v1beta1.PolicyTagManager
 */
export const PolicyTagManager: GenService<{
  /**
   * Creates a taxonomy in the specified project.
   *
   * @generated from rpc google.cloud.datacatalog.v1beta1.PolicyTagManager.CreateTaxonomy
   */
  createTaxonomy: {
    methodKind: "unary";
    input: typeof CreateTaxonomyRequestSchema;
    output: typeof TaxonomySchema;
  },
  /**
   * Deletes a taxonomy. This operation will also delete all
   * policy tags in this taxonomy along with their associated policies.
   *
   * @generated from rpc google.cloud.datacatalog.v1beta1.PolicyTagManager.DeleteTaxonomy
   */
  deleteTaxonomy: {
    methodKind: "unary";
    input: typeof DeleteTaxonomyRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Updates a taxonomy.
   *
   * @generated from rpc google.cloud.datacatalog.v1beta1.PolicyTagManager.UpdateTaxonomy
   */
  updateTaxonomy: {
    methodKind: "unary";
    input: typeof UpdateTaxonomyRequestSchema;
    output: typeof TaxonomySchema;
  },
  /**
   * Lists all taxonomies in a project in a particular location that the caller
   * has permission to view.
   *
   * @generated from rpc google.cloud.datacatalog.v1beta1.PolicyTagManager.ListTaxonomies
   */
  listTaxonomies: {
    methodKind: "unary";
    input: typeof ListTaxonomiesRequestSchema;
    output: typeof ListTaxonomiesResponseSchema;
  },
  /**
   * Gets a taxonomy.
   *
   * @generated from rpc google.cloud.datacatalog.v1beta1.PolicyTagManager.GetTaxonomy
   */
  getTaxonomy: {
    methodKind: "unary";
    input: typeof GetTaxonomyRequestSchema;
    output: typeof TaxonomySchema;
  },
  /**
   * Creates a policy tag in the specified taxonomy.
   *
   * @generated from rpc google.cloud.datacatalog.v1beta1.PolicyTagManager.CreatePolicyTag
   */
  createPolicyTag: {
    methodKind: "unary";
    input: typeof CreatePolicyTagRequestSchema;
    output: typeof PolicyTagSchema;
  },
  /**
   * Deletes a policy tag. Also deletes all of its descendant policy tags.
   *
   * @generated from rpc google.cloud.datacatalog.v1beta1.PolicyTagManager.DeletePolicyTag
   */
  deletePolicyTag: {
    methodKind: "unary";
    input: typeof DeletePolicyTagRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Updates a policy tag.
   *
   * @generated from rpc google.cloud.datacatalog.v1beta1.PolicyTagManager.UpdatePolicyTag
   */
  updatePolicyTag: {
    methodKind: "unary";
    input: typeof UpdatePolicyTagRequestSchema;
    output: typeof PolicyTagSchema;
  },
  /**
   * Lists all policy tags in a taxonomy.
   *
   * @generated from rpc google.cloud.datacatalog.v1beta1.PolicyTagManager.ListPolicyTags
   */
  listPolicyTags: {
    methodKind: "unary";
    input: typeof ListPolicyTagsRequestSchema;
    output: typeof ListPolicyTagsResponseSchema;
  },
  /**
   * Gets a policy tag.
   *
   * @generated from rpc google.cloud.datacatalog.v1beta1.PolicyTagManager.GetPolicyTag
   */
  getPolicyTag: {
    methodKind: "unary";
    input: typeof GetPolicyTagRequestSchema;
    output: typeof PolicyTagSchema;
  },
  /**
   * Gets the IAM policy for a taxonomy or a policy tag.
   *
   * @generated from rpc google.cloud.datacatalog.v1beta1.PolicyTagManager.GetIamPolicy
   */
  getIamPolicy: {
    methodKind: "unary";
    input: typeof GetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Sets the IAM policy for a taxonomy or a policy tag.
   *
   * @generated from rpc google.cloud.datacatalog.v1beta1.PolicyTagManager.SetIamPolicy
   */
  setIamPolicy: {
    methodKind: "unary";
    input: typeof SetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Returns the permissions that a caller has on the specified taxonomy or
   * policy tag.
   *
   * @generated from rpc google.cloud.datacatalog.v1beta1.PolicyTagManager.TestIamPermissions
   */
  testIamPermissions: {
    methodKind: "unary";
    input: typeof TestIamPermissionsRequestSchema;
    output: typeof TestIamPermissionsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_datacatalog_v1beta1_policytagmanager, 0);

