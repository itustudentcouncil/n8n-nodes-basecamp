// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/datacatalog/v1beta1/table_spec.proto (package google.cloud.datacatalog.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/datacatalog/v1beta1/table_spec.proto.
 */
export const file_google_cloud_datacatalog_v1beta1_table_spec: GenFile = /*@__PURE__*/
  fileDesc("CjFnb29nbGUvY2xvdWQvZGF0YWNhdGFsb2cvdjFiZXRhMS90YWJsZV9zcGVjLnByb3RvEiBnb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMSL3AQoRQmlnUXVlcnlUYWJsZVNwZWMSUQoRdGFibGVfc291cmNlX3R5cGUYASABKA4yMS5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMS5UYWJsZVNvdXJjZVR5cGVCA+BBAxI/Cgl2aWV3X3NwZWMYAiABKAsyKi5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMS5WaWV3U3BlY0gAEkEKCnRhYmxlX3NwZWMYAyABKAsyKy5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMS5UYWJsZVNwZWNIAEILCgl0eXBlX3NwZWMiIwoIVmlld1NwZWMSFwoKdmlld19xdWVyeRgBIAEoCUID4EEDIkwKCVRhYmxlU3BlYxI/Cg1ncm91cGVkX2VudHJ5GAEgASgJQijgQQP6QSIKIGRhdGFjYXRhbG9nLmdvb2dsZWFwaXMuY29tL0VudHJ5IokBChdCaWdRdWVyeURhdGVTaGFyZGVkU3BlYxI5CgdkYXRhc2V0GAEgASgJQijgQQP6QSIKIGRhdGFjYXRhbG9nLmdvb2dsZWFwaXMuY29tL0VudHJ5EhkKDHRhYmxlX3ByZWZpeBgCIAEoCUID4EEDEhgKC3NoYXJkX2NvdW50GAMgASgDQgPgQQMqewoPVGFibGVTb3VyY2VUeXBlEiEKHVRBQkxFX1NPVVJDRV9UWVBFX1VOU1BFQ0lGSUVEEAASEQoNQklHUVVFUllfVklFVxACEhIKDkJJR1FVRVJZX1RBQkxFEAUSHgoaQklHUVVFUllfTUFURVJJQUxJWkVEX1ZJRVcQB0LfAQokY29tLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExUAFaRmNsb3VkLmdvb2dsZS5jb20vZ28vZGF0YWNhdGFsb2cvYXBpdjFiZXRhMS9kYXRhY2F0YWxvZ3BiO2RhdGFjYXRhbG9ncGL4AQGqAiBHb29nbGUuQ2xvdWQuRGF0YUNhdGFsb2cuVjFCZXRhMcoCIEdvb2dsZVxDbG91ZFxEYXRhQ2F0YWxvZ1xWMWJldGEx6gIjR29vZ2xlOjpDbG91ZDo6RGF0YUNhdGFsb2c6OlYxYmV0YTFiBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource]);

/**
 * Describes a BigQuery table.
 *
 * @generated from message google.cloud.datacatalog.v1beta1.BigQueryTableSpec
 */
export type BigQueryTableSpec = Message<"google.cloud.datacatalog.v1beta1.BigQueryTableSpec"> & {
  /**
   * Output only. The table source type.
   *
   * @generated from field: google.cloud.datacatalog.v1beta1.TableSourceType table_source_type = 1;
   */
  tableSourceType: TableSourceType;

  /**
   * Output only.
   *
   * @generated from oneof google.cloud.datacatalog.v1beta1.BigQueryTableSpec.type_spec
   */
  typeSpec: {
    /**
     * Table view specification. This field should only be populated if
     * `table_source_type` is `BIGQUERY_VIEW`.
     *
     * @generated from field: google.cloud.datacatalog.v1beta1.ViewSpec view_spec = 2;
     */
    value: ViewSpec;
    case: "viewSpec";
  } | {
    /**
     * Spec of a BigQuery table. This field should only be populated if
     * `table_source_type` is `BIGQUERY_TABLE`.
     *
     * @generated from field: google.cloud.datacatalog.v1beta1.TableSpec table_spec = 3;
     */
    value: TableSpec;
    case: "tableSpec";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.BigQueryTableSpec.
 * Use `create(BigQueryTableSpecSchema)` to create a new message.
 */
export const BigQueryTableSpecSchema: GenMessage<BigQueryTableSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_table_spec, 0);

/**
 * Table view specification.
 *
 * @generated from message google.cloud.datacatalog.v1beta1.ViewSpec
 */
export type ViewSpec = Message<"google.cloud.datacatalog.v1beta1.ViewSpec"> & {
  /**
   * Output only. The query that defines the table view.
   *
   * @generated from field: string view_query = 1;
   */
  viewQuery: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.ViewSpec.
 * Use `create(ViewSpecSchema)` to create a new message.
 */
export const ViewSpecSchema: GenMessage<ViewSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_table_spec, 1);

/**
 * Normal BigQuery table spec.
 *
 * @generated from message google.cloud.datacatalog.v1beta1.TableSpec
 */
export type TableSpec = Message<"google.cloud.datacatalog.v1beta1.TableSpec"> & {
  /**
   * Output only. If the table is a dated shard, i.e., with name pattern
   * `[prefix]YYYYMMDD`, `grouped_entry` is the Data Catalog resource name of
   * the date sharded grouped entry, for example,
   * `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`.
   * Otherwise, `grouped_entry` is empty.
   *
   * @generated from field: string grouped_entry = 1;
   */
  groupedEntry: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.TableSpec.
 * Use `create(TableSpecSchema)` to create a new message.
 */
export const TableSpecSchema: GenMessage<TableSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_table_spec, 2);

/**
 * Spec for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`.
 * Context:
 * https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding
 *
 * @generated from message google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec
 */
export type BigQueryDateShardedSpec = Message<"google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec"> & {
  /**
   * Output only. The Data Catalog resource name of the dataset entry the
   * current table belongs to, for example,
   * `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`.
   *
   * @generated from field: string dataset = 1;
   */
  dataset: string;

  /**
   * Output only. The table name prefix of the shards. The name of any given
   * shard is
   * `[table_prefix]YYYYMMDD`, for example, for shard `MyTable20180101`, the
   * `table_prefix` is `MyTable`.
   *
   * @generated from field: string table_prefix = 2;
   */
  tablePrefix: string;

  /**
   * Output only. Total number of shards.
   *
   * @generated from field: int64 shard_count = 3;
   */
  shardCount: bigint;
};

/**
 * Describes the message google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.
 * Use `create(BigQueryDateShardedSpecSchema)` to create a new message.
 */
export const BigQueryDateShardedSpecSchema: GenMessage<BigQueryDateShardedSpec> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1beta1_table_spec, 3);

/**
 * Table source type.
 *
 * @generated from enum google.cloud.datacatalog.v1beta1.TableSourceType
 */
export enum TableSourceType {
  /**
   * Default unknown type.
   *
   * @generated from enum value: TABLE_SOURCE_TYPE_UNSPECIFIED = 0;
   */
  TABLE_SOURCE_TYPE_UNSPECIFIED = 0,

  /**
   * Table view.
   *
   * @generated from enum value: BIGQUERY_VIEW = 2;
   */
  BIGQUERY_VIEW = 2,

  /**
   * BigQuery native table.
   *
   * @generated from enum value: BIGQUERY_TABLE = 5;
   */
  BIGQUERY_TABLE = 5,

  /**
   * BigQuery materialized view.
   *
   * @generated from enum value: BIGQUERY_MATERIALIZED_VIEW = 7;
   */
  BIGQUERY_MATERIALIZED_VIEW = 7,
}

/**
 * Describes the enum google.cloud.datacatalog.v1beta1.TableSourceType.
 */
export const TableSourceTypeSchema: GenEnum<TableSourceType> = /*@__PURE__*/
  enumDesc(file_google_cloud_datacatalog_v1beta1_table_spec, 0);

