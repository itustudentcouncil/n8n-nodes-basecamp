// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/datacatalog/v1/physical_schema.proto (package google.cloud.datacatalog.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/datacatalog/v1/physical_schema.proto.
 */
export const file_google_cloud_datacatalog_v1_physical_schema: GenFile = /*@__PURE__*/
  fileDesc("CjFnb29nbGUvY2xvdWQvZGF0YWNhdGFsb2cvdjEvcGh5c2ljYWxfc2NoZW1hLnByb3RvEhtnb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjEi3QQKDlBoeXNpY2FsU2NoZW1hEkYKBGF2cm8YASABKAsyNi5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjEuUGh5c2ljYWxTY2hlbWEuQXZyb1NjaGVtYUgAEkoKBnRocmlmdBgCIAEoCzI4Lmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MS5QaHlzaWNhbFNjaGVtYS5UaHJpZnRTY2hlbWFIABJOCghwcm90b2J1ZhgDIAEoCzI6Lmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MS5QaHlzaWNhbFNjaGVtYS5Qcm90b2J1ZlNjaGVtYUgAEkwKB3BhcnF1ZXQYBCABKAsyOS5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjEuUGh5c2ljYWxTY2hlbWEuUGFycXVldFNjaGVtYUgAEkQKA29yYxgFIAEoCzI1Lmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MS5QaHlzaWNhbFNjaGVtYS5PcmNTY2hlbWFIABJECgNjc3YYBiABKAsyNS5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjEuUGh5c2ljYWxTY2hlbWEuQ3N2U2NoZW1hSAAaGgoKQXZyb1NjaGVtYRIMCgR0ZXh0GAEgASgJGhwKDFRocmlmdFNjaGVtYRIMCgR0ZXh0GAEgASgJGh4KDlByb3RvYnVmU2NoZW1hEgwKBHRleHQYASABKAkaDwoNUGFycXVldFNjaGVtYRoLCglPcmNTY2hlbWEaCwoJQ3N2U2NoZW1hQggKBnNjaGVtYULbAQofY29tLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MUITUGh5c2ljYWxTY2hlbWFQcm90b1ABWkFjbG91ZC5nb29nbGUuY29tL2dvL2RhdGFjYXRhbG9nL2FwaXYxL2RhdGFjYXRhbG9ncGI7ZGF0YWNhdGFsb2dwYvgBAaoCG0dvb2dsZS5DbG91ZC5EYXRhQ2F0YWxvZy5WMcoCG0dvb2dsZVxDbG91ZFxEYXRhQ2F0YWxvZ1xWMeoCHkdvb2dsZTo6Q2xvdWQ6OkRhdGFDYXRhbG9nOjpWMWIGcHJvdG8z");

/**
 * Native schema used by a resource represented as an entry. Used by query
 * engines for deserializing and parsing source data.
 *
 * @generated from message google.cloud.datacatalog.v1.PhysicalSchema
 */
export type PhysicalSchema = Message<"google.cloud.datacatalog.v1.PhysicalSchema"> & {
  /**
   * @generated from oneof google.cloud.datacatalog.v1.PhysicalSchema.schema
   */
  schema: {
    /**
     * Schema in Avro JSON format.
     *
     * @generated from field: google.cloud.datacatalog.v1.PhysicalSchema.AvroSchema avro = 1;
     */
    value: PhysicalSchema_AvroSchema;
    case: "avro";
  } | {
    /**
     * Schema in Thrift format.
     *
     * @generated from field: google.cloud.datacatalog.v1.PhysicalSchema.ThriftSchema thrift = 2;
     */
    value: PhysicalSchema_ThriftSchema;
    case: "thrift";
  } | {
    /**
     * Schema in protocol buffer format.
     *
     * @generated from field: google.cloud.datacatalog.v1.PhysicalSchema.ProtobufSchema protobuf = 3;
     */
    value: PhysicalSchema_ProtobufSchema;
    case: "protobuf";
  } | {
    /**
     * Marks a Parquet-encoded data source.
     *
     * @generated from field: google.cloud.datacatalog.v1.PhysicalSchema.ParquetSchema parquet = 4;
     */
    value: PhysicalSchema_ParquetSchema;
    case: "parquet";
  } | {
    /**
     * Marks an ORC-encoded data source.
     *
     * @generated from field: google.cloud.datacatalog.v1.PhysicalSchema.OrcSchema orc = 5;
     */
    value: PhysicalSchema_OrcSchema;
    case: "orc";
  } | {
    /**
     * Marks a CSV-encoded data source.
     *
     * @generated from field: google.cloud.datacatalog.v1.PhysicalSchema.CsvSchema csv = 6;
     */
    value: PhysicalSchema_CsvSchema;
    case: "csv";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.cloud.datacatalog.v1.PhysicalSchema.
 * Use `create(PhysicalSchemaSchema)` to create a new message.
 */
export const PhysicalSchemaSchema: GenMessage<PhysicalSchema> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_physical_schema, 0);

/**
 * Schema in Avro JSON format.
 *
 * @generated from message google.cloud.datacatalog.v1.PhysicalSchema.AvroSchema
 */
export type PhysicalSchema_AvroSchema = Message<"google.cloud.datacatalog.v1.PhysicalSchema.AvroSchema"> & {
  /**
   * JSON source of the Avro schema.
   *
   * @generated from field: string text = 1;
   */
  text: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1.PhysicalSchema.AvroSchema.
 * Use `create(PhysicalSchema_AvroSchemaSchema)` to create a new message.
 */
export const PhysicalSchema_AvroSchemaSchema: GenMessage<PhysicalSchema_AvroSchema> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_physical_schema, 0, 0);

/**
 * Schema in Thrift format.
 *
 * @generated from message google.cloud.datacatalog.v1.PhysicalSchema.ThriftSchema
 */
export type PhysicalSchema_ThriftSchema = Message<"google.cloud.datacatalog.v1.PhysicalSchema.ThriftSchema"> & {
  /**
   * Thrift IDL source of the schema.
   *
   * @generated from field: string text = 1;
   */
  text: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1.PhysicalSchema.ThriftSchema.
 * Use `create(PhysicalSchema_ThriftSchemaSchema)` to create a new message.
 */
export const PhysicalSchema_ThriftSchemaSchema: GenMessage<PhysicalSchema_ThriftSchema> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_physical_schema, 0, 1);

/**
 * Schema in protocol buffer format.
 *
 * @generated from message google.cloud.datacatalog.v1.PhysicalSchema.ProtobufSchema
 */
export type PhysicalSchema_ProtobufSchema = Message<"google.cloud.datacatalog.v1.PhysicalSchema.ProtobufSchema"> & {
  /**
   * Protocol buffer source of the schema.
   *
   * @generated from field: string text = 1;
   */
  text: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1.PhysicalSchema.ProtobufSchema.
 * Use `create(PhysicalSchema_ProtobufSchemaSchema)` to create a new message.
 */
export const PhysicalSchema_ProtobufSchemaSchema: GenMessage<PhysicalSchema_ProtobufSchema> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_physical_schema, 0, 2);

/**
 * Marks a Parquet-encoded data source.
 *
 * @generated from message google.cloud.datacatalog.v1.PhysicalSchema.ParquetSchema
 */
export type PhysicalSchema_ParquetSchema = Message<"google.cloud.datacatalog.v1.PhysicalSchema.ParquetSchema"> & {
};

/**
 * Describes the message google.cloud.datacatalog.v1.PhysicalSchema.ParquetSchema.
 * Use `create(PhysicalSchema_ParquetSchemaSchema)` to create a new message.
 */
export const PhysicalSchema_ParquetSchemaSchema: GenMessage<PhysicalSchema_ParquetSchema> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_physical_schema, 0, 3);

/**
 * Marks an ORC-encoded data source.
 *
 * @generated from message google.cloud.datacatalog.v1.PhysicalSchema.OrcSchema
 */
export type PhysicalSchema_OrcSchema = Message<"google.cloud.datacatalog.v1.PhysicalSchema.OrcSchema"> & {
};

/**
 * Describes the message google.cloud.datacatalog.v1.PhysicalSchema.OrcSchema.
 * Use `create(PhysicalSchema_OrcSchemaSchema)` to create a new message.
 */
export const PhysicalSchema_OrcSchemaSchema: GenMessage<PhysicalSchema_OrcSchema> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_physical_schema, 0, 4);

/**
 * Marks a CSV-encoded data source.
 *
 * @generated from message google.cloud.datacatalog.v1.PhysicalSchema.CsvSchema
 */
export type PhysicalSchema_CsvSchema = Message<"google.cloud.datacatalog.v1.PhysicalSchema.CsvSchema"> & {
};

/**
 * Describes the message google.cloud.datacatalog.v1.PhysicalSchema.CsvSchema.
 * Use `create(PhysicalSchema_CsvSchemaSchema)` to create a new message.
 */
export const PhysicalSchema_CsvSchemaSchema: GenMessage<PhysicalSchema_CsvSchema> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_physical_schema, 0, 5);

