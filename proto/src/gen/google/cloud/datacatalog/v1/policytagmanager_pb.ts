// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/datacatalog/v1/policytagmanager.proto (package google.cloud.datacatalog.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { ManagingSystem } from "./common_pb";
import { file_google_cloud_datacatalog_v1_common } from "./common_pb";
import type { SystemTimestamps } from "./timestamps_pb";
import { file_google_cloud_datacatalog_v1_timestamps } from "./timestamps_pb";
import type { GetIamPolicyRequestSchema, SetIamPolicyRequestSchema, TestIamPermissionsRequestSchema, TestIamPermissionsResponseSchema } from "../../../iam/v1/iam_policy_pb";
import { file_google_iam_v1_iam_policy } from "../../../iam/v1/iam_policy_pb";
import type { PolicySchema } from "../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../iam/v1/policy_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/datacatalog/v1/policytagmanager.proto.
 */
export const file_google_cloud_datacatalog_v1_policytagmanager: GenFile = /*@__PURE__*/
  fileDesc("CjJnb29nbGUvY2xvdWQvZGF0YWNhdGFsb2cvdjEvcG9saWN5dGFnbWFuYWdlci5wcm90bxIbZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxIusECghUYXhvbm9teRIRCgRuYW1lGAEgASgJQgPgQQgSGQoMZGlzcGxheV9uYW1lGAIgASgJQgPgQQISGAoLZGVzY3JpcHRpb24YAyABKAlCA+BBARIdChBwb2xpY3lfdGFnX2NvdW50GAQgASgFQgPgQQMSTwoTdGF4b25vbXlfdGltZXN0YW1wcxgFIAEoCzItLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MS5TeXN0ZW1UaW1lc3RhbXBzQgPgQQMSVQoWYWN0aXZhdGVkX3BvbGljeV90eXBlcxgGIAMoDjIwLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MS5UYXhvbm9teS5Qb2xpY3lUeXBlQgPgQQESQwoHc2VydmljZRgHIAEoCzItLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MS5UYXhvbm9teS5TZXJ2aWNlQgPgQQMaVgoHU2VydmljZRI5CgRuYW1lGAEgASgOMisuZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxLk1hbmFnaW5nU3lzdGVtEhAKCGlkZW50aXR5GAIgASgJIkoKClBvbGljeVR5cGUSGwoXUE9MSUNZX1RZUEVfVU5TUEVDSUZJRUQQABIfChtGSU5FX0dSQUlORURfQUNDRVNTX0NPTlRST0wQATpn6kFkCiNkYXRhY2F0YWxvZy5nb29nbGVhcGlzLmNvbS9UYXhvbm9teRI9cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L3RheG9ub21pZXMve3RheG9ub215fSKMAgoJUG9saWN5VGFnEhEKBG5hbWUYASABKAlCA+BBCBIZCgxkaXNwbGF5X25hbWUYAiABKAlCA+BBAhITCgtkZXNjcmlwdGlvbhgDIAEoCRIZChFwYXJlbnRfcG9saWN5X3RhZxgEIAEoCRIeChFjaGlsZF9wb2xpY3lfdGFncxgFIAMoCUID4EEDOoAB6kF9CiRkYXRhY2F0YWxvZy5nb29nbGVhcGlzLmNvbS9Qb2xpY3lUYWcSVXByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS90YXhvbm9taWVzL3t0YXhvbm9teX0vcG9saWN5VGFncy97cG9saWN5X3RhZ30ijQEKFUNyZWF0ZVRheG9ub215UmVxdWVzdBI7CgZwYXJlbnQYASABKAlCK+BBAvpBJRIjZGF0YWNhdGFsb2cuZ29vZ2xlYXBpcy5jb20vVGF4b25vbXkSNwoIdGF4b25vbXkYAiABKAsyJS5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjEuVGF4b25vbXkiUgoVRGVsZXRlVGF4b25vbXlSZXF1ZXN0EjkKBG5hbWUYASABKAlCK+BBAvpBJQojZGF0YWNhdGFsb2cuZ29vZ2xlYXBpcy5jb20vVGF4b25vbXkigQEKFVVwZGF0ZVRheG9ub215UmVxdWVzdBI3Cgh0YXhvbm9teRgBIAEoCzIlLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MS5UYXhvbm9teRIvCgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2siiwEKFUxpc3RUYXhvbm9taWVzUmVxdWVzdBI7CgZwYXJlbnQYASABKAlCK+BBAvpBJRIjZGF0YWNhdGFsb2cuZ29vZ2xlYXBpcy5jb20vVGF4b25vbXkSEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkSDgoGZmlsdGVyGAQgASgJImwKFkxpc3RUYXhvbm9taWVzUmVzcG9uc2USOQoKdGF4b25vbWllcxgBIAMoCzIlLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MS5UYXhvbm9teRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiTwoSR2V0VGF4b25vbXlSZXF1ZXN0EjkKBG5hbWUYASABKAlCK+BBAvpBJQojZGF0YWNhdGFsb2cuZ29vZ2xlYXBpcy5jb20vVGF4b25vbXkikgEKFkNyZWF0ZVBvbGljeVRhZ1JlcXVlc3QSPAoGcGFyZW50GAEgASgJQizgQQL6QSYSJGRhdGFjYXRhbG9nLmdvb2dsZWFwaXMuY29tL1BvbGljeVRhZxI6Cgpwb2xpY3lfdGFnGAIgASgLMiYuZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxLlBvbGljeVRhZyJUChZEZWxldGVQb2xpY3lUYWdSZXF1ZXN0EjoKBG5hbWUYASABKAlCLOBBAvpBJgokZGF0YWNhdGFsb2cuZ29vZ2xlYXBpcy5jb20vUG9saWN5VGFnIoUBChZVcGRhdGVQb2xpY3lUYWdSZXF1ZXN0EjoKCnBvbGljeV90YWcYASABKAsyJi5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjEuUG9saWN5VGFnEi8KC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayJ8ChVMaXN0UG9saWN5VGFnc1JlcXVlc3QSPAoGcGFyZW50GAEgASgJQizgQQL6QSYSJGRhdGFjYXRhbG9nLmdvb2dsZWFwaXMuY29tL1BvbGljeVRhZxIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCSJuChZMaXN0UG9saWN5VGFnc1Jlc3BvbnNlEjsKC3BvbGljeV90YWdzGAEgAygLMiYuZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxLlBvbGljeVRhZxIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiUQoTR2V0UG9saWN5VGFnUmVxdWVzdBI6CgRuYW1lGAEgASgJQizgQQL6QSYKJGRhdGFjYXRhbG9nLmdvb2dsZWFwaXMuY29tL1BvbGljeVRhZzK7FQoQUG9saWN5VGFnTWFuYWdlchK/AQoOQ3JlYXRlVGF4b25vbXkSMi5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjEuQ3JlYXRlVGF4b25vbXlSZXF1ZXN0GiUuZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxLlRheG9ub215IlLaQQ9wYXJlbnQsdGF4b25vbXmC0+STAjo6CHRheG9ub215Ii4vdjEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS90YXhvbm9taWVzEpsBCg5EZWxldGVUYXhvbm9teRIyLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MS5EZWxldGVUYXhvbm9teVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiPdpBBG5hbWWC0+STAjAqLi92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3RheG9ub21pZXMvKn0SwQEKDlVwZGF0ZVRheG9ub215EjIuZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxLlVwZGF0ZVRheG9ub215UmVxdWVzdBolLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MS5UYXhvbm9teSJU2kEIdGF4b25vbXmC0+STAkM6CHRheG9ub215MjcvdjEve3RheG9ub215Lm5hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi90YXhvbm9taWVzLyp9EroBCg5MaXN0VGF4b25vbWllcxIyLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MS5MaXN0VGF4b25vbWllc1JlcXVlc3QaMy5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjEuTGlzdFRheG9ub21pZXNSZXNwb25zZSI/2kEGcGFyZW50gtPkkwIwEi4vdjEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS90YXhvbm9taWVzEqQBCgtHZXRUYXhvbm9teRIvLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MS5HZXRUYXhvbm9teVJlcXVlc3QaJS5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjEuVGF4b25vbXkiPdpBBG5hbWWC0+STAjASLi92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3RheG9ub21pZXMvKn0S0wEKD0NyZWF0ZVBvbGljeVRhZxIzLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MS5DcmVhdGVQb2xpY3lUYWdSZXF1ZXN0GiYuZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxLlBvbGljeVRhZyJj2kERcGFyZW50LHBvbGljeV90YWeC0+STAkk6CnBvbGljeV90YWciOy92MS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovdGF4b25vbWllcy8qfS9wb2xpY3lUYWdzEqoBCg9EZWxldGVQb2xpY3lUYWcSMy5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjEuRGVsZXRlUG9saWN5VGFnUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSJK2kEEbmFtZYLT5JMCPSo7L3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovdGF4b25vbWllcy8qL3BvbGljeVRhZ3MvKn0S1wEKD1VwZGF0ZVBvbGljeVRhZxIzLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MS5VcGRhdGVQb2xpY3lUYWdSZXF1ZXN0GiYuZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxLlBvbGljeVRhZyJn2kEKcG9saWN5X3RhZ4LT5JMCVDoKcG9saWN5X3RhZzJGL3YxL3twb2xpY3lfdGFnLm5hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi90YXhvbm9taWVzLyovcG9saWN5VGFncy8qfRLHAQoOTGlzdFBvbGljeVRhZ3MSMi5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjEuTGlzdFBvbGljeVRhZ3NSZXF1ZXN0GjMuZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxLkxpc3RQb2xpY3lUYWdzUmVzcG9uc2UiTNpBBnBhcmVudILT5JMCPRI7L3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi90YXhvbm9taWVzLyp9L3BvbGljeVRhZ3MStAEKDEdldFBvbGljeVRhZxIwLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MS5HZXRQb2xpY3lUYWdSZXF1ZXN0GiYuZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxLlBvbGljeVRhZyJK2kEEbmFtZYLT5JMCPRI7L3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovdGF4b25vbWllcy8qL3BvbGljeVRhZ3MvKn0S6gEKDEdldElhbVBvbGljeRIiLmdvb2dsZS5pYW0udjEuR2V0SWFtUG9saWN5UmVxdWVzdBoVLmdvb2dsZS5pYW0udjEuUG9saWN5Ip4BgtPkkwKXAToBKlpROgEqIkwvdjEve3Jlc291cmNlPXByb2plY3RzLyovbG9jYXRpb25zLyovdGF4b25vbWllcy8qL3BvbGljeVRhZ3MvKn06Z2V0SWFtUG9saWN5Ij8vdjEve3Jlc291cmNlPXByb2plY3RzLyovbG9jYXRpb25zLyovdGF4b25vbWllcy8qfTpnZXRJYW1Qb2xpY3kS6gEKDFNldElhbVBvbGljeRIiLmdvb2dsZS5pYW0udjEuU2V0SWFtUG9saWN5UmVxdWVzdBoVLmdvb2dsZS5pYW0udjEuUG9saWN5Ip4BgtPkkwKXAToBKlpROgEqIkwvdjEve3Jlc291cmNlPXByb2plY3RzLyovbG9jYXRpb25zLyovdGF4b25vbWllcy8qL3BvbGljeVRhZ3MvKn06c2V0SWFtUG9saWN5Ij8vdjEve3Jlc291cmNlPXByb2plY3RzLyovbG9jYXRpb25zLyovdGF4b25vbWllcy8qfTpzZXRJYW1Qb2xpY3kSlgIKElRlc3RJYW1QZXJtaXNzaW9ucxIoLmdvb2dsZS5pYW0udjEuVGVzdElhbVBlcm1pc3Npb25zUmVxdWVzdBopLmdvb2dsZS5pYW0udjEuVGVzdElhbVBlcm1pc3Npb25zUmVzcG9uc2UiqgGC0+STAqMBOgEqWlc6ASoiUi92MS97cmVzb3VyY2U9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi90YXhvbm9taWVzLyovcG9saWN5VGFncy8qfTp0ZXN0SWFtUGVybWlzc2lvbnMiRS92MS97cmVzb3VyY2U9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi90YXhvbm9taWVzLyp9OnRlc3RJYW1QZXJtaXNzaW9ucxpOykEaZGF0YWNhdGFsb2cuZ29vZ2xlYXBpcy5jb23SQS5odHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtQt0BCh9jb20uZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxQhVQb2xpY3lUYWdNYW5hZ2VyUHJvdG9QAVpBY2xvdWQuZ29vZ2xlLmNvbS9nby9kYXRhY2F0YWxvZy9hcGl2MS9kYXRhY2F0YWxvZ3BiO2RhdGFjYXRhbG9ncGL4AQGqAhtHb29nbGUuQ2xvdWQuRGF0YUNhdGFsb2cuVjHKAhtHb29nbGVcQ2xvdWRcRGF0YUNhdGFsb2dcVjHqAh5Hb29nbGU6OkNsb3VkOjpEYXRhQ2F0YWxvZzo6VjFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_cloud_datacatalog_v1_common, file_google_cloud_datacatalog_v1_timestamps, file_google_iam_v1_iam_policy, file_google_iam_v1_policy, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * A taxonomy is a collection of hierarchical policy tags that classify data
 * along a common axis.
 *
 * For example, a "data sensitivity" taxonomy might contain the following policy
 * tags:
 *
 * ```
 * + PII
 *   + Account number
 *   + Age
 *   + SSN
 *   + Zipcode
 * + Financials
 *   + Revenue
 * ```
 *
 * A "data origin" taxonomy might contain the following policy tags:
 *
 * ```
 * + User data
 * + Employee data
 * + Partner data
 * + Public data
 * ```
 *
 * @generated from message google.cloud.datacatalog.v1.Taxonomy
 */
export type Taxonomy = Message<"google.cloud.datacatalog.v1.Taxonomy"> & {
  /**
   * Identifier. Resource name of this taxonomy in URL format.
   *
   * Note: Policy tag manager generates unique taxonomy IDs.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. User-defined name of this taxonomy.
   *
   * The name can't start or end with spaces, must contain only Unicode letters,
   * numbers, underscores, dashes, and spaces, and be at most 200 bytes long
   * when encoded in UTF-8.
   *
   * The taxonomy display name must be unique within an organization.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Optional. Description of this taxonomy. If not set, defaults to empty.
   *
   * The description must contain only Unicode characters, tabs, newlines,
   * carriage returns, and page breaks, and be at most 2000 bytes long when
   * encoded in UTF-8.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Output only. Number of policy tags in this taxonomy.
   *
   * @generated from field: int32 policy_tag_count = 4;
   */
  policyTagCount: number;

  /**
   * Output only. Creation and modification timestamps of this taxonomy.
   *
   * @generated from field: google.cloud.datacatalog.v1.SystemTimestamps taxonomy_timestamps = 5;
   */
  taxonomyTimestamps?: SystemTimestamps;

  /**
   * Optional. A list of policy types that are activated for this taxonomy. If
   * not set, defaults to an empty list.
   *
   * @generated from field: repeated google.cloud.datacatalog.v1.Taxonomy.PolicyType activated_policy_types = 6;
   */
  activatedPolicyTypes: Taxonomy_PolicyType[];

  /**
   * Output only. Identity of the service which owns the Taxonomy. This field is
   * only populated when the taxonomy is created by a Google Cloud service.
   * Currently only 'DATAPLEX' is supported.
   *
   * @generated from field: google.cloud.datacatalog.v1.Taxonomy.Service service = 7;
   */
  service?: Taxonomy_Service;
};

/**
 * Describes the message google.cloud.datacatalog.v1.Taxonomy.
 * Use `create(TaxonomySchema)` to create a new message.
 */
export const TaxonomySchema: GenMessage<Taxonomy> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_policytagmanager, 0);

/**
 * The source system of the Taxonomy.
 *
 * @generated from message google.cloud.datacatalog.v1.Taxonomy.Service
 */
export type Taxonomy_Service = Message<"google.cloud.datacatalog.v1.Taxonomy.Service"> & {
  /**
   * The Google Cloud service name.
   *
   * @generated from field: google.cloud.datacatalog.v1.ManagingSystem name = 1;
   */
  name: ManagingSystem;

  /**
   * The service agent for the service.
   *
   * @generated from field: string identity = 2;
   */
  identity: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1.Taxonomy.Service.
 * Use `create(Taxonomy_ServiceSchema)` to create a new message.
 */
export const Taxonomy_ServiceSchema: GenMessage<Taxonomy_Service> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_policytagmanager, 0, 0);

/**
 * Defines policy types where the policy tags can be used for.
 *
 * @generated from enum google.cloud.datacatalog.v1.Taxonomy.PolicyType
 */
export enum Taxonomy_PolicyType {
  /**
   * Unspecified policy type.
   *
   * @generated from enum value: POLICY_TYPE_UNSPECIFIED = 0;
   */
  POLICY_TYPE_UNSPECIFIED = 0,

  /**
   * Fine-grained access control policy that enables access control on
   * tagged sub-resources.
   *
   * @generated from enum value: FINE_GRAINED_ACCESS_CONTROL = 1;
   */
  FINE_GRAINED_ACCESS_CONTROL = 1,
}

/**
 * Describes the enum google.cloud.datacatalog.v1.Taxonomy.PolicyType.
 */
export const Taxonomy_PolicyTypeSchema: GenEnum<Taxonomy_PolicyType> = /*@__PURE__*/
  enumDesc(file_google_cloud_datacatalog_v1_policytagmanager, 0, 0);

/**
 * Denotes one policy tag in a taxonomy, for example, SSN.
 *
 * Policy tags can be defined in a hierarchy. For example:
 *
 * ```
 * + Geolocation
 *   + LatLong
 *   + City
 *   + ZipCode
 * ```
 *
 * Where the "Geolocation" policy tag contains three children.
 *
 * @generated from message google.cloud.datacatalog.v1.PolicyTag
 */
export type PolicyTag = Message<"google.cloud.datacatalog.v1.PolicyTag"> & {
  /**
   * Identifier. Resource name of this policy tag in the URL format.
   *
   * The policy tag manager generates unique taxonomy IDs and policy tag IDs.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. User-defined name of this policy tag.
   *
   * The name can't start or end with spaces and must be unique within the
   * parent taxonomy, contain only Unicode letters, numbers, underscores, dashes
   * and spaces, and be at most 200 bytes long when encoded in UTF-8.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Description of this policy tag. If not set, defaults to empty.
   *
   * The description must contain only Unicode characters,
   * tabs, newlines, carriage returns and page breaks, and be at most 2000 bytes
   * long when encoded in UTF-8.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Resource name of this policy tag's parent policy tag. If empty, this is a
   * top level tag. If not set, defaults to an empty string.
   *
   * For example, for the "LatLong" policy tag in the example above, this field
   * contains the resource name of the "Geolocation" policy tag, and, for
   * "Geolocation", this field is empty.
   *
   * @generated from field: string parent_policy_tag = 4;
   */
  parentPolicyTag: string;

  /**
   * Output only. Resource names of child policy tags of this policy tag.
   *
   * @generated from field: repeated string child_policy_tags = 5;
   */
  childPolicyTags: string[];
};

/**
 * Describes the message google.cloud.datacatalog.v1.PolicyTag.
 * Use `create(PolicyTagSchema)` to create a new message.
 */
export const PolicyTagSchema: GenMessage<PolicyTag> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_policytagmanager, 1);

/**
 * Request message for
 * [CreateTaxonomy][google.cloud.datacatalog.v1.PolicyTagManager.CreateTaxonomy].
 *
 * @generated from message google.cloud.datacatalog.v1.CreateTaxonomyRequest
 */
export type CreateTaxonomyRequest = Message<"google.cloud.datacatalog.v1.CreateTaxonomyRequest"> & {
  /**
   * Required. Resource name of the project that the taxonomy will belong to.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The taxonomy to create.
   *
   * @generated from field: google.cloud.datacatalog.v1.Taxonomy taxonomy = 2;
   */
  taxonomy?: Taxonomy;
};

/**
 * Describes the message google.cloud.datacatalog.v1.CreateTaxonomyRequest.
 * Use `create(CreateTaxonomyRequestSchema)` to create a new message.
 */
export const CreateTaxonomyRequestSchema: GenMessage<CreateTaxonomyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_policytagmanager, 2);

/**
 * Request message for
 * [DeleteTaxonomy][google.cloud.datacatalog.v1.PolicyTagManager.DeleteTaxonomy].
 *
 * @generated from message google.cloud.datacatalog.v1.DeleteTaxonomyRequest
 */
export type DeleteTaxonomyRequest = Message<"google.cloud.datacatalog.v1.DeleteTaxonomyRequest"> & {
  /**
   * Required. Resource name of the taxonomy to delete.
   *
   * Note: All policy tags in this taxonomy are also deleted.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1.DeleteTaxonomyRequest.
 * Use `create(DeleteTaxonomyRequestSchema)` to create a new message.
 */
export const DeleteTaxonomyRequestSchema: GenMessage<DeleteTaxonomyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_policytagmanager, 3);

/**
 * Request message for
 * [UpdateTaxonomy][google.cloud.datacatalog.v1.PolicyTagManager.UpdateTaxonomy].
 *
 * @generated from message google.cloud.datacatalog.v1.UpdateTaxonomyRequest
 */
export type UpdateTaxonomyRequest = Message<"google.cloud.datacatalog.v1.UpdateTaxonomyRequest"> & {
  /**
   * The taxonomy to update. You can update only its description, display name,
   * and activated policy types.
   *
   * @generated from field: google.cloud.datacatalog.v1.Taxonomy taxonomy = 1;
   */
  taxonomy?: Taxonomy;

  /**
   * Specifies fields to update. If not set, defaults to all fields you can
   * update.
   *
   * For more information, see [FieldMask]
   * (https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.datacatalog.v1.UpdateTaxonomyRequest.
 * Use `create(UpdateTaxonomyRequestSchema)` to create a new message.
 */
export const UpdateTaxonomyRequestSchema: GenMessage<UpdateTaxonomyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_policytagmanager, 4);

/**
 * Request message for
 * [ListTaxonomies][google.cloud.datacatalog.v1.PolicyTagManager.ListTaxonomies].
 *
 * @generated from message google.cloud.datacatalog.v1.ListTaxonomiesRequest
 */
export type ListTaxonomiesRequest = Message<"google.cloud.datacatalog.v1.ListTaxonomiesRequest"> & {
  /**
   * Required. Resource name of the project to list the taxonomies of.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return. Must be a value between 1 and 1000
   * inclusively. If not set, defaults to 50.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The pagination token of the next results page. If not set,
   * the first page is returned.
   *
   * The token is returned in the response to a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Supported field for filter is 'service' and value is 'dataplex'.
   * Eg: service=dataplex.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1.ListTaxonomiesRequest.
 * Use `create(ListTaxonomiesRequestSchema)` to create a new message.
 */
export const ListTaxonomiesRequestSchema: GenMessage<ListTaxonomiesRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_policytagmanager, 5);

/**
 * Response message for
 * [ListTaxonomies][google.cloud.datacatalog.v1.PolicyTagManager.ListTaxonomies].
 *
 * @generated from message google.cloud.datacatalog.v1.ListTaxonomiesResponse
 */
export type ListTaxonomiesResponse = Message<"google.cloud.datacatalog.v1.ListTaxonomiesResponse"> & {
  /**
   * Taxonomies that the project contains.
   *
   * @generated from field: repeated google.cloud.datacatalog.v1.Taxonomy taxonomies = 1;
   */
  taxonomies: Taxonomy[];

  /**
   * Pagination token of the next results page. Empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1.ListTaxonomiesResponse.
 * Use `create(ListTaxonomiesResponseSchema)` to create a new message.
 */
export const ListTaxonomiesResponseSchema: GenMessage<ListTaxonomiesResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_policytagmanager, 6);

/**
 * Request message for
 * [GetTaxonomy][google.cloud.datacatalog.v1.PolicyTagManager.GetTaxonomy].
 *
 * @generated from message google.cloud.datacatalog.v1.GetTaxonomyRequest
 */
export type GetTaxonomyRequest = Message<"google.cloud.datacatalog.v1.GetTaxonomyRequest"> & {
  /**
   * Required. Resource name of the taxonomy to get.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1.GetTaxonomyRequest.
 * Use `create(GetTaxonomyRequestSchema)` to create a new message.
 */
export const GetTaxonomyRequestSchema: GenMessage<GetTaxonomyRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_policytagmanager, 7);

/**
 * Request message for
 * [CreatePolicyTag][google.cloud.datacatalog.v1.PolicyTagManager.CreatePolicyTag].
 *
 * @generated from message google.cloud.datacatalog.v1.CreatePolicyTagRequest
 */
export type CreatePolicyTagRequest = Message<"google.cloud.datacatalog.v1.CreatePolicyTagRequest"> & {
  /**
   * Required. Resource name of the taxonomy that the policy tag will belong to.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The policy tag to create.
   *
   * @generated from field: google.cloud.datacatalog.v1.PolicyTag policy_tag = 2;
   */
  policyTag?: PolicyTag;
};

/**
 * Describes the message google.cloud.datacatalog.v1.CreatePolicyTagRequest.
 * Use `create(CreatePolicyTagRequestSchema)` to create a new message.
 */
export const CreatePolicyTagRequestSchema: GenMessage<CreatePolicyTagRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_policytagmanager, 8);

/**
 * Request message for
 * [DeletePolicyTag][google.cloud.datacatalog.v1.PolicyTagManager.DeletePolicyTag].
 *
 * @generated from message google.cloud.datacatalog.v1.DeletePolicyTagRequest
 */
export type DeletePolicyTagRequest = Message<"google.cloud.datacatalog.v1.DeletePolicyTagRequest"> & {
  /**
   * Required. Resource name of the policy tag to delete.
   *
   * Note: All of its descendant policy tags are also deleted.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1.DeletePolicyTagRequest.
 * Use `create(DeletePolicyTagRequestSchema)` to create a new message.
 */
export const DeletePolicyTagRequestSchema: GenMessage<DeletePolicyTagRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_policytagmanager, 9);

/**
 * Request message for
 * [UpdatePolicyTag][google.cloud.datacatalog.v1.PolicyTagManager.UpdatePolicyTag].
 *
 * @generated from message google.cloud.datacatalog.v1.UpdatePolicyTagRequest
 */
export type UpdatePolicyTagRequest = Message<"google.cloud.datacatalog.v1.UpdatePolicyTagRequest"> & {
  /**
   * The policy tag to update. You can update only its description, display
   * name, and parent policy tag fields.
   *
   * @generated from field: google.cloud.datacatalog.v1.PolicyTag policy_tag = 1;
   */
  policyTag?: PolicyTag;

  /**
   * Specifies the fields to update.
   *
   * You can update only display name, description, and parent policy tag.
   * If not set, defaults to all updatable fields.
   * For more information, see [FieldMask]
   * (https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.cloud.datacatalog.v1.UpdatePolicyTagRequest.
 * Use `create(UpdatePolicyTagRequestSchema)` to create a new message.
 */
export const UpdatePolicyTagRequestSchema: GenMessage<UpdatePolicyTagRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_policytagmanager, 10);

/**
 * Request message for
 * [ListPolicyTags][google.cloud.datacatalog.v1.PolicyTagManager.ListPolicyTags].
 *
 * @generated from message google.cloud.datacatalog.v1.ListPolicyTagsRequest
 */
export type ListPolicyTagsRequest = Message<"google.cloud.datacatalog.v1.ListPolicyTagsRequest"> & {
  /**
   * Required. Resource name of the taxonomy to list the policy tags of.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return. Must be a value between 1 and 1000
   * inclusively.
   * If not set, defaults to 50.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The pagination token of the next results page. If not set, returns the
   * first page.
   *
   * The token is returned in the response to a previous list request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1.ListPolicyTagsRequest.
 * Use `create(ListPolicyTagsRequestSchema)` to create a new message.
 */
export const ListPolicyTagsRequestSchema: GenMessage<ListPolicyTagsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_policytagmanager, 11);

/**
 * Response message for
 * [ListPolicyTags][google.cloud.datacatalog.v1.PolicyTagManager.ListPolicyTags].
 *
 * @generated from message google.cloud.datacatalog.v1.ListPolicyTagsResponse
 */
export type ListPolicyTagsResponse = Message<"google.cloud.datacatalog.v1.ListPolicyTagsResponse"> & {
  /**
   * The policy tags that belong to the taxonomy.
   *
   * @generated from field: repeated google.cloud.datacatalog.v1.PolicyTag policy_tags = 1;
   */
  policyTags: PolicyTag[];

  /**
   * Pagination token of the next results page. Empty if there are no
   * more results in the list.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1.ListPolicyTagsResponse.
 * Use `create(ListPolicyTagsResponseSchema)` to create a new message.
 */
export const ListPolicyTagsResponseSchema: GenMessage<ListPolicyTagsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_policytagmanager, 12);

/**
 * Request message for
 * [GetPolicyTag][google.cloud.datacatalog.v1.PolicyTagManager.GetPolicyTag].
 *
 * @generated from message google.cloud.datacatalog.v1.GetPolicyTagRequest
 */
export type GetPolicyTagRequest = Message<"google.cloud.datacatalog.v1.GetPolicyTagRequest"> & {
  /**
   * Required. Resource name of the policy tag.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.datacatalog.v1.GetPolicyTagRequest.
 * Use `create(GetPolicyTagRequestSchema)` to create a new message.
 */
export const GetPolicyTagRequestSchema: GenMessage<GetPolicyTagRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_datacatalog_v1_policytagmanager, 13);

/**
 * Policy Tag Manager API service allows you to manage your policy tags and
 * taxonomies.
 *
 * Policy tags are used to tag BigQuery columns and apply additional access
 * control policies. A taxonomy is a hierarchical grouping of policy tags that
 * classify data along a common axis.
 *
 * @generated from service google.cloud.datacatalog.v1.PolicyTagManager
 */
export const PolicyTagManager: GenService<{
  /**
   * Creates a taxonomy in a specified project.
   *
   * The taxonomy is initially empty, that is, it doesn't contain policy tags.
   *
   * @generated from rpc google.cloud.datacatalog.v1.PolicyTagManager.CreateTaxonomy
   */
  createTaxonomy: {
    methodKind: "unary";
    input: typeof CreateTaxonomyRequestSchema;
    output: typeof TaxonomySchema;
  },
  /**
   * Deletes a taxonomy, including all policy tags in this
   * taxonomy, their associated policies, and the policy tags references from
   * BigQuery columns.
   *
   * @generated from rpc google.cloud.datacatalog.v1.PolicyTagManager.DeleteTaxonomy
   */
  deleteTaxonomy: {
    methodKind: "unary";
    input: typeof DeleteTaxonomyRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Updates a taxonomy, including its display name,
   * description, and activated policy types.
   *
   * @generated from rpc google.cloud.datacatalog.v1.PolicyTagManager.UpdateTaxonomy
   */
  updateTaxonomy: {
    methodKind: "unary";
    input: typeof UpdateTaxonomyRequestSchema;
    output: typeof TaxonomySchema;
  },
  /**
   * Lists all taxonomies in a project in a particular location that you
   * have a permission to view.
   *
   * @generated from rpc google.cloud.datacatalog.v1.PolicyTagManager.ListTaxonomies
   */
  listTaxonomies: {
    methodKind: "unary";
    input: typeof ListTaxonomiesRequestSchema;
    output: typeof ListTaxonomiesResponseSchema;
  },
  /**
   * Gets a taxonomy.
   *
   * @generated from rpc google.cloud.datacatalog.v1.PolicyTagManager.GetTaxonomy
   */
  getTaxonomy: {
    methodKind: "unary";
    input: typeof GetTaxonomyRequestSchema;
    output: typeof TaxonomySchema;
  },
  /**
   * Creates a policy tag in a taxonomy.
   *
   * @generated from rpc google.cloud.datacatalog.v1.PolicyTagManager.CreatePolicyTag
   */
  createPolicyTag: {
    methodKind: "unary";
    input: typeof CreatePolicyTagRequestSchema;
    output: typeof PolicyTagSchema;
  },
  /**
   * Deletes a policy tag together with the following:
   *
   * * All of its descendant policy tags, if any
   * * Policies associated with the policy tag and its descendants
   * * References from BigQuery table schema of the policy tag and its
   *   descendants
   *
   * @generated from rpc google.cloud.datacatalog.v1.PolicyTagManager.DeletePolicyTag
   */
  deletePolicyTag: {
    methodKind: "unary";
    input: typeof DeletePolicyTagRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Updates a policy tag, including its display
   * name, description, and parent policy tag.
   *
   * @generated from rpc google.cloud.datacatalog.v1.PolicyTagManager.UpdatePolicyTag
   */
  updatePolicyTag: {
    methodKind: "unary";
    input: typeof UpdatePolicyTagRequestSchema;
    output: typeof PolicyTagSchema;
  },
  /**
   * Lists all policy tags in a taxonomy.
   *
   * @generated from rpc google.cloud.datacatalog.v1.PolicyTagManager.ListPolicyTags
   */
  listPolicyTags: {
    methodKind: "unary";
    input: typeof ListPolicyTagsRequestSchema;
    output: typeof ListPolicyTagsResponseSchema;
  },
  /**
   * Gets a policy tag.
   *
   * @generated from rpc google.cloud.datacatalog.v1.PolicyTagManager.GetPolicyTag
   */
  getPolicyTag: {
    methodKind: "unary";
    input: typeof GetPolicyTagRequestSchema;
    output: typeof PolicyTagSchema;
  },
  /**
   * Gets the IAM policy for a policy tag or a taxonomy.
   *
   * @generated from rpc google.cloud.datacatalog.v1.PolicyTagManager.GetIamPolicy
   */
  getIamPolicy: {
    methodKind: "unary";
    input: typeof GetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Sets the IAM policy for a policy tag or a taxonomy.
   *
   * @generated from rpc google.cloud.datacatalog.v1.PolicyTagManager.SetIamPolicy
   */
  setIamPolicy: {
    methodKind: "unary";
    input: typeof SetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Returns your permissions on a specified policy tag or
   * taxonomy.
   *
   * @generated from rpc google.cloud.datacatalog.v1.PolicyTagManager.TestIamPermissions
   */
  testIamPermissions: {
    methodKind: "unary";
    input: typeof TestIamPermissionsRequestSchema;
    output: typeof TestIamPermissionsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_cloud_datacatalog_v1_policytagmanager, 0);

