// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/cloud/servicehealth/v1/event_resources.proto (package google.cloud.servicehealth.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/cloud/servicehealth/v1/event_resources.proto.
 */
export const file_google_cloud_servicehealth_v1_event_resources: GenFile = /*@__PURE__*/
  fileDesc("CjNnb29nbGUvY2xvdWQvc2VydmljZWhlYWx0aC92MS9ldmVudF9yZXNvdXJjZXMucHJvdG8SHWdvb2dsZS5jbG91ZC5zZXJ2aWNlaGVhbHRoLnYxIpMLCgVFdmVudBIUCgRuYW1lGAEgASgJQgbgQQPgQQgSEgoFdGl0bGUYAiABKAlCA+BBAxIYCgtkZXNjcmlwdGlvbhgDIAEoCUID4EEDEkkKCGNhdGVnb3J5GAQgASgOMjIuZ29vZ2xlLmNsb3VkLnNlcnZpY2VoZWFsdGgudjEuRXZlbnQuRXZlbnRDYXRlZ29yeUID4EEDElUKEWRldGFpbGVkX2NhdGVnb3J5GBUgASgOMjUuZ29vZ2xlLmNsb3VkLnNlcnZpY2VoZWFsdGgudjEuRXZlbnQuRGV0YWlsZWRDYXRlZ29yeUID4EEDEj4KBXN0YXRlGAUgASgOMiouZ29vZ2xlLmNsb3VkLnNlcnZpY2VoZWFsdGgudjEuRXZlbnQuU3RhdGVCA+BBAxJPCg5kZXRhaWxlZF9zdGF0ZRgTIAEoDjIyLmdvb2dsZS5jbG91ZC5zZXJ2aWNlaGVhbHRoLnYxLkV2ZW50LkRldGFpbGVkU3RhdGVCA+BBAxJBCg1ldmVudF9pbXBhY3RzGBQgAygLMiouZ29vZ2xlLmNsb3VkLnNlcnZpY2VoZWFsdGgudjEuRXZlbnRJbXBhY3QSRgoJcmVsZXZhbmNlGAggASgOMi4uZ29vZ2xlLmNsb3VkLnNlcnZpY2VoZWFsdGgudjEuRXZlbnQuUmVsZXZhbmNlQgPgQQMSQAoHdXBkYXRlcxgJIAMoCzIqLmdvb2dsZS5jbG91ZC5zZXJ2aWNlaGVhbHRoLnYxLkV2ZW50VXBkYXRlQgPgQQMSGQoMcGFyZW50X2V2ZW50GAogASgJQgPgQQMSNAoLdXBkYXRlX3RpbWUYDCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSMwoKc3RhcnRfdGltZRgNIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxIxCghlbmRfdGltZRgOIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI5ChBuZXh0X3VwZGF0ZV90aW1lGA8gASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDIj0KDUV2ZW50Q2F0ZWdvcnkSHgoaRVZFTlRfQ0FURUdPUllfVU5TUEVDSUZJRUQQABIMCghJTkNJREVOVBACImQKEERldGFpbGVkQ2F0ZWdvcnkSIQodREVUQUlMRURfQ0FURUdPUllfVU5TUEVDSUZJRUQQABIWChJDT05GSVJNRURfSU5DSURFTlQQARIVChFFTUVSR0lOR19JTkNJREVOVBACIjYKBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAASCgoGQUNUSVZFEAESCgoGQ0xPU0VEEAIiiwEKDURldGFpbGVkU3RhdGUSHgoaREVUQUlMRURfU1RBVEVfVU5TUEVDSUZJRUQQABIMCghFTUVSR0lORxABEg0KCUNPTkZJUk1FRBACEgwKCFJFU09MVkVEEAMSCgoGTUVSR0VEEAQSDwoLQVVUT19DTE9TRUQQCRISCg5GQUxTRV9QT1NJVElWRRAKIncKCVJlbGV2YW5jZRIZChVSRUxFVkFOQ0VfVU5TUEVDSUZJRUQQABILCgdVTktOT1dOEAISEAoMTk9UX0lNUEFDVEVEEAYSFQoRUEFSVElBTExZX1JFTEFURUQQBxILCgdSRUxBVEVEEAgSDAoISU1QQUNURUQQCTpu6kFrCiJzZXJ2aWNlaGVhbHRoLmdvb2dsZWFwaXMuY29tL0V2ZW50EjZwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vZXZlbnRzL3tldmVudH0qBmV2ZW50czIFZXZlbnQizwoKEU9yZ2FuaXphdGlvbkV2ZW50EhQKBG5hbWUYASABKAlCBuBBA+BBCBISCgV0aXRsZRgCIAEoCUID4EEDEhgKC2Rlc2NyaXB0aW9uGAMgASgJQgPgQQMSVQoIY2F0ZWdvcnkYBCABKA4yPi5nb29nbGUuY2xvdWQuc2VydmljZWhlYWx0aC52MS5Pcmdhbml6YXRpb25FdmVudC5FdmVudENhdGVnb3J5QgPgQQMSYQoRZGV0YWlsZWRfY2F0ZWdvcnkYESABKA4yQS5nb29nbGUuY2xvdWQuc2VydmljZWhlYWx0aC52MS5Pcmdhbml6YXRpb25FdmVudC5EZXRhaWxlZENhdGVnb3J5QgPgQQMSSgoFc3RhdGUYBSABKA4yNi5nb29nbGUuY2xvdWQuc2VydmljZWhlYWx0aC52MS5Pcmdhbml6YXRpb25FdmVudC5TdGF0ZUID4EEDElsKDmRldGFpbGVkX3N0YXRlGBAgASgOMj4uZ29vZ2xlLmNsb3VkLnNlcnZpY2VoZWFsdGgudjEuT3JnYW5pemF0aW9uRXZlbnQuRGV0YWlsZWRTdGF0ZUID4EEDEkYKDWV2ZW50X2ltcGFjdHMYDyADKAsyKi5nb29nbGUuY2xvdWQuc2VydmljZWhlYWx0aC52MS5FdmVudEltcGFjdEID4EEDEkAKB3VwZGF0ZXMYCCADKAsyKi5nb29nbGUuY2xvdWQuc2VydmljZWhlYWx0aC52MS5FdmVudFVwZGF0ZUID4EEDEhkKDHBhcmVudF9ldmVudBgJIAEoCUID4EEDEjQKC3VwZGF0ZV90aW1lGAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjMKCnN0YXJ0X3RpbWUYDCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSMQoIZW5kX3RpbWUYDSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSOQoQbmV4dF91cGRhdGVfdGltZRgOIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAyI9Cg1FdmVudENhdGVnb3J5Eh4KGkVWRU5UX0NBVEVHT1JZX1VOU1BFQ0lGSUVEEAASDAoISU5DSURFTlQQAiJkChBEZXRhaWxlZENhdGVnb3J5EiEKHURFVEFJTEVEX0NBVEVHT1JZX1VOU1BFQ0lGSUVEEAASFgoSQ09ORklSTUVEX0lOQ0lERU5UEAESFQoRRU1FUkdJTkdfSU5DSURFTlQQAiI2CgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgoKBkFDVElWRRABEgoKBkNMT1NFRBACIosBCg1EZXRhaWxlZFN0YXRlEh4KGkRFVEFJTEVEX1NUQVRFX1VOU1BFQ0lGSUVEEAASDAoIRU1FUkdJTkcQARINCglDT05GSVJNRUQQAhIMCghSRVNPTFZFRBADEgoKBk1FUkdFRBAEEg8KC0FVVE9fQ0xPU0VEEAkSEgoORkFMU0VfUE9TSVRJVkUQCjqpAepBpQEKLnNlcnZpY2VoZWFsdGguZ29vZ2xlYXBpcy5jb20vT3JnYW5pemF0aW9uRXZlbnQSTG9yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbn0vbG9jYXRpb25zL3tsb2NhdGlvbn0vb3JnYW5pemF0aW9uRXZlbnRzL3tldmVudH0qEm9yZ2FuaXphdGlvbkV2ZW50czIRb3JnYW5pemF0aW9uRXZlbnQioAEKC0V2ZW50VXBkYXRlEjQKC3VwZGF0ZV90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEhIKBXRpdGxlGAIgASgJQgPgQQMSGAoLZGVzY3JpcHRpb24YAyABKAlCA+BBAxIUCgdzeW1wdG9tGAQgASgJQgPgQQMSFwoKd29ya2Fyb3VuZBgFIAEoCUID4EEDIiEKCExvY2F0aW9uEhUKDWxvY2F0aW9uX25hbWUYASABKAkiHwoHUHJvZHVjdBIUCgxwcm9kdWN0X25hbWUYASABKAkigQEKC0V2ZW50SW1wYWN0EjcKB3Byb2R1Y3QYASABKAsyJi5nb29nbGUuY2xvdWQuc2VydmljZWhlYWx0aC52MS5Qcm9kdWN0EjkKCGxvY2F0aW9uGAIgASgLMicuZ29vZ2xlLmNsb3VkLnNlcnZpY2VoZWFsdGgudjEuTG9jYXRpb24ilAMKEk9yZ2FuaXphdGlvbkltcGFjdBIUCgRuYW1lGAEgASgJQgbgQQPgQQgSOgoGZXZlbnRzGAIgAygJQirgQQP6QSQKInNlcnZpY2VoZWFsdGguZ29vZ2xlYXBpcy5jb20vRXZlbnQSOAoFYXNzZXQYAyABKAsyJC5nb29nbGUuY2xvdWQuc2VydmljZWhlYWx0aC52MS5Bc3NldEID4EEDEjQKC3VwZGF0ZV90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDOrsB6kG3AQovc2VydmljZWhlYWx0aC5nb29nbGVhcGlzLmNvbS9Pcmdhbml6YXRpb25JbXBhY3QSW29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbn0vbG9jYXRpb25zL3tsb2NhdGlvbn0vb3JnYW5pemF0aW9uSW1wYWN0cy97b3JnYW5pemF0aW9uX2ltcGFjdH0qE29yZ2FuaXphdGlvbkltcGFjdHMyEm9yZ2FuaXphdGlvbkltcGFjdCI5CgVBc3NldBIXCgphc3NldF9uYW1lGAEgASgJQgPgQQMSFwoKYXNzZXRfdHlwZRgCIAEoCUID4EEDItIBChFMaXN0RXZlbnRzUmVxdWVzdBI6CgZwYXJlbnQYASABKAlCKuBBAvpBJBIic2VydmljZWhlYWx0aC5nb29nbGVhcGlzLmNvbS9FdmVudBIWCglwYWdlX3NpemUYAiABKAVCA+BBARIXCgpwYWdlX3Rva2VuGAMgASgJQgPgQQESEwoGZmlsdGVyGAQgASgJQgPgQQESOwoEdmlldxgGIAEoDjIoLmdvb2dsZS5jbG91ZC5zZXJ2aWNlaGVhbHRoLnYxLkV2ZW50Vmlld0ID4EEBIocBChJMaXN0RXZlbnRzUmVzcG9uc2USOQoGZXZlbnRzGAEgAygLMiQuZ29vZ2xlLmNsb3VkLnNlcnZpY2VoZWFsdGgudjEuRXZlbnRCA+BBAxIcCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAlCA+BBAxIYCgt1bnJlYWNoYWJsZRgDIAMoCUID4EEDIksKD0dldEV2ZW50UmVxdWVzdBI4CgRuYW1lGAEgASgJQirgQQL6QSQKInNlcnZpY2VoZWFsdGguZ29vZ2xlYXBpcy5jb20vRXZlbnQi9gEKHUxpc3RPcmdhbml6YXRpb25FdmVudHNSZXF1ZXN0EkYKBnBhcmVudBgBIAEoCUI24EEC+kEwEi5zZXJ2aWNlaGVhbHRoLmdvb2dsZWFwaXMuY29tL09yZ2FuaXphdGlvbkV2ZW50EhYKCXBhZ2Vfc2l6ZRgCIAEoBUID4EEBEhcKCnBhZ2VfdG9rZW4YAyABKAlCA+BBARITCgZmaWx0ZXIYBCABKAlCA+BBARJHCgR2aWV3GAYgASgOMjQuZ29vZ2xlLmNsb3VkLnNlcnZpY2VoZWFsdGgudjEuT3JnYW5pemF0aW9uRXZlbnRWaWV3QgPgQQEirAEKHkxpc3RPcmdhbml6YXRpb25FdmVudHNSZXNwb25zZRJSChNvcmdhbml6YXRpb25fZXZlbnRzGAEgAygLMjAuZ29vZ2xlLmNsb3VkLnNlcnZpY2VoZWFsdGgudjEuT3JnYW5pemF0aW9uRXZlbnRCA+BBAxIcCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAlCA+BBAxIYCgt1bnJlYWNoYWJsZRgDIAMoCUID4EEDImMKG0dldE9yZ2FuaXphdGlvbkV2ZW50UmVxdWVzdBJECgRuYW1lGAEgASgJQjbgQQL6QTAKLnNlcnZpY2VoZWFsdGguZ29vZ2xlYXBpcy5jb20vT3JnYW5pemF0aW9uRXZlbnQirwEKHkxpc3RPcmdhbml6YXRpb25JbXBhY3RzUmVxdWVzdBJHCgZwYXJlbnQYASABKAlCN+BBAvpBMRIvc2VydmljZWhlYWx0aC5nb29nbGVhcGlzLmNvbS9Pcmdhbml6YXRpb25JbXBhY3QSFgoJcGFnZV9zaXplGAIgASgFQgPgQQESFwoKcGFnZV90b2tlbhgDIAEoCUID4EEBEhMKBmZpbHRlchgEIAEoCUID4EEBIq8BCh9MaXN0T3JnYW5pemF0aW9uSW1wYWN0c1Jlc3BvbnNlElQKFG9yZ2FuaXphdGlvbl9pbXBhY3RzGAEgAygLMjEuZ29vZ2xlLmNsb3VkLnNlcnZpY2VoZWFsdGgudjEuT3JnYW5pemF0aW9uSW1wYWN0QgPgQQMSHAoPbmV4dF9wYWdlX3Rva2VuGAIgASgJQgPgQQMSGAoLdW5yZWFjaGFibGUYAyADKAlCA+BBAyJlChxHZXRPcmdhbml6YXRpb25JbXBhY3RSZXF1ZXN0EkUKBG5hbWUYASABKAlCN+BBAvpBMQovc2VydmljZWhlYWx0aC5nb29nbGVhcGlzLmNvbS9Pcmdhbml6YXRpb25JbXBhY3QqUgoJRXZlbnRWaWV3EhoKFkVWRU5UX1ZJRVdfVU5TUEVDSUZJRUQQABIUChBFVkVOVF9WSUVXX0JBU0lDEAESEwoPRVZFTlRfVklFV19GVUxMEAIqhQEKFU9yZ2FuaXphdGlvbkV2ZW50VmlldxInCiNPUkdBTklaQVRJT05fRVZFTlRfVklFV19VTlNQRUNJRklFRBAAEiEKHU9SR0FOSVpBVElPTl9FVkVOVF9WSUVXX0JBU0lDEAESIAocT1JHQU5JWkFUSU9OX0VWRU5UX1ZJRVdfRlVMTBACQs8CCiFjb20uZ29vZ2xlLmNsb3VkLnNlcnZpY2VoZWFsdGgudjFCE0V2ZW50UmVzb3VyY2VzUHJvdG9QAVpHY2xvdWQuZ29vZ2xlLmNvbS9nby9zZXJ2aWNlaGVhbHRoL2FwaXYxL3NlcnZpY2VoZWFsdGhwYjtzZXJ2aWNlaGVhbHRocGKqAh1Hb29nbGUuQ2xvdWQuU2VydmljZUhlYWx0aC5WMcoCHUdvb2dsZVxDbG91ZFxTZXJ2aWNlSGVhbHRoXFYx6gIgR29vZ2xlOjpDbG91ZDo6U2VydmljZUhlYWx0aDo6VjHqQWYKMXNlcnZpY2VoZWFsdGguZ29vZ2xlYXBpcy5jb20vT3JnYW5pemF0aW9uTG9jYXRpb24SMW9yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbn0vbG9jYXRpb25zL3tsb2NhdGlvbn1iBnByb3RvMw", [file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_timestamp]);

/**
 * Represents service health events that may affect Google Cloud products.
 * Event resource is a read-only view and does not allow any modifications. All
 * fields are output only.
 *
 * @generated from message google.cloud.servicehealth.v1.Event
 */
export type Event = Message<"google.cloud.servicehealth.v1.Event"> & {
  /**
   * Output only. Identifier. Name of the event. Unique name of the event in
   * this scope including project and location using the form
   * `projects/{project_id}/locations/{location}/events/{event_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Brief description for the event.
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * Output only. Free-form, human-readable description.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Output only. The category of the event.
   *
   * @generated from field: google.cloud.servicehealth.v1.Event.EventCategory category = 4;
   */
  category: Event_EventCategory;

  /**
   * Output only. The detailed category of the event.
   *
   * @generated from field: google.cloud.servicehealth.v1.Event.DetailedCategory detailed_category = 21;
   */
  detailedCategory: Event_DetailedCategory;

  /**
   * Output only. The current state of the event.
   *
   * @generated from field: google.cloud.servicehealth.v1.Event.State state = 5;
   */
  state: Event_State;

  /**
   * Output only. The current detailed state of the incident.
   *
   * @generated from field: google.cloud.servicehealth.v1.Event.DetailedState detailed_state = 19;
   */
  detailedState: Event_DetailedState;

  /**
   * Google Cloud products and locations impacted by the event.
   *
   * @generated from field: repeated google.cloud.servicehealth.v1.EventImpact event_impacts = 20;
   */
  eventImpacts: EventImpact[];

  /**
   * Output only. Communicates why a given event is deemed relevant in the
   * context of a given project.
   *
   * @generated from field: google.cloud.servicehealth.v1.Event.Relevance relevance = 8;
   */
  relevance: Event_Relevance;

  /**
   * Output only. Event updates are correspondence from Google.
   *
   * @generated from field: repeated google.cloud.servicehealth.v1.EventUpdate updates = 9;
   */
  updates: EventUpdate[];

  /**
   * Output only. When `detailed_state`=`MERGED`, `parent_event` contains the
   * name of the parent event. All further updates will be published to the
   * parent event.
   *
   * @generated from field: string parent_event = 10;
   */
  parentEvent: string;

  /**
   * Output only. The time when the event was last modified.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 12;
   */
  updateTime?: Timestamp;

  /**
   * Output only. The start time of the event, if applicable.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 13;
   */
  startTime?: Timestamp;

  /**
   * Output only. The end time of the event, if applicable.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 14;
   */
  endTime?: Timestamp;

  /**
   * Output only. The time when the next update can be expected.
   *
   * @generated from field: google.protobuf.Timestamp next_update_time = 15;
   */
  nextUpdateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.servicehealth.v1.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export const EventSchema: GenMessage<Event> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 0);

/**
 * The category of the event. This enum lists all possible categories of
 * event.
 *
 * @generated from enum google.cloud.servicehealth.v1.Event.EventCategory
 */
export enum Event_EventCategory {
  /**
   * Unspecified category.
   *
   * @generated from enum value: EVENT_CATEGORY_UNSPECIFIED = 0;
   */
  EVENT_CATEGORY_UNSPECIFIED = 0,

  /**
   * Event category for service outage or degradation.
   *
   * @generated from enum value: INCIDENT = 2;
   */
  INCIDENT = 2,
}

/**
 * Describes the enum google.cloud.servicehealth.v1.Event.EventCategory.
 */
export const Event_EventCategorySchema: GenEnum<Event_EventCategory> = /*@__PURE__*/
  enumDesc(file_google_cloud_servicehealth_v1_event_resources, 0, 0);

/**
 * The detailed category of an event. Contains all possible states for all
 * event categories.
 *
 * @generated from enum google.cloud.servicehealth.v1.Event.DetailedCategory
 */
export enum Event_DetailedCategory {
  /**
   * Unspecified detailed category.
   *
   * @generated from enum value: DETAILED_CATEGORY_UNSPECIFIED = 0;
   */
  DETAILED_CATEGORY_UNSPECIFIED = 0,

  /**
   * Indicates an event with category INCIDENT has a confirmed impact to at
   * least one Google Cloud product.
   *
   * @generated from enum value: CONFIRMED_INCIDENT = 1;
   */
  CONFIRMED_INCIDENT = 1,

  /**
   * Indicates an event with category INCIDENT is under investigation to
   * determine if it has a confirmed impact on any Google Cloud products.
   *
   * @generated from enum value: EMERGING_INCIDENT = 2;
   */
  EMERGING_INCIDENT = 2,
}

/**
 * Describes the enum google.cloud.servicehealth.v1.Event.DetailedCategory.
 */
export const Event_DetailedCategorySchema: GenEnum<Event_DetailedCategory> = /*@__PURE__*/
  enumDesc(file_google_cloud_servicehealth_v1_event_resources, 0, 1);

/**
 * The state of the event. This enum lists all possible states of event.
 *
 * @generated from enum google.cloud.servicehealth.v1.Event.State
 */
export enum Event_State {
  /**
   * Unspecified state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Event is actively affecting a Google Cloud product and will continue to
   * receive updates.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * Event is no longer affecting the Google Cloud product or has been merged
   * with another event.
   *
   * @generated from enum value: CLOSED = 2;
   */
  CLOSED = 2,
}

/**
 * Describes the enum google.cloud.servicehealth.v1.Event.State.
 */
export const Event_StateSchema: GenEnum<Event_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_servicehealth_v1_event_resources, 0, 2);

/**
 * The detailed state of the incident. This enum lists all possible detailed
 * states of an incident.
 *
 * @generated from enum google.cloud.servicehealth.v1.Event.DetailedState
 */
export enum Event_DetailedState {
  /**
   * Unspecified detail state.
   *
   * @generated from enum value: DETAILED_STATE_UNSPECIFIED = 0;
   */
  DETAILED_STATE_UNSPECIFIED = 0,

  /**
   * Google engineers are actively investigating the event to determine the
   * impact.
   *
   * @generated from enum value: EMERGING = 1;
   */
  EMERGING = 1,

  /**
   * The incident is confirmed and impacting at least one Google Cloud
   * product. Ongoing status updates will be provided until it is resolved.
   *
   * @generated from enum value: CONFIRMED = 2;
   */
  CONFIRMED = 2,

  /**
   * The incident is no longer affecting any Google Cloud product, and there
   * will be no further updates.
   *
   * @generated from enum value: RESOLVED = 3;
   */
  RESOLVED = 3,

  /**
   * The incident was merged into a parent incident. All further updates will
   * be published to the parent only. The `parent_event` field contains the
   * name of the parent.
   *
   * @generated from enum value: MERGED = 4;
   */
  MERGED = 4,

  /**
   * The incident was automatically closed because of the following reasons:
   *
   *  * The impact of the incident could not be confirmed.
   *  * The incident was intermittent or resolved itself.
   *
   *  The incident does not have a resolution because no action or
   *  investigation happened. If it is intermittent, the incident may reopen.
   *
   * @generated from enum value: AUTO_CLOSED = 9;
   */
  AUTO_CLOSED = 9,

  /**
   * Upon investigation, Google engineers concluded that the incident is not
   * affecting a Google Cloud product. This state can change if the incident
   * is reviewed again.
   *
   * @generated from enum value: FALSE_POSITIVE = 10;
   */
  FALSE_POSITIVE = 10,
}

/**
 * Describes the enum google.cloud.servicehealth.v1.Event.DetailedState.
 */
export const Event_DetailedStateSchema: GenEnum<Event_DetailedState> = /*@__PURE__*/
  enumDesc(file_google_cloud_servicehealth_v1_event_resources, 0, 3);

/**
 * Communicates why a given incident is deemed relevant in the context of a
 * given project. This enum lists all possible detailed states of relevance.
 *
 * @generated from enum google.cloud.servicehealth.v1.Event.Relevance
 */
export enum Event_Relevance {
  /**
   * Unspecified relevance.
   *
   * @generated from enum value: RELEVANCE_UNSPECIFIED = 0;
   */
  RELEVANCE_UNSPECIFIED = 0,

  /**
   * The relevance of the incident to the project is unknown.
   *
   * @generated from enum value: UNKNOWN = 2;
   */
  UNKNOWN = 2,

  /**
   * The incident does not impact the project.
   *
   * @generated from enum value: NOT_IMPACTED = 6;
   */
  NOT_IMPACTED = 6,

  /**
   * The incident is associated with a Google Cloud product your project uses,
   * but the incident may not be impacting your project. For example, the
   * incident may be impacting a Google Cloud product that your project uses,
   * but in a location that your project does not use.
   *
   * @generated from enum value: PARTIALLY_RELATED = 7;
   */
  PARTIALLY_RELATED = 7,

  /**
   * The incident has a direct connection with your project and impacts a
   * Google Cloud product in a location your project uses.
   *
   * @generated from enum value: RELATED = 8;
   */
  RELATED = 8,

  /**
   * The incident is verified to be impacting your project.
   *
   * @generated from enum value: IMPACTED = 9;
   */
  IMPACTED = 9,
}

/**
 * Describes the enum google.cloud.servicehealth.v1.Event.Relevance.
 */
export const Event_RelevanceSchema: GenEnum<Event_Relevance> = /*@__PURE__*/
  enumDesc(file_google_cloud_servicehealth_v1_event_resources, 0, 4);

/**
 * Represents service health events that may affect Google Cloud products used
 * across the organization. It is a read-only view and does not allow any
 * modifications.
 *
 * @generated from message google.cloud.servicehealth.v1.OrganizationEvent
 */
export type OrganizationEvent = Message<"google.cloud.servicehealth.v1.OrganizationEvent"> & {
  /**
   * Output only. Identifier. Name of the event. Unique name of the event in
   * this scope including organization ID and location using the form
   * `organizations/{organization_id}/locations/{location}/organizationEvents/{event_id}`.
   *
   * `organization_id` - see [Getting your organization resource
   * ID](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id).<br>
   * `location` - The location to get the service health events from.<br>
   * `event_id` - Organization event ID to retrieve.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Brief description for the event.
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * Output only. Free-form, human-readable description.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Output only. The category of the event.
   *
   * @generated from field: google.cloud.servicehealth.v1.OrganizationEvent.EventCategory category = 4;
   */
  category: OrganizationEvent_EventCategory;

  /**
   * Output only. The detailed category of the event.
   *
   * @generated from field: google.cloud.servicehealth.v1.OrganizationEvent.DetailedCategory detailed_category = 17;
   */
  detailedCategory: OrganizationEvent_DetailedCategory;

  /**
   * Output only. The current state of the event.
   *
   * @generated from field: google.cloud.servicehealth.v1.OrganizationEvent.State state = 5;
   */
  state: OrganizationEvent_State;

  /**
   * Output only. The current detailed state of the incident.
   *
   * @generated from field: google.cloud.servicehealth.v1.OrganizationEvent.DetailedState detailed_state = 16;
   */
  detailedState: OrganizationEvent_DetailedState;

  /**
   * Output only. Represents the Google Cloud products and locations impacted by
   * the event.
   *
   * @generated from field: repeated google.cloud.servicehealth.v1.EventImpact event_impacts = 15;
   */
  eventImpacts: EventImpact[];

  /**
   * Output only. Incident-only field. Event updates are correspondence from
   * Google.
   *
   * @generated from field: repeated google.cloud.servicehealth.v1.EventUpdate updates = 8;
   */
  updates: EventUpdate[];

  /**
   * Output only. When `detailed_state`=`MERGED`, `parent_event` contains the
   * name of the parent event. All further updates will be published to the
   * parent event.
   *
   * @generated from field: string parent_event = 9;
   */
  parentEvent: string;

  /**
   * Output only. The time the update was posted.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 11;
   */
  updateTime?: Timestamp;

  /**
   * Output only. The start time of the event, if applicable.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 12;
   */
  startTime?: Timestamp;

  /**
   * Output only. The end time of the event, if applicable.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 13;
   */
  endTime?: Timestamp;

  /**
   * Output only. Incident-only field. The time when the next update can be
   * expected.
   *
   * @generated from field: google.protobuf.Timestamp next_update_time = 14;
   */
  nextUpdateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.servicehealth.v1.OrganizationEvent.
 * Use `create(OrganizationEventSchema)` to create a new message.
 */
export const OrganizationEventSchema: GenMessage<OrganizationEvent> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 1);

/**
 * The category of the event. This enum lists all possible categories of
 * event.
 *
 * @generated from enum google.cloud.servicehealth.v1.OrganizationEvent.EventCategory
 */
export enum OrganizationEvent_EventCategory {
  /**
   * Unspecified category.
   *
   * @generated from enum value: EVENT_CATEGORY_UNSPECIFIED = 0;
   */
  EVENT_CATEGORY_UNSPECIFIED = 0,

  /**
   * Event category for service outage or degradation.
   *
   * @generated from enum value: INCIDENT = 2;
   */
  INCIDENT = 2,
}

/**
 * Describes the enum google.cloud.servicehealth.v1.OrganizationEvent.EventCategory.
 */
export const OrganizationEvent_EventCategorySchema: GenEnum<OrganizationEvent_EventCategory> = /*@__PURE__*/
  enumDesc(file_google_cloud_servicehealth_v1_event_resources, 1, 0);

/**
 * The detailed category of an event. Contains all possible states for all
 * event categories.
 *
 * @generated from enum google.cloud.servicehealth.v1.OrganizationEvent.DetailedCategory
 */
export enum OrganizationEvent_DetailedCategory {
  /**
   * Unspecified detailed category.
   *
   * @generated from enum value: DETAILED_CATEGORY_UNSPECIFIED = 0;
   */
  DETAILED_CATEGORY_UNSPECIFIED = 0,

  /**
   * Indicates an event with category INCIDENT has a confirmed impact to at
   * least one Google Cloud product.
   *
   * @generated from enum value: CONFIRMED_INCIDENT = 1;
   */
  CONFIRMED_INCIDENT = 1,

  /**
   * Indicates an event with category INCIDENT is under investigation to
   * determine if it has a confirmed impact on any Google Cloud products.
   *
   * @generated from enum value: EMERGING_INCIDENT = 2;
   */
  EMERGING_INCIDENT = 2,
}

/**
 * Describes the enum google.cloud.servicehealth.v1.OrganizationEvent.DetailedCategory.
 */
export const OrganizationEvent_DetailedCategorySchema: GenEnum<OrganizationEvent_DetailedCategory> = /*@__PURE__*/
  enumDesc(file_google_cloud_servicehealth_v1_event_resources, 1, 1);

/**
 * The state of the organization event. This enum lists all possible states of
 * event.
 *
 * @generated from enum google.cloud.servicehealth.v1.OrganizationEvent.State
 */
export enum OrganizationEvent_State {
  /**
   * Unspecified state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Event is actively affecting a Google Cloud product and will continue to
   * receive updates.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * Event is no longer affecting the Google Cloud product or has been merged
   * with another event.
   *
   * @generated from enum value: CLOSED = 2;
   */
  CLOSED = 2,
}

/**
 * Describes the enum google.cloud.servicehealth.v1.OrganizationEvent.State.
 */
export const OrganizationEvent_StateSchema: GenEnum<OrganizationEvent_State> = /*@__PURE__*/
  enumDesc(file_google_cloud_servicehealth_v1_event_resources, 1, 2);

/**
 * The detailed state of the incident. This enum lists all possible detailed
 * states of an incident.
 *
 * @generated from enum google.cloud.servicehealth.v1.OrganizationEvent.DetailedState
 */
export enum OrganizationEvent_DetailedState {
  /**
   * Unspecified detail state.
   *
   * @generated from enum value: DETAILED_STATE_UNSPECIFIED = 0;
   */
  DETAILED_STATE_UNSPECIFIED = 0,

  /**
   * Google engineers are actively investigating the incident to determine the
   * impact.
   *
   * @generated from enum value: EMERGING = 1;
   */
  EMERGING = 1,

  /**
   * The incident is confirmed and impacting at least one Google Cloud
   * product. Ongoing status updates will be provided until it is resolved.
   *
   * @generated from enum value: CONFIRMED = 2;
   */
  CONFIRMED = 2,

  /**
   * The incident is no longer affecting any Google Cloud product, and there
   * will be no further updates.
   *
   * @generated from enum value: RESOLVED = 3;
   */
  RESOLVED = 3,

  /**
   * The incident was merged into a parent event. All further updates will be
   * published to the parent only. The `parent_event` contains the name of the
   * parent.
   *
   * @generated from enum value: MERGED = 4;
   */
  MERGED = 4,

  /**
   * The incident was automatically closed because of the following reasons:
   *
   *  * The impact of the incident could not be confirmed.
   *  * The incident was intermittent or resolved itself.
   *
   *  The incident does not have a resolution because no action or
   *  investigation happened. If it is intermittent, the incident may reopen.
   *
   * @generated from enum value: AUTO_CLOSED = 9;
   */
  AUTO_CLOSED = 9,

  /**
   * Upon investigation, Google engineers concluded that the incident is not
   * affecting a Google Cloud product. This state can change if the incident
   * is reviewed again.
   *
   * @generated from enum value: FALSE_POSITIVE = 10;
   */
  FALSE_POSITIVE = 10,
}

/**
 * Describes the enum google.cloud.servicehealth.v1.OrganizationEvent.DetailedState.
 */
export const OrganizationEvent_DetailedStateSchema: GenEnum<OrganizationEvent_DetailedState> = /*@__PURE__*/
  enumDesc(file_google_cloud_servicehealth_v1_event_resources, 1, 3);

/**
 * Records an update made to the event.
 *
 * @generated from message google.cloud.servicehealth.v1.EventUpdate
 */
export type EventUpdate = Message<"google.cloud.servicehealth.v1.EventUpdate"> & {
  /**
   * Output only. The time the update was posted.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 1;
   */
  updateTime?: Timestamp;

  /**
   * Output only. Brief title for the event.
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * Output only. Free-form, human-readable description.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Output only. Symptoms of the event, if available.
   *
   * @generated from field: string symptom = 4;
   */
  symptom: string;

  /**
   * Output only. Workaround steps to remediate the event impact, if available.
   *
   * @generated from field: string workaround = 5;
   */
  workaround: string;
};

/**
 * Describes the message google.cloud.servicehealth.v1.EventUpdate.
 * Use `create(EventUpdateSchema)` to create a new message.
 */
export const EventUpdateSchema: GenMessage<EventUpdate> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 2);

/**
 * Represents the locations impacted by the event.
 *
 * @generated from message google.cloud.servicehealth.v1.Location
 */
export type Location = Message<"google.cloud.servicehealth.v1.Location"> & {
  /**
   * Location impacted by the event. Example: `"us-central1"`
   *
   * @generated from field: string location_name = 1;
   */
  locationName: string;
};

/**
 * Describes the message google.cloud.servicehealth.v1.Location.
 * Use `create(LocationSchema)` to create a new message.
 */
export const LocationSchema: GenMessage<Location> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 3);

/**
 * Represents the Google Cloud product impacted by the event.
 *
 * @generated from message google.cloud.servicehealth.v1.Product
 */
export type Product = Message<"google.cloud.servicehealth.v1.Product"> & {
  /**
   * Google Cloud product impacted by the event. Example: `"Google Cloud SQL"`
   *
   * @generated from field: string product_name = 1;
   */
  productName: string;
};

/**
 * Describes the message google.cloud.servicehealth.v1.Product.
 * Use `create(ProductSchema)` to create a new message.
 */
export const ProductSchema: GenMessage<Product> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 4);

/**
 * Represents the Google Cloud products and locations impacted by the event.
 *
 * @generated from message google.cloud.servicehealth.v1.EventImpact
 */
export type EventImpact = Message<"google.cloud.servicehealth.v1.EventImpact"> & {
  /**
   * Google Cloud product impacted by the event.
   *
   * @generated from field: google.cloud.servicehealth.v1.Product product = 1;
   */
  product?: Product;

  /**
   * Location impacted by the event.
   *
   * @generated from field: google.cloud.servicehealth.v1.Location location = 2;
   */
  location?: Location;
};

/**
 * Describes the message google.cloud.servicehealth.v1.EventImpact.
 * Use `create(EventImpactSchema)` to create a new message.
 */
export const EventImpactSchema: GenMessage<EventImpact> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 5);

/**
 * Represents impact to assets at organizational level. It is a read-only view
 * and does not allow any modifications.
 *
 * @generated from message google.cloud.servicehealth.v1.OrganizationImpact
 */
export type OrganizationImpact = Message<"google.cloud.servicehealth.v1.OrganizationImpact"> & {
  /**
   * Output only. Identifier. Unique name of the organization impact in this
   * scope including organization and location using the form
   * `organizations/{organization_id}/locations/{location}/organizationImpacts/{organization_impact_id}`.
   *
   * `organization_id` - ID (number) of the organization that contains the
   * event. To get your `organization_id`, see
   * [Getting your organization resource
   * ID](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id).<br>
   * `organization_impact_id` - ID of the [OrganizationImpact
   * resource](/service-health/docs/reference/rest/v1beta/organizations.locations.organizationImpacts#OrganizationImpact).
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. A list of event names impacting the asset.
   *
   * @generated from field: repeated string events = 2;
   */
  events: string[];

  /**
   * Output only. Google Cloud asset possibly impacted by the specified events.
   *
   * @generated from field: google.cloud.servicehealth.v1.Asset asset = 3;
   */
  asset?: Asset;

  /**
   * Output only. The time when the affected project was last modified.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;
};

/**
 * Describes the message google.cloud.servicehealth.v1.OrganizationImpact.
 * Use `create(OrganizationImpactSchema)` to create a new message.
 */
export const OrganizationImpactSchema: GenMessage<OrganizationImpact> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 6);

/**
 * Represents the asset impacted by the events.
 *
 * @generated from message google.cloud.servicehealth.v1.Asset
 */
export type Asset = Message<"google.cloud.servicehealth.v1.Asset"> & {
  /**
   * Output only. Full name of the resource as defined in
   * [Resource
   * Names](https://cloud.google.com/apis/design/resource_names#full_resource_name).
   *
   * @generated from field: string asset_name = 1;
   */
  assetName: string;

  /**
   * Output only. Type of the asset. Example:
   * `"cloudresourcemanager.googleapis.com/Project"`
   *
   * @generated from field: string asset_type = 2;
   */
  assetType: string;
};

/**
 * Describes the message google.cloud.servicehealth.v1.Asset.
 * Use `create(AssetSchema)` to create a new message.
 */
export const AssetSchema: GenMessage<Asset> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 7);

/**
 * @generated from message google.cloud.servicehealth.v1.ListEventsRequest
 */
export type ListEventsRequest = Message<"google.cloud.servicehealth.v1.ListEventsRequest"> & {
  /**
   * Required. Parent value using the form
   * `projects/{project_id}/locations/{location}/events`.
   *
   * `project_id` - ID of the project for which to list service health
   * events.
   * `location` - The location to get the service health events from.
   * To retrieve service health events of category = INCIDENT, use `location` =
   * `global`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of events that should be returned.  Acceptable
   * values are 1 to 100, inclusive. (The default value is 10.) If more results
   * are available, the service returns a next_page_token that you can use to
   * get the next page of results in subsequent list requests. The service may
   * return fewer events than the requested page_size.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token identifying a page of results the server should return.
   * Provide Page token returned by a previous `ListEvents` call to retrieve the
   * next page of results. When paginating, all other parameters provided to
   * `ListEvents` must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. A filter expression that filters resources listed in the
   * response. The expression takes the following forms: <br>
   * *   field=value for `category` and `state`<br>
   * *   field &lt;, >, &lt;=, or >= value for `update_time` <br>
   * Examples: `category=INCIDENT`, `update_time>=2000-01-01T11:30:00-04:00`
   * <br>
   *
   * Multiple filter queries are separated by spaces. Example:
   * `category=INCIDENT state=ACTIVE`.
   *
   * By default, each expression is an AND expression. However, you can include
   * AND and OR expressions explicitly.
   *
   * Filter is supported for the following fields: `category`, `state`,
   * `update_time`
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. Event fields to include in response.
   *
   * @generated from field: google.cloud.servicehealth.v1.EventView view = 6;
   */
  view: EventView;
};

/**
 * Describes the message google.cloud.servicehealth.v1.ListEventsRequest.
 * Use `create(ListEventsRequestSchema)` to create a new message.
 */
export const ListEventsRequestSchema: GenMessage<ListEventsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 8);

/**
 * @generated from message google.cloud.servicehealth.v1.ListEventsResponse
 */
export type ListEventsResponse = Message<"google.cloud.servicehealth.v1.ListEventsResponse"> & {
  /**
   * Output only. List of events.
   *
   * @generated from field: repeated google.cloud.servicehealth.v1.Event events = 1;
   */
  events: Event[];

  /**
   * Output only. The continuation token, used to page through large result
   * sets. Provide this value in a subsequent request as page_token to retrieve
   * the next page.
   *
   * If this field is not present, there are no subsequent results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Output only. Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.servicehealth.v1.ListEventsResponse.
 * Use `create(ListEventsResponseSchema)` to create a new message.
 */
export const ListEventsResponseSchema: GenMessage<ListEventsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 9);

/**
 * Message for getting an event
 *
 * @generated from message google.cloud.servicehealth.v1.GetEventRequest
 */
export type GetEventRequest = Message<"google.cloud.servicehealth.v1.GetEventRequest"> & {
  /**
   * Required. Unique name of the event in this scope including project
   * and location using the form
   * `projects/{project_id}/locations/{location}/events/{event_id}`.
   *
   * `project_id` - Project ID of the project that contains the event. <br>
   * `location` - The location to get the service health events from. <br>
   * `event_id` - Event ID to retrieve.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.servicehealth.v1.GetEventRequest.
 * Use `create(GetEventRequestSchema)` to create a new message.
 */
export const GetEventRequestSchema: GenMessage<GetEventRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 10);

/**
 * @generated from message google.cloud.servicehealth.v1.ListOrganizationEventsRequest
 */
export type ListOrganizationEventsRequest = Message<"google.cloud.servicehealth.v1.ListOrganizationEventsRequest"> & {
  /**
   * Required. Parent value using the form
   * `organizations/{organization_id}/locations/{location}/organizationEvents`.
   *
   * `organization_id` - ID (number) of the project that contains the event. To
   * get your `organization_id`, see
   * [Getting your organization resource
   * ID](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id).<br>
   * `location` - The location to get the service health events from. To
   * retrieve service health events of category = INCIDENT, use `location` =
   * `global`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of events that should be returned.  Acceptable
   * values are `1` to `100`, inclusive. (The default value is `10`.) If more
   * results are available, the service returns a `next_page_token` that you can
   * use to get the next page of results in subsequent list requests. The
   * service may return fewer events than the requested `page_size`.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token identifying a page of results the server should return.
   *
   * Provide Page token returned by a previous `ListOrganizationEvents` call to
   * retrieve the next page of results.
   *
   * When paginating, all other parameters provided to
   * `ListOrganizationEvents` must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. A filter expression that filters resources listed in the
   * response. The expression takes the following forms:
   *
   * *   field=value for `category` and `state`
   * *   field &lt;, >, &lt;=, or >= value for `update_time`
   *
   * Examples: `category=INCIDENT`, `update_time>=2000-01-01T11:30:00-04:00`
   *
   * Multiple filter queries are space-separated. Example:
   * `category=INCIDENT state=ACTIVE`.
   *
   * By default, each expression is an AND expression. However, you can include
   * AND and OR expressions explicitly.
   *
   * Filter is supported for the following fields: `category`, `state`,
   * `update_time`
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. OrganizationEvent fields to include in response.
   *
   * @generated from field: google.cloud.servicehealth.v1.OrganizationEventView view = 6;
   */
  view: OrganizationEventView;
};

/**
 * Describes the message google.cloud.servicehealth.v1.ListOrganizationEventsRequest.
 * Use `create(ListOrganizationEventsRequestSchema)` to create a new message.
 */
export const ListOrganizationEventsRequestSchema: GenMessage<ListOrganizationEventsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 11);

/**
 * @generated from message google.cloud.servicehealth.v1.ListOrganizationEventsResponse
 */
export type ListOrganizationEventsResponse = Message<"google.cloud.servicehealth.v1.ListOrganizationEventsResponse"> & {
  /**
   * Output only. List of organization events affecting an organization.
   *
   * @generated from field: repeated google.cloud.servicehealth.v1.OrganizationEvent organization_events = 1;
   */
  organizationEvents: OrganizationEvent[];

  /**
   * Output only. The continuation token, used to page through large result
   * sets. Provide this value in a subsequent request as `page_token` to
   * retrieve the next page.
   *
   * If this field is not present, there are no subsequent results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Output only. Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.servicehealth.v1.ListOrganizationEventsResponse.
 * Use `create(ListOrganizationEventsResponseSchema)` to create a new message.
 */
export const ListOrganizationEventsResponseSchema: GenMessage<ListOrganizationEventsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 12);

/**
 * @generated from message google.cloud.servicehealth.v1.GetOrganizationEventRequest
 */
export type GetOrganizationEventRequest = Message<"google.cloud.servicehealth.v1.GetOrganizationEventRequest"> & {
  /**
   * Required. Unique name of the event in this scope including organization and
   * event ID using the form
   * `organizations/{organization_id}/locations/locations/global/organizationEvents/{event_id}`.
   *
   * `organization_id` - ID (number) of the project that contains the event. To
   * get your `organization_id`, see
   * [Getting your organization resource
   * ID](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id).<br>
   * `event_id` - Organization event ID to retrieve.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.servicehealth.v1.GetOrganizationEventRequest.
 * Use `create(GetOrganizationEventRequestSchema)` to create a new message.
 */
export const GetOrganizationEventRequestSchema: GenMessage<GetOrganizationEventRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 13);

/**
 * Message for requesting list of OrganizationImpacts
 *
 * @generated from message google.cloud.servicehealth.v1.ListOrganizationImpactsRequest
 */
export type ListOrganizationImpactsRequest = Message<"google.cloud.servicehealth.v1.ListOrganizationImpactsRequest"> & {
  /**
   * Required. Parent value using the form
   * `organizations/{organization_id}/locations/{location}/organizationImpacts`.
   *
   * `organization_id` - ID (number) of the project that contains the event. To
   * get your `organization_id`, see
   * [Getting your organization resource
   * ID](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id).
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of events that should be returned. Acceptable
   * values are `1` to `100`, inclusive. The default value is `10`.
   *
   *  If more results are available, the service returns a
   * `next_page_token` that can be used to get the next page of results in
   * subsequent list requests. The service may return fewer
   * [impacts](/service-health/docs/reference/rest/v1beta/organizations.locations.organizationImpacts#OrganizationImpact)
   * than the requested `page_size`.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A token identifying a page of results the server should return.
   *
   * Provide `page_token` returned by a previous `ListOrganizationImpacts` call
   * to retrieve the next page of results.
   *
   * When paginating, all other parameters provided to `ListOrganizationImpacts`
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. A filter expression that filters resources listed in the
   * response. The expression is in the form of `field:value` for checking if a
   * repeated field contains a value.
   *
   * Example:
   * `events:organizations%2F{organization_id}%2Flocations%2Fglobal%2ForganizationEvents%2Fevent-id`
   *
   * To get your `{organization_id}`, see
   * [Getting your organization resource
   * ID](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id).
   *
   * Multiple filter queries are separated by spaces.
   *
   * By default, each expression is an AND expression. However, you can include
   * AND and OR expressions explicitly.
   * Filter is supported for the following fields: `events`.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;
};

/**
 * Describes the message google.cloud.servicehealth.v1.ListOrganizationImpactsRequest.
 * Use `create(ListOrganizationImpactsRequestSchema)` to create a new message.
 */
export const ListOrganizationImpactsRequestSchema: GenMessage<ListOrganizationImpactsRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 14);

/**
 * @generated from message google.cloud.servicehealth.v1.ListOrganizationImpactsResponse
 */
export type ListOrganizationImpactsResponse = Message<"google.cloud.servicehealth.v1.ListOrganizationImpactsResponse"> & {
  /**
   * Output only. List of
   * [impacts](/service-health/docs/reference/rest/v1beta/organizations.locations.organizationImpacts#OrganizationImpact)
   * for an organization affected by service health events.
   *
   * @generated from field: repeated google.cloud.servicehealth.v1.OrganizationImpact organization_impacts = 1;
   */
  organizationImpacts: OrganizationImpact[];

  /**
   * Output only. The continuation token, used to page through large result
   * sets. Provide this value in a subsequent request as `page_token` to
   * retrieve the next page.
   *
   * If this field is not present, there are no subsequent results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Output only. Locations that could not be reached.
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.cloud.servicehealth.v1.ListOrganizationImpactsResponse.
 * Use `create(ListOrganizationImpactsResponseSchema)` to create a new message.
 */
export const ListOrganizationImpactsResponseSchema: GenMessage<ListOrganizationImpactsResponse> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 15);

/**
 * @generated from message google.cloud.servicehealth.v1.GetOrganizationImpactRequest
 */
export type GetOrganizationImpactRequest = Message<"google.cloud.servicehealth.v1.GetOrganizationImpactRequest"> & {
  /**
   * Required. Name of the resource using the form
   * `organizations/{organization_id}/locations/global/organizationImpacts/{organization_impact_id}`.
   *
   * `organization_id` - ID (number) of the organization that contains the
   * event. To get your `organization_id`, see
   * [Getting your organization resource
   * ID](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id).<br>
   * `organization_impact_id` - ID of the [OrganizationImpact
   * resource](/service-health/docs/reference/rest/v1beta/organizations.locations.organizationImpacts#OrganizationImpact).
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.cloud.servicehealth.v1.GetOrganizationImpactRequest.
 * Use `create(GetOrganizationImpactRequestSchema)` to create a new message.
 */
export const GetOrganizationImpactRequestSchema: GenMessage<GetOrganizationImpactRequest> = /*@__PURE__*/
  messageDesc(file_google_cloud_servicehealth_v1_event_resources, 16);

/**
 * The event fields to include in ListEvents API response. This enum lists all
 * possible event views.
 *
 * @generated from enum google.cloud.servicehealth.v1.EventView
 */
export enum EventView {
  /**
   * Unspecified event view. Default to `EVENT_VIEW_BASIC`.
   *
   * @generated from enum value: EVENT_VIEW_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Includes all fields except `updates`. This view is the default for
   * ListEvents API.
   *
   * @generated from enum value: EVENT_VIEW_BASIC = 1;
   */
  BASIC = 1,

  /**
   * Includes all event fields.
   *
   * @generated from enum value: EVENT_VIEW_FULL = 2;
   */
  FULL = 2,
}

/**
 * Describes the enum google.cloud.servicehealth.v1.EventView.
 */
export const EventViewSchema: GenEnum<EventView> = /*@__PURE__*/
  enumDesc(file_google_cloud_servicehealth_v1_event_resources, 0);

/**
 * The organization event fields to include in ListOrganizationEvents API
 * response. This enum lists all possible organization event views.
 *
 * @generated from enum google.cloud.servicehealth.v1.OrganizationEventView
 */
export enum OrganizationEventView {
  /**
   * Unspecified event view. Default to `ORGANIZATION_EVENT_VIEW_BASIC`.
   *
   * @generated from enum value: ORGANIZATION_EVENT_VIEW_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Includes all organization event fields except `updates`. This view is the
   * default for ListOrganizationEvents API.
   *
   * @generated from enum value: ORGANIZATION_EVENT_VIEW_BASIC = 1;
   */
  BASIC = 1,

  /**
   * Includes all organization event fields.
   *
   * @generated from enum value: ORGANIZATION_EVENT_VIEW_FULL = 2;
   */
  FULL = 2,
}

/**
 * Describes the enum google.cloud.servicehealth.v1.OrganizationEventView.
 */
export const OrganizationEventViewSchema: GenEnum<OrganizationEventView> = /*@__PURE__*/
  enumDesc(file_google_cloud_servicehealth_v1_event_resources, 1);

