// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/ads/searchads360/v0/common/metrics.proto (package google.ads.searchads360.v0.common, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Value } from "./value_pb";
import { file_google_ads_searchads360_v0_common_value } from "./value_pb";
import type { InteractionEventTypeEnum_InteractionEventType } from "../enums/interaction_event_type_pb";
import { file_google_ads_searchads360_v0_enums_interaction_event_type } from "../enums/interaction_event_type_pb";
import type { QualityScoreBucketEnum_QualityScoreBucket } from "../enums/quality_score_bucket_pb";
import { file_google_ads_searchads360_v0_enums_quality_score_bucket } from "../enums/quality_score_bucket_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/ads/searchads360/v0/common/metrics.proto.
 */
export const file_google_ads_searchads360_v0_common_metrics: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_ads_searchads360_v0_common_value, file_google_ads_searchads360_v0_enums_interaction_event_type, file_google_ads_searchads360_v0_enums_quality_score_bucket]);

/**
 * Metrics data.
 *
 * @generated from message google.ads.searchads360.v0.common.Metrics
 */
export type Metrics = Message<"google.ads.searchads360.v0.common.Metrics"> & {
  /**
   * Search absolute top impression share is the percentage of your Search ad
   * impressions that are shown in the most prominent Search position.
   *
   * @generated from field: optional double absolute_top_impression_percentage = 183;
   */
  absoluteTopImpressionPercentage?: number;

  /**
   * All conversions from interactions (as oppose to view through conversions)
   * divided by the number of ad interactions.
   *
   * @generated from field: optional double all_conversions_from_interactions_rate = 191;
   */
  allConversionsFromInteractionsRate?: number;

  /**
   * The value of all conversions.
   *
   * @generated from field: optional double all_conversions_value = 192;
   */
  allConversionsValue?: number;

  /**
   * The value of all conversions. When this column is selected with date, the
   * values in date column means the conversion date. Details for the
   * by_conversion_date columns are available at
   * https://support.google.com/sa360/answer/9250611.
   *
   * @generated from field: double all_conversions_value_by_conversion_date = 240;
   */
  allConversionsValueByConversionDate: number;

  /**
   * The total number of conversions. This includes all conversions regardless
   * of the value of include_in_conversions_metric.
   *
   * @generated from field: optional double all_conversions = 193;
   */
  allConversions?: number;

  /**
   * The total number of conversions. This includes all conversions regardless
   * of the value of include_in_conversions_metric. When this column is selected
   * with date, the values in date column means the conversion date. Details for
   * the by_conversion_date columns are available at
   * https://support.google.com/sa360/answer/9250611.
   *
   * @generated from field: double all_conversions_by_conversion_date = 241;
   */
  allConversionsByConversionDate: number;

  /**
   * The value of all conversions divided by the total cost of ad interactions
   * (such as clicks for text ads or views for video ads).
   *
   * @generated from field: optional double all_conversions_value_per_cost = 194;
   */
  allConversionsValuePerCost?: number;

  /**
   * The number of times people clicked the "Call" button to call a store during
   * or after clicking an ad. This number doesn't include whether or not calls
   * were connected, or the duration of any calls.
   *
   * This metric applies to feed items only.
   *
   * @generated from field: optional double all_conversions_from_click_to_call = 195;
   */
  allConversionsFromClickToCall?: number;

  /**
   * The number of times people clicked a "Get directions" button to navigate to
   * a store after clicking an ad.
   *
   * This metric applies to feed items only.
   *
   * @generated from field: optional double all_conversions_from_directions = 196;
   */
  allConversionsFromDirections?: number;

  /**
   * The value of all conversions from interactions divided by the total number
   * of interactions.
   *
   * @generated from field: optional double all_conversions_from_interactions_value_per_interaction = 197;
   */
  allConversionsFromInteractionsValuePerInteraction?: number;

  /**
   * The number of times people clicked a link to view a store's menu after
   * clicking an ad.
   *
   * This metric applies to feed items only.
   *
   * @generated from field: optional double all_conversions_from_menu = 198;
   */
  allConversionsFromMenu?: number;

  /**
   * The number of times people placed an order at a store after clicking an ad.
   *
   * This metric applies to feed items only.
   *
   * @generated from field: optional double all_conversions_from_order = 199;
   */
  allConversionsFromOrder?: number;

  /**
   * The number of other conversions (for example, posting a review or saving a
   * location for a store) that occurred after people clicked an ad.
   *
   * This metric applies to feed items only.
   *
   * @generated from field: optional double all_conversions_from_other_engagement = 200;
   */
  allConversionsFromOtherEngagement?: number;

  /**
   * Estimated number of times people visited a store after clicking an ad.
   *
   * This metric applies to feed items only.
   *
   * @generated from field: optional double all_conversions_from_store_visit = 201;
   */
  allConversionsFromStoreVisit?: number;

  /**
   * Clicks that Search Ads 360 has successfully recorded and forwarded to an
   * advertiser's landing page.
   *
   * @generated from field: optional double visits = 289;
   */
  visits?: number;

  /**
   * The number of times that people were taken to a store's URL after clicking
   * an ad.
   *
   * This metric applies to feed items only.
   *
   * @generated from field: optional double all_conversions_from_store_website = 202;
   */
  allConversionsFromStoreWebsite?: number;

  /**
   * The average amount you pay per interaction. This amount is the total cost
   * of your ads divided by the total number of interactions.
   *
   * @generated from field: optional double average_cost = 203;
   */
  averageCost?: number;

  /**
   * The total cost of all clicks divided by the total number of clicks
   * received.
   * This metric is a monetary value and returned in the customer's currency by
   * default. See the metrics_currency parameter at
   * https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause
   *
   * @generated from field: optional double average_cpc = 317;
   */
  averageCpc?: number;

  /**
   * Average cost-per-thousand impressions (CPM).
   * This metric is a monetary value and returned in the customer's currency by
   * default. See the metrics_currency parameter at
   * https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause
   *
   * @generated from field: optional double average_cpm = 318;
   */
  averageCpm?: number;

  /**
   * The number of clicks.
   *
   * @generated from field: optional int64 clicks = 131;
   */
  clicks?: bigint;

  /**
   * The estimated percent of times that your ad was eligible to show
   * on the Display Network but didn't because your budget was too low.
   * Note: Content budget lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   *
   * @generated from field: optional double content_budget_lost_impression_share = 159;
   */
  contentBudgetLostImpressionShare?: number;

  /**
   * The impressions you've received on the Display Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Content impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   *
   * @generated from field: optional double content_impression_share = 160;
   */
  contentImpressionShare?: number;

  /**
   * The conversion custom metrics.
   *
   * @generated from field: repeated google.ads.searchads360.v0.common.Value conversion_custom_metrics = 336;
   */
  conversionCustomMetrics: Value[];

  /**
   * The estimated percentage of impressions on the Display Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Content rank lost impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   *
   * @generated from field: optional double content_rank_lost_impression_share = 163;
   */
  contentRankLostImpressionShare?: number;

  /**
   * Average biddable conversions (from interaction) per conversion eligible
   * interaction. Shows how often, on average, an ad interaction leads to a
   * biddable conversion.
   *
   * @generated from field: optional double conversions_from_interactions_rate = 284;
   */
  conversionsFromInteractionsRate?: number;

  /**
   * The value of client account conversions. This only
   * includes conversion actions which
   * include_in_client_account_conversions_metric attribute is set to true. If
   * you use conversion-based bidding, your bid strategies will optimize for
   * these conversions.
   *
   * @generated from field: optional double client_account_conversions_value = 165;
   */
  clientAccountConversionsValue?: number;

  /**
   * The sum of biddable conversions value by conversion date. When this
   * column is selected with date, the values in date column means the
   * conversion date.
   *
   * @generated from field: double conversions_value_by_conversion_date = 283;
   */
  conversionsValueByConversionDate: number;

  /**
   * The value of biddable conversion divided by the total cost of conversion
   * eligible interactions.
   *
   * @generated from field: optional double conversions_value_per_cost = 288;
   */
  conversionsValuePerCost?: number;

  /**
   * The value of conversions from interactions divided by the number of ad
   * interactions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   *
   * @generated from field: optional double conversions_from_interactions_value_per_interaction = 167;
   */
  conversionsFromInteractionsValuePerInteraction?: number;

  /**
   * The number of client account conversions. This only
   * includes conversion actions which
   * include_in_client_account_conversions_metric attribute is set to true. If
   * you use conversion-based bidding, your bid strategies will optimize for
   * these conversions.
   *
   * @generated from field: optional double client_account_conversions = 168;
   */
  clientAccountConversions?: number;

  /**
   * The sum of conversions by conversion date for biddable conversion types.
   * Can be fractional due to attribution modeling. When this column is selected
   * with date, the values in date column means the conversion date.
   *
   * @generated from field: double conversions_by_conversion_date = 282;
   */
  conversionsByConversionDate: number;

  /**
   * The sum of your cost-per-click (CPC) and cost-per-thousand impressions
   * (CPM) costs during this period.
   * This metric is a monetary value and returned in the customer's currency by
   * default. See the metrics_currency parameter at
   * https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause
   *
   * @generated from field: optional int64 cost_micros = 316;
   */
  costMicros?: bigint;

  /**
   * The cost of ad interactions divided by all conversions.
   *
   * @generated from field: optional double cost_per_all_conversions = 170;
   */
  costPerAllConversions?: number;

  /**
   * Average conversion eligible cost per biddable conversion.
   *
   * @generated from field: optional double cost_per_conversion = 286;
   */
  costPerConversion?: number;

  /**
   * The cost of ad interactions divided by current model attributed
   * conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   *
   * @generated from field: optional double cost_per_current_model_attributed_conversion = 172;
   */
  costPerCurrentModelAttributedConversion?: number;

  /**
   * Conversions from when a customer clicks on an ad on one device,
   * then converts on a different device or browser.
   * Cross-device conversions are already included in all_conversions.
   *
   * @generated from field: optional double cross_device_conversions = 173;
   */
  crossDeviceConversions?: number;

  /**
   * The sum of the value of cross-device conversions.
   *
   * @generated from field: optional double cross_device_conversions_value = 253;
   */
  crossDeviceConversionsValue?: number;

  /**
   * The number of clicks your ad receives (Clicks) divided by the number
   * of times your ad is shown (Impressions).
   *
   * @generated from field: optional double ctr = 174;
   */
  ctr?: number;

  /**
   * The number of conversions. This only includes conversion actions which
   * include_in_conversions_metric attribute is set to true. If you use
   * conversion-based bidding, your bid strategies will optimize for these
   * conversions.
   *
   * @generated from field: optional double conversions = 251;
   */
  conversions?: number;

  /**
   * The sum of conversion values for the conversions included in the
   * "conversions" field. This metric is useful only if you entered a value for
   * your conversion actions.
   *
   * @generated from field: optional double conversions_value = 252;
   */
  conversionsValue?: number;

  /**
   * The creative historical quality score.
   *
   * @generated from field: google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_creative_quality_score = 80;
   */
  historicalCreativeQualityScore: QualityScoreBucketEnum_QualityScoreBucket;

  /**
   * The average quality score.
   *
   * @generated from field: optional double average_quality_score = 364;
   */
  averageQualityScore?: number;

  /**
   * The quality of historical landing page experience.
   *
   * @generated from field: google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_landing_page_quality_score = 81;
   */
  historicalLandingPageQualityScore: QualityScoreBucketEnum_QualityScoreBucket;

  /**
   * The historical quality score.
   *
   * @generated from field: optional int64 historical_quality_score = 216;
   */
  historicalQualityScore?: bigint;

  /**
   * The historical search predicted click through rate (CTR).
   *
   * @generated from field: google.ads.searchads360.v0.enums.QualityScoreBucketEnum.QualityScoreBucket historical_search_predicted_ctr = 83;
   */
  historicalSearchPredictedCtr: QualityScoreBucketEnum_QualityScoreBucket;

  /**
   * Count of how often your ad has appeared on a search results page or
   * website on the Google Network.
   *
   * @generated from field: optional int64 impressions = 221;
   */
  impressions?: bigint;

  /**
   * How often people interact with your ad after it is shown to them.
   * This is the number of interactions divided by the number of times your ad
   * is shown.
   *
   * @generated from field: optional double interaction_rate = 222;
   */
  interactionRate?: number;

  /**
   * The number of interactions.
   * An interaction is the main user action associated with an ad format-clicks
   * for text and shopping ads, views for video ads, and so on.
   *
   * @generated from field: optional int64 interactions = 223;
   */
  interactions?: bigint;

  /**
   * The types of payable and free interactions.
   *
   * @generated from field: repeated google.ads.searchads360.v0.enums.InteractionEventTypeEnum.InteractionEventType interaction_event_types = 100;
   */
  interactionEventTypes: InteractionEventTypeEnum_InteractionEventType[];

  /**
   * The percentage of clicks filtered out of your total number of clicks
   * (filtered + non-filtered clicks) during the reporting period.
   *
   * @generated from field: optional double invalid_click_rate = 224;
   */
  invalidClickRate?: number;

  /**
   * Number of clicks Google considers illegitimate and doesn't charge you for.
   *
   * @generated from field: optional int64 invalid_clicks = 225;
   */
  invalidClicks?: bigint;

  /**
   * The percentage of mobile clicks that go to a mobile-friendly page.
   *
   * @generated from field: optional double mobile_friendly_clicks_percentage = 229;
   */
  mobileFriendlyClicksPercentage?: number;

  /**
   * The raw event conversion metrics.
   *
   * @generated from field: repeated google.ads.searchads360.v0.common.Value raw_event_conversion_metrics = 337;
   */
  rawEventConversionMetrics: Value[];

  /**
   * The percentage of the customer's Shopping or Search ad impressions that are
   * shown in the most prominent Shopping position. See
   * https://support.google.com/sa360/answer/9566729
   * for details. Any value below 0.1 is reported as 0.0999.
   *
   * @generated from field: optional double search_absolute_top_impression_share = 136;
   */
  searchAbsoluteTopImpressionShare?: number;

  /**
   * The number estimating how often your ad wasn't the very first ad among the
   * top ads in the search results due to a low budget. Note: Search
   * budget lost absolute top impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   *
   * @generated from field: optional double search_budget_lost_absolute_top_impression_share = 137;
   */
  searchBudgetLostAbsoluteTopImpressionShare?: number;

  /**
   * The estimated percent of times that your ad was eligible to show on the
   * Search Network but didn't because your budget was too low. Note: Search
   * budget lost impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   *
   * @generated from field: optional double search_budget_lost_impression_share = 138;
   */
  searchBudgetLostImpressionShare?: number;

  /**
   * The number estimating how often your ad didn't show adjacent to the top
   * organic search results due to a low budget. Note: Search
   * budget lost top impression share is reported in the range of 0 to 0.9. Any
   * value above 0.9 is reported as 0.9001.
   *
   * @generated from field: optional double search_budget_lost_top_impression_share = 139;
   */
  searchBudgetLostTopImpressionShare?: number;

  /**
   * The number of clicks you've received on the Search Network
   * divided by the estimated number of clicks you were eligible to receive.
   * Note: Search click share is reported in the range of 0.1 to 1. Any value
   * below 0.1 is reported as 0.0999.
   *
   * @generated from field: optional double search_click_share = 140;
   */
  searchClickShare?: number;

  /**
   * The impressions you've received divided by the estimated number of
   * impressions you were eligible to receive on the Search Network for search
   * terms that matched your keywords exactly (or were close variants of your
   * keyword), regardless of your keyword match types. Note: Search exact match
   * impression share is reported in the range of 0.1 to 1. Any value below 0.1
   * is reported as 0.0999.
   *
   * @generated from field: optional double search_exact_match_impression_share = 141;
   */
  searchExactMatchImpressionShare?: number;

  /**
   * The impressions you've received on the Search Network divided
   * by the estimated number of impressions you were eligible to receive.
   * Note: Search impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   *
   * @generated from field: optional double search_impression_share = 142;
   */
  searchImpressionShare?: number;

  /**
   * The number estimating how often your ad wasn't the very first ad among the
   * top ads in the search results due to poor Ad Rank.
   * Note: Search rank lost absolute top impression share is reported in the
   * range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
   *
   * @generated from field: optional double search_rank_lost_absolute_top_impression_share = 143;
   */
  searchRankLostAbsoluteTopImpressionShare?: number;

  /**
   * The estimated percentage of impressions on the Search Network
   * that your ads didn't receive due to poor Ad Rank.
   * Note: Search rank lost impression share is reported in the range of 0 to
   * 0.9. Any value above 0.9 is reported as 0.9001.
   *
   * @generated from field: optional double search_rank_lost_impression_share = 144;
   */
  searchRankLostImpressionShare?: number;

  /**
   * The number estimating how often your ad didn't show adjacent to the top
   * organic search results due to poor Ad Rank.
   * Note: Search rank lost top impression share is reported in the range of 0
   * to 0.9. Any value above 0.9 is reported as 0.9001.
   *
   * @generated from field: optional double search_rank_lost_top_impression_share = 145;
   */
  searchRankLostTopImpressionShare?: number;

  /**
   * The impressions you've received among the top ads compared to the estimated
   * number of impressions you were eligible to receive among the top ads.
   * Note: Search top impression share is reported in the range of 0.1 to 1. Any
   * value below 0.1 is reported as 0.0999.
   *
   * Top ads are generally above the top organic results, although they may show
   * below the top organic results on certain queries.
   *
   * @generated from field: optional double search_top_impression_share = 146;
   */
  searchTopImpressionShare?: number;

  /**
   * The percent of your ad impressions that are shown adjacent to the top
   * organic search results.
   *
   * @generated from field: optional double top_impression_percentage = 148;
   */
  topImpressionPercentage?: number;

  /**
   * The value of all conversions divided by the number of all conversions.
   *
   * @generated from field: optional double value_per_all_conversions = 150;
   */
  valuePerAllConversions?: number;

  /**
   * The value of all conversions divided by the number of all conversions. When
   * this column is selected with date, the values in date column means the
   * conversion date. Details for the by_conversion_date columns are available
   * at https://support.google.com/sa360/answer/9250611.
   *
   * @generated from field: optional double value_per_all_conversions_by_conversion_date = 244;
   */
  valuePerAllConversionsByConversionDate?: number;

  /**
   * The value of biddable conversion divided by the number of biddable
   * conversions. Shows how much, on average, each of the biddable conversions
   * is worth.
   *
   * @generated from field: optional double value_per_conversion = 287;
   */
  valuePerConversion?: number;

  /**
   * Biddable conversions value by conversion date divided by biddable
   * conversions by conversion date. Shows how much, on average, each of the
   * biddable conversions is worth (by conversion date). When this column is
   * selected with date, the values in date column means the conversion date.
   *
   * @generated from field: optional double value_per_conversions_by_conversion_date = 285;
   */
  valuePerConversionsByConversionDate?: number;

  /**
   * The total number of view-through conversions.
   * These happen when a customer sees an image or rich media ad, then later
   * completes a conversion on your site without interacting with (for example,
   * clicking on) another ad.
   *
   * @generated from field: optional int64 client_account_view_through_conversions = 155;
   */
  clientAccountViewThroughConversions?: bigint;

  /**
   * Client account cross-sell cost of goods sold (COGS) is the total cost
   * of products sold as a result of advertising a different product.
   * How it works: You report conversions with cart data for
   * completed purchases on your website. If the ad that was interacted with
   * before the purchase has an associated product (see Shopping Ads) then this
   * product is considered the advertised product. Any product included in the
   * order the customer places is a sold product. If these products don't match
   * then this is considered cross-sell. Cross-sell cost of goods sold is the
   * total cost of the products sold that weren't advertised. Example: Someone
   * clicked on a Shopping ad for a hat then bought the same hat and a shirt.
   * The hat has a cost of goods sold value of $3, the shirt has a cost of goods
   * sold value of $5. The cross-sell cost of goods sold for this order is $5.
   * This metric is only available if you report conversions with cart data.
   * This metric is a monetary value and returned in the customer's currency by
   * default. See the metrics_currency parameter at
   * https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause
   *
   * @generated from field: optional int64 client_account_cross_sell_cost_of_goods_sold_micros = 321;
   */
  clientAccountCrossSellCostOfGoodsSoldMicros?: bigint;

  /**
   * Cross-sell cost of goods sold (COGS) is the total cost of products sold as
   * a result of advertising a different product.
   * How it works: You report conversions with cart data for
   * completed purchases on your website. If the ad that was interacted with
   * before the purchase has an associated product (see Shopping Ads) then this
   * product is considered the advertised product. Any product included in the
   * order the customer places is a sold product. If these products don't match
   * then this is considered cross-sell. Cross-sell cost of goods sold is the
   * total cost of the products sold that weren't advertised. Example: Someone
   * clicked on a Shopping ad for a hat then bought the same hat and a shirt.
   * The hat has a cost of goods sold value of $3, the shirt has a cost of goods
   * sold value of $5. The cross-sell cost of goods sold for this order is $5.
   * This metric is only available if you report conversions with cart data.
   * This metric is a monetary value and returned in the customer's currency by
   * default. See the metrics_currency parameter at
   * https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause
   *
   * @generated from field: optional int64 cross_sell_cost_of_goods_sold_micros = 327;
   */
  crossSellCostOfGoodsSoldMicros?: bigint;

  /**
   * Client account cross-sell gross profit is the profit you made from
   * products sold as a result of advertising a different product, minus cost of
   * goods sold (COGS).
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the purchase is a sold
   * product. If these products don't match then this is considered cross-sell.
   * Cross-sell gross profit is the revenue you made from cross-sell attributed
   * to your ads minus the cost of the goods sold. Example: Someone clicked on a
   * Shopping ad for a hat then bought the same hat and a shirt. The shirt is
   * priced $20 and has a cost of goods sold value of $5. The cross-sell gross
   * profit of this order is $15 = $20 - $5. This metric is only available if
   * you report conversions with cart data. This metric is a monetary value and
   * returned in the customer's currency by default. See the metrics_currency
   * parameter at
   * https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause
   *
   * @generated from field: optional int64 client_account_cross_sell_gross_profit_micros = 322;
   */
  clientAccountCrossSellGrossProfitMicros?: bigint;

  /**
   * Cross-sell gross profit is the profit you made from products sold as a
   * result of advertising a different product, minus cost of goods sold (COGS).
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the purchase is a sold
   * product. If these products don't match then this is considered cross-sell.
   * Cross-sell gross profit is the revenue you made from cross-sell attributed
   * to your ads minus the cost of the goods sold.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The shirt is priced $20 and has a cost of goods sold value
   * of $5. The cross-sell gross profit of this order is $15 = $20 - $5.
   * This metric is only available if you report conversions with cart data.
   * This metric is a monetary value and returned in the customer's currency by
   * default. See the metrics_currency parameter at
   * https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause
   *
   * @generated from field: optional int64 cross_sell_gross_profit_micros = 328;
   */
  crossSellGrossProfitMicros?: bigint;

  /**
   * Client account cross-sell revenue is the total amount you made from
   * products sold as a result of advertising a different product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If these products don't match then this is
   * considered cross-sell. Cross-sell revenue is the total value you made from
   * cross-sell attributed to your ads. Example: Someone clicked on a Shopping
   * ad for a hat then bought the same hat and a shirt. The hat is priced $10
   * and the shirt is priced $20. The cross-sell revenue of this order is $20.
   * This metric is only available if you report conversions with cart data.
   * This metric is a monetary value and returned in the customer's currency by
   * default. See the metrics_currency parameter at
   * https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause
   *
   * @generated from field: optional int64 client_account_cross_sell_revenue_micros = 323;
   */
  clientAccountCrossSellRevenueMicros?: bigint;

  /**
   * Cross-sell revenue is the total amount you made from products sold as a
   * result of advertising a different product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If these products don't match then this is
   * considered cross-sell. Cross-sell revenue is the total value you made from
   * cross-sell attributed to your ads. Example: Someone clicked on a Shopping
   * ad for a hat then bought the same hat and a shirt. The hat is priced $10
   * and the shirt is priced $20. The cross-sell revenue of this order is $20.
   * This metric is only available if you report conversions with cart data.
   * This metric is a monetary value and returned in the customer's currency by
   * default. See the metrics_currency parameter at
   * https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause
   *
   * @generated from field: optional int64 cross_sell_revenue_micros = 329;
   */
  crossSellRevenueMicros?: bigint;

  /**
   * Client account cross-sell units sold is
   * the total number of products sold as a result of advertising a different
   * product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If these products don't match then this is
   * considered cross-sell. Cross-sell units sold is the total number of
   * cross-sold products from all orders attributed to your ads.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat, a shirt and a jacket. The cross-sell units sold in this order is 2.
   * This metric is only available if you report conversions with cart data.
   *
   * @generated from field: optional double client_account_cross_sell_units_sold = 307;
   */
  clientAccountCrossSellUnitsSold?: number;

  /**
   * Cross-sell units sold is the total number of products sold as a result of
   * advertising a different product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If these products don't match then this is
   * considered cross-sell. Cross-sell units sold is the total number of
   * cross-sold products from all orders attributed to your ads.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat, a shirt and a jacket. The cross-sell units sold in this order is 2.
   * This metric is only available if you report conversions with cart data.
   *
   * @generated from field: optional double cross_sell_units_sold = 330;
   */
  crossSellUnitsSold?: number;

  /**
   * Client account lead cost of goods sold (COGS) is the total cost of
   * products sold as a result of advertising the same product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with has an associated
   * product (see Shopping Ads) then this product is considered the advertised
   * product. Any product included in the order the customer places is a sold
   * product. If the advertised and sold products match, then the cost of these
   * goods is counted under lead cost of goods sold. Example: Someone clicked on
   * a Shopping ad for a hat then bought the same hat and a shirt. The hat has a
   * cost of goods sold value of $3, the shirt has a cost of goods sold value of
   * $5. The lead cost of goods sold for this order is $3. This metric is only
   * available if you report conversions with cart data. This metric is a
   * monetary value and returned in the customer's currency by default. See the
   * metrics_currency parameter at
   * https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause
   *
   * @generated from field: optional int64 client_account_lead_cost_of_goods_sold_micros = 324;
   */
  clientAccountLeadCostOfGoodsSoldMicros?: bigint;

  /**
   * Lead cost of goods sold (COGS) is the total cost of products sold as a
   * result of advertising the same product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with has an associated
   * product (see Shopping Ads) then this product is considered the advertised
   * product. Any product included in the order the customer places is a sold
   * product. If the advertised and sold products match, then the cost of these
   * goods is counted under lead cost of goods sold. Example: Someone clicked on
   * a Shopping ad for a hat then bought the same hat and a shirt. The hat has a
   * cost of goods sold value of $3, the shirt has a cost of goods sold value of
   * $5. The lead cost of goods sold for this order is $3. This metric is only
   * available if you report conversions with cart data. This metric is a
   * monetary value and returned in the customer's currency by default. See the
   * metrics_currency parameter at
   * https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause
   *
   * @generated from field: optional int64 lead_cost_of_goods_sold_micros = 332;
   */
  leadCostOfGoodsSoldMicros?: bigint;

  /**
   * Client account lead gross profit is the profit you made from products
   * sold as a result of advertising the same product, minus cost of goods sold
   * (COGS).
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If the advertised and sold products match, then
   * the revenue you made from these sales minus the cost of goods sold is your
   * lead gross profit. Example: Someone clicked on a Shopping ad for a hat then
   * bought the same hat and a shirt. The hat is priced $10 and has a cost of
   * goods sold value of $3. The lead gross profit of this order is $7 = $10 -
   * $3. This metric is only available if you report conversions with cart data.
   * This metric is a monetary value and returned in the customer's currency by
   * default. See the metrics_currency parameter at
   * https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause
   *
   * @generated from field: optional int64 client_account_lead_gross_profit_micros = 325;
   */
  clientAccountLeadGrossProfitMicros?: bigint;

  /**
   * Lead gross profit is the profit you made from products sold as a result of
   * advertising the same product, minus cost of goods sold (COGS).
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If the advertised and sold products match, then
   * the revenue you made from these sales minus the cost of goods sold is your
   * lead gross profit. Example: Someone clicked on a Shopping ad for a hat then
   * bought the same hat and a shirt. The hat is priced $10 and has a cost of
   * goods sold value of $3. The lead gross profit of this order is $7 = $10 -
   * $3. This metric is only available if you report conversions with cart data.
   * This metric is a monetary value and returned in the customer's currency by
   * default. See the metrics_currency parameter at
   * https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause
   *
   * @generated from field: optional int64 lead_gross_profit_micros = 333;
   */
  leadGrossProfitMicros?: bigint;

  /**
   * Client account lead revenue is the total amount you made from
   * products sold as a result of advertising the same product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If the advertised and sold products match, then
   * the total value you made from the sales of these products is shown under
   * lead revenue. Example: Someone clicked on a Shopping ad for a hat then
   * bought the same hat and a shirt. The hat is priced $10 and the shirt is
   * priced $20. The lead revenue of this order is $10. This metric is only
   * available if you report conversions with cart data. This metric is a
   * monetary value and returned in the customer's currency by default. See the
   * metrics_currency parameter at
   * https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause
   *
   * @generated from field: optional int64 client_account_lead_revenue_micros = 326;
   */
  clientAccountLeadRevenueMicros?: bigint;

  /**
   * Lead revenue is the total amount you made from products sold as a result of
   * advertising the same product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If the advertised and sold products match, then
   * the total value you made from the sales of these products is shown under
   * lead revenue.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat and a shirt. The hat is priced $10 and the shirt is priced $20. The
   * lead revenue of this order is $10.
   * This metric is only available if you report conversions with cart data.
   * This metric is a monetary value and returned in the customer's currency by
   * default. See the metrics_currency parameter at
   * https://developers.google.com/search-ads/reporting/query/query-structure#parameters_clause
   *
   * @generated from field: optional int64 lead_revenue_micros = 334;
   */
  leadRevenueMicros?: bigint;

  /**
   * Client account lead units sold is the total number of
   * products sold as a result of advertising the same product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If the advertised and sold products match, then
   * the total number of these products sold is shown under lead units sold.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat, a shirt and a jacket. The lead units sold in this order is 1.
   * This metric is only available if you report conversions with cart data.
   *
   * @generated from field: optional double client_account_lead_units_sold = 311;
   */
  clientAccountLeadUnitsSold?: number;

  /**
   * Lead units sold is the total number of products sold as a result of
   * advertising the same product.
   * How it works: You report conversions with cart data for completed purchases
   * on your website. If the ad that was interacted with before the purchase has
   * an associated product (see Shopping Ads) then this product is considered
   * the advertised product. Any product included in the order the customer
   * places is a sold product. If the advertised and sold products match, then
   * the total number of these products sold is shown under lead units sold.
   * Example: Someone clicked on a Shopping ad for a hat then bought the same
   * hat, a shirt and a jacket. The lead units sold in this order is 1.
   * This metric is only available if you report conversions with cart data.
   *
   * @generated from field: optional double lead_units_sold = 335;
   */
  leadUnitsSold?: number;
};

/**
 * Describes the message google.ads.searchads360.v0.common.Metrics.
 * Use `create(MetricsSchema)` to create a new message.
 */
export const MetricsSchema: GenMessage<Metrics> = /*@__PURE__*/
  messageDesc(file_google_ads_searchads360_v0_common_metrics, 0);

