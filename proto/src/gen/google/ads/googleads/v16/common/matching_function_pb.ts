// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/ads/googleads/v16/common/matching_function.proto (package google.ads.googleads.v16.common, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { MatchingFunctionContextTypeEnum_MatchingFunctionContextType } from "../enums/matching_function_context_type_pb";
import { file_google_ads_googleads_v16_enums_matching_function_context_type } from "../enums/matching_function_context_type_pb";
import type { MatchingFunctionOperatorEnum_MatchingFunctionOperator } from "../enums/matching_function_operator_pb";
import { file_google_ads_googleads_v16_enums_matching_function_operator } from "../enums/matching_function_operator_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/ads/googleads/v16/common/matching_function.proto.
 */
export const file_google_ads_googleads_v16_common_matching_function: GenFile = /*@__PURE__*/
  fileDesc("Cjdnb29nbGUvYWRzL2dvb2dsZWFkcy92MTYvY29tbW9uL21hdGNoaW5nX2Z1bmN0aW9uLnByb3RvEh9nb29nbGUuYWRzLmdvb2dsZWFkcy52MTYuY29tbW9uIrACChBNYXRjaGluZ0Z1bmN0aW9uEhwKD2Z1bmN0aW9uX3N0cmluZxgFIAEoCUgAiAEBEmcKCG9wZXJhdG9yGAQgASgOMlUuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE2LmVudW1zLk1hdGNoaW5nRnVuY3Rpb25PcGVyYXRvckVudW0uTWF0Y2hpbmdGdW5jdGlvbk9wZXJhdG9yEj8KDWxlZnRfb3BlcmFuZHMYAiADKAsyKC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTYuY29tbW9uLk9wZXJhbmQSQAoOcmlnaHRfb3BlcmFuZHMYAyADKAsyKC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTYuY29tbW9uLk9wZXJhbmRCEgoQX2Z1bmN0aW9uX3N0cmluZyKBBwoHT3BlcmFuZBJUChBjb25zdGFudF9vcGVyYW5kGAEgASgLMjguZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE2LmNvbW1vbi5PcGVyYW5kLkNvbnN0YW50T3BlcmFuZEgAEl8KFmZlZWRfYXR0cmlidXRlX29wZXJhbmQYAiABKAsyPS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTYuY29tbW9uLk9wZXJhbmQuRmVlZEF0dHJpYnV0ZU9wZXJhbmRIABJUChBmdW5jdGlvbl9vcGVyYW5kGAMgASgLMjguZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE2LmNvbW1vbi5PcGVyYW5kLkZ1bmN0aW9uT3BlcmFuZEgAEmEKF3JlcXVlc3RfY29udGV4dF9vcGVyYW5kGAQgASgLMj4uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE2LmNvbW1vbi5PcGVyYW5kLlJlcXVlc3RDb250ZXh0T3BlcmFuZEgAGooBCg9Db25zdGFudE9wZXJhbmQSFgoMc3RyaW5nX3ZhbHVlGAUgASgJSAASFAoKbG9uZ192YWx1ZRgGIAEoA0gAEhcKDWJvb2xlYW5fdmFsdWUYByABKAhIABIWCgxkb3VibGVfdmFsdWUYCCABKAFIAEIYChZjb25zdGFudF9vcGVyYW5kX3ZhbHVlGm4KFEZlZWRBdHRyaWJ1dGVPcGVyYW5kEhQKB2ZlZWRfaWQYAyABKANIAIgBARIeChFmZWVkX2F0dHJpYnV0ZV9pZBgEIAEoA0gBiAEBQgoKCF9mZWVkX2lkQhQKEl9mZWVkX2F0dHJpYnV0ZV9pZBpfCg9GdW5jdGlvbk9wZXJhbmQSTAoRbWF0Y2hpbmdfZnVuY3Rpb24YASABKAsyMS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTYuY29tbW9uLk1hdGNoaW5nRnVuY3Rpb24aigEKFVJlcXVlc3RDb250ZXh0T3BlcmFuZBJxCgxjb250ZXh0X3R5cGUYASABKA4yWy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTYuZW51bXMuTWF0Y2hpbmdGdW5jdGlvbkNvbnRleHRUeXBlRW51bS5NYXRjaGluZ0Z1bmN0aW9uQ29udGV4dFR5cGVCGwoZZnVuY3Rpb25fYXJndW1lbnRfb3BlcmFuZEL1AQojY29tLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNi5jb21tb25CFU1hdGNoaW5nRnVuY3Rpb25Qcm90b1ABWkVnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Fkcy9nb29nbGVhZHMvdjE2L2NvbW1vbjtjb21tb26iAgNHQUGqAh9Hb29nbGUuQWRzLkdvb2dsZUFkcy5WMTYuQ29tbW9uygIfR29vZ2xlXEFkc1xHb29nbGVBZHNcVjE2XENvbW1vbuoCI0dvb2dsZTo6QWRzOjpHb29nbGVBZHM6OlYxNjo6Q29tbW9uYgZwcm90bzM", [file_google_ads_googleads_v16_enums_matching_function_context_type, file_google_ads_googleads_v16_enums_matching_function_operator]);

/**
 * Matching function associated with a
 * CustomerFeed, CampaignFeed, or AdGroupFeed. The matching function is used
 * to filter the set of feed items selected.
 *
 * @generated from message google.ads.googleads.v16.common.MatchingFunction
 */
export type MatchingFunction = Message<"google.ads.googleads.v16.common.MatchingFunction"> & {
  /**
   * String representation of the Function.
   *
   * Examples:
   *
   * 1. IDENTITY(true) or IDENTITY(false). All or no feed items served.
   * 2. EQUALS(CONTEXT.DEVICE,"Mobile")
   * 3. IN(FEED_ITEM_ID,{1000001,1000002,1000003})
   * 4. CONTAINS_ANY(FeedAttribute[12345678,0],{"Mars cruise","Venus cruise"})
   * 5. AND(IN(FEED_ITEM_ID,{10001,10002}),EQUALS(CONTEXT.DEVICE,"Mobile"))
   *
   * For more details, visit
   * https://developers.google.com/google-ads/api/docs/extensions/feeds/matching-functions
   *
   * Note that because multiple strings may represent the same underlying
   * function (whitespace and single versus double quotation marks, for
   * example), the value returned may not be identical to the string sent in a
   * mutate request.
   *
   * @generated from field: optional string function_string = 5;
   */
  functionString?: string;

  /**
   * Operator for a function.
   *
   * @generated from field: google.ads.googleads.v16.enums.MatchingFunctionOperatorEnum.MatchingFunctionOperator operator = 4;
   */
  operator: MatchingFunctionOperatorEnum_MatchingFunctionOperator;

  /**
   * The operands on the left hand side of the equation. This is also the
   * operand to be used for single operand expressions such as NOT.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.Operand left_operands = 2;
   */
  leftOperands: Operand[];

  /**
   * The operands on the right hand side of the equation.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.Operand right_operands = 3;
   */
  rightOperands: Operand[];
};

/**
 * Describes the message google.ads.googleads.v16.common.MatchingFunction.
 * Use `create(MatchingFunctionSchema)` to create a new message.
 */
export const MatchingFunctionSchema: GenMessage<MatchingFunction> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_matching_function, 0);

/**
 * An operand in a matching function.
 *
 * @generated from message google.ads.googleads.v16.common.Operand
 */
export type Operand = Message<"google.ads.googleads.v16.common.Operand"> & {
  /**
   * Different operands that can be used in a matching function. Required.
   *
   * @generated from oneof google.ads.googleads.v16.common.Operand.function_argument_operand
   */
  functionArgumentOperand: {
    /**
     * A constant operand in a matching function.
     *
     * @generated from field: google.ads.googleads.v16.common.Operand.ConstantOperand constant_operand = 1;
     */
    value: Operand_ConstantOperand;
    case: "constantOperand";
  } | {
    /**
     * This operand specifies a feed attribute in feed.
     *
     * @generated from field: google.ads.googleads.v16.common.Operand.FeedAttributeOperand feed_attribute_operand = 2;
     */
    value: Operand_FeedAttributeOperand;
    case: "feedAttributeOperand";
  } | {
    /**
     * A function operand in a matching function.
     * Used to represent nested functions.
     *
     * @generated from field: google.ads.googleads.v16.common.Operand.FunctionOperand function_operand = 3;
     */
    value: Operand_FunctionOperand;
    case: "functionOperand";
  } | {
    /**
     * An operand in a function referring to a value in the request context.
     *
     * @generated from field: google.ads.googleads.v16.common.Operand.RequestContextOperand request_context_operand = 4;
     */
    value: Operand_RequestContextOperand;
    case: "requestContextOperand";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v16.common.Operand.
 * Use `create(OperandSchema)` to create a new message.
 */
export const OperandSchema: GenMessage<Operand> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_matching_function, 1);

/**
 * A constant operand in a matching function.
 *
 * @generated from message google.ads.googleads.v16.common.Operand.ConstantOperand
 */
export type Operand_ConstantOperand = Message<"google.ads.googleads.v16.common.Operand.ConstantOperand"> & {
  /**
   * Constant operand values. Required.
   *
   * @generated from oneof google.ads.googleads.v16.common.Operand.ConstantOperand.constant_operand_value
   */
  constantOperandValue: {
    /**
     * String value of the operand if it is a string type.
     *
     * @generated from field: string string_value = 5;
     */
    value: string;
    case: "stringValue";
  } | {
    /**
     * Int64 value of the operand if it is a int64 type.
     *
     * @generated from field: int64 long_value = 6;
     */
    value: bigint;
    case: "longValue";
  } | {
    /**
     * Boolean value of the operand if it is a boolean type.
     *
     * @generated from field: bool boolean_value = 7;
     */
    value: boolean;
    case: "booleanValue";
  } | {
    /**
     * Double value of the operand if it is a double type.
     *
     * @generated from field: double double_value = 8;
     */
    value: number;
    case: "doubleValue";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v16.common.Operand.ConstantOperand.
 * Use `create(Operand_ConstantOperandSchema)` to create a new message.
 */
export const Operand_ConstantOperandSchema: GenMessage<Operand_ConstantOperand> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_matching_function, 1, 0);

/**
 * A feed attribute operand in a matching function.
 * Used to represent a feed attribute in feed.
 *
 * @generated from message google.ads.googleads.v16.common.Operand.FeedAttributeOperand
 */
export type Operand_FeedAttributeOperand = Message<"google.ads.googleads.v16.common.Operand.FeedAttributeOperand"> & {
  /**
   * The associated feed. Required.
   *
   * @generated from field: optional int64 feed_id = 3;
   */
  feedId?: bigint;

  /**
   * Id of the referenced feed attribute. Required.
   *
   * @generated from field: optional int64 feed_attribute_id = 4;
   */
  feedAttributeId?: bigint;
};

/**
 * Describes the message google.ads.googleads.v16.common.Operand.FeedAttributeOperand.
 * Use `create(Operand_FeedAttributeOperandSchema)` to create a new message.
 */
export const Operand_FeedAttributeOperandSchema: GenMessage<Operand_FeedAttributeOperand> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_matching_function, 1, 1);

/**
 * A function operand in a matching function.
 * Used to represent nested functions.
 *
 * @generated from message google.ads.googleads.v16.common.Operand.FunctionOperand
 */
export type Operand_FunctionOperand = Message<"google.ads.googleads.v16.common.Operand.FunctionOperand"> & {
  /**
   * The matching function held in this operand.
   *
   * @generated from field: google.ads.googleads.v16.common.MatchingFunction matching_function = 1;
   */
  matchingFunction?: MatchingFunction;
};

/**
 * Describes the message google.ads.googleads.v16.common.Operand.FunctionOperand.
 * Use `create(Operand_FunctionOperandSchema)` to create a new message.
 */
export const Operand_FunctionOperandSchema: GenMessage<Operand_FunctionOperand> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_matching_function, 1, 2);

/**
 * An operand in a function referring to a value in the request context.
 *
 * @generated from message google.ads.googleads.v16.common.Operand.RequestContextOperand
 */
export type Operand_RequestContextOperand = Message<"google.ads.googleads.v16.common.Operand.RequestContextOperand"> & {
  /**
   * Type of value to be referred in the request context.
   *
   * @generated from field: google.ads.googleads.v16.enums.MatchingFunctionContextTypeEnum.MatchingFunctionContextType context_type = 1;
   */
  contextType: MatchingFunctionContextTypeEnum_MatchingFunctionContextType;
};

/**
 * Describes the message google.ads.googleads.v16.common.Operand.RequestContextOperand.
 * Use `create(Operand_RequestContextOperandSchema)` to create a new message.
 */
export const Operand_RequestContextOperandSchema: GenMessage<Operand_RequestContextOperand> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_matching_function, 1, 3);

