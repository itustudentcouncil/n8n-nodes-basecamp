// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/ads/googleads/v16/common/ad_type_infos.proto (package google.ads.googleads.v16.common, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { AdCallToActionAsset, AdDiscoveryCarouselCardAsset, AdImageAsset, AdMediaBundleAsset, AdTextAsset, AdVideoAsset } from "./ad_asset_pb";
import { file_google_ads_googleads_v16_common_ad_asset } from "./ad_asset_pb";
import type { CallConversionReportingStateEnum_CallConversionReportingState } from "../enums/call_conversion_reporting_state_pb";
import { file_google_ads_googleads_v16_enums_call_conversion_reporting_state } from "../enums/call_conversion_reporting_state_pb";
import type { DisplayAdFormatSettingEnum_DisplayAdFormatSetting } from "../enums/display_ad_format_setting_pb";
import { file_google_ads_googleads_v16_enums_display_ad_format_setting } from "../enums/display_ad_format_setting_pb";
import type { DisplayUploadProductTypeEnum_DisplayUploadProductType } from "../enums/display_upload_product_type_pb";
import { file_google_ads_googleads_v16_enums_display_upload_product_type } from "../enums/display_upload_product_type_pb";
import type { LegacyAppInstallAdAppStoreEnum_LegacyAppInstallAdAppStore } from "../enums/legacy_app_install_ad_app_store_pb";
import { file_google_ads_googleads_v16_enums_legacy_app_install_ad_app_store } from "../enums/legacy_app_install_ad_app_store_pb";
import type { MimeTypeEnum_MimeType } from "../enums/mime_type_pb";
import { file_google_ads_googleads_v16_enums_mime_type } from "../enums/mime_type_pb";
import type { VideoThumbnailEnum_VideoThumbnail } from "../enums/video_thumbnail_pb";
import { file_google_ads_googleads_v16_enums_video_thumbnail } from "../enums/video_thumbnail_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/ads/googleads/v16/common/ad_type_infos.proto.
 */
export const file_google_ads_googleads_v16_common_ad_type_infos: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_ads_googleads_v16_common_ad_asset, file_google_ads_googleads_v16_enums_call_conversion_reporting_state, file_google_ads_googleads_v16_enums_display_ad_format_setting, file_google_ads_googleads_v16_enums_display_upload_product_type, file_google_ads_googleads_v16_enums_legacy_app_install_ad_app_store, file_google_ads_googleads_v16_enums_mime_type, file_google_ads_googleads_v16_enums_video_thumbnail, file_google_api_field_behavior]);

/**
 * A text ad.
 *
 * @generated from message google.ads.googleads.v16.common.TextAdInfo
 */
export type TextAdInfo = Message<"google.ads.googleads.v16.common.TextAdInfo"> & {
  /**
   * The headline of the ad.
   *
   * @generated from field: optional string headline = 4;
   */
  headline?: string;

  /**
   * The first line of the ad's description.
   *
   * @generated from field: optional string description1 = 5;
   */
  description1?: string;

  /**
   * The second line of the ad's description.
   *
   * @generated from field: optional string description2 = 6;
   */
  description2?: string;
};

/**
 * Describes the message google.ads.googleads.v16.common.TextAdInfo.
 * Use `create(TextAdInfoSchema)` to create a new message.
 */
export const TextAdInfoSchema: GenMessage<TextAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 0);

/**
 * An expanded text ad.
 *
 * @generated from message google.ads.googleads.v16.common.ExpandedTextAdInfo
 */
export type ExpandedTextAdInfo = Message<"google.ads.googleads.v16.common.ExpandedTextAdInfo"> & {
  /**
   * The first part of the ad's headline.
   *
   * @generated from field: optional string headline_part1 = 8;
   */
  headlinePart1?: string;

  /**
   * The second part of the ad's headline.
   *
   * @generated from field: optional string headline_part2 = 9;
   */
  headlinePart2?: string;

  /**
   * The third part of the ad's headline.
   *
   * @generated from field: optional string headline_part3 = 10;
   */
  headlinePart3?: string;

  /**
   * The description of the ad.
   *
   * @generated from field: optional string description = 11;
   */
  description?: string;

  /**
   * The second description of the ad.
   *
   * @generated from field: optional string description2 = 12;
   */
  description2?: string;

  /**
   * The text that can appear alongside the ad's displayed URL.
   *
   * @generated from field: optional string path1 = 13;
   */
  path1?: string;

  /**
   * Additional text that can appear alongside the ad's displayed URL.
   *
   * @generated from field: optional string path2 = 14;
   */
  path2?: string;
};

/**
 * Describes the message google.ads.googleads.v16.common.ExpandedTextAdInfo.
 * Use `create(ExpandedTextAdInfoSchema)` to create a new message.
 */
export const ExpandedTextAdInfoSchema: GenMessage<ExpandedTextAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 1);

/**
 * An expanded dynamic search ad.
 *
 * @generated from message google.ads.googleads.v16.common.ExpandedDynamicSearchAdInfo
 */
export type ExpandedDynamicSearchAdInfo = Message<"google.ads.googleads.v16.common.ExpandedDynamicSearchAdInfo"> & {
  /**
   * The description of the ad.
   *
   * @generated from field: optional string description = 3;
   */
  description?: string;

  /**
   * The second description of the ad.
   *
   * @generated from field: optional string description2 = 4;
   */
  description2?: string;
};

/**
 * Describes the message google.ads.googleads.v16.common.ExpandedDynamicSearchAdInfo.
 * Use `create(ExpandedDynamicSearchAdInfoSchema)` to create a new message.
 */
export const ExpandedDynamicSearchAdInfoSchema: GenMessage<ExpandedDynamicSearchAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 2);

/**
 * A hotel ad.
 *
 * @generated from message google.ads.googleads.v16.common.HotelAdInfo
 */
export type HotelAdInfo = Message<"google.ads.googleads.v16.common.HotelAdInfo"> & {
};

/**
 * Describes the message google.ads.googleads.v16.common.HotelAdInfo.
 * Use `create(HotelAdInfoSchema)` to create a new message.
 */
export const HotelAdInfoSchema: GenMessage<HotelAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 3);

/**
 * A travel ad.
 *
 * @generated from message google.ads.googleads.v16.common.TravelAdInfo
 */
export type TravelAdInfo = Message<"google.ads.googleads.v16.common.TravelAdInfo"> & {
};

/**
 * Describes the message google.ads.googleads.v16.common.TravelAdInfo.
 * Use `create(TravelAdInfoSchema)` to create a new message.
 */
export const TravelAdInfoSchema: GenMessage<TravelAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 4);

/**
 * A Smart Shopping ad.
 *
 * @generated from message google.ads.googleads.v16.common.ShoppingSmartAdInfo
 */
export type ShoppingSmartAdInfo = Message<"google.ads.googleads.v16.common.ShoppingSmartAdInfo"> & {
};

/**
 * Describes the message google.ads.googleads.v16.common.ShoppingSmartAdInfo.
 * Use `create(ShoppingSmartAdInfoSchema)` to create a new message.
 */
export const ShoppingSmartAdInfoSchema: GenMessage<ShoppingSmartAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 5);

/**
 * A standard Shopping ad.
 *
 * @generated from message google.ads.googleads.v16.common.ShoppingProductAdInfo
 */
export type ShoppingProductAdInfo = Message<"google.ads.googleads.v16.common.ShoppingProductAdInfo"> & {
};

/**
 * Describes the message google.ads.googleads.v16.common.ShoppingProductAdInfo.
 * Use `create(ShoppingProductAdInfoSchema)` to create a new message.
 */
export const ShoppingProductAdInfoSchema: GenMessage<ShoppingProductAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 6);

/**
 * A Shopping Comparison Listing ad.
 *
 * @generated from message google.ads.googleads.v16.common.ShoppingComparisonListingAdInfo
 */
export type ShoppingComparisonListingAdInfo = Message<"google.ads.googleads.v16.common.ShoppingComparisonListingAdInfo"> & {
  /**
   * Headline of the ad. This field is required. Allowed length is between 25
   * and 45 characters.
   *
   * @generated from field: optional string headline = 2;
   */
  headline?: string;
};

/**
 * Describes the message google.ads.googleads.v16.common.ShoppingComparisonListingAdInfo.
 * Use `create(ShoppingComparisonListingAdInfoSchema)` to create a new message.
 */
export const ShoppingComparisonListingAdInfoSchema: GenMessage<ShoppingComparisonListingAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 7);

/**
 * An image ad.
 *
 * @generated from message google.ads.googleads.v16.common.ImageAdInfo
 */
export type ImageAdInfo = Message<"google.ads.googleads.v16.common.ImageAdInfo"> & {
  /**
   * Width in pixels of the full size image.
   *
   * @generated from field: optional int64 pixel_width = 15;
   */
  pixelWidth?: bigint;

  /**
   * Height in pixels of the full size image.
   *
   * @generated from field: optional int64 pixel_height = 16;
   */
  pixelHeight?: bigint;

  /**
   * URL of the full size image.
   *
   * @generated from field: optional string image_url = 17;
   */
  imageUrl?: string;

  /**
   * Width in pixels of the preview size image.
   *
   * @generated from field: optional int64 preview_pixel_width = 18;
   */
  previewPixelWidth?: bigint;

  /**
   * Height in pixels of the preview size image.
   *
   * @generated from field: optional int64 preview_pixel_height = 19;
   */
  previewPixelHeight?: bigint;

  /**
   * URL of the preview size image.
   *
   * @generated from field: optional string preview_image_url = 20;
   */
  previewImageUrl?: string;

  /**
   * The mime type of the image.
   *
   * @generated from field: google.ads.googleads.v16.enums.MimeTypeEnum.MimeType mime_type = 10;
   */
  mimeType: MimeTypeEnum_MimeType;

  /**
   * The name of the image. If the image was created from a MediaFile, this is
   * the MediaFile's name. If the image was created from bytes, this is empty.
   *
   * @generated from field: optional string name = 21;
   */
  name?: string;

  /**
   * The image to create the ImageAd from. This can be specified in one of
   * two ways.
   * 1. An existing MediaFile resource.
   * 2. The raw image data as bytes.
   *
   * @generated from oneof google.ads.googleads.v16.common.ImageAdInfo.image
   */
  image: {
    /**
     * The image assets used for the ad.
     *
     * @generated from field: google.ads.googleads.v16.common.AdImageAsset image_asset = 22;
     */
    value: AdImageAsset;
    case: "imageAsset";
  } | {
    /**
     * Raw image data as bytes.
     *
     * @generated from field: bytes data = 13;
     */
    value: Uint8Array;
    case: "data";
  } | {
    /**
     * An ad ID to copy the image from.
     *
     * @generated from field: int64 ad_id_to_copy_image_from = 14;
     */
    value: bigint;
    case: "adIdToCopyImageFrom";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v16.common.ImageAdInfo.
 * Use `create(ImageAdInfoSchema)` to create a new message.
 */
export const ImageAdInfoSchema: GenMessage<ImageAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 8);

/**
 * Representation of video bumper in-stream ad format (very short in-stream
 * non-skippable video ad).
 *
 * @generated from message google.ads.googleads.v16.common.VideoBumperInStreamAdInfo
 */
export type VideoBumperInStreamAdInfo = Message<"google.ads.googleads.v16.common.VideoBumperInStreamAdInfo"> & {
  /**
   * The image assets of the companion banner used with the ad.
   *
   * @generated from field: google.ads.googleads.v16.common.AdImageAsset companion_banner = 3;
   */
  companionBanner?: AdImageAsset;

  /**
   * Label on the "Call To Action" button taking the user to the video ad's
   * final URL.
   *
   * @generated from field: string action_button_label = 4;
   */
  actionButtonLabel: string;

  /**
   * Additional text displayed with the CTA (call-to-action) button to give
   * context and encourage clicking on the button.
   *
   * @generated from field: string action_headline = 5;
   */
  actionHeadline: string;
};

/**
 * Describes the message google.ads.googleads.v16.common.VideoBumperInStreamAdInfo.
 * Use `create(VideoBumperInStreamAdInfoSchema)` to create a new message.
 */
export const VideoBumperInStreamAdInfoSchema: GenMessage<VideoBumperInStreamAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 9);

/**
 * Representation of video non-skippable in-stream ad format (15 second
 * in-stream non-skippable video ad).
 *
 * @generated from message google.ads.googleads.v16.common.VideoNonSkippableInStreamAdInfo
 */
export type VideoNonSkippableInStreamAdInfo = Message<"google.ads.googleads.v16.common.VideoNonSkippableInStreamAdInfo"> & {
  /**
   * The image assets of the companion banner used with the ad.
   *
   * @generated from field: google.ads.googleads.v16.common.AdImageAsset companion_banner = 5;
   */
  companionBanner?: AdImageAsset;

  /**
   * Label on the "Call To Action" button taking the user to the video ad's
   * final URL.
   *
   * @generated from field: string action_button_label = 3;
   */
  actionButtonLabel: string;

  /**
   * Additional text displayed with the "Call To Action" button to give
   * context and encourage clicking on the button.
   *
   * @generated from field: string action_headline = 4;
   */
  actionHeadline: string;
};

/**
 * Describes the message google.ads.googleads.v16.common.VideoNonSkippableInStreamAdInfo.
 * Use `create(VideoNonSkippableInStreamAdInfoSchema)` to create a new message.
 */
export const VideoNonSkippableInStreamAdInfoSchema: GenMessage<VideoNonSkippableInStreamAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 10);

/**
 * Representation of video TrueView in-stream ad format (ad shown during video
 * playback, often at beginning, which displays a skip button a few seconds into
 * the video).
 *
 * @generated from message google.ads.googleads.v16.common.VideoTrueViewInStreamAdInfo
 */
export type VideoTrueViewInStreamAdInfo = Message<"google.ads.googleads.v16.common.VideoTrueViewInStreamAdInfo"> & {
  /**
   * Label on the CTA (call-to-action) button taking the user to the video ad's
   * final URL.
   * Required for TrueView for action campaigns, optional otherwise.
   *
   * @generated from field: string action_button_label = 4;
   */
  actionButtonLabel: string;

  /**
   * Additional text displayed with the CTA (call-to-action) button to give
   * context and encourage clicking on the button.
   *
   * @generated from field: string action_headline = 5;
   */
  actionHeadline: string;

  /**
   * The image assets of the companion banner used with the ad.
   *
   * @generated from field: google.ads.googleads.v16.common.AdImageAsset companion_banner = 7;
   */
  companionBanner?: AdImageAsset;
};

/**
 * Describes the message google.ads.googleads.v16.common.VideoTrueViewInStreamAdInfo.
 * Use `create(VideoTrueViewInStreamAdInfoSchema)` to create a new message.
 */
export const VideoTrueViewInStreamAdInfoSchema: GenMessage<VideoTrueViewInStreamAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 11);

/**
 * Representation of video out-stream ad format (ad shown alongside a feed
 * with automatic playback, without sound).
 *
 * @generated from message google.ads.googleads.v16.common.VideoOutstreamAdInfo
 */
export type VideoOutstreamAdInfo = Message<"google.ads.googleads.v16.common.VideoOutstreamAdInfo"> & {
  /**
   * The headline of the ad.
   *
   * @generated from field: string headline = 3;
   */
  headline: string;

  /**
   * The description line.
   *
   * @generated from field: string description = 4;
   */
  description: string;
};

/**
 * Describes the message google.ads.googleads.v16.common.VideoOutstreamAdInfo.
 * Use `create(VideoOutstreamAdInfoSchema)` to create a new message.
 */
export const VideoOutstreamAdInfoSchema: GenMessage<VideoOutstreamAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 12);

/**
 * Representation of In-feed video ad format.
 *
 * @generated from message google.ads.googleads.v16.common.InFeedVideoAdInfo
 */
export type InFeedVideoAdInfo = Message<"google.ads.googleads.v16.common.InFeedVideoAdInfo"> & {
  /**
   * The headline of the ad.
   *
   * @generated from field: string headline = 1;
   */
  headline: string;

  /**
   * First text line for the ad.
   *
   * @generated from field: string description1 = 2;
   */
  description1: string;

  /**
   * Second text line for the ad.
   *
   * @generated from field: string description2 = 3;
   */
  description2: string;

  /**
   * Video thumbnail image to use.
   *
   * @generated from field: google.ads.googleads.v16.enums.VideoThumbnailEnum.VideoThumbnail thumbnail = 4;
   */
  thumbnail: VideoThumbnailEnum_VideoThumbnail;
};

/**
 * Describes the message google.ads.googleads.v16.common.InFeedVideoAdInfo.
 * Use `create(InFeedVideoAdInfoSchema)` to create a new message.
 */
export const InFeedVideoAdInfoSchema: GenMessage<InFeedVideoAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 13);

/**
 * A video ad.
 *
 * @generated from message google.ads.googleads.v16.common.VideoAdInfo
 */
export type VideoAdInfo = Message<"google.ads.googleads.v16.common.VideoAdInfo"> & {
  /**
   * The YouTube video assets used for the ad.
   *
   * @generated from field: google.ads.googleads.v16.common.AdVideoAsset video = 8;
   */
  video?: AdVideoAsset;

  /**
   * Format-specific schema for the different video formats.
   *
   * @generated from oneof google.ads.googleads.v16.common.VideoAdInfo.format
   */
  format: {
    /**
     * Video TrueView in-stream ad format.
     *
     * @generated from field: google.ads.googleads.v16.common.VideoTrueViewInStreamAdInfo in_stream = 2;
     */
    value: VideoTrueViewInStreamAdInfo;
    case: "inStream";
  } | {
    /**
     * Video bumper in-stream ad format.
     *
     * @generated from field: google.ads.googleads.v16.common.VideoBumperInStreamAdInfo bumper = 3;
     */
    value: VideoBumperInStreamAdInfo;
    case: "bumper";
  } | {
    /**
     * Video out-stream ad format.
     *
     * @generated from field: google.ads.googleads.v16.common.VideoOutstreamAdInfo out_stream = 4;
     */
    value: VideoOutstreamAdInfo;
    case: "outStream";
  } | {
    /**
     * Video non-skippable in-stream ad format.
     *
     * @generated from field: google.ads.googleads.v16.common.VideoNonSkippableInStreamAdInfo non_skippable = 5;
     */
    value: VideoNonSkippableInStreamAdInfo;
    case: "nonSkippable";
  } | {
    /**
     * In-feed video ad format.
     *
     * @generated from field: google.ads.googleads.v16.common.InFeedVideoAdInfo in_feed = 9;
     */
    value: InFeedVideoAdInfo;
    case: "inFeed";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v16.common.VideoAdInfo.
 * Use `create(VideoAdInfoSchema)` to create a new message.
 */
export const VideoAdInfoSchema: GenMessage<VideoAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 14);

/**
 * A video responsive ad.
 *
 * @generated from message google.ads.googleads.v16.common.VideoResponsiveAdInfo
 */
export type VideoResponsiveAdInfo = Message<"google.ads.googleads.v16.common.VideoResponsiveAdInfo"> & {
  /**
   * List of text assets used for the short headline. Currently, only a single
   * value for the short headline is supported.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset headlines = 1;
   */
  headlines: AdTextAsset[];

  /**
   * List of text assets used for the long headline.
   * Currently, only a single value for the long headline is supported.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset long_headlines = 2;
   */
  longHeadlines: AdTextAsset[];

  /**
   * List of text assets used for the description.
   * Currently, only a single value for the description is supported.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset descriptions = 3;
   */
  descriptions: AdTextAsset[];

  /**
   * List of text assets used for the button, for example, the "Call To Action"
   * button. Currently, only a single value for the button is supported.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset call_to_actions = 4;
   */
  callToActions: AdTextAsset[];

  /**
   * List of YouTube video assets used for the ad.
   * Currently, only a single value for the YouTube video asset is supported.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdVideoAsset videos = 5;
   */
  videos: AdVideoAsset[];

  /**
   * List of image assets used for the companion banner.
   * Currently, only a single value for the companion banner asset is supported.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdImageAsset companion_banners = 6;
   */
  companionBanners: AdImageAsset[];

  /**
   * First part of text that appears in the ad with the displayed URL.
   *
   * @generated from field: string breadcrumb1 = 7;
   */
  breadcrumb1: string;

  /**
   * Second part of text that appears in the ad with the displayed URL.
   *
   * @generated from field: string breadcrumb2 = 8;
   */
  breadcrumb2: string;
};

/**
 * Describes the message google.ads.googleads.v16.common.VideoResponsiveAdInfo.
 * Use `create(VideoResponsiveAdInfoSchema)` to create a new message.
 */
export const VideoResponsiveAdInfoSchema: GenMessage<VideoResponsiveAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 15);

/**
 * A responsive search ad.
 *
 * Responsive search ads let you create an ad that adapts to show more text, and
 * more relevant messages, to your customers. Enter multiple headlines and
 * descriptions when creating a responsive search ad, and over time, Google Ads
 * will automatically test different combinations and learn which combinations
 * perform best. By adapting your ad's content to more closely match potential
 * customers' search terms, responsive search ads may improve your campaign's
 * performance.
 *
 * More information at https://support.google.com/google-ads/answer/7684791
 *
 * @generated from message google.ads.googleads.v16.common.ResponsiveSearchAdInfo
 */
export type ResponsiveSearchAdInfo = Message<"google.ads.googleads.v16.common.ResponsiveSearchAdInfo"> & {
  /**
   * List of text assets for headlines. When the ad serves the headlines will
   * be selected from this list.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset headlines = 1;
   */
  headlines: AdTextAsset[];

  /**
   * List of text assets for descriptions. When the ad serves the descriptions
   * will be selected from this list.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset descriptions = 2;
   */
  descriptions: AdTextAsset[];

  /**
   * First part of text that can be appended to the URL in the ad.
   *
   * @generated from field: optional string path1 = 5;
   */
  path1?: string;

  /**
   * Second part of text that can be appended to the URL in the ad. This field
   * can only be set when `path1` is also set.
   *
   * @generated from field: optional string path2 = 6;
   */
  path2?: string;
};

/**
 * Describes the message google.ads.googleads.v16.common.ResponsiveSearchAdInfo.
 * Use `create(ResponsiveSearchAdInfoSchema)` to create a new message.
 */
export const ResponsiveSearchAdInfoSchema: GenMessage<ResponsiveSearchAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 16);

/**
 * A legacy responsive display ad. Ads of this type are labeled 'Responsive ads'
 * in the Google Ads UI.
 *
 * @generated from message google.ads.googleads.v16.common.LegacyResponsiveDisplayAdInfo
 */
export type LegacyResponsiveDisplayAdInfo = Message<"google.ads.googleads.v16.common.LegacyResponsiveDisplayAdInfo"> & {
  /**
   * The short version of the ad's headline.
   *
   * @generated from field: optional string short_headline = 16;
   */
  shortHeadline?: string;

  /**
   * The long version of the ad's headline.
   *
   * @generated from field: optional string long_headline = 17;
   */
  longHeadline?: string;

  /**
   * The description of the ad.
   *
   * @generated from field: optional string description = 18;
   */
  description?: string;

  /**
   * The business name in the ad.
   *
   * @generated from field: optional string business_name = 19;
   */
  businessName?: string;

  /**
   * Advertiser's consent to allow flexible color. When true, the ad may be
   * served with different color if necessary. When false, the ad will be served
   * with the specified colors or a neutral color.
   * The default value is `true`.
   * Must be true if `main_color` and `accent_color` are not set.
   *
   * @generated from field: optional bool allow_flexible_color = 20;
   */
  allowFlexibleColor?: boolean;

  /**
   * The accent color of the ad in hexadecimal, for example, #ffffff for white.
   * If one of `main_color` and `accent_color` is set, the other is required as
   * well.
   *
   * @generated from field: optional string accent_color = 21;
   */
  accentColor?: string;

  /**
   * The main color of the ad in hexadecimal, for example, #ffffff for white.
   * If one of `main_color` and `accent_color` is set, the other is required as
   * well.
   *
   * @generated from field: optional string main_color = 22;
   */
  mainColor?: string;

  /**
   * The call-to-action text for the ad.
   *
   * @generated from field: optional string call_to_action_text = 23;
   */
  callToActionText?: string;

  /**
   * The MediaFile resource name of the logo image used in the ad.
   *
   * @generated from field: optional string logo_image = 24;
   */
  logoImage?: string;

  /**
   * The MediaFile resource name of the square logo image used in the ad.
   *
   * @generated from field: optional string square_logo_image = 25;
   */
  squareLogoImage?: string;

  /**
   * The MediaFile resource name of the marketing image used in the ad.
   *
   * @generated from field: optional string marketing_image = 26;
   */
  marketingImage?: string;

  /**
   * The MediaFile resource name of the square marketing image used in the ad.
   *
   * @generated from field: optional string square_marketing_image = 27;
   */
  squareMarketingImage?: string;

  /**
   * Specifies which format the ad will be served in. Default is ALL_FORMATS.
   *
   * @generated from field: google.ads.googleads.v16.enums.DisplayAdFormatSettingEnum.DisplayAdFormatSetting format_setting = 13;
   */
  formatSetting: DisplayAdFormatSettingEnum_DisplayAdFormatSetting;

  /**
   * Prefix before price. For example, 'as low as'.
   *
   * @generated from field: optional string price_prefix = 28;
   */
  pricePrefix?: string;

  /**
   * Promotion text used for dynamic formats of responsive ads. For example
   * 'Free two-day shipping'.
   *
   * @generated from field: optional string promo_text = 29;
   */
  promoText?: string;
};

/**
 * Describes the message google.ads.googleads.v16.common.LegacyResponsiveDisplayAdInfo.
 * Use `create(LegacyResponsiveDisplayAdInfoSchema)` to create a new message.
 */
export const LegacyResponsiveDisplayAdInfoSchema: GenMessage<LegacyResponsiveDisplayAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 17);

/**
 * An app ad.
 *
 * @generated from message google.ads.googleads.v16.common.AppAdInfo
 */
export type AppAdInfo = Message<"google.ads.googleads.v16.common.AppAdInfo"> & {
  /**
   * Mandatory ad text.
   *
   * @generated from field: google.ads.googleads.v16.common.AdTextAsset mandatory_ad_text = 1;
   */
  mandatoryAdText?: AdTextAsset;

  /**
   * List of text assets for headlines. When the ad serves the headlines will
   * be selected from this list.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset headlines = 2;
   */
  headlines: AdTextAsset[];

  /**
   * List of text assets for descriptions. When the ad serves the descriptions
   * will be selected from this list.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset descriptions = 3;
   */
  descriptions: AdTextAsset[];

  /**
   * List of image assets that may be displayed with the ad.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdImageAsset images = 4;
   */
  images: AdImageAsset[];

  /**
   * List of YouTube video assets that may be displayed with the ad.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdVideoAsset youtube_videos = 5;
   */
  youtubeVideos: AdVideoAsset[];

  /**
   * List of media bundle assets that may be used with the ad.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdMediaBundleAsset html5_media_bundles = 6;
   */
  html5MediaBundles: AdMediaBundleAsset[];
};

/**
 * Describes the message google.ads.googleads.v16.common.AppAdInfo.
 * Use `create(AppAdInfoSchema)` to create a new message.
 */
export const AppAdInfoSchema: GenMessage<AppAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 18);

/**
 * App engagement ads allow you to write text encouraging a specific action in
 * the app, like checking in, making a purchase, or booking a flight.
 * They allow you to send users to a specific part of your app where they can
 * find what they're looking for easier and faster.
 *
 * @generated from message google.ads.googleads.v16.common.AppEngagementAdInfo
 */
export type AppEngagementAdInfo = Message<"google.ads.googleads.v16.common.AppEngagementAdInfo"> & {
  /**
   * List of text assets for headlines. When the ad serves the headlines will
   * be selected from this list.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset headlines = 1;
   */
  headlines: AdTextAsset[];

  /**
   * List of text assets for descriptions. When the ad serves the descriptions
   * will be selected from this list.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset descriptions = 2;
   */
  descriptions: AdTextAsset[];

  /**
   * List of image assets that may be displayed with the ad.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdImageAsset images = 3;
   */
  images: AdImageAsset[];

  /**
   * List of video assets that may be displayed with the ad.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdVideoAsset videos = 4;
   */
  videos: AdVideoAsset[];
};

/**
 * Describes the message google.ads.googleads.v16.common.AppEngagementAdInfo.
 * Use `create(AppEngagementAdInfoSchema)` to create a new message.
 */
export const AppEngagementAdInfoSchema: GenMessage<AppEngagementAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 19);

/**
 * App pre-registration ads link to your app or game listing on Google Play, and
 * can run on Google Play, on YouTube (in-stream only), and within other apps
 * and mobile websites on the Display Network. It will help capture people's
 * interest in your app or game and generate an early install base for your app
 * or game before a launch.
 *
 * @generated from message google.ads.googleads.v16.common.AppPreRegistrationAdInfo
 */
export type AppPreRegistrationAdInfo = Message<"google.ads.googleads.v16.common.AppPreRegistrationAdInfo"> & {
  /**
   * List of text assets for headlines. When the ad serves the headlines will
   * be selected from this list.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset headlines = 1;
   */
  headlines: AdTextAsset[];

  /**
   * List of text assets for descriptions. When the ad serves the descriptions
   * will be selected from this list.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset descriptions = 2;
   */
  descriptions: AdTextAsset[];

  /**
   * List of image asset IDs whose images may be displayed with the ad.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdImageAsset images = 3;
   */
  images: AdImageAsset[];

  /**
   * List of YouTube video asset IDs whose videos may be displayed with the ad.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdVideoAsset youtube_videos = 4;
   */
  youtubeVideos: AdVideoAsset[];
};

/**
 * Describes the message google.ads.googleads.v16.common.AppPreRegistrationAdInfo.
 * Use `create(AppPreRegistrationAdInfoSchema)` to create a new message.
 */
export const AppPreRegistrationAdInfoSchema: GenMessage<AppPreRegistrationAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 20);

/**
 * A legacy app install ad that only can be used by a few select customers.
 *
 * @generated from message google.ads.googleads.v16.common.LegacyAppInstallAdInfo
 */
export type LegacyAppInstallAdInfo = Message<"google.ads.googleads.v16.common.LegacyAppInstallAdInfo"> & {
  /**
   * The ID of the mobile app.
   *
   * @generated from field: optional string app_id = 6;
   */
  appId?: string;

  /**
   * The app store the mobile app is available in.
   *
   * @generated from field: google.ads.googleads.v16.enums.LegacyAppInstallAdAppStoreEnum.LegacyAppInstallAdAppStore app_store = 2;
   */
  appStore: LegacyAppInstallAdAppStoreEnum_LegacyAppInstallAdAppStore;

  /**
   * The headline of the ad.
   *
   * @generated from field: optional string headline = 7;
   */
  headline?: string;

  /**
   * The first description line of the ad.
   *
   * @generated from field: optional string description1 = 8;
   */
  description1?: string;

  /**
   * The second description line of the ad.
   *
   * @generated from field: optional string description2 = 9;
   */
  description2?: string;
};

/**
 * Describes the message google.ads.googleads.v16.common.LegacyAppInstallAdInfo.
 * Use `create(LegacyAppInstallAdInfoSchema)` to create a new message.
 */
export const LegacyAppInstallAdInfoSchema: GenMessage<LegacyAppInstallAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 21);

/**
 * A responsive display ad.
 *
 * @generated from message google.ads.googleads.v16.common.ResponsiveDisplayAdInfo
 */
export type ResponsiveDisplayAdInfo = Message<"google.ads.googleads.v16.common.ResponsiveDisplayAdInfo"> & {
  /**
   * Marketing images to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
   * be 1.91:1 (+-1%). At least one `marketing_image` is required. Combined
   * with `square_marketing_images`, the maximum is 15.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdImageAsset marketing_images = 1;
   */
  marketingImages: AdImageAsset[];

  /**
   * Square marketing images to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
   * be 1:1 (+-1%). At least one square `marketing_image` is required. Combined
   * with `marketing_images`, the maximum is 15.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdImageAsset square_marketing_images = 2;
   */
  squareMarketingImages: AdImageAsset[];

  /**
   * Logo images to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 512x128 and the aspect ratio must
   * be 4:1 (+-1%). Combined with `square_logo_images`, the maximum is 5.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdImageAsset logo_images = 3;
   */
  logoImages: AdImageAsset[];

  /**
   * Square logo images to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must
   * be 1:1 (+-1%). Combined with `logo_images`, the maximum is 5.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdImageAsset square_logo_images = 4;
   */
  squareLogoImages: AdImageAsset[];

  /**
   * Short format headlines for the ad. The maximum length is 30 characters.
   * At least 1 and max 5 headlines can be specified.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset headlines = 5;
   */
  headlines: AdTextAsset[];

  /**
   * A required long format headline. The maximum length is 90 characters.
   *
   * @generated from field: google.ads.googleads.v16.common.AdTextAsset long_headline = 6;
   */
  longHeadline?: AdTextAsset;

  /**
   * Descriptive texts for the ad. The maximum length is 90 characters. At
   * least 1 and max 5 headlines can be specified.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset descriptions = 7;
   */
  descriptions: AdTextAsset[];

  /**
   * Optional YouTube videos for the ad. A maximum of 5 videos can be specified.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdVideoAsset youtube_videos = 8;
   */
  youtubeVideos: AdVideoAsset[];

  /**
   * The advertiser/brand name. Maximum display width is 25.
   *
   * @generated from field: optional string business_name = 17;
   */
  businessName?: string;

  /**
   * The main color of the ad in hexadecimal, for example, #ffffff for white.
   * If one of `main_color` and `accent_color` is set, the other is required as
   * well.
   *
   * @generated from field: optional string main_color = 18;
   */
  mainColor?: string;

  /**
   * The accent color of the ad in hexadecimal, for example, #ffffff for white.
   * If one of `main_color` and `accent_color` is set, the other is required as
   * well.
   *
   * @generated from field: optional string accent_color = 19;
   */
  accentColor?: string;

  /**
   * Advertiser's consent to allow flexible color. When true, the ad may be
   * served with different color if necessary. When false, the ad will be served
   * with the specified colors or a neutral color.
   * The default value is `true`.
   * Must be true if `main_color` and `accent_color` are not set.
   *
   * @generated from field: optional bool allow_flexible_color = 20;
   */
  allowFlexibleColor?: boolean;

  /**
   * The call-to-action text for the ad. Maximum display width is 30.
   *
   * @generated from field: optional string call_to_action_text = 21;
   */
  callToActionText?: string;

  /**
   * Prefix before price. For example, 'as low as'.
   *
   * @generated from field: optional string price_prefix = 22;
   */
  pricePrefix?: string;

  /**
   * Promotion text used for dynamic formats of responsive ads. For example
   * 'Free two-day shipping'.
   *
   * @generated from field: optional string promo_text = 23;
   */
  promoText?: string;

  /**
   * Specifies which format the ad will be served in. Default is ALL_FORMATS.
   *
   * @generated from field: google.ads.googleads.v16.enums.DisplayAdFormatSettingEnum.DisplayAdFormatSetting format_setting = 16;
   */
  formatSetting: DisplayAdFormatSettingEnum_DisplayAdFormatSetting;

  /**
   * Specification for various creative controls.
   *
   * @generated from field: google.ads.googleads.v16.common.ResponsiveDisplayAdControlSpec control_spec = 24;
   */
  controlSpec?: ResponsiveDisplayAdControlSpec;
};

/**
 * Describes the message google.ads.googleads.v16.common.ResponsiveDisplayAdInfo.
 * Use `create(ResponsiveDisplayAdInfoSchema)` to create a new message.
 */
export const ResponsiveDisplayAdInfoSchema: GenMessage<ResponsiveDisplayAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 22);

/**
 * A local ad.
 *
 * @generated from message google.ads.googleads.v16.common.LocalAdInfo
 */
export type LocalAdInfo = Message<"google.ads.googleads.v16.common.LocalAdInfo"> & {
  /**
   * List of text assets for headlines. When the ad serves the headlines will
   * be selected from this list. At least 1 and at most 5 headlines must be
   * specified.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset headlines = 1;
   */
  headlines: AdTextAsset[];

  /**
   * List of text assets for descriptions. When the ad serves the descriptions
   * will be selected from this list. At least 1 and at most 5 descriptions must
   * be specified.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset descriptions = 2;
   */
  descriptions: AdTextAsset[];

  /**
   * List of text assets for call-to-actions. When the ad serves the
   * call-to-actions will be selected from this list. At least 1 and at most
   * 5 call-to-actions must be specified.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset call_to_actions = 3;
   */
  callToActions: AdTextAsset[];

  /**
   * List of marketing image assets that may be displayed with the ad. The
   * images must be 314x600 pixels or 320x320 pixels. At least 1 and at most
   * 20 image assets must be specified.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdImageAsset marketing_images = 4;
   */
  marketingImages: AdImageAsset[];

  /**
   * List of logo image assets that may be displayed with the ad. The images
   * must be 128x128 pixels and not larger than 120KB. At least 1 and at most 5
   * image assets must be specified.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdImageAsset logo_images = 5;
   */
  logoImages: AdImageAsset[];

  /**
   * List of YouTube video assets that may be displayed with the ad. At least 1
   * and at most 20 video assets must be specified.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdVideoAsset videos = 6;
   */
  videos: AdVideoAsset[];

  /**
   * First part of optional text that can be appended to the URL in the ad.
   *
   * @generated from field: optional string path1 = 9;
   */
  path1?: string;

  /**
   * Second part of optional text that can be appended to the URL in the ad.
   * This field can only be set when `path1` is also set.
   *
   * @generated from field: optional string path2 = 10;
   */
  path2?: string;
};

/**
 * Describes the message google.ads.googleads.v16.common.LocalAdInfo.
 * Use `create(LocalAdInfoSchema)` to create a new message.
 */
export const LocalAdInfoSchema: GenMessage<LocalAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 23);

/**
 * A generic type of display ad. The exact ad format is controlled by the
 * `display_upload_product_type` field, which determines what kinds of data
 * need to be included with the ad.
 *
 * @generated from message google.ads.googleads.v16.common.DisplayUploadAdInfo
 */
export type DisplayUploadAdInfo = Message<"google.ads.googleads.v16.common.DisplayUploadAdInfo"> & {
  /**
   * The product type of this ad. See comments on the enum for details.
   *
   * @generated from field: google.ads.googleads.v16.enums.DisplayUploadProductTypeEnum.DisplayUploadProductType display_upload_product_type = 1;
   */
  displayUploadProductType: DisplayUploadProductTypeEnum_DisplayUploadProductType;

  /**
   * The asset data that makes up the ad.
   *
   * @generated from oneof google.ads.googleads.v16.common.DisplayUploadAdInfo.media_asset
   */
  mediaAsset: {
    /**
     * A media bundle asset to be used in the ad. For information about the
     * media bundle for HTML5_UPLOAD_AD, see
     * https://support.google.com/google-ads/answer/1722096
     * Media bundles that are part of dynamic product types use a special format
     * that needs to be created through the Google Web Designer. See
     * https://support.google.com/webdesigner/answer/7543898 for more
     * information.
     *
     * @generated from field: google.ads.googleads.v16.common.AdMediaBundleAsset media_bundle = 2;
     */
    value: AdMediaBundleAsset;
    case: "mediaBundle";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v16.common.DisplayUploadAdInfo.
 * Use `create(DisplayUploadAdInfoSchema)` to create a new message.
 */
export const DisplayUploadAdInfoSchema: GenMessage<DisplayUploadAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 24);

/**
 * Specification for various creative controls for a responsive display ad.
 *
 * @generated from message google.ads.googleads.v16.common.ResponsiveDisplayAdControlSpec
 */
export type ResponsiveDisplayAdControlSpec = Message<"google.ads.googleads.v16.common.ResponsiveDisplayAdControlSpec"> & {
  /**
   * Whether the advertiser has opted into the asset enhancements feature.
   *
   * @generated from field: bool enable_asset_enhancements = 1;
   */
  enableAssetEnhancements: boolean;

  /**
   * Whether the advertiser has opted into auto-gen video feature.
   *
   * @generated from field: bool enable_autogen_video = 2;
   */
  enableAutogenVideo: boolean;
};

/**
 * Describes the message google.ads.googleads.v16.common.ResponsiveDisplayAdControlSpec.
 * Use `create(ResponsiveDisplayAdControlSpecSchema)` to create a new message.
 */
export const ResponsiveDisplayAdControlSpecSchema: GenMessage<ResponsiveDisplayAdControlSpec> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 25);

/**
 * A Smart campaign ad.
 *
 * @generated from message google.ads.googleads.v16.common.SmartCampaignAdInfo
 */
export type SmartCampaignAdInfo = Message<"google.ads.googleads.v16.common.SmartCampaignAdInfo"> & {
  /**
   * List of text assets, each of which corresponds to a headline when the ad
   * serves. This list consists of a minimum of 3 and up to 15 text assets.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset headlines = 1;
   */
  headlines: AdTextAsset[];

  /**
   * List of text assets, each of which corresponds to a description when the ad
   * serves. This list consists of a minimum of 2 and up to 4 text assets.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset descriptions = 2;
   */
  descriptions: AdTextAsset[];
};

/**
 * Describes the message google.ads.googleads.v16.common.SmartCampaignAdInfo.
 * Use `create(SmartCampaignAdInfoSchema)` to create a new message.
 */
export const SmartCampaignAdInfoSchema: GenMessage<SmartCampaignAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 26);

/**
 * A call ad.
 *
 * @generated from message google.ads.googleads.v16.common.CallAdInfo
 */
export type CallAdInfo = Message<"google.ads.googleads.v16.common.CallAdInfo"> & {
  /**
   * The country code in the ad.
   *
   * @generated from field: string country_code = 1;
   */
  countryCode: string;

  /**
   * The phone number in the ad.
   *
   * @generated from field: string phone_number = 2;
   */
  phoneNumber: string;

  /**
   * The business name in the ad.
   *
   * @generated from field: string business_name = 3;
   */
  businessName: string;

  /**
   * First headline in the ad.
   *
   * @generated from field: string headline1 = 11;
   */
  headline1: string;

  /**
   * Second headline in the ad.
   *
   * @generated from field: string headline2 = 12;
   */
  headline2: string;

  /**
   * The first line of the ad's description.
   *
   * @generated from field: string description1 = 4;
   */
  description1: string;

  /**
   * The second line of the ad's description.
   *
   * @generated from field: string description2 = 5;
   */
  description2: string;

  /**
   * Whether to enable call tracking for the creative. Enabling call
   * tracking also enables call conversions.
   *
   * @generated from field: bool call_tracked = 6;
   */
  callTracked: boolean;

  /**
   * Whether to disable call conversion for the creative.
   * If set to `true`, disables call conversions even when `call_tracked` is
   * `true`.
   * If `call_tracked` is `false`, this field is ignored.
   *
   * @generated from field: bool disable_call_conversion = 7;
   */
  disableCallConversion: boolean;

  /**
   * The URL to be used for phone number verification.
   *
   * @generated from field: string phone_number_verification_url = 8;
   */
  phoneNumberVerificationUrl: string;

  /**
   * The conversion action to attribute a call conversion to. If not set a
   * default conversion action is used. This field only has effect if
   * `call_tracked` is set to `true`. Otherwise this field is ignored.
   *
   * @generated from field: string conversion_action = 9;
   */
  conversionAction: string;

  /**
   * The call conversion behavior of this call ad. It can use its own call
   * conversion setting, inherit the account level setting, or be disabled.
   *
   * @generated from field: google.ads.googleads.v16.enums.CallConversionReportingStateEnum.CallConversionReportingState conversion_reporting_state = 10;
   */
  conversionReportingState: CallConversionReportingStateEnum_CallConversionReportingState;

  /**
   * First part of text that can be appended to the URL in the ad. Optional.
   *
   * @generated from field: string path1 = 13;
   */
  path1: string;

  /**
   * Second part of text that can be appended to the URL in the ad. This field
   * can only be set when `path1` is also set. Optional.
   *
   * @generated from field: string path2 = 14;
   */
  path2: string;
};

/**
 * Describes the message google.ads.googleads.v16.common.CallAdInfo.
 * Use `create(CallAdInfoSchema)` to create a new message.
 */
export const CallAdInfoSchema: GenMessage<CallAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 27);

/**
 * A discovery multi asset ad.
 *
 * @generated from message google.ads.googleads.v16.common.DiscoveryMultiAssetAdInfo
 */
export type DiscoveryMultiAssetAdInfo = Message<"google.ads.googleads.v16.common.DiscoveryMultiAssetAdInfo"> & {
  /**
   * Marketing image assets to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
   * be 1.91:1 (+-1%). Required if square_marketing_images is
   * not present. Combined with `square_marketing_images` and
   * `portrait_marketing_images` the maximum is 20.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdImageAsset marketing_images = 1;
   */
  marketingImages: AdImageAsset[];

  /**
   * Square marketing image assets to be used in the ad. Valid image types are
   * GIF, JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
   * be 1:1 (+-1%). Required if marketing_images is not present.  Combined with
   * `marketing_images` and `portrait_marketing_images` the maximum is 20.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdImageAsset square_marketing_images = 2;
   */
  squareMarketingImages: AdImageAsset[];

  /**
   * Portrait marketing image assets to be used in the ad. Valid image types are
   * GIF, JPEG, and PNG. The minimum size is 480x600 and the aspect ratio must
   * be 4:5 (+-1%).  Combined with `marketing_images` and
   * `square_marketing_images` the maximum is 20.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdImageAsset portrait_marketing_images = 3;
   */
  portraitMarketingImages: AdImageAsset[];

  /**
   * Logo image assets to be used in the ad. Valid image types are GIF,
   * JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must be
   * 1:1 (+-1%). At least 1 and max 5 logo images can be specified.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdImageAsset logo_images = 4;
   */
  logoImages: AdImageAsset[];

  /**
   * Headline text asset of the ad. Maximum display width is 30. At least 1 and
   * max 5 headlines can be specified.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset headlines = 5;
   */
  headlines: AdTextAsset[];

  /**
   * The descriptive text of the ad. Maximum display width is 90. At least 1 and
   * max 5 descriptions can be specified.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset descriptions = 6;
   */
  descriptions: AdTextAsset[];

  /**
   * The Advertiser/brand name. Maximum display width is 25. Required.
   *
   * @generated from field: optional string business_name = 7;
   */
  businessName?: string;

  /**
   * Call to action text.
   *
   * @generated from field: optional string call_to_action_text = 8;
   */
  callToActionText?: string;

  /**
   * Boolean option that indicates if this ad must be served with lead form.
   *
   * @generated from field: optional bool lead_form_only = 9;
   */
  leadFormOnly?: boolean;
};

/**
 * Describes the message google.ads.googleads.v16.common.DiscoveryMultiAssetAdInfo.
 * Use `create(DiscoveryMultiAssetAdInfoSchema)` to create a new message.
 */
export const DiscoveryMultiAssetAdInfoSchema: GenMessage<DiscoveryMultiAssetAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 28);

/**
 * A discovery carousel ad.
 *
 * @generated from message google.ads.googleads.v16.common.DiscoveryCarouselAdInfo
 */
export type DiscoveryCarouselAdInfo = Message<"google.ads.googleads.v16.common.DiscoveryCarouselAdInfo"> & {
  /**
   * Required. The Advertiser/brand name.
   *
   * @generated from field: string business_name = 1;
   */
  businessName: string;

  /**
   * Required. Logo image to be used in the ad.  The minimum size is 128x128 and
   * the aspect ratio must be 1:1 (+-1%).
   *
   * @generated from field: google.ads.googleads.v16.common.AdImageAsset logo_image = 2;
   */
  logoImage?: AdImageAsset;

  /**
   * Required. Headline of the ad.
   *
   * @generated from field: google.ads.googleads.v16.common.AdTextAsset headline = 3;
   */
  headline?: AdTextAsset;

  /**
   * Required. The descriptive text of the ad.
   *
   * @generated from field: google.ads.googleads.v16.common.AdTextAsset description = 4;
   */
  description?: AdTextAsset;

  /**
   * Call to action text.
   *
   * @generated from field: string call_to_action_text = 5;
   */
  callToActionText: string;

  /**
   * Required. Carousel cards that will display with the ad. Min 2 max 10.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdDiscoveryCarouselCardAsset carousel_cards = 6;
   */
  carouselCards: AdDiscoveryCarouselCardAsset[];
};

/**
 * Describes the message google.ads.googleads.v16.common.DiscoveryCarouselAdInfo.
 * Use `create(DiscoveryCarouselAdInfoSchema)` to create a new message.
 */
export const DiscoveryCarouselAdInfoSchema: GenMessage<DiscoveryCarouselAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 29);

/**
 * A discovery video responsive ad.
 *
 * @generated from message google.ads.googleads.v16.common.DiscoveryVideoResponsiveAdInfo
 */
export type DiscoveryVideoResponsiveAdInfo = Message<"google.ads.googleads.v16.common.DiscoveryVideoResponsiveAdInfo"> & {
  /**
   * List of text assets used for the short headline.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset headlines = 1;
   */
  headlines: AdTextAsset[];

  /**
   * List of text assets used for the long headline.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset long_headlines = 2;
   */
  longHeadlines: AdTextAsset[];

  /**
   * List of text assets used for the description.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdTextAsset descriptions = 3;
   */
  descriptions: AdTextAsset[];

  /**
   * List of YouTube video assets used for the ad.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdVideoAsset videos = 4;
   */
  videos: AdVideoAsset[];

  /**
   * Logo image to be used in the ad. Valid image types are GIF, JPEG, and PNG.
   * The minimum size is 128x128 and the aspect ratio must be 1:1 (+-1%).
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdImageAsset logo_images = 5;
   */
  logoImages: AdImageAsset[];

  /**
   * First part of text that appears in the ad with the displayed URL.
   *
   * @generated from field: string breadcrumb1 = 6;
   */
  breadcrumb1: string;

  /**
   * Second part of text that appears in the ad with the displayed URL.
   *
   * @generated from field: string breadcrumb2 = 7;
   */
  breadcrumb2: string;

  /**
   * Required. The advertiser/brand name.
   *
   * @generated from field: google.ads.googleads.v16.common.AdTextAsset business_name = 8;
   */
  businessName?: AdTextAsset;

  /**
   * Assets of type CallToActionAsset used for the "Call To Action" button.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.AdCallToActionAsset call_to_actions = 9;
   */
  callToActions: AdCallToActionAsset[];
};

/**
 * Describes the message google.ads.googleads.v16.common.DiscoveryVideoResponsiveAdInfo.
 * Use `create(DiscoveryVideoResponsiveAdInfoSchema)` to create a new message.
 */
export const DiscoveryVideoResponsiveAdInfoSchema: GenMessage<DiscoveryVideoResponsiveAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 30);

/**
 * A Demand Gen product ad.
 *
 * @generated from message google.ads.googleads.v16.common.DemandGenProductAdInfo
 */
export type DemandGenProductAdInfo = Message<"google.ads.googleads.v16.common.DemandGenProductAdInfo"> & {
  /**
   * Required. Text asset used for the short headline.
   *
   * @generated from field: optional google.ads.googleads.v16.common.AdTextAsset headline = 1;
   */
  headline?: AdTextAsset;

  /**
   * Required. Text asset used for the description.
   *
   * @generated from field: optional google.ads.googleads.v16.common.AdTextAsset description = 2;
   */
  description?: AdTextAsset;

  /**
   * Required. Logo image to be used in the ad. Valid image types are GIF, JPEG,
   * and PNG. The minimum size is 128x128 and the aspect ratio must be 1:1
   * (+-1%).
   *
   * @generated from field: optional google.ads.googleads.v16.common.AdImageAsset logo_image = 3;
   */
  logoImage?: AdImageAsset;

  /**
   * First part of text that appears in the ad with the displayed URL.
   *
   * @generated from field: string breadcrumb1 = 4;
   */
  breadcrumb1: string;

  /**
   * Second part of text that appears in the ad with the displayed URL.
   *
   * @generated from field: string breadcrumb2 = 5;
   */
  breadcrumb2: string;

  /**
   * Required. The advertiser/brand name.
   *
   * @generated from field: google.ads.googleads.v16.common.AdTextAsset business_name = 6;
   */
  businessName?: AdTextAsset;

  /**
   * Asset of type CallToActionAsset used for the "Call To Action" button.
   *
   * @generated from field: optional google.ads.googleads.v16.common.AdCallToActionAsset call_to_action = 7;
   */
  callToAction?: AdCallToActionAsset;
};

/**
 * Describes the message google.ads.googleads.v16.common.DemandGenProductAdInfo.
 * Use `create(DemandGenProductAdInfoSchema)` to create a new message.
 */
export const DemandGenProductAdInfoSchema: GenMessage<DemandGenProductAdInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_common_ad_type_infos, 31);

