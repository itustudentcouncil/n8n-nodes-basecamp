// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/ads/googleads/v16/resources/bidding_strategy.proto (package google.ads.googleads.v16.resources, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { EnhancedCpc, MaximizeConversions, MaximizeConversionValue, TargetCpa, TargetImpressionShare, TargetRoas, TargetSpend } from "../common/bidding_pb";
import { file_google_ads_googleads_v16_common_bidding } from "../common/bidding_pb";
import type { BiddingStrategyStatusEnum_BiddingStrategyStatus } from "../enums/bidding_strategy_status_pb";
import { file_google_ads_googleads_v16_enums_bidding_strategy_status } from "../enums/bidding_strategy_status_pb";
import type { BiddingStrategyTypeEnum_BiddingStrategyType } from "../enums/bidding_strategy_type_pb";
import { file_google_ads_googleads_v16_enums_bidding_strategy_type } from "../enums/bidding_strategy_type_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/ads/googleads/v16/resources/bidding_strategy.proto.
 */
export const file_google_ads_googleads_v16_resources_bidding_strategy: GenFile = /*@__PURE__*/
  fileDesc("Cjlnb29nbGUvYWRzL2dvb2dsZWFkcy92MTYvcmVzb3VyY2VzL2JpZGRpbmdfc3RyYXRlZ3kucHJvdG8SImdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNi5yZXNvdXJjZXMi/gkKD0JpZGRpbmdTdHJhdGVneRJHCg1yZXNvdXJjZV9uYW1lGAEgASgJQjDgQQX6QSoKKGdvb2dsZWFkcy5nb29nbGVhcGlzLmNvbS9CaWRkaW5nU3RyYXRlZ3kSFAoCaWQYECABKANCA+BBA0gBiAEBEhEKBG5hbWUYESABKAlIAogBARJkCgZzdGF0dXMYDyABKA4yTy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTYuZW51bXMuQmlkZGluZ1N0cmF0ZWd5U3RhdHVzRW51bS5CaWRkaW5nU3RyYXRlZ3lTdGF0dXNCA+BBAxJeCgR0eXBlGAUgASgOMksuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE2LmVudW1zLkJpZGRpbmdTdHJhdGVneVR5cGVFbnVtLkJpZGRpbmdTdHJhdGVneVR5cGVCA+BBAxIaCg1jdXJyZW5jeV9jb2RlGBcgASgJQgPgQQUSKQoXZWZmZWN0aXZlX2N1cnJlbmN5X2NvZGUYFCABKAlCA+BBA0gDiAEBEiIKGmFsaWduZWRfY2FtcGFpZ25fYnVkZ2V0X2lkGBkgASgDEiAKDmNhbXBhaWduX2NvdW50GBIgASgDQgPgQQNIBIgBARIsChpub25fcmVtb3ZlZF9jYW1wYWlnbl9jb3VudBgTIAEoA0ID4EEDSAWIAQESRAoMZW5oYW5jZWRfY3BjGAcgASgLMiwuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE2LmNvbW1vbi5FbmhhbmNlZENwY0gAEl0KGW1heGltaXplX2NvbnZlcnNpb25fdmFsdWUYFSABKAsyOC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTYuY29tbW9uLk1heGltaXplQ29udmVyc2lvblZhbHVlSAASVAoUbWF4aW1pemVfY29udmVyc2lvbnMYFiABKAsyNC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTYuY29tbW9uLk1heGltaXplQ29udmVyc2lvbnNIABJACgp0YXJnZXRfY3BhGAkgASgLMiouZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE2LmNvbW1vbi5UYXJnZXRDcGFIABJZChd0YXJnZXRfaW1wcmVzc2lvbl9zaGFyZRgwIAEoCzI2Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNi5jb21tb24uVGFyZ2V0SW1wcmVzc2lvblNoYXJlSAASQgoLdGFyZ2V0X3JvYXMYCyABKAsyKy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTYuY29tbW9uLlRhcmdldFJvYXNIABJECgx0YXJnZXRfc3BlbmQYDCABKAsyLC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTYuY29tbW9uLlRhcmdldFNwZW5kSAA6bupBawooZ29vZ2xlYWRzLmdvb2dsZWFwaXMuY29tL0JpZGRpbmdTdHJhdGVneRI/Y3VzdG9tZXJzL3tjdXN0b21lcl9pZH0vYmlkZGluZ1N0cmF0ZWdpZXMve2JpZGRpbmdfc3RyYXRlZ3lfaWR9QggKBnNjaGVtZUIFCgNfaWRCBwoFX25hbWVCGgoYX2VmZmVjdGl2ZV9jdXJyZW5jeV9jb2RlQhEKD19jYW1wYWlnbl9jb3VudEIdChtfbm9uX3JlbW92ZWRfY2FtcGFpZ25fY291bnRChgIKJmNvbS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTYucmVzb3VyY2VzQhRCaWRkaW5nU3RyYXRlZ3lQcm90b1ABWktnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Fkcy9nb29nbGVhZHMvdjE2L3Jlc291cmNlcztyZXNvdXJjZXOiAgNHQUGqAiJHb29nbGUuQWRzLkdvb2dsZUFkcy5WMTYuUmVzb3VyY2VzygIiR29vZ2xlXEFkc1xHb29nbGVBZHNcVjE2XFJlc291cmNlc+oCJkdvb2dsZTo6QWRzOjpHb29nbGVBZHM6OlYxNjo6UmVzb3VyY2VzYgZwcm90bzM", [file_google_ads_googleads_v16_common_bidding, file_google_ads_googleads_v16_enums_bidding_strategy_status, file_google_ads_googleads_v16_enums_bidding_strategy_type, file_google_api_field_behavior, file_google_api_resource]);

/**
 * A bidding strategy.
 *
 * @generated from message google.ads.googleads.v16.resources.BiddingStrategy
 */
export type BiddingStrategy = Message<"google.ads.googleads.v16.resources.BiddingStrategy"> & {
  /**
   * Immutable. The resource name of the bidding strategy.
   * Bidding strategy resource names have the form:
   *
   * `customers/{customer_id}/biddingStrategies/{bidding_strategy_id}`
   *
   * @generated from field: string resource_name = 1;
   */
  resourceName: string;

  /**
   * Output only. The ID of the bidding strategy.
   *
   * @generated from field: optional int64 id = 16;
   */
  id?: bigint;

  /**
   * The name of the bidding strategy.
   * All bidding strategies within an account must be named distinctly.
   *
   * The length of this string should be between 1 and 255, inclusive,
   * in UTF-8 bytes, (trimmed).
   *
   * @generated from field: optional string name = 17;
   */
  name?: string;

  /**
   * Output only. The status of the bidding strategy.
   *
   * This field is read-only.
   *
   * @generated from field: google.ads.googleads.v16.enums.BiddingStrategyStatusEnum.BiddingStrategyStatus status = 15;
   */
  status: BiddingStrategyStatusEnum_BiddingStrategyStatus;

  /**
   * Output only. The type of the bidding strategy.
   * Create a bidding strategy by setting the bidding scheme.
   *
   * This field is read-only.
   *
   * @generated from field: google.ads.googleads.v16.enums.BiddingStrategyTypeEnum.BiddingStrategyType type = 5;
   */
  type: BiddingStrategyTypeEnum_BiddingStrategyType;

  /**
   * Immutable. The currency used by the bidding strategy (ISO 4217 three-letter
   * code).
   *
   * For bidding strategies in manager customers, this currency can be set on
   * creation and defaults to the manager customer's currency. For serving
   * customers, this field cannot be set; all strategies in a serving customer
   * implicitly use the serving customer's currency. In all cases the
   * effective_currency_code field returns the currency used by the strategy.
   *
   * @generated from field: string currency_code = 23;
   */
  currencyCode: string;

  /**
   * Output only. The currency used by the bidding strategy (ISO 4217
   * three-letter code).
   *
   * For bidding strategies in manager customers, this is the currency set by
   * the advertiser when creating the strategy. For serving customers, this is
   * the customer's currency_code.
   *
   * Bidding strategy metrics are reported in this currency.
   *
   * This field is read-only.
   *
   * @generated from field: optional string effective_currency_code = 20;
   */
  effectiveCurrencyCode?: string;

  /**
   * ID of the campaign budget that this portfolio bidding strategy
   * is aligned with. When a portfolio and a campaign budget are aligned, that
   * means that they are attached to the same set of campaigns. After a bidding
   * strategy is aligned with a campaign budget, campaigns that are added to the
   * bidding strategy must also use the aligned campaign budget.
   *
   * @generated from field: int64 aligned_campaign_budget_id = 25;
   */
  alignedCampaignBudgetId: bigint;

  /**
   * Output only. The number of campaigns attached to this bidding strategy.
   *
   * This field is read-only.
   *
   * @generated from field: optional int64 campaign_count = 18;
   */
  campaignCount?: bigint;

  /**
   * Output only. The number of non-removed campaigns attached to this bidding
   * strategy.
   *
   * This field is read-only.
   *
   * @generated from field: optional int64 non_removed_campaign_count = 19;
   */
  nonRemovedCampaignCount?: bigint;

  /**
   * The bidding scheme.
   *
   * Only one can be set.
   *
   * @generated from oneof google.ads.googleads.v16.resources.BiddingStrategy.scheme
   */
  scheme: {
    /**
     * A bidding strategy that raises bids for clicks that seem more likely to
     * lead to a conversion and lowers them for clicks where they seem less
     * likely.
     *
     * @generated from field: google.ads.googleads.v16.common.EnhancedCpc enhanced_cpc = 7;
     */
    value: EnhancedCpc;
    case: "enhancedCpc";
  } | {
    /**
     * An automated bidding strategy to help get the most conversion value for
     * your campaigns while spending your budget.
     *
     * @generated from field: google.ads.googleads.v16.common.MaximizeConversionValue maximize_conversion_value = 21;
     */
    value: MaximizeConversionValue;
    case: "maximizeConversionValue";
  } | {
    /**
     * An automated bidding strategy to help get the most conversions for your
     * campaigns while spending your budget.
     *
     * @generated from field: google.ads.googleads.v16.common.MaximizeConversions maximize_conversions = 22;
     */
    value: MaximizeConversions;
    case: "maximizeConversions";
  } | {
    /**
     * A bidding strategy that sets bids to help get as many conversions as
     * possible at the target cost-per-acquisition (CPA) you set.
     *
     * @generated from field: google.ads.googleads.v16.common.TargetCpa target_cpa = 9;
     */
    value: TargetCpa;
    case: "targetCpa";
  } | {
    /**
     * A bidding strategy that automatically optimizes towards a chosen
     * percentage of impressions.
     *
     * @generated from field: google.ads.googleads.v16.common.TargetImpressionShare target_impression_share = 48;
     */
    value: TargetImpressionShare;
    case: "targetImpressionShare";
  } | {
    /**
     * A bidding strategy that helps you maximize revenue while averaging a
     * specific target Return On Ad Spend (ROAS).
     *
     * @generated from field: google.ads.googleads.v16.common.TargetRoas target_roas = 11;
     */
    value: TargetRoas;
    case: "targetRoas";
  } | {
    /**
     * A bid strategy that sets your bids to help get as many clicks as
     * possible within your budget.
     *
     * @generated from field: google.ads.googleads.v16.common.TargetSpend target_spend = 12;
     */
    value: TargetSpend;
    case: "targetSpend";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v16.resources.BiddingStrategy.
 * Use `create(BiddingStrategySchema)` to create a new message.
 */
export const BiddingStrategySchema: GenMessage<BiddingStrategy> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_bidding_strategy, 0);

