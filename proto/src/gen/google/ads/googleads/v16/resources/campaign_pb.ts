// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/ads/googleads/v16/resources/campaign.proto (package google.ads.googleads.v16.resources, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Commission, ManualCpa, ManualCpc, ManualCpm, ManualCpv, MaximizeConversions, MaximizeConversionValue, PercentCpc, TargetCpa, TargetCpm, TargetImpressionShare, TargetRoas, TargetSpend } from "../common/bidding_pb";
import { file_google_ads_googleads_v16_common_bidding } from "../common/bidding_pb";
import type { CustomParameter } from "../common/custom_parameter_pb";
import { file_google_ads_googleads_v16_common_custom_parameter } from "../common/custom_parameter_pb";
import type { FrequencyCapEntry } from "../common/frequency_cap_pb";
import { file_google_ads_googleads_v16_common_frequency_cap } from "../common/frequency_cap_pb";
import type { RealTimeBiddingSetting } from "../common/real_time_bidding_setting_pb";
import { file_google_ads_googleads_v16_common_real_time_bidding_setting } from "../common/real_time_bidding_setting_pb";
import type { TargetingSetting } from "../common/targeting_setting_pb";
import { file_google_ads_googleads_v16_common_targeting_setting } from "../common/targeting_setting_pb";
import type { AdServingOptimizationStatusEnum_AdServingOptimizationStatus } from "../enums/ad_serving_optimization_status_pb";
import { file_google_ads_googleads_v16_enums_ad_serving_optimization_status } from "../enums/ad_serving_optimization_status_pb";
import type { AdvertisingChannelSubTypeEnum_AdvertisingChannelSubType } from "../enums/advertising_channel_sub_type_pb";
import { file_google_ads_googleads_v16_enums_advertising_channel_sub_type } from "../enums/advertising_channel_sub_type_pb";
import type { AdvertisingChannelTypeEnum_AdvertisingChannelType } from "../enums/advertising_channel_type_pb";
import { file_google_ads_googleads_v16_enums_advertising_channel_type } from "../enums/advertising_channel_type_pb";
import type { AppCampaignAppStoreEnum_AppCampaignAppStore } from "../enums/app_campaign_app_store_pb";
import { file_google_ads_googleads_v16_enums_app_campaign_app_store } from "../enums/app_campaign_app_store_pb";
import type { AppCampaignBiddingStrategyGoalTypeEnum_AppCampaignBiddingStrategyGoalType } from "../enums/app_campaign_bidding_strategy_goal_type_pb";
import { file_google_ads_googleads_v16_enums_app_campaign_bidding_strategy_goal_type } from "../enums/app_campaign_bidding_strategy_goal_type_pb";
import type { AssetAutomationStatusEnum_AssetAutomationStatus } from "../enums/asset_automation_status_pb";
import { file_google_ads_googleads_v16_enums_asset_automation_status } from "../enums/asset_automation_status_pb";
import type { AssetAutomationTypeEnum_AssetAutomationType } from "../enums/asset_automation_type_pb";
import { file_google_ads_googleads_v16_enums_asset_automation_type } from "../enums/asset_automation_type_pb";
import type { AssetFieldTypeEnum_AssetFieldType } from "../enums/asset_field_type_pb";
import { file_google_ads_googleads_v16_enums_asset_field_type } from "../enums/asset_field_type_pb";
import type { AssetSetTypeEnum_AssetSetType } from "../enums/asset_set_type_pb";
import { file_google_ads_googleads_v16_enums_asset_set_type } from "../enums/asset_set_type_pb";
import type { BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus } from "../enums/bidding_strategy_system_status_pb";
import { file_google_ads_googleads_v16_enums_bidding_strategy_system_status } from "../enums/bidding_strategy_system_status_pb";
import type { BiddingStrategyTypeEnum_BiddingStrategyType } from "../enums/bidding_strategy_type_pb";
import { file_google_ads_googleads_v16_enums_bidding_strategy_type } from "../enums/bidding_strategy_type_pb";
import type { BrandSafetySuitabilityEnum_BrandSafetySuitability } from "../enums/brand_safety_suitability_pb";
import { file_google_ads_googleads_v16_enums_brand_safety_suitability } from "../enums/brand_safety_suitability_pb";
import type { CampaignExperimentTypeEnum_CampaignExperimentType } from "../enums/campaign_experiment_type_pb";
import { file_google_ads_googleads_v16_enums_campaign_experiment_type } from "../enums/campaign_experiment_type_pb";
import type { CampaignPrimaryStatusEnum_CampaignPrimaryStatus } from "../enums/campaign_primary_status_pb";
import { file_google_ads_googleads_v16_enums_campaign_primary_status } from "../enums/campaign_primary_status_pb";
import type { CampaignPrimaryStatusReasonEnum_CampaignPrimaryStatusReason } from "../enums/campaign_primary_status_reason_pb";
import { file_google_ads_googleads_v16_enums_campaign_primary_status_reason } from "../enums/campaign_primary_status_reason_pb";
import type { CampaignServingStatusEnum_CampaignServingStatus } from "../enums/campaign_serving_status_pb";
import { file_google_ads_googleads_v16_enums_campaign_serving_status } from "../enums/campaign_serving_status_pb";
import type { CampaignStatusEnum_CampaignStatus } from "../enums/campaign_status_pb";
import { file_google_ads_googleads_v16_enums_campaign_status } from "../enums/campaign_status_pb";
import type { ListingTypeEnum_ListingType } from "../enums/listing_type_pb";
import { file_google_ads_googleads_v16_enums_listing_type } from "../enums/listing_type_pb";
import type { LocationSourceTypeEnum_LocationSourceType } from "../enums/location_source_type_pb";
import { file_google_ads_googleads_v16_enums_location_source_type } from "../enums/location_source_type_pb";
import type { NegativeGeoTargetTypeEnum_NegativeGeoTargetType } from "../enums/negative_geo_target_type_pb";
import { file_google_ads_googleads_v16_enums_negative_geo_target_type } from "../enums/negative_geo_target_type_pb";
import type { OptimizationGoalTypeEnum_OptimizationGoalType } from "../enums/optimization_goal_type_pb";
import { file_google_ads_googleads_v16_enums_optimization_goal_type } from "../enums/optimization_goal_type_pb";
import type { PaymentModeEnum_PaymentMode } from "../enums/payment_mode_pb";
import { file_google_ads_googleads_v16_enums_payment_mode } from "../enums/payment_mode_pb";
import type { PerformanceMaxUpgradeStatusEnum_PerformanceMaxUpgradeStatus } from "../enums/performance_max_upgrade_status_pb";
import { file_google_ads_googleads_v16_enums_performance_max_upgrade_status } from "../enums/performance_max_upgrade_status_pb";
import type { PositiveGeoTargetTypeEnum_PositiveGeoTargetType } from "../enums/positive_geo_target_type_pb";
import { file_google_ads_googleads_v16_enums_positive_geo_target_type } from "../enums/positive_geo_target_type_pb";
import type { VanityPharmaDisplayUrlModeEnum_VanityPharmaDisplayUrlMode } from "../enums/vanity_pharma_display_url_mode_pb";
import { file_google_ads_googleads_v16_enums_vanity_pharma_display_url_mode } from "../enums/vanity_pharma_display_url_mode_pb";
import type { VanityPharmaTextEnum_VanityPharmaText } from "../enums/vanity_pharma_text_pb";
import { file_google_ads_googleads_v16_enums_vanity_pharma_text } from "../enums/vanity_pharma_text_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/ads/googleads/v16/resources/campaign.proto.
 */
export const file_google_ads_googleads_v16_resources_campaign: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_ads_googleads_v16_common_bidding, file_google_ads_googleads_v16_common_custom_parameter, file_google_ads_googleads_v16_common_frequency_cap, file_google_ads_googleads_v16_common_real_time_bidding_setting, file_google_ads_googleads_v16_common_targeting_setting, file_google_ads_googleads_v16_enums_ad_serving_optimization_status, file_google_ads_googleads_v16_enums_advertising_channel_sub_type, file_google_ads_googleads_v16_enums_advertising_channel_type, file_google_ads_googleads_v16_enums_app_campaign_app_store, file_google_ads_googleads_v16_enums_app_campaign_bidding_strategy_goal_type, file_google_ads_googleads_v16_enums_asset_automation_status, file_google_ads_googleads_v16_enums_asset_automation_type, file_google_ads_googleads_v16_enums_asset_field_type, file_google_ads_googleads_v16_enums_asset_set_type, file_google_ads_googleads_v16_enums_bidding_strategy_system_status, file_google_ads_googleads_v16_enums_bidding_strategy_type, file_google_ads_googleads_v16_enums_brand_safety_suitability, file_google_ads_googleads_v16_enums_campaign_experiment_type, file_google_ads_googleads_v16_enums_campaign_primary_status, file_google_ads_googleads_v16_enums_campaign_primary_status_reason, file_google_ads_googleads_v16_enums_campaign_serving_status, file_google_ads_googleads_v16_enums_campaign_status, file_google_ads_googleads_v16_enums_listing_type, file_google_ads_googleads_v16_enums_location_source_type, file_google_ads_googleads_v16_enums_negative_geo_target_type, file_google_ads_googleads_v16_enums_optimization_goal_type, file_google_ads_googleads_v16_enums_payment_mode, file_google_ads_googleads_v16_enums_performance_max_upgrade_status, file_google_ads_googleads_v16_enums_positive_geo_target_type, file_google_ads_googleads_v16_enums_vanity_pharma_display_url_mode, file_google_ads_googleads_v16_enums_vanity_pharma_text, file_google_api_field_behavior, file_google_api_resource]);

/**
 * A campaign.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign
 */
export type Campaign = Message<"google.ads.googleads.v16.resources.Campaign"> & {
  /**
   * Immutable. The resource name of the campaign.
   * Campaign resource names have the form:
   *
   * `customers/{customer_id}/campaigns/{campaign_id}`
   *
   * @generated from field: string resource_name = 1;
   */
  resourceName: string;

  /**
   * Output only. The ID of the campaign.
   *
   * @generated from field: optional int64 id = 59;
   */
  id?: bigint;

  /**
   * The name of the campaign.
   *
   * This field is required and should not be empty when creating new
   * campaigns.
   *
   * It must not contain any null (code point 0x0), NL line feed
   * (code point 0xA) or carriage return (code point 0xD) characters.
   *
   * @generated from field: optional string name = 58;
   */
  name?: string;

  /**
   * Output only. The primary status of the campaign.
   *
   * Provides insight into why a campaign is not serving or not serving
   * optimally. Modification to the campaign and its related entities might take
   * a while to be reflected in this status.
   *
   * @generated from field: google.ads.googleads.v16.enums.CampaignPrimaryStatusEnum.CampaignPrimaryStatus primary_status = 81;
   */
  primaryStatus: CampaignPrimaryStatusEnum_CampaignPrimaryStatus;

  /**
   * Output only. The primary status reasons of the campaign.
   *
   * Provides insight into why a campaign is not serving or not serving
   * optimally. These reasons are aggregated to determine an overall
   * CampaignPrimaryStatus.
   *
   * @generated from field: repeated google.ads.googleads.v16.enums.CampaignPrimaryStatusReasonEnum.CampaignPrimaryStatusReason primary_status_reasons = 82;
   */
  primaryStatusReasons: CampaignPrimaryStatusReasonEnum_CampaignPrimaryStatusReason[];

  /**
   * The status of the campaign.
   *
   * When a new campaign is added, the status defaults to ENABLED.
   *
   * @generated from field: google.ads.googleads.v16.enums.CampaignStatusEnum.CampaignStatus status = 5;
   */
  status: CampaignStatusEnum_CampaignStatus;

  /**
   * Output only. The ad serving status of the campaign.
   *
   * @generated from field: google.ads.googleads.v16.enums.CampaignServingStatusEnum.CampaignServingStatus serving_status = 21;
   */
  servingStatus: CampaignServingStatusEnum_CampaignServingStatus;

  /**
   * Output only. The system status of the campaign's bidding strategy.
   *
   * @generated from field: google.ads.googleads.v16.enums.BiddingStrategySystemStatusEnum.BiddingStrategySystemStatus bidding_strategy_system_status = 78;
   */
  biddingStrategySystemStatus: BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus;

  /**
   * The ad serving optimization status of the campaign.
   *
   * @generated from field: google.ads.googleads.v16.enums.AdServingOptimizationStatusEnum.AdServingOptimizationStatus ad_serving_optimization_status = 8;
   */
  adServingOptimizationStatus: AdServingOptimizationStatusEnum_AdServingOptimizationStatus;

  /**
   * Immutable. The primary serving target for ads within the campaign.
   * The targeting options can be refined in `network_settings`.
   *
   * This field is required and should not be empty when creating new
   * campaigns.
   *
   * Can be set only when creating campaigns.
   * After the campaign is created, the field can not be changed.
   *
   * @generated from field: google.ads.googleads.v16.enums.AdvertisingChannelTypeEnum.AdvertisingChannelType advertising_channel_type = 9;
   */
  advertisingChannelType: AdvertisingChannelTypeEnum_AdvertisingChannelType;

  /**
   * Immutable. Optional refinement to `advertising_channel_type`.
   * Must be a valid sub-type of the parent channel type.
   *
   * Can be set only when creating campaigns.
   * After campaign is created, the field can not be changed.
   *
   * @generated from field: google.ads.googleads.v16.enums.AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType advertising_channel_sub_type = 10;
   */
  advertisingChannelSubType: AdvertisingChannelSubTypeEnum_AdvertisingChannelSubType;

  /**
   * The URL template for constructing a tracking URL.
   *
   * @generated from field: optional string tracking_url_template = 60;
   */
  trackingUrlTemplate?: string;

  /**
   * The list of mappings used to substitute custom parameter tags in a
   * `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.CustomParameter url_custom_parameters = 12;
   */
  urlCustomParameters: CustomParameter[];

  /**
   * The Local Services Campaign related settings.
   *
   * @generated from field: google.ads.googleads.v16.resources.Campaign.LocalServicesCampaignSettings local_services_campaign_settings = 75;
   */
  localServicesCampaignSettings?: Campaign_LocalServicesCampaignSettings;

  /**
   * Settings for Travel campaign.
   *
   * @generated from field: google.ads.googleads.v16.resources.Campaign.TravelCampaignSettings travel_campaign_settings = 85;
   */
  travelCampaignSettings?: Campaign_TravelCampaignSettings;

  /**
   * Settings for Discovery campaign.
   *
   * @generated from field: google.ads.googleads.v16.resources.Campaign.DiscoveryCampaignSettings discovery_campaign_settings = 87;
   */
  discoveryCampaignSettings?: Campaign_DiscoveryCampaignSettings;

  /**
   * Settings for Real-Time Bidding, a feature only available for campaigns
   * targeting the Ad Exchange network.
   *
   * @generated from field: google.ads.googleads.v16.common.RealTimeBiddingSetting real_time_bidding_setting = 39;
   */
  realTimeBiddingSetting?: RealTimeBiddingSetting;

  /**
   * The network settings for the campaign.
   *
   * @generated from field: google.ads.googleads.v16.resources.Campaign.NetworkSettings network_settings = 14;
   */
  networkSettings?: Campaign_NetworkSettings;

  /**
   * Immutable. The hotel setting for the campaign.
   *
   * @generated from field: google.ads.googleads.v16.resources.Campaign.HotelSettingInfo hotel_setting = 32;
   */
  hotelSetting?: Campaign_HotelSettingInfo;

  /**
   * The setting for controlling Dynamic Search Ads (DSA).
   *
   * @generated from field: google.ads.googleads.v16.resources.Campaign.DynamicSearchAdsSetting dynamic_search_ads_setting = 33;
   */
  dynamicSearchAdsSetting?: Campaign_DynamicSearchAdsSetting;

  /**
   * The setting for controlling Shopping campaigns.
   *
   * @generated from field: google.ads.googleads.v16.resources.Campaign.ShoppingSetting shopping_setting = 36;
   */
  shoppingSetting?: Campaign_ShoppingSetting;

  /**
   * Setting for targeting related features.
   *
   * @generated from field: google.ads.googleads.v16.common.TargetingSetting targeting_setting = 43;
   */
  targetingSetting?: TargetingSetting;

  /**
   * Immutable. Setting for audience related features.
   *
   * @generated from field: optional google.ads.googleads.v16.resources.Campaign.AudienceSetting audience_setting = 73;
   */
  audienceSetting?: Campaign_AudienceSetting;

  /**
   * The setting for ads geotargeting.
   *
   * @generated from field: google.ads.googleads.v16.resources.Campaign.GeoTargetTypeSetting geo_target_type_setting = 47;
   */
  geoTargetTypeSetting?: Campaign_GeoTargetTypeSetting;

  /**
   * The setting for local campaign.
   *
   * @generated from field: google.ads.googleads.v16.resources.Campaign.LocalCampaignSetting local_campaign_setting = 50;
   */
  localCampaignSetting?: Campaign_LocalCampaignSetting;

  /**
   * The setting related to App Campaign.
   *
   * @generated from field: google.ads.googleads.v16.resources.Campaign.AppCampaignSetting app_campaign_setting = 51;
   */
  appCampaignSetting?: Campaign_AppCampaignSetting;

  /**
   * Output only. The resource names of labels attached to this campaign.
   *
   * @generated from field: repeated string labels = 61;
   */
  labels: string[];

  /**
   * Output only. The type of campaign: normal, draft, or experiment.
   *
   * @generated from field: google.ads.googleads.v16.enums.CampaignExperimentTypeEnum.CampaignExperimentType experiment_type = 17;
   */
  experimentType: CampaignExperimentTypeEnum_CampaignExperimentType;

  /**
   * Output only. The resource name of the base campaign of a draft or
   * experiment campaign. For base campaigns, this is equal to `resource_name`.
   *
   * This field is read-only.
   *
   * @generated from field: optional string base_campaign = 56;
   */
  baseCampaign?: string;

  /**
   * The budget of the campaign.
   *
   * @generated from field: optional string campaign_budget = 62;
   */
  campaignBudget?: string;

  /**
   * Output only. The type of bidding strategy.
   *
   * A bidding strategy can be created by setting either the bidding scheme to
   * create a standard bidding strategy or the `bidding_strategy` field to
   * create a portfolio bidding strategy.
   *
   * This field is read-only.
   *
   * @generated from field: google.ads.googleads.v16.enums.BiddingStrategyTypeEnum.BiddingStrategyType bidding_strategy_type = 22;
   */
  biddingStrategyType: BiddingStrategyTypeEnum_BiddingStrategyType;

  /**
   * Output only. Resource name of AccessibleBiddingStrategy, a read-only view
   * of the unrestricted attributes of the attached portfolio bidding strategy
   * identified by 'bidding_strategy'. Empty, if the campaign does not use a
   * portfolio strategy. Unrestricted strategy attributes are available to all
   * customers with whom the strategy is shared and are read from the
   * AccessibleBiddingStrategy resource. In contrast, restricted attributes are
   * only available to the owner customer of the strategy and their managers.
   * Restricted attributes can only be read from the BiddingStrategy resource.
   *
   * @generated from field: string accessible_bidding_strategy = 71;
   */
  accessibleBiddingStrategy: string;

  /**
   * The date when campaign started in serving customer's timezone in YYYY-MM-DD
   * format.
   *
   * @generated from field: optional string start_date = 63;
   */
  startDate?: string;

  /**
   * The campaign group this campaign belongs to.
   *
   * @generated from field: optional string campaign_group = 76;
   */
  campaignGroup?: string;

  /**
   * The last day of the campaign in serving customer's timezone in YYYY-MM-DD
   * format. On create, defaults to 2037-12-30, which means the campaign will
   * run indefinitely. To set an existing campaign to run indefinitely, set this
   * field to 2037-12-30.
   *
   * @generated from field: optional string end_date = 64;
   */
  endDate?: string;

  /**
   * Suffix used to append query parameters to landing pages that are served
   * with parallel tracking.
   *
   * @generated from field: optional string final_url_suffix = 65;
   */
  finalUrlSuffix?: string;

  /**
   * A list that limits how often each user will see this campaign's ads.
   *
   * @generated from field: repeated google.ads.googleads.v16.common.FrequencyCapEntry frequency_caps = 40;
   */
  frequencyCaps: FrequencyCapEntry[];

  /**
   * Output only. Brand Safety setting at the individual campaign level. Allows
   * for selecting an inventory type to show your ads on content that is the
   * right fit for your brand. See
   * https://support.google.com/google-ads/answer/7515513.
   *
   * @generated from field: google.ads.googleads.v16.enums.BrandSafetySuitabilityEnum.BrandSafetySuitability video_brand_safety_suitability = 42;
   */
  videoBrandSafetySuitability: BrandSafetySuitabilityEnum_BrandSafetySuitability;

  /**
   * Describes how unbranded pharma ads will be displayed.
   *
   * @generated from field: google.ads.googleads.v16.resources.Campaign.VanityPharma vanity_pharma = 44;
   */
  vanityPharma?: Campaign_VanityPharma;

  /**
   * Selective optimization setting for this campaign, which includes a set of
   * conversion actions to optimize this campaign towards.
   * This feature only applies to app campaigns that use MULTI_CHANNEL as
   * AdvertisingChannelType and APP_CAMPAIGN or APP_CAMPAIGN_FOR_ENGAGEMENT as
   * AdvertisingChannelSubType.
   *
   * @generated from field: google.ads.googleads.v16.resources.Campaign.SelectiveOptimization selective_optimization = 45;
   */
  selectiveOptimization?: Campaign_SelectiveOptimization;

  /**
   * Optimization goal setting for this campaign, which includes a set of
   * optimization goal types.
   *
   * @generated from field: google.ads.googleads.v16.resources.Campaign.OptimizationGoalSetting optimization_goal_setting = 54;
   */
  optimizationGoalSetting?: Campaign_OptimizationGoalSetting;

  /**
   * Output only. Campaign-level settings for tracking information.
   *
   * @generated from field: google.ads.googleads.v16.resources.Campaign.TrackingSetting tracking_setting = 46;
   */
  trackingSetting?: Campaign_TrackingSetting;

  /**
   * Payment mode for the campaign.
   *
   * @generated from field: google.ads.googleads.v16.enums.PaymentModeEnum.PaymentMode payment_mode = 52;
   */
  paymentMode: PaymentModeEnum_PaymentMode;

  /**
   * Output only. Optimization score of the campaign.
   *
   * Optimization score is an estimate of how well a campaign is set to perform.
   * It ranges from 0% (0.0) to 100% (1.0), with 100% indicating that the
   * campaign is performing at full potential. This field is null for unscored
   * campaigns.
   *
   * See "About optimization score" at
   * https://support.google.com/google-ads/answer/9061546.
   *
   * This field is read-only.
   *
   * @generated from field: optional double optimization_score = 66;
   */
  optimizationScore?: number;

  /**
   * The asset field types that should be excluded from this campaign. Asset
   * links with these field types will not be inherited by this campaign from
   * the upper level.
   *
   * @generated from field: repeated google.ads.googleads.v16.enums.AssetFieldTypeEnum.AssetFieldType excluded_parent_asset_field_types = 69;
   */
  excludedParentAssetFieldTypes: AssetFieldTypeEnum_AssetFieldType[];

  /**
   * The asset set types that should be excluded from this campaign. Asset set
   * links with these types will not be inherited by this campaign from
   * the upper level.
   * Location group types (GMB_DYNAMIC_LOCATION_GROUP,
   * CHAIN_DYNAMIC_LOCATION_GROUP, and STATIC_LOCATION_GROUP) are child types of
   * LOCATION_SYNC. Therefore, if LOCATION_SYNC is set for this field, all
   * location group asset sets are not allowed to be linked to this campaign,
   * and all Location Extension (LE) and Affiliate Location Extensions (ALE)
   * will not be served under this campaign.
   * Only LOCATION_SYNC is currently supported.
   *
   * @generated from field: repeated google.ads.googleads.v16.enums.AssetSetTypeEnum.AssetSetType excluded_parent_asset_set_types = 80;
   */
  excludedParentAssetSetTypes: AssetSetTypeEnum_AssetSetType[];

  /**
   * Represents opting out of URL expansion to more targeted URLs. If opted out
   * (true), only the final URLs in the asset group or URLs specified in the
   * advertiser's Google Merchant Center or business data feeds are targeted.
   * If opted in (false), the entire domain will be targeted. This field can
   * only be set for Performance Max campaigns, where the default value is
   * false.
   *
   * @generated from field: optional bool url_expansion_opt_out = 72;
   */
  urlExpansionOptOut?: boolean;

  /**
   * Output only. Information about campaigns being upgraded to Performance Max.
   *
   * @generated from field: google.ads.googleads.v16.resources.Campaign.PerformanceMaxUpgrade performance_max_upgrade = 77;
   */
  performanceMaxUpgrade?: Campaign_PerformanceMaxUpgrade;

  /**
   * Immutable. The set of hotel properties for Performance Max for travel goals
   * campaigns.
   *
   * @generated from field: optional string hotel_property_asset_set = 83;
   */
  hotelPropertyAssetSet?: string;

  /**
   * Immutable. Listing type of ads served for this campaign.
   * Field is restricted for usage with Performance Max campaigns.
   *
   * @generated from field: optional google.ads.googleads.v16.enums.ListingTypeEnum.ListingType listing_type = 86;
   */
  listingType?: ListingTypeEnum_ListingType;

  /**
   * Contains the opt-in/out status of each AssetAutomationType.
   * See documentation of each asset automation type enum for default
   * opt in/out behavior.
   *
   * @generated from field: repeated google.ads.googleads.v16.resources.Campaign.AssetAutomationSetting asset_automation_settings = 88;
   */
  assetAutomationSettings: Campaign_AssetAutomationSetting[];

  /**
   * The bidding strategy for the campaign.
   *
   * Must be either portfolio (created through BiddingStrategy service) or
   * standard, that is embedded into the campaign.
   *
   * @generated from oneof google.ads.googleads.v16.resources.Campaign.campaign_bidding_strategy
   */
  campaignBiddingStrategy: {
    /**
     * Portfolio bidding strategy used by campaign.
     *
     * @generated from field: string bidding_strategy = 67;
     */
    value: string;
    case: "biddingStrategy";
  } | {
    /**
     * Commission is an automatic bidding strategy in which the advertiser pays
     * a certain portion of the conversion value.
     *
     * @generated from field: google.ads.googleads.v16.common.Commission commission = 49;
     */
    value: Commission;
    case: "commission";
  } | {
    /**
     * Standard Manual CPA bidding strategy.
     * Manual bidding strategy that allows advertiser to set the bid per
     * advertiser-specified action. Supported only for Local Services campaigns.
     *
     * @generated from field: google.ads.googleads.v16.common.ManualCpa manual_cpa = 74;
     */
    value: ManualCpa;
    case: "manualCpa";
  } | {
    /**
     * Standard Manual CPC bidding strategy.
     * Manual click-based bidding where user pays per click.
     *
     * @generated from field: google.ads.googleads.v16.common.ManualCpc manual_cpc = 24;
     */
    value: ManualCpc;
    case: "manualCpc";
  } | {
    /**
     * Standard Manual CPM bidding strategy.
     * Manual impression-based bidding where user pays per thousand
     * impressions.
     *
     * @generated from field: google.ads.googleads.v16.common.ManualCpm manual_cpm = 25;
     */
    value: ManualCpm;
    case: "manualCpm";
  } | {
    /**
     * A bidding strategy that pays a configurable amount per video view.
     *
     * @generated from field: google.ads.googleads.v16.common.ManualCpv manual_cpv = 37;
     */
    value: ManualCpv;
    case: "manualCpv";
  } | {
    /**
     * Standard Maximize Conversions bidding strategy that automatically
     * maximizes number of conversions while spending your budget.
     *
     * @generated from field: google.ads.googleads.v16.common.MaximizeConversions maximize_conversions = 30;
     */
    value: MaximizeConversions;
    case: "maximizeConversions";
  } | {
    /**
     * Standard Maximize Conversion Value bidding strategy that automatically
     * sets bids to maximize revenue while spending your budget.
     *
     * @generated from field: google.ads.googleads.v16.common.MaximizeConversionValue maximize_conversion_value = 31;
     */
    value: MaximizeConversionValue;
    case: "maximizeConversionValue";
  } | {
    /**
     * Standard Target CPA bidding strategy that automatically sets bids to
     * help get as many conversions as possible at the target
     * cost-per-acquisition (CPA) you set.
     *
     * @generated from field: google.ads.googleads.v16.common.TargetCpa target_cpa = 26;
     */
    value: TargetCpa;
    case: "targetCpa";
  } | {
    /**
     * Target Impression Share bidding strategy. An automated bidding strategy
     * that sets bids to achieve a chosen percentage of impressions.
     *
     * @generated from field: google.ads.googleads.v16.common.TargetImpressionShare target_impression_share = 48;
     */
    value: TargetImpressionShare;
    case: "targetImpressionShare";
  } | {
    /**
     * Standard Target ROAS bidding strategy that automatically maximizes
     * revenue while averaging a specific target return on ad spend (ROAS).
     *
     * @generated from field: google.ads.googleads.v16.common.TargetRoas target_roas = 29;
     */
    value: TargetRoas;
    case: "targetRoas";
  } | {
    /**
     * Standard Target Spend bidding strategy that automatically sets your bids
     * to help get as many clicks as possible within your budget.
     *
     * @generated from field: google.ads.googleads.v16.common.TargetSpend target_spend = 27;
     */
    value: TargetSpend;
    case: "targetSpend";
  } | {
    /**
     * Standard Percent Cpc bidding strategy where bids are a fraction of the
     * advertised price for some good or service.
     *
     * @generated from field: google.ads.googleads.v16.common.PercentCpc percent_cpc = 34;
     */
    value: PercentCpc;
    case: "percentCpc";
  } | {
    /**
     * A bidding strategy that automatically optimizes cost per thousand
     * impressions.
     *
     * @generated from field: google.ads.googleads.v16.common.TargetCpm target_cpm = 41;
     */
    value: TargetCpm;
    case: "targetCpm";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.
 * Use `create(CampaignSchema)` to create a new message.
 */
export const CampaignSchema: GenMessage<Campaign> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0);

/**
 * Information about a campaign being upgraded to Performance Max.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.PerformanceMaxUpgrade
 */
export type Campaign_PerformanceMaxUpgrade = Message<"google.ads.googleads.v16.resources.Campaign.PerformanceMaxUpgrade"> & {
  /**
   * Output only. Indicates which Performance Max campaign the campaign is
   * upgraded to.
   *
   * @generated from field: string performance_max_campaign = 1;
   */
  performanceMaxCampaign: string;

  /**
   * Output only. Indicates legacy campaign upgraded to Performance Max.
   *
   * @generated from field: string pre_upgrade_campaign = 2;
   */
  preUpgradeCampaign: string;

  /**
   * Output only. The upgrade status of a campaign requested to be upgraded to
   * Performance Max.
   *
   * @generated from field: google.ads.googleads.v16.enums.PerformanceMaxUpgradeStatusEnum.PerformanceMaxUpgradeStatus status = 3;
   */
  status: PerformanceMaxUpgradeStatusEnum_PerformanceMaxUpgradeStatus;
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.PerformanceMaxUpgrade.
 * Use `create(Campaign_PerformanceMaxUpgradeSchema)` to create a new message.
 */
export const Campaign_PerformanceMaxUpgradeSchema: GenMessage<Campaign_PerformanceMaxUpgrade> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 0);

/**
 * The network settings for the campaign.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.NetworkSettings
 */
export type Campaign_NetworkSettings = Message<"google.ads.googleads.v16.resources.Campaign.NetworkSettings"> & {
  /**
   * Whether ads will be served with google.com search results.
   *
   * @generated from field: optional bool target_google_search = 5;
   */
  targetGoogleSearch?: boolean;

  /**
   * Whether ads will be served on partner sites in the Google Search Network
   * (requires `target_google_search` to also be `true`).
   *
   * @generated from field: optional bool target_search_network = 6;
   */
  targetSearchNetwork?: boolean;

  /**
   * Whether ads will be served on specified placements in the Google Display
   * Network. Placements are specified using the Placement criterion.
   *
   * @generated from field: optional bool target_content_network = 7;
   */
  targetContentNetwork?: boolean;

  /**
   * Whether ads will be served on the Google Partner Network.
   * This is available only to some select Google partner accounts.
   *
   * @generated from field: optional bool target_partner_search_network = 8;
   */
  targetPartnerSearchNetwork?: boolean;

  /**
   * Whether ads will be served on YouTube.
   *
   * @generated from field: optional bool target_youtube = 9;
   */
  targetYoutube?: boolean;

  /**
   * Whether ads will be served on the Google TV network.
   *
   * @generated from field: optional bool target_google_tv_network = 10;
   */
  targetGoogleTvNetwork?: boolean;
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.NetworkSettings.
 * Use `create(Campaign_NetworkSettingsSchema)` to create a new message.
 */
export const Campaign_NetworkSettingsSchema: GenMessage<Campaign_NetworkSettings> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 1);

/**
 * Campaign-level settings for hotel ads.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.HotelSettingInfo
 */
export type Campaign_HotelSettingInfo = Message<"google.ads.googleads.v16.resources.Campaign.HotelSettingInfo"> & {
  /**
   * Immutable. The linked Hotel Center account.
   *
   * @generated from field: optional int64 hotel_center_id = 2;
   */
  hotelCenterId?: bigint;
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.HotelSettingInfo.
 * Use `create(Campaign_HotelSettingInfoSchema)` to create a new message.
 */
export const Campaign_HotelSettingInfoSchema: GenMessage<Campaign_HotelSettingInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 2);

/**
 * The setting for controlling Dynamic Search Ads (DSA).
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.DynamicSearchAdsSetting
 */
export type Campaign_DynamicSearchAdsSetting = Message<"google.ads.googleads.v16.resources.Campaign.DynamicSearchAdsSetting"> & {
  /**
   * Required. The Internet domain name that this setting represents, for
   * example, "google.com" or "www.google.com".
   *
   * @generated from field: string domain_name = 6;
   */
  domainName: string;

  /**
   * Required. The language code specifying the language of the domain, for
   * example, "en".
   *
   * @generated from field: string language_code = 7;
   */
  languageCode: string;

  /**
   * Whether the campaign uses advertiser supplied URLs exclusively.
   *
   * @generated from field: optional bool use_supplied_urls_only = 8;
   */
  useSuppliedUrlsOnly?: boolean;

  /**
   * The list of page feeds associated with the campaign.
   *
   * @generated from field: repeated string feeds = 9;
   */
  feeds: string[];
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.DynamicSearchAdsSetting.
 * Use `create(Campaign_DynamicSearchAdsSettingSchema)` to create a new message.
 */
export const Campaign_DynamicSearchAdsSettingSchema: GenMessage<Campaign_DynamicSearchAdsSetting> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 3);

/**
 * The setting for Shopping campaigns. Defines the universe of products that
 * can be advertised by the campaign, and how this campaign interacts with
 * other Shopping campaigns.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.ShoppingSetting
 */
export type Campaign_ShoppingSetting = Message<"google.ads.googleads.v16.resources.Campaign.ShoppingSetting"> & {
  /**
   * ID of the Merchant Center account.
   * This field is required for create operations. This field is immutable for
   * Shopping campaigns.
   *
   * @generated from field: optional int64 merchant_id = 5;
   */
  merchantId?: bigint;

  /**
   * Feed label of products to include in the campaign.
   * Only one of feed_label or sales_country can be set.
   * If used instead of sales_country, the feed_label field accepts country
   * codes in the same format for example: 'XX'.
   * Otherwise can be any string used for feed label in Google Merchant
   * Center.
   *
   * @generated from field: string feed_label = 10;
   */
  feedLabel: string;

  /**
   * Priority of the campaign. Campaigns with numerically higher priorities
   * take precedence over those with lower priorities.
   * This field is required for Shopping campaigns, with values between 0 and
   * 2, inclusive.
   * This field is optional for Smart Shopping campaigns, but must be equal to
   * 3 if set.
   *
   * @generated from field: optional int32 campaign_priority = 7;
   */
  campaignPriority?: number;

  /**
   * Whether to include local products.
   *
   * @generated from field: optional bool enable_local = 8;
   */
  enableLocal?: boolean;

  /**
   * Immutable. Whether to target Vehicle Listing inventory. This field is
   * supported only in Smart Shopping Campaigns. For setting Vehicle Listing
   * inventory in Performance Max campaigns, use `listing_type` instead.
   *
   * @generated from field: bool use_vehicle_inventory = 9;
   */
  useVehicleInventory: boolean;

  /**
   * Immutable. The ads account IDs of advertising partners cooperating within
   * the campaign.
   *
   * @generated from field: repeated int64 advertising_partner_ids = 11;
   */
  advertisingPartnerIds: bigint[];

  /**
   * Disable the optional product feed. This field is currently supported
   * only for Demand Gen campaigns. See
   * https://support.google.com/google-ads/answer/13721750 to learn more about
   * this feature.
   *
   * @generated from field: optional bool disable_product_feed = 12;
   */
  disableProductFeed?: boolean;
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.ShoppingSetting.
 * Use `create(Campaign_ShoppingSettingSchema)` to create a new message.
 */
export const Campaign_ShoppingSettingSchema: GenMessage<Campaign_ShoppingSetting> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 4);

/**
 * Campaign-level settings for tracking information.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.TrackingSetting
 */
export type Campaign_TrackingSetting = Message<"google.ads.googleads.v16.resources.Campaign.TrackingSetting"> & {
  /**
   * Output only. The url used for dynamic tracking.
   *
   * @generated from field: optional string tracking_url = 2;
   */
  trackingUrl?: string;
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.TrackingSetting.
 * Use `create(Campaign_TrackingSettingSchema)` to create a new message.
 */
export const Campaign_TrackingSettingSchema: GenMessage<Campaign_TrackingSetting> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 5);

/**
 * Represents a collection of settings related to ads geotargeting.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.GeoTargetTypeSetting
 */
export type Campaign_GeoTargetTypeSetting = Message<"google.ads.googleads.v16.resources.Campaign.GeoTargetTypeSetting"> & {
  /**
   * The setting used for positive geotargeting in this particular campaign.
   *
   * @generated from field: google.ads.googleads.v16.enums.PositiveGeoTargetTypeEnum.PositiveGeoTargetType positive_geo_target_type = 1;
   */
  positiveGeoTargetType: PositiveGeoTargetTypeEnum_PositiveGeoTargetType;

  /**
   * The setting used for negative geotargeting in this particular campaign.
   *
   * @generated from field: google.ads.googleads.v16.enums.NegativeGeoTargetTypeEnum.NegativeGeoTargetType negative_geo_target_type = 2;
   */
  negativeGeoTargetType: NegativeGeoTargetTypeEnum_NegativeGeoTargetType;
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.GeoTargetTypeSetting.
 * Use `create(Campaign_GeoTargetTypeSettingSchema)` to create a new message.
 */
export const Campaign_GeoTargetTypeSettingSchema: GenMessage<Campaign_GeoTargetTypeSetting> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 6);

/**
 * Campaign setting for local campaigns.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.LocalCampaignSetting
 */
export type Campaign_LocalCampaignSetting = Message<"google.ads.googleads.v16.resources.Campaign.LocalCampaignSetting"> & {
  /**
   * The location source type for this local campaign.
   *
   * @generated from field: google.ads.googleads.v16.enums.LocationSourceTypeEnum.LocationSourceType location_source_type = 1;
   */
  locationSourceType: LocationSourceTypeEnum_LocationSourceType;
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.LocalCampaignSetting.
 * Use `create(Campaign_LocalCampaignSettingSchema)` to create a new message.
 */
export const Campaign_LocalCampaignSettingSchema: GenMessage<Campaign_LocalCampaignSetting> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 7);

/**
 * Campaign-level settings for App Campaigns.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.AppCampaignSetting
 */
export type Campaign_AppCampaignSetting = Message<"google.ads.googleads.v16.resources.Campaign.AppCampaignSetting"> & {
  /**
   * Represents the goal which the bidding strategy of this app campaign
   * should optimize towards.
   *
   * @generated from field: google.ads.googleads.v16.enums.AppCampaignBiddingStrategyGoalTypeEnum.AppCampaignBiddingStrategyGoalType bidding_strategy_goal_type = 1;
   */
  biddingStrategyGoalType: AppCampaignBiddingStrategyGoalTypeEnum_AppCampaignBiddingStrategyGoalType;

  /**
   * Immutable. A string that uniquely identifies a mobile application.
   *
   * @generated from field: optional string app_id = 4;
   */
  appId?: string;

  /**
   * Immutable. The application store that distributes this specific app.
   *
   * @generated from field: google.ads.googleads.v16.enums.AppCampaignAppStoreEnum.AppCampaignAppStore app_store = 3;
   */
  appStore: AppCampaignAppStoreEnum_AppCampaignAppStore;
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.AppCampaignSetting.
 * Use `create(Campaign_AppCampaignSettingSchema)` to create a new message.
 */
export const Campaign_AppCampaignSettingSchema: GenMessage<Campaign_AppCampaignSetting> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 8);

/**
 * Describes how unbranded pharma ads will be displayed.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.VanityPharma
 */
export type Campaign_VanityPharma = Message<"google.ads.googleads.v16.resources.Campaign.VanityPharma"> & {
  /**
   * The display mode for vanity pharma URLs.
   *
   * @generated from field: google.ads.googleads.v16.enums.VanityPharmaDisplayUrlModeEnum.VanityPharmaDisplayUrlMode vanity_pharma_display_url_mode = 1;
   */
  vanityPharmaDisplayUrlMode: VanityPharmaDisplayUrlModeEnum_VanityPharmaDisplayUrlMode;

  /**
   * The text that will be displayed in display URL of the text ad when
   * website description is the selected display mode for vanity pharma URLs.
   *
   * @generated from field: google.ads.googleads.v16.enums.VanityPharmaTextEnum.VanityPharmaText vanity_pharma_text = 2;
   */
  vanityPharmaText: VanityPharmaTextEnum_VanityPharmaText;
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.VanityPharma.
 * Use `create(Campaign_VanityPharmaSchema)` to create a new message.
 */
export const Campaign_VanityPharmaSchema: GenMessage<Campaign_VanityPharma> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 9);

/**
 * Selective optimization setting for this campaign, which includes a set of
 * conversion actions to optimize this campaign towards.
 * This feature only applies to app campaigns that use MULTI_CHANNEL as
 * AdvertisingChannelType and APP_CAMPAIGN or APP_CAMPAIGN_FOR_ENGAGEMENT as
 * AdvertisingChannelSubType.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.SelectiveOptimization
 */
export type Campaign_SelectiveOptimization = Message<"google.ads.googleads.v16.resources.Campaign.SelectiveOptimization"> & {
  /**
   * The selected set of conversion actions for optimizing this campaign.
   *
   * @generated from field: repeated string conversion_actions = 2;
   */
  conversionActions: string[];
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.SelectiveOptimization.
 * Use `create(Campaign_SelectiveOptimizationSchema)` to create a new message.
 */
export const Campaign_SelectiveOptimizationSchema: GenMessage<Campaign_SelectiveOptimization> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 10);

/**
 * Optimization goal setting for this campaign, which includes a set of
 * optimization goal types.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.OptimizationGoalSetting
 */
export type Campaign_OptimizationGoalSetting = Message<"google.ads.googleads.v16.resources.Campaign.OptimizationGoalSetting"> & {
  /**
   * The list of optimization goal types.
   *
   * @generated from field: repeated google.ads.googleads.v16.enums.OptimizationGoalTypeEnum.OptimizationGoalType optimization_goal_types = 1;
   */
  optimizationGoalTypes: OptimizationGoalTypeEnum_OptimizationGoalType[];
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.OptimizationGoalSetting.
 * Use `create(Campaign_OptimizationGoalSettingSchema)` to create a new message.
 */
export const Campaign_OptimizationGoalSettingSchema: GenMessage<Campaign_OptimizationGoalSetting> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 11);

/**
 * Settings for the audience targeting.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.AudienceSetting
 */
export type Campaign_AudienceSetting = Message<"google.ads.googleads.v16.resources.Campaign.AudienceSetting"> & {
  /**
   * Immutable. If true, this campaign uses an Audience resource for audience
   * targeting. If false, this campaign may use audience segment criteria
   * instead.
   *
   * @generated from field: optional bool use_audience_grouped = 1;
   */
  useAudienceGrouped?: boolean;
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.AudienceSetting.
 * Use `create(Campaign_AudienceSettingSchema)` to create a new message.
 */
export const Campaign_AudienceSettingSchema: GenMessage<Campaign_AudienceSetting> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 12);

/**
 * Settings for LocalServicesCampaign subresource.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.LocalServicesCampaignSettings
 */
export type Campaign_LocalServicesCampaignSettings = Message<"google.ads.googleads.v16.resources.Campaign.LocalServicesCampaignSettings"> & {
  /**
   * Categorical level bids associated with MANUAL_CPA bidding strategy.
   *
   * @generated from field: repeated google.ads.googleads.v16.resources.Campaign.CategoryBid category_bids = 1;
   */
  categoryBids: Campaign_CategoryBid[];
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.LocalServicesCampaignSettings.
 * Use `create(Campaign_LocalServicesCampaignSettingsSchema)` to create a new message.
 */
export const Campaign_LocalServicesCampaignSettingsSchema: GenMessage<Campaign_LocalServicesCampaignSettings> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 13);

/**
 * Category bids in LocalServicesReportingCampaignSettings.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.CategoryBid
 */
export type Campaign_CategoryBid = Message<"google.ads.googleads.v16.resources.Campaign.CategoryBid"> & {
  /**
   * Category for which the bid will be associated with. For example,
   * xcat:service_area_business_plumber.
   *
   * @generated from field: optional string category_id = 1;
   */
  categoryId?: string;

  /**
   * Manual CPA bid for the category. Bid must be greater than the
   * reserve price associated for that category. Value is in micros
   * and in the advertiser's currency.
   *
   * @generated from field: optional int64 manual_cpa_bid_micros = 2;
   */
  manualCpaBidMicros?: bigint;
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.CategoryBid.
 * Use `create(Campaign_CategoryBidSchema)` to create a new message.
 */
export const Campaign_CategoryBidSchema: GenMessage<Campaign_CategoryBid> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 14);

/**
 * Settings for Travel campaign.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.TravelCampaignSettings
 */
export type Campaign_TravelCampaignSettings = Message<"google.ads.googleads.v16.resources.Campaign.TravelCampaignSettings"> & {
  /**
   * Immutable. The Travel account ID associated with the Travel campaign.
   *
   * @generated from field: optional int64 travel_account_id = 1;
   */
  travelAccountId?: bigint;
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.TravelCampaignSettings.
 * Use `create(Campaign_TravelCampaignSettingsSchema)` to create a new message.
 */
export const Campaign_TravelCampaignSettingsSchema: GenMessage<Campaign_TravelCampaignSettings> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 15);

/**
 * Settings for Discovery campaign.
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.DiscoveryCampaignSettings
 */
export type Campaign_DiscoveryCampaignSettings = Message<"google.ads.googleads.v16.resources.Campaign.DiscoveryCampaignSettings"> & {
  /**
   * Immutable. Specifies whether this campaign uses upgraded targeting
   * options. When this field is set to `true`, you can use location and
   * language targeting at the ad group level as opposed to the standard
   * campaign-level targeting. This field defaults to `false`, and can only be
   * set when creating a campaign.
   *
   * @generated from field: optional bool upgraded_targeting = 1;
   */
  upgradedTargeting?: boolean;
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.DiscoveryCampaignSettings.
 * Use `create(Campaign_DiscoveryCampaignSettingsSchema)` to create a new message.
 */
export const Campaign_DiscoveryCampaignSettingsSchema: GenMessage<Campaign_DiscoveryCampaignSettings> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 16);

/**
 * Asset automation setting contains pair of AssetAutomationType and the
 * asset automation opt-in/out status
 *
 * @generated from message google.ads.googleads.v16.resources.Campaign.AssetAutomationSetting
 */
export type Campaign_AssetAutomationSetting = Message<"google.ads.googleads.v16.resources.Campaign.AssetAutomationSetting"> & {
  /**
   * The asset automation type advertiser would like to opt-in/out.
   *
   * @generated from field: optional google.ads.googleads.v16.enums.AssetAutomationTypeEnum.AssetAutomationType asset_automation_type = 1;
   */
  assetAutomationType?: AssetAutomationTypeEnum_AssetAutomationType;

  /**
   * The opt-in/out status of asset automation type.
   *
   * @generated from field: optional google.ads.googleads.v16.enums.AssetAutomationStatusEnum.AssetAutomationStatus asset_automation_status = 2;
   */
  assetAutomationStatus?: AssetAutomationStatusEnum_AssetAutomationStatus;
};

/**
 * Describes the message google.ads.googleads.v16.resources.Campaign.AssetAutomationSetting.
 * Use `create(Campaign_AssetAutomationSettingSchema)` to create a new message.
 */
export const Campaign_AssetAutomationSettingSchema: GenMessage<Campaign_AssetAutomationSetting> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v16_resources_campaign, 0, 17);

