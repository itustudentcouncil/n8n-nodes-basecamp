// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/ads/googleads/v17/services/conversion_adjustment_upload_service.proto (package google.ads.googleads.v17.services, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { UserIdentifier } from "../common/offline_user_data_pb";
import { file_google_ads_googleads_v17_common_offline_user_data } from "../common/offline_user_data_pb";
import type { ConversionAdjustmentTypeEnum_ConversionAdjustmentType } from "../enums/conversion_adjustment_type_pb";
import { file_google_ads_googleads_v17_enums_conversion_adjustment_type } from "../enums/conversion_adjustment_type_pb";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import type { Status } from "../../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/ads/googleads/v17/services/conversion_adjustment_upload_service.proto.
 */
export const file_google_ads_googleads_v17_services_conversion_adjustment_upload_service: GenFile = /*@__PURE__*/
  fileDesc("Ckxnb29nbGUvYWRzL2dvb2dsZWFkcy92MTcvc2VydmljZXMvY29udmVyc2lvbl9hZGp1c3RtZW50X3VwbG9hZF9zZXJ2aWNlLnByb3RvEiFnb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuc2VydmljZXMi9gEKIlVwbG9hZENvbnZlcnNpb25BZGp1c3RtZW50c1JlcXVlc3QSGAoLY3VzdG9tZXJfaWQYASABKAlCA+BBAhJcChZjb252ZXJzaW9uX2FkanVzdG1lbnRzGAIgAygLMjcuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LnNlcnZpY2VzLkNvbnZlcnNpb25BZGp1c3RtZW50QgPgQQISHAoPcGFydGlhbF9mYWlsdXJlGAMgASgIQgPgQQISFQoNdmFsaWRhdGVfb25seRgEIAEoCBIYCgZqb2JfaWQYBSABKAVCA+BBAUgAiAEBQgkKB19qb2JfaWQiuAEKI1VwbG9hZENvbnZlcnNpb25BZGp1c3RtZW50c1Jlc3BvbnNlEjEKFXBhcnRpYWxfZmFpbHVyZV9lcnJvchgBIAEoCzISLmdvb2dsZS5ycGMuU3RhdHVzEk4KB3Jlc3VsdHMYAiADKAsyPS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuc2VydmljZXMuQ29udmVyc2lvbkFkanVzdG1lbnRSZXN1bHQSDgoGam9iX2lkGAMgASgDIrMEChRDb252ZXJzaW9uQWRqdXN0bWVudBJSChRnY2xpZF9kYXRlX3RpbWVfcGFpchgMIAEoCzI0Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5zZXJ2aWNlcy5HY2xpZERhdGVUaW1lUGFpchIVCghvcmRlcl9pZBgNIAEoCUgAiAEBEh4KEWNvbnZlcnNpb25fYWN0aW9uGAggASgJSAGIAQESIQoUYWRqdXN0bWVudF9kYXRlX3RpbWUYCSABKAlIAogBARJuCg9hZGp1c3RtZW50X3R5cGUYBSABKA4yVS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuZW51bXMuQ29udmVyc2lvbkFkanVzdG1lbnRUeXBlRW51bS5Db252ZXJzaW9uQWRqdXN0bWVudFR5cGUSTgoRcmVzdGF0ZW1lbnRfdmFsdWUYBiABKAsyMy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuc2VydmljZXMuUmVzdGF0ZW1lbnRWYWx1ZRJJChB1c2VyX2lkZW50aWZpZXJzGAogAygLMi8uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbi5Vc2VySWRlbnRpZmllchIXCgp1c2VyX2FnZW50GAsgASgJSAOIAQFCCwoJX29yZGVyX2lkQhQKEl9jb252ZXJzaW9uX2FjdGlvbkIXChVfYWRqdXN0bWVudF9kYXRlX3RpbWVCDQoLX3VzZXJfYWdlbnQicAoQUmVzdGF0ZW1lbnRWYWx1ZRIbCg5hZGp1c3RlZF92YWx1ZRgDIAEoAUgAiAEBEhoKDWN1cnJlbmN5X2NvZGUYBCABKAlIAYgBAUIRCg9fYWRqdXN0ZWRfdmFsdWVCEAoOX2N1cnJlbmN5X2NvZGUibQoRR2NsaWREYXRlVGltZVBhaXISEgoFZ2NsaWQYAyABKAlIAIgBARIhChRjb252ZXJzaW9uX2RhdGVfdGltZRgEIAEoCUgBiAEBQggKBl9nY2xpZEIXChVfY29udmVyc2lvbl9kYXRlX3RpbWUi5AIKGkNvbnZlcnNpb25BZGp1c3RtZW50UmVzdWx0ElIKFGdjbGlkX2RhdGVfdGltZV9wYWlyGAkgASgLMjQuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LnNlcnZpY2VzLkdjbGlkRGF0ZVRpbWVQYWlyEhAKCG9yZGVyX2lkGAogASgJEh4KEWNvbnZlcnNpb25fYWN0aW9uGAcgASgJSACIAQESIQoUYWRqdXN0bWVudF9kYXRlX3RpbWUYCCABKAlIAYgBARJuCg9hZGp1c3RtZW50X3R5cGUYBSABKA4yVS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuZW51bXMuQ29udmVyc2lvbkFkanVzdG1lbnRUeXBlRW51bS5Db252ZXJzaW9uQWRqdXN0bWVudFR5cGVCFAoSX2NvbnZlcnNpb25fYWN0aW9uQhcKFV9hZGp1c3RtZW50X2RhdGVfdGltZTKVAwohQ29udmVyc2lvbkFkanVzdG1lbnRVcGxvYWRTZXJ2aWNlEqgCChtVcGxvYWRDb252ZXJzaW9uQWRqdXN0bWVudHMSRS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuc2VydmljZXMuVXBsb2FkQ29udmVyc2lvbkFkanVzdG1lbnRzUmVxdWVzdBpGLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5zZXJ2aWNlcy5VcGxvYWRDb252ZXJzaW9uQWRqdXN0bWVudHNSZXNwb25zZSJ62kEyY3VzdG9tZXJfaWQsY29udmVyc2lvbl9hZGp1c3RtZW50cyxwYXJ0aWFsX2ZhaWx1cmWC0+STAj86ASoiOi92MTcvY3VzdG9tZXJzL3tjdXN0b21lcl9pZD0qfTp1cGxvYWRDb252ZXJzaW9uQWRqdXN0bWVudHMaRcpBGGdvb2dsZWFkcy5nb29nbGVhcGlzLmNvbdJBJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvYWR3b3Jkc0KSAgolY29tLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5zZXJ2aWNlc0ImQ29udmVyc2lvbkFkanVzdG1lbnRVcGxvYWRTZXJ2aWNlUHJvdG9QAVpJZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9hZHMvZ29vZ2xlYWRzL3YxNy9zZXJ2aWNlcztzZXJ2aWNlc6ICA0dBQaoCIUdvb2dsZS5BZHMuR29vZ2xlQWRzLlYxNy5TZXJ2aWNlc8oCIUdvb2dsZVxBZHNcR29vZ2xlQWRzXFYxN1xTZXJ2aWNlc+oCJUdvb2dsZTo6QWRzOjpHb29nbGVBZHM6OlYxNzo6U2VydmljZXNiBnByb3RvMw", [file_google_ads_googleads_v17_common_offline_user_data, file_google_ads_googleads_v17_enums_conversion_adjustment_type, file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_rpc_status]);

/**
 * Request message for
 * [ConversionAdjustmentUploadService.UploadConversionAdjustments][google.ads.googleads.v17.services.ConversionAdjustmentUploadService.UploadConversionAdjustments].
 *
 * @generated from message google.ads.googleads.v17.services.UploadConversionAdjustmentsRequest
 */
export type UploadConversionAdjustmentsRequest = Message<"google.ads.googleads.v17.services.UploadConversionAdjustmentsRequest"> & {
  /**
   * Required. The ID of the customer performing the upload.
   *
   * @generated from field: string customer_id = 1;
   */
  customerId: string;

  /**
   * Required. The conversion adjustments that are being uploaded.
   *
   * @generated from field: repeated google.ads.googleads.v17.services.ConversionAdjustment conversion_adjustments = 2;
   */
  conversionAdjustments: ConversionAdjustment[];

  /**
   * Required. If true, successful operations will be carried out and invalid
   * operations will return errors. If false, all operations will be carried out
   * in one transaction if and only if they are all valid. This should always be
   * set to true.
   * See
   * https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
   * for more information about partial failure.
   *
   * @generated from field: bool partial_failure = 3;
   */
  partialFailure: boolean;

  /**
   * If true, the request is validated but not executed. Only errors are
   * returned, not results.
   *
   * @generated from field: bool validate_only = 4;
   */
  validateOnly: boolean;

  /**
   * Optional. Optional input to set job ID. Must be a non-negative number that
   * is less than 2^31 if provided. If this field is not provided, the API will
   * generate a job ID in the range [2^31, (2^63)-1]. The API will return the
   * value for this request in the `job_id` field of the
   * `UploadConversionAdjustmentsResponse`.
   *
   * @generated from field: optional int32 job_id = 5;
   */
  jobId?: number;
};

/**
 * Describes the message google.ads.googleads.v17.services.UploadConversionAdjustmentsRequest.
 * Use `create(UploadConversionAdjustmentsRequestSchema)` to create a new message.
 */
export const UploadConversionAdjustmentsRequestSchema: GenMessage<UploadConversionAdjustmentsRequest> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_services_conversion_adjustment_upload_service, 0);

/**
 * Response message for
 * [ConversionAdjustmentUploadService.UploadConversionAdjustments][google.ads.googleads.v17.services.ConversionAdjustmentUploadService.UploadConversionAdjustments].
 *
 * @generated from message google.ads.googleads.v17.services.UploadConversionAdjustmentsResponse
 */
export type UploadConversionAdjustmentsResponse = Message<"google.ads.googleads.v17.services.UploadConversionAdjustmentsResponse"> & {
  /**
   * Errors that pertain to conversion adjustment failures in the partial
   * failure mode. Returned when all errors occur inside the adjustments. If any
   * errors occur outside the adjustments (for example, auth errors), we return
   * an RPC level error. See
   * https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
   * for more information about partial failure.
   *
   * @generated from field: google.rpc.Status partial_failure_error = 1;
   */
  partialFailureError?: Status;

  /**
   * Returned for successfully processed conversion adjustments. Proto will be
   * empty for rows that received an error. Results are not returned when
   * validate_only is true.
   *
   * @generated from field: repeated google.ads.googleads.v17.services.ConversionAdjustmentResult results = 2;
   */
  results: ConversionAdjustmentResult[];

  /**
   * Job ID for the upload batch.
   *
   * @generated from field: int64 job_id = 3;
   */
  jobId: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.services.UploadConversionAdjustmentsResponse.
 * Use `create(UploadConversionAdjustmentsResponseSchema)` to create a new message.
 */
export const UploadConversionAdjustmentsResponseSchema: GenMessage<UploadConversionAdjustmentsResponse> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_services_conversion_adjustment_upload_service, 1);

/**
 * A conversion adjustment.
 *
 * @generated from message google.ads.googleads.v17.services.ConversionAdjustment
 */
export type ConversionAdjustment = Message<"google.ads.googleads.v17.services.ConversionAdjustment"> & {
  /**
   * For adjustments, uniquely identifies a conversion that was reported
   * without an order ID specified. If the adjustment_type is ENHANCEMENT, this
   * value is optional but may be set in addition to the order_id.
   *
   * @generated from field: google.ads.googleads.v17.services.GclidDateTimePair gclid_date_time_pair = 12;
   */
  gclidDateTimePair?: GclidDateTimePair;

  /**
   * The order ID of the conversion to be adjusted. If the conversion was
   * reported with an order ID specified, that order ID must be used as the
   * identifier here. The order ID is required for enhancements.
   *
   * @generated from field: optional string order_id = 13;
   */
  orderId?: string;

  /**
   * Resource name of the conversion action associated with this conversion
   * adjustment. Note: Although this resource name consists of a customer id and
   * a conversion action id, validation will ignore the customer id and use the
   * conversion action id as the sole identifier of the conversion action.
   *
   * @generated from field: optional string conversion_action = 8;
   */
  conversionAction?: string;

  /**
   * The date time at which the adjustment occurred. Must be after the
   * conversion_date_time. The timezone must be specified. The format is
   * "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00".
   *
   * @generated from field: optional string adjustment_date_time = 9;
   */
  adjustmentDateTime?: string;

  /**
   * The adjustment type.
   *
   * @generated from field: google.ads.googleads.v17.enums.ConversionAdjustmentTypeEnum.ConversionAdjustmentType adjustment_type = 5;
   */
  adjustmentType: ConversionAdjustmentTypeEnum_ConversionAdjustmentType;

  /**
   * Information needed to restate the conversion's value.
   * Required for restatements. Should not be supplied for retractions. An error
   * will be returned if provided for a retraction.
   * NOTE: If you want to upload a second restatement with a different adjusted
   * value, it must have a new, more recent, adjustment occurrence time.
   * Otherwise, it will be treated as a duplicate of the previous restatement
   * and ignored.
   *
   * @generated from field: google.ads.googleads.v17.services.RestatementValue restatement_value = 6;
   */
  restatementValue?: RestatementValue;

  /**
   * The user identifiers to enhance the original conversion.
   * ConversionAdjustmentUploadService only accepts user identifiers in
   * enhancements. The maximum number of user identifiers for each
   * enhancement is 5.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.UserIdentifier user_identifiers = 10;
   */
  userIdentifiers: UserIdentifier[];

  /**
   * The user agent to enhance the original conversion. This can be found in
   * your user's HTTP request header when they convert on your web page.
   * Example, "Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X)". User
   * agent can only be specified in enhancements with user identifiers. This
   * should match the user agent of the request that sent the original
   * conversion so the conversion and its enhancement are either both attributed
   * as same-device or both attributed as cross-device.
   *
   * @generated from field: optional string user_agent = 11;
   */
  userAgent?: string;
};

/**
 * Describes the message google.ads.googleads.v17.services.ConversionAdjustment.
 * Use `create(ConversionAdjustmentSchema)` to create a new message.
 */
export const ConversionAdjustmentSchema: GenMessage<ConversionAdjustment> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_services_conversion_adjustment_upload_service, 2);

/**
 * Contains information needed to restate a conversion's value.
 *
 * @generated from message google.ads.googleads.v17.services.RestatementValue
 */
export type RestatementValue = Message<"google.ads.googleads.v17.services.RestatementValue"> & {
  /**
   * The restated conversion value. This is the value of the conversion after
   * restatement. For example, to change the value of a conversion from 100 to
   * 70, an adjusted value of 70 should be reported.
   * NOTE: If you want to upload a second restatement with a different adjusted
   * value, it must have a new, more recent, adjustment occurrence time.
   * Otherwise, it will be treated as a duplicate of the previous restatement
   * and ignored.
   *
   * @generated from field: optional double adjusted_value = 3;
   */
  adjustedValue?: number;

  /**
   * The currency of the restated value. If not provided, then the default
   * currency from the conversion action is used, and if that is not set then
   * the account currency is used. This is the ISO 4217 3-character currency
   * code for example, USD or EUR.
   *
   * @generated from field: optional string currency_code = 4;
   */
  currencyCode?: string;
};

/**
 * Describes the message google.ads.googleads.v17.services.RestatementValue.
 * Use `create(RestatementValueSchema)` to create a new message.
 */
export const RestatementValueSchema: GenMessage<RestatementValue> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_services_conversion_adjustment_upload_service, 3);

/**
 * Uniquely identifies a conversion that was reported without an order ID
 * specified.
 *
 * @generated from message google.ads.googleads.v17.services.GclidDateTimePair
 */
export type GclidDateTimePair = Message<"google.ads.googleads.v17.services.GclidDateTimePair"> & {
  /**
   * Google click ID (gclid) associated with the original conversion for this
   * adjustment.
   *
   * @generated from field: optional string gclid = 3;
   */
  gclid?: string;

  /**
   * The date time at which the original conversion for this adjustment
   * occurred. The timezone must be specified. The format is "yyyy-mm-dd
   * hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00".
   *
   * @generated from field: optional string conversion_date_time = 4;
   */
  conversionDateTime?: string;
};

/**
 * Describes the message google.ads.googleads.v17.services.GclidDateTimePair.
 * Use `create(GclidDateTimePairSchema)` to create a new message.
 */
export const GclidDateTimePairSchema: GenMessage<GclidDateTimePair> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_services_conversion_adjustment_upload_service, 4);

/**
 * Information identifying a successfully processed ConversionAdjustment.
 *
 * @generated from message google.ads.googleads.v17.services.ConversionAdjustmentResult
 */
export type ConversionAdjustmentResult = Message<"google.ads.googleads.v17.services.ConversionAdjustmentResult"> & {
  /**
   * The gclid and conversion date time of the conversion.
   *
   * @generated from field: google.ads.googleads.v17.services.GclidDateTimePair gclid_date_time_pair = 9;
   */
  gclidDateTimePair?: GclidDateTimePair;

  /**
   * The order ID of the conversion to be adjusted.
   *
   * @generated from field: string order_id = 10;
   */
  orderId: string;

  /**
   * Resource name of the conversion action associated with this conversion
   * adjustment.
   *
   * @generated from field: optional string conversion_action = 7;
   */
  conversionAction?: string;

  /**
   * The date time at which the adjustment occurred. The format is
   * "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00".
   *
   * @generated from field: optional string adjustment_date_time = 8;
   */
  adjustmentDateTime?: string;

  /**
   * The adjustment type.
   *
   * @generated from field: google.ads.googleads.v17.enums.ConversionAdjustmentTypeEnum.ConversionAdjustmentType adjustment_type = 5;
   */
  adjustmentType: ConversionAdjustmentTypeEnum_ConversionAdjustmentType;
};

/**
 * Describes the message google.ads.googleads.v17.services.ConversionAdjustmentResult.
 * Use `create(ConversionAdjustmentResultSchema)` to create a new message.
 */
export const ConversionAdjustmentResultSchema: GenMessage<ConversionAdjustmentResult> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_services_conversion_adjustment_upload_service, 5);

/**
 * Service to upload conversion adjustments.
 *
 * @generated from service google.ads.googleads.v17.services.ConversionAdjustmentUploadService
 */
export const ConversionAdjustmentUploadService: GenService<{
  /**
   * Processes the given conversion adjustments.
   *
   * List of thrown errors:
   *   [AuthenticationError]()
   *   [AuthorizationError]()
   *   [HeaderError]()
   *   [InternalError]()
   *   [PartialFailureError]()
   *   [QuotaError]()
   *   [RequestError]()
   *
   * @generated from rpc google.ads.googleads.v17.services.ConversionAdjustmentUploadService.UploadConversionAdjustments
   */
  uploadConversionAdjustments: {
    methodKind: "unary";
    input: typeof UploadConversionAdjustmentsRequestSchema;
    output: typeof UploadConversionAdjustmentsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_ads_googleads_v17_services_conversion_adjustment_upload_service, 0);

