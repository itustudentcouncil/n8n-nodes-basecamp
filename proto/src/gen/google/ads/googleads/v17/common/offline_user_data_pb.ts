// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/ads/googleads/v17/common/offline_user_data.proto (package google.ads.googleads.v17.common, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Consent } from "./consent_pb";
import { file_google_ads_googleads_v17_common_consent } from "./consent_pb";
import type { UserIdentifierSourceEnum_UserIdentifierSource } from "../enums/user_identifier_source_pb";
import { file_google_ads_googleads_v17_enums_user_identifier_source } from "../enums/user_identifier_source_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/ads/googleads/v17/common/offline_user_data.proto.
 */
export const file_google_ads_googleads_v17_common_offline_user_data: GenFile = /*@__PURE__*/
  fileDesc("Cjdnb29nbGUvYWRzL2dvb2dsZWFkcy92MTcvY29tbW9uL29mZmxpbmVfdXNlcl9kYXRhLnByb3RvEh9nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uItACChZPZmZsaW5lVXNlckFkZHJlc3NJbmZvEh4KEWhhc2hlZF9maXJzdF9uYW1lGAcgASgJSACIAQESHQoQaGFzaGVkX2xhc3RfbmFtZRgIIAEoCUgBiAEBEhEKBGNpdHkYCSABKAlIAogBARISCgVzdGF0ZRgKIAEoCUgDiAEBEhkKDGNvdW50cnlfY29kZRgLIAEoCUgEiAEBEhgKC3Bvc3RhbF9jb2RlGAwgASgJSAWIAQESIgoVaGFzaGVkX3N0cmVldF9hZGRyZXNzGA0gASgJSAaIAQFCFAoSX2hhc2hlZF9maXJzdF9uYW1lQhMKEV9oYXNoZWRfbGFzdF9uYW1lQgcKBV9jaXR5QggKBl9zdGF0ZUIPCg1fY291bnRyeV9jb2RlQg4KDF9wb3N0YWxfY29kZUIYChZfaGFzaGVkX3N0cmVldF9hZGRyZXNzIskCCg5Vc2VySWRlbnRpZmllchJtChZ1c2VyX2lkZW50aWZpZXJfc291cmNlGAYgASgOMk0uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmVudW1zLlVzZXJJZGVudGlmaWVyU291cmNlRW51bS5Vc2VySWRlbnRpZmllclNvdXJjZRIWCgxoYXNoZWRfZW1haWwYByABKAlIABIdChNoYXNoZWRfcGhvbmVfbnVtYmVyGAggASgJSAASEwoJbW9iaWxlX2lkGAkgASgJSAASHQoTdGhpcmRfcGFydHlfdXNlcl9pZBgKIAEoCUgAEk8KDGFkZHJlc3NfaW5mbxgFIAEoCzI3Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uT2ZmbGluZVVzZXJBZGRyZXNzSW5mb0gAQgwKCmlkZW50aWZpZXIi4AMKFFRyYW5zYWN0aW9uQXR0cmlidXRlEiIKFXRyYW5zYWN0aW9uX2RhdGVfdGltZRgIIAEoCUgAiAEBEiYKGXRyYW5zYWN0aW9uX2Ftb3VudF9taWNyb3MYCSABKAFIAYgBARIaCg1jdXJyZW5jeV9jb2RlGAogASgJSAKIAQESHgoRY29udmVyc2lvbl9hY3Rpb24YCyABKAlIA4gBARIVCghvcmRlcl9pZBgMIAEoCUgEiAEBEkgKD3N0b3JlX2F0dHJpYnV0ZRgGIAEoCzIvLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uU3RvcmVBdHRyaWJ1dGUSGQoMY3VzdG9tX3ZhbHVlGA0gASgJSAWIAQESRgoOaXRlbV9hdHRyaWJ1dGUYDiABKAsyLi5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLkl0ZW1BdHRyaWJ1dGVCGAoWX3RyYW5zYWN0aW9uX2RhdGVfdGltZUIcChpfdHJhbnNhY3Rpb25fYW1vdW50X21pY3Jvc0IQCg5fY3VycmVuY3lfY29kZUIUChJfY29udmVyc2lvbl9hY3Rpb25CCwoJX29yZGVyX2lkQg8KDV9jdXN0b21fdmFsdWUiOAoOU3RvcmVBdHRyaWJ1dGUSFwoKc3RvcmVfY29kZRgCIAEoCUgAiAEBQg0KC19zdG9yZV9jb2RlIokBCg1JdGVtQXR0cmlidXRlEg8KB2l0ZW1faWQYASABKAkSGAoLbWVyY2hhbnRfaWQYAiABKANIAIgBARIUCgxjb3VudHJ5X2NvZGUYAyABKAkSFQoNbGFuZ3VhZ2VfY29kZRgEIAEoCRIQCghxdWFudGl0eRgFIAEoA0IOCgxfbWVyY2hhbnRfaWQivwIKCFVzZXJEYXRhEkkKEHVzZXJfaWRlbnRpZmllcnMYASADKAsyLy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLlVzZXJJZGVudGlmaWVyElQKFXRyYW5zYWN0aW9uX2F0dHJpYnV0ZRgCIAEoCzI1Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uVHJhbnNhY3Rpb25BdHRyaWJ1dGUSRgoOdXNlcl9hdHRyaWJ1dGUYAyABKAsyLi5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLlVzZXJBdHRyaWJ1dGUSPgoHY29uc2VudBgEIAEoCzIoLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uQ29uc2VudEgAiAEBQgoKCF9jb25zZW50IowECg1Vc2VyQXR0cmlidXRlEiIKFWxpZmV0aW1lX3ZhbHVlX21pY3JvcxgBIAEoA0gAiAEBEiIKFWxpZmV0aW1lX3ZhbHVlX2J1Y2tldBgCIAEoBUgBiAEBEh8KF2xhc3RfcHVyY2hhc2VfZGF0ZV90aW1lGAMgASgJEh4KFmF2ZXJhZ2VfcHVyY2hhc2VfY291bnQYBCABKAUSJQodYXZlcmFnZV9wdXJjaGFzZV92YWx1ZV9taWNyb3MYBSABKAMSHQoVYWNxdWlzaXRpb25fZGF0ZV90aW1lGAYgASgJEk8KEHNob3BwaW5nX2xveWFsdHkYByABKAsyMC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLlNob3BwaW5nTG95YWx0eUgCiAEBEhwKD2xpZmVjeWNsZV9zdGFnZRgIIAEoCUID4EEBEiUKGGZpcnN0X3B1cmNoYXNlX2RhdGVfdGltZRgJIAEoCUID4EEBEk0KD2V2ZW50X2F0dHJpYnV0ZRgKIAMoCzIvLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uRXZlbnRBdHRyaWJ1dGVCA+BBAUIYChZfbGlmZXRpbWVfdmFsdWVfbWljcm9zQhgKFl9saWZldGltZV92YWx1ZV9idWNrZXRCEwoRX3Nob3BwaW5nX2xveWFsdHkilAEKDkV2ZW50QXR0cmlidXRlEhIKBWV2ZW50GAEgASgJQgPgQQISHAoPZXZlbnRfZGF0ZV90aW1lGAIgASgJQgPgQQISUAoOaXRlbV9hdHRyaWJ1dGUYAyADKAsyMy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLkV2ZW50SXRlbUF0dHJpYnV0ZUID4EECIioKEkV2ZW50SXRlbUF0dHJpYnV0ZRIUCgdpdGVtX2lkGAEgASgJQgPgQQEiPQoPU2hvcHBpbmdMb3lhbHR5EhkKDGxveWFsdHlfdGllchgBIAEoCUgAiAEBQg8KDV9sb3lhbHR5X3RpZXIikQEKHUN1c3RvbWVyTWF0Y2hVc2VyTGlzdE1ldGFkYXRhEhYKCXVzZXJfbGlzdBgCIAEoCUgAiAEBEj4KB2NvbnNlbnQYAyABKAsyKC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLkNvbnNlbnRIAYgBAUIMCgpfdXNlcl9saXN0QgoKCF9jb25zZW50IpcCChJTdG9yZVNhbGVzTWV0YWRhdGESHQoQbG95YWx0eV9mcmFjdGlvbhgFIAEoAUgAiAEBEigKG3RyYW5zYWN0aW9uX3VwbG9hZF9mcmFjdGlvbhgGIAEoAUgBiAEBEhcKCmN1c3RvbV9rZXkYByABKAlIAogBARJbChR0aGlyZF9wYXJ0eV9tZXRhZGF0YRgDIAEoCzI9Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uU3RvcmVTYWxlc1RoaXJkUGFydHlNZXRhZGF0YUITChFfbG95YWx0eV9mcmFjdGlvbkIeChxfdHJhbnNhY3Rpb25fdXBsb2FkX2ZyYWN0aW9uQg0KC19jdXN0b21fa2V5IpgDChxTdG9yZVNhbGVzVGhpcmRQYXJ0eU1ldGFkYXRhEigKG2FkdmVydGlzZXJfdXBsb2FkX2RhdGVfdGltZRgHIAEoCUgAiAEBEicKGnZhbGlkX3RyYW5zYWN0aW9uX2ZyYWN0aW9uGAggASgBSAGIAQESIwoWcGFydG5lcl9tYXRjaF9mcmFjdGlvbhgJIAEoAUgCiAEBEiQKF3BhcnRuZXJfdXBsb2FkX2ZyYWN0aW9uGAogASgBSAOIAQESIgoVYnJpZGdlX21hcF92ZXJzaW9uX2lkGAsgASgJSASIAQESFwoKcGFydG5lcl9pZBgMIAEoA0gFiAEBQh4KHF9hZHZlcnRpc2VyX3VwbG9hZF9kYXRlX3RpbWVCHQobX3ZhbGlkX3RyYW5zYWN0aW9uX2ZyYWN0aW9uQhkKF19wYXJ0bmVyX21hdGNoX2ZyYWN0aW9uQhoKGF9wYXJ0bmVyX3VwbG9hZF9mcmFjdGlvbkIYChZfYnJpZGdlX21hcF92ZXJzaW9uX2lkQg0KC19wYXJ0bmVyX2lkQvQBCiNjb20uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbkIUT2ZmbGluZVVzZXJEYXRhUHJvdG9QAVpFZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9hZHMvZ29vZ2xlYWRzL3YxNy9jb21tb247Y29tbW9uogIDR0FBqgIfR29vZ2xlLkFkcy5Hb29nbGVBZHMuVjE3LkNvbW1vbsoCH0dvb2dsZVxBZHNcR29vZ2xlQWRzXFYxN1xDb21tb27qAiNHb29nbGU6OkFkczo6R29vZ2xlQWRzOjpWMTc6OkNvbW1vbmIGcHJvdG8z", [file_google_ads_googleads_v17_common_consent, file_google_ads_googleads_v17_enums_user_identifier_source, file_google_api_field_behavior]);

/**
 * Address identifier of offline data.
 *
 * @generated from message google.ads.googleads.v17.common.OfflineUserAddressInfo
 */
export type OfflineUserAddressInfo = Message<"google.ads.googleads.v17.common.OfflineUserAddressInfo"> & {
  /**
   * First name of the user, which is hashed as SHA-256 after normalized
   * (Lowercase all characters; Remove any extra spaces before, after, and in
   * between).
   *
   * @generated from field: optional string hashed_first_name = 7;
   */
  hashedFirstName?: string;

  /**
   * Last name of the user, which is hashed as SHA-256 after normalized (lower
   * case only and no punctuation).
   *
   * @generated from field: optional string hashed_last_name = 8;
   */
  hashedLastName?: string;

  /**
   * City of the address. Only accepted for Store Sales and
   * ConversionAdjustmentUploadService.
   *
   * @generated from field: optional string city = 9;
   */
  city?: string;

  /**
   * State code of the address. Only accepted for Store Sales and
   * ConversionAdjustmentUploadService.
   *
   * @generated from field: optional string state = 10;
   */
  state?: string;

  /**
   * 2-letter country code in ISO-3166-1 alpha-2 of the user's address.
   *
   * @generated from field: optional string country_code = 11;
   */
  countryCode?: string;

  /**
   * Postal code of the user's address.
   *
   * @generated from field: optional string postal_code = 12;
   */
  postalCode?: string;

  /**
   * The street address of the user hashed using SHA-256 hash function after
   * normalization (lower case only). Only accepted for
   * ConversionAdjustmentUploadService.
   *
   * @generated from field: optional string hashed_street_address = 13;
   */
  hashedStreetAddress?: string;
};

/**
 * Describes the message google.ads.googleads.v17.common.OfflineUserAddressInfo.
 * Use `create(OfflineUserAddressInfoSchema)` to create a new message.
 */
export const OfflineUserAddressInfoSchema: GenMessage<OfflineUserAddressInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_offline_user_data, 0);

/**
 * User identifying information.
 *
 * @generated from message google.ads.googleads.v17.common.UserIdentifier
 */
export type UserIdentifier = Message<"google.ads.googleads.v17.common.UserIdentifier"> & {
  /**
   * Source of the user identifier when the upload is from Store Sales,
   * ConversionUploadService, or ConversionAdjustmentUploadService.
   *
   * @generated from field: google.ads.googleads.v17.enums.UserIdentifierSourceEnum.UserIdentifierSource user_identifier_source = 6;
   */
  userIdentifierSource: UserIdentifierSourceEnum_UserIdentifierSource;

  /**
   * Exactly one must be specified. For OfflineUserDataJobService, Customer
   * Match accepts hashed_email, hashed_phone_number, mobile_id,
   * third_party_user_id, and address_info; Store Sales accepts hashed_email,
   * hashed_phone_number, third_party_user_id, and address_info.
   * ConversionUploadService accepts hashed_email and hashed_phone_number.
   * ConversionAdjustmentUploadService accepts hashed_email,
   * hashed_phone_number, and address_info.
   *
   * @generated from oneof google.ads.googleads.v17.common.UserIdentifier.identifier
   */
  identifier: {
    /**
     * Hashed email address using SHA-256 hash function after normalization.
     * Accepted for Customer Match, Store Sales, ConversionUploadService, and
     * ConversionAdjustmentUploadService.
     *
     * @generated from field: string hashed_email = 7;
     */
    value: string;
    case: "hashedEmail";
  } | {
    /**
     * Hashed phone number using SHA-256 hash function after normalization
     * (E164 standard). Accepted for Customer Match, Store Sales,
     * ConversionUploadService, and ConversionAdjustmentUploadService.
     *
     * @generated from field: string hashed_phone_number = 8;
     */
    value: string;
    case: "hashedPhoneNumber";
  } | {
    /**
     * Mobile device ID (advertising ID/IDFA). Accepted only for Customer Match.
     *
     * @generated from field: string mobile_id = 9;
     */
    value: string;
    case: "mobileId";
  } | {
    /**
     * Advertiser-assigned user ID for Customer Match upload, or
     * third-party-assigned user ID for Store Sales. Accepted only for Customer
     * Match and Store Sales.
     *
     * @generated from field: string third_party_user_id = 10;
     */
    value: string;
    case: "thirdPartyUserId";
  } | {
    /**
     * Address information. Accepted only for Customer Match, Store Sales, and
     * ConversionAdjustmentUploadService.
     *
     * @generated from field: google.ads.googleads.v17.common.OfflineUserAddressInfo address_info = 5;
     */
    value: OfflineUserAddressInfo;
    case: "addressInfo";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v17.common.UserIdentifier.
 * Use `create(UserIdentifierSchema)` to create a new message.
 */
export const UserIdentifierSchema: GenMessage<UserIdentifier> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_offline_user_data, 1);

/**
 * Attribute of the store sales transaction.
 *
 * @generated from message google.ads.googleads.v17.common.TransactionAttribute
 */
export type TransactionAttribute = Message<"google.ads.googleads.v17.common.TransactionAttribute"> & {
  /**
   * Timestamp when transaction occurred. Required.
   * The format is "YYYY-MM-DD HH:MM:SS[+/-HH:MM]", where [+/-HH:MM] is an
   * optional timezone offset from UTC. If the offset is absent, the API will
   * use the account's timezone as default.
   * Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30+03:00"
   *
   * @generated from field: optional string transaction_date_time = 8;
   */
  transactionDateTime?: string;

  /**
   * Transaction amount in micros. Required.
   * Transaction amount in micros needs to be greater than 1000.
   * If item Attributes are provided, it represents the total value of the
   * items, after multiplying the unit price per item by the quantity provided
   * in the ItemAttributes.
   *
   * @generated from field: optional double transaction_amount_micros = 9;
   */
  transactionAmountMicros?: number;

  /**
   * Transaction currency code. ISO 4217 three-letter code is used. Required.
   *
   * @generated from field: optional string currency_code = 10;
   */
  currencyCode?: string;

  /**
   * The resource name of conversion action to report conversions to.
   * Required.
   *
   * @generated from field: optional string conversion_action = 11;
   */
  conversionAction?: string;

  /**
   * Transaction order id.
   * Accessible only to customers on the allow-list.
   *
   * @generated from field: optional string order_id = 12;
   */
  orderId?: string;

  /**
   * Store attributes of the transaction.
   * Accessible only to customers on the allow-list.
   *
   * @generated from field: google.ads.googleads.v17.common.StoreAttribute store_attribute = 6;
   */
  storeAttribute?: StoreAttribute;

  /**
   * Value of the custom variable for each transaction.
   * Accessible only to customers on the allow-list.
   *
   * @generated from field: optional string custom_value = 13;
   */
  customValue?: string;

  /**
   * Item attributes of the transaction.
   *
   * @generated from field: google.ads.googleads.v17.common.ItemAttribute item_attribute = 14;
   */
  itemAttribute?: ItemAttribute;
};

/**
 * Describes the message google.ads.googleads.v17.common.TransactionAttribute.
 * Use `create(TransactionAttributeSchema)` to create a new message.
 */
export const TransactionAttributeSchema: GenMessage<TransactionAttribute> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_offline_user_data, 2);

/**
 * Store attributes of the transaction.
 *
 * @generated from message google.ads.googleads.v17.common.StoreAttribute
 */
export type StoreAttribute = Message<"google.ads.googleads.v17.common.StoreAttribute"> & {
  /**
   * Store code from
   * https://support.google.com/business/answer/3370250#storecode
   *
   * @generated from field: optional string store_code = 2;
   */
  storeCode?: string;
};

/**
 * Describes the message google.ads.googleads.v17.common.StoreAttribute.
 * Use `create(StoreAttributeSchema)` to create a new message.
 */
export const StoreAttributeSchema: GenMessage<StoreAttribute> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_offline_user_data, 3);

/**
 * Item attributes of the transaction.
 *
 * @generated from message google.ads.googleads.v17.common.ItemAttribute
 */
export type ItemAttribute = Message<"google.ads.googleads.v17.common.ItemAttribute"> & {
  /**
   * A unique identifier of a product. It can be either the Merchant Center Item
   * ID or GTIN (Global Trade Item Number).
   *
   * @generated from field: string item_id = 1;
   */
  itemId: string;

  /**
   * ID of the Merchant Center Account.
   *
   * @generated from field: optional int64 merchant_id = 2;
   */
  merchantId?: bigint;

  /**
   * Common Locale Data Repository (CLDR) territory code of the country
   * associated with the feed where your items are uploaded. See
   * https://developers.google.com/google-ads/api/reference/data/codes-formats#country-codes
   * for more information.
   *
   * @generated from field: string country_code = 3;
   */
  countryCode: string;

  /**
   * ISO 639-1 code of the language associated with the feed where your items
   * are uploaded
   *
   * @generated from field: string language_code = 4;
   */
  languageCode: string;

  /**
   * The number of items sold. Defaults to 1 if not set.
   *
   * @generated from field: int64 quantity = 5;
   */
  quantity: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.ItemAttribute.
 * Use `create(ItemAttributeSchema)` to create a new message.
 */
export const ItemAttributeSchema: GenMessage<ItemAttribute> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_offline_user_data, 4);

/**
 * User data holding user identifiers and attributes.
 *
 * @generated from message google.ads.googleads.v17.common.UserData
 */
export type UserData = Message<"google.ads.googleads.v17.common.UserData"> & {
  /**
   * User identification info. Required.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.UserIdentifier user_identifiers = 1;
   */
  userIdentifiers: UserIdentifier[];

  /**
   * Additional transactions/attributes associated with the user.
   * Required when updating store sales data.
   *
   * @generated from field: google.ads.googleads.v17.common.TransactionAttribute transaction_attribute = 2;
   */
  transactionAttribute?: TransactionAttribute;

  /**
   * Additional attributes associated with the user. Required when updating
   * customer match attributes. These have an expiration of 540 days.
   *
   * @generated from field: google.ads.googleads.v17.common.UserAttribute user_attribute = 3;
   */
  userAttribute?: UserAttribute;

  /**
   * The consent setting for the user. Customer match will ignore this field
   * and return a warning.
   *
   * @generated from field: optional google.ads.googleads.v17.common.Consent consent = 4;
   */
  consent?: Consent;
};

/**
 * Describes the message google.ads.googleads.v17.common.UserData.
 * Use `create(UserDataSchema)` to create a new message.
 */
export const UserDataSchema: GenMessage<UserData> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_offline_user_data, 5);

/**
 * User attribute, can only be used with CUSTOMER_MATCH_WITH_ATTRIBUTES job
 * type.
 *
 * @generated from message google.ads.googleads.v17.common.UserAttribute
 */
export type UserAttribute = Message<"google.ads.googleads.v17.common.UserAttribute"> & {
  /**
   * Advertiser defined lifetime value for the user.
   *
   * @generated from field: optional int64 lifetime_value_micros = 1;
   */
  lifetimeValueMicros?: bigint;

  /**
   * Advertiser defined lifetime value bucket for the user. The valid range for
   * a lifetime value bucket is from 1 (low) to 10 (high), except for remove
   * operation where 0 will also be accepted.
   *
   * @generated from field: optional int32 lifetime_value_bucket = 2;
   */
  lifetimeValueBucket?: number;

  /**
   * Timestamp of the last purchase made by the user.
   * The format is YYYY-MM-DD HH:MM:SS[+/-HH:MM], where [+/-HH:MM] is an
   * optional timezone offset from UTC. If the offset is absent, the API will
   * use the account's timezone as default.
   *
   * @generated from field: string last_purchase_date_time = 3;
   */
  lastPurchaseDateTime: string;

  /**
   * Advertiser defined average number of purchases that are made by the user in
   * a 30 day period.
   *
   * @generated from field: int32 average_purchase_count = 4;
   */
  averagePurchaseCount: number;

  /**
   * Advertiser defined average purchase value in micros for the user.
   *
   * @generated from field: int64 average_purchase_value_micros = 5;
   */
  averagePurchaseValueMicros: bigint;

  /**
   * Timestamp when the user was acquired.
   * The format is YYYY-MM-DD HH:MM:SS[+/-HH:MM], where [+/-HH:MM] is an
   * optional timezone offset from UTC. If the offset is absent, the API will
   * use the account's timezone as default.
   *
   * @generated from field: string acquisition_date_time = 6;
   */
  acquisitionDateTime: string;

  /**
   * The shopping loyalty related data. Shopping utilizes this data to provide
   * users with a better experience. Accessible only to merchants on the
   * allow-list with the user's consent.
   *
   * @generated from field: optional google.ads.googleads.v17.common.ShoppingLoyalty shopping_loyalty = 7;
   */
  shoppingLoyalty?: ShoppingLoyalty;

  /**
   * Optional. Advertiser defined lifecycle stage for the user. The accepted
   * values are "Lead", "Active" and "Churned".
   *
   * @generated from field: string lifecycle_stage = 8;
   */
  lifecycleStage: string;

  /**
   * Optional. Timestamp of the first purchase made by the user.
   * The format is YYYY-MM-DD HH:MM:SS[+/-HH:MM], where [+/-HH:MM] is an
   * optional timezone offset from UTC. If the offset is absent, the API will
   * use the account's timezone as default.
   *
   * @generated from field: string first_purchase_date_time = 9;
   */
  firstPurchaseDateTime: string;

  /**
   * Optional. Advertiser defined events and their attributes. All the values in
   * the nested fields are required. Currently this field is in beta.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.EventAttribute event_attribute = 10;
   */
  eventAttribute: EventAttribute[];
};

/**
 * Describes the message google.ads.googleads.v17.common.UserAttribute.
 * Use `create(UserAttributeSchema)` to create a new message.
 */
export const UserAttributeSchema: GenMessage<UserAttribute> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_offline_user_data, 6);

/**
 * Advertiser defined events and their attributes. All the values in the
 * nested fields are required.
 *
 * @generated from message google.ads.googleads.v17.common.EventAttribute
 */
export type EventAttribute = Message<"google.ads.googleads.v17.common.EventAttribute"> & {
  /**
   * Required. Advertiser defined event to be used for remarketing. The accepted
   * values are "Viewed", "Cart", "Purchased" and "Recommended".
   *
   * @generated from field: string event = 1;
   */
  event: string;

  /**
   * Required. Timestamp at which the event happened.
   * The format is YYYY-MM-DD HH:MM:SS[+/-HH:MM], where [+/-HH:MM] is an
   * optional timezone offset from UTC. If the offset is absent, the API will
   * use the account's timezone as default.
   *
   * @generated from field: string event_date_time = 2;
   */
  eventDateTime: string;

  /**
   * Required. Item attributes of the event.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.EventItemAttribute item_attribute = 3;
   */
  itemAttribute: EventItemAttribute[];
};

/**
 * Describes the message google.ads.googleads.v17.common.EventAttribute.
 * Use `create(EventAttributeSchema)` to create a new message.
 */
export const EventAttributeSchema: GenMessage<EventAttribute> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_offline_user_data, 7);

/**
 * Event Item attributes of the Customer Match.
 *
 * @generated from message google.ads.googleads.v17.common.EventItemAttribute
 */
export type EventItemAttribute = Message<"google.ads.googleads.v17.common.EventItemAttribute"> & {
  /**
   * Optional. A unique identifier of a product. It can be either the Merchant
   * Center Item ID or GTIN (Global Trade Item Number).
   *
   * @generated from field: string item_id = 1;
   */
  itemId: string;
};

/**
 * Describes the message google.ads.googleads.v17.common.EventItemAttribute.
 * Use `create(EventItemAttributeSchema)` to create a new message.
 */
export const EventItemAttributeSchema: GenMessage<EventItemAttribute> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_offline_user_data, 8);

/**
 * The shopping loyalty related data. Shopping utilizes this data to provide
 * users with a better experience.
 * Accessible only to merchants on the allow-list.
 *
 * @generated from message google.ads.googleads.v17.common.ShoppingLoyalty
 */
export type ShoppingLoyalty = Message<"google.ads.googleads.v17.common.ShoppingLoyalty"> & {
  /**
   * The membership tier. It is a free-form string as each merchant may have
   * their own loyalty system. For example, it could be a number from 1 to 10,
   * or a string such as "Golden" or "Silver", or even empty string "".
   *
   * @generated from field: optional string loyalty_tier = 1;
   */
  loyaltyTier?: string;
};

/**
 * Describes the message google.ads.googleads.v17.common.ShoppingLoyalty.
 * Use `create(ShoppingLoyaltySchema)` to create a new message.
 */
export const ShoppingLoyaltySchema: GenMessage<ShoppingLoyalty> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_offline_user_data, 9);

/**
 * Metadata for customer match user list.
 *
 * @generated from message google.ads.googleads.v17.common.CustomerMatchUserListMetadata
 */
export type CustomerMatchUserListMetadata = Message<"google.ads.googleads.v17.common.CustomerMatchUserListMetadata"> & {
  /**
   * The resource name of remarketing list to update data.
   * Required for job of CUSTOMER_MATCH_USER_LIST type.
   *
   * @generated from field: optional string user_list = 2;
   */
  userList?: string;

  /**
   * The consent setting for all the users in this job.
   *
   * @generated from field: optional google.ads.googleads.v17.common.Consent consent = 3;
   */
  consent?: Consent;
};

/**
 * Describes the message google.ads.googleads.v17.common.CustomerMatchUserListMetadata.
 * Use `create(CustomerMatchUserListMetadataSchema)` to create a new message.
 */
export const CustomerMatchUserListMetadataSchema: GenMessage<CustomerMatchUserListMetadata> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_offline_user_data, 10);

/**
 * Metadata for Store Sales Direct.
 *
 * @generated from message google.ads.googleads.v17.common.StoreSalesMetadata
 */
export type StoreSalesMetadata = Message<"google.ads.googleads.v17.common.StoreSalesMetadata"> & {
  /**
   * This is the fraction of all transactions that are identifiable (for
   * example, associated with any form of customer information). Required. The
   * fraction needs to be between 0 and 1 (excluding 0).
   *
   * @generated from field: optional double loyalty_fraction = 5;
   */
  loyaltyFraction?: number;

  /**
   * This is the ratio of sales being uploaded compared to the overall sales
   * that can be associated with a customer. Required.
   * The fraction needs to be between 0 and 1 (excluding 0). For example, if you
   * upload half the sales that you are able to associate with a customer, this
   * would be 0.5.
   *
   * @generated from field: optional double transaction_upload_fraction = 6;
   */
  transactionUploadFraction?: number;

  /**
   * Name of the store sales custom variable key. A predefined key that
   * can be applied to the transaction and then later used for custom
   * segmentation in reporting.
   * Accessible only to customers on the allow-list.
   *
   * @generated from field: optional string custom_key = 7;
   */
  customKey?: string;

  /**
   * Metadata for a third party Store Sales upload.
   *
   * @generated from field: google.ads.googleads.v17.common.StoreSalesThirdPartyMetadata third_party_metadata = 3;
   */
  thirdPartyMetadata?: StoreSalesThirdPartyMetadata;
};

/**
 * Describes the message google.ads.googleads.v17.common.StoreSalesMetadata.
 * Use `create(StoreSalesMetadataSchema)` to create a new message.
 */
export const StoreSalesMetadataSchema: GenMessage<StoreSalesMetadata> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_offline_user_data, 11);

/**
 * Metadata for a third party Store Sales.
 * This product is only for customers on the allow-list. Contact your
 * Google business development representative for details on the upload
 * configuration.
 *
 * @generated from message google.ads.googleads.v17.common.StoreSalesThirdPartyMetadata
 */
export type StoreSalesThirdPartyMetadata = Message<"google.ads.googleads.v17.common.StoreSalesThirdPartyMetadata"> & {
  /**
   * Time the advertiser uploaded the data to the partner. Required.
   * The format is "YYYY-MM-DD HH:MM:SS".
   * Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
   *
   * @generated from field: optional string advertiser_upload_date_time = 7;
   */
  advertiserUploadDateTime?: string;

  /**
   * The fraction of transactions that are valid. Invalid transactions may
   * include invalid formats or values.
   * Required.
   * The fraction needs to be between 0 and 1 (excluding 0).
   *
   * @generated from field: optional double valid_transaction_fraction = 8;
   */
  validTransactionFraction?: number;

  /**
   * The fraction of valid transactions that are matched to a third party
   * assigned user ID on the partner side.
   * Required.
   * The fraction needs to be between 0 and 1 (excluding 0).
   *
   * @generated from field: optional double partner_match_fraction = 9;
   */
  partnerMatchFraction?: number;

  /**
   * The fraction of valid transactions that are uploaded by the partner to
   * Google.
   * Required.
   * The fraction needs to be between 0 and 1 (excluding 0).
   *
   * @generated from field: optional double partner_upload_fraction = 10;
   */
  partnerUploadFraction?: number;

  /**
   * Version of partner IDs to be used for uploads. Required.
   *
   * @generated from field: optional string bridge_map_version_id = 11;
   */
  bridgeMapVersionId?: string;

  /**
   * ID of the third party partner updating the transaction feed.
   *
   * @generated from field: optional int64 partner_id = 12;
   */
  partnerId?: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.StoreSalesThirdPartyMetadata.
 * Use `create(StoreSalesThirdPartyMetadataSchema)` to create a new message.
 */
export const StoreSalesThirdPartyMetadataSchema: GenMessage<StoreSalesThirdPartyMetadata> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_offline_user_data, 12);

