// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/ads/googleads/v17/common/asset_set_types.proto (package google.ads.googleads.v17.common, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { ChainRelationshipTypeEnum_ChainRelationshipType } from "../enums/chain_relationship_type_pb";
import { file_google_ads_googleads_v17_enums_chain_relationship_type } from "../enums/chain_relationship_type_pb";
import type { LocationOwnershipTypeEnum_LocationOwnershipType } from "../enums/location_ownership_type_pb";
import { file_google_ads_googleads_v17_enums_location_ownership_type } from "../enums/location_ownership_type_pb";
import type { LocationStringFilterTypeEnum_LocationStringFilterType } from "../enums/location_string_filter_type_pb";
import { file_google_ads_googleads_v17_enums_location_string_filter_type } from "../enums/location_string_filter_type_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/ads/googleads/v17/common/asset_set_types.proto.
 */
export const file_google_ads_googleads_v17_common_asset_set_types: GenFile = /*@__PURE__*/
  fileDesc("CjVnb29nbGUvYWRzL2dvb2dsZWFkcy92MTcvY29tbW9uL2Fzc2V0X3NldF90eXBlcy5wcm90bxIfZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbiKPAwoLTG9jYXRpb25TZXQSeAoXbG9jYXRpb25fb3duZXJzaGlwX3R5cGUYAyABKA4yTy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuZW51bXMuTG9jYXRpb25Pd25lcnNoaXBUeXBlRW51bS5Mb2NhdGlvbk93bmVyc2hpcFR5cGVCBuBBAuBBBRJkCh1idXNpbmVzc19wcm9maWxlX2xvY2F0aW9uX3NldBgBIAEoCzI7Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uQnVzaW5lc3NQcm9maWxlTG9jYXRpb25TZXRIABJHChJjaGFpbl9sb2NhdGlvbl9zZXQYAiABKAsyKS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLkNoYWluU2V0SAASTQoRbWFwc19sb2NhdGlvbl9zZXQYBSABKAsyMC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLk1hcHNMb2NhdGlvblNldEgAQggKBnNvdXJjZSLYAQoaQnVzaW5lc3NQcm9maWxlTG9jYXRpb25TZXQSKAoYaHR0cF9hdXRob3JpemF0aW9uX3Rva2VuGAEgASgJQgbgQQXgQQISHQoNZW1haWxfYWRkcmVzcxgCIAEoCUIG4EEC4EEFEhwKFGJ1c2luZXNzX25hbWVfZmlsdGVyGAMgASgJEhUKDWxhYmVsX2ZpbHRlcnMYBCADKAkSGgoSbGlzdGluZ19pZF9maWx0ZXJzGAUgAygDEiAKE2J1c2luZXNzX2FjY291bnRfaWQYBiABKAlCA+BBBSLBAQoIQ2hhaW5TZXQScgoRcmVsYXRpb25zaGlwX3R5cGUYASABKA4yTy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuZW51bXMuQ2hhaW5SZWxhdGlvbnNoaXBUeXBlRW51bS5DaGFpblJlbGF0aW9uc2hpcFR5cGVCBuBBAuBBBRJBCgZjaGFpbnMYAiADKAsyLC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLkNoYWluRmlsdGVyQgPgQQIiQQoLQ2hhaW5GaWx0ZXISFQoIY2hhaW5faWQYASABKANCA+BBAhIbChNsb2NhdGlvbl9hdHRyaWJ1dGVzGAIgAygJImEKD01hcHNMb2NhdGlvblNldBJOCg5tYXBzX2xvY2F0aW9ucxgBIAMoCzIxLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uTWFwc0xvY2F0aW9uSW5mb0ID4EECIiQKEE1hcHNMb2NhdGlvbkluZm8SEAoIcGxhY2VfaWQYASABKAkiowEKHEJ1c2luZXNzUHJvZmlsZUxvY2F0aW9uR3JvdXASggEKLmR5bmFtaWNfYnVzaW5lc3NfcHJvZmlsZV9sb2NhdGlvbl9ncm91cF9maWx0ZXIYASABKAsySi5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLkR5bmFtaWNCdXNpbmVzc1Byb2ZpbGVMb2NhdGlvbkdyb3VwRmlsdGVyIt4BCilEeW5hbWljQnVzaW5lc3NQcm9maWxlTG9jYXRpb25Hcm91cEZpbHRlchIVCg1sYWJlbF9maWx0ZXJzGAEgAygJEmUKFGJ1c2luZXNzX25hbWVfZmlsdGVyGAIgASgLMkIuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbi5CdXNpbmVzc1Byb2ZpbGVCdXNpbmVzc05hbWVGaWx0ZXJIAIgBARIaChJsaXN0aW5nX2lkX2ZpbHRlcnMYAyADKANCFwoVX2J1c2luZXNzX25hbWVfZmlsdGVyIqYBCiFCdXNpbmVzc1Byb2ZpbGVCdXNpbmVzc05hbWVGaWx0ZXISFQoNYnVzaW5lc3NfbmFtZRgBIAEoCRJqCgtmaWx0ZXJfdHlwZRgCIAEoDjJVLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5lbnVtcy5Mb2NhdGlvblN0cmluZ0ZpbHRlclR5cGVFbnVtLkxvY2F0aW9uU3RyaW5nRmlsdGVyVHlwZSJwChJDaGFpbkxvY2F0aW9uR3JvdXASWgokZHluYW1pY19jaGFpbl9sb2NhdGlvbl9ncm91cF9maWx0ZXJzGAEgAygLMiwuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbi5DaGFpbkZpbHRlckLyAQojY29tLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb25CEkFzc2V0U2V0VHlwZXNQcm90b1ABWkVnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Fkcy9nb29nbGVhZHMvdjE3L2NvbW1vbjtjb21tb26iAgNHQUGqAh9Hb29nbGUuQWRzLkdvb2dsZUFkcy5WMTcuQ29tbW9uygIfR29vZ2xlXEFkc1xHb29nbGVBZHNcVjE3XENvbW1vbuoCI0dvb2dsZTo6QWRzOjpHb29nbGVBZHM6OlYxNzo6Q29tbW9uYgZwcm90bzM", [file_google_ads_googleads_v17_enums_chain_relationship_type, file_google_ads_googleads_v17_enums_location_ownership_type, file_google_ads_googleads_v17_enums_location_string_filter_type, file_google_api_field_behavior]);

/**
 * Data related to location set. One of the Google Business Profile (previously
 * known as Google My Business) data, Chain data, and map location data need to
 * be specified.
 *
 * @generated from message google.ads.googleads.v17.common.LocationSet
 */
export type LocationSet = Message<"google.ads.googleads.v17.common.LocationSet"> & {
  /**
   * Required. Immutable. Location Ownership Type (owned location or affiliate
   * location).
   *
   * @generated from field: google.ads.googleads.v17.enums.LocationOwnershipTypeEnum.LocationOwnershipType location_ownership_type = 3;
   */
  locationOwnershipType: LocationOwnershipTypeEnum_LocationOwnershipType;

  /**
   * Location data specific to each sync source.
   *
   * @generated from oneof google.ads.googleads.v17.common.LocationSet.source
   */
  source: {
    /**
     * Data used to configure a location set populated from Google Business
     * Profile locations.
     *
     * @generated from field: google.ads.googleads.v17.common.BusinessProfileLocationSet business_profile_location_set = 1;
     */
    value: BusinessProfileLocationSet;
    case: "businessProfileLocationSet";
  } | {
    /**
     * Data used to configure a location on chain set populated with the
     * specified chains.
     *
     * @generated from field: google.ads.googleads.v17.common.ChainSet chain_location_set = 2;
     */
    value: ChainSet;
    case: "chainLocationSet";
  } | {
    /**
     * Only set if locations are synced based on selected maps locations
     *
     * @generated from field: google.ads.googleads.v17.common.MapsLocationSet maps_location_set = 5;
     */
    value: MapsLocationSet;
    case: "mapsLocationSet";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v17.common.LocationSet.
 * Use `create(LocationSetSchema)` to create a new message.
 */
export const LocationSetSchema: GenMessage<LocationSet> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_asset_set_types, 0);

/**
 * Data used to configure a location set populated from Google Business Profile
 * locations.
 * Different types of filters are AND'ed together, if they are specified.
 *
 * @generated from message google.ads.googleads.v17.common.BusinessProfileLocationSet
 */
export type BusinessProfileLocationSet = Message<"google.ads.googleads.v17.common.BusinessProfileLocationSet"> & {
  /**
   * Required. Immutable. The HTTP authorization token used to obtain
   * authorization.
   *
   * @generated from field: string http_authorization_token = 1;
   */
  httpAuthorizationToken: string;

  /**
   * Required. Immutable. Email address of a Google Business Profile account or
   * email address of a manager of the Google Business Profile account.
   *
   * @generated from field: string email_address = 2;
   */
  emailAddress: string;

  /**
   * Used to filter Google Business Profile listings by business name. If
   * businessNameFilter is set, only listings with a matching business name are
   * candidates to be sync'd into Assets.
   *
   * @generated from field: string business_name_filter = 3;
   */
  businessNameFilter: string;

  /**
   * Used to filter Google Business Profile listings by labels. If entries exist
   * in labelFilters, only listings that have any of the labels set are
   * candidates to be synchronized into Assets. If no entries exist in
   * labelFilters, then all listings are candidates for syncing.
   * Label filters are OR'ed together.
   *
   * @generated from field: repeated string label_filters = 4;
   */
  labelFilters: string[];

  /**
   * Used to filter Google Business Profile listings by listing id. If entries
   * exist in listingIdFilters, only listings specified by the filters are
   * candidates to be synchronized into Assets. If no entries exist in
   * listingIdFilters, then all listings are candidates for syncing.
   * Listing ID filters are OR'ed together.
   *
   * @generated from field: repeated int64 listing_id_filters = 5;
   */
  listingIdFilters: bigint[];

  /**
   * Immutable. The account ID of the managed business whose locations are to be
   * used. If this field is not set, then all businesses accessible by the user
   * (specified by the emailAddress) are used.
   *
   * @generated from field: string business_account_id = 6;
   */
  businessAccountId: string;
};

/**
 * Describes the message google.ads.googleads.v17.common.BusinessProfileLocationSet.
 * Use `create(BusinessProfileLocationSetSchema)` to create a new message.
 */
export const BusinessProfileLocationSetSchema: GenMessage<BusinessProfileLocationSet> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_asset_set_types, 1);

/**
 * Data used to configure a location set populated with the specified chains.
 *
 * @generated from message google.ads.googleads.v17.common.ChainSet
 */
export type ChainSet = Message<"google.ads.googleads.v17.common.ChainSet"> & {
  /**
   * Required. Immutable. Relationship type the specified chains have with this
   * advertiser.
   *
   * @generated from field: google.ads.googleads.v17.enums.ChainRelationshipTypeEnum.ChainRelationshipType relationship_type = 1;
   */
  relationshipType: ChainRelationshipTypeEnum_ChainRelationshipType;

  /**
   * Required. A list of chain level filters, all filters are OR'ed together.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.ChainFilter chains = 2;
   */
  chains: ChainFilter[];
};

/**
 * Describes the message google.ads.googleads.v17.common.ChainSet.
 * Use `create(ChainSetSchema)` to create a new message.
 */
export const ChainSetSchema: GenMessage<ChainSet> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_asset_set_types, 2);

/**
 * One chain level filter on location in a feed item set.
 * The filtering logic among all the fields is AND.
 *
 * @generated from message google.ads.googleads.v17.common.ChainFilter
 */
export type ChainFilter = Message<"google.ads.googleads.v17.common.ChainFilter"> & {
  /**
   * Required. Used to filter chain locations by chain id. Only chain locations
   * that belong to the specified chain will be in the asset set.
   *
   * @generated from field: int64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * Used to filter chain locations by location attributes.
   * Only chain locations that belong to all of the specified attribute(s) will
   * be in the asset set. If this field is empty, it means no filtering on this
   * field.
   *
   * @generated from field: repeated string location_attributes = 2;
   */
  locationAttributes: string[];
};

/**
 * Describes the message google.ads.googleads.v17.common.ChainFilter.
 * Use `create(ChainFilterSchema)` to create a new message.
 */
export const ChainFilterSchema: GenMessage<ChainFilter> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_asset_set_types, 3);

/**
 * Wrapper for multiple maps location sync data
 *
 * @generated from message google.ads.googleads.v17.common.MapsLocationSet
 */
export type MapsLocationSet = Message<"google.ads.googleads.v17.common.MapsLocationSet"> & {
  /**
   * Required. A list of maps location info that user manually synced in.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.MapsLocationInfo maps_locations = 1;
   */
  mapsLocations: MapsLocationInfo[];
};

/**
 * Describes the message google.ads.googleads.v17.common.MapsLocationSet.
 * Use `create(MapsLocationSetSchema)` to create a new message.
 */
export const MapsLocationSetSchema: GenMessage<MapsLocationSet> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_asset_set_types, 4);

/**
 * Wrapper for place ids
 *
 * @generated from message google.ads.googleads.v17.common.MapsLocationInfo
 */
export type MapsLocationInfo = Message<"google.ads.googleads.v17.common.MapsLocationInfo"> & {
  /**
   * Place ID of the Maps location.
   *
   * @generated from field: string place_id = 1;
   */
  placeId: string;
};

/**
 * Describes the message google.ads.googleads.v17.common.MapsLocationInfo.
 * Use `create(MapsLocationInfoSchema)` to create a new message.
 */
export const MapsLocationInfoSchema: GenMessage<MapsLocationInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_asset_set_types, 5);

/**
 * Information about a Business Profile dynamic location group.
 * Only applicable if the sync level AssetSet's type is LOCATION_SYNC and
 * sync source is Business Profile.
 *
 * @generated from message google.ads.googleads.v17.common.BusinessProfileLocationGroup
 */
export type BusinessProfileLocationGroup = Message<"google.ads.googleads.v17.common.BusinessProfileLocationGroup"> & {
  /**
   * Filter for dynamic Business Profile location sets.
   *
   * @generated from field: google.ads.googleads.v17.common.DynamicBusinessProfileLocationGroupFilter dynamic_business_profile_location_group_filter = 1;
   */
  dynamicBusinessProfileLocationGroupFilter?: DynamicBusinessProfileLocationGroupFilter;
};

/**
 * Describes the message google.ads.googleads.v17.common.BusinessProfileLocationGroup.
 * Use `create(BusinessProfileLocationGroupSchema)` to create a new message.
 */
export const BusinessProfileLocationGroupSchema: GenMessage<BusinessProfileLocationGroup> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_asset_set_types, 6);

/**
 * Represents a filter on Business Profile locations in an asset set. If
 * multiple filters are provided, they are AND'ed together.
 *
 * @generated from message google.ads.googleads.v17.common.DynamicBusinessProfileLocationGroupFilter
 */
export type DynamicBusinessProfileLocationGroupFilter = Message<"google.ads.googleads.v17.common.DynamicBusinessProfileLocationGroupFilter"> & {
  /**
   * Used to filter Business Profile locations by label. Only locations that
   * have any of the listed labels will be in the asset set.
   * Label filters are OR'ed together.
   *
   * @generated from field: repeated string label_filters = 1;
   */
  labelFilters: string[];

  /**
   * Used to filter Business Profile locations by business name.
   *
   * @generated from field: optional google.ads.googleads.v17.common.BusinessProfileBusinessNameFilter business_name_filter = 2;
   */
  businessNameFilter?: BusinessProfileBusinessNameFilter;

  /**
   * Used to filter Business Profile locations by listing ids.
   *
   * @generated from field: repeated int64 listing_id_filters = 3;
   */
  listingIdFilters: bigint[];
};

/**
 * Describes the message google.ads.googleads.v17.common.DynamicBusinessProfileLocationGroupFilter.
 * Use `create(DynamicBusinessProfileLocationGroupFilterSchema)` to create a new message.
 */
export const DynamicBusinessProfileLocationGroupFilterSchema: GenMessage<DynamicBusinessProfileLocationGroupFilter> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_asset_set_types, 7);

/**
 * Business Profile location group business name filter.
 *
 * @generated from message google.ads.googleads.v17.common.BusinessProfileBusinessNameFilter
 */
export type BusinessProfileBusinessNameFilter = Message<"google.ads.googleads.v17.common.BusinessProfileBusinessNameFilter"> & {
  /**
   * Business name string to use for filtering.
   *
   * @generated from field: string business_name = 1;
   */
  businessName: string;

  /**
   * The type of string matching to use when filtering with business_name.
   *
   * @generated from field: google.ads.googleads.v17.enums.LocationStringFilterTypeEnum.LocationStringFilterType filter_type = 2;
   */
  filterType: LocationStringFilterTypeEnum_LocationStringFilterType;
};

/**
 * Describes the message google.ads.googleads.v17.common.BusinessProfileBusinessNameFilter.
 * Use `create(BusinessProfileBusinessNameFilterSchema)` to create a new message.
 */
export const BusinessProfileBusinessNameFilterSchema: GenMessage<BusinessProfileBusinessNameFilter> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_asset_set_types, 8);

/**
 * Represents information about a Chain dynamic location group.
 * Only applicable if the sync level AssetSet's type is LOCATION_SYNC and
 * sync source is chain.
 *
 * @generated from message google.ads.googleads.v17.common.ChainLocationGroup
 */
export type ChainLocationGroup = Message<"google.ads.googleads.v17.common.ChainLocationGroup"> & {
  /**
   * Used to filter chain locations by chain ids.
   * Only Locations that belong to the specified chain(s) will be in the asset
   * set.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.ChainFilter dynamic_chain_location_group_filters = 1;
   */
  dynamicChainLocationGroupFilters: ChainFilter[];
};

/**
 * Describes the message google.ads.googleads.v17.common.ChainLocationGroup.
 * Use `create(ChainLocationGroupSchema)` to create a new message.
 */
export const ChainLocationGroupSchema: GenMessage<ChainLocationGroup> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_asset_set_types, 9);

