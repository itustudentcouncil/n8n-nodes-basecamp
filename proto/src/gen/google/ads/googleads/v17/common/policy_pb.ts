// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/ads/googleads/v17/common/policy.proto (package google.ads.googleads.v17.common, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { PolicyTopicEntryTypeEnum_PolicyTopicEntryType } from "../enums/policy_topic_entry_type_pb";
import { file_google_ads_googleads_v17_enums_policy_topic_entry_type } from "../enums/policy_topic_entry_type_pb";
import type { PolicyTopicEvidenceDestinationMismatchUrlTypeEnum_PolicyTopicEvidenceDestinationMismatchUrlType } from "../enums/policy_topic_evidence_destination_mismatch_url_type_pb";
import { file_google_ads_googleads_v17_enums_policy_topic_evidence_destination_mismatch_url_type } from "../enums/policy_topic_evidence_destination_mismatch_url_type_pb";
import type { PolicyTopicEvidenceDestinationNotWorkingDeviceEnum_PolicyTopicEvidenceDestinationNotWorkingDevice } from "../enums/policy_topic_evidence_destination_not_working_device_pb";
import { file_google_ads_googleads_v17_enums_policy_topic_evidence_destination_not_working_device } from "../enums/policy_topic_evidence_destination_not_working_device_pb";
import type { PolicyTopicEvidenceDestinationNotWorkingDnsErrorTypeEnum_PolicyTopicEvidenceDestinationNotWorkingDnsErrorType } from "../enums/policy_topic_evidence_destination_not_working_dns_error_type_pb";
import { file_google_ads_googleads_v17_enums_policy_topic_evidence_destination_not_working_dns_error_type } from "../enums/policy_topic_evidence_destination_not_working_dns_error_type_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/ads/googleads/v17/common/policy.proto.
 */
export const file_google_ads_googleads_v17_common_policy: GenFile = /*@__PURE__*/
  fileDesc("Cixnb29nbGUvYWRzL2dvb2dsZWFkcy92MTcvY29tbW9uL3BvbGljeS5wcm90bxIfZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbiJuChJQb2xpY3lWaW9sYXRpb25LZXkSGAoLcG9saWN5X25hbWUYAyABKAlIAIgBARIbCg52aW9sYXRpbmdfdGV4dBgEIAEoCUgBiAEBQg4KDF9wb2xpY3lfbmFtZUIRCg9fdmlvbGF0aW5nX3RleHQilwEKGVBvbGljeVZhbGlkYXRpb25QYXJhbWV0ZXISHwoXaWdub3JhYmxlX3BvbGljeV90b3BpY3MYAyADKAkSWQocZXhlbXB0X3BvbGljeV92aW9sYXRpb25fa2V5cxgCIAMoCzIzLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uUG9saWN5VmlvbGF0aW9uS2V5IqMCChBQb2xpY3lUb3BpY0VudHJ5EhIKBXRvcGljGAUgASgJSACIAQESWwoEdHlwZRgCIAEoDjJNLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5lbnVtcy5Qb2xpY3lUb3BpY0VudHJ5VHlwZUVudW0uUG9saWN5VG9waWNFbnRyeVR5cGUSRwoJZXZpZGVuY2VzGAMgAygLMjQuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbi5Qb2xpY3lUb3BpY0V2aWRlbmNlEksKC2NvbnN0cmFpbnRzGAQgAygLMjYuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbi5Qb2xpY3lUb3BpY0NvbnN0cmFpbnRCCAoGX3RvcGljIq8KChNQb2xpY3lUb3BpY0V2aWRlbmNlElgKDHdlYnNpdGVfbGlzdBgDIAEoCzJALmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uUG9saWN5VG9waWNFdmlkZW5jZS5XZWJzaXRlTGlzdEgAElIKCXRleHRfbGlzdBgEIAEoCzI9Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uUG9saWN5VG9waWNFdmlkZW5jZS5UZXh0TGlzdEgAEhcKDWxhbmd1YWdlX2NvZGUYCSABKAlIABJpChVkZXN0aW5hdGlvbl90ZXh0X2xpc3QYBiABKAsySC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLlBvbGljeVRvcGljRXZpZGVuY2UuRGVzdGluYXRpb25UZXh0TGlzdEgAEmgKFGRlc3RpbmF0aW9uX21pc21hdGNoGAcgASgLMkguZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbi5Qb2xpY3lUb3BpY0V2aWRlbmNlLkRlc3RpbmF0aW9uTWlzbWF0Y2hIABJtChdkZXN0aW5hdGlvbl9ub3Rfd29ya2luZxgIIAEoCzJKLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uUG9saWN5VG9waWNFdmlkZW5jZS5EZXN0aW5hdGlvbk5vdFdvcmtpbmdIABoZCghUZXh0TGlzdBINCgV0ZXh0cxgCIAMoCRofCgtXZWJzaXRlTGlzdBIQCgh3ZWJzaXRlcxgCIAMoCRowChNEZXN0aW5hdGlvblRleHRMaXN0EhkKEWRlc3RpbmF0aW9uX3RleHRzGAIgAygJGqoBChNEZXN0aW5hdGlvbk1pc21hdGNoEpIBCgl1cmxfdHlwZXMYASADKA4yfy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuZW51bXMuUG9saWN5VG9waWNFdmlkZW5jZURlc3RpbmF0aW9uTWlzbWF0Y2hVcmxUeXBlRW51bS5Qb2xpY3lUb3BpY0V2aWRlbmNlRGVzdGluYXRpb25NaXNtYXRjaFVybFR5cGUa6AMKFURlc3RpbmF0aW9uTm90V29ya2luZxIZCgxleHBhbmRlZF91cmwYByABKAlIAYgBARKSAQoGZGV2aWNlGAQgASgOMoEBLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5lbnVtcy5Qb2xpY3lUb3BpY0V2aWRlbmNlRGVzdGluYXRpb25Ob3RXb3JraW5nRGV2aWNlRW51bS5Qb2xpY3lUb3BpY0V2aWRlbmNlRGVzdGluYXRpb25Ob3RXb3JraW5nRGV2aWNlEiMKFmxhc3RfY2hlY2tlZF9kYXRlX3RpbWUYCCABKAlIAogBARKoAQoOZG5zX2Vycm9yX3R5cGUYASABKA4yjQEuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmVudW1zLlBvbGljeVRvcGljRXZpZGVuY2VEZXN0aW5hdGlvbk5vdFdvcmtpbmdEbnNFcnJvclR5cGVFbnVtLlBvbGljeVRvcGljRXZpZGVuY2VEZXN0aW5hdGlvbk5vdFdvcmtpbmdEbnNFcnJvclR5cGVIABIZCg9odHRwX2Vycm9yX2NvZGUYBiABKANIAEIICgZyZWFzb25CDwoNX2V4cGFuZGVkX3VybEIZChdfbGFzdF9jaGVja2VkX2RhdGVfdGltZUIHCgV2YWx1ZSKaBgoVUG9saWN5VG9waWNDb25zdHJhaW50Em8KF2NvdW50cnlfY29uc3RyYWludF9saXN0GAEgASgLMkwuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbi5Qb2xpY3lUb3BpY0NvbnN0cmFpbnQuQ291bnRyeUNvbnN0cmFpbnRMaXN0SAASaAoTcmVzZWxsZXJfY29uc3RyYWludBgCIAEoCzJJLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uUG9saWN5VG9waWNDb25zdHJhaW50LlJlc2VsbGVyQ29uc3RyYWludEgAEnsKI2NlcnRpZmljYXRlX21pc3NpbmdfaW5fY291bnRyeV9saXN0GAMgASgLMkwuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbi5Qb2xpY3lUb3BpY0NvbnN0cmFpbnQuQ291bnRyeUNvbnN0cmFpbnRMaXN0SAASgwEKK2NlcnRpZmljYXRlX2RvbWFpbl9taXNtYXRjaF9pbl9jb3VudHJ5X2xpc3QYBCABKAsyTC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLlBvbGljeVRvcGljQ29uc3RyYWludC5Db3VudHJ5Q29uc3RyYWludExpc3RIABq4AQoVQ291bnRyeUNvbnN0cmFpbnRMaXN0EiUKGHRvdGFsX3RhcmdldGVkX2NvdW50cmllcxgDIAEoBUgAiAEBElsKCWNvdW50cmllcxgCIAMoCzJILmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uUG9saWN5VG9waWNDb25zdHJhaW50LkNvdW50cnlDb25zdHJhaW50QhsKGV90b3RhbF90YXJnZXRlZF9jb3VudHJpZXMaFAoSUmVzZWxsZXJDb25zdHJhaW50GkkKEUNvdW50cnlDb25zdHJhaW50Eh4KEWNvdW50cnlfY3JpdGVyaW9uGAIgASgJSACIAQFCFAoSX2NvdW50cnlfY3JpdGVyaW9uQgcKBXZhbHVlQusBCiNjb20uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbkILUG9saWN5UHJvdG9QAVpFZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9hZHMvZ29vZ2xlYWRzL3YxNy9jb21tb247Y29tbW9uogIDR0FBqgIfR29vZ2xlLkFkcy5Hb29nbGVBZHMuVjE3LkNvbW1vbsoCH0dvb2dsZVxBZHNcR29vZ2xlQWRzXFYxN1xDb21tb27qAiNHb29nbGU6OkFkczo6R29vZ2xlQWRzOjpWMTc6OkNvbW1vbmIGcHJvdG8z", [file_google_ads_googleads_v17_enums_policy_topic_entry_type, file_google_ads_googleads_v17_enums_policy_topic_evidence_destination_mismatch_url_type, file_google_ads_googleads_v17_enums_policy_topic_evidence_destination_not_working_device, file_google_ads_googleads_v17_enums_policy_topic_evidence_destination_not_working_dns_error_type]);

/**
 * Key of the violation. The key is used for referring to a violation
 * when filing an exemption request.
 *
 * @generated from message google.ads.googleads.v17.common.PolicyViolationKey
 */
export type PolicyViolationKey = Message<"google.ads.googleads.v17.common.PolicyViolationKey"> & {
  /**
   * Unique ID of the violated policy.
   *
   * @generated from field: optional string policy_name = 3;
   */
  policyName?: string;

  /**
   * The text that violates the policy if specified.
   * Otherwise, refers to the policy in general
   * (for example, when requesting to be exempt from the whole policy).
   * If not specified for criterion exemptions, the whole policy is implied.
   * Must be specified for ad exemptions.
   *
   * @generated from field: optional string violating_text = 4;
   */
  violatingText?: string;
};

/**
 * Describes the message google.ads.googleads.v17.common.PolicyViolationKey.
 * Use `create(PolicyViolationKeySchema)` to create a new message.
 */
export const PolicyViolationKeySchema: GenMessage<PolicyViolationKey> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_policy, 0);

/**
 * Parameter for controlling how policy exemption is done.
 *
 * @generated from message google.ads.googleads.v17.common.PolicyValidationParameter
 */
export type PolicyValidationParameter = Message<"google.ads.googleads.v17.common.PolicyValidationParameter"> & {
  /**
   * The list of policy topics that should not cause a PolicyFindingError to
   * be reported. This field is currently only compatible with Enhanced Text Ad.
   * It corresponds to the PolicyTopicEntry.topic field.
   *
   * Resources violating these policies will be saved, but will not be eligible
   * to serve. They may begin serving at a later time due to a change in
   * policies, re-review of the resource, or a change in advertiser
   * certificates.
   *
   * @generated from field: repeated string ignorable_policy_topics = 3;
   */
  ignorablePolicyTopics: string[];

  /**
   * The list of policy violation keys that should not cause a
   * PolicyViolationError to be reported. Not all policy violations are
   * exemptable, refer to the is_exemptible field in the returned
   * PolicyViolationError.
   *
   * Resources violating these polices will be saved, but will not be eligible
   * to serve. They may begin serving at a later time due to a change in
   * policies, re-review of the resource, or a change in advertiser
   * certificates.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.PolicyViolationKey exempt_policy_violation_keys = 2;
   */
  exemptPolicyViolationKeys: PolicyViolationKey[];
};

/**
 * Describes the message google.ads.googleads.v17.common.PolicyValidationParameter.
 * Use `create(PolicyValidationParameterSchema)` to create a new message.
 */
export const PolicyValidationParameterSchema: GenMessage<PolicyValidationParameter> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_policy, 1);

/**
 * Policy finding attached to a resource (for example, alcohol policy associated
 * with a site that sells alcohol).
 *
 * Each PolicyTopicEntry has a topic that indicates the specific ads policy
 * the entry is about and a type to indicate the effect that the entry will have
 * on serving. It may optionally have one or more evidences that indicate the
 * reason for the finding. It may also optionally have one or more constraints
 * that provide details about how serving may be restricted.
 *
 * @generated from message google.ads.googleads.v17.common.PolicyTopicEntry
 */
export type PolicyTopicEntry = Message<"google.ads.googleads.v17.common.PolicyTopicEntry"> & {
  /**
   * Policy topic this finding refers to. For example, "ALCOHOL",
   * "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible
   * policy topics is not fixed for a particular API version and may change
   * at any time.
   *
   * @generated from field: optional string topic = 5;
   */
  topic?: string;

  /**
   * Describes the negative or positive effect this policy will have on serving.
   *
   * @generated from field: google.ads.googleads.v17.enums.PolicyTopicEntryTypeEnum.PolicyTopicEntryType type = 2;
   */
  type: PolicyTopicEntryTypeEnum_PolicyTopicEntryType;

  /**
   * Additional information that explains policy finding
   * (for example, the brand name for a trademark finding).
   *
   * @generated from field: repeated google.ads.googleads.v17.common.PolicyTopicEvidence evidences = 3;
   */
  evidences: PolicyTopicEvidence[];

  /**
   * Indicates how serving of this resource may be affected (for example, not
   * serving in a country).
   *
   * @generated from field: repeated google.ads.googleads.v17.common.PolicyTopicConstraint constraints = 4;
   */
  constraints: PolicyTopicConstraint[];
};

/**
 * Describes the message google.ads.googleads.v17.common.PolicyTopicEntry.
 * Use `create(PolicyTopicEntrySchema)` to create a new message.
 */
export const PolicyTopicEntrySchema: GenMessage<PolicyTopicEntry> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_policy, 2);

/**
 * Additional information that explains a policy finding.
 *
 * @generated from message google.ads.googleads.v17.common.PolicyTopicEvidence
 */
export type PolicyTopicEvidence = Message<"google.ads.googleads.v17.common.PolicyTopicEvidence"> & {
  /**
   * Specific evidence information depending on the evidence type.
   *
   * @generated from oneof google.ads.googleads.v17.common.PolicyTopicEvidence.value
   */
  value: {
    /**
     * List of websites linked with this resource.
     *
     * @generated from field: google.ads.googleads.v17.common.PolicyTopicEvidence.WebsiteList website_list = 3;
     */
    value: PolicyTopicEvidence_WebsiteList;
    case: "websiteList";
  } | {
    /**
     * List of evidence found in the text of a resource.
     *
     * @generated from field: google.ads.googleads.v17.common.PolicyTopicEvidence.TextList text_list = 4;
     */
    value: PolicyTopicEvidence_TextList;
    case: "textList";
  } | {
    /**
     * The language the resource was detected to be written in.
     * This is an IETF language tag such as "en-US".
     *
     * @generated from field: string language_code = 9;
     */
    value: string;
    case: "languageCode";
  } | {
    /**
     * The text in the destination of the resource that is causing a policy
     * finding.
     *
     * @generated from field: google.ads.googleads.v17.common.PolicyTopicEvidence.DestinationTextList destination_text_list = 6;
     */
    value: PolicyTopicEvidence_DestinationTextList;
    case: "destinationTextList";
  } | {
    /**
     * Mismatch between the destinations of a resource's URLs.
     *
     * @generated from field: google.ads.googleads.v17.common.PolicyTopicEvidence.DestinationMismatch destination_mismatch = 7;
     */
    value: PolicyTopicEvidence_DestinationMismatch;
    case: "destinationMismatch";
  } | {
    /**
     * Details when the destination is returning an HTTP error code or isn't
     * functional in all locations for commonly used devices.
     *
     * @generated from field: google.ads.googleads.v17.common.PolicyTopicEvidence.DestinationNotWorking destination_not_working = 8;
     */
    value: PolicyTopicEvidence_DestinationNotWorking;
    case: "destinationNotWorking";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v17.common.PolicyTopicEvidence.
 * Use `create(PolicyTopicEvidenceSchema)` to create a new message.
 */
export const PolicyTopicEvidenceSchema: GenMessage<PolicyTopicEvidence> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_policy, 3);

/**
 * A list of fragments of text that violated a policy.
 *
 * @generated from message google.ads.googleads.v17.common.PolicyTopicEvidence.TextList
 */
export type PolicyTopicEvidence_TextList = Message<"google.ads.googleads.v17.common.PolicyTopicEvidence.TextList"> & {
  /**
   * The fragments of text from the resource that caused the policy finding.
   *
   * @generated from field: repeated string texts = 2;
   */
  texts: string[];
};

/**
 * Describes the message google.ads.googleads.v17.common.PolicyTopicEvidence.TextList.
 * Use `create(PolicyTopicEvidence_TextListSchema)` to create a new message.
 */
export const PolicyTopicEvidence_TextListSchema: GenMessage<PolicyTopicEvidence_TextList> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_policy, 3, 0);

/**
 * A list of websites that caused a policy finding. Used for
 * ONE_WEBSITE_PER_AD_GROUP policy topic, for example. In case there are more
 * than five websites, only the top five (those that appear in resources the
 * most) will be listed here.
 *
 * @generated from message google.ads.googleads.v17.common.PolicyTopicEvidence.WebsiteList
 */
export type PolicyTopicEvidence_WebsiteList = Message<"google.ads.googleads.v17.common.PolicyTopicEvidence.WebsiteList"> & {
  /**
   * Websites that caused the policy finding.
   *
   * @generated from field: repeated string websites = 2;
   */
  websites: string[];
};

/**
 * Describes the message google.ads.googleads.v17.common.PolicyTopicEvidence.WebsiteList.
 * Use `create(PolicyTopicEvidence_WebsiteListSchema)` to create a new message.
 */
export const PolicyTopicEvidence_WebsiteListSchema: GenMessage<PolicyTopicEvidence_WebsiteList> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_policy, 3, 1);

/**
 * A list of strings found in a destination page that caused a policy
 * finding.
 *
 * @generated from message google.ads.googleads.v17.common.PolicyTopicEvidence.DestinationTextList
 */
export type PolicyTopicEvidence_DestinationTextList = Message<"google.ads.googleads.v17.common.PolicyTopicEvidence.DestinationTextList"> & {
  /**
   * List of text found in the resource's destination page.
   *
   * @generated from field: repeated string destination_texts = 2;
   */
  destinationTexts: string[];
};

/**
 * Describes the message google.ads.googleads.v17.common.PolicyTopicEvidence.DestinationTextList.
 * Use `create(PolicyTopicEvidence_DestinationTextListSchema)` to create a new message.
 */
export const PolicyTopicEvidence_DestinationTextListSchema: GenMessage<PolicyTopicEvidence_DestinationTextList> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_policy, 3, 2);

/**
 * Evidence of mismatches between the URLs of a resource.
 *
 * @generated from message google.ads.googleads.v17.common.PolicyTopicEvidence.DestinationMismatch
 */
export type PolicyTopicEvidence_DestinationMismatch = Message<"google.ads.googleads.v17.common.PolicyTopicEvidence.DestinationMismatch"> & {
  /**
   * The set of URLs that did not match each other.
   *
   * @generated from field: repeated google.ads.googleads.v17.enums.PolicyTopicEvidenceDestinationMismatchUrlTypeEnum.PolicyTopicEvidenceDestinationMismatchUrlType url_types = 1;
   */
  urlTypes: PolicyTopicEvidenceDestinationMismatchUrlTypeEnum_PolicyTopicEvidenceDestinationMismatchUrlType[];
};

/**
 * Describes the message google.ads.googleads.v17.common.PolicyTopicEvidence.DestinationMismatch.
 * Use `create(PolicyTopicEvidence_DestinationMismatchSchema)` to create a new message.
 */
export const PolicyTopicEvidence_DestinationMismatchSchema: GenMessage<PolicyTopicEvidence_DestinationMismatch> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_policy, 3, 3);

/**
 * Evidence details when the destination is returning an HTTP error
 * code or isn't functional in all locations for commonly used devices.
 *
 * @generated from message google.ads.googleads.v17.common.PolicyTopicEvidence.DestinationNotWorking
 */
export type PolicyTopicEvidence_DestinationNotWorking = Message<"google.ads.googleads.v17.common.PolicyTopicEvidence.DestinationNotWorking"> & {
  /**
   * The full URL that didn't work.
   *
   * @generated from field: optional string expanded_url = 7;
   */
  expandedUrl?: string;

  /**
   * The type of device that failed to load the URL.
   *
   * @generated from field: google.ads.googleads.v17.enums.PolicyTopicEvidenceDestinationNotWorkingDeviceEnum.PolicyTopicEvidenceDestinationNotWorkingDevice device = 4;
   */
  device: PolicyTopicEvidenceDestinationNotWorkingDeviceEnum_PolicyTopicEvidenceDestinationNotWorkingDevice;

  /**
   * The time the URL was last checked.
   * The format is "YYYY-MM-DD HH:MM:SS".
   * Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
   *
   * @generated from field: optional string last_checked_date_time = 8;
   */
  lastCheckedDateTime?: string;

  /**
   * Indicates the reason of the DESTINATION_NOT_WORKING policy finding.
   *
   * @generated from oneof google.ads.googleads.v17.common.PolicyTopicEvidence.DestinationNotWorking.reason
   */
  reason: {
    /**
     * The type of DNS error.
     *
     * @generated from field: google.ads.googleads.v17.enums.PolicyTopicEvidenceDestinationNotWorkingDnsErrorTypeEnum.PolicyTopicEvidenceDestinationNotWorkingDnsErrorType dns_error_type = 1;
     */
    value: PolicyTopicEvidenceDestinationNotWorkingDnsErrorTypeEnum_PolicyTopicEvidenceDestinationNotWorkingDnsErrorType;
    case: "dnsErrorType";
  } | {
    /**
     * The HTTP error code.
     *
     * @generated from field: int64 http_error_code = 6;
     */
    value: bigint;
    case: "httpErrorCode";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v17.common.PolicyTopicEvidence.DestinationNotWorking.
 * Use `create(PolicyTopicEvidence_DestinationNotWorkingSchema)` to create a new message.
 */
export const PolicyTopicEvidence_DestinationNotWorkingSchema: GenMessage<PolicyTopicEvidence_DestinationNotWorking> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_policy, 3, 4);

/**
 * Describes the effect on serving that a policy topic entry will have.
 *
 * @generated from message google.ads.googleads.v17.common.PolicyTopicConstraint
 */
export type PolicyTopicConstraint = Message<"google.ads.googleads.v17.common.PolicyTopicConstraint"> & {
  /**
   * Specific information about the constraint.
   *
   * @generated from oneof google.ads.googleads.v17.common.PolicyTopicConstraint.value
   */
  value: {
    /**
     * Countries where the resource cannot serve.
     *
     * @generated from field: google.ads.googleads.v17.common.PolicyTopicConstraint.CountryConstraintList country_constraint_list = 1;
     */
    value: PolicyTopicConstraint_CountryConstraintList;
    case: "countryConstraintList";
  } | {
    /**
     * Reseller constraint.
     *
     * @generated from field: google.ads.googleads.v17.common.PolicyTopicConstraint.ResellerConstraint reseller_constraint = 2;
     */
    value: PolicyTopicConstraint_ResellerConstraint;
    case: "resellerConstraint";
  } | {
    /**
     * Countries where a certificate is required for serving.
     *
     * @generated from field: google.ads.googleads.v17.common.PolicyTopicConstraint.CountryConstraintList certificate_missing_in_country_list = 3;
     */
    value: PolicyTopicConstraint_CountryConstraintList;
    case: "certificateMissingInCountryList";
  } | {
    /**
     * Countries where the resource's domain is not covered by the
     * certificates associated with it.
     *
     * @generated from field: google.ads.googleads.v17.common.PolicyTopicConstraint.CountryConstraintList certificate_domain_mismatch_in_country_list = 4;
     */
    value: PolicyTopicConstraint_CountryConstraintList;
    case: "certificateDomainMismatchInCountryList";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v17.common.PolicyTopicConstraint.
 * Use `create(PolicyTopicConstraintSchema)` to create a new message.
 */
export const PolicyTopicConstraintSchema: GenMessage<PolicyTopicConstraint> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_policy, 4);

/**
 * A list of countries where a resource's serving is constrained.
 *
 * @generated from message google.ads.googleads.v17.common.PolicyTopicConstraint.CountryConstraintList
 */
export type PolicyTopicConstraint_CountryConstraintList = Message<"google.ads.googleads.v17.common.PolicyTopicConstraint.CountryConstraintList"> & {
  /**
   * Total number of countries targeted by the resource.
   *
   * @generated from field: optional int32 total_targeted_countries = 3;
   */
  totalTargetedCountries?: number;

  /**
   * Countries in which serving is restricted.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.PolicyTopicConstraint.CountryConstraint countries = 2;
   */
  countries: PolicyTopicConstraint_CountryConstraint[];
};

/**
 * Describes the message google.ads.googleads.v17.common.PolicyTopicConstraint.CountryConstraintList.
 * Use `create(PolicyTopicConstraint_CountryConstraintListSchema)` to create a new message.
 */
export const PolicyTopicConstraint_CountryConstraintListSchema: GenMessage<PolicyTopicConstraint_CountryConstraintList> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_policy, 4, 0);

/**
 * Indicates that a policy topic was constrained due to disapproval of the
 * website for reseller purposes.
 *
 * @generated from message google.ads.googleads.v17.common.PolicyTopicConstraint.ResellerConstraint
 */
export type PolicyTopicConstraint_ResellerConstraint = Message<"google.ads.googleads.v17.common.PolicyTopicConstraint.ResellerConstraint"> & {
};

/**
 * Describes the message google.ads.googleads.v17.common.PolicyTopicConstraint.ResellerConstraint.
 * Use `create(PolicyTopicConstraint_ResellerConstraintSchema)` to create a new message.
 */
export const PolicyTopicConstraint_ResellerConstraintSchema: GenMessage<PolicyTopicConstraint_ResellerConstraint> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_policy, 4, 1);

/**
 * Indicates that a resource's ability to serve in a particular country is
 * constrained.
 *
 * @generated from message google.ads.googleads.v17.common.PolicyTopicConstraint.CountryConstraint
 */
export type PolicyTopicConstraint_CountryConstraint = Message<"google.ads.googleads.v17.common.PolicyTopicConstraint.CountryConstraint"> & {
  /**
   * Geo target constant resource name of the country in which serving is
   * constrained.
   *
   * @generated from field: optional string country_criterion = 2;
   */
  countryCriterion?: string;
};

/**
 * Describes the message google.ads.googleads.v17.common.PolicyTopicConstraint.CountryConstraint.
 * Use `create(PolicyTopicConstraint_CountryConstraintSchema)` to create a new message.
 */
export const PolicyTopicConstraint_CountryConstraintSchema: GenMessage<PolicyTopicConstraint_CountryConstraint> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_policy, 4, 2);

