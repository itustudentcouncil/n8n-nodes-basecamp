// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/ads/googleads/v17/common/keyword_plan_common.proto (package google.ads.googleads.v17.common, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { YearMonthRange } from "./dates_pb";
import { file_google_ads_googleads_v17_common_dates } from "./dates_pb";
import type { DeviceEnum_Device } from "../enums/device_pb";
import { file_google_ads_googleads_v17_enums_device } from "../enums/device_pb";
import type { KeywordPlanAggregateMetricTypeEnum_KeywordPlanAggregateMetricType } from "../enums/keyword_plan_aggregate_metric_type_pb";
import { file_google_ads_googleads_v17_enums_keyword_plan_aggregate_metric_type } from "../enums/keyword_plan_aggregate_metric_type_pb";
import type { KeywordPlanCompetitionLevelEnum_KeywordPlanCompetitionLevel } from "../enums/keyword_plan_competition_level_pb";
import { file_google_ads_googleads_v17_enums_keyword_plan_competition_level } from "../enums/keyword_plan_competition_level_pb";
import type { KeywordPlanConceptGroupTypeEnum_KeywordPlanConceptGroupType } from "../enums/keyword_plan_concept_group_type_pb";
import { file_google_ads_googleads_v17_enums_keyword_plan_concept_group_type } from "../enums/keyword_plan_concept_group_type_pb";
import type { MonthOfYearEnum_MonthOfYear } from "../enums/month_of_year_pb";
import { file_google_ads_googleads_v17_enums_month_of_year } from "../enums/month_of_year_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/ads/googleads/v17/common/keyword_plan_common.proto.
 */
export const file_google_ads_googleads_v17_common_keyword_plan_common: GenFile = /*@__PURE__*/
  fileDesc("Cjlnb29nbGUvYWRzL2dvb2dsZWFkcy92MTcvY29tbW9uL2tleXdvcmRfcGxhbl9jb21tb24ucHJvdG8SH2dvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24iogQKHEtleXdvcmRQbGFuSGlzdG9yaWNhbE1ldHJpY3MSIQoUYXZnX21vbnRobHlfc2VhcmNoZXMYByABKANIAIgBARJUChZtb250aGx5X3NlYXJjaF92b2x1bWVzGAYgAygLMjQuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbi5Nb250aGx5U2VhcmNoVm9sdW1lEnAKC2NvbXBldGl0aW9uGAIgASgOMlsuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmVudW1zLktleXdvcmRQbGFuQ29tcGV0aXRpb25MZXZlbEVudW0uS2V5d29yZFBsYW5Db21wZXRpdGlvbkxldmVsEh4KEWNvbXBldGl0aW9uX2luZGV4GAggASgDSAGIAQESJwoabG93X3RvcF9vZl9wYWdlX2JpZF9taWNyb3MYCSABKANIAogBARIoChtoaWdoX3RvcF9vZl9wYWdlX2JpZF9taWNyb3MYCiABKANIA4gBARIfChJhdmVyYWdlX2NwY19taWNyb3MYCyABKANIBIgBAUIXChVfYXZnX21vbnRobHlfc2VhcmNoZXNCFAoSX2NvbXBldGl0aW9uX2luZGV4Qh0KG19sb3dfdG9wX29mX3BhZ2VfYmlkX21pY3Jvc0IeChxfaGlnaF90b3Bfb2ZfcGFnZV9iaWRfbWljcm9zQhUKE19hdmVyYWdlX2NwY19taWNyb3MinAEKGEhpc3RvcmljYWxNZXRyaWNzT3B0aW9ucxJOChB5ZWFyX21vbnRoX3JhbmdlGAEgASgLMi8uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbi5ZZWFyTW9udGhSYW5nZUgAiAEBEhsKE2luY2x1ZGVfYXZlcmFnZV9jcGMYAiABKAhCEwoRX3llYXJfbW9udGhfcmFuZ2UisQEKE01vbnRobHlTZWFyY2hWb2x1bWUSEQoEeWVhchgEIAEoA0gAiAEBEkoKBW1vbnRoGAIgASgOMjsuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmVudW1zLk1vbnRoT2ZZZWFyRW51bS5Nb250aE9mWWVhchIdChBtb250aGx5X3NlYXJjaGVzGAUgASgDSAGIAQFCBwoFX3llYXJCEwoRX21vbnRobHlfc2VhcmNoZXMioQEKG0tleXdvcmRQbGFuQWdncmVnYXRlTWV0cmljcxKBAQoWYWdncmVnYXRlX21ldHJpY190eXBlcxgBIAMoDjJhLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5lbnVtcy5LZXl3b3JkUGxhbkFnZ3JlZ2F0ZU1ldHJpY1R5cGVFbnVtLktleXdvcmRQbGFuQWdncmVnYXRlTWV0cmljVHlwZSJ4CiFLZXl3b3JkUGxhbkFnZ3JlZ2F0ZU1ldHJpY1Jlc3VsdHMSUwoPZGV2aWNlX3NlYXJjaGVzGAEgAygLMjouZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbi5LZXl3b3JkUGxhbkRldmljZVNlYXJjaGVzIooBChlLZXl3b3JkUGxhbkRldmljZVNlYXJjaGVzEkEKBmRldmljZRgBIAEoDjIxLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5lbnVtcy5EZXZpY2VFbnVtLkRldmljZRIZCgxzZWFyY2hfY291bnQYAiABKANIAIgBAUIPCg1fc2VhcmNoX2NvdW50IlcKEktleXdvcmRBbm5vdGF0aW9ucxJBCghjb25jZXB0cxgBIAMoCzIvLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uS2V5d29yZENvbmNlcHQiZAoOS2V5d29yZENvbmNlcHQSDAoEbmFtZRgBIAEoCRJECg1jb25jZXB0X2dyb3VwGAIgASgLMi0uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbi5Db25jZXB0R3JvdXAihwEKDENvbmNlcHRHcm91cBIMCgRuYW1lGAEgASgJEmkKBHR5cGUYAiABKA4yWy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuZW51bXMuS2V5d29yZFBsYW5Db25jZXB0R3JvdXBUeXBlRW51bS5LZXl3b3JkUGxhbkNvbmNlcHRHcm91cFR5cGVC9gEKI2NvbS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uQhZLZXl3b3JkUGxhbkNvbW1vblByb3RvUAFaRWdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvYWRzL2dvb2dsZWFkcy92MTcvY29tbW9uO2NvbW1vbqICA0dBQaoCH0dvb2dsZS5BZHMuR29vZ2xlQWRzLlYxNy5Db21tb27KAh9Hb29nbGVcQWRzXEdvb2dsZUFkc1xWMTdcQ29tbW9u6gIjR29vZ2xlOjpBZHM6Okdvb2dsZUFkczo6VjE3OjpDb21tb25iBnByb3RvMw", [file_google_ads_googleads_v17_common_dates, file_google_ads_googleads_v17_enums_device, file_google_ads_googleads_v17_enums_keyword_plan_aggregate_metric_type, file_google_ads_googleads_v17_enums_keyword_plan_competition_level, file_google_ads_googleads_v17_enums_keyword_plan_concept_group_type, file_google_ads_googleads_v17_enums_month_of_year]);

/**
 * Historical metrics specific to the targeting options selected.
 * Targeting options include geographies, network, and so on.
 * Refer to https://support.google.com/google-ads/answer/3022575 for more
 * details.
 *
 * @generated from message google.ads.googleads.v17.common.KeywordPlanHistoricalMetrics
 */
export type KeywordPlanHistoricalMetrics = Message<"google.ads.googleads.v17.common.KeywordPlanHistoricalMetrics"> & {
  /**
   * Approximate number of monthly searches on this query, averaged
   * for the past 12 months.
   *
   * @generated from field: optional int64 avg_monthly_searches = 7;
   */
  avgMonthlySearches?: bigint;

  /**
   * Approximate number of searches on this query for the past twelve months.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.MonthlySearchVolume monthly_search_volumes = 6;
   */
  monthlySearchVolumes: MonthlySearchVolume[];

  /**
   * The competition level for the query.
   *
   * @generated from field: google.ads.googleads.v17.enums.KeywordPlanCompetitionLevelEnum.KeywordPlanCompetitionLevel competition = 2;
   */
  competition: KeywordPlanCompetitionLevelEnum_KeywordPlanCompetitionLevel;

  /**
   * The competition index for the query in the range [0, 100].
   * Shows how competitive ad placement is for a keyword.
   * The level of competition from 0-100 is determined by the number of ad slots
   * filled divided by the total number of ad slots available. If not enough
   * data is available, null is returned.
   *
   * @generated from field: optional int64 competition_index = 8;
   */
  competitionIndex?: bigint;

  /**
   * Top of page bid low range (20th percentile) in micros for the keyword.
   *
   * @generated from field: optional int64 low_top_of_page_bid_micros = 9;
   */
  lowTopOfPageBidMicros?: bigint;

  /**
   * Top of page bid high range (80th percentile) in micros for the keyword.
   *
   * @generated from field: optional int64 high_top_of_page_bid_micros = 10;
   */
  highTopOfPageBidMicros?: bigint;

  /**
   * Average Cost Per Click in micros for the keyword.
   *
   * @generated from field: optional int64 average_cpc_micros = 11;
   */
  averageCpcMicros?: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.KeywordPlanHistoricalMetrics.
 * Use `create(KeywordPlanHistoricalMetricsSchema)` to create a new message.
 */
export const KeywordPlanHistoricalMetricsSchema: GenMessage<KeywordPlanHistoricalMetrics> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_keyword_plan_common, 0);

/**
 * Historical metrics options.
 *
 * @generated from message google.ads.googleads.v17.common.HistoricalMetricsOptions
 */
export type HistoricalMetricsOptions = Message<"google.ads.googleads.v17.common.HistoricalMetricsOptions"> & {
  /**
   * The year month range for historical metrics. If not specified, metrics
   * for the past 12 months are returned.
   * Search metrics are available for the past 4 years. If the search volume is
   * not available for the entire year_month_range provided, the subset of the
   * year month range for which search volume is available are returned.
   *
   * @generated from field: optional google.ads.googleads.v17.common.YearMonthRange year_month_range = 1;
   */
  yearMonthRange?: YearMonthRange;

  /**
   * Indicates whether to include average cost per click value.
   * Average CPC is provided only for legacy support.
   *
   * @generated from field: bool include_average_cpc = 2;
   */
  includeAverageCpc: boolean;
};

/**
 * Describes the message google.ads.googleads.v17.common.HistoricalMetricsOptions.
 * Use `create(HistoricalMetricsOptionsSchema)` to create a new message.
 */
export const HistoricalMetricsOptionsSchema: GenMessage<HistoricalMetricsOptions> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_keyword_plan_common, 1);

/**
 * Monthly search volume.
 *
 * @generated from message google.ads.googleads.v17.common.MonthlySearchVolume
 */
export type MonthlySearchVolume = Message<"google.ads.googleads.v17.common.MonthlySearchVolume"> & {
  /**
   * The year of the search volume (for example, 2020).
   *
   * @generated from field: optional int64 year = 4;
   */
  year?: bigint;

  /**
   * The month of the search volume.
   *
   * @generated from field: google.ads.googleads.v17.enums.MonthOfYearEnum.MonthOfYear month = 2;
   */
  month: MonthOfYearEnum_MonthOfYear;

  /**
   * Approximate number of searches for the month.
   * A null value indicates the search volume is unavailable for
   * that month.
   *
   * @generated from field: optional int64 monthly_searches = 5;
   */
  monthlySearches?: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.MonthlySearchVolume.
 * Use `create(MonthlySearchVolumeSchema)` to create a new message.
 */
export const MonthlySearchVolumeSchema: GenMessage<MonthlySearchVolume> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_keyword_plan_common, 2);

/**
 * The aggregate metrics specification of the request.
 *
 * @generated from message google.ads.googleads.v17.common.KeywordPlanAggregateMetrics
 */
export type KeywordPlanAggregateMetrics = Message<"google.ads.googleads.v17.common.KeywordPlanAggregateMetrics"> & {
  /**
   * The list of aggregate metrics to fetch data.
   *
   * @generated from field: repeated google.ads.googleads.v17.enums.KeywordPlanAggregateMetricTypeEnum.KeywordPlanAggregateMetricType aggregate_metric_types = 1;
   */
  aggregateMetricTypes: KeywordPlanAggregateMetricTypeEnum_KeywordPlanAggregateMetricType[];
};

/**
 * Describes the message google.ads.googleads.v17.common.KeywordPlanAggregateMetrics.
 * Use `create(KeywordPlanAggregateMetricsSchema)` to create a new message.
 */
export const KeywordPlanAggregateMetricsSchema: GenMessage<KeywordPlanAggregateMetrics> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_keyword_plan_common, 3);

/**
 * The aggregated historical metrics for keyword plan keywords.
 *
 * @generated from message google.ads.googleads.v17.common.KeywordPlanAggregateMetricResults
 */
export type KeywordPlanAggregateMetricResults = Message<"google.ads.googleads.v17.common.KeywordPlanAggregateMetricResults"> & {
  /**
   * The aggregate searches for all the keywords segmented by device
   * for the specified time.
   * Supports the following device types: MOBILE, TABLET, DESKTOP.
   *
   * This is only set when KeywordPlanAggregateMetricTypeEnum.DEVICE is set
   * in the KeywordPlanAggregateMetrics field in the request.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.KeywordPlanDeviceSearches device_searches = 1;
   */
  deviceSearches: KeywordPlanDeviceSearches[];
};

/**
 * Describes the message google.ads.googleads.v17.common.KeywordPlanAggregateMetricResults.
 * Use `create(KeywordPlanAggregateMetricResultsSchema)` to create a new message.
 */
export const KeywordPlanAggregateMetricResultsSchema: GenMessage<KeywordPlanAggregateMetricResults> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_keyword_plan_common, 4);

/**
 * The total searches for the device type during the specified time period.
 *
 * @generated from message google.ads.googleads.v17.common.KeywordPlanDeviceSearches
 */
export type KeywordPlanDeviceSearches = Message<"google.ads.googleads.v17.common.KeywordPlanDeviceSearches"> & {
  /**
   * The device type.
   *
   * @generated from field: google.ads.googleads.v17.enums.DeviceEnum.Device device = 1;
   */
  device: DeviceEnum_Device;

  /**
   * The total searches for the device.
   *
   * @generated from field: optional int64 search_count = 2;
   */
  searchCount?: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.KeywordPlanDeviceSearches.
 * Use `create(KeywordPlanDeviceSearchesSchema)` to create a new message.
 */
export const KeywordPlanDeviceSearchesSchema: GenMessage<KeywordPlanDeviceSearches> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_keyword_plan_common, 5);

/**
 * The annotations for the keyword plan keywords.
 *
 * @generated from message google.ads.googleads.v17.common.KeywordAnnotations
 */
export type KeywordAnnotations = Message<"google.ads.googleads.v17.common.KeywordAnnotations"> & {
  /**
   * The list of concepts for the keyword.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.KeywordConcept concepts = 1;
   */
  concepts: KeywordConcept[];
};

/**
 * Describes the message google.ads.googleads.v17.common.KeywordAnnotations.
 * Use `create(KeywordAnnotationsSchema)` to create a new message.
 */
export const KeywordAnnotationsSchema: GenMessage<KeywordAnnotations> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_keyword_plan_common, 6);

/**
 * The concept for the keyword.
 *
 * @generated from message google.ads.googleads.v17.common.KeywordConcept
 */
export type KeywordConcept = Message<"google.ads.googleads.v17.common.KeywordConcept"> & {
  /**
   * The concept name for the keyword in the concept_group.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The concept group of the concept details.
   *
   * @generated from field: google.ads.googleads.v17.common.ConceptGroup concept_group = 2;
   */
  conceptGroup?: ConceptGroup;
};

/**
 * Describes the message google.ads.googleads.v17.common.KeywordConcept.
 * Use `create(KeywordConceptSchema)` to create a new message.
 */
export const KeywordConceptSchema: GenMessage<KeywordConcept> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_keyword_plan_common, 7);

/**
 * The concept group for the keyword concept.
 *
 * @generated from message google.ads.googleads.v17.common.ConceptGroup
 */
export type ConceptGroup = Message<"google.ads.googleads.v17.common.ConceptGroup"> & {
  /**
   * The concept group name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The concept group type.
   *
   * @generated from field: google.ads.googleads.v17.enums.KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType type = 2;
   */
  type: KeywordPlanConceptGroupTypeEnum_KeywordPlanConceptGroupType;
};

/**
 * Describes the message google.ads.googleads.v17.common.ConceptGroup.
 * Use `create(ConceptGroupSchema)` to create a new message.
 */
export const ConceptGroupSchema: GenMessage<ConceptGroup> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_keyword_plan_common, 8);

