// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/ads/googleads/v17/common/simulation.proto (package google.ads.googleads.v17.common, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/ads/googleads/v17/common/simulation.proto.
 */
export const file_google_ads_googleads_v17_common_simulation: GenFile = /*@__PURE__*/
  fileDesc("CjBnb29nbGUvYWRzL2dvb2dsZWFkcy92MTcvY29tbW9uL3NpbXVsYXRpb24ucHJvdG8SH2dvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24iYwoZQ3BjQmlkU2ltdWxhdGlvblBvaW50TGlzdBJGCgZwb2ludHMYASADKAsyNi5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLkNwY0JpZFNpbXVsYXRpb25Qb2ludCJjChlDcHZCaWRTaW11bGF0aW9uUG9pbnRMaXN0EkYKBnBvaW50cxgBIAMoCzI2Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uQ3B2QmlkU2ltdWxhdGlvblBvaW50ImkKHFRhcmdldENwYVNpbXVsYXRpb25Qb2ludExpc3QSSQoGcG9pbnRzGAEgAygLMjkuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbi5UYXJnZXRDcGFTaW11bGF0aW9uUG9pbnQiawodVGFyZ2V0Um9hc1NpbXVsYXRpb25Qb2ludExpc3QSSgoGcG9pbnRzGAEgAygLMjouZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbi5UYXJnZXRSb2FzU2ltdWxhdGlvblBvaW50InEKIFBlcmNlbnRDcGNCaWRTaW11bGF0aW9uUG9pbnRMaXN0Ek0KBnBvaW50cxgBIAMoCzI9Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uUGVyY2VudENwY0JpZFNpbXVsYXRpb25Qb2ludCJjChlCdWRnZXRTaW11bGF0aW9uUG9pbnRMaXN0EkYKBnBvaW50cxgBIAMoCzI2Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uQnVkZ2V0U2ltdWxhdGlvblBvaW50IoEBCihUYXJnZXRJbXByZXNzaW9uU2hhcmVTaW11bGF0aW9uUG9pbnRMaXN0ElUKBnBvaW50cxgBIAMoCzJFLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uVGFyZ2V0SW1wcmVzc2lvblNoYXJlU2ltdWxhdGlvblBvaW50IswDChVDcGNCaWRTaW11bGF0aW9uUG9pbnQSJQodcmVxdWlyZWRfYnVkZ2V0X2Ftb3VudF9taWNyb3MYESABKAMSIQoUYmlkZGFibGVfY29udmVyc2lvbnMYCSABKAFIAYgBARInChpiaWRkYWJsZV9jb252ZXJzaW9uc192YWx1ZRgKIAEoAUgCiAEBEhMKBmNsaWNrcxgLIAEoA0gDiAEBEhgKC2Nvc3RfbWljcm9zGAwgASgDSASIAQESGAoLaW1wcmVzc2lvbnMYDSABKANIBYgBARIhChR0b3Bfc2xvdF9pbXByZXNzaW9ucxgOIAEoA0gGiAEBEhgKDmNwY19iaWRfbWljcm9zGA8gASgDSAASIgoYY3BjX2JpZF9zY2FsaW5nX21vZGlmaWVyGBAgASgBSABCGgoYY3BjX3NpbXVsYXRpb25fa2V5X3ZhbHVlQhcKFV9iaWRkYWJsZV9jb252ZXJzaW9uc0IdChtfYmlkZGFibGVfY29udmVyc2lvbnNfdmFsdWVCCQoHX2NsaWNrc0IOCgxfY29zdF9taWNyb3NCDgoMX2ltcHJlc3Npb25zQhcKFV90b3Bfc2xvdF9pbXByZXNzaW9ucyK5AQoVQ3B2QmlkU2ltdWxhdGlvblBvaW50EhsKDmNwdl9iaWRfbWljcm9zGAUgASgDSACIAQESGAoLY29zdF9taWNyb3MYBiABKANIAYgBARIYCgtpbXByZXNzaW9ucxgHIAEoA0gCiAEBEhIKBXZpZXdzGAggASgDSAOIAQFCEQoPX2Nwdl9iaWRfbWljcm9zQg4KDF9jb3N0X21pY3Jvc0IOCgxfaW1wcmVzc2lvbnNCCAoGX3ZpZXdzIrYEChhUYXJnZXRDcGFTaW11bGF0aW9uUG9pbnQSJQodcmVxdWlyZWRfYnVkZ2V0X2Ftb3VudF9taWNyb3MYEyABKAMSIQoUYmlkZGFibGVfY29udmVyc2lvbnMYCSABKAFIAYgBARInChpiaWRkYWJsZV9jb252ZXJzaW9uc192YWx1ZRgKIAEoAUgCiAEBEhQKDGFwcF9pbnN0YWxscxgPIAEoARIWCg5pbl9hcHBfYWN0aW9ucxgQIAEoARITCgZjbGlja3MYCyABKANIA4gBARIYCgtjb3N0X21pY3JvcxgMIAEoA0gEiAEBEhgKC2ltcHJlc3Npb25zGA0gASgDSAWIAQESIQoUdG9wX3Nsb3RfaW1wcmVzc2lvbnMYDiABKANIBogBARIZCgxpbnRlcmFjdGlvbnMYFCABKANIB4gBARIbChF0YXJnZXRfY3BhX21pY3JvcxgRIAEoA0gAEiUKG3RhcmdldF9jcGFfc2NhbGluZ19tb2RpZmllchgSIAEoAUgAQiEKH3RhcmdldF9jcGFfc2ltdWxhdGlvbl9rZXlfdmFsdWVCFwoVX2JpZGRhYmxlX2NvbnZlcnNpb25zQh0KG19iaWRkYWJsZV9jb252ZXJzaW9uc192YWx1ZUIJCgdfY2xpY2tzQg4KDF9jb3N0X21pY3Jvc0IOCgxfaW1wcmVzc2lvbnNCFwoVX3RvcF9zbG90X2ltcHJlc3Npb25zQg8KDV9pbnRlcmFjdGlvbnMioAMKGVRhcmdldFJvYXNTaW11bGF0aW9uUG9pbnQSGAoLdGFyZ2V0X3JvYXMYCCABKAFIAIgBARIlCh1yZXF1aXJlZF9idWRnZXRfYW1vdW50X21pY3JvcxgPIAEoAxIhChRiaWRkYWJsZV9jb252ZXJzaW9ucxgJIAEoAUgBiAEBEicKGmJpZGRhYmxlX2NvbnZlcnNpb25zX3ZhbHVlGAogASgBSAKIAQESEwoGY2xpY2tzGAsgASgDSAOIAQESGAoLY29zdF9taWNyb3MYDCABKANIBIgBARIYCgtpbXByZXNzaW9ucxgNIAEoA0gFiAEBEiEKFHRvcF9zbG90X2ltcHJlc3Npb25zGA4gASgDSAaIAQFCDgoMX3RhcmdldF9yb2FzQhcKFV9iaWRkYWJsZV9jb252ZXJzaW9uc0IdChtfYmlkZGFibGVfY29udmVyc2lvbnNfdmFsdWVCCQoHX2NsaWNrc0IOCgxfY29zdF9taWNyb3NCDgoMX2ltcHJlc3Npb25zQhcKFV90b3Bfc2xvdF9pbXByZXNzaW9ucyKSAwocUGVyY2VudENwY0JpZFNpbXVsYXRpb25Qb2ludBIjChZwZXJjZW50X2NwY19iaWRfbWljcm9zGAEgASgDSACIAQESIQoUYmlkZGFibGVfY29udmVyc2lvbnMYAiABKAFIAYgBARInChpiaWRkYWJsZV9jb252ZXJzaW9uc192YWx1ZRgDIAEoAUgCiAEBEhMKBmNsaWNrcxgEIAEoA0gDiAEBEhgKC2Nvc3RfbWljcm9zGAUgASgDSASIAQESGAoLaW1wcmVzc2lvbnMYBiABKANIBYgBARIhChR0b3Bfc2xvdF9pbXByZXNzaW9ucxgHIAEoA0gGiAEBQhkKF19wZXJjZW50X2NwY19iaWRfbWljcm9zQhcKFV9iaWRkYWJsZV9jb252ZXJzaW9uc0IdChtfYmlkZGFibGVfY29udmVyc2lvbnNfdmFsdWVCCQoHX2NsaWNrc0IOCgxfY29zdF9taWNyb3NCDgoMX2ltcHJlc3Npb25zQhcKFV90b3Bfc2xvdF9pbXByZXNzaW9ucyKOAgoVQnVkZ2V0U2ltdWxhdGlvblBvaW50EhwKFGJ1ZGdldF9hbW91bnRfbWljcm9zGAEgASgDEicKH3JlcXVpcmVkX2NwY19iaWRfY2VpbGluZ19taWNyb3MYAiABKAMSHAoUYmlkZGFibGVfY29udmVyc2lvbnMYAyABKAESIgoaYmlkZGFibGVfY29udmVyc2lvbnNfdmFsdWUYBCABKAESDgoGY2xpY2tzGAUgASgDEhMKC2Nvc3RfbWljcm9zGAYgASgDEhMKC2ltcHJlc3Npb25zGAcgASgDEhwKFHRvcF9zbG90X2ltcHJlc3Npb25zGAggASgDEhQKDGludGVyYWN0aW9ucxgJIAEoAyLaAgokVGFyZ2V0SW1wcmVzc2lvblNoYXJlU2ltdWxhdGlvblBvaW50EiYKHnRhcmdldF9pbXByZXNzaW9uX3NoYXJlX21pY3JvcxgBIAEoAxInCh9yZXF1aXJlZF9jcGNfYmlkX2NlaWxpbmdfbWljcm9zGAIgASgDEiUKHXJlcXVpcmVkX2J1ZGdldF9hbW91bnRfbWljcm9zGAMgASgDEhwKFGJpZGRhYmxlX2NvbnZlcnNpb25zGAQgASgBEiIKGmJpZGRhYmxlX2NvbnZlcnNpb25zX3ZhbHVlGAUgASgBEg4KBmNsaWNrcxgGIAEoAxITCgtjb3N0X21pY3JvcxgHIAEoAxITCgtpbXByZXNzaW9ucxgIIAEoAxIcChR0b3Bfc2xvdF9pbXByZXNzaW9ucxgJIAEoAxIgChhhYnNvbHV0ZV90b3BfaW1wcmVzc2lvbnMYCiABKANC7wEKI2NvbS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uQg9TaW11bGF0aW9uUHJvdG9QAVpFZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9hZHMvZ29vZ2xlYWRzL3YxNy9jb21tb247Y29tbW9uogIDR0FBqgIfR29vZ2xlLkFkcy5Hb29nbGVBZHMuVjE3LkNvbW1vbsoCH0dvb2dsZVxBZHNcR29vZ2xlQWRzXFYxN1xDb21tb27qAiNHb29nbGU6OkFkczo6R29vZ2xlQWRzOjpWMTc6OkNvbW1vbmIGcHJvdG8z");

/**
 * A container for simulation points for simulations of type CPC_BID.
 *
 * @generated from message google.ads.googleads.v17.common.CpcBidSimulationPointList
 */
export type CpcBidSimulationPointList = Message<"google.ads.googleads.v17.common.CpcBidSimulationPointList"> & {
  /**
   * Projected metrics for a series of CPC bid amounts.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.CpcBidSimulationPoint points = 1;
   */
  points: CpcBidSimulationPoint[];
};

/**
 * Describes the message google.ads.googleads.v17.common.CpcBidSimulationPointList.
 * Use `create(CpcBidSimulationPointListSchema)` to create a new message.
 */
export const CpcBidSimulationPointListSchema: GenMessage<CpcBidSimulationPointList> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_simulation, 0);

/**
 * A container for simulation points for simulations of type CPV_BID.
 *
 * @generated from message google.ads.googleads.v17.common.CpvBidSimulationPointList
 */
export type CpvBidSimulationPointList = Message<"google.ads.googleads.v17.common.CpvBidSimulationPointList"> & {
  /**
   * Projected metrics for a series of CPV bid amounts.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.CpvBidSimulationPoint points = 1;
   */
  points: CpvBidSimulationPoint[];
};

/**
 * Describes the message google.ads.googleads.v17.common.CpvBidSimulationPointList.
 * Use `create(CpvBidSimulationPointListSchema)` to create a new message.
 */
export const CpvBidSimulationPointListSchema: GenMessage<CpvBidSimulationPointList> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_simulation, 1);

/**
 * A container for simulation points for simulations of type TARGET_CPA.
 *
 * @generated from message google.ads.googleads.v17.common.TargetCpaSimulationPointList
 */
export type TargetCpaSimulationPointList = Message<"google.ads.googleads.v17.common.TargetCpaSimulationPointList"> & {
  /**
   * Projected metrics for a series of target CPA amounts.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.TargetCpaSimulationPoint points = 1;
   */
  points: TargetCpaSimulationPoint[];
};

/**
 * Describes the message google.ads.googleads.v17.common.TargetCpaSimulationPointList.
 * Use `create(TargetCpaSimulationPointListSchema)` to create a new message.
 */
export const TargetCpaSimulationPointListSchema: GenMessage<TargetCpaSimulationPointList> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_simulation, 2);

/**
 * A container for simulation points for simulations of type TARGET_ROAS.
 *
 * @generated from message google.ads.googleads.v17.common.TargetRoasSimulationPointList
 */
export type TargetRoasSimulationPointList = Message<"google.ads.googleads.v17.common.TargetRoasSimulationPointList"> & {
  /**
   * Projected metrics for a series of target ROAS amounts.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.TargetRoasSimulationPoint points = 1;
   */
  points: TargetRoasSimulationPoint[];
};

/**
 * Describes the message google.ads.googleads.v17.common.TargetRoasSimulationPointList.
 * Use `create(TargetRoasSimulationPointListSchema)` to create a new message.
 */
export const TargetRoasSimulationPointListSchema: GenMessage<TargetRoasSimulationPointList> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_simulation, 3);

/**
 * A container for simulation points for simulations of type PERCENT_CPC_BID.
 *
 * @generated from message google.ads.googleads.v17.common.PercentCpcBidSimulationPointList
 */
export type PercentCpcBidSimulationPointList = Message<"google.ads.googleads.v17.common.PercentCpcBidSimulationPointList"> & {
  /**
   * Projected metrics for a series of percent CPC bid amounts.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.PercentCpcBidSimulationPoint points = 1;
   */
  points: PercentCpcBidSimulationPoint[];
};

/**
 * Describes the message google.ads.googleads.v17.common.PercentCpcBidSimulationPointList.
 * Use `create(PercentCpcBidSimulationPointListSchema)` to create a new message.
 */
export const PercentCpcBidSimulationPointListSchema: GenMessage<PercentCpcBidSimulationPointList> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_simulation, 4);

/**
 * A container for simulation points for simulations of type BUDGET.
 *
 * @generated from message google.ads.googleads.v17.common.BudgetSimulationPointList
 */
export type BudgetSimulationPointList = Message<"google.ads.googleads.v17.common.BudgetSimulationPointList"> & {
  /**
   * Projected metrics for a series of budget amounts.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.BudgetSimulationPoint points = 1;
   */
  points: BudgetSimulationPoint[];
};

/**
 * Describes the message google.ads.googleads.v17.common.BudgetSimulationPointList.
 * Use `create(BudgetSimulationPointListSchema)` to create a new message.
 */
export const BudgetSimulationPointListSchema: GenMessage<BudgetSimulationPointList> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_simulation, 5);

/**
 * A container for simulation points for simulations of type
 * TARGET_IMPRESSION_SHARE.
 *
 * @generated from message google.ads.googleads.v17.common.TargetImpressionShareSimulationPointList
 */
export type TargetImpressionShareSimulationPointList = Message<"google.ads.googleads.v17.common.TargetImpressionShareSimulationPointList"> & {
  /**
   * Projected metrics for a specific target impression share value.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.TargetImpressionShareSimulationPoint points = 1;
   */
  points: TargetImpressionShareSimulationPoint[];
};

/**
 * Describes the message google.ads.googleads.v17.common.TargetImpressionShareSimulationPointList.
 * Use `create(TargetImpressionShareSimulationPointListSchema)` to create a new message.
 */
export const TargetImpressionShareSimulationPointListSchema: GenMessage<TargetImpressionShareSimulationPointList> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_simulation, 6);

/**
 * Projected metrics for a specific CPC bid amount.
 *
 * @generated from message google.ads.googleads.v17.common.CpcBidSimulationPoint
 */
export type CpcBidSimulationPoint = Message<"google.ads.googleads.v17.common.CpcBidSimulationPoint"> & {
  /**
   * Projected required daily budget that the advertiser must set in order to
   * receive the estimated traffic, in micros of advertiser currency.
   *
   * @generated from field: int64 required_budget_amount_micros = 17;
   */
  requiredBudgetAmountMicros: bigint;

  /**
   * Projected number of biddable conversions.
   *
   * @generated from field: optional double biddable_conversions = 9;
   */
  biddableConversions?: number;

  /**
   * Projected total value of biddable conversions.
   *
   * @generated from field: optional double biddable_conversions_value = 10;
   */
  biddableConversionsValue?: number;

  /**
   * Projected number of clicks.
   *
   * @generated from field: optional int64 clicks = 11;
   */
  clicks?: bigint;

  /**
   * Projected cost in micros.
   *
   * @generated from field: optional int64 cost_micros = 12;
   */
  costMicros?: bigint;

  /**
   * Projected number of impressions.
   *
   * @generated from field: optional int64 impressions = 13;
   */
  impressions?: bigint;

  /**
   * Projected number of top slot impressions.
   * Only search advertising channel type supports this field.
   *
   * @generated from field: optional int64 top_slot_impressions = 14;
   */
  topSlotImpressions?: bigint;

  /**
   * When SimulationModificationMethod = UNIFORM or DEFAULT,
   * cpc_bid_micros is set.
   * When SimulationModificationMethod = SCALING,
   * cpc_bid_scaling_modifier is set.
   *
   * @generated from oneof google.ads.googleads.v17.common.CpcBidSimulationPoint.cpc_simulation_key_value
   */
  cpcSimulationKeyValue: {
    /**
     * The simulated CPC bid upon which projected metrics are based.
     *
     * @generated from field: int64 cpc_bid_micros = 15;
     */
    value: bigint;
    case: "cpcBidMicros";
  } | {
    /**
     * The simulated scaling modifier upon which projected metrics are based.
     * All CPC bids relevant to the simulated entity are scaled by this
     * modifier.
     *
     * @generated from field: double cpc_bid_scaling_modifier = 16;
     */
    value: number;
    case: "cpcBidScalingModifier";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v17.common.CpcBidSimulationPoint.
 * Use `create(CpcBidSimulationPointSchema)` to create a new message.
 */
export const CpcBidSimulationPointSchema: GenMessage<CpcBidSimulationPoint> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_simulation, 7);

/**
 * Projected metrics for a specific CPV bid amount.
 *
 * @generated from message google.ads.googleads.v17.common.CpvBidSimulationPoint
 */
export type CpvBidSimulationPoint = Message<"google.ads.googleads.v17.common.CpvBidSimulationPoint"> & {
  /**
   * The simulated CPV bid upon which projected metrics are based.
   *
   * @generated from field: optional int64 cpv_bid_micros = 5;
   */
  cpvBidMicros?: bigint;

  /**
   * Projected cost in micros.
   *
   * @generated from field: optional int64 cost_micros = 6;
   */
  costMicros?: bigint;

  /**
   * Projected number of impressions.
   *
   * @generated from field: optional int64 impressions = 7;
   */
  impressions?: bigint;

  /**
   * Projected number of views.
   *
   * @generated from field: optional int64 views = 8;
   */
  views?: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.CpvBidSimulationPoint.
 * Use `create(CpvBidSimulationPointSchema)` to create a new message.
 */
export const CpvBidSimulationPointSchema: GenMessage<CpvBidSimulationPoint> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_simulation, 8);

/**
 * Projected metrics for a specific target CPA amount.
 *
 * @generated from message google.ads.googleads.v17.common.TargetCpaSimulationPoint
 */
export type TargetCpaSimulationPoint = Message<"google.ads.googleads.v17.common.TargetCpaSimulationPoint"> & {
  /**
   * Projected required daily budget that the advertiser must set in order to
   * receive the estimated traffic, in micros of advertiser currency.
   *
   * @generated from field: int64 required_budget_amount_micros = 19;
   */
  requiredBudgetAmountMicros: bigint;

  /**
   * Projected number of biddable conversions.
   *
   * @generated from field: optional double biddable_conversions = 9;
   */
  biddableConversions?: number;

  /**
   * Projected total value of biddable conversions.
   *
   * @generated from field: optional double biddable_conversions_value = 10;
   */
  biddableConversionsValue?: number;

  /**
   * Projected number of app installs.
   *
   * @generated from field: double app_installs = 15;
   */
  appInstalls: number;

  /**
   * Projected number of in-app actions.
   *
   * @generated from field: double in_app_actions = 16;
   */
  inAppActions: number;

  /**
   * Projected number of clicks.
   *
   * @generated from field: optional int64 clicks = 11;
   */
  clicks?: bigint;

  /**
   * Projected cost in micros.
   *
   * @generated from field: optional int64 cost_micros = 12;
   */
  costMicros?: bigint;

  /**
   * Projected number of impressions.
   *
   * @generated from field: optional int64 impressions = 13;
   */
  impressions?: bigint;

  /**
   * Projected number of top slot impressions.
   * Only search advertising channel type supports this field.
   *
   * @generated from field: optional int64 top_slot_impressions = 14;
   */
  topSlotImpressions?: bigint;

  /**
   * Projected number of interactions.
   * Only discovery advertising channel type supports this field.
   *
   * @generated from field: optional int64 interactions = 20;
   */
  interactions?: bigint;

  /**
   * When SimulationModificationMethod = UNIFORM or DEFAULT,
   * target_cpa_micros is set.
   * When SimulationModificationMethod = SCALING,
   * target_cpa_scaling_modifier is set.
   *
   * @generated from oneof google.ads.googleads.v17.common.TargetCpaSimulationPoint.target_cpa_simulation_key_value
   */
  targetCpaSimulationKeyValue: {
    /**
     * The simulated target CPA upon which projected metrics are based.
     *
     * @generated from field: int64 target_cpa_micros = 17;
     */
    value: bigint;
    case: "targetCpaMicros";
  } | {
    /**
     * The simulated scaling modifier upon which projected metrics are based.
     * All CPA targets relevant to the simulated entity are scaled by this
     * modifier.
     *
     * @generated from field: double target_cpa_scaling_modifier = 18;
     */
    value: number;
    case: "targetCpaScalingModifier";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v17.common.TargetCpaSimulationPoint.
 * Use `create(TargetCpaSimulationPointSchema)` to create a new message.
 */
export const TargetCpaSimulationPointSchema: GenMessage<TargetCpaSimulationPoint> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_simulation, 9);

/**
 * Projected metrics for a specific target ROAS amount.
 *
 * @generated from message google.ads.googleads.v17.common.TargetRoasSimulationPoint
 */
export type TargetRoasSimulationPoint = Message<"google.ads.googleads.v17.common.TargetRoasSimulationPoint"> & {
  /**
   * The simulated target ROAS upon which projected metrics are based.
   *
   * @generated from field: optional double target_roas = 8;
   */
  targetRoas?: number;

  /**
   * Projected required daily budget that the advertiser must set in order to
   * receive the estimated traffic, in micros of advertiser currency.
   *
   * @generated from field: int64 required_budget_amount_micros = 15;
   */
  requiredBudgetAmountMicros: bigint;

  /**
   * Projected number of biddable conversions.
   *
   * @generated from field: optional double biddable_conversions = 9;
   */
  biddableConversions?: number;

  /**
   * Projected total value of biddable conversions.
   *
   * @generated from field: optional double biddable_conversions_value = 10;
   */
  biddableConversionsValue?: number;

  /**
   * Projected number of clicks.
   *
   * @generated from field: optional int64 clicks = 11;
   */
  clicks?: bigint;

  /**
   * Projected cost in micros.
   *
   * @generated from field: optional int64 cost_micros = 12;
   */
  costMicros?: bigint;

  /**
   * Projected number of impressions.
   *
   * @generated from field: optional int64 impressions = 13;
   */
  impressions?: bigint;

  /**
   * Projected number of top slot impressions.
   * Only Search advertising channel type supports this field.
   *
   * @generated from field: optional int64 top_slot_impressions = 14;
   */
  topSlotImpressions?: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.TargetRoasSimulationPoint.
 * Use `create(TargetRoasSimulationPointSchema)` to create a new message.
 */
export const TargetRoasSimulationPointSchema: GenMessage<TargetRoasSimulationPoint> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_simulation, 10);

/**
 * Projected metrics for a specific percent CPC amount. Only Hotel advertising
 * channel type supports this field.
 *
 * @generated from message google.ads.googleads.v17.common.PercentCpcBidSimulationPoint
 */
export type PercentCpcBidSimulationPoint = Message<"google.ads.googleads.v17.common.PercentCpcBidSimulationPoint"> & {
  /**
   * The simulated percent CPC upon which projected metrics are based. Percent
   * CPC expressed as fraction of the advertised price for some good or service.
   * The value stored here is 1,000,000 * [fraction].
   *
   * @generated from field: optional int64 percent_cpc_bid_micros = 1;
   */
  percentCpcBidMicros?: bigint;

  /**
   * Projected number of biddable conversions.
   *
   * @generated from field: optional double biddable_conversions = 2;
   */
  biddableConversions?: number;

  /**
   * Projected total value of biddable conversions in local currency.
   *
   * @generated from field: optional double biddable_conversions_value = 3;
   */
  biddableConversionsValue?: number;

  /**
   * Projected number of clicks.
   *
   * @generated from field: optional int64 clicks = 4;
   */
  clicks?: bigint;

  /**
   * Projected cost in micros.
   *
   * @generated from field: optional int64 cost_micros = 5;
   */
  costMicros?: bigint;

  /**
   * Projected number of impressions.
   *
   * @generated from field: optional int64 impressions = 6;
   */
  impressions?: bigint;

  /**
   * Projected number of top slot impressions.
   *
   * @generated from field: optional int64 top_slot_impressions = 7;
   */
  topSlotImpressions?: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.PercentCpcBidSimulationPoint.
 * Use `create(PercentCpcBidSimulationPointSchema)` to create a new message.
 */
export const PercentCpcBidSimulationPointSchema: GenMessage<PercentCpcBidSimulationPoint> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_simulation, 11);

/**
 * Projected metrics for a specific budget amount.
 *
 * @generated from message google.ads.googleads.v17.common.BudgetSimulationPoint
 */
export type BudgetSimulationPoint = Message<"google.ads.googleads.v17.common.BudgetSimulationPoint"> & {
  /**
   * The simulated budget upon which projected metrics are based.
   *
   * @generated from field: int64 budget_amount_micros = 1;
   */
  budgetAmountMicros: bigint;

  /**
   * Projected required daily cpc bid ceiling that the advertiser must set to
   * realize this simulation, in micros of the advertiser currency.
   * Only campaigns with the Target Spend bidding strategy support this field.
   *
   * @generated from field: int64 required_cpc_bid_ceiling_micros = 2;
   */
  requiredCpcBidCeilingMicros: bigint;

  /**
   * Projected number of biddable conversions.
   *
   * @generated from field: double biddable_conversions = 3;
   */
  biddableConversions: number;

  /**
   * Projected total value of biddable conversions.
   *
   * @generated from field: double biddable_conversions_value = 4;
   */
  biddableConversionsValue: number;

  /**
   * Projected number of clicks.
   *
   * @generated from field: int64 clicks = 5;
   */
  clicks: bigint;

  /**
   * Projected cost in micros.
   *
   * @generated from field: int64 cost_micros = 6;
   */
  costMicros: bigint;

  /**
   * Projected number of impressions.
   *
   * @generated from field: int64 impressions = 7;
   */
  impressions: bigint;

  /**
   * Projected number of top slot impressions.
   * Only search advertising channel type supports this field.
   *
   * @generated from field: int64 top_slot_impressions = 8;
   */
  topSlotImpressions: bigint;

  /**
   * Projected number of interactions.
   * Only discovery advertising channel type supports this field.
   *
   * @generated from field: int64 interactions = 9;
   */
  interactions: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.BudgetSimulationPoint.
 * Use `create(BudgetSimulationPointSchema)` to create a new message.
 */
export const BudgetSimulationPointSchema: GenMessage<BudgetSimulationPoint> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_simulation, 12);

/**
 * Projected metrics for a specific target impression share value.
 *
 * @generated from message google.ads.googleads.v17.common.TargetImpressionShareSimulationPoint
 */
export type TargetImpressionShareSimulationPoint = Message<"google.ads.googleads.v17.common.TargetImpressionShareSimulationPoint"> & {
  /**
   * The simulated target impression share value (in micros) upon which
   * projected metrics are based.
   * For example, 10% impression share, which is equal to 0.1, is stored as
   * 100_000. This value is validated and will not exceed 1M (100%).
   *
   * @generated from field: int64 target_impression_share_micros = 1;
   */
  targetImpressionShareMicros: bigint;

  /**
   * Projected required daily cpc bid ceiling that the advertiser must set to
   * realize this simulation, in micros of the advertiser currency.
   *
   * @generated from field: int64 required_cpc_bid_ceiling_micros = 2;
   */
  requiredCpcBidCeilingMicros: bigint;

  /**
   * Projected required daily budget that the advertiser must set in order to
   * receive the estimated traffic, in micros of advertiser currency.
   *
   * @generated from field: int64 required_budget_amount_micros = 3;
   */
  requiredBudgetAmountMicros: bigint;

  /**
   * Projected number of biddable conversions.
   *
   * @generated from field: double biddable_conversions = 4;
   */
  biddableConversions: number;

  /**
   * Projected total value of biddable conversions.
   *
   * @generated from field: double biddable_conversions_value = 5;
   */
  biddableConversionsValue: number;

  /**
   * Projected number of clicks.
   *
   * @generated from field: int64 clicks = 6;
   */
  clicks: bigint;

  /**
   * Projected cost in micros.
   *
   * @generated from field: int64 cost_micros = 7;
   */
  costMicros: bigint;

  /**
   * Projected number of impressions.
   *
   * @generated from field: int64 impressions = 8;
   */
  impressions: bigint;

  /**
   * Projected number of top slot impressions.
   * Only search advertising channel type supports this field.
   *
   * @generated from field: int64 top_slot_impressions = 9;
   */
  topSlotImpressions: bigint;

  /**
   * Projected number of absolute top impressions.
   * Only search advertising channel type supports this field.
   *
   * @generated from field: int64 absolute_top_impressions = 10;
   */
  absoluteTopImpressions: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.TargetImpressionShareSimulationPoint.
 * Use `create(TargetImpressionShareSimulationPointSchema)` to create a new message.
 */
export const TargetImpressionShareSimulationPointSchema: GenMessage<TargetImpressionShareSimulationPoint> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_simulation, 13);

