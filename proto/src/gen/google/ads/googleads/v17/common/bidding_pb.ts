// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/ads/googleads/v17/common/bidding.proto (package google.ads.googleads.v17.common, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { FixedCpmGoalEnum_FixedCpmGoal } from "../enums/fixed_cpm_goal_pb";
import { file_google_ads_googleads_v17_enums_fixed_cpm_goal } from "../enums/fixed_cpm_goal_pb";
import type { FixedCpmTargetFrequencyTimeUnitEnum_FixedCpmTargetFrequencyTimeUnit } from "../enums/fixed_cpm_target_frequency_time_unit_pb";
import { file_google_ads_googleads_v17_enums_fixed_cpm_target_frequency_time_unit } from "../enums/fixed_cpm_target_frequency_time_unit_pb";
import type { TargetFrequencyTimeUnitEnum_TargetFrequencyTimeUnit } from "../enums/target_frequency_time_unit_pb";
import { file_google_ads_googleads_v17_enums_target_frequency_time_unit } from "../enums/target_frequency_time_unit_pb";
import type { TargetImpressionShareLocationEnum_TargetImpressionShareLocation } from "../enums/target_impression_share_location_pb";
import { file_google_ads_googleads_v17_enums_target_impression_share_location } from "../enums/target_impression_share_location_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/ads/googleads/v17/common/bidding.proto.
 */
export const file_google_ads_googleads_v17_common_bidding: GenFile = /*@__PURE__*/
  fileDesc("Ci1nb29nbGUvYWRzL2dvb2dsZWFkcy92MTcvY29tbW9uL2JpZGRpbmcucHJvdG8SH2dvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24iTAoKQ29tbWlzc2lvbhIjChZjb21taXNzaW9uX3JhdGVfbWljcm9zGAIgASgDSACIAQFCGQoXX2NvbW1pc3Npb25fcmF0ZV9taWNyb3MiDQoLRW5oYW5jZWRDcGMiCwoJTWFudWFsQ3BhIkcKCU1hbnVhbENwYxIhChRlbmhhbmNlZF9jcGNfZW5hYmxlZBgCIAEoCEgAiAEBQhcKFV9lbmhhbmNlZF9jcGNfZW5hYmxlZCILCglNYW51YWxDcG0iCwoJTWFudWFsQ3B2Im4KE01heGltaXplQ29udmVyc2lvbnMSHgoWY3BjX2JpZF9jZWlsaW5nX21pY3JvcxgCIAEoAxIcChRjcGNfYmlkX2Zsb29yX21pY3JvcxgDIAEoAxIZChF0YXJnZXRfY3BhX21pY3JvcxgEIAEoAyJsChdNYXhpbWl6ZUNvbnZlcnNpb25WYWx1ZRITCgt0YXJnZXRfcm9hcxgCIAEoARIeChZjcGNfYmlkX2NlaWxpbmdfbWljcm9zGAMgASgDEhwKFGNwY19iaWRfZmxvb3JfbWljcm9zGAQgASgDIr0BCglUYXJnZXRDcGESHgoRdGFyZ2V0X2NwYV9taWNyb3MYBCABKANIAIgBARIjChZjcGNfYmlkX2NlaWxpbmdfbWljcm9zGAUgASgDSAGIAQESIQoUY3BjX2JpZF9mbG9vcl9taWNyb3MYBiABKANIAogBAUIUChJfdGFyZ2V0X2NwYV9taWNyb3NCGQoXX2NwY19iaWRfY2VpbGluZ19taWNyb3NCFwoVX2NwY19iaWRfZmxvb3JfbWljcm9zInMKCVRhcmdldENwbRJeChV0YXJnZXRfZnJlcXVlbmN5X2dvYWwYASABKAsyPS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLlRhcmdldENwbVRhcmdldEZyZXF1ZW5jeUdvYWxIAEIGCgRnb2FsIpwBChxUYXJnZXRDcG1UYXJnZXRGcmVxdWVuY3lHb2FsEhQKDHRhcmdldF9jb3VudBgBIAEoAxJmCgl0aW1lX3VuaXQYAiABKA4yUy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuZW51bXMuVGFyZ2V0RnJlcXVlbmN5VGltZVVuaXRFbnVtLlRhcmdldEZyZXF1ZW5jeVRpbWVVbml0Io4CChVUYXJnZXRJbXByZXNzaW9uU2hhcmUScQoIbG9jYXRpb24YASABKA4yXy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuZW51bXMuVGFyZ2V0SW1wcmVzc2lvblNoYXJlTG9jYXRpb25FbnVtLlRhcmdldEltcHJlc3Npb25TaGFyZUxvY2F0aW9uEiUKGGxvY2F0aW9uX2ZyYWN0aW9uX21pY3JvcxgEIAEoA0gAiAEBEiMKFmNwY19iaWRfY2VpbGluZ19taWNyb3MYBSABKANIAYgBAUIbChlfbG9jYXRpb25fZnJhY3Rpb25fbWljcm9zQhkKF19jcGNfYmlkX2NlaWxpbmdfbWljcm9zIrIBCgpUYXJnZXRSb2FzEhgKC3RhcmdldF9yb2FzGAQgASgBSACIAQESIwoWY3BjX2JpZF9jZWlsaW5nX21pY3JvcxgFIAEoA0gBiAEBEiEKFGNwY19iaWRfZmxvb3JfbWljcm9zGAYgASgDSAKIAQFCDgoMX3RhcmdldF9yb2FzQhkKF19jcGNfYmlkX2NlaWxpbmdfbWljcm9zQhcKFV9jcGNfYmlkX2Zsb29yX21pY3JvcyKLAQoLVGFyZ2V0U3BlbmQSJAoTdGFyZ2V0X3NwZW5kX21pY3JvcxgDIAEoA0ICGAFIAIgBARIjChZjcGNfYmlkX2NlaWxpbmdfbWljcm9zGAQgASgDSAGIAQFCFgoUX3RhcmdldF9zcGVuZF9taWNyb3NCGQoXX2NwY19iaWRfY2VpbGluZ19taWNyb3MiiAEKClBlcmNlbnRDcGMSIwoWY3BjX2JpZF9jZWlsaW5nX21pY3JvcxgDIAEoA0gAiAEBEiEKFGVuaGFuY2VkX2NwY19lbmFibGVkGAQgASgISAGIAQFCGQoXX2NwY19iaWRfY2VpbGluZ19taWNyb3NCFwoVX2VuaGFuY2VkX2NwY19lbmFibGVkIscBCghGaXhlZENwbRJLCgRnb2FsGAEgASgOMj0uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmVudW1zLkZpeGVkQ3BtR29hbEVudW0uRml4ZWRDcG1Hb2FsEmEKFXRhcmdldF9mcmVxdWVuY3lfaW5mbxgCIAEoCzJALmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uRml4ZWRDcG1UYXJnZXRGcmVxdWVuY3lHb2FsSW5mb0gAQgsKCWdvYWxfaW5mbyKvAQofRml4ZWRDcG1UYXJnZXRGcmVxdWVuY3lHb2FsSW5mbxIUCgx0YXJnZXRfY291bnQYASABKAMSdgoJdGltZV91bml0GAIgASgOMmMuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmVudW1zLkZpeGVkQ3BtVGFyZ2V0RnJlcXVlbmN5VGltZVVuaXRFbnVtLkZpeGVkQ3BtVGFyZ2V0RnJlcXVlbmN5VGltZVVuaXQiCwoJVGFyZ2V0Q3B2QuwBCiNjb20uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmNvbW1vbkIMQmlkZGluZ1Byb3RvUAFaRWdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvYWRzL2dvb2dsZWFkcy92MTcvY29tbW9uO2NvbW1vbqICA0dBQaoCH0dvb2dsZS5BZHMuR29vZ2xlQWRzLlYxNy5Db21tb27KAh9Hb29nbGVcQWRzXEdvb2dsZUFkc1xWMTdcQ29tbW9u6gIjR29vZ2xlOjpBZHM6Okdvb2dsZUFkczo6VjE3OjpDb21tb25iBnByb3RvMw", [file_google_ads_googleads_v17_enums_fixed_cpm_goal, file_google_ads_googleads_v17_enums_fixed_cpm_target_frequency_time_unit, file_google_ads_googleads_v17_enums_target_frequency_time_unit, file_google_ads_googleads_v17_enums_target_impression_share_location]);

/**
 * Commission is an automatic bidding strategy in which the advertiser pays a
 * certain portion of the conversion value.
 *
 * @generated from message google.ads.googleads.v17.common.Commission
 */
export type Commission = Message<"google.ads.googleads.v17.common.Commission"> & {
  /**
   * Commission rate defines the portion of the conversion value that the
   * advertiser will be billed. A commission rate of x should be passed into
   * this field as (x * 1,000,000). For example, 106,000 represents a commission
   * rate of 0.106 (10.6%).
   *
   * @generated from field: optional int64 commission_rate_micros = 2;
   */
  commissionRateMicros?: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.Commission.
 * Use `create(CommissionSchema)` to create a new message.
 */
export const CommissionSchema: GenMessage<Commission> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 0);

/**
 * An automated bidding strategy that raises bids for clicks
 * that seem more likely to lead to a conversion and lowers
 * them for clicks where they seem less likely.
 *
 * This bidding strategy is deprecated and cannot be created anymore. Use
 * ManualCpc with enhanced_cpc_enabled set to true for equivalent functionality.
 *
 * @generated from message google.ads.googleads.v17.common.EnhancedCpc
 */
export type EnhancedCpc = Message<"google.ads.googleads.v17.common.EnhancedCpc"> & {
};

/**
 * Describes the message google.ads.googleads.v17.common.EnhancedCpc.
 * Use `create(EnhancedCpcSchema)` to create a new message.
 */
export const EnhancedCpcSchema: GenMessage<EnhancedCpc> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 1);

/**
 * Manual bidding strategy that allows advertiser to set the bid per
 * advertiser-specified action.
 *
 * @generated from message google.ads.googleads.v17.common.ManualCpa
 */
export type ManualCpa = Message<"google.ads.googleads.v17.common.ManualCpa"> & {
};

/**
 * Describes the message google.ads.googleads.v17.common.ManualCpa.
 * Use `create(ManualCpaSchema)` to create a new message.
 */
export const ManualCpaSchema: GenMessage<ManualCpa> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 2);

/**
 * Manual click-based bidding where user pays per click.
 *
 * @generated from message google.ads.googleads.v17.common.ManualCpc
 */
export type ManualCpc = Message<"google.ads.googleads.v17.common.ManualCpc"> & {
  /**
   * Whether bids are to be enhanced based on conversion optimizer data.
   *
   * @generated from field: optional bool enhanced_cpc_enabled = 2;
   */
  enhancedCpcEnabled?: boolean;
};

/**
 * Describes the message google.ads.googleads.v17.common.ManualCpc.
 * Use `create(ManualCpcSchema)` to create a new message.
 */
export const ManualCpcSchema: GenMessage<ManualCpc> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 3);

/**
 * Manual impression-based bidding where user pays per thousand impressions.
 *
 * @generated from message google.ads.googleads.v17.common.ManualCpm
 */
export type ManualCpm = Message<"google.ads.googleads.v17.common.ManualCpm"> & {
};

/**
 * Describes the message google.ads.googleads.v17.common.ManualCpm.
 * Use `create(ManualCpmSchema)` to create a new message.
 */
export const ManualCpmSchema: GenMessage<ManualCpm> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 4);

/**
 * View based bidding where user pays per video view.
 *
 * @generated from message google.ads.googleads.v17.common.ManualCpv
 */
export type ManualCpv = Message<"google.ads.googleads.v17.common.ManualCpv"> & {
};

/**
 * Describes the message google.ads.googleads.v17.common.ManualCpv.
 * Use `create(ManualCpvSchema)` to create a new message.
 */
export const ManualCpvSchema: GenMessage<ManualCpv> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 5);

/**
 * An automated bidding strategy to help get the most conversions for your
 * campaigns while spending your budget.
 *
 * @generated from message google.ads.googleads.v17.common.MaximizeConversions
 */
export type MaximizeConversions = Message<"google.ads.googleads.v17.common.MaximizeConversions"> & {
  /**
   * Maximum bid limit that can be set by the bid strategy.
   * The limit applies to all keywords managed by the strategy.
   * Mutable for portfolio bidding strategies only.
   *
   * @generated from field: int64 cpc_bid_ceiling_micros = 2;
   */
  cpcBidCeilingMicros: bigint;

  /**
   * Minimum bid limit that can be set by the bid strategy.
   * The limit applies to all keywords managed by the strategy.
   * Mutable for portfolio bidding strategies only.
   *
   * @generated from field: int64 cpc_bid_floor_micros = 3;
   */
  cpcBidFloorMicros: bigint;

  /**
   * The target cost-per-action (CPA) option. This is the average amount that
   * you would like to spend per conversion action specified in micro units of
   * the bidding strategy's currency. If set, the bid strategy will get as many
   * conversions as possible at or below the target cost-per-action. If the
   * target CPA is not set, the bid strategy will aim to achieve the lowest
   * possible CPA given the budget.
   *
   * @generated from field: int64 target_cpa_micros = 4;
   */
  targetCpaMicros: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.MaximizeConversions.
 * Use `create(MaximizeConversionsSchema)` to create a new message.
 */
export const MaximizeConversionsSchema: GenMessage<MaximizeConversions> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 6);

/**
 * An automated bidding strategy to help get the most conversion value for your
 * campaigns while spending your budget.
 *
 * @generated from message google.ads.googleads.v17.common.MaximizeConversionValue
 */
export type MaximizeConversionValue = Message<"google.ads.googleads.v17.common.MaximizeConversionValue"> & {
  /**
   * The target return on ad spend (ROAS) option. If set, the bid strategy will
   * maximize revenue while averaging the target return on ad spend. If the
   * target ROAS is high, the bid strategy may not be able to spend the full
   * budget. If the target ROAS is not set, the bid strategy will aim to
   * achieve the highest possible ROAS for the budget.
   *
   * @generated from field: double target_roas = 2;
   */
  targetRoas: number;

  /**
   * Maximum bid limit that can be set by the bid strategy.
   * The limit applies to all keywords managed by the strategy.
   * Mutable for portfolio bidding strategies only.
   *
   * @generated from field: int64 cpc_bid_ceiling_micros = 3;
   */
  cpcBidCeilingMicros: bigint;

  /**
   * Minimum bid limit that can be set by the bid strategy.
   * The limit applies to all keywords managed by the strategy.
   * Mutable for portfolio bidding strategies only.
   *
   * @generated from field: int64 cpc_bid_floor_micros = 4;
   */
  cpcBidFloorMicros: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.MaximizeConversionValue.
 * Use `create(MaximizeConversionValueSchema)` to create a new message.
 */
export const MaximizeConversionValueSchema: GenMessage<MaximizeConversionValue> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 7);

/**
 * An automated bid strategy that sets bids to help get as many conversions as
 * possible at the target cost-per-acquisition (CPA) you set.
 *
 * @generated from message google.ads.googleads.v17.common.TargetCpa
 */
export type TargetCpa = Message<"google.ads.googleads.v17.common.TargetCpa"> & {
  /**
   * Average CPA target.
   * This target should be greater than or equal to minimum billable unit based
   * on the currency for the account.
   *
   * @generated from field: optional int64 target_cpa_micros = 4;
   */
  targetCpaMicros?: bigint;

  /**
   * Maximum bid limit that can be set by the bid strategy.
   * The limit applies to all keywords managed by the strategy.
   * This should only be set for portfolio bid strategies.
   *
   * @generated from field: optional int64 cpc_bid_ceiling_micros = 5;
   */
  cpcBidCeilingMicros?: bigint;

  /**
   * Minimum bid limit that can be set by the bid strategy.
   * The limit applies to all keywords managed by the strategy.
   * This should only be set for portfolio bid strategies.
   *
   * @generated from field: optional int64 cpc_bid_floor_micros = 6;
   */
  cpcBidFloorMicros?: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.TargetCpa.
 * Use `create(TargetCpaSchema)` to create a new message.
 */
export const TargetCpaSchema: GenMessage<TargetCpa> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 8);

/**
 * Target CPM (cost per thousand impressions) is an automated bidding strategy
 * that sets bids to optimize performance given the target CPM you set.
 *
 * @generated from message google.ads.googleads.v17.common.TargetCpm
 */
export type TargetCpm = Message<"google.ads.googleads.v17.common.TargetCpm"> & {
  /**
   * Additional information related to bidding goal.
   *
   * @generated from oneof google.ads.googleads.v17.common.TargetCpm.goal
   */
  goal: {
    /**
     * Target Frequency bidding goal details.
     *
     * @generated from field: google.ads.googleads.v17.common.TargetCpmTargetFrequencyGoal target_frequency_goal = 1;
     */
    value: TargetCpmTargetFrequencyGoal;
    case: "targetFrequencyGoal";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v17.common.TargetCpm.
 * Use `create(TargetCpmSchema)` to create a new message.
 */
export const TargetCpmSchema: GenMessage<TargetCpm> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 9);

/**
 * Target Frequency bidding goal details.
 *
 * @generated from message google.ads.googleads.v17.common.TargetCpmTargetFrequencyGoal
 */
export type TargetCpmTargetFrequencyGoal = Message<"google.ads.googleads.v17.common.TargetCpmTargetFrequencyGoal"> & {
  /**
   * Target Frequency count representing how many times you want to reach
   * a single user.
   *
   * @generated from field: int64 target_count = 1;
   */
  targetCount: bigint;

  /**
   * Time window expressing the period over which you want to reach
   * the specified target_count.
   *
   * @generated from field: google.ads.googleads.v17.enums.TargetFrequencyTimeUnitEnum.TargetFrequencyTimeUnit time_unit = 2;
   */
  timeUnit: TargetFrequencyTimeUnitEnum_TargetFrequencyTimeUnit;
};

/**
 * Describes the message google.ads.googleads.v17.common.TargetCpmTargetFrequencyGoal.
 * Use `create(TargetCpmTargetFrequencyGoalSchema)` to create a new message.
 */
export const TargetCpmTargetFrequencyGoalSchema: GenMessage<TargetCpmTargetFrequencyGoal> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 10);

/**
 * An automated bidding strategy that sets bids so that a certain percentage of
 * search ads are shown at the top of the first page (or other targeted
 * location).
 *
 * @generated from message google.ads.googleads.v17.common.TargetImpressionShare
 */
export type TargetImpressionShare = Message<"google.ads.googleads.v17.common.TargetImpressionShare"> & {
  /**
   * The targeted location on the search results page.
   *
   * @generated from field: google.ads.googleads.v17.enums.TargetImpressionShareLocationEnum.TargetImpressionShareLocation location = 1;
   */
  location: TargetImpressionShareLocationEnum_TargetImpressionShareLocation;

  /**
   * The chosen fraction of ads to be shown in the targeted location in micros.
   * For example, 1% equals 10,000.
   *
   * @generated from field: optional int64 location_fraction_micros = 4;
   */
  locationFractionMicros?: bigint;

  /**
   * The highest CPC bid the automated bidding system is permitted to specify.
   * This is a required field entered by the advertiser that sets the ceiling
   * and specified in local micros.
   *
   * @generated from field: optional int64 cpc_bid_ceiling_micros = 5;
   */
  cpcBidCeilingMicros?: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.TargetImpressionShare.
 * Use `create(TargetImpressionShareSchema)` to create a new message.
 */
export const TargetImpressionShareSchema: GenMessage<TargetImpressionShare> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 11);

/**
 * An automated bidding strategy that helps you maximize revenue while
 * averaging a specific target return on ad spend (ROAS).
 *
 * @generated from message google.ads.googleads.v17.common.TargetRoas
 */
export type TargetRoas = Message<"google.ads.googleads.v17.common.TargetRoas"> & {
  /**
   * Required. The chosen revenue (based on conversion data) per unit of spend.
   * Value must be between 0.01 and 1000.0, inclusive.
   *
   * @generated from field: optional double target_roas = 4;
   */
  targetRoas?: number;

  /**
   * Maximum bid limit that can be set by the bid strategy.
   * The limit applies to all keywords managed by the strategy.
   * This should only be set for portfolio bid strategies.
   *
   * @generated from field: optional int64 cpc_bid_ceiling_micros = 5;
   */
  cpcBidCeilingMicros?: bigint;

  /**
   * Minimum bid limit that can be set by the bid strategy.
   * The limit applies to all keywords managed by the strategy.
   * This should only be set for portfolio bid strategies.
   *
   * @generated from field: optional int64 cpc_bid_floor_micros = 6;
   */
  cpcBidFloorMicros?: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.TargetRoas.
 * Use `create(TargetRoasSchema)` to create a new message.
 */
export const TargetRoasSchema: GenMessage<TargetRoas> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 12);

/**
 * An automated bid strategy that sets your bids to help get as many clicks
 * as possible within your budget.
 *
 * @generated from message google.ads.googleads.v17.common.TargetSpend
 */
export type TargetSpend = Message<"google.ads.googleads.v17.common.TargetSpend"> & {
  /**
   * Deprecated: The spend target under which to maximize clicks.
   * A TargetSpend bidder will attempt to spend the smaller of this value
   * or the natural throttling spend amount.
   * If not specified, the budget is used as the spend target.
   * This field is deprecated and should no longer be used. See
   * https://ads-developers.googleblog.com/2020/05/reminder-about-sunset-creation-of.html
   * for details.
   *
   * @generated from field: optional int64 target_spend_micros = 3 [deprecated = true];
   * @deprecated
   */
  targetSpendMicros?: bigint;

  /**
   * Maximum bid limit that can be set by the bid strategy.
   * The limit applies to all keywords managed by the strategy.
   *
   * @generated from field: optional int64 cpc_bid_ceiling_micros = 4;
   */
  cpcBidCeilingMicros?: bigint;
};

/**
 * Describes the message google.ads.googleads.v17.common.TargetSpend.
 * Use `create(TargetSpendSchema)` to create a new message.
 */
export const TargetSpendSchema: GenMessage<TargetSpend> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 13);

/**
 * A bidding strategy where bids are a fraction of the advertised price for
 * some good or service.
 *
 * @generated from message google.ads.googleads.v17.common.PercentCpc
 */
export type PercentCpc = Message<"google.ads.googleads.v17.common.PercentCpc"> & {
  /**
   * Maximum bid limit that can be set by the bid strategy. This is
   * an optional field entered by the advertiser and specified in local micros.
   * Note: A zero value is interpreted in the same way as having bid_ceiling
   * undefined.
   *
   * @generated from field: optional int64 cpc_bid_ceiling_micros = 3;
   */
  cpcBidCeilingMicros?: bigint;

  /**
   * Adjusts the bid for each auction upward or downward, depending on the
   * likelihood of a conversion. Individual bids may exceed
   * cpc_bid_ceiling_micros, but the average bid amount for a campaign should
   * not.
   *
   * @generated from field: optional bool enhanced_cpc_enabled = 4;
   */
  enhancedCpcEnabled?: boolean;
};

/**
 * Describes the message google.ads.googleads.v17.common.PercentCpc.
 * Use `create(PercentCpcSchema)` to create a new message.
 */
export const PercentCpcSchema: GenMessage<PercentCpc> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 14);

/**
 * Fixed CPM (cost per thousand impression) bidding strategy. A manual bidding
 * strategy with a fixed CPM.
 *
 * @generated from message google.ads.googleads.v17.common.FixedCpm
 */
export type FixedCpm = Message<"google.ads.googleads.v17.common.FixedCpm"> & {
  /**
   * Fixed CPM bidding goal. Determines the exact bidding optimization
   * parameters.
   *
   * @generated from field: google.ads.googleads.v17.enums.FixedCpmGoalEnum.FixedCpmGoal goal = 1;
   */
  goal: FixedCpmGoalEnum_FixedCpmGoal;

  /**
   * Additional information related to bidding goal.
   *
   * @generated from oneof google.ads.googleads.v17.common.FixedCpm.goal_info
   */
  goalInfo: {
    /**
     * Target frequency bidding goal details.
     *
     * @generated from field: google.ads.googleads.v17.common.FixedCpmTargetFrequencyGoalInfo target_frequency_info = 2;
     */
    value: FixedCpmTargetFrequencyGoalInfo;
    case: "targetFrequencyInfo";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.ads.googleads.v17.common.FixedCpm.
 * Use `create(FixedCpmSchema)` to create a new message.
 */
export const FixedCpmSchema: GenMessage<FixedCpm> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 15);

/**
 * Target frequency bidding goal details for Fixed CPM bidding strategy. Only
 * relevant if the goal of the bidding strategy is `TARGET_FREQUENCY`.
 *
 * @generated from message google.ads.googleads.v17.common.FixedCpmTargetFrequencyGoalInfo
 */
export type FixedCpmTargetFrequencyGoalInfo = Message<"google.ads.googleads.v17.common.FixedCpmTargetFrequencyGoalInfo"> & {
  /**
   * Target frequency count represents the number of times an advertiser wants
   * to show the ad to target a single user.
   *
   * @generated from field: int64 target_count = 1;
   */
  targetCount: bigint;

  /**
   * Time window expressing the period over which you want to reach
   * the specified target_count.
   *
   * @generated from field: google.ads.googleads.v17.enums.FixedCpmTargetFrequencyTimeUnitEnum.FixedCpmTargetFrequencyTimeUnit time_unit = 2;
   */
  timeUnit: FixedCpmTargetFrequencyTimeUnitEnum_FixedCpmTargetFrequencyTimeUnit;
};

/**
 * Describes the message google.ads.googleads.v17.common.FixedCpmTargetFrequencyGoalInfo.
 * Use `create(FixedCpmTargetFrequencyGoalInfoSchema)` to create a new message.
 */
export const FixedCpmTargetFrequencyGoalInfoSchema: GenMessage<FixedCpmTargetFrequencyGoalInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 16);

/**
 * Target CPV (cost per view) bidding strategy. An automated bidding strategy
 * that sets bids to optimize performance given the target CPV you set.
 *
 * @generated from message google.ads.googleads.v17.common.TargetCpv
 */
export type TargetCpv = Message<"google.ads.googleads.v17.common.TargetCpv"> & {
};

/**
 * Describes the message google.ads.googleads.v17.common.TargetCpv.
 * Use `create(TargetCpvSchema)` to create a new message.
 */
export const TargetCpvSchema: GenMessage<TargetCpv> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_common_bidding, 17);

