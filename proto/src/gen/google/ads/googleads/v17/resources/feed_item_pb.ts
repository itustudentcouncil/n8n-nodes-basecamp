// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/ads/googleads/v17/resources/feed_item.proto (package google.ads.googleads.v17.resources, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { CustomParameter } from "../common/custom_parameter_pb";
import { file_google_ads_googleads_v17_common_custom_parameter } from "../common/custom_parameter_pb";
import type { Money } from "../common/feed_common_pb";
import { file_google_ads_googleads_v17_common_feed_common } from "../common/feed_common_pb";
import type { PolicyTopicEntry } from "../common/policy_pb";
import { file_google_ads_googleads_v17_common_policy } from "../common/policy_pb";
import type { FeedItemQualityApprovalStatusEnum_FeedItemQualityApprovalStatus } from "../enums/feed_item_quality_approval_status_pb";
import { file_google_ads_googleads_v17_enums_feed_item_quality_approval_status } from "../enums/feed_item_quality_approval_status_pb";
import type { FeedItemQualityDisapprovalReasonEnum_FeedItemQualityDisapprovalReason } from "../enums/feed_item_quality_disapproval_reason_pb";
import { file_google_ads_googleads_v17_enums_feed_item_quality_disapproval_reason } from "../enums/feed_item_quality_disapproval_reason_pb";
import type { FeedItemStatusEnum_FeedItemStatus } from "../enums/feed_item_status_pb";
import { file_google_ads_googleads_v17_enums_feed_item_status } from "../enums/feed_item_status_pb";
import type { FeedItemValidationStatusEnum_FeedItemValidationStatus } from "../enums/feed_item_validation_status_pb";
import { file_google_ads_googleads_v17_enums_feed_item_validation_status } from "../enums/feed_item_validation_status_pb";
import type { GeoTargetingRestrictionEnum_GeoTargetingRestriction } from "../enums/geo_targeting_restriction_pb";
import { file_google_ads_googleads_v17_enums_geo_targeting_restriction } from "../enums/geo_targeting_restriction_pb";
import type { PlaceholderTypeEnum_PlaceholderType } from "../enums/placeholder_type_pb";
import { file_google_ads_googleads_v17_enums_placeholder_type } from "../enums/placeholder_type_pb";
import type { PolicyApprovalStatusEnum_PolicyApprovalStatus } from "../enums/policy_approval_status_pb";
import { file_google_ads_googleads_v17_enums_policy_approval_status } from "../enums/policy_approval_status_pb";
import type { PolicyReviewStatusEnum_PolicyReviewStatus } from "../enums/policy_review_status_pb";
import { file_google_ads_googleads_v17_enums_policy_review_status } from "../enums/policy_review_status_pb";
import type { FeedItemValidationErrorEnum_FeedItemValidationError } from "../errors/feed_item_validation_error_pb";
import { file_google_ads_googleads_v17_errors_feed_item_validation_error } from "../errors/feed_item_validation_error_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/ads/googleads/v17/resources/feed_item.proto.
 */
export const file_google_ads_googleads_v17_resources_feed_item: GenFile = /*@__PURE__*/
  fileDesc("CjJnb29nbGUvYWRzL2dvb2dsZWFkcy92MTcvcmVzb3VyY2VzL2ZlZWRfaXRlbS5wcm90bxIiZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LnJlc291cmNlcyLFBgoIRmVlZEl0ZW0SQAoNcmVzb3VyY2VfbmFtZRgBIAEoCUIp4EEF+kEjCiFnb29nbGVhZHMuZ29vZ2xlYXBpcy5jb20vRmVlZEl0ZW0SOAoEZmVlZBgLIAEoCUIl4EEF+kEfCh1nb29nbGVhZHMuZ29vZ2xlYXBpcy5jb20vRmVlZEgAiAEBEhQKAmlkGAwgASgDQgPgQQNIAYgBARIcCg9zdGFydF9kYXRlX3RpbWUYDSABKAlIAogBARIaCg1lbmRfZGF0ZV90aW1lGA4gASgJSAOIAQESVAoQYXR0cmlidXRlX3ZhbHVlcxgGIAMoCzI6Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5yZXNvdXJjZXMuRmVlZEl0ZW1BdHRyaWJ1dGVWYWx1ZRJ2ChlnZW9fdGFyZ2V0aW5nX3Jlc3RyaWN0aW9uGAcgASgOMlMuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmVudW1zLkdlb1RhcmdldGluZ1Jlc3RyaWN0aW9uRW51bS5HZW9UYXJnZXRpbmdSZXN0cmljdGlvbhJPChV1cmxfY3VzdG9tX3BhcmFtZXRlcnMYCCADKAsyMC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLkN1c3RvbVBhcmFtZXRlchJWCgZzdGF0dXMYCSABKA4yQS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuZW51bXMuRmVlZEl0ZW1TdGF0dXNFbnVtLkZlZWRJdGVtU3RhdHVzQgPgQQMSXAoMcG9saWN5X2luZm9zGAogAygLMkEuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LnJlc291cmNlcy5GZWVkSXRlbVBsYWNlaG9sZGVyUG9saWN5SW5mb0ID4EEDOmLqQV8KIWdvb2dsZWFkcy5nb29nbGVhcGlzLmNvbS9GZWVkSXRlbRI6Y3VzdG9tZXJzL3tjdXN0b21lcl9pZH0vZmVlZEl0ZW1zL3tmZWVkX2lkfX57ZmVlZF9pdGVtX2lkfUIHCgVfZmVlZEIFCgNfaWRCEgoQX3N0YXJ0X2RhdGVfdGltZUIQCg5fZW5kX2RhdGVfdGltZSKdAwoWRmVlZEl0ZW1BdHRyaWJ1dGVWYWx1ZRIeChFmZWVkX2F0dHJpYnV0ZV9pZBgLIAEoA0gAiAEBEhoKDWludGVnZXJfdmFsdWUYDCABKANIAYgBARIaCg1ib29sZWFuX3ZhbHVlGA0gASgISAKIAQESGQoMc3RyaW5nX3ZhbHVlGA4gASgJSAOIAQESGQoMZG91YmxlX3ZhbHVlGA8gASgBSASIAQESOwoLcHJpY2VfdmFsdWUYBiABKAsyJi5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuY29tbW9uLk1vbmV5EhYKDmludGVnZXJfdmFsdWVzGBAgAygDEhYKDmJvb2xlYW5fdmFsdWVzGBEgAygIEhUKDXN0cmluZ192YWx1ZXMYEiADKAkSFQoNZG91YmxlX3ZhbHVlcxgTIAMoAUIUChJfZmVlZF9hdHRyaWJ1dGVfaWRCEAoOX2ludGVnZXJfdmFsdWVCEAoOX2Jvb2xlYW5fdmFsdWVCDwoNX3N0cmluZ192YWx1ZUIPCg1fZG91YmxlX3ZhbHVlIu0HCh1GZWVkSXRlbVBsYWNlaG9sZGVyUG9saWN5SW5mbxJnChVwbGFjZWhvbGRlcl90eXBlX2VudW0YCiABKA4yQy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuZW51bXMuUGxhY2Vob2xkZXJUeXBlRW51bS5QbGFjZWhvbGRlclR5cGVCA+BBAxIsChpmZWVkX21hcHBpbmdfcmVzb3VyY2VfbmFtZRgLIAEoCUID4EEDSACIAQESZQoNcmV2aWV3X3N0YXR1cxgDIAEoDjJJLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5lbnVtcy5Qb2xpY3lSZXZpZXdTdGF0dXNFbnVtLlBvbGljeVJldmlld1N0YXR1c0ID4EEDEmsKD2FwcHJvdmFsX3N0YXR1cxgEIAEoDjJNLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5lbnVtcy5Qb2xpY3lBcHByb3ZhbFN0YXR1c0VudW0uUG9saWN5QXBwcm92YWxTdGF0dXNCA+BBAxJUChRwb2xpY3lfdG9waWNfZW50cmllcxgFIAMoCzIxLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxNy5jb21tb24uUG9saWN5VG9waWNFbnRyeUID4EEDEnUKEXZhbGlkYXRpb25fc3RhdHVzGAYgASgOMlUuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmVudW1zLkZlZWRJdGVtVmFsaWRhdGlvblN0YXR1c0VudW0uRmVlZEl0ZW1WYWxpZGF0aW9uU3RhdHVzQgPgQQMSWwoRdmFsaWRhdGlvbl9lcnJvcnMYByADKAsyOy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcucmVzb3VyY2VzLkZlZWRJdGVtVmFsaWRhdGlvbkVycm9yQgPgQQMShQEKF3F1YWxpdHlfYXBwcm92YWxfc3RhdHVzGAggASgOMl8uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmVudW1zLkZlZWRJdGVtUXVhbGl0eUFwcHJvdmFsU3RhdHVzRW51bS5GZWVkSXRlbVF1YWxpdHlBcHByb3ZhbFN0YXR1c0ID4EEDEo8BChtxdWFsaXR5X2Rpc2FwcHJvdmFsX3JlYXNvbnMYCSADKA4yZS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTcuZW51bXMuRmVlZEl0ZW1RdWFsaXR5RGlzYXBwcm92YWxSZWFzb25FbnVtLkZlZWRJdGVtUXVhbGl0eURpc2FwcHJvdmFsUmVhc29uQgPgQQNCHQobX2ZlZWRfbWFwcGluZ19yZXNvdXJjZV9uYW1lIosCChdGZWVkSXRlbVZhbGlkYXRpb25FcnJvchJzChB2YWxpZGF0aW9uX2Vycm9yGAEgASgOMlQuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LmVycm9ycy5GZWVkSXRlbVZhbGlkYXRpb25FcnJvckVudW0uRmVlZEl0ZW1WYWxpZGF0aW9uRXJyb3JCA+BBAxIdCgtkZXNjcmlwdGlvbhgGIAEoCUID4EEDSACIAQESHwoSZmVlZF9hdHRyaWJ1dGVfaWRzGAcgAygDQgPgQQMSHAoKZXh0cmFfaW5mbxgIIAEoCUID4EEDSAGIAQFCDgoMX2Rlc2NyaXB0aW9uQg0KC19leHRyYV9pbmZvQv8BCiZjb20uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjE3LnJlc291cmNlc0INRmVlZEl0ZW1Qcm90b1ABWktnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Fkcy9nb29nbGVhZHMvdjE3L3Jlc291cmNlcztyZXNvdXJjZXOiAgNHQUGqAiJHb29nbGUuQWRzLkdvb2dsZUFkcy5WMTcuUmVzb3VyY2VzygIiR29vZ2xlXEFkc1xHb29nbGVBZHNcVjE3XFJlc291cmNlc+oCJkdvb2dsZTo6QWRzOjpHb29nbGVBZHM6OlYxNzo6UmVzb3VyY2VzYgZwcm90bzM", [file_google_ads_googleads_v17_common_custom_parameter, file_google_ads_googleads_v17_common_feed_common, file_google_ads_googleads_v17_common_policy, file_google_ads_googleads_v17_enums_feed_item_quality_approval_status, file_google_ads_googleads_v17_enums_feed_item_quality_disapproval_reason, file_google_ads_googleads_v17_enums_feed_item_status, file_google_ads_googleads_v17_enums_feed_item_validation_status, file_google_ads_googleads_v17_enums_geo_targeting_restriction, file_google_ads_googleads_v17_enums_placeholder_type, file_google_ads_googleads_v17_enums_policy_approval_status, file_google_ads_googleads_v17_enums_policy_review_status, file_google_ads_googleads_v17_errors_feed_item_validation_error, file_google_api_field_behavior, file_google_api_resource]);

/**
 * A feed item.
 *
 * @generated from message google.ads.googleads.v17.resources.FeedItem
 */
export type FeedItem = Message<"google.ads.googleads.v17.resources.FeedItem"> & {
  /**
   * Immutable. The resource name of the feed item.
   * Feed item resource names have the form:
   *
   * `customers/{customer_id}/feedItems/{feed_id}~{feed_item_id}`
   *
   * @generated from field: string resource_name = 1;
   */
  resourceName: string;

  /**
   * Immutable. The feed to which this feed item belongs.
   *
   * @generated from field: optional string feed = 11;
   */
  feed?: string;

  /**
   * Output only. The ID of this feed item.
   *
   * @generated from field: optional int64 id = 12;
   */
  id?: bigint;

  /**
   * Start time in which this feed item is effective and can begin serving. The
   * time is in the customer's time zone.
   * The format is "YYYY-MM-DD HH:MM:SS".
   * Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
   *
   * @generated from field: optional string start_date_time = 13;
   */
  startDateTime?: string;

  /**
   * End time in which this feed item is no longer effective and will stop
   * serving. The time is in the customer's time zone.
   * The format is "YYYY-MM-DD HH:MM:SS".
   * Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
   *
   * @generated from field: optional string end_date_time = 14;
   */
  endDateTime?: string;

  /**
   * The feed item's attribute values.
   *
   * @generated from field: repeated google.ads.googleads.v17.resources.FeedItemAttributeValue attribute_values = 6;
   */
  attributeValues: FeedItemAttributeValue[];

  /**
   * Geo targeting restriction specifies the type of location that can be used
   * for targeting.
   *
   * @generated from field: google.ads.googleads.v17.enums.GeoTargetingRestrictionEnum.GeoTargetingRestriction geo_targeting_restriction = 7;
   */
  geoTargetingRestriction: GeoTargetingRestrictionEnum_GeoTargetingRestriction;

  /**
   * The list of mappings used to substitute custom parameter tags in a
   * `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.CustomParameter url_custom_parameters = 8;
   */
  urlCustomParameters: CustomParameter[];

  /**
   * Output only. Status of the feed item.
   * This field is read-only.
   *
   * @generated from field: google.ads.googleads.v17.enums.FeedItemStatusEnum.FeedItemStatus status = 9;
   */
  status: FeedItemStatusEnum_FeedItemStatus;

  /**
   * Output only. List of info about a feed item's validation and approval state
   * for active feed mappings. There will be an entry in the list for each type
   * of feed mapping associated with the feed, for example, a feed with a
   * sitelink and a call feed mapping would cause every feed item associated
   * with that feed to have an entry in this list for both sitelink and call.
   * This field is read-only.
   *
   * @generated from field: repeated google.ads.googleads.v17.resources.FeedItemPlaceholderPolicyInfo policy_infos = 10;
   */
  policyInfos: FeedItemPlaceholderPolicyInfo[];
};

/**
 * Describes the message google.ads.googleads.v17.resources.FeedItem.
 * Use `create(FeedItemSchema)` to create a new message.
 */
export const FeedItemSchema: GenMessage<FeedItem> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_resources_feed_item, 0);

/**
 * A feed item attribute value.
 *
 * @generated from message google.ads.googleads.v17.resources.FeedItemAttributeValue
 */
export type FeedItemAttributeValue = Message<"google.ads.googleads.v17.resources.FeedItemAttributeValue"> & {
  /**
   * Id of the feed attribute for which the value is associated with.
   *
   * @generated from field: optional int64 feed_attribute_id = 11;
   */
  feedAttributeId?: bigint;

  /**
   * Int64 value. Should be set if feed_attribute_id refers to a feed attribute
   * of type INT64.
   *
   * @generated from field: optional int64 integer_value = 12;
   */
  integerValue?: bigint;

  /**
   * Bool value. Should be set if feed_attribute_id refers to a feed attribute
   * of type BOOLEAN.
   *
   * @generated from field: optional bool boolean_value = 13;
   */
  booleanValue?: boolean;

  /**
   * String value. Should be set if feed_attribute_id refers to a feed attribute
   * of type STRING, URL or DATE_TIME.
   * For STRING the maximum length is 1500 characters. For URL the maximum
   * length is 2076 characters. For DATE_TIME the string must be in the format
   * "YYYYMMDD HHMMSS".
   *
   * @generated from field: optional string string_value = 14;
   */
  stringValue?: string;

  /**
   * Double value. Should be set if feed_attribute_id refers to a feed attribute
   * of type DOUBLE.
   *
   * @generated from field: optional double double_value = 15;
   */
  doubleValue?: number;

  /**
   * Price value. Should be set if feed_attribute_id refers to a feed attribute
   * of type PRICE.
   *
   * @generated from field: google.ads.googleads.v17.common.Money price_value = 6;
   */
  priceValue?: Money;

  /**
   * Repeated int64 value. Should be set if feed_attribute_id refers to a feed
   * attribute of type INT64_LIST.
   *
   * @generated from field: repeated int64 integer_values = 16;
   */
  integerValues: bigint[];

  /**
   * Repeated bool value. Should be set if feed_attribute_id refers to a feed
   * attribute of type BOOLEAN_LIST.
   *
   * @generated from field: repeated bool boolean_values = 17;
   */
  booleanValues: boolean[];

  /**
   * Repeated string value. Should be set if feed_attribute_id refers to a feed
   * attribute of type STRING_LIST, URL_LIST or DATE_TIME_LIST.
   * For STRING_LIST and URL_LIST the total size of the list in bytes may not
   * exceed 3000. For DATE_TIME_LIST the number of elements may not exceed 200.
   *
   * For STRING_LIST the maximum length of each string element is 1500
   * characters. For URL_LIST the maximum length is 2076 characters. For
   * DATE_TIME the format of the string must be the same as start and end time
   * for the feed item.
   *
   * @generated from field: repeated string string_values = 18;
   */
  stringValues: string[];

  /**
   * Repeated double value. Should be set if feed_attribute_id refers to a feed
   * attribute of type DOUBLE_LIST.
   *
   * @generated from field: repeated double double_values = 19;
   */
  doubleValues: number[];
};

/**
 * Describes the message google.ads.googleads.v17.resources.FeedItemAttributeValue.
 * Use `create(FeedItemAttributeValueSchema)` to create a new message.
 */
export const FeedItemAttributeValueSchema: GenMessage<FeedItemAttributeValue> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_resources_feed_item, 1);

/**
 * Policy, validation, and quality approval info for a feed item for the
 * specified placeholder type.
 *
 * @generated from message google.ads.googleads.v17.resources.FeedItemPlaceholderPolicyInfo
 */
export type FeedItemPlaceholderPolicyInfo = Message<"google.ads.googleads.v17.resources.FeedItemPlaceholderPolicyInfo"> & {
  /**
   * Output only. The placeholder type.
   *
   * @generated from field: google.ads.googleads.v17.enums.PlaceholderTypeEnum.PlaceholderType placeholder_type_enum = 10;
   */
  placeholderTypeEnum: PlaceholderTypeEnum_PlaceholderType;

  /**
   * Output only. The FeedMapping that contains the placeholder type.
   *
   * @generated from field: optional string feed_mapping_resource_name = 11;
   */
  feedMappingResourceName?: string;

  /**
   * Output only. Where the placeholder type is in the review process.
   *
   * @generated from field: google.ads.googleads.v17.enums.PolicyReviewStatusEnum.PolicyReviewStatus review_status = 3;
   */
  reviewStatus: PolicyReviewStatusEnum_PolicyReviewStatus;

  /**
   * Output only. The overall approval status of the placeholder type,
   * calculated based on the status of its individual policy topic entries.
   *
   * @generated from field: google.ads.googleads.v17.enums.PolicyApprovalStatusEnum.PolicyApprovalStatus approval_status = 4;
   */
  approvalStatus: PolicyApprovalStatusEnum_PolicyApprovalStatus;

  /**
   * Output only. The list of policy findings for the placeholder type.
   *
   * @generated from field: repeated google.ads.googleads.v17.common.PolicyTopicEntry policy_topic_entries = 5;
   */
  policyTopicEntries: PolicyTopicEntry[];

  /**
   * Output only. The validation status of the placeholder type.
   *
   * @generated from field: google.ads.googleads.v17.enums.FeedItemValidationStatusEnum.FeedItemValidationStatus validation_status = 6;
   */
  validationStatus: FeedItemValidationStatusEnum_FeedItemValidationStatus;

  /**
   * Output only. List of placeholder type validation errors.
   *
   * @generated from field: repeated google.ads.googleads.v17.resources.FeedItemValidationError validation_errors = 7;
   */
  validationErrors: FeedItemValidationError[];

  /**
   * Output only. Placeholder type quality evaluation approval status.
   *
   * @generated from field: google.ads.googleads.v17.enums.FeedItemQualityApprovalStatusEnum.FeedItemQualityApprovalStatus quality_approval_status = 8;
   */
  qualityApprovalStatus: FeedItemQualityApprovalStatusEnum_FeedItemQualityApprovalStatus;

  /**
   * Output only. List of placeholder type quality evaluation disapproval
   * reasons.
   *
   * @generated from field: repeated google.ads.googleads.v17.enums.FeedItemQualityDisapprovalReasonEnum.FeedItemQualityDisapprovalReason quality_disapproval_reasons = 9;
   */
  qualityDisapprovalReasons: FeedItemQualityDisapprovalReasonEnum_FeedItemQualityDisapprovalReason[];
};

/**
 * Describes the message google.ads.googleads.v17.resources.FeedItemPlaceholderPolicyInfo.
 * Use `create(FeedItemPlaceholderPolicyInfoSchema)` to create a new message.
 */
export const FeedItemPlaceholderPolicyInfoSchema: GenMessage<FeedItemPlaceholderPolicyInfo> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_resources_feed_item, 2);

/**
 * Stores a validation error and the set of offending feed attributes which
 * together are responsible for causing a feed item validation error.
 *
 * @generated from message google.ads.googleads.v17.resources.FeedItemValidationError
 */
export type FeedItemValidationError = Message<"google.ads.googleads.v17.resources.FeedItemValidationError"> & {
  /**
   * Output only. Error code indicating what validation error was triggered. The
   * description of the error can be found in the 'description' field.
   *
   * @generated from field: google.ads.googleads.v17.errors.FeedItemValidationErrorEnum.FeedItemValidationError validation_error = 1;
   */
  validationError: FeedItemValidationErrorEnum_FeedItemValidationError;

  /**
   * Output only. The description of the validation error.
   *
   * @generated from field: optional string description = 6;
   */
  description?: string;

  /**
   * Output only. Set of feed attributes in the feed item flagged during
   * validation. If empty, no specific feed attributes can be associated with
   * the error (for example, error across the entire feed item).
   *
   * @generated from field: repeated int64 feed_attribute_ids = 7;
   */
  feedAttributeIds: bigint[];

  /**
   * Output only. Any extra information related to this error which is not
   * captured by validation_error and feed_attribute_id (for example,
   * placeholder field IDs when feed_attribute_id is not mapped). Note that
   * extra_info is not localized.
   *
   * @generated from field: optional string extra_info = 8;
   */
  extraInfo?: string;
};

/**
 * Describes the message google.ads.googleads.v17.resources.FeedItemValidationError.
 * Use `create(FeedItemValidationErrorSchema)` to create a new message.
 */
export const FeedItemValidationErrorSchema: GenMessage<FeedItemValidationError> = /*@__PURE__*/
  messageDesc(file_google_ads_googleads_v17_resources_feed_item, 3);

