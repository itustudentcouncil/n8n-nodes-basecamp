// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/spanner/v1/commit_response.proto (package google.spanner.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/spanner/v1/commit_response.proto.
 */
export const file_google_spanner_v1_commit_response: GenFile = /*@__PURE__*/
  fileDesc("Cidnb29nbGUvc3Bhbm5lci92MS9jb21taXRfcmVzcG9uc2UucHJvdG8SEWdvb2dsZS5zcGFubmVyLnYxIrIBCg5Db21taXRSZXNwb25zZRI0ChBjb21taXRfdGltZXN0YW1wGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJDCgxjb21taXRfc3RhdHMYAiABKAsyLS5nb29nbGUuc3Bhbm5lci52MS5Db21taXRSZXNwb25zZS5Db21taXRTdGF0cxolCgtDb21taXRTdGF0cxIWCg5tdXRhdGlvbl9jb3VudBgBIAEoA0K2AQoVY29tLmdvb2dsZS5zcGFubmVyLnYxQhNDb21taXRSZXNwb25zZVByb3RvUAFaNWNsb3VkLmdvb2dsZS5jb20vZ28vc3Bhbm5lci9hcGl2MS9zcGFubmVycGI7c3Bhbm5lcnBiqgIXR29vZ2xlLkNsb3VkLlNwYW5uZXIuVjHKAhdHb29nbGVcQ2xvdWRcU3Bhbm5lclxWMeoCGkdvb2dsZTo6Q2xvdWQ6OlNwYW5uZXI6OlYxYgZwcm90bzM", [file_google_protobuf_timestamp]);

/**
 * The response for [Commit][google.spanner.v1.Spanner.Commit].
 *
 * @generated from message google.spanner.v1.CommitResponse
 */
export type CommitResponse = Message<"google.spanner.v1.CommitResponse"> & {
  /**
   * The Cloud Spanner timestamp at which the transaction committed.
   *
   * @generated from field: google.protobuf.Timestamp commit_timestamp = 1;
   */
  commitTimestamp?: Timestamp;

  /**
   * The statistics about this Commit. Not returned by default.
   * For more information, see
   * [CommitRequest.return_commit_stats][google.spanner.v1.CommitRequest.return_commit_stats].
   *
   * @generated from field: google.spanner.v1.CommitResponse.CommitStats commit_stats = 2;
   */
  commitStats?: CommitResponse_CommitStats;
};

/**
 * Describes the message google.spanner.v1.CommitResponse.
 * Use `create(CommitResponseSchema)` to create a new message.
 */
export const CommitResponseSchema: GenMessage<CommitResponse> = /*@__PURE__*/
  messageDesc(file_google_spanner_v1_commit_response, 0);

/**
 * Additional statistics about a commit.
 *
 * @generated from message google.spanner.v1.CommitResponse.CommitStats
 */
export type CommitResponse_CommitStats = Message<"google.spanner.v1.CommitResponse.CommitStats"> & {
  /**
   * The total number of mutations for the transaction. Knowing the
   * `mutation_count` value can help you maximize the number of mutations
   * in a transaction and minimize the number of API round trips. You can
   * also monitor this value to prevent transactions from exceeding the system
   * [limit](https://cloud.google.com/spanner/quotas#limits_for_creating_reading_updating_and_deleting_data).
   * If the number of mutations exceeds the limit, the server returns
   * [INVALID_ARGUMENT](https://cloud.google.com/spanner/docs/reference/rest/v1/Code#ENUM_VALUES.INVALID_ARGUMENT).
   *
   * @generated from field: int64 mutation_count = 1;
   */
  mutationCount: bigint;
};

/**
 * Describes the message google.spanner.v1.CommitResponse.CommitStats.
 * Use `create(CommitResponse_CommitStatsSchema)` to create a new message.
 */
export const CommitResponse_CommitStatsSchema: GenMessage<CommitResponse_CommitStats> = /*@__PURE__*/
  messageDesc(file_google_spanner_v1_commit_response, 0, 0);

