// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/spanner/admin/instance/v1/spanner_instance_admin.proto (package google.spanner.admin.instance.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { GetIamPolicyRequestSchema, SetIamPolicyRequestSchema, TestIamPermissionsRequestSchema, TestIamPermissionsResponseSchema } from "../../../../iam/v1/iam_policy_pb";
import { file_google_iam_v1_iam_policy } from "../../../../iam/v1/iam_policy_pb";
import type { PolicySchema } from "../../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../../iam/v1/policy_pb";
import type { Operation, OperationSchema } from "../../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../../longrunning/operations_pb";
import type { EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { FulfillmentPeriod, OperationProgress } from "./common_pb";
import { file_google_spanner_admin_instance_v1_common } from "./common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/spanner/admin/instance/v1/spanner_instance_admin.proto.
 */
export const file_google_spanner_admin_instance_v1_spanner_instance_admin: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_iam_v1_iam_policy, file_google_iam_v1_policy, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_spanner_admin_instance_v1_common]);

/**
 * @generated from message google.spanner.admin.instance.v1.ReplicaInfo
 */
export type ReplicaInfo = Message<"google.spanner.admin.instance.v1.ReplicaInfo"> & {
  /**
   * The location of the serving resources, e.g. "us-central1".
   *
   * @generated from field: string location = 1;
   */
  location: string;

  /**
   * The type of replica.
   *
   * @generated from field: google.spanner.admin.instance.v1.ReplicaInfo.ReplicaType type = 2;
   */
  type: ReplicaInfo_ReplicaType;

  /**
   * If true, this location is designated as the default leader location where
   * leader replicas are placed. See the [region types
   * documentation](https://cloud.google.com/spanner/docs/instances#region_types)
   * for more details.
   *
   * @generated from field: bool default_leader_location = 3;
   */
  defaultLeaderLocation: boolean;
};

/**
 * Describes the message google.spanner.admin.instance.v1.ReplicaInfo.
 * Use `create(ReplicaInfoSchema)` to create a new message.
 */
export const ReplicaInfoSchema: GenMessage<ReplicaInfo> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 0);

/**
 * Indicates the type of replica.  See the [replica types
 * documentation](https://cloud.google.com/spanner/docs/replication#replica_types)
 * for more details.
 *
 * @generated from enum google.spanner.admin.instance.v1.ReplicaInfo.ReplicaType
 */
export enum ReplicaInfo_ReplicaType {
  /**
   * Not specified.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Read-write replicas support both reads and writes. These replicas:
   *
   * * Maintain a full copy of your data.
   * * Serve reads.
   * * Can vote whether to commit a write.
   * * Participate in leadership election.
   * * Are eligible to become a leader.
   *
   * @generated from enum value: READ_WRITE = 1;
   */
  READ_WRITE = 1,

  /**
   * Read-only replicas only support reads (not writes). Read-only replicas:
   *
   * * Maintain a full copy of your data.
   * * Serve reads.
   * * Do not participate in voting to commit writes.
   * * Are not eligible to become a leader.
   *
   * @generated from enum value: READ_ONLY = 2;
   */
  READ_ONLY = 2,

  /**
   * Witness replicas don't support reads but do participate in voting to
   * commit writes. Witness replicas:
   *
   * * Do not maintain a full copy of data.
   * * Do not serve reads.
   * * Vote whether to commit writes.
   * * Participate in leader election but are not eligible to become leader.
   *
   * @generated from enum value: WITNESS = 3;
   */
  WITNESS = 3,
}

/**
 * Describes the enum google.spanner.admin.instance.v1.ReplicaInfo.ReplicaType.
 */
export const ReplicaInfo_ReplicaTypeSchema: GenEnum<ReplicaInfo_ReplicaType> = /*@__PURE__*/
  enumDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 0, 0);

/**
 * A possible configuration for a Cloud Spanner instance. Configurations
 * define the geographic placement of nodes and their replication.
 *
 * @generated from message google.spanner.admin.instance.v1.InstanceConfig
 */
export type InstanceConfig = Message<"google.spanner.admin.instance.v1.InstanceConfig"> & {
  /**
   * A unique identifier for the instance configuration.  Values
   * are of the form
   * `projects/<project>/instanceConfigs/[a-z][-a-z0-9]*`.
   *
   * User instance configuration must start with `custom-`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The name of this instance configuration as it appears in UIs.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Output only. Whether this instance configuration is a Google-managed or
   * user-managed configuration.
   *
   * @generated from field: google.spanner.admin.instance.v1.InstanceConfig.Type config_type = 5;
   */
  configType: InstanceConfig_Type;

  /**
   * The geographic placement of nodes in this instance configuration and their
   * replication properties.
   *
   * @generated from field: repeated google.spanner.admin.instance.v1.ReplicaInfo replicas = 3;
   */
  replicas: ReplicaInfo[];

  /**
   * Output only. The available optional replicas to choose from for user
   * managed configurations. Populated for Google managed configurations.
   *
   * @generated from field: repeated google.spanner.admin.instance.v1.ReplicaInfo optional_replicas = 6;
   */
  optionalReplicas: ReplicaInfo[];

  /**
   * Base configuration name, e.g. projects/<project_name>/instanceConfigs/nam3,
   * based on which this configuration is created. Only set for user managed
   * configurations. `base_config` must refer to a configuration of type
   * GOOGLE_MANAGED in the same project as this configuration.
   *
   * @generated from field: string base_config = 7;
   */
  baseConfig: string;

  /**
   * Cloud Labels are a flexible and lightweight mechanism for organizing cloud
   * resources into groups that reflect a customer's organizational needs and
   * deployment strategies. Cloud Labels can be used to filter collections of
   * resources. They can be used to control how resource metrics are aggregated.
   * And they can be used as arguments to policy management rules (e.g. route,
   * firewall, load balancing, etc.).
   *
   *  * Label keys must be between 1 and 63 characters long and must conform to
   *    the following regular expression: `[a-z][a-z0-9_-]{0,62}`.
   *  * Label values must be between 0 and 63 characters long and must conform
   *    to the regular expression `[a-z0-9_-]{0,63}`.
   *  * No more than 64 labels can be associated with a given resource.
   *
   * See https://goo.gl/xmQnxf for more information on and examples of labels.
   *
   * If you plan to use labels in your own code, please note that additional
   * characters may be allowed in the future. Therefore, you are advised to use
   * an internal label representation, such as JSON, which doesn't rely upon
   * specific characters being disallowed.  For example, representing labels
   * as the string:  name + "_" + value  would prove problematic if we were to
   * allow "_" in a future release.
   *
   * @generated from field: map<string, string> labels = 8;
   */
  labels: { [key: string]: string };

  /**
   * etag is used for optimistic concurrency control as a way
   * to help prevent simultaneous updates of a instance configuration from
   * overwriting each other. It is strongly suggested that systems make use of
   * the etag in the read-modify-write cycle to perform instance configuration
   * updates in order to avoid race conditions: An etag is returned in the
   * response which contains instance configurations, and systems are expected
   * to put that etag in the request to update instance configuration to ensure
   * that their change is applied to the same version of the instance
   * configuration. If no etag is provided in the call to update the instance
   * configuration, then the existing instance configuration is overwritten
   * blindly.
   *
   * @generated from field: string etag = 9;
   */
  etag: string;

  /**
   * Allowed values of the "default_leader" schema option for databases in
   * instances that use this instance configuration.
   *
   * @generated from field: repeated string leader_options = 4;
   */
  leaderOptions: string[];

  /**
   * Output only. If true, the instance configuration is being created or
   * updated. If false, there are no ongoing operations for the instance
   * configuration.
   *
   * @generated from field: bool reconciling = 10;
   */
  reconciling: boolean;

  /**
   * Output only. The current instance configuration state. Applicable only for
   * `USER_MANAGED` configurations.
   *
   * @generated from field: google.spanner.admin.instance.v1.InstanceConfig.State state = 11;
   */
  state: InstanceConfig_State;
};

/**
 * Describes the message google.spanner.admin.instance.v1.InstanceConfig.
 * Use `create(InstanceConfigSchema)` to create a new message.
 */
export const InstanceConfigSchema: GenMessage<InstanceConfig> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 1);

/**
 * The type of this configuration.
 *
 * @generated from enum google.spanner.admin.instance.v1.InstanceConfig.Type
 */
export enum InstanceConfig_Type {
  /**
   * Unspecified.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Google managed configuration.
   *
   * @generated from enum value: GOOGLE_MANAGED = 1;
   */
  GOOGLE_MANAGED = 1,

  /**
   * User managed configuration.
   *
   * @generated from enum value: USER_MANAGED = 2;
   */
  USER_MANAGED = 2,
}

/**
 * Describes the enum google.spanner.admin.instance.v1.InstanceConfig.Type.
 */
export const InstanceConfig_TypeSchema: GenEnum<InstanceConfig_Type> = /*@__PURE__*/
  enumDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 1, 0);

/**
 * Indicates the current state of the instance configuration.
 *
 * @generated from enum google.spanner.admin.instance.v1.InstanceConfig.State
 */
export enum InstanceConfig_State {
  /**
   * Not specified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The instance configuration is still being created.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The instance configuration is fully created and ready to be used to
   * create instances.
   *
   * @generated from enum value: READY = 2;
   */
  READY = 2,
}

/**
 * Describes the enum google.spanner.admin.instance.v1.InstanceConfig.State.
 */
export const InstanceConfig_StateSchema: GenEnum<InstanceConfig_State> = /*@__PURE__*/
  enumDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 1, 1);

/**
 * Autoscaling configuration for an instance.
 *
 * @generated from message google.spanner.admin.instance.v1.AutoscalingConfig
 */
export type AutoscalingConfig = Message<"google.spanner.admin.instance.v1.AutoscalingConfig"> & {
  /**
   * Required. Autoscaling limits for an instance.
   *
   * @generated from field: google.spanner.admin.instance.v1.AutoscalingConfig.AutoscalingLimits autoscaling_limits = 1;
   */
  autoscalingLimits?: AutoscalingConfig_AutoscalingLimits;

  /**
   * Required. The autoscaling targets for an instance.
   *
   * @generated from field: google.spanner.admin.instance.v1.AutoscalingConfig.AutoscalingTargets autoscaling_targets = 2;
   */
  autoscalingTargets?: AutoscalingConfig_AutoscalingTargets;
};

/**
 * Describes the message google.spanner.admin.instance.v1.AutoscalingConfig.
 * Use `create(AutoscalingConfigSchema)` to create a new message.
 */
export const AutoscalingConfigSchema: GenMessage<AutoscalingConfig> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 2);

/**
 * The autoscaling limits for the instance. Users can define the minimum and
 * maximum compute capacity allocated to the instance, and the autoscaler will
 * only scale within that range. Users can either use nodes or processing
 * units to specify the limits, but should use the same unit to set both the
 * min_limit and max_limit.
 *
 * @generated from message google.spanner.admin.instance.v1.AutoscalingConfig.AutoscalingLimits
 */
export type AutoscalingConfig_AutoscalingLimits = Message<"google.spanner.admin.instance.v1.AutoscalingConfig.AutoscalingLimits"> & {
  /**
   * The minimum compute capacity for the instance.
   *
   * @generated from oneof google.spanner.admin.instance.v1.AutoscalingConfig.AutoscalingLimits.min_limit
   */
  minLimit: {
    /**
     * Minimum number of nodes allocated to the instance. If set, this number
     * should be greater than or equal to 1.
     *
     * @generated from field: int32 min_nodes = 1;
     */
    value: number;
    case: "minNodes";
  } | {
    /**
     * Minimum number of processing units allocated to the instance. If set,
     * this number should be multiples of 1000.
     *
     * @generated from field: int32 min_processing_units = 2;
     */
    value: number;
    case: "minProcessingUnits";
  } | { case: undefined; value?: undefined };

  /**
   * The maximum compute capacity for the instance. The maximum compute
   * capacity should be less than or equal to 10X the minimum compute
   * capacity.
   *
   * @generated from oneof google.spanner.admin.instance.v1.AutoscalingConfig.AutoscalingLimits.max_limit
   */
  maxLimit: {
    /**
     * Maximum number of nodes allocated to the instance. If set, this number
     * should be greater than or equal to min_nodes.
     *
     * @generated from field: int32 max_nodes = 3;
     */
    value: number;
    case: "maxNodes";
  } | {
    /**
     * Maximum number of processing units allocated to the instance. If set,
     * this number should be multiples of 1000 and be greater than or equal to
     * min_processing_units.
     *
     * @generated from field: int32 max_processing_units = 4;
     */
    value: number;
    case: "maxProcessingUnits";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.spanner.admin.instance.v1.AutoscalingConfig.AutoscalingLimits.
 * Use `create(AutoscalingConfig_AutoscalingLimitsSchema)` to create a new message.
 */
export const AutoscalingConfig_AutoscalingLimitsSchema: GenMessage<AutoscalingConfig_AutoscalingLimits> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 2, 0);

/**
 * The autoscaling targets for an instance.
 *
 * @generated from message google.spanner.admin.instance.v1.AutoscalingConfig.AutoscalingTargets
 */
export type AutoscalingConfig_AutoscalingTargets = Message<"google.spanner.admin.instance.v1.AutoscalingConfig.AutoscalingTargets"> & {
  /**
   * Required. The target high priority cpu utilization percentage that the
   * autoscaler should be trying to achieve for the instance. This number is
   * on a scale from 0 (no utilization) to 100 (full utilization). The valid
   * range is [10, 90] inclusive.
   *
   * @generated from field: int32 high_priority_cpu_utilization_percent = 1;
   */
  highPriorityCpuUtilizationPercent: number;

  /**
   * Required. The target storage utilization percentage that the autoscaler
   * should be trying to achieve for the instance. This number is on a scale
   * from 0 (no utilization) to 100 (full utilization). The valid range is
   * [10, 100] inclusive.
   *
   * @generated from field: int32 storage_utilization_percent = 2;
   */
  storageUtilizationPercent: number;
};

/**
 * Describes the message google.spanner.admin.instance.v1.AutoscalingConfig.AutoscalingTargets.
 * Use `create(AutoscalingConfig_AutoscalingTargetsSchema)` to create a new message.
 */
export const AutoscalingConfig_AutoscalingTargetsSchema: GenMessage<AutoscalingConfig_AutoscalingTargets> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 2, 1);

/**
 * An isolated set of Cloud Spanner resources on which databases can be hosted.
 *
 * @generated from message google.spanner.admin.instance.v1.Instance
 */
export type Instance = Message<"google.spanner.admin.instance.v1.Instance"> & {
  /**
   * Required. A unique identifier for the instance, which cannot be changed
   * after the instance is created. Values are of the form
   * `projects/<project>/instances/[a-z][-a-z0-9]*[a-z0-9]`. The final
   * segment of the name must be between 2 and 64 characters in length.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The name of the instance's configuration. Values are of the form
   * `projects/<project>/instanceConfigs/<configuration>`. See
   * also [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig] and
   * [ListInstanceConfigs][google.spanner.admin.instance.v1.InstanceAdmin.ListInstanceConfigs].
   *
   * @generated from field: string config = 2;
   */
  config: string;

  /**
   * Required. The descriptive name for this instance as it appears in UIs.
   * Must be unique per project and between 4 and 30 characters in length.
   *
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * The number of nodes allocated to this instance. At most one of either
   * node_count or processing_units should be present in the message.
   *
   * Users can set the node_count field to specify the target number of nodes
   * allocated to the instance.
   *
   * This may be zero in API responses for instances that are not yet in state
   * `READY`.
   *
   * See [the
   * documentation](https://cloud.google.com/spanner/docs/compute-capacity)
   * for more information about nodes and processing units.
   *
   * @generated from field: int32 node_count = 5;
   */
  nodeCount: number;

  /**
   * The number of processing units allocated to this instance. At most one of
   * processing_units or node_count should be present in the message.
   *
   * Users can set the processing_units field to specify the target number of
   * processing units allocated to the instance.
   *
   * This may be zero in API responses for instances that are not yet in state
   * `READY`.
   *
   * See [the
   * documentation](https://cloud.google.com/spanner/docs/compute-capacity)
   * for more information about nodes and processing units.
   *
   * @generated from field: int32 processing_units = 9;
   */
  processingUnits: number;

  /**
   * Optional. The autoscaling configuration. Autoscaling is enabled if this
   * field is set. When autoscaling is enabled, node_count and processing_units
   * are treated as OUTPUT_ONLY fields and reflect the current compute capacity
   * allocated to the instance.
   *
   * @generated from field: google.spanner.admin.instance.v1.AutoscalingConfig autoscaling_config = 17;
   */
  autoscalingConfig?: AutoscalingConfig;

  /**
   * Output only. The current instance state. For
   * [CreateInstance][google.spanner.admin.instance.v1.InstanceAdmin.CreateInstance],
   * the state must be either omitted or set to `CREATING`. For
   * [UpdateInstance][google.spanner.admin.instance.v1.InstanceAdmin.UpdateInstance],
   * the state must be either omitted or set to `READY`.
   *
   * @generated from field: google.spanner.admin.instance.v1.Instance.State state = 6;
   */
  state: Instance_State;

  /**
   * Cloud Labels are a flexible and lightweight mechanism for organizing cloud
   * resources into groups that reflect a customer's organizational needs and
   * deployment strategies. Cloud Labels can be used to filter collections of
   * resources. They can be used to control how resource metrics are aggregated.
   * And they can be used as arguments to policy management rules (e.g. route,
   * firewall, load balancing, etc.).
   *
   *  * Label keys must be between 1 and 63 characters long and must conform to
   *    the following regular expression: `[a-z][a-z0-9_-]{0,62}`.
   *  * Label values must be between 0 and 63 characters long and must conform
   *    to the regular expression `[a-z0-9_-]{0,63}`.
   *  * No more than 64 labels can be associated with a given resource.
   *
   * See https://goo.gl/xmQnxf for more information on and examples of labels.
   *
   * If you plan to use labels in your own code, please note that additional
   * characters may be allowed in the future. And so you are advised to use an
   * internal label representation, such as JSON, which doesn't rely upon
   * specific characters being disallowed.  For example, representing labels
   * as the string:  name + "_" + value  would prove problematic if we were to
   * allow "_" in a future release.
   *
   * @generated from field: map<string, string> labels = 7;
   */
  labels: { [key: string]: string };

  /**
   * Deprecated. This field is not populated.
   *
   * @generated from field: repeated string endpoint_uris = 8;
   */
  endpointUris: string[];

  /**
   * Output only. The time at which the instance was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 11;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time at which the instance was most recently updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 12;
   */
  updateTime?: Timestamp;

  /**
   * Optional. The `Edition` of the current instance.
   *
   * @generated from field: google.spanner.admin.instance.v1.Instance.Edition edition = 20;
   */
  edition: Instance_Edition;
};

/**
 * Describes the message google.spanner.admin.instance.v1.Instance.
 * Use `create(InstanceSchema)` to create a new message.
 */
export const InstanceSchema: GenMessage<Instance> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 3);

/**
 * Indicates the current state of the instance.
 *
 * @generated from enum google.spanner.admin.instance.v1.Instance.State
 */
export enum Instance_State {
  /**
   * Not specified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The instance is still being created. Resources may not be
   * available yet, and operations such as database creation may not
   * work.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The instance is fully created and ready to do work such as
   * creating databases.
   *
   * @generated from enum value: READY = 2;
   */
  READY = 2,
}

/**
 * Describes the enum google.spanner.admin.instance.v1.Instance.State.
 */
export const Instance_StateSchema: GenEnum<Instance_State> = /*@__PURE__*/
  enumDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 3, 0);

/**
 * The edition selected for this instance. Different editions provide
 * different capabilities at different price points.
 *
 * @generated from enum google.spanner.admin.instance.v1.Instance.Edition
 */
export enum Instance_Edition {
  /**
   * Edition not specified.
   *
   * @generated from enum value: EDITION_UNSPECIFIED = 0;
   */
  EDITION_UNSPECIFIED = 0,

  /**
   * Standard edition.
   *
   * @generated from enum value: STANDARD = 1;
   */
  STANDARD = 1,

  /**
   * Enterprise edition.
   *
   * @generated from enum value: ENTERPRISE = 2;
   */
  ENTERPRISE = 2,

  /**
   * Enterprise Plus edition.
   *
   * @generated from enum value: ENTERPRISE_PLUS = 3;
   */
  ENTERPRISE_PLUS = 3,
}

/**
 * Describes the enum google.spanner.admin.instance.v1.Instance.Edition.
 */
export const Instance_EditionSchema: GenEnum<Instance_Edition> = /*@__PURE__*/
  enumDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 3, 1);

/**
 * The request for
 * [ListInstanceConfigs][google.spanner.admin.instance.v1.InstanceAdmin.ListInstanceConfigs].
 *
 * @generated from message google.spanner.admin.instance.v1.ListInstanceConfigsRequest
 */
export type ListInstanceConfigsRequest = Message<"google.spanner.admin.instance.v1.ListInstanceConfigsRequest"> & {
  /**
   * Required. The name of the project for which a list of supported instance
   * configurations is requested. Values are of the form
   * `projects/<project>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Number of instance configurations to be returned in the response. If 0 or
   * less, defaults to the server's maximum allowed page size.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * If non-empty, `page_token` should contain a
   * [next_page_token][google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token]
   * from a previous
   * [ListInstanceConfigsResponse][google.spanner.admin.instance.v1.ListInstanceConfigsResponse].
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.spanner.admin.instance.v1.ListInstanceConfigsRequest.
 * Use `create(ListInstanceConfigsRequestSchema)` to create a new message.
 */
export const ListInstanceConfigsRequestSchema: GenMessage<ListInstanceConfigsRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 4);

/**
 * The response for
 * [ListInstanceConfigs][google.spanner.admin.instance.v1.InstanceAdmin.ListInstanceConfigs].
 *
 * @generated from message google.spanner.admin.instance.v1.ListInstanceConfigsResponse
 */
export type ListInstanceConfigsResponse = Message<"google.spanner.admin.instance.v1.ListInstanceConfigsResponse"> & {
  /**
   * The list of requested instance configurations.
   *
   * @generated from field: repeated google.spanner.admin.instance.v1.InstanceConfig instance_configs = 1;
   */
  instanceConfigs: InstanceConfig[];

  /**
   * `next_page_token` can be sent in a subsequent
   * [ListInstanceConfigs][google.spanner.admin.instance.v1.InstanceAdmin.ListInstanceConfigs]
   * call to fetch more of the matching instance configurations.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.spanner.admin.instance.v1.ListInstanceConfigsResponse.
 * Use `create(ListInstanceConfigsResponseSchema)` to create a new message.
 */
export const ListInstanceConfigsResponseSchema: GenMessage<ListInstanceConfigsResponse> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 5);

/**
 * The request for
 * [GetInstanceConfigRequest][google.spanner.admin.instance.v1.InstanceAdmin.GetInstanceConfig].
 *
 * @generated from message google.spanner.admin.instance.v1.GetInstanceConfigRequest
 */
export type GetInstanceConfigRequest = Message<"google.spanner.admin.instance.v1.GetInstanceConfigRequest"> & {
  /**
   * Required. The name of the requested instance configuration. Values are of
   * the form `projects/<project>/instanceConfigs/<config>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.spanner.admin.instance.v1.GetInstanceConfigRequest.
 * Use `create(GetInstanceConfigRequestSchema)` to create a new message.
 */
export const GetInstanceConfigRequestSchema: GenMessage<GetInstanceConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 6);

/**
 * The request for
 * [CreateInstanceConfigRequest][InstanceAdmin.CreateInstanceConfigRequest].
 *
 * @generated from message google.spanner.admin.instance.v1.CreateInstanceConfigRequest
 */
export type CreateInstanceConfigRequest = Message<"google.spanner.admin.instance.v1.CreateInstanceConfigRequest"> & {
  /**
   * Required. The name of the project in which to create the instance
   * configuration. Values are of the form `projects/<project>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ID of the instance configuration to create. Valid identifiers
   * are of the form `custom-[-a-z0-9]*[a-z0-9]` and must be between 2 and 64
   * characters in length. The `custom-` prefix is required to avoid name
   * conflicts with Google-managed configurations.
   *
   * @generated from field: string instance_config_id = 2;
   */
  instanceConfigId: string;

  /**
   * Required. The InstanceConfig proto of the configuration to create.
   * instance_config.name must be
   * `<parent>/instanceConfigs/<instance_config_id>`.
   * instance_config.base_config must be a Google managed configuration name,
   * e.g. <parent>/instanceConfigs/us-east1, <parent>/instanceConfigs/nam3.
   *
   * @generated from field: google.spanner.admin.instance.v1.InstanceConfig instance_config = 3;
   */
  instanceConfig?: InstanceConfig;

  /**
   * An option to validate, but not actually execute, a request,
   * and provide the same response.
   *
   * @generated from field: bool validate_only = 4;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.spanner.admin.instance.v1.CreateInstanceConfigRequest.
 * Use `create(CreateInstanceConfigRequestSchema)` to create a new message.
 */
export const CreateInstanceConfigRequestSchema: GenMessage<CreateInstanceConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 7);

/**
 * The request for
 * [UpdateInstanceConfigRequest][InstanceAdmin.UpdateInstanceConfigRequest].
 *
 * @generated from message google.spanner.admin.instance.v1.UpdateInstanceConfigRequest
 */
export type UpdateInstanceConfigRequest = Message<"google.spanner.admin.instance.v1.UpdateInstanceConfigRequest"> & {
  /**
   * Required. The user instance configuration to update, which must always
   * include the instance configuration name. Otherwise, only fields mentioned
   * in
   * [update_mask][google.spanner.admin.instance.v1.UpdateInstanceConfigRequest.update_mask]
   * need be included. To prevent conflicts of concurrent updates,
   * [etag][google.spanner.admin.instance.v1.InstanceConfig.reconciling] can
   * be used.
   *
   * @generated from field: google.spanner.admin.instance.v1.InstanceConfig instance_config = 1;
   */
  instanceConfig?: InstanceConfig;

  /**
   * Required. A mask specifying which fields in
   * [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig] should be
   * updated. The field mask must always be specified; this prevents any future
   * fields in [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig]
   * from being erased accidentally by clients that do not know about them. Only
   * display_name and labels can be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * An option to validate, but not actually execute, a request,
   * and provide the same response.
   *
   * @generated from field: bool validate_only = 3;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.spanner.admin.instance.v1.UpdateInstanceConfigRequest.
 * Use `create(UpdateInstanceConfigRequestSchema)` to create a new message.
 */
export const UpdateInstanceConfigRequestSchema: GenMessage<UpdateInstanceConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 8);

/**
 * The request for
 * [DeleteInstanceConfigRequest][InstanceAdmin.DeleteInstanceConfigRequest].
 *
 * @generated from message google.spanner.admin.instance.v1.DeleteInstanceConfigRequest
 */
export type DeleteInstanceConfigRequest = Message<"google.spanner.admin.instance.v1.DeleteInstanceConfigRequest"> & {
  /**
   * Required. The name of the instance configuration to be deleted.
   * Values are of the form
   * `projects/<project>/instanceConfigs/<instance_config>`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Used for optimistic concurrency control as a way to help prevent
   * simultaneous deletes of an instance configuration from overwriting each
   * other. If not empty, the API
   * only deletes the instance configuration when the etag provided matches the
   * current status of the requested instance configuration. Otherwise, deletes
   * the instance configuration without checking the current status of the
   * requested instance configuration.
   *
   * @generated from field: string etag = 2;
   */
  etag: string;

  /**
   * An option to validate, but not actually execute, a request,
   * and provide the same response.
   *
   * @generated from field: bool validate_only = 3;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.spanner.admin.instance.v1.DeleteInstanceConfigRequest.
 * Use `create(DeleteInstanceConfigRequestSchema)` to create a new message.
 */
export const DeleteInstanceConfigRequestSchema: GenMessage<DeleteInstanceConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 9);

/**
 * The request for
 * [ListInstanceConfigOperations][google.spanner.admin.instance.v1.InstanceAdmin.ListInstanceConfigOperations].
 *
 * @generated from message google.spanner.admin.instance.v1.ListInstanceConfigOperationsRequest
 */
export type ListInstanceConfigOperationsRequest = Message<"google.spanner.admin.instance.v1.ListInstanceConfigOperationsRequest"> & {
  /**
   * Required. The project of the instance configuration operations.
   * Values are of the form `projects/<project>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * An expression that filters the list of returned operations.
   *
   * A filter expression consists of a field name, a
   * comparison operator, and a value for filtering.
   * The value must be a string, a number, or a boolean. The comparison operator
   * must be one of: `<`, `>`, `<=`, `>=`, `!=`, `=`, or `:`.
   * Colon `:` is the contains operator. Filter rules are not case sensitive.
   *
   * The following fields in the [Operation][google.longrunning.Operation]
   * are eligible for filtering:
   *
   *   * `name` - The name of the long-running operation
   *   * `done` - False if the operation is in progress, else true.
   *   * `metadata.@type` - the type of metadata. For example, the type string
   *      for
   *      [CreateInstanceConfigMetadata][google.spanner.admin.instance.v1.CreateInstanceConfigMetadata]
   *      is
   *      `type.googleapis.com/google.spanner.admin.instance.v1.CreateInstanceConfigMetadata`.
   *   * `metadata.<field_name>` - any field in metadata.value.
   *      `metadata.@type` must be specified first, if filtering on metadata
   *      fields.
   *   * `error` - Error associated with the long-running operation.
   *   * `response.@type` - the type of response.
   *   * `response.<field_name>` - any field in response.value.
   *
   * You can combine multiple expressions by enclosing each expression in
   * parentheses. By default, expressions are combined with AND logic. However,
   * you can specify AND, OR, and NOT logic explicitly.
   *
   * Here are a few examples:
   *
   *   * `done:true` - The operation is complete.
   *   * `(metadata.@type=` \
   *     `type.googleapis.com/google.spanner.admin.instance.v1.CreateInstanceConfigMetadata)
   *     AND` \
   *     `(metadata.instance_config.name:custom-config) AND` \
   *     `(metadata.progress.start_time < \"2021-03-28T14:50:00Z\") AND` \
   *     `(error:*)` - Return operations where:
   *     * The operation's metadata type is
   *     [CreateInstanceConfigMetadata][google.spanner.admin.instance.v1.CreateInstanceConfigMetadata].
   *     * The instance configuration name contains "custom-config".
   *     * The operation started before 2021-03-28T14:50:00Z.
   *     * The operation resulted in an error.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Number of operations to be returned in the response. If 0 or
   * less, defaults to the server's maximum allowed page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * If non-empty, `page_token` should contain a
   * [next_page_token][google.spanner.admin.instance.v1.ListInstanceConfigOperationsResponse.next_page_token]
   * from a previous
   * [ListInstanceConfigOperationsResponse][google.spanner.admin.instance.v1.ListInstanceConfigOperationsResponse]
   * to the same `parent` and with the same `filter`.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.spanner.admin.instance.v1.ListInstanceConfigOperationsRequest.
 * Use `create(ListInstanceConfigOperationsRequestSchema)` to create a new message.
 */
export const ListInstanceConfigOperationsRequestSchema: GenMessage<ListInstanceConfigOperationsRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 10);

/**
 * The response for
 * [ListInstanceConfigOperations][google.spanner.admin.instance.v1.InstanceAdmin.ListInstanceConfigOperations].
 *
 * @generated from message google.spanner.admin.instance.v1.ListInstanceConfigOperationsResponse
 */
export type ListInstanceConfigOperationsResponse = Message<"google.spanner.admin.instance.v1.ListInstanceConfigOperationsResponse"> & {
  /**
   * The list of matching instance configuration [long-running
   * operations][google.longrunning.Operation]. Each operation's name will be
   * prefixed by the name of the instance configuration. The operation's
   * [metadata][google.longrunning.Operation.metadata] field type
   * `metadata.type_url` describes the type of the metadata.
   *
   * @generated from field: repeated google.longrunning.Operation operations = 1;
   */
  operations: Operation[];

  /**
   * `next_page_token` can be sent in a subsequent
   * [ListInstanceConfigOperations][google.spanner.admin.instance.v1.InstanceAdmin.ListInstanceConfigOperations]
   * call to fetch more of the matching metadata.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.spanner.admin.instance.v1.ListInstanceConfigOperationsResponse.
 * Use `create(ListInstanceConfigOperationsResponseSchema)` to create a new message.
 */
export const ListInstanceConfigOperationsResponseSchema: GenMessage<ListInstanceConfigOperationsResponse> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 11);

/**
 * The request for
 * [GetInstance][google.spanner.admin.instance.v1.InstanceAdmin.GetInstance].
 *
 * @generated from message google.spanner.admin.instance.v1.GetInstanceRequest
 */
export type GetInstanceRequest = Message<"google.spanner.admin.instance.v1.GetInstanceRequest"> & {
  /**
   * Required. The name of the requested instance. Values are of the form
   * `projects/<project>/instances/<instance>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * If field_mask is present, specifies the subset of
   * [Instance][google.spanner.admin.instance.v1.Instance] fields that should be
   * returned. If absent, all
   * [Instance][google.spanner.admin.instance.v1.Instance] fields are returned.
   *
   * @generated from field: google.protobuf.FieldMask field_mask = 2;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message google.spanner.admin.instance.v1.GetInstanceRequest.
 * Use `create(GetInstanceRequestSchema)` to create a new message.
 */
export const GetInstanceRequestSchema: GenMessage<GetInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 12);

/**
 * The request for
 * [CreateInstance][google.spanner.admin.instance.v1.InstanceAdmin.CreateInstance].
 *
 * @generated from message google.spanner.admin.instance.v1.CreateInstanceRequest
 */
export type CreateInstanceRequest = Message<"google.spanner.admin.instance.v1.CreateInstanceRequest"> & {
  /**
   * Required. The name of the project in which to create the instance. Values
   * are of the form `projects/<project>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ID of the instance to create.  Valid identifiers are of the
   * form `[a-z][-a-z0-9]*[a-z0-9]` and must be between 2 and 64 characters in
   * length.
   *
   * @generated from field: string instance_id = 2;
   */
  instanceId: string;

  /**
   * Required. The instance to create.  The name may be omitted, but if
   * specified must be `<parent>/instances/<instance_id>`.
   *
   * @generated from field: google.spanner.admin.instance.v1.Instance instance = 3;
   */
  instance?: Instance;
};

/**
 * Describes the message google.spanner.admin.instance.v1.CreateInstanceRequest.
 * Use `create(CreateInstanceRequestSchema)` to create a new message.
 */
export const CreateInstanceRequestSchema: GenMessage<CreateInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 13);

/**
 * The request for
 * [ListInstances][google.spanner.admin.instance.v1.InstanceAdmin.ListInstances].
 *
 * @generated from message google.spanner.admin.instance.v1.ListInstancesRequest
 */
export type ListInstancesRequest = Message<"google.spanner.admin.instance.v1.ListInstancesRequest"> & {
  /**
   * Required. The name of the project for which a list of instances is
   * requested. Values are of the form `projects/<project>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Number of instances to be returned in the response. If 0 or less, defaults
   * to the server's maximum allowed page size.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * If non-empty, `page_token` should contain a
   * [next_page_token][google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token]
   * from a previous
   * [ListInstancesResponse][google.spanner.admin.instance.v1.ListInstancesResponse].
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * An expression for filtering the results of the request. Filter rules are
   * case insensitive. The fields eligible for filtering are:
   *
   *   * `name`
   *   * `display_name`
   *   * `labels.key` where key is the name of a label
   *
   * Some examples of using filters are:
   *
   *   * `name:*` --> The instance has a name.
   *   * `name:Howl` --> The instance's name contains the string "howl".
   *   * `name:HOWL` --> Equivalent to above.
   *   * `NAME:howl` --> Equivalent to above.
   *   * `labels.env:*` --> The instance has the label "env".
   *   * `labels.env:dev` --> The instance has the label "env" and the value of
   *                        the label contains the string "dev".
   *   * `name:howl labels.env:dev` --> The instance's name contains "howl" and
   *                                  it has the label "env" with its value
   *                                  containing "dev".
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Deadline used while retrieving metadata for instances.
   * Instances whose metadata cannot be retrieved within this deadline will be
   * added to
   * [unreachable][google.spanner.admin.instance.v1.ListInstancesResponse.unreachable]
   * in
   * [ListInstancesResponse][google.spanner.admin.instance.v1.ListInstancesResponse].
   *
   * @generated from field: google.protobuf.Timestamp instance_deadline = 5;
   */
  instanceDeadline?: Timestamp;
};

/**
 * Describes the message google.spanner.admin.instance.v1.ListInstancesRequest.
 * Use `create(ListInstancesRequestSchema)` to create a new message.
 */
export const ListInstancesRequestSchema: GenMessage<ListInstancesRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 14);

/**
 * The response for
 * [ListInstances][google.spanner.admin.instance.v1.InstanceAdmin.ListInstances].
 *
 * @generated from message google.spanner.admin.instance.v1.ListInstancesResponse
 */
export type ListInstancesResponse = Message<"google.spanner.admin.instance.v1.ListInstancesResponse"> & {
  /**
   * The list of requested instances.
   *
   * @generated from field: repeated google.spanner.admin.instance.v1.Instance instances = 1;
   */
  instances: Instance[];

  /**
   * `next_page_token` can be sent in a subsequent
   * [ListInstances][google.spanner.admin.instance.v1.InstanceAdmin.ListInstances]
   * call to fetch more of the matching instances.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * The list of unreachable instances.
   * It includes the names of instances whose metadata could not be retrieved
   * within
   * [instance_deadline][google.spanner.admin.instance.v1.ListInstancesRequest.instance_deadline].
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.spanner.admin.instance.v1.ListInstancesResponse.
 * Use `create(ListInstancesResponseSchema)` to create a new message.
 */
export const ListInstancesResponseSchema: GenMessage<ListInstancesResponse> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 15);

/**
 * The request for
 * [UpdateInstance][google.spanner.admin.instance.v1.InstanceAdmin.UpdateInstance].
 *
 * @generated from message google.spanner.admin.instance.v1.UpdateInstanceRequest
 */
export type UpdateInstanceRequest = Message<"google.spanner.admin.instance.v1.UpdateInstanceRequest"> & {
  /**
   * Required. The instance to update, which must always include the instance
   * name.  Otherwise, only fields mentioned in
   * [field_mask][google.spanner.admin.instance.v1.UpdateInstanceRequest.field_mask]
   * need be included.
   *
   * @generated from field: google.spanner.admin.instance.v1.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Required. A mask specifying which fields in
   * [Instance][google.spanner.admin.instance.v1.Instance] should be updated.
   * The field mask must always be specified; this prevents any future fields in
   * [Instance][google.spanner.admin.instance.v1.Instance] from being erased
   * accidentally by clients that do not know about them.
   *
   * @generated from field: google.protobuf.FieldMask field_mask = 2;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message google.spanner.admin.instance.v1.UpdateInstanceRequest.
 * Use `create(UpdateInstanceRequestSchema)` to create a new message.
 */
export const UpdateInstanceRequestSchema: GenMessage<UpdateInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 16);

/**
 * The request for
 * [DeleteInstance][google.spanner.admin.instance.v1.InstanceAdmin.DeleteInstance].
 *
 * @generated from message google.spanner.admin.instance.v1.DeleteInstanceRequest
 */
export type DeleteInstanceRequest = Message<"google.spanner.admin.instance.v1.DeleteInstanceRequest"> & {
  /**
   * Required. The name of the instance to be deleted. Values are of the form
   * `projects/<project>/instances/<instance>`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.spanner.admin.instance.v1.DeleteInstanceRequest.
 * Use `create(DeleteInstanceRequestSchema)` to create a new message.
 */
export const DeleteInstanceRequestSchema: GenMessage<DeleteInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 17);

/**
 * Metadata type for the operation returned by
 * [CreateInstance][google.spanner.admin.instance.v1.InstanceAdmin.CreateInstance].
 *
 * @generated from message google.spanner.admin.instance.v1.CreateInstanceMetadata
 */
export type CreateInstanceMetadata = Message<"google.spanner.admin.instance.v1.CreateInstanceMetadata"> & {
  /**
   * The instance being created.
   *
   * @generated from field: google.spanner.admin.instance.v1.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * The time at which the
   * [CreateInstance][google.spanner.admin.instance.v1.InstanceAdmin.CreateInstance]
   * request was received.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * The time at which this operation was cancelled. If set, this operation is
   * in the process of undoing itself (which is guaranteed to succeed) and
   * cannot be cancelled again.
   *
   * @generated from field: google.protobuf.Timestamp cancel_time = 3;
   */
  cancelTime?: Timestamp;

  /**
   * The time at which this operation failed or was completed successfully.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 4;
   */
  endTime?: Timestamp;

  /**
   * The expected fulfillment period of this create operation.
   *
   * @generated from field: google.spanner.admin.instance.v1.FulfillmentPeriod expected_fulfillment_period = 5;
   */
  expectedFulfillmentPeriod: FulfillmentPeriod;
};

/**
 * Describes the message google.spanner.admin.instance.v1.CreateInstanceMetadata.
 * Use `create(CreateInstanceMetadataSchema)` to create a new message.
 */
export const CreateInstanceMetadataSchema: GenMessage<CreateInstanceMetadata> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 18);

/**
 * Metadata type for the operation returned by
 * [UpdateInstance][google.spanner.admin.instance.v1.InstanceAdmin.UpdateInstance].
 *
 * @generated from message google.spanner.admin.instance.v1.UpdateInstanceMetadata
 */
export type UpdateInstanceMetadata = Message<"google.spanner.admin.instance.v1.UpdateInstanceMetadata"> & {
  /**
   * The desired end state of the update.
   *
   * @generated from field: google.spanner.admin.instance.v1.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * The time at which
   * [UpdateInstance][google.spanner.admin.instance.v1.InstanceAdmin.UpdateInstance]
   * request was received.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * The time at which this operation was cancelled. If set, this operation is
   * in the process of undoing itself (which is guaranteed to succeed) and
   * cannot be cancelled again.
   *
   * @generated from field: google.protobuf.Timestamp cancel_time = 3;
   */
  cancelTime?: Timestamp;

  /**
   * The time at which this operation failed or was completed successfully.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 4;
   */
  endTime?: Timestamp;

  /**
   * The expected fulfillment period of this update operation.
   *
   * @generated from field: google.spanner.admin.instance.v1.FulfillmentPeriod expected_fulfillment_period = 5;
   */
  expectedFulfillmentPeriod: FulfillmentPeriod;
};

/**
 * Describes the message google.spanner.admin.instance.v1.UpdateInstanceMetadata.
 * Use `create(UpdateInstanceMetadataSchema)` to create a new message.
 */
export const UpdateInstanceMetadataSchema: GenMessage<UpdateInstanceMetadata> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 19);

/**
 * Metadata type for the operation returned by
 * [CreateInstanceConfig][google.spanner.admin.instance.v1.InstanceAdmin.CreateInstanceConfig].
 *
 * @generated from message google.spanner.admin.instance.v1.CreateInstanceConfigMetadata
 */
export type CreateInstanceConfigMetadata = Message<"google.spanner.admin.instance.v1.CreateInstanceConfigMetadata"> & {
  /**
   * The target instance configuration end state.
   *
   * @generated from field: google.spanner.admin.instance.v1.InstanceConfig instance_config = 1;
   */
  instanceConfig?: InstanceConfig;

  /**
   * The progress of the
   * [CreateInstanceConfig][google.spanner.admin.instance.v1.InstanceAdmin.CreateInstanceConfig]
   * operation.
   *
   * @generated from field: google.spanner.admin.instance.v1.OperationProgress progress = 2;
   */
  progress?: OperationProgress;

  /**
   * The time at which this operation was cancelled.
   *
   * @generated from field: google.protobuf.Timestamp cancel_time = 3;
   */
  cancelTime?: Timestamp;
};

/**
 * Describes the message google.spanner.admin.instance.v1.CreateInstanceConfigMetadata.
 * Use `create(CreateInstanceConfigMetadataSchema)` to create a new message.
 */
export const CreateInstanceConfigMetadataSchema: GenMessage<CreateInstanceConfigMetadata> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 20);

/**
 * Metadata type for the operation returned by
 * [UpdateInstanceConfig][google.spanner.admin.instance.v1.InstanceAdmin.UpdateInstanceConfig].
 *
 * @generated from message google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata
 */
export type UpdateInstanceConfigMetadata = Message<"google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata"> & {
  /**
   * The desired instance configuration after updating.
   *
   * @generated from field: google.spanner.admin.instance.v1.InstanceConfig instance_config = 1;
   */
  instanceConfig?: InstanceConfig;

  /**
   * The progress of the
   * [UpdateInstanceConfig][google.spanner.admin.instance.v1.InstanceAdmin.UpdateInstanceConfig]
   * operation.
   *
   * @generated from field: google.spanner.admin.instance.v1.OperationProgress progress = 2;
   */
  progress?: OperationProgress;

  /**
   * The time at which this operation was cancelled.
   *
   * @generated from field: google.protobuf.Timestamp cancel_time = 3;
   */
  cancelTime?: Timestamp;
};

/**
 * Describes the message google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata.
 * Use `create(UpdateInstanceConfigMetadataSchema)` to create a new message.
 */
export const UpdateInstanceConfigMetadataSchema: GenMessage<UpdateInstanceConfigMetadata> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 21);

/**
 * An isolated set of Cloud Spanner resources that databases can define
 * placements on.
 *
 * @generated from message google.spanner.admin.instance.v1.InstancePartition
 */
export type InstancePartition = Message<"google.spanner.admin.instance.v1.InstancePartition"> & {
  /**
   * Required. A unique identifier for the instance partition. Values are of the
   * form
   * `projects/<project>/instances/<instance>/instancePartitions/[a-z][-a-z0-9]*[a-z0-9]`.
   * The final segment of the name must be between 2 and 64 characters in
   * length. An instance partition's name cannot be changed after the instance
   * partition is created.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The name of the instance partition's configuration. Values are of
   * the form `projects/<project>/instanceConfigs/<configuration>`. See also
   * [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig] and
   * [ListInstanceConfigs][google.spanner.admin.instance.v1.InstanceAdmin.ListInstanceConfigs].
   *
   * @generated from field: string config = 2;
   */
  config: string;

  /**
   * Required. The descriptive name for this instance partition as it appears in
   * UIs. Must be unique per project and between 4 and 30 characters in length.
   *
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * Compute capacity defines amount of server and storage resources that are
   * available to the databases in an instance partition. At most one of either
   * node_count or processing_units should be present in the message. See [the
   * documentation](https://cloud.google.com/spanner/docs/compute-capacity)
   * for more information about nodes and processing units.
   *
   * @generated from oneof google.spanner.admin.instance.v1.InstancePartition.compute_capacity
   */
  computeCapacity: {
    /**
     * The number of nodes allocated to this instance partition.
     *
     * Users can set the node_count field to specify the target number of nodes
     * allocated to the instance partition.
     *
     * This may be zero in API responses for instance partitions that are not
     * yet in state `READY`.
     *
     * @generated from field: int32 node_count = 5;
     */
    value: number;
    case: "nodeCount";
  } | {
    /**
     * The number of processing units allocated to this instance partition.
     *
     * Users can set the processing_units field to specify the target number of
     * processing units allocated to the instance partition.
     *
     * This may be zero in API responses for instance partitions that are not
     * yet in state `READY`.
     *
     * @generated from field: int32 processing_units = 6;
     */
    value: number;
    case: "processingUnits";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. The current instance partition state.
   *
   * @generated from field: google.spanner.admin.instance.v1.InstancePartition.State state = 7;
   */
  state: InstancePartition_State;

  /**
   * Output only. The time at which the instance partition was created.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 8;
   */
  createTime?: Timestamp;

  /**
   * Output only. The time at which the instance partition was most recently
   * updated.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 9;
   */
  updateTime?: Timestamp;

  /**
   * Output only. The names of the databases that reference this
   * instance partition. Referencing databases should share the parent instance.
   * The existence of any referencing database prevents the instance partition
   * from being deleted.
   *
   * @generated from field: repeated string referencing_databases = 10;
   */
  referencingDatabases: string[];

  /**
   * Output only. The names of the backups that reference this instance
   * partition. Referencing backups should share the parent instance. The
   * existence of any referencing backup prevents the instance partition from
   * being deleted.
   *
   * @generated from field: repeated string referencing_backups = 11;
   */
  referencingBackups: string[];

  /**
   * Used for optimistic concurrency control as a way
   * to help prevent simultaneous updates of a instance partition from
   * overwriting each other. It is strongly suggested that systems make use of
   * the etag in the read-modify-write cycle to perform instance partition
   * updates in order to avoid race conditions: An etag is returned in the
   * response which contains instance partitions, and systems are expected to
   * put that etag in the request to update instance partitions to ensure that
   * their change will be applied to the same version of the instance partition.
   * If no etag is provided in the call to update instance partition, then the
   * existing instance partition is overwritten blindly.
   *
   * @generated from field: string etag = 12;
   */
  etag: string;
};

/**
 * Describes the message google.spanner.admin.instance.v1.InstancePartition.
 * Use `create(InstancePartitionSchema)` to create a new message.
 */
export const InstancePartitionSchema: GenMessage<InstancePartition> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 22);

/**
 * Indicates the current state of the instance partition.
 *
 * @generated from enum google.spanner.admin.instance.v1.InstancePartition.State
 */
export enum InstancePartition_State {
  /**
   * Not specified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The instance partition is still being created. Resources may not be
   * available yet, and operations such as creating placements using this
   * instance partition may not work.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The instance partition is fully created and ready to do work such as
   * creating placements and using in databases.
   *
   * @generated from enum value: READY = 2;
   */
  READY = 2,
}

/**
 * Describes the enum google.spanner.admin.instance.v1.InstancePartition.State.
 */
export const InstancePartition_StateSchema: GenEnum<InstancePartition_State> = /*@__PURE__*/
  enumDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 22, 0);

/**
 * Metadata type for the operation returned by
 * [CreateInstancePartition][google.spanner.admin.instance.v1.InstanceAdmin.CreateInstancePartition].
 *
 * @generated from message google.spanner.admin.instance.v1.CreateInstancePartitionMetadata
 */
export type CreateInstancePartitionMetadata = Message<"google.spanner.admin.instance.v1.CreateInstancePartitionMetadata"> & {
  /**
   * The instance partition being created.
   *
   * @generated from field: google.spanner.admin.instance.v1.InstancePartition instance_partition = 1;
   */
  instancePartition?: InstancePartition;

  /**
   * The time at which the
   * [CreateInstancePartition][google.spanner.admin.instance.v1.InstanceAdmin.CreateInstancePartition]
   * request was received.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * The time at which this operation was cancelled. If set, this operation is
   * in the process of undoing itself (which is guaranteed to succeed) and
   * cannot be cancelled again.
   *
   * @generated from field: google.protobuf.Timestamp cancel_time = 3;
   */
  cancelTime?: Timestamp;

  /**
   * The time at which this operation failed or was completed successfully.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 4;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.spanner.admin.instance.v1.CreateInstancePartitionMetadata.
 * Use `create(CreateInstancePartitionMetadataSchema)` to create a new message.
 */
export const CreateInstancePartitionMetadataSchema: GenMessage<CreateInstancePartitionMetadata> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 23);

/**
 * The request for
 * [CreateInstancePartition][google.spanner.admin.instance.v1.InstanceAdmin.CreateInstancePartition].
 *
 * @generated from message google.spanner.admin.instance.v1.CreateInstancePartitionRequest
 */
export type CreateInstancePartitionRequest = Message<"google.spanner.admin.instance.v1.CreateInstancePartitionRequest"> & {
  /**
   * Required. The name of the instance in which to create the instance
   * partition. Values are of the form
   * `projects/<project>/instances/<instance>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The ID of the instance partition to create. Valid identifiers are
   * of the form `[a-z][-a-z0-9]*[a-z0-9]` and must be between 2 and 64
   * characters in length.
   *
   * @generated from field: string instance_partition_id = 2;
   */
  instancePartitionId: string;

  /**
   * Required. The instance partition to create. The instance_partition.name may
   * be omitted, but if specified must be
   * `<parent>/instancePartitions/<instance_partition_id>`.
   *
   * @generated from field: google.spanner.admin.instance.v1.InstancePartition instance_partition = 3;
   */
  instancePartition?: InstancePartition;
};

/**
 * Describes the message google.spanner.admin.instance.v1.CreateInstancePartitionRequest.
 * Use `create(CreateInstancePartitionRequestSchema)` to create a new message.
 */
export const CreateInstancePartitionRequestSchema: GenMessage<CreateInstancePartitionRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 24);

/**
 * The request for
 * [DeleteInstancePartition][google.spanner.admin.instance.v1.InstanceAdmin.DeleteInstancePartition].
 *
 * @generated from message google.spanner.admin.instance.v1.DeleteInstancePartitionRequest
 */
export type DeleteInstancePartitionRequest = Message<"google.spanner.admin.instance.v1.DeleteInstancePartitionRequest"> & {
  /**
   * Required. The name of the instance partition to be deleted.
   * Values are of the form
   * `projects/{project}/instances/{instance}/instancePartitions/{instance_partition}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. If not empty, the API only deletes the instance partition when
   * the etag provided matches the current status of the requested instance
   * partition. Otherwise, deletes the instance partition without checking the
   * current status of the requested instance partition.
   *
   * @generated from field: string etag = 2;
   */
  etag: string;
};

/**
 * Describes the message google.spanner.admin.instance.v1.DeleteInstancePartitionRequest.
 * Use `create(DeleteInstancePartitionRequestSchema)` to create a new message.
 */
export const DeleteInstancePartitionRequestSchema: GenMessage<DeleteInstancePartitionRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 25);

/**
 * The request for
 * [GetInstancePartition][google.spanner.admin.instance.v1.InstanceAdmin.GetInstancePartition].
 *
 * @generated from message google.spanner.admin.instance.v1.GetInstancePartitionRequest
 */
export type GetInstancePartitionRequest = Message<"google.spanner.admin.instance.v1.GetInstancePartitionRequest"> & {
  /**
   * Required. The name of the requested instance partition. Values are of
   * the form
   * `projects/{project}/instances/{instance}/instancePartitions/{instance_partition}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.spanner.admin.instance.v1.GetInstancePartitionRequest.
 * Use `create(GetInstancePartitionRequestSchema)` to create a new message.
 */
export const GetInstancePartitionRequestSchema: GenMessage<GetInstancePartitionRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 26);

/**
 * The request for
 * [UpdateInstancePartition][google.spanner.admin.instance.v1.InstanceAdmin.UpdateInstancePartition].
 *
 * @generated from message google.spanner.admin.instance.v1.UpdateInstancePartitionRequest
 */
export type UpdateInstancePartitionRequest = Message<"google.spanner.admin.instance.v1.UpdateInstancePartitionRequest"> & {
  /**
   * Required. The instance partition to update, which must always include the
   * instance partition name. Otherwise, only fields mentioned in
   * [field_mask][google.spanner.admin.instance.v1.UpdateInstancePartitionRequest.field_mask]
   * need be included.
   *
   * @generated from field: google.spanner.admin.instance.v1.InstancePartition instance_partition = 1;
   */
  instancePartition?: InstancePartition;

  /**
   * Required. A mask specifying which fields in
   * [InstancePartition][google.spanner.admin.instance.v1.InstancePartition]
   * should be updated. The field mask must always be specified; this prevents
   * any future fields in
   * [InstancePartition][google.spanner.admin.instance.v1.InstancePartition]
   * from being erased accidentally by clients that do not know about them.
   *
   * @generated from field: google.protobuf.FieldMask field_mask = 2;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message google.spanner.admin.instance.v1.UpdateInstancePartitionRequest.
 * Use `create(UpdateInstancePartitionRequestSchema)` to create a new message.
 */
export const UpdateInstancePartitionRequestSchema: GenMessage<UpdateInstancePartitionRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 27);

/**
 * Metadata type for the operation returned by
 * [UpdateInstancePartition][google.spanner.admin.instance.v1.InstanceAdmin.UpdateInstancePartition].
 *
 * @generated from message google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata
 */
export type UpdateInstancePartitionMetadata = Message<"google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata"> & {
  /**
   * The desired end state of the update.
   *
   * @generated from field: google.spanner.admin.instance.v1.InstancePartition instance_partition = 1;
   */
  instancePartition?: InstancePartition;

  /**
   * The time at which
   * [UpdateInstancePartition][google.spanner.admin.instance.v1.InstanceAdmin.UpdateInstancePartition]
   * request was received.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * The time at which this operation was cancelled. If set, this operation is
   * in the process of undoing itself (which is guaranteed to succeed) and
   * cannot be cancelled again.
   *
   * @generated from field: google.protobuf.Timestamp cancel_time = 3;
   */
  cancelTime?: Timestamp;

  /**
   * The time at which this operation failed or was completed successfully.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 4;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata.
 * Use `create(UpdateInstancePartitionMetadataSchema)` to create a new message.
 */
export const UpdateInstancePartitionMetadataSchema: GenMessage<UpdateInstancePartitionMetadata> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 28);

/**
 * The request for
 * [ListInstancePartitions][google.spanner.admin.instance.v1.InstanceAdmin.ListInstancePartitions].
 *
 * @generated from message google.spanner.admin.instance.v1.ListInstancePartitionsRequest
 */
export type ListInstancePartitionsRequest = Message<"google.spanner.admin.instance.v1.ListInstancePartitionsRequest"> & {
  /**
   * Required. The instance whose instance partitions should be listed. Values
   * are of the form `projects/<project>/instances/<instance>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Number of instance partitions to be returned in the response. If 0 or less,
   * defaults to the server's maximum allowed page size.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * If non-empty, `page_token` should contain a
   * [next_page_token][google.spanner.admin.instance.v1.ListInstancePartitionsResponse.next_page_token]
   * from a previous
   * [ListInstancePartitionsResponse][google.spanner.admin.instance.v1.ListInstancePartitionsResponse].
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Deadline used while retrieving metadata for instance partitions.
   * Instance partitions whose metadata cannot be retrieved within this deadline
   * will be added to
   * [unreachable][google.spanner.admin.instance.v1.ListInstancePartitionsResponse.unreachable]
   * in
   * [ListInstancePartitionsResponse][google.spanner.admin.instance.v1.ListInstancePartitionsResponse].
   *
   * @generated from field: google.protobuf.Timestamp instance_partition_deadline = 4;
   */
  instancePartitionDeadline?: Timestamp;
};

/**
 * Describes the message google.spanner.admin.instance.v1.ListInstancePartitionsRequest.
 * Use `create(ListInstancePartitionsRequestSchema)` to create a new message.
 */
export const ListInstancePartitionsRequestSchema: GenMessage<ListInstancePartitionsRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 29);

/**
 * The response for
 * [ListInstancePartitions][google.spanner.admin.instance.v1.InstanceAdmin.ListInstancePartitions].
 *
 * @generated from message google.spanner.admin.instance.v1.ListInstancePartitionsResponse
 */
export type ListInstancePartitionsResponse = Message<"google.spanner.admin.instance.v1.ListInstancePartitionsResponse"> & {
  /**
   * The list of requested instancePartitions.
   *
   * @generated from field: repeated google.spanner.admin.instance.v1.InstancePartition instance_partitions = 1;
   */
  instancePartitions: InstancePartition[];

  /**
   * `next_page_token` can be sent in a subsequent
   * [ListInstancePartitions][google.spanner.admin.instance.v1.InstanceAdmin.ListInstancePartitions]
   * call to fetch more of the matching instance partitions.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * The list of unreachable instance partitions.
   * It includes the names of instance partitions whose metadata could
   * not be retrieved within
   * [instance_partition_deadline][google.spanner.admin.instance.v1.ListInstancePartitionsRequest.instance_partition_deadline].
   *
   * @generated from field: repeated string unreachable = 3;
   */
  unreachable: string[];
};

/**
 * Describes the message google.spanner.admin.instance.v1.ListInstancePartitionsResponse.
 * Use `create(ListInstancePartitionsResponseSchema)` to create a new message.
 */
export const ListInstancePartitionsResponseSchema: GenMessage<ListInstancePartitionsResponse> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 30);

/**
 * The request for
 * [ListInstancePartitionOperations][google.spanner.admin.instance.v1.InstanceAdmin.ListInstancePartitionOperations].
 *
 * @generated from message google.spanner.admin.instance.v1.ListInstancePartitionOperationsRequest
 */
export type ListInstancePartitionOperationsRequest = Message<"google.spanner.admin.instance.v1.ListInstancePartitionOperationsRequest"> & {
  /**
   * Required. The parent instance of the instance partition operations.
   * Values are of the form `projects/<project>/instances/<instance>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. An expression that filters the list of returned operations.
   *
   * A filter expression consists of a field name, a
   * comparison operator, and a value for filtering.
   * The value must be a string, a number, or a boolean. The comparison operator
   * must be one of: `<`, `>`, `<=`, `>=`, `!=`, `=`, or `:`.
   * Colon `:` is the contains operator. Filter rules are not case sensitive.
   *
   * The following fields in the [Operation][google.longrunning.Operation]
   * are eligible for filtering:
   *
   *   * `name` - The name of the long-running operation
   *   * `done` - False if the operation is in progress, else true.
   *   * `metadata.@type` - the type of metadata. For example, the type string
   *      for
   *      [CreateInstancePartitionMetadata][google.spanner.admin.instance.v1.CreateInstancePartitionMetadata]
   *      is
   *      `type.googleapis.com/google.spanner.admin.instance.v1.CreateInstancePartitionMetadata`.
   *   * `metadata.<field_name>` - any field in metadata.value.
   *      `metadata.@type` must be specified first, if filtering on metadata
   *      fields.
   *   * `error` - Error associated with the long-running operation.
   *   * `response.@type` - the type of response.
   *   * `response.<field_name>` - any field in response.value.
   *
   * You can combine multiple expressions by enclosing each expression in
   * parentheses. By default, expressions are combined with AND logic. However,
   * you can specify AND, OR, and NOT logic explicitly.
   *
   * Here are a few examples:
   *
   *   * `done:true` - The operation is complete.
   *   * `(metadata.@type=` \
   *     `type.googleapis.com/google.spanner.admin.instance.v1.CreateInstancePartitionMetadata)
   *     AND` \
   *     `(metadata.instance_partition.name:custom-instance-partition) AND` \
   *     `(metadata.start_time < \"2021-03-28T14:50:00Z\") AND` \
   *     `(error:*)` - Return operations where:
   *     * The operation's metadata type is
   *     [CreateInstancePartitionMetadata][google.spanner.admin.instance.v1.CreateInstancePartitionMetadata].
   *     * The instance partition name contains "custom-instance-partition".
   *     * The operation started before 2021-03-28T14:50:00Z.
   *     * The operation resulted in an error.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Optional. Number of operations to be returned in the response. If 0 or
   * less, defaults to the server's maximum allowed page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * Optional. If non-empty, `page_token` should contain a
   * [next_page_token][google.spanner.admin.instance.v1.ListInstancePartitionOperationsResponse.next_page_token]
   * from a previous
   * [ListInstancePartitionOperationsResponse][google.spanner.admin.instance.v1.ListInstancePartitionOperationsResponse]
   * to the same `parent` and with the same `filter`.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Optional. Deadline used while retrieving metadata for instance partition
   * operations. Instance partitions whose operation metadata cannot be
   * retrieved within this deadline will be added to
   * [unreachable][ListInstancePartitionOperationsResponse.unreachable] in
   * [ListInstancePartitionOperationsResponse][google.spanner.admin.instance.v1.ListInstancePartitionOperationsResponse].
   *
   * @generated from field: google.protobuf.Timestamp instance_partition_deadline = 5;
   */
  instancePartitionDeadline?: Timestamp;
};

/**
 * Describes the message google.spanner.admin.instance.v1.ListInstancePartitionOperationsRequest.
 * Use `create(ListInstancePartitionOperationsRequestSchema)` to create a new message.
 */
export const ListInstancePartitionOperationsRequestSchema: GenMessage<ListInstancePartitionOperationsRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 31);

/**
 * The response for
 * [ListInstancePartitionOperations][google.spanner.admin.instance.v1.InstanceAdmin.ListInstancePartitionOperations].
 *
 * @generated from message google.spanner.admin.instance.v1.ListInstancePartitionOperationsResponse
 */
export type ListInstancePartitionOperationsResponse = Message<"google.spanner.admin.instance.v1.ListInstancePartitionOperationsResponse"> & {
  /**
   * The list of matching instance partition [long-running
   * operations][google.longrunning.Operation]. Each operation's name will be
   * prefixed by the instance partition's name. The operation's
   * [metadata][google.longrunning.Operation.metadata] field type
   * `metadata.type_url` describes the type of the metadata.
   *
   * @generated from field: repeated google.longrunning.Operation operations = 1;
   */
  operations: Operation[];

  /**
   * `next_page_token` can be sent in a subsequent
   * [ListInstancePartitionOperations][google.spanner.admin.instance.v1.InstanceAdmin.ListInstancePartitionOperations]
   * call to fetch more of the matching metadata.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * The list of unreachable instance partitions.
   * It includes the names of instance partitions whose operation metadata could
   * not be retrieved within
   * [instance_partition_deadline][google.spanner.admin.instance.v1.ListInstancePartitionOperationsRequest.instance_partition_deadline].
   *
   * @generated from field: repeated string unreachable_instance_partitions = 3;
   */
  unreachableInstancePartitions: string[];
};

/**
 * Describes the message google.spanner.admin.instance.v1.ListInstancePartitionOperationsResponse.
 * Use `create(ListInstancePartitionOperationsResponseSchema)` to create a new message.
 */
export const ListInstancePartitionOperationsResponseSchema: GenMessage<ListInstancePartitionOperationsResponse> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 32);

/**
 * The request for
 * [MoveInstance][google.spanner.admin.instance.v1.InstanceAdmin.MoveInstance].
 *
 * @generated from message google.spanner.admin.instance.v1.MoveInstanceRequest
 */
export type MoveInstanceRequest = Message<"google.spanner.admin.instance.v1.MoveInstanceRequest"> & {
  /**
   * Required. The instance to move.
   * Values are of the form `projects/<project>/instances/<instance>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The target instance configuration where to move the instance.
   * Values are of the form `projects/<project>/instanceConfigs/<config>`.
   *
   * @generated from field: string target_config = 2;
   */
  targetConfig: string;
};

/**
 * Describes the message google.spanner.admin.instance.v1.MoveInstanceRequest.
 * Use `create(MoveInstanceRequestSchema)` to create a new message.
 */
export const MoveInstanceRequestSchema: GenMessage<MoveInstanceRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 33);

/**
 * The response for
 * [MoveInstance][google.spanner.admin.instance.v1.InstanceAdmin.MoveInstance].
 *
 * @generated from message google.spanner.admin.instance.v1.MoveInstanceResponse
 */
export type MoveInstanceResponse = Message<"google.spanner.admin.instance.v1.MoveInstanceResponse"> & {
};

/**
 * Describes the message google.spanner.admin.instance.v1.MoveInstanceResponse.
 * Use `create(MoveInstanceResponseSchema)` to create a new message.
 */
export const MoveInstanceResponseSchema: GenMessage<MoveInstanceResponse> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 34);

/**
 * Metadata type for the operation returned by
 * [MoveInstance][google.spanner.admin.instance.v1.InstanceAdmin.MoveInstance].
 *
 * @generated from message google.spanner.admin.instance.v1.MoveInstanceMetadata
 */
export type MoveInstanceMetadata = Message<"google.spanner.admin.instance.v1.MoveInstanceMetadata"> & {
  /**
   * The target instance configuration where to move the instance.
   * Values are of the form `projects/<project>/instanceConfigs/<config>`.
   *
   * @generated from field: string target_config = 1;
   */
  targetConfig: string;

  /**
   * The progress of the
   * [MoveInstance][google.spanner.admin.instance.v1.InstanceAdmin.MoveInstance]
   * operation.
   * [progress_percent][google.spanner.admin.instance.v1.OperationProgress.progress_percent]
   * is reset when cancellation is requested.
   *
   * @generated from field: google.spanner.admin.instance.v1.OperationProgress progress = 2;
   */
  progress?: OperationProgress;

  /**
   * The time at which this operation was cancelled.
   *
   * @generated from field: google.protobuf.Timestamp cancel_time = 3;
   */
  cancelTime?: Timestamp;
};

/**
 * Describes the message google.spanner.admin.instance.v1.MoveInstanceMetadata.
 * Use `create(MoveInstanceMetadataSchema)` to create a new message.
 */
export const MoveInstanceMetadataSchema: GenMessage<MoveInstanceMetadata> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 35);

/**
 * Cloud Spanner Instance Admin API
 *
 * The Cloud Spanner Instance Admin API can be used to create, delete,
 * modify and list instances. Instances are dedicated Cloud Spanner serving
 * and storage resources to be used by Cloud Spanner databases.
 *
 * Each instance has a "configuration", which dictates where the
 * serving resources for the Cloud Spanner instance are located (e.g.,
 * US-central, Europe). Configurations are created by Google based on
 * resource availability.
 *
 * Cloud Spanner billing is based on the instances that exist and their
 * sizes. After an instance exists, there are no additional
 * per-database or per-operation charges for use of the instance
 * (though there may be additional network bandwidth charges).
 * Instances offer isolation: problems with databases in one instance
 * will not affect other instances. However, within an instance
 * databases can affect each other. For example, if one database in an
 * instance receives a lot of requests and consumes most of the
 * instance resources, fewer resources are available for other
 * databases in that instance, and their performance may suffer.
 *
 * @generated from service google.spanner.admin.instance.v1.InstanceAdmin
 */
export const InstanceAdmin: GenService<{
  /**
   * Lists the supported instance configurations for a given project.
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.ListInstanceConfigs
   */
  listInstanceConfigs: {
    methodKind: "unary";
    input: typeof ListInstanceConfigsRequestSchema;
    output: typeof ListInstanceConfigsResponseSchema;
  },
  /**
   * Gets information about a particular instance configuration.
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.GetInstanceConfig
   */
  getInstanceConfig: {
    methodKind: "unary";
    input: typeof GetInstanceConfigRequestSchema;
    output: typeof InstanceConfigSchema;
  },
  /**
   * Creates an instance configuration and begins preparing it to be used. The
   * returned [long-running operation][google.longrunning.Operation]
   * can be used to track the progress of preparing the new
   * instance configuration. The instance configuration name is assigned by the
   * caller. If the named instance configuration already exists,
   * `CreateInstanceConfig` returns `ALREADY_EXISTS`.
   *
   * Immediately after the request returns:
   *
   *   * The instance configuration is readable via the API, with all requested
   *     attributes. The instance configuration's
   *     [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
   *     field is set to true. Its state is `CREATING`.
   *
   * While the operation is pending:
   *
   *   * Cancelling the operation renders the instance configuration immediately
   *     unreadable via the API.
   *   * Except for deleting the creating resource, all other attempts to modify
   *     the instance configuration are rejected.
   *
   * Upon completion of the returned operation:
   *
   *   * Instances can be created using the instance configuration.
   *   * The instance configuration's
   *   [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
   *   field becomes false. Its state becomes `READY`.
   *
   * The returned [long-running operation][google.longrunning.Operation] will
   * have a name of the format
   * `<instance_config_name>/operations/<operation_id>` and can be used to track
   * creation of the instance configuration. The
   * [metadata][google.longrunning.Operation.metadata] field type is
   * [CreateInstanceConfigMetadata][google.spanner.admin.instance.v1.CreateInstanceConfigMetadata].
   * The [response][google.longrunning.Operation.response] field type is
   * [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig], if
   * successful.
   *
   * Authorization requires `spanner.instanceConfigs.create` permission on
   * the resource
   * [parent][google.spanner.admin.instance.v1.CreateInstanceConfigRequest.parent].
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.CreateInstanceConfig
   */
  createInstanceConfig: {
    methodKind: "unary";
    input: typeof CreateInstanceConfigRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates an instance configuration. The returned
   * [long-running operation][google.longrunning.Operation] can be used to track
   * the progress of updating the instance. If the named instance configuration
   * does not exist, returns `NOT_FOUND`.
   *
   * Only user-managed configurations can be updated.
   *
   * Immediately after the request returns:
   *
   *   * The instance configuration's
   *     [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
   *     field is set to true.
   *
   * While the operation is pending:
   *
   *   * Cancelling the operation sets its metadata's
   *     [cancel_time][google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata.cancel_time].
   *     The operation is guaranteed to succeed at undoing all changes, after
   *     which point it terminates with a `CANCELLED` status.
   *   * All other attempts to modify the instance configuration are rejected.
   *   * Reading the instance configuration via the API continues to give the
   *     pre-request values.
   *
   * Upon completion of the returned operation:
   *
   *   * Creating instances using the instance configuration uses the new
   *     values.
   *   * The new values of the instance configuration are readable via the API.
   *   * The instance configuration's
   *   [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
   *   field becomes false.
   *
   * The returned [long-running operation][google.longrunning.Operation] will
   * have a name of the format
   * `<instance_config_name>/operations/<operation_id>` and can be used to track
   * the instance configuration modification.  The
   * [metadata][google.longrunning.Operation.metadata] field type is
   * [UpdateInstanceConfigMetadata][google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata].
   * The [response][google.longrunning.Operation.response] field type is
   * [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig], if
   * successful.
   *
   * Authorization requires `spanner.instanceConfigs.update` permission on
   * the resource [name][google.spanner.admin.instance.v1.InstanceConfig.name].
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.UpdateInstanceConfig
   */
  updateInstanceConfig: {
    methodKind: "unary";
    input: typeof UpdateInstanceConfigRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes the instance configuration. Deletion is only allowed when no
   * instances are using the configuration. If any instances are using
   * the configuration, returns `FAILED_PRECONDITION`.
   *
   * Only user-managed configurations can be deleted.
   *
   * Authorization requires `spanner.instanceConfigs.delete` permission on
   * the resource [name][google.spanner.admin.instance.v1.InstanceConfig.name].
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.DeleteInstanceConfig
   */
  deleteInstanceConfig: {
    methodKind: "unary";
    input: typeof DeleteInstanceConfigRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists the user-managed instance configuration [long-running
   * operations][google.longrunning.Operation] in the given project. An instance
   * configuration operation has a name of the form
   * `projects/<project>/instanceConfigs/<instance_config>/operations/<operation>`.
   * The long-running operation
   * [metadata][google.longrunning.Operation.metadata] field type
   * `metadata.type_url` describes the type of the metadata. Operations returned
   * include those that have completed/failed/canceled within the last 7 days,
   * and pending operations. Operations returned are ordered by
   * `operation.metadata.value.start_time` in descending order starting
   * from the most recently started operation.
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.ListInstanceConfigOperations
   */
  listInstanceConfigOperations: {
    methodKind: "unary";
    input: typeof ListInstanceConfigOperationsRequestSchema;
    output: typeof ListInstanceConfigOperationsResponseSchema;
  },
  /**
   * Lists all instances in the given project.
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.ListInstances
   */
  listInstances: {
    methodKind: "unary";
    input: typeof ListInstancesRequestSchema;
    output: typeof ListInstancesResponseSchema;
  },
  /**
   * Lists all instance partitions for the given instance.
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.ListInstancePartitions
   */
  listInstancePartitions: {
    methodKind: "unary";
    input: typeof ListInstancePartitionsRequestSchema;
    output: typeof ListInstancePartitionsResponseSchema;
  },
  /**
   * Gets information about a particular instance.
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.GetInstance
   */
  getInstance: {
    methodKind: "unary";
    input: typeof GetInstanceRequestSchema;
    output: typeof InstanceSchema;
  },
  /**
   * Creates an instance and begins preparing it to begin serving. The
   * returned [long-running operation][google.longrunning.Operation]
   * can be used to track the progress of preparing the new
   * instance. The instance name is assigned by the caller. If the
   * named instance already exists, `CreateInstance` returns
   * `ALREADY_EXISTS`.
   *
   * Immediately upon completion of this request:
   *
   *   * The instance is readable via the API, with all requested attributes
   *     but no allocated resources. Its state is `CREATING`.
   *
   * Until completion of the returned operation:
   *
   *   * Cancelling the operation renders the instance immediately unreadable
   *     via the API.
   *   * The instance can be deleted.
   *   * All other attempts to modify the instance are rejected.
   *
   * Upon completion of the returned operation:
   *
   *   * Billing for all successfully-allocated resources begins (some types
   *     may have lower than the requested levels).
   *   * Databases can be created in the instance.
   *   * The instance's allocated resource levels are readable via the API.
   *   * The instance's state becomes `READY`.
   *
   * The returned [long-running operation][google.longrunning.Operation] will
   * have a name of the format `<instance_name>/operations/<operation_id>` and
   * can be used to track creation of the instance.  The
   * [metadata][google.longrunning.Operation.metadata] field type is
   * [CreateInstanceMetadata][google.spanner.admin.instance.v1.CreateInstanceMetadata].
   * The [response][google.longrunning.Operation.response] field type is
   * [Instance][google.spanner.admin.instance.v1.Instance], if successful.
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.CreateInstance
   */
  createInstance: {
    methodKind: "unary";
    input: typeof CreateInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates an instance, and begins allocating or releasing resources
   * as requested. The returned [long-running
   * operation][google.longrunning.Operation] can be used to track the
   * progress of updating the instance. If the named instance does not
   * exist, returns `NOT_FOUND`.
   *
   * Immediately upon completion of this request:
   *
   *   * For resource types for which a decrease in the instance's allocation
   *     has been requested, billing is based on the newly-requested level.
   *
   * Until completion of the returned operation:
   *
   *   * Cancelling the operation sets its metadata's
   *     [cancel_time][google.spanner.admin.instance.v1.UpdateInstanceMetadata.cancel_time],
   *     and begins restoring resources to their pre-request values. The
   *     operation is guaranteed to succeed at undoing all resource changes,
   *     after which point it terminates with a `CANCELLED` status.
   *   * All other attempts to modify the instance are rejected.
   *   * Reading the instance via the API continues to give the pre-request
   *     resource levels.
   *
   * Upon completion of the returned operation:
   *
   *   * Billing begins for all successfully-allocated resources (some types
   *     may have lower than the requested levels).
   *   * All newly-reserved resources are available for serving the instance's
   *     tables.
   *   * The instance's new resource levels are readable via the API.
   *
   * The returned [long-running operation][google.longrunning.Operation] will
   * have a name of the format `<instance_name>/operations/<operation_id>` and
   * can be used to track the instance modification.  The
   * [metadata][google.longrunning.Operation.metadata] field type is
   * [UpdateInstanceMetadata][google.spanner.admin.instance.v1.UpdateInstanceMetadata].
   * The [response][google.longrunning.Operation.response] field type is
   * [Instance][google.spanner.admin.instance.v1.Instance], if successful.
   *
   * Authorization requires `spanner.instances.update` permission on
   * the resource [name][google.spanner.admin.instance.v1.Instance.name].
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.UpdateInstance
   */
  updateInstance: {
    methodKind: "unary";
    input: typeof UpdateInstanceRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes an instance.
   *
   * Immediately upon completion of the request:
   *
   *   * Billing ceases for all of the instance's reserved resources.
   *
   * Soon afterward:
   *
   *   * The instance and *all of its databases* immediately and
   *     irrevocably disappear from the API. All data in the databases
   *     is permanently deleted.
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.DeleteInstance
   */
  deleteInstance: {
    methodKind: "unary";
    input: typeof DeleteInstanceRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Sets the access control policy on an instance resource. Replaces any
   * existing policy.
   *
   * Authorization requires `spanner.instances.setIamPolicy` on
   * [resource][google.iam.v1.SetIamPolicyRequest.resource].
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.SetIamPolicy
   */
  setIamPolicy: {
    methodKind: "unary";
    input: typeof SetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Gets the access control policy for an instance resource. Returns an empty
   * policy if an instance exists but does not have a policy set.
   *
   * Authorization requires `spanner.instances.getIamPolicy` on
   * [resource][google.iam.v1.GetIamPolicyRequest.resource].
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.GetIamPolicy
   */
  getIamPolicy: {
    methodKind: "unary";
    input: typeof GetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Returns permissions that the caller has on the specified instance resource.
   *
   * Attempting this RPC on a non-existent Cloud Spanner instance resource will
   * result in a NOT_FOUND error if the user has `spanner.instances.list`
   * permission on the containing Google Cloud Project. Otherwise returns an
   * empty set of permissions.
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.TestIamPermissions
   */
  testIamPermissions: {
    methodKind: "unary";
    input: typeof TestIamPermissionsRequestSchema;
    output: typeof TestIamPermissionsResponseSchema;
  },
  /**
   * Gets information about a particular instance partition.
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.GetInstancePartition
   */
  getInstancePartition: {
    methodKind: "unary";
    input: typeof GetInstancePartitionRequestSchema;
    output: typeof InstancePartitionSchema;
  },
  /**
   * Creates an instance partition and begins preparing it to be used. The
   * returned [long-running operation][google.longrunning.Operation]
   * can be used to track the progress of preparing the new instance partition.
   * The instance partition name is assigned by the caller. If the named
   * instance partition already exists, `CreateInstancePartition` returns
   * `ALREADY_EXISTS`.
   *
   * Immediately upon completion of this request:
   *
   *   * The instance partition is readable via the API, with all requested
   *     attributes but no allocated resources. Its state is `CREATING`.
   *
   * Until completion of the returned operation:
   *
   *   * Cancelling the operation renders the instance partition immediately
   *     unreadable via the API.
   *   * The instance partition can be deleted.
   *   * All other attempts to modify the instance partition are rejected.
   *
   * Upon completion of the returned operation:
   *
   *   * Billing for all successfully-allocated resources begins (some types
   *     may have lower than the requested levels).
   *   * Databases can start using this instance partition.
   *   * The instance partition's allocated resource levels are readable via the
   *     API.
   *   * The instance partition's state becomes `READY`.
   *
   * The returned [long-running operation][google.longrunning.Operation] will
   * have a name of the format
   * `<instance_partition_name>/operations/<operation_id>` and can be used to
   * track creation of the instance partition.  The
   * [metadata][google.longrunning.Operation.metadata] field type is
   * [CreateInstancePartitionMetadata][google.spanner.admin.instance.v1.CreateInstancePartitionMetadata].
   * The [response][google.longrunning.Operation.response] field type is
   * [InstancePartition][google.spanner.admin.instance.v1.InstancePartition], if
   * successful.
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.CreateInstancePartition
   */
  createInstancePartition: {
    methodKind: "unary";
    input: typeof CreateInstancePartitionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes an existing instance partition. Requires that the
   * instance partition is not used by any database or backup and is not the
   * default instance partition of an instance.
   *
   * Authorization requires `spanner.instancePartitions.delete` permission on
   * the resource
   * [name][google.spanner.admin.instance.v1.InstancePartition.name].
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.DeleteInstancePartition
   */
  deleteInstancePartition: {
    methodKind: "unary";
    input: typeof DeleteInstancePartitionRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Updates an instance partition, and begins allocating or releasing resources
   * as requested. The returned [long-running
   * operation][google.longrunning.Operation] can be used to track the
   * progress of updating the instance partition. If the named instance
   * partition does not exist, returns `NOT_FOUND`.
   *
   * Immediately upon completion of this request:
   *
   *   * For resource types for which a decrease in the instance partition's
   *   allocation has been requested, billing is based on the newly-requested
   *   level.
   *
   * Until completion of the returned operation:
   *
   *   * Cancelling the operation sets its metadata's
   *     [cancel_time][google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata.cancel_time],
   *     and begins restoring resources to their pre-request values. The
   *     operation is guaranteed to succeed at undoing all resource changes,
   *     after which point it terminates with a `CANCELLED` status.
   *   * All other attempts to modify the instance partition are rejected.
   *   * Reading the instance partition via the API continues to give the
   *     pre-request resource levels.
   *
   * Upon completion of the returned operation:
   *
   *   * Billing begins for all successfully-allocated resources (some types
   *     may have lower than the requested levels).
   *   * All newly-reserved resources are available for serving the instance
   *     partition's tables.
   *   * The instance partition's new resource levels are readable via the API.
   *
   * The returned [long-running operation][google.longrunning.Operation] will
   * have a name of the format
   * `<instance_partition_name>/operations/<operation_id>` and can be used to
   * track the instance partition modification. The
   * [metadata][google.longrunning.Operation.metadata] field type is
   * [UpdateInstancePartitionMetadata][google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata].
   * The [response][google.longrunning.Operation.response] field type is
   * [InstancePartition][google.spanner.admin.instance.v1.InstancePartition], if
   * successful.
   *
   * Authorization requires `spanner.instancePartitions.update` permission on
   * the resource
   * [name][google.spanner.admin.instance.v1.InstancePartition.name].
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.UpdateInstancePartition
   */
  updateInstancePartition: {
    methodKind: "unary";
    input: typeof UpdateInstancePartitionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists instance partition [long-running
   * operations][google.longrunning.Operation] in the given instance.
   * An instance partition operation has a name of the form
   * `projects/<project>/instances/<instance>/instancePartitions/<instance_partition>/operations/<operation>`.
   * The long-running operation
   * [metadata][google.longrunning.Operation.metadata] field type
   * `metadata.type_url` describes the type of the metadata. Operations returned
   * include those that have completed/failed/canceled within the last 7 days,
   * and pending operations. Operations returned are ordered by
   * `operation.metadata.value.start_time` in descending order starting from the
   * most recently started operation.
   *
   * Authorization requires `spanner.instancePartitionOperations.list`
   * permission on the resource
   * [parent][google.spanner.admin.instance.v1.ListInstancePartitionOperationsRequest.parent].
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.ListInstancePartitionOperations
   */
  listInstancePartitionOperations: {
    methodKind: "unary";
    input: typeof ListInstancePartitionOperationsRequestSchema;
    output: typeof ListInstancePartitionOperationsResponseSchema;
  },
  /**
   * Moves an instance to the target instance configuration. You can use the
   * returned [long-running operation][google.longrunning.Operation] to track
   * the progress of moving the instance.
   *
   * `MoveInstance` returns `FAILED_PRECONDITION` if the instance meets any of
   * the following criteria:
   *
   *   * Is undergoing a move to a different instance configuration
   *   * Has backups
   *   * Has an ongoing update
   *   * Contains any CMEK-enabled databases
   *   * Is a free trial instance
   *
   * While the operation is pending:
   *
   *   * All other attempts to modify the instance, including changes to its
   *     compute capacity, are rejected.
   *   * The following database and backup admin operations are rejected:
   *
   *     * `DatabaseAdmin.CreateDatabase`
   *     * `DatabaseAdmin.UpdateDatabaseDdl` (disabled if default_leader is
   *        specified in the request.)
   *     * `DatabaseAdmin.RestoreDatabase`
   *     * `DatabaseAdmin.CreateBackup`
   *     * `DatabaseAdmin.CopyBackup`
   *
   *   * Both the source and target instance configurations are subject to
   *     hourly compute and storage charges.
   *   * The instance might experience higher read-write latencies and a higher
   *     transaction abort rate. However, moving an instance doesn't cause any
   *     downtime.
   *
   * The returned [long-running operation][google.longrunning.Operation] has
   * a name of the format
   * `<instance_name>/operations/<operation_id>` and can be used to track
   * the move instance operation. The
   * [metadata][google.longrunning.Operation.metadata] field type is
   * [MoveInstanceMetadata][google.spanner.admin.instance.v1.MoveInstanceMetadata].
   * The [response][google.longrunning.Operation.response] field type is
   * [Instance][google.spanner.admin.instance.v1.Instance],
   * if successful.
   * Cancelling the operation sets its metadata's
   * [cancel_time][google.spanner.admin.instance.v1.MoveInstanceMetadata.cancel_time].
   * Cancellation is not immediate because it involves moving any data
   * previously moved to the target instance configuration back to the original
   * instance configuration. You can use this operation to track the progress of
   * the cancellation. Upon successful completion of the cancellation, the
   * operation terminates with `CANCELLED` status.
   *
   * If not cancelled, upon completion of the returned operation:
   *
   *   * The instance successfully moves to the target instance
   *     configuration.
   *   * You are billed for compute and storage in target instance
   *   configuration.
   *
   * Authorization requires the `spanner.instances.update` permission on
   * the resource [instance][google.spanner.admin.instance.v1.Instance].
   *
   * For more details, see
   * [Move an instance](https://cloud.google.com/spanner/docs/move-instance).
   *
   * @generated from rpc google.spanner.admin.instance.v1.InstanceAdmin.MoveInstance
   */
  moveInstance: {
    methodKind: "unary";
    input: typeof MoveInstanceRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_spanner_admin_instance_v1_spanner_instance_admin, 0);

