// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/spanner/admin/database/v1/backup.proto (package google.spanner.admin.database.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { Operation } from "../../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../../longrunning/operations_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { DatabaseDialect, EncryptionInfo, OperationProgress } from "./common_pb";
import { file_google_spanner_admin_database_v1_common } from "./common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/spanner/admin/database/v1/backup.proto.
 */
export const file_google_spanner_admin_database_v1_backup: GenFile = /*@__PURE__*/
  fileDesc("Ci1nb29nbGUvc3Bhbm5lci9hZG1pbi9kYXRhYmFzZS92MS9iYWNrdXAucHJvdG8SIGdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxIpAJCgZCYWNrdXASNgoIZGF0YWJhc2UYAiABKAlCJPpBIQofc3Bhbm5lci5nb29nbGVhcGlzLmNvbS9EYXRhYmFzZRIwCgx2ZXJzaW9uX3RpbWUYCSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8KC2V4cGlyZV90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIMCgRuYW1lGAEgASgJEjQKC2NyZWF0ZV90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEhcKCnNpemVfYnl0ZXMYBSABKANCA+BBAxIgChNmcmVlYWJsZV9zaXplX2J5dGVzGA8gASgDQgPgQQMSIQoUZXhjbHVzaXZlX3NpemVfYnl0ZXMYECABKANCA+BBAxJCCgVzdGF0ZRgGIAEoDjIuLmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkJhY2t1cC5TdGF0ZUID4EEDEkYKFXJlZmVyZW5jaW5nX2RhdGFiYXNlcxgHIAMoCUIn4EED+kEhCh9zcGFubmVyLmdvb2dsZWFwaXMuY29tL0RhdGFiYXNlEk4KD2VuY3J5cHRpb25faW5mbxgIIAEoCzIwLmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkVuY3J5cHRpb25JbmZvQgPgQQMSVQoWZW5jcnlwdGlvbl9pbmZvcm1hdGlvbhgNIAMoCzIwLmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkVuY3J5cHRpb25JbmZvQgPgQQMSUAoQZGF0YWJhc2VfZGlhbGVjdBgKIAEoDjIxLmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkRhdGFiYXNlRGlhbGVjdEID4EEDEkIKE3JlZmVyZW5jaW5nX2JhY2t1cHMYCyADKAlCJeBBA/pBHwodc3Bhbm5lci5nb29nbGVhcGlzLmNvbS9CYWNrdXASOAoPbWF4X2V4cGlyZV90aW1lGAwgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEkcKEGJhY2t1cF9zY2hlZHVsZXMYDiADKAlCLeBBA/pBJwolc3Bhbm5lci5nb29nbGVhcGlzLmNvbS9CYWNrdXBTY2hlZHVsZRIoChtpbmNyZW1lbnRhbF9iYWNrdXBfY2hhaW5faWQYESABKAlCA+BBAxI8ChNvbGRlc3RfdmVyc2lvbl90aW1lGBIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDIjcKBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAASDAoIQ1JFQVRJTkcQARIJCgVSRUFEWRACOlzqQVkKHXNwYW5uZXIuZ29vZ2xlYXBpcy5jb20vQmFja3VwEjhwcm9qZWN0cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX0vYmFja3Vwcy97YmFja3VwfSKFAgoTQ3JlYXRlQmFja3VwUmVxdWVzdBI3CgZwYXJlbnQYASABKAlCJ+BBAvpBIQofc3Bhbm5lci5nb29nbGVhcGlzLmNvbS9JbnN0YW5jZRIWCgliYWNrdXBfaWQYAiABKAlCA+BBAhI9CgZiYWNrdXAYAyABKAsyKC5nb29nbGUuc3Bhbm5lci5hZG1pbi5kYXRhYmFzZS52MS5CYWNrdXBCA+BBAhJeChFlbmNyeXB0aW9uX2NvbmZpZxgEIAEoCzI+Lmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkNyZWF0ZUJhY2t1cEVuY3J5cHRpb25Db25maWdCA+BBASL4AQoUQ3JlYXRlQmFja3VwTWV0YWRhdGESMAoEbmFtZRgBIAEoCUIi+kEfCh1zcGFubmVyLmdvb2dsZWFwaXMuY29tL0JhY2t1cBI2CghkYXRhYmFzZRgCIAEoCUIk+kEhCh9zcGFubmVyLmdvb2dsZWFwaXMuY29tL0RhdGFiYXNlEkUKCHByb2dyZXNzGAMgASgLMjMuZ29vZ2xlLnNwYW5uZXIuYWRtaW4uZGF0YWJhc2UudjEuT3BlcmF0aW9uUHJvZ3Jlc3MSLwoLY2FuY2VsX3RpbWUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIrYCChFDb3B5QmFja3VwUmVxdWVzdBI3CgZwYXJlbnQYASABKAlCJ+BBAvpBIQofc3Bhbm5lci5nb29nbGVhcGlzLmNvbS9JbnN0YW5jZRIWCgliYWNrdXBfaWQYAiABKAlCA+BBAhI8Cg1zb3VyY2VfYmFja3VwGAMgASgJQiXgQQL6QR8KHXNwYW5uZXIuZ29vZ2xlYXBpcy5jb20vQmFja3VwEjQKC2V4cGlyZV90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EECElwKEWVuY3J5cHRpb25fY29uZmlnGAUgASgLMjwuZ29vZ2xlLnNwYW5uZXIuYWRtaW4uZGF0YWJhc2UudjEuQ29weUJhY2t1cEVuY3J5cHRpb25Db25maWdCA+BBASL5AQoSQ29weUJhY2t1cE1ldGFkYXRhEjAKBG5hbWUYASABKAlCIvpBHwodc3Bhbm5lci5nb29nbGVhcGlzLmNvbS9CYWNrdXASOQoNc291cmNlX2JhY2t1cBgCIAEoCUIi+kEfCh1zcGFubmVyLmdvb2dsZWFwaXMuY29tL0JhY2t1cBJFCghwcm9ncmVzcxgDIAEoCzIzLmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLk9wZXJhdGlvblByb2dyZXNzEi8KC2NhbmNlbF90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCKKAQoTVXBkYXRlQmFja3VwUmVxdWVzdBI9CgZiYWNrdXAYASABKAsyKC5nb29nbGUuc3Bhbm5lci5hZG1pbi5kYXRhYmFzZS52MS5CYWNrdXBCA+BBAhI0Cgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2tCA+BBAiJHChBHZXRCYWNrdXBSZXF1ZXN0EjMKBG5hbWUYASABKAlCJeBBAvpBHwodc3Bhbm5lci5nb29nbGVhcGlzLmNvbS9CYWNrdXAiSgoTRGVsZXRlQmFja3VwUmVxdWVzdBIzCgRuYW1lGAEgASgJQiXgQQL6QR8KHXNwYW5uZXIuZ29vZ2xlYXBpcy5jb20vQmFja3VwIoQBChJMaXN0QmFja3Vwc1JlcXVlc3QSNwoGcGFyZW50GAEgASgJQifgQQL6QSEKH3NwYW5uZXIuZ29vZ2xlYXBpcy5jb20vSW5zdGFuY2USDgoGZmlsdGVyGAIgASgJEhEKCXBhZ2Vfc2l6ZRgDIAEoBRISCgpwYWdlX3Rva2VuGAQgASgJImkKE0xpc3RCYWNrdXBzUmVzcG9uc2USOQoHYmFja3VwcxgBIAMoCzIoLmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkJhY2t1cBIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkijQEKG0xpc3RCYWNrdXBPcGVyYXRpb25zUmVxdWVzdBI3CgZwYXJlbnQYASABKAlCJ+BBAvpBIQofc3Bhbm5lci5nb29nbGVhcGlzLmNvbS9JbnN0YW5jZRIOCgZmaWx0ZXIYAiABKAkSEQoJcGFnZV9zaXplGAMgASgFEhIKCnBhZ2VfdG9rZW4YBCABKAkiagocTGlzdEJhY2t1cE9wZXJhdGlvbnNSZXNwb25zZRIxCgpvcGVyYXRpb25zGAEgAygLMh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbhIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAki4gEKCkJhY2t1cEluZm8SMgoGYmFja3VwGAEgASgJQiL6QR8KHXNwYW5uZXIuZ29vZ2xlYXBpcy5jb20vQmFja3VwEjAKDHZlcnNpb25fdGltZRgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoLY3JlYXRlX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEj0KD3NvdXJjZV9kYXRhYmFzZRgDIAEoCUIk+kEhCh9zcGFubmVyLmdvb2dsZWFwaXMuY29tL0RhdGFiYXNlIp8DChxDcmVhdGVCYWNrdXBFbmNyeXB0aW9uQ29uZmlnEmsKD2VuY3J5cHRpb25fdHlwZRgBIAEoDjJNLmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkNyZWF0ZUJhY2t1cEVuY3J5cHRpb25Db25maWcuRW5jcnlwdGlvblR5cGVCA+BBAhI/CgxrbXNfa2V5X25hbWUYAiABKAlCKeBBAfpBIwohY2xvdWRrbXMuZ29vZ2xlYXBpcy5jb20vQ3J5cHRvS2V5EkAKDWttc19rZXlfbmFtZXMYAyADKAlCKeBBAfpBIwohY2xvdWRrbXMuZ29vZ2xlYXBpcy5jb20vQ3J5cHRvS2V5Io4BCg5FbmNyeXB0aW9uVHlwZRIfChtFTkNSWVBUSU9OX1RZUEVfVU5TUEVDSUZJRUQQABIbChdVU0VfREFUQUJBU0VfRU5DUllQVElPThABEh0KGUdPT0dMRV9ERUZBVUxUX0VOQ1JZUFRJT04QAhIfChtDVVNUT01FUl9NQU5BR0VEX0VOQ1JZUFRJT04QAyKrAwoaQ29weUJhY2t1cEVuY3J5cHRpb25Db25maWcSaQoPZW5jcnlwdGlvbl90eXBlGAEgASgOMksuZ29vZ2xlLnNwYW5uZXIuYWRtaW4uZGF0YWJhc2UudjEuQ29weUJhY2t1cEVuY3J5cHRpb25Db25maWcuRW5jcnlwdGlvblR5cGVCA+BBAhI/CgxrbXNfa2V5X25hbWUYAiABKAlCKeBBAfpBIwohY2xvdWRrbXMuZ29vZ2xlYXBpcy5jb20vQ3J5cHRvS2V5EkAKDWttc19rZXlfbmFtZXMYAyADKAlCKeBBAfpBIwohY2xvdWRrbXMuZ29vZ2xlYXBpcy5jb20vQ3J5cHRvS2V5Ip4BCg5FbmNyeXB0aW9uVHlwZRIfChtFTkNSWVBUSU9OX1RZUEVfVU5TUEVDSUZJRUQQABIrCidVU0VfQ09ORklHX0RFRkFVTFRfT1JfQkFDS1VQX0VOQ1JZUFRJT04QARIdChlHT09HTEVfREVGQVVMVF9FTkNSWVBUSU9OEAISHwobQ1VTVE9NRVJfTUFOQUdFRF9FTkNSWVBUSU9OEAMiEAoORnVsbEJhY2t1cFNwZWMiFwoVSW5jcmVtZW50YWxCYWNrdXBTcGVjQv0BCiRjb20uZ29vZ2xlLnNwYW5uZXIuYWRtaW4uZGF0YWJhc2UudjFCC0JhY2t1cFByb3RvUAFaRmNsb3VkLmdvb2dsZS5jb20vZ28vc3Bhbm5lci9hZG1pbi9kYXRhYmFzZS9hcGl2MS9kYXRhYmFzZXBiO2RhdGFiYXNlcGKqAiZHb29nbGUuQ2xvdWQuU3Bhbm5lci5BZG1pbi5EYXRhYmFzZS5WMcoCJkdvb2dsZVxDbG91ZFxTcGFubmVyXEFkbWluXERhdGFiYXNlXFYx6gIrR29vZ2xlOjpDbG91ZDo6U3Bhbm5lcjo6QWRtaW46OkRhdGFiYXNlOjpWMWIGcHJvdG8z", [file_google_api_field_behavior, file_google_api_resource, file_google_longrunning_operations, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_spanner_admin_database_v1_common]);

/**
 * A backup of a Cloud Spanner database.
 *
 * @generated from message google.spanner.admin.database.v1.Backup
 */
export type Backup = Message<"google.spanner.admin.database.v1.Backup"> & {
  /**
   * Required for the
   * [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup]
   * operation. Name of the database from which this backup was created. This
   * needs to be in the same instance as the backup. Values are of the form
   * `projects/<project>/instances/<instance>/databases/<database>`.
   *
   * @generated from field: string database = 2;
   */
  database: string;

  /**
   * The backup will contain an externally consistent copy of the database at
   * the timestamp specified by `version_time`. If `version_time` is not
   * specified, the system will set `version_time` to the `create_time` of the
   * backup.
   *
   * @generated from field: google.protobuf.Timestamp version_time = 9;
   */
  versionTime?: Timestamp;

  /**
   * Required for the
   * [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup]
   * operation. The expiration time of the backup, with microseconds
   * granularity that must be at least 6 hours and at most 366 days
   * from the time the CreateBackup request is processed. Once the `expire_time`
   * has passed, the backup is eligible to be automatically deleted by Cloud
   * Spanner to free the resources used by the backup.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 3;
   */
  expireTime?: Timestamp;

  /**
   * Output only for the
   * [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup]
   * operation. Required for the
   * [UpdateBackup][google.spanner.admin.database.v1.DatabaseAdmin.UpdateBackup]
   * operation.
   *
   * A globally unique identifier for the backup which cannot be
   * changed. Values are of the form
   * `projects/<project>/instances/<instance>/backups/[a-z][a-z0-9_\-]*[a-z0-9]`
   * The final segment of the name must be between 2 and 60 characters
   * in length.
   *
   * The backup is stored in the location(s) specified in the instance
   * configuration of the instance containing the backup, identified
   * by the prefix of the backup name of the form
   * `projects/<project>/instances/<instance>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The time the
   * [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup]
   * request is received. If the request does not specify `version_time`, the
   * `version_time` of the backup will be equivalent to the `create_time`.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * Output only. Size of the backup in bytes.
   *
   * @generated from field: int64 size_bytes = 5;
   */
  sizeBytes: bigint;

  /**
   * Output only. The number of bytes that will be freed by deleting this
   * backup. This value will be zero if, for example, this backup is part of an
   * incremental backup chain and younger backups in the chain require that we
   * keep its data. For backups not in an incremental backup chain, this is
   * always the size of the backup. This value may change if backups on the same
   * chain get created, deleted or expired.
   *
   * @generated from field: int64 freeable_size_bytes = 15;
   */
  freeableSizeBytes: bigint;

  /**
   * Output only. For a backup in an incremental backup chain, this is the
   * storage space needed to keep the data that has changed since the previous
   * backup. For all other backups, this is always the size of the backup. This
   * value may change if backups on the same chain get deleted or expired.
   *
   * This field can be used to calculate the total storage space used by a set
   * of backups. For example, the total space used by all backups of a database
   * can be computed by summing up this field.
   *
   * @generated from field: int64 exclusive_size_bytes = 16;
   */
  exclusiveSizeBytes: bigint;

  /**
   * Output only. The current state of the backup.
   *
   * @generated from field: google.spanner.admin.database.v1.Backup.State state = 6;
   */
  state: Backup_State;

  /**
   * Output only. The names of the restored databases that reference the backup.
   * The database names are of
   * the form `projects/<project>/instances/<instance>/databases/<database>`.
   * Referencing databases may exist in different instances. The existence of
   * any referencing database prevents the backup from being deleted. When a
   * restored database from the backup enters the `READY` state, the reference
   * to the backup is removed.
   *
   * @generated from field: repeated string referencing_databases = 7;
   */
  referencingDatabases: string[];

  /**
   * Output only. The encryption information for the backup.
   *
   * @generated from field: google.spanner.admin.database.v1.EncryptionInfo encryption_info = 8;
   */
  encryptionInfo?: EncryptionInfo;

  /**
   * Output only. The encryption information for the backup, whether it is
   * protected by one or more KMS keys. The information includes all Cloud
   * KMS key versions used to encrypt the backup. The `encryption_status' field
   * inside of each `EncryptionInfo` is not populated. At least one of the key
   * versions must be available for the backup to be restored. If a key version
   * is revoked in the middle of a restore, the restore behavior is undefined.
   *
   * @generated from field: repeated google.spanner.admin.database.v1.EncryptionInfo encryption_information = 13;
   */
  encryptionInformation: EncryptionInfo[];

  /**
   * Output only. The database dialect information for the backup.
   *
   * @generated from field: google.spanner.admin.database.v1.DatabaseDialect database_dialect = 10;
   */
  databaseDialect: DatabaseDialect;

  /**
   * Output only. The names of the destination backups being created by copying
   * this source backup. The backup names are of the form
   * `projects/<project>/instances/<instance>/backups/<backup>`.
   * Referencing backups may exist in different instances. The existence of
   * any referencing backup prevents the backup from being deleted. When the
   * copy operation is done (either successfully completed or cancelled or the
   * destination backup is deleted), the reference to the backup is removed.
   *
   * @generated from field: repeated string referencing_backups = 11;
   */
  referencingBackups: string[];

  /**
   * Output only. The max allowed expiration time of the backup, with
   * microseconds granularity. A backup's expiration time can be configured in
   * multiple APIs: CreateBackup, UpdateBackup, CopyBackup. When updating or
   * copying an existing backup, the expiration time specified must be
   * less than `Backup.max_expire_time`.
   *
   * @generated from field: google.protobuf.Timestamp max_expire_time = 12;
   */
  maxExpireTime?: Timestamp;

  /**
   * Output only. List of backup schedule URIs that are associated with
   * creating this backup. This is only applicable for scheduled backups, and
   * is empty for on-demand backups.
   *
   * To optimize for storage, whenever possible, multiple schedules are
   * collapsed together to create one backup. In such cases, this field captures
   * the list of all backup schedule URIs that are associated with creating
   * this backup. If collapsing is not done, then this field captures the
   * single backup schedule URI associated with creating this backup.
   *
   * @generated from field: repeated string backup_schedules = 14;
   */
  backupSchedules: string[];

  /**
   * Output only. Populated only for backups in an incremental backup chain.
   * Backups share the same chain id if and only if they belong to the same
   * incremental backup chain. Use this field to determine which backups are
   * part of the same incremental backup chain. The ordering of backups in the
   * chain can be determined by ordering the backup `version_time`.
   *
   * @generated from field: string incremental_backup_chain_id = 17;
   */
  incrementalBackupChainId: string;

  /**
   * Output only. Data deleted at a time older than this is guaranteed not to be
   * retained in order to support this backup. For a backup in an incremental
   * backup chain, this is the version time of the oldest backup that exists or
   * ever existed in the chain. For all other backups, this is the version time
   * of the backup. This field can be used to understand what data is being
   * retained by the backup system.
   *
   * @generated from field: google.protobuf.Timestamp oldest_version_time = 18;
   */
  oldestVersionTime?: Timestamp;
};

/**
 * Describes the message google.spanner.admin.database.v1.Backup.
 * Use `create(BackupSchema)` to create a new message.
 */
export const BackupSchema: GenMessage<Backup> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 0);

/**
 * Indicates the current state of the backup.
 *
 * @generated from enum google.spanner.admin.database.v1.Backup.State
 */
export enum Backup_State {
  /**
   * Not specified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The pending backup is still being created. Operations on the
   * backup may fail with `FAILED_PRECONDITION` in this state.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The backup is complete and ready for use.
   *
   * @generated from enum value: READY = 2;
   */
  READY = 2,
}

/**
 * Describes the enum google.spanner.admin.database.v1.Backup.State.
 */
export const Backup_StateSchema: GenEnum<Backup_State> = /*@__PURE__*/
  enumDesc(file_google_spanner_admin_database_v1_backup, 0, 0);

/**
 * The request for
 * [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup].
 *
 * @generated from message google.spanner.admin.database.v1.CreateBackupRequest
 */
export type CreateBackupRequest = Message<"google.spanner.admin.database.v1.CreateBackupRequest"> & {
  /**
   * Required. The name of the instance in which the backup will be
   * created. This must be the same instance that contains the database the
   * backup will be created from. The backup will be stored in the
   * location(s) specified in the instance configuration of this
   * instance. Values are of the form
   * `projects/<project>/instances/<instance>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The id of the backup to be created. The `backup_id` appended to
   * `parent` forms the full backup name of the form
   * `projects/<project>/instances/<instance>/backups/<backup_id>`.
   *
   * @generated from field: string backup_id = 2;
   */
  backupId: string;

  /**
   * Required. The backup to create.
   *
   * @generated from field: google.spanner.admin.database.v1.Backup backup = 3;
   */
  backup?: Backup;

  /**
   * Optional. The encryption configuration used to encrypt the backup. If this
   * field is not specified, the backup will use the same encryption
   * configuration as the database by default, namely
   * [encryption_type][google.spanner.admin.database.v1.CreateBackupEncryptionConfig.encryption_type]
   * = `USE_DATABASE_ENCRYPTION`.
   *
   * @generated from field: google.spanner.admin.database.v1.CreateBackupEncryptionConfig encryption_config = 4;
   */
  encryptionConfig?: CreateBackupEncryptionConfig;
};

/**
 * Describes the message google.spanner.admin.database.v1.CreateBackupRequest.
 * Use `create(CreateBackupRequestSchema)` to create a new message.
 */
export const CreateBackupRequestSchema: GenMessage<CreateBackupRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 1);

/**
 * Metadata type for the operation returned by
 * [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup].
 *
 * @generated from message google.spanner.admin.database.v1.CreateBackupMetadata
 */
export type CreateBackupMetadata = Message<"google.spanner.admin.database.v1.CreateBackupMetadata"> & {
  /**
   * The name of the backup being created.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The name of the database the backup is created from.
   *
   * @generated from field: string database = 2;
   */
  database: string;

  /**
   * The progress of the
   * [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup]
   * operation.
   *
   * @generated from field: google.spanner.admin.database.v1.OperationProgress progress = 3;
   */
  progress?: OperationProgress;

  /**
   * The time at which cancellation of this operation was received.
   * [Operations.CancelOperation][google.longrunning.Operations.CancelOperation]
   * starts asynchronous cancellation on a long-running operation. The server
   * makes a best effort to cancel the operation, but success is not guaranteed.
   * Clients can use
   * [Operations.GetOperation][google.longrunning.Operations.GetOperation] or
   * other methods to check whether the cancellation succeeded or whether the
   * operation completed despite cancellation. On successful cancellation,
   * the operation is not deleted; instead, it becomes an operation with
   * an [Operation.error][google.longrunning.Operation.error] value with a
   * [google.rpc.Status.code][google.rpc.Status.code] of 1,
   * corresponding to `Code.CANCELLED`.
   *
   * @generated from field: google.protobuf.Timestamp cancel_time = 4;
   */
  cancelTime?: Timestamp;
};

/**
 * Describes the message google.spanner.admin.database.v1.CreateBackupMetadata.
 * Use `create(CreateBackupMetadataSchema)` to create a new message.
 */
export const CreateBackupMetadataSchema: GenMessage<CreateBackupMetadata> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 2);

/**
 * The request for
 * [CopyBackup][google.spanner.admin.database.v1.DatabaseAdmin.CopyBackup].
 *
 * @generated from message google.spanner.admin.database.v1.CopyBackupRequest
 */
export type CopyBackupRequest = Message<"google.spanner.admin.database.v1.CopyBackupRequest"> & {
  /**
   * Required. The name of the destination instance that will contain the backup
   * copy. Values are of the form: `projects/<project>/instances/<instance>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The id of the backup copy.
   * The `backup_id` appended to `parent` forms the full backup_uri of the form
   * `projects/<project>/instances/<instance>/backups/<backup>`.
   *
   * @generated from field: string backup_id = 2;
   */
  backupId: string;

  /**
   * Required. The source backup to be copied.
   * The source backup needs to be in READY state for it to be copied.
   * Once CopyBackup is in progress, the source backup cannot be deleted or
   * cleaned up on expiration until CopyBackup is finished.
   * Values are of the form:
   * `projects/<project>/instances/<instance>/backups/<backup>`.
   *
   * @generated from field: string source_backup = 3;
   */
  sourceBackup: string;

  /**
   * Required. The expiration time of the backup in microsecond granularity.
   * The expiration time must be at least 6 hours and at most 366 days
   * from the `create_time` of the source backup. Once the `expire_time` has
   * passed, the backup is eligible to be automatically deleted by Cloud Spanner
   * to free the resources used by the backup.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 4;
   */
  expireTime?: Timestamp;

  /**
   * Optional. The encryption configuration used to encrypt the backup. If this
   * field is not specified, the backup will use the same encryption
   * configuration as the source backup by default, namely
   * [encryption_type][google.spanner.admin.database.v1.CopyBackupEncryptionConfig.encryption_type]
   * = `USE_CONFIG_DEFAULT_OR_BACKUP_ENCRYPTION`.
   *
   * @generated from field: google.spanner.admin.database.v1.CopyBackupEncryptionConfig encryption_config = 5;
   */
  encryptionConfig?: CopyBackupEncryptionConfig;
};

/**
 * Describes the message google.spanner.admin.database.v1.CopyBackupRequest.
 * Use `create(CopyBackupRequestSchema)` to create a new message.
 */
export const CopyBackupRequestSchema: GenMessage<CopyBackupRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 3);

/**
 * Metadata type for the operation returned by
 * [CopyBackup][google.spanner.admin.database.v1.DatabaseAdmin.CopyBackup].
 *
 * @generated from message google.spanner.admin.database.v1.CopyBackupMetadata
 */
export type CopyBackupMetadata = Message<"google.spanner.admin.database.v1.CopyBackupMetadata"> & {
  /**
   * The name of the backup being created through the copy operation.
   * Values are of the form
   * `projects/<project>/instances/<instance>/backups/<backup>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The name of the source backup that is being copied.
   * Values are of the form
   * `projects/<project>/instances/<instance>/backups/<backup>`.
   *
   * @generated from field: string source_backup = 2;
   */
  sourceBackup: string;

  /**
   * The progress of the
   * [CopyBackup][google.spanner.admin.database.v1.DatabaseAdmin.CopyBackup]
   * operation.
   *
   * @generated from field: google.spanner.admin.database.v1.OperationProgress progress = 3;
   */
  progress?: OperationProgress;

  /**
   * The time at which cancellation of CopyBackup operation was received.
   * [Operations.CancelOperation][google.longrunning.Operations.CancelOperation]
   * starts asynchronous cancellation on a long-running operation. The server
   * makes a best effort to cancel the operation, but success is not guaranteed.
   * Clients can use
   * [Operations.GetOperation][google.longrunning.Operations.GetOperation] or
   * other methods to check whether the cancellation succeeded or whether the
   * operation completed despite cancellation. On successful cancellation,
   * the operation is not deleted; instead, it becomes an operation with
   * an [Operation.error][google.longrunning.Operation.error] value with a
   * [google.rpc.Status.code][google.rpc.Status.code] of 1,
   * corresponding to `Code.CANCELLED`.
   *
   * @generated from field: google.protobuf.Timestamp cancel_time = 4;
   */
  cancelTime?: Timestamp;
};

/**
 * Describes the message google.spanner.admin.database.v1.CopyBackupMetadata.
 * Use `create(CopyBackupMetadataSchema)` to create a new message.
 */
export const CopyBackupMetadataSchema: GenMessage<CopyBackupMetadata> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 4);

/**
 * The request for
 * [UpdateBackup][google.spanner.admin.database.v1.DatabaseAdmin.UpdateBackup].
 *
 * @generated from message google.spanner.admin.database.v1.UpdateBackupRequest
 */
export type UpdateBackupRequest = Message<"google.spanner.admin.database.v1.UpdateBackupRequest"> & {
  /**
   * Required. The backup to update. `backup.name`, and the fields to be updated
   * as specified by `update_mask` are required. Other fields are ignored.
   * Update is only supported for the following fields:
   *  * `backup.expire_time`.
   *
   * @generated from field: google.spanner.admin.database.v1.Backup backup = 1;
   */
  backup?: Backup;

  /**
   * Required. A mask specifying which fields (e.g. `expire_time`) in the
   * Backup resource should be updated. This mask is relative to the Backup
   * resource, not to the request message. The field mask must always be
   * specified; this prevents any future fields from being erased accidentally
   * by clients that do not know about them.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.spanner.admin.database.v1.UpdateBackupRequest.
 * Use `create(UpdateBackupRequestSchema)` to create a new message.
 */
export const UpdateBackupRequestSchema: GenMessage<UpdateBackupRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 5);

/**
 * The request for
 * [GetBackup][google.spanner.admin.database.v1.DatabaseAdmin.GetBackup].
 *
 * @generated from message google.spanner.admin.database.v1.GetBackupRequest
 */
export type GetBackupRequest = Message<"google.spanner.admin.database.v1.GetBackupRequest"> & {
  /**
   * Required. Name of the backup.
   * Values are of the form
   * `projects/<project>/instances/<instance>/backups/<backup>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.spanner.admin.database.v1.GetBackupRequest.
 * Use `create(GetBackupRequestSchema)` to create a new message.
 */
export const GetBackupRequestSchema: GenMessage<GetBackupRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 6);

/**
 * The request for
 * [DeleteBackup][google.spanner.admin.database.v1.DatabaseAdmin.DeleteBackup].
 *
 * @generated from message google.spanner.admin.database.v1.DeleteBackupRequest
 */
export type DeleteBackupRequest = Message<"google.spanner.admin.database.v1.DeleteBackupRequest"> & {
  /**
   * Required. Name of the backup to delete.
   * Values are of the form
   * `projects/<project>/instances/<instance>/backups/<backup>`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.spanner.admin.database.v1.DeleteBackupRequest.
 * Use `create(DeleteBackupRequestSchema)` to create a new message.
 */
export const DeleteBackupRequestSchema: GenMessage<DeleteBackupRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 7);

/**
 * The request for
 * [ListBackups][google.spanner.admin.database.v1.DatabaseAdmin.ListBackups].
 *
 * @generated from message google.spanner.admin.database.v1.ListBackupsRequest
 */
export type ListBackupsRequest = Message<"google.spanner.admin.database.v1.ListBackupsRequest"> & {
  /**
   * Required. The instance to list backups from.  Values are of the
   * form `projects/<project>/instances/<instance>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * An expression that filters the list of returned backups.
   *
   * A filter expression consists of a field name, a comparison operator, and a
   * value for filtering.
   * The value must be a string, a number, or a boolean. The comparison operator
   * must be one of: `<`, `>`, `<=`, `>=`, `!=`, `=`, or `:`.
   * Colon `:` is the contains operator. Filter rules are not case sensitive.
   *
   * The following fields in the
   * [Backup][google.spanner.admin.database.v1.Backup] are eligible for
   * filtering:
   *
   *   * `name`
   *   * `database`
   *   * `state`
   *   * `create_time`  (and values are of the format YYYY-MM-DDTHH:MM:SSZ)
   *   * `expire_time`  (and values are of the format YYYY-MM-DDTHH:MM:SSZ)
   *   * `version_time` (and values are of the format YYYY-MM-DDTHH:MM:SSZ)
   *   * `size_bytes`
   *   * `backup_schedules`
   *
   * You can combine multiple expressions by enclosing each expression in
   * parentheses. By default, expressions are combined with AND logic, but
   * you can specify AND, OR, and NOT logic explicitly.
   *
   * Here are a few examples:
   *
   *   * `name:Howl` - The backup's name contains the string "howl".
   *   * `database:prod`
   *          - The database's name contains the string "prod".
   *   * `state:CREATING` - The backup is pending creation.
   *   * `state:READY` - The backup is fully created and ready for use.
   *   * `(name:howl) AND (create_time < \"2018-03-28T14:50:00Z\")`
   *          - The backup name contains the string "howl" and `create_time`
   *              of the backup is before 2018-03-28T14:50:00Z.
   *   * `expire_time < \"2018-03-28T14:50:00Z\"`
   *          - The backup `expire_time` is before 2018-03-28T14:50:00Z.
   *   * `size_bytes > 10000000000` - The backup's size is greater than 10GB
   *   * `backup_schedules:daily`
   *          - The backup is created from a schedule with "daily" in its name.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Number of backups to be returned in the response. If 0 or
   * less, defaults to the server's maximum allowed page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * If non-empty, `page_token` should contain a
   * [next_page_token][google.spanner.admin.database.v1.ListBackupsResponse.next_page_token]
   * from a previous
   * [ListBackupsResponse][google.spanner.admin.database.v1.ListBackupsResponse]
   * to the same `parent` and with the same `filter`.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.spanner.admin.database.v1.ListBackupsRequest.
 * Use `create(ListBackupsRequestSchema)` to create a new message.
 */
export const ListBackupsRequestSchema: GenMessage<ListBackupsRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 8);

/**
 * The response for
 * [ListBackups][google.spanner.admin.database.v1.DatabaseAdmin.ListBackups].
 *
 * @generated from message google.spanner.admin.database.v1.ListBackupsResponse
 */
export type ListBackupsResponse = Message<"google.spanner.admin.database.v1.ListBackupsResponse"> & {
  /**
   * The list of matching backups. Backups returned are ordered by `create_time`
   * in descending order, starting from the most recent `create_time`.
   *
   * @generated from field: repeated google.spanner.admin.database.v1.Backup backups = 1;
   */
  backups: Backup[];

  /**
   * `next_page_token` can be sent in a subsequent
   * [ListBackups][google.spanner.admin.database.v1.DatabaseAdmin.ListBackups]
   * call to fetch more of the matching backups.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.spanner.admin.database.v1.ListBackupsResponse.
 * Use `create(ListBackupsResponseSchema)` to create a new message.
 */
export const ListBackupsResponseSchema: GenMessage<ListBackupsResponse> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 9);

/**
 * The request for
 * [ListBackupOperations][google.spanner.admin.database.v1.DatabaseAdmin.ListBackupOperations].
 *
 * @generated from message google.spanner.admin.database.v1.ListBackupOperationsRequest
 */
export type ListBackupOperationsRequest = Message<"google.spanner.admin.database.v1.ListBackupOperationsRequest"> & {
  /**
   * Required. The instance of the backup operations. Values are of
   * the form `projects/<project>/instances/<instance>`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * An expression that filters the list of returned backup operations.
   *
   * A filter expression consists of a field name, a
   * comparison operator, and a value for filtering.
   * The value must be a string, a number, or a boolean. The comparison operator
   * must be one of: `<`, `>`, `<=`, `>=`, `!=`, `=`, or `:`.
   * Colon `:` is the contains operator. Filter rules are not case sensitive.
   *
   * The following fields in the [operation][google.longrunning.Operation]
   * are eligible for filtering:
   *
   *   * `name` - The name of the long-running operation
   *   * `done` - False if the operation is in progress, else true.
   *   * `metadata.@type` - the type of metadata. For example, the type string
   *      for
   *      [CreateBackupMetadata][google.spanner.admin.database.v1.CreateBackupMetadata]
   *      is
   *      `type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata`.
   *   * `metadata.<field_name>` - any field in metadata.value.
   *      `metadata.@type` must be specified first if filtering on metadata
   *      fields.
   *   * `error` - Error associated with the long-running operation.
   *   * `response.@type` - the type of response.
   *   * `response.<field_name>` - any field in response.value.
   *
   * You can combine multiple expressions by enclosing each expression in
   * parentheses. By default, expressions are combined with AND logic, but
   * you can specify AND, OR, and NOT logic explicitly.
   *
   * Here are a few examples:
   *
   *   * `done:true` - The operation is complete.
   *   * `(metadata.@type=type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata) AND` \
   *      `metadata.database:prod` - Returns operations where:
   *      * The operation's metadata type is
   *      [CreateBackupMetadata][google.spanner.admin.database.v1.CreateBackupMetadata].
   *      * The source database name of backup contains the string "prod".
   *   * `(metadata.@type=type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata) AND` \
   *     `(metadata.name:howl) AND` \
   *     `(metadata.progress.start_time < \"2018-03-28T14:50:00Z\") AND` \
   *     `(error:*)` - Returns operations where:
   *     * The operation's metadata type is
   *     [CreateBackupMetadata][google.spanner.admin.database.v1.CreateBackupMetadata].
   *     * The backup name contains the string "howl".
   *     * The operation started before 2018-03-28T14:50:00Z.
   *     * The operation resulted in an error.
   *   * `(metadata.@type=type.googleapis.com/google.spanner.admin.database.v1.CopyBackupMetadata) AND` \
   *     `(metadata.source_backup:test) AND` \
   *     `(metadata.progress.start_time < \"2022-01-18T14:50:00Z\") AND` \
   *     `(error:*)` - Returns operations where:
   *     * The operation's metadata type is
   *     [CopyBackupMetadata][google.spanner.admin.database.v1.CopyBackupMetadata].
   *     * The source backup name contains the string "test".
   *     * The operation started before 2022-01-18T14:50:00Z.
   *     * The operation resulted in an error.
   *   * `((metadata.@type=type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata) AND` \
   *     `(metadata.database:test_db)) OR` \
   *     `((metadata.@type=type.googleapis.com/google.spanner.admin.database.v1.CopyBackupMetadata)
   *     AND` \
   *     `(metadata.source_backup:test_bkp)) AND` \
   *     `(error:*)` - Returns operations where:
   *     * The operation's metadata matches either of criteria:
   *       * The operation's metadata type is
   *       [CreateBackupMetadata][google.spanner.admin.database.v1.CreateBackupMetadata]
   *       AND the source database name of the backup contains the string
   *       "test_db"
   *       * The operation's metadata type is
   *       [CopyBackupMetadata][google.spanner.admin.database.v1.CopyBackupMetadata]
   *       AND the source backup name contains the string "test_bkp"
   *     * The operation resulted in an error.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Number of operations to be returned in the response. If 0 or
   * less, defaults to the server's maximum allowed page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * If non-empty, `page_token` should contain a
   * [next_page_token][google.spanner.admin.database.v1.ListBackupOperationsResponse.next_page_token]
   * from a previous
   * [ListBackupOperationsResponse][google.spanner.admin.database.v1.ListBackupOperationsResponse]
   * to the same `parent` and with the same `filter`.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.spanner.admin.database.v1.ListBackupOperationsRequest.
 * Use `create(ListBackupOperationsRequestSchema)` to create a new message.
 */
export const ListBackupOperationsRequestSchema: GenMessage<ListBackupOperationsRequest> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 10);

/**
 * The response for
 * [ListBackupOperations][google.spanner.admin.database.v1.DatabaseAdmin.ListBackupOperations].
 *
 * @generated from message google.spanner.admin.database.v1.ListBackupOperationsResponse
 */
export type ListBackupOperationsResponse = Message<"google.spanner.admin.database.v1.ListBackupOperationsResponse"> & {
  /**
   * The list of matching backup [long-running
   * operations][google.longrunning.Operation]. Each operation's name will be
   * prefixed by the backup's name. The operation's
   * [metadata][google.longrunning.Operation.metadata] field type
   * `metadata.type_url` describes the type of the metadata. Operations returned
   * include those that are pending or have completed/failed/canceled within the
   * last 7 days. Operations returned are ordered by
   * `operation.metadata.value.progress.start_time` in descending order starting
   * from the most recently started operation.
   *
   * @generated from field: repeated google.longrunning.Operation operations = 1;
   */
  operations: Operation[];

  /**
   * `next_page_token` can be sent in a subsequent
   * [ListBackupOperations][google.spanner.admin.database.v1.DatabaseAdmin.ListBackupOperations]
   * call to fetch more of the matching metadata.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.spanner.admin.database.v1.ListBackupOperationsResponse.
 * Use `create(ListBackupOperationsResponseSchema)` to create a new message.
 */
export const ListBackupOperationsResponseSchema: GenMessage<ListBackupOperationsResponse> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 11);

/**
 * Information about a backup.
 *
 * @generated from message google.spanner.admin.database.v1.BackupInfo
 */
export type BackupInfo = Message<"google.spanner.admin.database.v1.BackupInfo"> & {
  /**
   * Name of the backup.
   *
   * @generated from field: string backup = 1;
   */
  backup: string;

  /**
   * The backup contains an externally consistent copy of `source_database` at
   * the timestamp specified by `version_time`. If the
   * [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup]
   * request did not specify `version_time`, the `version_time` of the backup is
   * equivalent to the `create_time`.
   *
   * @generated from field: google.protobuf.Timestamp version_time = 4;
   */
  versionTime?: Timestamp;

  /**
   * The time the
   * [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup]
   * request was received.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Name of the database the backup was created from.
   *
   * @generated from field: string source_database = 3;
   */
  sourceDatabase: string;
};

/**
 * Describes the message google.spanner.admin.database.v1.BackupInfo.
 * Use `create(BackupInfoSchema)` to create a new message.
 */
export const BackupInfoSchema: GenMessage<BackupInfo> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 12);

/**
 * Encryption configuration for the backup to create.
 *
 * @generated from message google.spanner.admin.database.v1.CreateBackupEncryptionConfig
 */
export type CreateBackupEncryptionConfig = Message<"google.spanner.admin.database.v1.CreateBackupEncryptionConfig"> & {
  /**
   * Required. The encryption type of the backup.
   *
   * @generated from field: google.spanner.admin.database.v1.CreateBackupEncryptionConfig.EncryptionType encryption_type = 1;
   */
  encryptionType: CreateBackupEncryptionConfig_EncryptionType;

  /**
   * Optional. The Cloud KMS key that will be used to protect the backup.
   * This field should be set only when
   * [encryption_type][google.spanner.admin.database.v1.CreateBackupEncryptionConfig.encryption_type]
   * is `CUSTOMER_MANAGED_ENCRYPTION`. Values are of the form
   * `projects/<project>/locations/<location>/keyRings/<key_ring>/cryptoKeys/<kms_key_name>`.
   *
   * @generated from field: string kms_key_name = 2;
   */
  kmsKeyName: string;

  /**
   * Optional. Specifies the KMS configuration for the one or more keys used to
   * protect the backup. Values are of the form
   * `projects/<project>/locations/<location>/keyRings/<key_ring>/cryptoKeys/<kms_key_name>`.
   *
   * The keys referenced by kms_key_names must fully cover all
   * regions of the backup's instance configuration. Some examples:
   * * For single region instance configs, specify a single regional
   * location KMS key.
   * * For multi-regional instance configs of type GOOGLE_MANAGED,
   * either specify a multi-regional location KMS key or multiple regional
   * location KMS keys that cover all regions in the instance config.
   * * For an instance config of type USER_MANAGED, please specify only
   * regional location KMS keys to cover each region in the instance config.
   * Multi-regional location KMS keys are not supported for USER_MANAGED
   * instance configs.
   *
   * @generated from field: repeated string kms_key_names = 3;
   */
  kmsKeyNames: string[];
};

/**
 * Describes the message google.spanner.admin.database.v1.CreateBackupEncryptionConfig.
 * Use `create(CreateBackupEncryptionConfigSchema)` to create a new message.
 */
export const CreateBackupEncryptionConfigSchema: GenMessage<CreateBackupEncryptionConfig> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 13);

/**
 * Encryption types for the backup.
 *
 * @generated from enum google.spanner.admin.database.v1.CreateBackupEncryptionConfig.EncryptionType
 */
export enum CreateBackupEncryptionConfig_EncryptionType {
  /**
   * Unspecified. Do not use.
   *
   * @generated from enum value: ENCRYPTION_TYPE_UNSPECIFIED = 0;
   */
  ENCRYPTION_TYPE_UNSPECIFIED = 0,

  /**
   * Use the same encryption configuration as the database. This is the
   * default option when
   * [encryption_config][google.spanner.admin.database.v1.CreateBackupEncryptionConfig]
   * is empty. For example, if the database is using
   * `Customer_Managed_Encryption`, the backup will be using the same Cloud
   * KMS key as the database.
   *
   * @generated from enum value: USE_DATABASE_ENCRYPTION = 1;
   */
  USE_DATABASE_ENCRYPTION = 1,

  /**
   * Use Google default encryption.
   *
   * @generated from enum value: GOOGLE_DEFAULT_ENCRYPTION = 2;
   */
  GOOGLE_DEFAULT_ENCRYPTION = 2,

  /**
   * Use customer managed encryption. If specified, `kms_key_name`
   * must contain a valid Cloud KMS key.
   *
   * @generated from enum value: CUSTOMER_MANAGED_ENCRYPTION = 3;
   */
  CUSTOMER_MANAGED_ENCRYPTION = 3,
}

/**
 * Describes the enum google.spanner.admin.database.v1.CreateBackupEncryptionConfig.EncryptionType.
 */
export const CreateBackupEncryptionConfig_EncryptionTypeSchema: GenEnum<CreateBackupEncryptionConfig_EncryptionType> = /*@__PURE__*/
  enumDesc(file_google_spanner_admin_database_v1_backup, 13, 0);

/**
 * Encryption configuration for the copied backup.
 *
 * @generated from message google.spanner.admin.database.v1.CopyBackupEncryptionConfig
 */
export type CopyBackupEncryptionConfig = Message<"google.spanner.admin.database.v1.CopyBackupEncryptionConfig"> & {
  /**
   * Required. The encryption type of the backup.
   *
   * @generated from field: google.spanner.admin.database.v1.CopyBackupEncryptionConfig.EncryptionType encryption_type = 1;
   */
  encryptionType: CopyBackupEncryptionConfig_EncryptionType;

  /**
   * Optional. The Cloud KMS key that will be used to protect the backup.
   * This field should be set only when
   * [encryption_type][google.spanner.admin.database.v1.CopyBackupEncryptionConfig.encryption_type]
   * is `CUSTOMER_MANAGED_ENCRYPTION`. Values are of the form
   * `projects/<project>/locations/<location>/keyRings/<key_ring>/cryptoKeys/<kms_key_name>`.
   *
   * @generated from field: string kms_key_name = 2;
   */
  kmsKeyName: string;

  /**
   * Optional. Specifies the KMS configuration for the one or more keys used to
   * protect the backup. Values are of the form
   * `projects/<project>/locations/<location>/keyRings/<key_ring>/cryptoKeys/<kms_key_name>`.
   * Kms keys specified can be in any order.
   *
   * The keys referenced by kms_key_names must fully cover all
   * regions of the backup's instance configuration. Some examples:
   * * For single region instance configs, specify a single regional
   * location KMS key.
   * * For multi-regional instance configs of type GOOGLE_MANAGED,
   * either specify a multi-regional location KMS key or multiple regional
   * location KMS keys that cover all regions in the instance config.
   * * For an instance config of type USER_MANAGED, please specify only
   * regional location KMS keys to cover each region in the instance config.
   * Multi-regional location KMS keys are not supported for USER_MANAGED
   * instance configs.
   *
   * @generated from field: repeated string kms_key_names = 3;
   */
  kmsKeyNames: string[];
};

/**
 * Describes the message google.spanner.admin.database.v1.CopyBackupEncryptionConfig.
 * Use `create(CopyBackupEncryptionConfigSchema)` to create a new message.
 */
export const CopyBackupEncryptionConfigSchema: GenMessage<CopyBackupEncryptionConfig> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 14);

/**
 * Encryption types for the backup.
 *
 * @generated from enum google.spanner.admin.database.v1.CopyBackupEncryptionConfig.EncryptionType
 */
export enum CopyBackupEncryptionConfig_EncryptionType {
  /**
   * Unspecified. Do not use.
   *
   * @generated from enum value: ENCRYPTION_TYPE_UNSPECIFIED = 0;
   */
  ENCRYPTION_TYPE_UNSPECIFIED = 0,

  /**
   * This is the default option for
   * [CopyBackup][google.spanner.admin.database.v1.DatabaseAdmin.CopyBackup]
   * when
   * [encryption_config][google.spanner.admin.database.v1.CopyBackupEncryptionConfig]
   * is not specified. For example, if the source backup is using
   * `Customer_Managed_Encryption`, the backup will be using the same Cloud
   * KMS key as the source backup.
   *
   * @generated from enum value: USE_CONFIG_DEFAULT_OR_BACKUP_ENCRYPTION = 1;
   */
  USE_CONFIG_DEFAULT_OR_BACKUP_ENCRYPTION = 1,

  /**
   * Use Google default encryption.
   *
   * @generated from enum value: GOOGLE_DEFAULT_ENCRYPTION = 2;
   */
  GOOGLE_DEFAULT_ENCRYPTION = 2,

  /**
   * Use customer managed encryption. If specified, either `kms_key_name` or
   * `kms_key_names` must contain valid Cloud KMS key(s).
   *
   * @generated from enum value: CUSTOMER_MANAGED_ENCRYPTION = 3;
   */
  CUSTOMER_MANAGED_ENCRYPTION = 3,
}

/**
 * Describes the enum google.spanner.admin.database.v1.CopyBackupEncryptionConfig.EncryptionType.
 */
export const CopyBackupEncryptionConfig_EncryptionTypeSchema: GenEnum<CopyBackupEncryptionConfig_EncryptionType> = /*@__PURE__*/
  enumDesc(file_google_spanner_admin_database_v1_backup, 14, 0);

/**
 * The specification for full backups.
 * A full backup stores the entire contents of the database at a given
 * version time.
 *
 * @generated from message google.spanner.admin.database.v1.FullBackupSpec
 */
export type FullBackupSpec = Message<"google.spanner.admin.database.v1.FullBackupSpec"> & {
};

/**
 * Describes the message google.spanner.admin.database.v1.FullBackupSpec.
 * Use `create(FullBackupSpecSchema)` to create a new message.
 */
export const FullBackupSpecSchema: GenMessage<FullBackupSpec> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 15);

/**
 * The specification for incremental backup chains.
 * An incremental backup stores the delta of changes between a previous
 * backup and the database contents at a given version time. An
 * incremental backup chain consists of a full backup and zero or more
 * successive incremental backups. The first backup created for an
 * incremental backup chain is always a full backup.
 *
 * @generated from message google.spanner.admin.database.v1.IncrementalBackupSpec
 */
export type IncrementalBackupSpec = Message<"google.spanner.admin.database.v1.IncrementalBackupSpec"> & {
};

/**
 * Describes the message google.spanner.admin.database.v1.IncrementalBackupSpec.
 * Use `create(IncrementalBackupSpecSchema)` to create a new message.
 */
export const IncrementalBackupSpecSchema: GenMessage<IncrementalBackupSpec> = /*@__PURE__*/
  messageDesc(file_google_spanner_admin_database_v1_backup, 16);

