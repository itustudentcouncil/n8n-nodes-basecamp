// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/apps/events/subscriptions/v1/subscriptions_service.proto (package google.apps.events.subscriptions.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { Subscription, SubscriptionSchema } from "./subscription_resource_pb";
import { file_google_apps_events_subscriptions_v1_subscription_resource } from "./subscription_resource_pb";
import type { OperationSchema } from "../../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../../longrunning/operations_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/apps/events/subscriptions/v1/subscriptions_service.proto.
 */
export const file_google_apps_events_subscriptions_v1_subscriptions_service: GenFile = /*@__PURE__*/
  fileDesc("Cj9nb29nbGUvYXBwcy9ldmVudHMvc3Vic2NyaXB0aW9ucy92MS9zdWJzY3JpcHRpb25zX3NlcnZpY2UucHJvdG8SI2dvb2dsZS5hcHBzLmV2ZW50cy5zdWJzY3JpcHRpb25zLnYxIoUBChlDcmVhdGVTdWJzY3JpcHRpb25SZXF1ZXN0EkwKDHN1YnNjcmlwdGlvbhgBIAEoCzIxLmdvb2dsZS5hcHBzLmV2ZW50cy5zdWJzY3JpcHRpb25zLnYxLlN1YnNjcmlwdGlvbkID4EECEhoKDXZhbGlkYXRlX29ubHkYAiABKAhCA+BBASKpAQoZRGVsZXRlU3Vic2NyaXB0aW9uUmVxdWVzdBJBCgRuYW1lGAEgASgJQjPgQQL6QS0KK3dvcmtzcGFjZWV2ZW50cy5nb29nbGVhcGlzLmNvbS9TdWJzY3JpcHRpb24SGgoNdmFsaWRhdGVfb25seRgCIAEoCEID4EEBEhoKDWFsbG93X21pc3NpbmcYAyABKAhCA+BBARIRCgRldGFnGAQgASgJQgPgQQEiWwoWR2V0U3Vic2NyaXB0aW9uUmVxdWVzdBJBCgRuYW1lGAEgASgJQjPgQQL6QS0KK3dvcmtzcGFjZWV2ZW50cy5nb29nbGVhcGlzLmNvbS9TdWJzY3JpcHRpb24iuwEKGVVwZGF0ZVN1YnNjcmlwdGlvblJlcXVlc3QSTAoMc3Vic2NyaXB0aW9uGAEgASgLMjEuZ29vZ2xlLmFwcHMuZXZlbnRzLnN1YnNjcmlwdGlvbnMudjEuU3Vic2NyaXB0aW9uQgPgQQISNAoLdXBkYXRlX21hc2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrQgPgQQESGgoNdmFsaWRhdGVfb25seRgDIAEoCEID4EEBImIKHVJlYWN0aXZhdGVTdWJzY3JpcHRpb25SZXF1ZXN0EkEKBG5hbWUYASABKAlCM+BBAvpBLQord29ya3NwYWNlZXZlbnRzLmdvb2dsZWFwaXMuY29tL1N1YnNjcmlwdGlvbiJgChhMaXN0U3Vic2NyaXB0aW9uc1JlcXVlc3QSFgoJcGFnZV9zaXplGAEgASgFQgPgQQESFwoKcGFnZV90b2tlbhgCIAEoCUID4EEBEhMKBmZpbHRlchgDIAEoCUID4EECIn4KGUxpc3RTdWJzY3JpcHRpb25zUmVzcG9uc2USSAoNc3Vic2NyaXB0aW9ucxgBIAMoCzIxLmdvb2dsZS5hcHBzLmV2ZW50cy5zdWJzY3JpcHRpb25zLnYxLlN1YnNjcmlwdGlvbhIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiHAoaVXBkYXRlU3Vic2NyaXB0aW9uTWV0YWRhdGEiHAoaQ3JlYXRlU3Vic2NyaXB0aW9uTWV0YWRhdGEiHAoaRGVsZXRlU3Vic2NyaXB0aW9uTWV0YWRhdGEiIAoeUmVhY3RpdmF0ZVN1YnNjcmlwdGlvbk1ldGFkYXRhMv8OChRTdWJzY3JpcHRpb25zU2VydmljZRLYAQoSQ3JlYXRlU3Vic2NyaXB0aW9uEj4uZ29vZ2xlLmFwcHMuZXZlbnRzLnN1YnNjcmlwdGlvbnMudjEuQ3JlYXRlU3Vic2NyaXB0aW9uUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24iY8pBKgoMU3Vic2NyaXB0aW9uEhpDcmVhdGVTdWJzY3JpcHRpb25NZXRhZGF0YdpBDHN1YnNjcmlwdGlvboLT5JMCIToMc3Vic2NyaXB0aW9uIhEvdjEvc3Vic2NyaXB0aW9ucxLUAQoSRGVsZXRlU3Vic2NyaXB0aW9uEj4uZ29vZ2xlLmFwcHMuZXZlbnRzLnN1YnNjcmlwdGlvbnMudjEuRGVsZXRlU3Vic2NyaXB0aW9uUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24iX8pBMwoVZ29vZ2xlLnByb3RvYnVmLkVtcHR5EhpEZWxldGVTdWJzY3JpcHRpb25NZXRhZGF0YdpBBG5hbWWC0+STAhwqGi92MS97bmFtZT1zdWJzY3JpcHRpb25zLyp9EqwBCg9HZXRTdWJzY3JpcHRpb24SOy5nb29nbGUuYXBwcy5ldmVudHMuc3Vic2NyaXB0aW9ucy52MS5HZXRTdWJzY3JpcHRpb25SZXF1ZXN0GjEuZ29vZ2xlLmFwcHMuZXZlbnRzLnN1YnNjcmlwdGlvbnMudjEuU3Vic2NyaXB0aW9uIinaQQRuYW1lgtPkkwIcEhovdjEve25hbWU9c3Vic2NyaXB0aW9ucy8qfRK2AQoRTGlzdFN1YnNjcmlwdGlvbnMSPS5nb29nbGUuYXBwcy5ldmVudHMuc3Vic2NyaXB0aW9ucy52MS5MaXN0U3Vic2NyaXB0aW9uc1JlcXVlc3QaPi5nb29nbGUuYXBwcy5ldmVudHMuc3Vic2NyaXB0aW9ucy52MS5MaXN0U3Vic2NyaXB0aW9uc1Jlc3BvbnNlIiLaQQZmaWx0ZXKC0+STAhMSES92MS9zdWJzY3JpcHRpb25zEvsBChJVcGRhdGVTdWJzY3JpcHRpb24SPi5nb29nbGUuYXBwcy5ldmVudHMuc3Vic2NyaXB0aW9ucy52MS5VcGRhdGVTdWJzY3JpcHRpb25SZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKFAcpBKgoMU3Vic2NyaXB0aW9uEhpVcGRhdGVTdWJzY3JpcHRpb25NZXRhZGF0YdpBGHN1YnNjcmlwdGlvbix1cGRhdGVfbWFza4LT5JMCNzoMc3Vic2NyaXB0aW9uMicvdjEve3N1YnNjcmlwdGlvbi5uYW1lPXN1YnNjcmlwdGlvbnMvKn0S5QEKFlJlYWN0aXZhdGVTdWJzY3JpcHRpb24SQi5nb29nbGUuYXBwcy5ldmVudHMuc3Vic2NyaXB0aW9ucy52MS5SZWFjdGl2YXRlU3Vic2NyaXB0aW9uUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24iaMpBLgoMU3Vic2NyaXB0aW9uEh5SZWFjdGl2YXRlU3Vic2NyaXB0aW9uTWV0YWRhdGHaQQRuYW1lgtPkkwIqOgEqIiUvdjEve25hbWU9c3Vic2NyaXB0aW9ucy8qfTpyZWFjdGl2YXRlGuYEykEed29ya3NwYWNlZXZlbnRzLmdvb2dsZWFwaXMuY29t0kHBBGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2hhdC5ib3QsaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jaGF0Lm1lbWJlcnNoaXBzLGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2hhdC5tZW1iZXJzaGlwcy5yZWFkb25seSxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2NoYXQubWVzc2FnZXMsaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jaGF0Lm1lc3NhZ2VzLnJlYWN0aW9ucyxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2NoYXQubWVzc2FnZXMucmVhY3Rpb25zLnJlYWRvbmx5LGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2hhdC5tZXNzYWdlcy5yZWFkb25seSxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2NoYXQuc3BhY2VzLGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2hhdC5zcGFjZXMucmVhZG9ubHksaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9tZWV0aW5ncy5zcGFjZS5jcmVhdGVkLGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvbWVldGluZ3Muc3BhY2UucmVhZG9ubHlCkQIKJ2NvbS5nb29nbGUuYXBwcy5ldmVudHMuc3Vic2NyaXB0aW9ucy52MUIZU3Vic2NyaXB0aW9uc1NlcnZpY2VQcm90b1ABWlNjbG91ZC5nb29nbGUuY29tL2dvL2FwcHMvZXZlbnRzL3N1YnNjcmlwdGlvbnMvYXBpdjEvc3Vic2NyaXB0aW9uc3BiO3N1YnNjcmlwdGlvbnNwYqoCI0dvb2dsZS5BcHBzLkV2ZW50cy5TdWJzY3JpcHRpb25zLlYxygIjR29vZ2xlXEFwcHNcRXZlbnRzXFN1YnNjcmlwdGlvbnNcVjHqAidHb29nbGU6OkFwcHM6OkV2ZW50czo6U3Vic2NyaXB0aW9uczo6VjFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_apps_events_subscriptions_v1_subscription_resource, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * The request message for
 * [SubscriptionsService.CreateSubscription][google.apps.events.subscriptions.v1.SubscriptionsService.CreateSubscription].
 *
 * @generated from message google.apps.events.subscriptions.v1.CreateSubscriptionRequest
 */
export type CreateSubscriptionRequest = Message<"google.apps.events.subscriptions.v1.CreateSubscriptionRequest"> & {
  /**
   * Required. The subscription resource to create.
   *
   * @generated from field: google.apps.events.subscriptions.v1.Subscription subscription = 1;
   */
  subscription?: Subscription;

  /**
   * Optional. If set to `true`, validates and previews the request, but doesn't
   * create the subscription.
   *
   * @generated from field: bool validate_only = 2;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.apps.events.subscriptions.v1.CreateSubscriptionRequest.
 * Use `create(CreateSubscriptionRequestSchema)` to create a new message.
 */
export const CreateSubscriptionRequestSchema: GenMessage<CreateSubscriptionRequest> = /*@__PURE__*/
  messageDesc(file_google_apps_events_subscriptions_v1_subscriptions_service, 0);

/**
 * The request message for
 * [SubscriptionsService.DeleteSubscription][google.apps.events.subscriptions.v1.SubscriptionsService.DeleteSubscription].
 *
 * @generated from message google.apps.events.subscriptions.v1.DeleteSubscriptionRequest
 */
export type DeleteSubscriptionRequest = Message<"google.apps.events.subscriptions.v1.DeleteSubscriptionRequest"> & {
  /**
   * Required. Resource name of the subscription to delete.
   *
   * Format: `subscriptions/{subscription}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. If set to `true`, validates and previews the request, but doesn't
   * delete the subscription.
   *
   * @generated from field: bool validate_only = 2;
   */
  validateOnly: boolean;

  /**
   * Optional. If set to `true` and the subscription isn't found, the request
   * succeeds but doesn't delete the subscription.
   *
   * @generated from field: bool allow_missing = 3;
   */
  allowMissing: boolean;

  /**
   * Optional. Etag of the subscription.
   *
   * If present, it must match with the server's etag. Otherwise, request
   * fails with the status `ABORTED`.
   *
   * @generated from field: string etag = 4;
   */
  etag: string;
};

/**
 * Describes the message google.apps.events.subscriptions.v1.DeleteSubscriptionRequest.
 * Use `create(DeleteSubscriptionRequestSchema)` to create a new message.
 */
export const DeleteSubscriptionRequestSchema: GenMessage<DeleteSubscriptionRequest> = /*@__PURE__*/
  messageDesc(file_google_apps_events_subscriptions_v1_subscriptions_service, 1);

/**
 * The request message for
 * [SubscriptionsService.GetSubscription][google.apps.events.subscriptions.v1.SubscriptionsService.GetSubscription].
 *
 * @generated from message google.apps.events.subscriptions.v1.GetSubscriptionRequest
 */
export type GetSubscriptionRequest = Message<"google.apps.events.subscriptions.v1.GetSubscriptionRequest"> & {
  /**
   * Required. Resource name of the subscription.
   *
   * Format: `subscriptions/{subscription}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.apps.events.subscriptions.v1.GetSubscriptionRequest.
 * Use `create(GetSubscriptionRequestSchema)` to create a new message.
 */
export const GetSubscriptionRequestSchema: GenMessage<GetSubscriptionRequest> = /*@__PURE__*/
  messageDesc(file_google_apps_events_subscriptions_v1_subscriptions_service, 2);

/**
 * The request message for
 * [SubscriptionsService.UpdateSubscription][google.apps.events.subscriptions.v1.SubscriptionsService.UpdateSubscription].
 *
 * @generated from message google.apps.events.subscriptions.v1.UpdateSubscriptionRequest
 */
export type UpdateSubscriptionRequest = Message<"google.apps.events.subscriptions.v1.UpdateSubscriptionRequest"> & {
  /**
   * Required. The subscription to update.
   *
   * The subscription's `name` field is used to identify the subscription to
   * update.
   *
   * @generated from field: google.apps.events.subscriptions.v1.Subscription subscription = 1;
   */
  subscription?: Subscription;

  /**
   * Optional. Required. The field to update.
   *
   * You can update one of the following fields in a subscription:
   *
   * * [`expire_time`][google.apps.events.subscriptions.v1.Subscription.expire_time]: The timestamp when the
   *   subscription expires.
   * * [`ttl`][google.apps.events.subscriptions.v1.Subscription.ttl]: The
   * time-to-live (TTL) or duration of the
   *   subscription.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * Optional. If set to `true`, validates and previews the request, but doesn't
   * update the subscription.
   *
   * @generated from field: bool validate_only = 3;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.apps.events.subscriptions.v1.UpdateSubscriptionRequest.
 * Use `create(UpdateSubscriptionRequestSchema)` to create a new message.
 */
export const UpdateSubscriptionRequestSchema: GenMessage<UpdateSubscriptionRequest> = /*@__PURE__*/
  messageDesc(file_google_apps_events_subscriptions_v1_subscriptions_service, 3);

/**
 * The request message for
 * [SubscriptionsService.ReactivateSubscription][google.apps.events.subscriptions.v1.SubscriptionsService.ReactivateSubscription].
 *
 * @generated from message google.apps.events.subscriptions.v1.ReactivateSubscriptionRequest
 */
export type ReactivateSubscriptionRequest = Message<"google.apps.events.subscriptions.v1.ReactivateSubscriptionRequest"> & {
  /**
   * Required. Resource name of the subscription.
   *
   * Format: `subscriptions/{subscription}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.apps.events.subscriptions.v1.ReactivateSubscriptionRequest.
 * Use `create(ReactivateSubscriptionRequestSchema)` to create a new message.
 */
export const ReactivateSubscriptionRequestSchema: GenMessage<ReactivateSubscriptionRequest> = /*@__PURE__*/
  messageDesc(file_google_apps_events_subscriptions_v1_subscriptions_service, 4);

/**
 * The request message for
 * [SubscriptionsService.ListSubscriptions][google.apps.events.subscriptions.v1.SubscriptionsService.ListSubscriptions].
 *
 * @generated from message google.apps.events.subscriptions.v1.ListSubscriptionsRequest
 */
export type ListSubscriptionsRequest = Message<"google.apps.events.subscriptions.v1.ListSubscriptionsRequest"> & {
  /**
   * Optional. The maximum number of subscriptions to return. The service might
   * return fewer than this value.
   *
   * If unspecified or set to `0`, up to 50 subscriptions are returned.
   *
   * The maximum value is 100. If you specify a value more than 100, the system
   * only returns 100 subscriptions.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Optional. A page token, received from a previous list subscriptions call.
   * Provide this parameter to retrieve the subsequent page.
   *
   * When paginating, the filter value should match the call that provided the
   * page token. Passing a different value might lead to unexpected results.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Required. A query filter.
   *
   * You can filter subscriptions by event type (`event_types`)
   * and target resource (`target_resource`).
   *
   * You must specify at least one event type in your query. To filter for
   * multiple event types, use the `OR` operator.
   *
   * To filter by both event type and target resource, use the `AND` operator
   * and specify the full resource name, such as
   * `//chat.googleapis.com/spaces/{space}`.
   *
   * For example, the following queries are valid:
   *
   * ```
   * event_types:"google.workspace.chat.membership.v1.updated" OR
   *   event_types:"google.workspace.chat.message.v1.created"
   *
   * event_types:"google.workspace.chat.message.v1.created" AND
   *   target_resource="//chat.googleapis.com/spaces/{space}"
   *
   * ( event_types:"google.workspace.chat.membership.v1.updated" OR
   *   event_types:"google.workspace.chat.message.v1.created" ) AND
   *   target_resource="//chat.googleapis.com/spaces/{space}"
   * ```
   *
   * The server rejects invalid queries with an `INVALID_ARGUMENT`
   * error.
   *
   * @generated from field: string filter = 3;
   */
  filter: string;
};

/**
 * Describes the message google.apps.events.subscriptions.v1.ListSubscriptionsRequest.
 * Use `create(ListSubscriptionsRequestSchema)` to create a new message.
 */
export const ListSubscriptionsRequestSchema: GenMessage<ListSubscriptionsRequest> = /*@__PURE__*/
  messageDesc(file_google_apps_events_subscriptions_v1_subscriptions_service, 5);

/**
 * The response message for
 * [SubscriptionsService.ListSubscriptions][google.apps.events.subscriptions.v1.SubscriptionsService.ListSubscriptions].
 *
 * @generated from message google.apps.events.subscriptions.v1.ListSubscriptionsResponse
 */
export type ListSubscriptionsResponse = Message<"google.apps.events.subscriptions.v1.ListSubscriptionsResponse"> & {
  /**
   * List of subscriptions.
   *
   * @generated from field: repeated google.apps.events.subscriptions.v1.Subscription subscriptions = 1;
   */
  subscriptions: Subscription[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.apps.events.subscriptions.v1.ListSubscriptionsResponse.
 * Use `create(ListSubscriptionsResponseSchema)` to create a new message.
 */
export const ListSubscriptionsResponseSchema: GenMessage<ListSubscriptionsResponse> = /*@__PURE__*/
  messageDesc(file_google_apps_events_subscriptions_v1_subscriptions_service, 6);

/**
 * Metadata for UpdateSubscription LRO.
 *
 * @generated from message google.apps.events.subscriptions.v1.UpdateSubscriptionMetadata
 */
export type UpdateSubscriptionMetadata = Message<"google.apps.events.subscriptions.v1.UpdateSubscriptionMetadata"> & {
};

/**
 * Describes the message google.apps.events.subscriptions.v1.UpdateSubscriptionMetadata.
 * Use `create(UpdateSubscriptionMetadataSchema)` to create a new message.
 */
export const UpdateSubscriptionMetadataSchema: GenMessage<UpdateSubscriptionMetadata> = /*@__PURE__*/
  messageDesc(file_google_apps_events_subscriptions_v1_subscriptions_service, 7);

/**
 * Metadata for CreateSubscription LRO.
 *
 * @generated from message google.apps.events.subscriptions.v1.CreateSubscriptionMetadata
 */
export type CreateSubscriptionMetadata = Message<"google.apps.events.subscriptions.v1.CreateSubscriptionMetadata"> & {
};

/**
 * Describes the message google.apps.events.subscriptions.v1.CreateSubscriptionMetadata.
 * Use `create(CreateSubscriptionMetadataSchema)` to create a new message.
 */
export const CreateSubscriptionMetadataSchema: GenMessage<CreateSubscriptionMetadata> = /*@__PURE__*/
  messageDesc(file_google_apps_events_subscriptions_v1_subscriptions_service, 8);

/**
 * Metadata for DeleteSubscription LRO.
 *
 * @generated from message google.apps.events.subscriptions.v1.DeleteSubscriptionMetadata
 */
export type DeleteSubscriptionMetadata = Message<"google.apps.events.subscriptions.v1.DeleteSubscriptionMetadata"> & {
};

/**
 * Describes the message google.apps.events.subscriptions.v1.DeleteSubscriptionMetadata.
 * Use `create(DeleteSubscriptionMetadataSchema)` to create a new message.
 */
export const DeleteSubscriptionMetadataSchema: GenMessage<DeleteSubscriptionMetadata> = /*@__PURE__*/
  messageDesc(file_google_apps_events_subscriptions_v1_subscriptions_service, 9);

/**
 * Metadata for ReactivateSubscription LRO.
 *
 * @generated from message google.apps.events.subscriptions.v1.ReactivateSubscriptionMetadata
 */
export type ReactivateSubscriptionMetadata = Message<"google.apps.events.subscriptions.v1.ReactivateSubscriptionMetadata"> & {
};

/**
 * Describes the message google.apps.events.subscriptions.v1.ReactivateSubscriptionMetadata.
 * Use `create(ReactivateSubscriptionMetadataSchema)` to create a new message.
 */
export const ReactivateSubscriptionMetadataSchema: GenMessage<ReactivateSubscriptionMetadata> = /*@__PURE__*/
  messageDesc(file_google_apps_events_subscriptions_v1_subscriptions_service, 10);

/**
 * A service that manages subscriptions to Google Workspace events.
 *
 * @generated from service google.apps.events.subscriptions.v1.SubscriptionsService
 */
export const SubscriptionsService: GenService<{
  /**
   * Creates a Google Workspace subscription. To learn how to use this
   * method, see [Create a Google Workspace
   * subscription](https://developers.google.com/workspace/events/guides/create-subscription).
   *
   * @generated from rpc google.apps.events.subscriptions.v1.SubscriptionsService.CreateSubscription
   */
  createSubscription: {
    methodKind: "unary";
    input: typeof CreateSubscriptionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a Google Workspace subscription.
   * To learn how to use this method, see [Delete a Google Workspace
   * subscription](https://developers.google.com/workspace/events/guides/delete-subscription).
   *
   * @generated from rpc google.apps.events.subscriptions.v1.SubscriptionsService.DeleteSubscription
   */
  deleteSubscription: {
    methodKind: "unary";
    input: typeof DeleteSubscriptionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Gets details about a Google Workspace subscription. To learn how to use
   * this method, see [Get details about a Google Workspace
   * subscription](https://developers.google.com/workspace/events/guides/get-subscription).
   *
   * @generated from rpc google.apps.events.subscriptions.v1.SubscriptionsService.GetSubscription
   */
  getSubscription: {
    methodKind: "unary";
    input: typeof GetSubscriptionRequestSchema;
    output: typeof SubscriptionSchema;
  },
  /**
   * Lists Google Workspace subscriptions. To learn how to use this method, see
   * [List Google Workspace
   * subscriptions](https://developers.google.com/workspace/events/guides/list-subscriptions).
   *
   * @generated from rpc google.apps.events.subscriptions.v1.SubscriptionsService.ListSubscriptions
   */
  listSubscriptions: {
    methodKind: "unary";
    input: typeof ListSubscriptionsRequestSchema;
    output: typeof ListSubscriptionsResponseSchema;
  },
  /**
   * Updates or renews a Google Workspace subscription. To learn how to use this
   * method, see [Update or renew a Google Workspace
   * subscription](https://developers.google.com/workspace/events/guides/update-subscription).
   *
   * @generated from rpc google.apps.events.subscriptions.v1.SubscriptionsService.UpdateSubscription
   */
  updateSubscription: {
    methodKind: "unary";
    input: typeof UpdateSubscriptionRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Reactivates a suspended Google Workspace subscription.
   *
   * This method resets your subscription's `State` field to `ACTIVE`. Before
   * you use this method, you must fix the error that suspended the
   * subscription. To learn how to use this method, see [Reactivate a Google
   * Workspace
   * subscription](https://developers.google.com/workspace/events/guides/reactivate-subscription).
   *
   * @generated from rpc google.apps.events.subscriptions.v1.SubscriptionsService.ReactivateSubscription
   */
  reactivateSubscription: {
    methodKind: "unary";
    input: typeof ReactivateSubscriptionRequestSchema;
    output: typeof OperationSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_apps_events_subscriptions_v1_subscriptions_service, 0);

