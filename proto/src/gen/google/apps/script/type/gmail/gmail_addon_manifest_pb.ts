// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/apps/script/type/gmail/gmail_addon_manifest.proto (package google.apps.script.type.gmail, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_apps_script_type_addon_widget_set } from "../addon_widget_set_pb";
import type { HomepageExtensionPoint, MenuItemExtensionPoint } from "../extension_point_pb";
import { file_google_apps_script_type_extension_point } from "../extension_point_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/apps/script/type/gmail/gmail_addon_manifest.proto.
 */
export const file_google_apps_script_type_gmail_gmail_addon_manifest: GenFile = /*@__PURE__*/
  fileDesc("Cjhnb29nbGUvYXBwcy9zY3JpcHQvdHlwZS9nbWFpbC9nbWFpbF9hZGRvbl9tYW5pZmVzdC5wcm90bxIdZ29vZ2xlLmFwcHMuc2NyaXB0LnR5cGUuZ21haWwi5wIKEkdtYWlsQWRkT25NYW5pZmVzdBJJChBob21lcGFnZV90cmlnZ2VyGA4gASgLMi8uZ29vZ2xlLmFwcHMuc2NyaXB0LnR5cGUuSG9tZXBhZ2VFeHRlbnNpb25Qb2ludBJNChNjb250ZXh0dWFsX3RyaWdnZXJzGAMgAygLMjAuZ29vZ2xlLmFwcHMuc2NyaXB0LnR5cGUuZ21haWwuQ29udGV4dHVhbFRyaWdnZXISSQoRdW5pdmVyc2FsX2FjdGlvbnMYBCADKAsyLi5nb29nbGUuYXBwcy5zY3JpcHQudHlwZS5nbWFpbC5Vbml2ZXJzYWxBY3Rpb24SRgoPY29tcG9zZV90cmlnZ2VyGAwgASgLMi0uZ29vZ2xlLmFwcHMuc2NyaXB0LnR5cGUuZ21haWwuQ29tcG9zZVRyaWdnZXISJAocYXV0aG9yaXphdGlvbl9jaGVja19mdW5jdGlvbhgHIAEoCSJbCg9Vbml2ZXJzYWxBY3Rpb24SDAoEdGV4dBgBIAEoCRITCglvcGVuX2xpbmsYAiABKAlIABIWCgxydW5fZnVuY3Rpb24YAyABKAlIAEINCgthY3Rpb25fdHlwZSLbAQoOQ29tcG9zZVRyaWdnZXISQAoHYWN0aW9ucxgFIAMoCzIvLmdvb2dsZS5hcHBzLnNjcmlwdC50eXBlLk1lbnVJdGVtRXh0ZW5zaW9uUG9pbnQSTwoMZHJhZnRfYWNjZXNzGAQgASgOMjkuZ29vZ2xlLmFwcHMuc2NyaXB0LnR5cGUuZ21haWwuQ29tcG9zZVRyaWdnZXIuRHJhZnRBY2Nlc3MiNgoLRHJhZnRBY2Nlc3MSDwoLVU5TUEVDSUZJRUQQABIICgROT05FEAESDAoITUVUQURBVEEQAiKJAQoRQ29udGV4dHVhbFRyaWdnZXISTAoNdW5jb25kaXRpb25hbBgBIAEoCzIzLmdvb2dsZS5hcHBzLnNjcmlwdC50eXBlLmdtYWlsLlVuY29uZGl0aW9uYWxUcmlnZ2VySAASGwoTb25fdHJpZ2dlcl9mdW5jdGlvbhgEIAEoCUIJCgd0cmlnZ2VyIhYKFFVuY29uZGl0aW9uYWxUcmlnZ2VyQuABCiFjb20uZ29vZ2xlLmFwcHMuc2NyaXB0LnR5cGUuZ21haWxCF0dtYWlsQWRkT25NYW5pZmVzdFByb3RvUAFaPGdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvYXBwcy9zY3JpcHQvdHlwZS9nbWFpbKoCHUdvb2dsZS5BcHBzLlNjcmlwdC5UeXBlLkdtYWlsygIdR29vZ2xlXEFwcHNcU2NyaXB0XFR5cGVcR21haWzqAiFHb29nbGU6OkFwcHM6OlNjcmlwdDo6VHlwZTo6R21haWxiBnByb3RvMw", [file_google_apps_script_type_addon_widget_set, file_google_apps_script_type_extension_point]);

/**
 * Properties customizing the appearance and execution of a Gmail add-on.
 *
 * @generated from message google.apps.script.type.gmail.GmailAddOnManifest
 */
export type GmailAddOnManifest = Message<"google.apps.script.type.gmail.GmailAddOnManifest"> & {
  /**
   * Defines an endpoint that will be executed in contexts that don't
   * match a declared contextual trigger. Any cards generated by this function
   * will always be available to the user, but may be eclipsed by contextual
   * content when this add-on declares more targeted triggers.
   *
   * If present, this overrides the configuration from
   * `addOns.common.homepageTrigger`.
   *
   * @generated from field: google.apps.script.type.HomepageExtensionPoint homepage_trigger = 14;
   */
  homepageTrigger?: HomepageExtensionPoint;

  /**
   * Defines the set of conditions that trigger the add-on.
   *
   * @generated from field: repeated google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
   */
  contextualTriggers: ContextualTrigger[];

  /**
   * Defines set of [universal
   * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
   * triggers universal actions from the add-on toolbar menu.
   *
   * @generated from field: repeated google.apps.script.type.gmail.UniversalAction universal_actions = 4;
   */
  universalActions: UniversalAction[];

  /**
   * Defines the compose time trigger for a compose time add-on. This is the
   * trigger that causes an add-on to take action when the user is composing an
   * email.
   * All compose time addons are required to have the
   * gmail.addons.current.action.compose scope even though it might not edit the
   * draft.
   *
   * @generated from field: google.apps.script.type.gmail.ComposeTrigger compose_trigger = 12;
   */
  composeTrigger?: ComposeTrigger;

  /**
   * The name of an endpoint that verifies that the add-on has
   * all the required third-party authorizations, by probing the third-party
   * APIs. If the probe fails, the function should throw an exception to
   * initiate the authorization flow. This function is called before each
   * invocation of the add-on, in order to ensure a smooth user experience.
   *
   * @generated from field: string authorization_check_function = 7;
   */
  authorizationCheckFunction: string;
};

/**
 * Describes the message google.apps.script.type.gmail.GmailAddOnManifest.
 * Use `create(GmailAddOnManifestSchema)` to create a new message.
 */
export const GmailAddOnManifestSchema: GenMessage<GmailAddOnManifest> = /*@__PURE__*/
  messageDesc(file_google_apps_script_type_gmail_gmail_addon_manifest, 0);

/**
 * An action that is always available in the add-on toolbar menu regardless of
 * message context.
 *
 * @generated from message google.apps.script.type.gmail.UniversalAction
 */
export type UniversalAction = Message<"google.apps.script.type.gmail.UniversalAction"> & {
  /**
   * Required. User-visible text describing the action, for example, "Add a new
   * contact."
   *
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * The type of the action determines the behavior of Gmail when the user
   * invokes the action.
   *
   * @generated from oneof google.apps.script.type.gmail.UniversalAction.action_type
   */
  actionType: {
    /**
     * A link that is opened by Gmail when the user triggers the action.
     *
     * @generated from field: string open_link = 2;
     */
    value: string;
    case: "openLink";
  } | {
    /**
     * An endpoint that is called when the user triggers the
     * action. See the [universal actions
     * guide](/gmail/add-ons/how-tos/universal-actions) for details.
     *
     * @generated from field: string run_function = 3;
     */
    value: string;
    case: "runFunction";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.apps.script.type.gmail.UniversalAction.
 * Use `create(UniversalActionSchema)` to create a new message.
 */
export const UniversalActionSchema: GenMessage<UniversalAction> = /*@__PURE__*/
  messageDesc(file_google_apps_script_type_gmail_gmail_addon_manifest, 1);

/**
 * A trigger that activates when user is composing an email.
 *
 * @generated from message google.apps.script.type.gmail.ComposeTrigger
 */
export type ComposeTrigger = Message<"google.apps.script.type.gmail.ComposeTrigger"> & {
  /**
   * Defines the set of actions for compose time add-on. These are actions
   * that user can trigger on a compose time addon.
   *
   * @generated from field: repeated google.apps.script.type.MenuItemExtensionPoint actions = 5;
   */
  actions: MenuItemExtensionPoint[];

  /**
   * Define the level of data access when a compose time addon is triggered.
   *
   * @generated from field: google.apps.script.type.gmail.ComposeTrigger.DraftAccess draft_access = 4;
   */
  draftAccess: ComposeTrigger_DraftAccess;
};

/**
 * Describes the message google.apps.script.type.gmail.ComposeTrigger.
 * Use `create(ComposeTriggerSchema)` to create a new message.
 */
export const ComposeTriggerSchema: GenMessage<ComposeTrigger> = /*@__PURE__*/
  messageDesc(file_google_apps_script_type_gmail_gmail_addon_manifest, 2);

/**
 * An enum defining the level of data access this compose trigger requires.
 *
 * @generated from enum google.apps.script.type.gmail.ComposeTrigger.DraftAccess
 */
export enum ComposeTrigger_DraftAccess {
  /**
   * Default value when nothing is set for DraftAccess.
   *
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * NONE means compose trigger won't be able to access any data of the draft
   * when a compose addon is triggered.
   *
   * @generated from enum value: NONE = 1;
   */
  NONE = 1,

  /**
   * METADATA gives compose trigger the permission to access the metadata of
   * the draft when a compose addon is triggered. This includes the audience
   * list (To/cc list) of a draft message.
   *
   * @generated from enum value: METADATA = 2;
   */
  METADATA = 2,
}

/**
 * Describes the enum google.apps.script.type.gmail.ComposeTrigger.DraftAccess.
 */
export const ComposeTrigger_DraftAccessSchema: GenEnum<ComposeTrigger_DraftAccess> = /*@__PURE__*/
  enumDesc(file_google_apps_script_type_gmail_gmail_addon_manifest, 2, 0);

/**
 * Defines a trigger that fires when the open email meets a specific criteria.
 * When the trigger fires, it executes a specific endpoint, usually
 * in order to create new cards and update the UI.
 *
 * @generated from message google.apps.script.type.gmail.ContextualTrigger
 */
export type ContextualTrigger = Message<"google.apps.script.type.gmail.ContextualTrigger"> & {
  /**
   * The type of trigger determines the conditions Gmail uses to show the
   * add-on.
   *
   * @generated from oneof google.apps.script.type.gmail.ContextualTrigger.trigger
   */
  trigger: {
    /**
     * UnconditionalTriggers are executed when any mail message is opened.
     *
     * @generated from field: google.apps.script.type.gmail.UnconditionalTrigger unconditional = 1;
     */
    value: UnconditionalTrigger;
    case: "unconditional";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The name of the endpoint to call when a message matches the
   * trigger.
   *
   * @generated from field: string on_trigger_function = 4;
   */
  onTriggerFunction: string;
};

/**
 * Describes the message google.apps.script.type.gmail.ContextualTrigger.
 * Use `create(ContextualTriggerSchema)` to create a new message.
 */
export const ContextualTriggerSchema: GenMessage<ContextualTrigger> = /*@__PURE__*/
  messageDesc(file_google_apps_script_type_gmail_gmail_addon_manifest, 3);

/**
 * A trigger that fires when any email message is opened.
 *
 * @generated from message google.apps.script.type.gmail.UnconditionalTrigger
 */
export type UnconditionalTrigger = Message<"google.apps.script.type.gmail.UnconditionalTrigger"> & {
};

/**
 * Describes the message google.apps.script.type.gmail.UnconditionalTrigger.
 * Use `create(UnconditionalTriggerSchema)` to create a new message.
 */
export const UnconditionalTriggerSchema: GenMessage<UnconditionalTrigger> = /*@__PURE__*/
  messageDesc(file_google_apps_script_type_gmail_gmail_addon_manifest, 4);

