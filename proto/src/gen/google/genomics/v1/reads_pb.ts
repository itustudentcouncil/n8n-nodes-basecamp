// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/genomics/v1/reads.proto (package google.genomics.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../api/annotations_pb";
import type { Range } from "./range_pb";
import { file_google_genomics_v1_range } from "./range_pb";
import type { Read } from "./readalignment_pb";
import { file_google_genomics_v1_readalignment } from "./readalignment_pb";
import type { ReadGroupSet, ReadGroupSetSchema } from "./readgroupset_pb";
import { file_google_genomics_v1_readgroupset } from "./readgroupset_pb";
import type { OperationSchema } from "../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../longrunning/operations_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/genomics/v1/reads.proto.
 */
export const file_google_genomics_v1_reads: GenFile = /*@__PURE__*/
  fileDesc("Ch5nb29nbGUvZ2Vub21pY3MvdjEvcmVhZHMucHJvdG8SEmdvb2dsZS5nZW5vbWljcy52MSJmChpTZWFyY2hSZWFkR3JvdXBTZXRzUmVxdWVzdBITCgtkYXRhc2V0X2lkcxgBIAMoCRIMCgRuYW1lGAMgASgJEhIKCnBhZ2VfdG9rZW4YAiABKAkSEQoJcGFnZV9zaXplGAQgASgFInEKG1NlYXJjaFJlYWRHcm91cFNldHNSZXNwb25zZRI5Cg9yZWFkX2dyb3VwX3NldHMYASADKAsyIC5nb29nbGUuZ2Vub21pY3MudjEuUmVhZEdyb3VwU2V0EhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSKeAgoaSW1wb3J0UmVhZEdyb3VwU2V0c1JlcXVlc3QSEgoKZGF0YXNldF9pZBgBIAEoCRIYChByZWZlcmVuY2Vfc2V0X2lkGAQgASgJEhMKC3NvdXJjZV91cmlzGAIgAygJElwKEnBhcnRpdGlvbl9zdHJhdGVneRgFIAEoDjJALmdvb2dsZS5nZW5vbWljcy52MS5JbXBvcnRSZWFkR3JvdXBTZXRzUmVxdWVzdC5QYXJ0aXRpb25TdHJhdGVneSJfChFQYXJ0aXRpb25TdHJhdGVneRIiCh5QQVJUSVRJT05fU1RSQVRFR1lfVU5TUEVDSUZJRUQQABIXChNQRVJfRklMRV9QRVJfU0FNUExFEAESDQoJTUVSR0VfQUxMEAIiOQobSW1wb3J0UmVhZEdyb3VwU2V0c1Jlc3BvbnNlEhoKEnJlYWRfZ3JvdXBfc2V0X2lkcxgBIAMoCSJ3ChlFeHBvcnRSZWFkR3JvdXBTZXRSZXF1ZXN0EhIKCnByb2plY3RfaWQYASABKAkSEgoKZXhwb3J0X3VyaRgCIAEoCRIZChFyZWFkX2dyb3VwX3NldF9pZBgDIAEoCRIXCg9yZWZlcmVuY2VfbmFtZXMYBCADKAkioQEKGVVwZGF0ZVJlYWRHcm91cFNldFJlcXVlc3QSGQoRcmVhZF9ncm91cF9zZXRfaWQYASABKAkSOAoOcmVhZF9ncm91cF9zZXQYAiABKAsyIC5nb29nbGUuZ2Vub21pY3MudjEuUmVhZEdyb3VwU2V0Ei8KC3VwZGF0ZV9tYXNrGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayI2ChlEZWxldGVSZWFkR3JvdXBTZXRSZXF1ZXN0EhkKEXJlYWRfZ3JvdXBfc2V0X2lkGAEgASgJIjMKFkdldFJlYWRHcm91cFNldFJlcXVlc3QSGQoRcmVhZF9ncm91cF9zZXRfaWQYASABKAkirwEKGkxpc3RDb3ZlcmFnZUJ1Y2tldHNSZXF1ZXN0EhkKEXJlYWRfZ3JvdXBfc2V0X2lkGAEgASgJEhYKDnJlZmVyZW5jZV9uYW1lGAMgASgJEg0KBXN0YXJ0GAQgASgDEgsKA2VuZBgFIAEoAxIbChN0YXJnZXRfYnVja2V0X3dpZHRoGAYgASgDEhIKCnBhZ2VfdG9rZW4YByABKAkSEQoJcGFnZV9zaXplGAggASgFIlEKDkNvdmVyYWdlQnVja2V0EigKBXJhbmdlGAEgASgLMhkuZ29vZ2xlLmdlbm9taWNzLnYxLlJhbmdlEhUKDW1lYW5fY292ZXJhZ2UYAiABKAIiigEKG0xpc3RDb3ZlcmFnZUJ1Y2tldHNSZXNwb25zZRIUCgxidWNrZXRfd2lkdGgYASABKAMSPAoQY292ZXJhZ2VfYnVja2V0cxgCIAMoCzIiLmdvb2dsZS5nZW5vbWljcy52MS5Db3ZlcmFnZUJ1Y2tldBIXCg9uZXh0X3BhZ2VfdG9rZW4YAyABKAkiowEKElNlYXJjaFJlYWRzUmVxdWVzdBIaChJyZWFkX2dyb3VwX3NldF9pZHMYASADKAkSFgoOcmVhZF9ncm91cF9pZHMYBSADKAkSFgoOcmVmZXJlbmNlX25hbWUYByABKAkSDQoFc3RhcnQYCCABKAMSCwoDZW5kGAkgASgDEhIKCnBhZ2VfdG9rZW4YAyABKAkSEQoJcGFnZV9zaXplGAQgASgFIlwKE1NlYXJjaFJlYWRzUmVzcG9uc2USLAoKYWxpZ25tZW50cxgBIAMoCzIYLmdvb2dsZS5nZW5vbWljcy52MS5SZWFkEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSKcAQoSU3RyZWFtUmVhZHNSZXF1ZXN0EhIKCnByb2plY3RfaWQYASABKAkSGQoRcmVhZF9ncm91cF9zZXRfaWQYAiABKAkSFgoOcmVmZXJlbmNlX25hbWUYAyABKAkSDQoFc3RhcnQYBCABKAMSCwoDZW5kGAUgASgDEg0KBXNoYXJkGAYgASgFEhQKDHRvdGFsX3NoYXJkcxgHIAEoBSJDChNTdHJlYW1SZWFkc1Jlc3BvbnNlEiwKCmFsaWdubWVudHMYASADKAsyGC5nb29nbGUuZ2Vub21pY3MudjEuUmVhZDKVAQoUU3RyZWFtaW5nUmVhZFNlcnZpY2USfQoLU3RyZWFtUmVhZHMSJi5nb29nbGUuZ2Vub21pY3MudjEuU3RyZWFtUmVhZHNSZXF1ZXN0GicuZ29vZ2xlLmdlbm9taWNzLnYxLlN0cmVhbVJlYWRzUmVzcG9uc2UiG4LT5JMCFToBKiIQL3YxL3JlYWRzOnN0cmVhbTABMtEJCg1SZWFkU2VydmljZVYxEokBChNJbXBvcnRSZWFkR3JvdXBTZXRzEi4uZ29vZ2xlLmdlbm9taWNzLnYxLkltcG9ydFJlYWRHcm91cFNldHNSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiIjgtPkkwIdOgEqIhgvdjEvcmVhZGdyb3Vwc2V0czppbXBvcnQSmwEKEkV4cG9ydFJlYWRHcm91cFNldBItLmdvb2dsZS5nZW5vbWljcy52MS5FeHBvcnRSZWFkR3JvdXBTZXRSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiI3gtPkkwIxOgEqIiwvdjEvcmVhZGdyb3Vwc2V0cy97cmVhZF9ncm91cF9zZXRfaWR9OmV4cG9ydBKbAQoTU2VhcmNoUmVhZEdyb3VwU2V0cxIuLmdvb2dsZS5nZW5vbWljcy52MS5TZWFyY2hSZWFkR3JvdXBTZXRzUmVxdWVzdBovLmdvb2dsZS5nZW5vbWljcy52MS5TZWFyY2hSZWFkR3JvdXBTZXRzUmVzcG9uc2UiI4LT5JMCHToBKiIYL3YxL3JlYWRncm91cHNldHMvc2VhcmNoEqQBChJVcGRhdGVSZWFkR3JvdXBTZXQSLS5nb29nbGUuZ2Vub21pY3MudjEuVXBkYXRlUmVhZEdyb3VwU2V0UmVxdWVzdBogLmdvb2dsZS5nZW5vbWljcy52MS5SZWFkR3JvdXBTZXQiPYLT5JMCNzoOcmVhZF9ncm91cF9zZXQyJS92MS9yZWFkZ3JvdXBzZXRzL3tyZWFkX2dyb3VwX3NldF9pZH0SigEKEkRlbGV0ZVJlYWRHcm91cFNldBItLmdvb2dsZS5nZW5vbWljcy52MS5EZWxldGVSZWFkR3JvdXBTZXRSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Ii2C0+STAicqJS92MS9yZWFkZ3JvdXBzZXRzL3tyZWFkX2dyb3VwX3NldF9pZH0SjgEKD0dldFJlYWRHcm91cFNldBIqLmdvb2dsZS5nZW5vbWljcy52MS5HZXRSZWFkR3JvdXBTZXRSZXF1ZXN0GiAuZ29vZ2xlLmdlbm9taWNzLnYxLlJlYWRHcm91cFNldCItgtPkkwInEiUvdjEvcmVhZGdyb3Vwc2V0cy97cmVhZF9ncm91cF9zZXRfaWR9ErUBChNMaXN0Q292ZXJhZ2VCdWNrZXRzEi4uZ29vZ2xlLmdlbm9taWNzLnYxLkxpc3RDb3ZlcmFnZUJ1Y2tldHNSZXF1ZXN0Gi8uZ29vZ2xlLmdlbm9taWNzLnYxLkxpc3RDb3ZlcmFnZUJ1Y2tldHNSZXNwb25zZSI9gtPkkwI3EjUvdjEvcmVhZGdyb3Vwc2V0cy97cmVhZF9ncm91cF9zZXRfaWR9L2NvdmVyYWdlYnVja2V0cxJ7CgtTZWFyY2hSZWFkcxImLmdvb2dsZS5nZW5vbWljcy52MS5TZWFyY2hSZWFkc1JlcXVlc3QaJy5nb29nbGUuZ2Vub21pY3MudjEuU2VhcmNoUmVhZHNSZXNwb25zZSIbgtPkkwIVOgEqIhAvdjEvcmVhZHMvc2VhcmNoQmUKFmNvbS5nb29nbGUuZ2Vub21pY3MudjFCClJlYWRzUHJvdG9QAVo6Z29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9nZW5vbWljcy92MTtnZW5vbWljc/gBAWIGcHJvdG8z", [file_google_api_annotations, file_google_genomics_v1_range, file_google_genomics_v1_readalignment, file_google_genomics_v1_readgroupset, file_google_longrunning_operations, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * The read group set search request.
 *
 * @generated from message google.genomics.v1.SearchReadGroupSetsRequest
 */
export type SearchReadGroupSetsRequest = Message<"google.genomics.v1.SearchReadGroupSetsRequest"> & {
  /**
   * Restricts this query to read group sets within the given datasets. At least
   * one ID must be provided.
   *
   * @generated from field: repeated string dataset_ids = 1;
   */
  datasetIds: string[];

  /**
   * Only return read group sets for which a substring of the name matches this
   * string.
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * The continuation token, which is used to page through large result sets.
   * To get the next page of results, set this parameter to the value of
   * `nextPageToken` from the previous response.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * The maximum number of results to return in a single page. If unspecified,
   * defaults to 256. The maximum value is 1024.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;
};

/**
 * Describes the message google.genomics.v1.SearchReadGroupSetsRequest.
 * Use `create(SearchReadGroupSetsRequestSchema)` to create a new message.
 */
export const SearchReadGroupSetsRequestSchema: GenMessage<SearchReadGroupSetsRequest> = /*@__PURE__*/
  messageDesc(file_google_genomics_v1_reads, 0);

/**
 * The read group set search response.
 *
 * @generated from message google.genomics.v1.SearchReadGroupSetsResponse
 */
export type SearchReadGroupSetsResponse = Message<"google.genomics.v1.SearchReadGroupSetsResponse"> & {
  /**
   * The list of matching read group sets.
   *
   * @generated from field: repeated google.genomics.v1.ReadGroupSet read_group_sets = 1;
   */
  readGroupSets: ReadGroupSet[];

  /**
   * The continuation token, which is used to page through large result sets.
   * Provide this value in a subsequent request to return the next page of
   * results. This field will be empty if there aren't any additional results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.genomics.v1.SearchReadGroupSetsResponse.
 * Use `create(SearchReadGroupSetsResponseSchema)` to create a new message.
 */
export const SearchReadGroupSetsResponseSchema: GenMessage<SearchReadGroupSetsResponse> = /*@__PURE__*/
  messageDesc(file_google_genomics_v1_reads, 1);

/**
 * The read group set import request.
 *
 * @generated from message google.genomics.v1.ImportReadGroupSetsRequest
 */
export type ImportReadGroupSetsRequest = Message<"google.genomics.v1.ImportReadGroupSetsRequest"> & {
  /**
   * Required. The ID of the dataset these read group sets will belong to. The
   * caller must have WRITE permissions to this dataset.
   *
   * @generated from field: string dataset_id = 1;
   */
  datasetId: string;

  /**
   * The reference set to which the imported read group sets are aligned to, if
   * any. The reference names of this reference set must be a superset of those
   * found in the imported file headers. If no reference set id is provided, a
   * best effort is made to associate with a matching reference set.
   *
   * @generated from field: string reference_set_id = 4;
   */
  referenceSetId: string;

  /**
   * A list of URIs pointing at [BAM
   * files](https://samtools.github.io/hts-specs/SAMv1.pdf)
   * in Google Cloud Storage.
   * Those URIs can include wildcards (*), but do not add or remove
   * matching files before import has completed.
   *
   * Note that Google Cloud Storage object listing is only eventually
   * consistent: files added may be not be immediately visible to
   * everyone. Thus, if using a wildcard it is preferable not to start
   * the import immediately after the files are created.
   *
   * @generated from field: repeated string source_uris = 2;
   */
  sourceUris: string[];

  /**
   * The partition strategy describes how read groups are partitioned into read
   * group sets.
   *
   * @generated from field: google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy partition_strategy = 5;
   */
  partitionStrategy: ImportReadGroupSetsRequest_PartitionStrategy;
};

/**
 * Describes the message google.genomics.v1.ImportReadGroupSetsRequest.
 * Use `create(ImportReadGroupSetsRequestSchema)` to create a new message.
 */
export const ImportReadGroupSetsRequestSchema: GenMessage<ImportReadGroupSetsRequest> = /*@__PURE__*/
  messageDesc(file_google_genomics_v1_reads, 2);

/**
 * @generated from enum google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy
 */
export enum ImportReadGroupSetsRequest_PartitionStrategy {
  /**
   * @generated from enum value: PARTITION_STRATEGY_UNSPECIFIED = 0;
   */
  PARTITION_STRATEGY_UNSPECIFIED = 0,

  /**
   * In most cases, this strategy yields one read group set per file. This is
   * the default behavior.
   *
   * Allocate one read group set per file per sample. For BAM files, read
   * groups are considered to share a sample if they have identical sample
   * names. Furthermore, all reads for each file which do not belong to a read
   * group, if any, will be grouped into a single read group set per-file.
   *
   * @generated from enum value: PER_FILE_PER_SAMPLE = 1;
   */
  PER_FILE_PER_SAMPLE = 1,

  /**
   * Includes all read groups in all imported files into a single read group
   * set. Requires that the headers for all imported files are equivalent. All
   * reads which do not belong to a read group, if any, will be grouped into a
   * separate read group set.
   *
   * @generated from enum value: MERGE_ALL = 2;
   */
  MERGE_ALL = 2,
}

/**
 * Describes the enum google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy.
 */
export const ImportReadGroupSetsRequest_PartitionStrategySchema: GenEnum<ImportReadGroupSetsRequest_PartitionStrategy> = /*@__PURE__*/
  enumDesc(file_google_genomics_v1_reads, 2, 0);

/**
 * The read group set import response.
 *
 * @generated from message google.genomics.v1.ImportReadGroupSetsResponse
 */
export type ImportReadGroupSetsResponse = Message<"google.genomics.v1.ImportReadGroupSetsResponse"> & {
  /**
   * IDs of the read group sets that were created.
   *
   * @generated from field: repeated string read_group_set_ids = 1;
   */
  readGroupSetIds: string[];
};

/**
 * Describes the message google.genomics.v1.ImportReadGroupSetsResponse.
 * Use `create(ImportReadGroupSetsResponseSchema)` to create a new message.
 */
export const ImportReadGroupSetsResponseSchema: GenMessage<ImportReadGroupSetsResponse> = /*@__PURE__*/
  messageDesc(file_google_genomics_v1_reads, 3);

/**
 * The read group set export request.
 *
 * @generated from message google.genomics.v1.ExportReadGroupSetRequest
 */
export type ExportReadGroupSetRequest = Message<"google.genomics.v1.ExportReadGroupSetRequest"> & {
  /**
   * Required. The Google Cloud project ID that owns this
   * export. The caller must have WRITE access to this project.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. A Google Cloud Storage URI for the exported BAM file.
   * The currently authenticated user must have write access to the new file.
   * An error will be returned if the URI already contains data.
   *
   * @generated from field: string export_uri = 2;
   */
  exportUri: string;

  /**
   * Required. The ID of the read group set to export. The caller must have
   * READ access to this read group set.
   *
   * @generated from field: string read_group_set_id = 3;
   */
  readGroupSetId: string;

  /**
   * The reference names to export. If this is not specified, all reference
   * sequences, including unmapped reads, are exported.
   * Use `*` to export only unmapped reads.
   *
   * @generated from field: repeated string reference_names = 4;
   */
  referenceNames: string[];
};

/**
 * Describes the message google.genomics.v1.ExportReadGroupSetRequest.
 * Use `create(ExportReadGroupSetRequestSchema)` to create a new message.
 */
export const ExportReadGroupSetRequestSchema: GenMessage<ExportReadGroupSetRequest> = /*@__PURE__*/
  messageDesc(file_google_genomics_v1_reads, 4);

/**
 * @generated from message google.genomics.v1.UpdateReadGroupSetRequest
 */
export type UpdateReadGroupSetRequest = Message<"google.genomics.v1.UpdateReadGroupSetRequest"> & {
  /**
   * The ID of the read group set to be updated. The caller must have WRITE
   * permissions to the dataset associated with this read group set.
   *
   * @generated from field: string read_group_set_id = 1;
   */
  readGroupSetId: string;

  /**
   * The new read group set data. See `updateMask` for details on mutability of
   * fields.
   *
   * @generated from field: google.genomics.v1.ReadGroupSet read_group_set = 2;
   */
  readGroupSet?: ReadGroupSet;

  /**
   * An optional mask specifying which fields to update. Supported fields:
   *
   * * [name][google.genomics.v1.ReadGroupSet.name].
   * * [referenceSetId][google.genomics.v1.ReadGroupSet.reference_set_id].
   *
   * Leaving `updateMask` unset is equivalent to specifying all mutable
   * fields.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.genomics.v1.UpdateReadGroupSetRequest.
 * Use `create(UpdateReadGroupSetRequestSchema)` to create a new message.
 */
export const UpdateReadGroupSetRequestSchema: GenMessage<UpdateReadGroupSetRequest> = /*@__PURE__*/
  messageDesc(file_google_genomics_v1_reads, 5);

/**
 * @generated from message google.genomics.v1.DeleteReadGroupSetRequest
 */
export type DeleteReadGroupSetRequest = Message<"google.genomics.v1.DeleteReadGroupSetRequest"> & {
  /**
   * The ID of the read group set to be deleted. The caller must have WRITE
   * permissions to the dataset associated with this read group set.
   *
   * @generated from field: string read_group_set_id = 1;
   */
  readGroupSetId: string;
};

/**
 * Describes the message google.genomics.v1.DeleteReadGroupSetRequest.
 * Use `create(DeleteReadGroupSetRequestSchema)` to create a new message.
 */
export const DeleteReadGroupSetRequestSchema: GenMessage<DeleteReadGroupSetRequest> = /*@__PURE__*/
  messageDesc(file_google_genomics_v1_reads, 6);

/**
 * @generated from message google.genomics.v1.GetReadGroupSetRequest
 */
export type GetReadGroupSetRequest = Message<"google.genomics.v1.GetReadGroupSetRequest"> & {
  /**
   * The ID of the read group set.
   *
   * @generated from field: string read_group_set_id = 1;
   */
  readGroupSetId: string;
};

/**
 * Describes the message google.genomics.v1.GetReadGroupSetRequest.
 * Use `create(GetReadGroupSetRequestSchema)` to create a new message.
 */
export const GetReadGroupSetRequestSchema: GenMessage<GetReadGroupSetRequest> = /*@__PURE__*/
  messageDesc(file_google_genomics_v1_reads, 7);

/**
 * @generated from message google.genomics.v1.ListCoverageBucketsRequest
 */
export type ListCoverageBucketsRequest = Message<"google.genomics.v1.ListCoverageBucketsRequest"> & {
  /**
   * Required. The ID of the read group set over which coverage is requested.
   *
   * @generated from field: string read_group_set_id = 1;
   */
  readGroupSetId: string;

  /**
   * The name of the reference to query, within the reference set associated
   * with this query. Optional.
   *
   * @generated from field: string reference_name = 3;
   */
  referenceName: string;

  /**
   * The start position of the range on the reference, 0-based inclusive. If
   * specified, `referenceName` must also be specified. Defaults to 0.
   *
   * @generated from field: int64 start = 4;
   */
  start: bigint;

  /**
   * The end position of the range on the reference, 0-based exclusive. If
   * specified, `referenceName` must also be specified. If unset or 0, defaults
   * to the length of the reference.
   *
   * @generated from field: int64 end = 5;
   */
  end: bigint;

  /**
   * The desired width of each reported coverage bucket in base pairs. This
   * will be rounded down to the nearest precomputed bucket width; the value
   * of which is returned as `bucketWidth` in the response. Defaults
   * to infinity (each bucket spans an entire reference sequence) or the length
   * of the target range, if specified. The smallest precomputed
   * `bucketWidth` is currently 2048 base pairs; this is subject to
   * change.
   *
   * @generated from field: int64 target_bucket_width = 6;
   */
  targetBucketWidth: bigint;

  /**
   * The continuation token, which is used to page through large result sets.
   * To get the next page of results, set this parameter to the value of
   * `nextPageToken` from the previous response.
   *
   * @generated from field: string page_token = 7;
   */
  pageToken: string;

  /**
   * The maximum number of results to return in a single page. If unspecified,
   * defaults to 1024. The maximum value is 2048.
   *
   * @generated from field: int32 page_size = 8;
   */
  pageSize: number;
};

/**
 * Describes the message google.genomics.v1.ListCoverageBucketsRequest.
 * Use `create(ListCoverageBucketsRequestSchema)` to create a new message.
 */
export const ListCoverageBucketsRequestSchema: GenMessage<ListCoverageBucketsRequest> = /*@__PURE__*/
  messageDesc(file_google_genomics_v1_reads, 8);

/**
 * A bucket over which read coverage has been precomputed. A bucket corresponds
 * to a specific range of the reference sequence.
 *
 * @generated from message google.genomics.v1.CoverageBucket
 */
export type CoverageBucket = Message<"google.genomics.v1.CoverageBucket"> & {
  /**
   * The genomic coordinate range spanned by this bucket.
   *
   * @generated from field: google.genomics.v1.Range range = 1;
   */
  range?: Range;

  /**
   * The average number of reads which are aligned to each individual
   * reference base in this bucket.
   *
   * @generated from field: float mean_coverage = 2;
   */
  meanCoverage: number;
};

/**
 * Describes the message google.genomics.v1.CoverageBucket.
 * Use `create(CoverageBucketSchema)` to create a new message.
 */
export const CoverageBucketSchema: GenMessage<CoverageBucket> = /*@__PURE__*/
  messageDesc(file_google_genomics_v1_reads, 9);

/**
 * @generated from message google.genomics.v1.ListCoverageBucketsResponse
 */
export type ListCoverageBucketsResponse = Message<"google.genomics.v1.ListCoverageBucketsResponse"> & {
  /**
   * The length of each coverage bucket in base pairs. Note that buckets at the
   * end of a reference sequence may be shorter. This value is omitted if the
   * bucket width is infinity (the default behaviour, with no range or
   * `targetBucketWidth`).
   *
   * @generated from field: int64 bucket_width = 1;
   */
  bucketWidth: bigint;

  /**
   * The coverage buckets. The list of buckets is sparse; a bucket with 0
   * overlapping reads is not returned. A bucket never crosses more than one
   * reference sequence. Each bucket has width `bucketWidth`, unless
   * its end is the end of the reference sequence.
   *
   * @generated from field: repeated google.genomics.v1.CoverageBucket coverage_buckets = 2;
   */
  coverageBuckets: CoverageBucket[];

  /**
   * The continuation token, which is used to page through large result sets.
   * Provide this value in a subsequent request to return the next page of
   * results. This field will be empty if there aren't any additional results.
   *
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.genomics.v1.ListCoverageBucketsResponse.
 * Use `create(ListCoverageBucketsResponseSchema)` to create a new message.
 */
export const ListCoverageBucketsResponseSchema: GenMessage<ListCoverageBucketsResponse> = /*@__PURE__*/
  messageDesc(file_google_genomics_v1_reads, 10);

/**
 * The read search request.
 *
 * @generated from message google.genomics.v1.SearchReadsRequest
 */
export type SearchReadsRequest = Message<"google.genomics.v1.SearchReadsRequest"> & {
  /**
   * The IDs of the read groups sets within which to search for reads. All
   * specified read group sets must be aligned against a common set of reference
   * sequences; this defines the genomic coordinates for the query. Must specify
   * one of `readGroupSetIds` or `readGroupIds`.
   *
   * @generated from field: repeated string read_group_set_ids = 1;
   */
  readGroupSetIds: string[];

  /**
   * The IDs of the read groups within which to search for reads. All specified
   * read groups must belong to the same read group sets. Must specify one of
   * `readGroupSetIds` or `readGroupIds`.
   *
   * @generated from field: repeated string read_group_ids = 5;
   */
  readGroupIds: string[];

  /**
   * The reference sequence name, for example `chr1`, `1`, or `chrX`. If set to
   * `*`, only unmapped reads are returned. If unspecified, all reads (mapped
   * and unmapped) are returned.
   *
   * @generated from field: string reference_name = 7;
   */
  referenceName: string;

  /**
   * The start position of the range on the reference, 0-based inclusive. If
   * specified, `referenceName` must also be specified.
   *
   * @generated from field: int64 start = 8;
   */
  start: bigint;

  /**
   * The end position of the range on the reference, 0-based exclusive. If
   * specified, `referenceName` must also be specified.
   *
   * @generated from field: int64 end = 9;
   */
  end: bigint;

  /**
   * The continuation token, which is used to page through large result sets.
   * To get the next page of results, set this parameter to the value of
   * `nextPageToken` from the previous response.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * The maximum number of results to return in a single page. If unspecified,
   * defaults to 256. The maximum value is 2048.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;
};

/**
 * Describes the message google.genomics.v1.SearchReadsRequest.
 * Use `create(SearchReadsRequestSchema)` to create a new message.
 */
export const SearchReadsRequestSchema: GenMessage<SearchReadsRequest> = /*@__PURE__*/
  messageDesc(file_google_genomics_v1_reads, 11);

/**
 * The read search response.
 *
 * @generated from message google.genomics.v1.SearchReadsResponse
 */
export type SearchReadsResponse = Message<"google.genomics.v1.SearchReadsResponse"> & {
  /**
   * The list of matching alignments sorted by mapped genomic coordinate,
   * if any, ascending in position within the same reference. Unmapped reads,
   * which have no position, are returned contiguously and are sorted in
   * ascending lexicographic order by fragment name.
   *
   * @generated from field: repeated google.genomics.v1.Read alignments = 1;
   */
  alignments: Read[];

  /**
   * The continuation token, which is used to page through large result sets.
   * Provide this value in a subsequent request to return the next page of
   * results. This field will be empty if there aren't any additional results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.genomics.v1.SearchReadsResponse.
 * Use `create(SearchReadsResponseSchema)` to create a new message.
 */
export const SearchReadsResponseSchema: GenMessage<SearchReadsResponse> = /*@__PURE__*/
  messageDesc(file_google_genomics_v1_reads, 12);

/**
 * The stream reads request.
 *
 * @generated from message google.genomics.v1.StreamReadsRequest
 */
export type StreamReadsRequest = Message<"google.genomics.v1.StreamReadsRequest"> & {
  /**
   * The Google Cloud project ID which will be billed
   * for this access. The caller must have WRITE access to this project.
   * Required.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The ID of the read group set from which to stream reads.
   *
   * @generated from field: string read_group_set_id = 2;
   */
  readGroupSetId: string;

  /**
   * The reference sequence name, for example `chr1`,
   * `1`, or `chrX`. If set to *, only unmapped reads are
   * returned.
   *
   * @generated from field: string reference_name = 3;
   */
  referenceName: string;

  /**
   * The start position of the range on the reference, 0-based inclusive. If
   * specified, `referenceName` must also be specified.
   *
   * @generated from field: int64 start = 4;
   */
  start: bigint;

  /**
   * The end position of the range on the reference, 0-based exclusive. If
   * specified, `referenceName` must also be specified.
   *
   * @generated from field: int64 end = 5;
   */
  end: bigint;

  /**
   * Restricts results to a shard containing approximately `1/totalShards`
   * of the normal response payload for this query. Results from a sharded
   * request are disjoint from those returned by all queries which differ only
   * in their shard parameter. A shard may yield 0 results; this is especially
   * likely for large values of `totalShards`.
   *
   * Valid values are `[0, totalShards)`.
   *
   * @generated from field: int32 shard = 6;
   */
  shard: number;

  /**
   * Specifying `totalShards` causes a disjoint subset of the normal response
   * payload to be returned for each query with a unique `shard` parameter
   * specified. A best effort is made to yield equally sized shards. Sharding
   * can be used to distribute processing amongst workers, where each worker is
   * assigned a unique `shard` number and all workers specify the same
   * `totalShards` number. The union of reads returned for all sharded queries
   * `[0, totalShards)` is equal to those returned by a single unsharded query.
   *
   * Queries for different values of `totalShards` with common divisors will
   * share shard boundaries. For example, streaming `shard` 2 of 5
   * `totalShards` yields the same results as streaming `shard`s 4 and 5 of 10
   * `totalShards`. This property can be leveraged for adaptive retries.
   *
   * @generated from field: int32 total_shards = 7;
   */
  totalShards: number;
};

/**
 * Describes the message google.genomics.v1.StreamReadsRequest.
 * Use `create(StreamReadsRequestSchema)` to create a new message.
 */
export const StreamReadsRequestSchema: GenMessage<StreamReadsRequest> = /*@__PURE__*/
  messageDesc(file_google_genomics_v1_reads, 13);

/**
 * @generated from message google.genomics.v1.StreamReadsResponse
 */
export type StreamReadsResponse = Message<"google.genomics.v1.StreamReadsResponse"> & {
  /**
   * @generated from field: repeated google.genomics.v1.Read alignments = 1;
   */
  alignments: Read[];
};

/**
 * Describes the message google.genomics.v1.StreamReadsResponse.
 * Use `create(StreamReadsResponseSchema)` to create a new message.
 */
export const StreamReadsResponseSchema: GenMessage<StreamReadsResponse> = /*@__PURE__*/
  messageDesc(file_google_genomics_v1_reads, 14);

/**
 * @generated from service google.genomics.v1.StreamingReadService
 */
export const StreamingReadService: GenService<{
  /**
   * Returns a stream of all the reads matching the search request, ordered
   * by reference name, position, and ID.
   *
   * @generated from rpc google.genomics.v1.StreamingReadService.StreamReads
   */
  streamReads: {
    methodKind: "server_streaming";
    input: typeof StreamReadsRequestSchema;
    output: typeof StreamReadsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_genomics_v1_reads, 0);

/**
 * The Readstore. A data store for DNA sequencing Reads.
 *
 * @generated from service google.genomics.v1.ReadServiceV1
 */
export const ReadServiceV1: GenService<{
  /**
   * Creates read group sets by asynchronously importing the provided
   * information.
   *
   * For the definitions of read group sets and other genomics resources, see
   * [Fundamentals of Google
   * Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
   *
   * The caller must have WRITE permissions to the dataset.
   *
   * ## Notes on [BAM](https://samtools.github.io/hts-specs/SAMv1.pdf) import
   *
   * - Tags will be converted to strings - tag types are not preserved
   * - Comments (`@CO`) in the input file header will not be preserved
   * - Original header order of references (`@SQ`) will not be preserved
   * - Any reverse stranded unmapped reads will be reverse complemented, and
   * their qualities (also the "BQ" and "OQ" tags, if any) will be reversed
   * - Unmapped reads will be stripped of positional information (reference name
   * and position)
   *
   * @generated from rpc google.genomics.v1.ReadServiceV1.ImportReadGroupSets
   */
  importReadGroupSets: {
    methodKind: "unary";
    input: typeof ImportReadGroupSetsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Exports a read group set to a BAM file in Google Cloud Storage.
   *
   * For the definitions of read group sets and other genomics resources, see
   * [Fundamentals of Google
   * Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
   *
   * Note that currently there may be some differences between exported BAM
   * files and the original BAM file at the time of import. See
   * [ImportReadGroupSets][google.genomics.v1.ReadServiceV1.ImportReadGroupSets]
   * for caveats.
   *
   * @generated from rpc google.genomics.v1.ReadServiceV1.ExportReadGroupSet
   */
  exportReadGroupSet: {
    methodKind: "unary";
    input: typeof ExportReadGroupSetRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Searches for read group sets matching the criteria.
   *
   * For the definitions of read group sets and other genomics resources, see
   * [Fundamentals of Google
   * Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
   *
   * Implements
   * [GlobalAllianceApi.searchReadGroupSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/readmethods.avdl#L135).
   *
   * @generated from rpc google.genomics.v1.ReadServiceV1.SearchReadGroupSets
   */
  searchReadGroupSets: {
    methodKind: "unary";
    input: typeof SearchReadGroupSetsRequestSchema;
    output: typeof SearchReadGroupSetsResponseSchema;
  },
  /**
   * Updates a read group set.
   *
   * For the definitions of read group sets and other genomics resources, see
   * [Fundamentals of Google
   * Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
   *
   * This method supports patch semantics.
   *
   * @generated from rpc google.genomics.v1.ReadServiceV1.UpdateReadGroupSet
   */
  updateReadGroupSet: {
    methodKind: "unary";
    input: typeof UpdateReadGroupSetRequestSchema;
    output: typeof ReadGroupSetSchema;
  },
  /**
   * Deletes a read group set.
   *
   * For the definitions of read group sets and other genomics resources, see
   * [Fundamentals of Google
   * Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
   *
   * @generated from rpc google.genomics.v1.ReadServiceV1.DeleteReadGroupSet
   */
  deleteReadGroupSet: {
    methodKind: "unary";
    input: typeof DeleteReadGroupSetRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Gets a read group set by ID.
   *
   * For the definitions of read group sets and other genomics resources, see
   * [Fundamentals of Google
   * Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
   *
   * @generated from rpc google.genomics.v1.ReadServiceV1.GetReadGroupSet
   */
  getReadGroupSet: {
    methodKind: "unary";
    input: typeof GetReadGroupSetRequestSchema;
    output: typeof ReadGroupSetSchema;
  },
  /**
   * Lists fixed width coverage buckets for a read group set, each of which
   * correspond to a range of a reference sequence. Each bucket summarizes
   * coverage information across its corresponding genomic range.
   *
   * For the definitions of read group sets and other genomics resources, see
   * [Fundamentals of Google
   * Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
   *
   * Coverage is defined as the number of reads which are aligned to a given
   * base in the reference sequence. Coverage buckets are available at several
   * precomputed bucket widths, enabling retrieval of various coverage 'zoom
   * levels'. The caller must have READ permissions for the target read group
   * set.
   *
   * @generated from rpc google.genomics.v1.ReadServiceV1.ListCoverageBuckets
   */
  listCoverageBuckets: {
    methodKind: "unary";
    input: typeof ListCoverageBucketsRequestSchema;
    output: typeof ListCoverageBucketsResponseSchema;
  },
  /**
   * Gets a list of reads for one or more read group sets.
   *
   * For the definitions of read group sets and other genomics resources, see
   * [Fundamentals of Google
   * Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
   *
   * Reads search operates over a genomic coordinate space of reference sequence
   * & position defined over the reference sequences to which the requested
   * read group sets are aligned.
   *
   * If a target positional range is specified, search returns all reads whose
   * alignment to the reference genome overlap the range. A query which
   * specifies only read group set IDs yields all reads in those read group
   * sets, including unmapped reads.
   *
   * All reads returned (including reads on subsequent pages) are ordered by
   * genomic coordinate (by reference sequence, then position). Reads with
   * equivalent genomic coordinates are returned in an unspecified order. This
   * order is consistent, such that two queries for the same content (regardless
   * of page size) yield reads in the same order across their respective streams
   * of paginated responses.
   *
   * Implements
   * [GlobalAllianceApi.searchReads](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/readmethods.avdl#L85).
   *
   * @generated from rpc google.genomics.v1.ReadServiceV1.SearchReads
   */
  searchReads: {
    methodKind: "unary";
    input: typeof SearchReadsRequestSchema;
    output: typeof SearchReadsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_genomics_v1_reads, 1);

