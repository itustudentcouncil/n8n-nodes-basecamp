// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/monitoring/v3/group_service.proto (package google.monitoring.v3, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../api/annotations_pb";
import { file_google_api_client } from "../../api/client_pb";
import { file_google_api_field_behavior } from "../../api/field_behavior_pb";
import type { MonitoredResource } from "../../api/monitored_resource_pb";
import { file_google_api_monitored_resource } from "../../api/monitored_resource_pb";
import { file_google_api_resource } from "../../api/resource_pb";
import type { TimeInterval } from "./common_pb";
import { file_google_monitoring_v3_common } from "./common_pb";
import type { Group, GroupSchema } from "./group_pb";
import { file_google_monitoring_v3_group } from "./group_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/monitoring/v3/group_service.proto.
 */
export const file_google_monitoring_v3_group_service: GenFile = /*@__PURE__*/
  fileDesc("Cihnb29nbGUvbW9uaXRvcmluZy92My9ncm91cF9zZXJ2aWNlLnByb3RvEhRnb29nbGUubW9uaXRvcmluZy52MyLIAgoRTGlzdEdyb3Vwc1JlcXVlc3QSNQoEbmFtZRgHIAEoCUIn4EEC+kEhEh9tb25pdG9yaW5nLmdvb2dsZWFwaXMuY29tL0dyb3VwEkEKEWNoaWxkcmVuX29mX2dyb3VwGAIgASgJQiT6QSEKH21vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb20vR3JvdXBIABJCChJhbmNlc3RvcnNfb2ZfZ3JvdXAYAyABKAlCJPpBIQofbW9uaXRvcmluZy5nb29nbGVhcGlzLmNvbS9Hcm91cEgAEkQKFGRlc2NlbmRhbnRzX29mX2dyb3VwGAQgASgJQiT6QSEKH21vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb20vR3JvdXBIABIRCglwYWdlX3NpemUYBSABKAUSEgoKcGFnZV90b2tlbhgGIAEoCUIICgZmaWx0ZXIiWQoSTGlzdEdyb3Vwc1Jlc3BvbnNlEioKBWdyb3VwGAEgAygLMhsuZ29vZ2xlLm1vbml0b3JpbmcudjMuR3JvdXASFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIkgKD0dldEdyb3VwUmVxdWVzdBI1CgRuYW1lGAMgASgJQifgQQL6QSEKH21vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb20vR3JvdXAikwEKEkNyZWF0ZUdyb3VwUmVxdWVzdBI1CgRuYW1lGAQgASgJQifgQQL6QSESH21vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb20vR3JvdXASLwoFZ3JvdXAYAiABKAsyGy5nb29nbGUubW9uaXRvcmluZy52My5Hcm91cEID4EECEhUKDXZhbGlkYXRlX29ubHkYAyABKAgiXAoSVXBkYXRlR3JvdXBSZXF1ZXN0Ei8KBWdyb3VwGAIgASgLMhsuZ29vZ2xlLm1vbml0b3JpbmcudjMuR3JvdXBCA+BBAhIVCg12YWxpZGF0ZV9vbmx5GAMgASgIIl4KEkRlbGV0ZUdyb3VwUmVxdWVzdBI1CgRuYW1lGAMgASgJQifgQQL6QSEKH21vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb20vR3JvdXASEQoJcmVjdXJzaXZlGAQgASgIIr0BChdMaXN0R3JvdXBNZW1iZXJzUmVxdWVzdBI1CgRuYW1lGAcgASgJQifgQQL6QSEKH21vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb20vR3JvdXASEQoJcGFnZV9zaXplGAMgASgFEhIKCnBhZ2VfdG9rZW4YBCABKAkSDgoGZmlsdGVyGAUgASgJEjQKCGludGVydmFsGAYgASgLMiIuZ29vZ2xlLm1vbml0b3JpbmcudjMuVGltZUludGVydmFsIncKGExpc3RHcm91cE1lbWJlcnNSZXNwb25zZRIuCgdtZW1iZXJzGAEgAygLMh0uZ29vZ2xlLmFwaS5Nb25pdG9yZWRSZXNvdXJjZRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkSEgoKdG90YWxfc2l6ZRgDIAEoBTKYCAoMR3JvdXBTZXJ2aWNlEowBCgpMaXN0R3JvdXBzEicuZ29vZ2xlLm1vbml0b3JpbmcudjMuTGlzdEdyb3Vwc1JlcXVlc3QaKC5nb29nbGUubW9uaXRvcmluZy52My5MaXN0R3JvdXBzUmVzcG9uc2UiK9pBBG5hbWWC0+STAh4SHC92My97bmFtZT1wcm9qZWN0cy8qfS9ncm91cHMSfQoIR2V0R3JvdXASJS5nb29nbGUubW9uaXRvcmluZy52My5HZXRHcm91cFJlcXVlc3QaGy5nb29nbGUubW9uaXRvcmluZy52My5Hcm91cCIt2kEEbmFtZYLT5JMCIBIeL3YzL3tuYW1lPXByb2plY3RzLyovZ3JvdXBzLyp9Eo4BCgtDcmVhdGVHcm91cBIoLmdvb2dsZS5tb25pdG9yaW5nLnYzLkNyZWF0ZUdyb3VwUmVxdWVzdBobLmdvb2dsZS5tb25pdG9yaW5nLnYzLkdyb3VwIjjaQQpuYW1lLGdyb3VwgtPkkwIlOgVncm91cCIcL3YzL3tuYW1lPXByb2plY3RzLyp9L2dyb3VwcxKRAQoLVXBkYXRlR3JvdXASKC5nb29nbGUubW9uaXRvcmluZy52My5VcGRhdGVHcm91cFJlcXVlc3QaGy5nb29nbGUubW9uaXRvcmluZy52My5Hcm91cCI72kEFZ3JvdXCC0+STAi06BWdyb3VwGiQvdjMve2dyb3VwLm5hbWU9cHJvamVjdHMvKi9ncm91cHMvKn0SfgoLRGVsZXRlR3JvdXASKC5nb29nbGUubW9uaXRvcmluZy52My5EZWxldGVHcm91cFJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiLdpBBG5hbWWC0+STAiAqHi92My97bmFtZT1wcm9qZWN0cy8qL2dyb3Vwcy8qfRKoAQoQTGlzdEdyb3VwTWVtYmVycxItLmdvb2dsZS5tb25pdG9yaW5nLnYzLkxpc3RHcm91cE1lbWJlcnNSZXF1ZXN0Gi4uZ29vZ2xlLm1vbml0b3JpbmcudjMuTGlzdEdyb3VwTWVtYmVyc1Jlc3BvbnNlIjXaQQRuYW1lgtPkkwIoEiYvdjMve25hbWU9cHJvamVjdHMvKi9ncm91cHMvKn0vbWVtYmVycxqpAcpBGW1vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb23SQYkBaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybSxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL21vbml0b3JpbmcsaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9tb25pdG9yaW5nLnJlYWRCzAEKGGNvbS5nb29nbGUubW9uaXRvcmluZy52M0IRR3JvdXBTZXJ2aWNlUHJvdG9QAVpBY2xvdWQuZ29vZ2xlLmNvbS9nby9tb25pdG9yaW5nL2FwaXYzL3YyL21vbml0b3JpbmdwYjttb25pdG9yaW5ncGKqAhpHb29nbGUuQ2xvdWQuTW9uaXRvcmluZy5WM8oCGkdvb2dsZVxDbG91ZFxNb25pdG9yaW5nXFYz6gIdR29vZ2xlOjpDbG91ZDo6TW9uaXRvcmluZzo6VjNiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_monitored_resource, file_google_api_resource, file_google_monitoring_v3_common, file_google_monitoring_v3_group, file_google_protobuf_empty]);

/**
 * The `ListGroup` request.
 *
 * @generated from message google.monitoring.v3.ListGroupsRequest
 */
export type ListGroupsRequest = Message<"google.monitoring.v3.ListGroupsRequest"> & {
  /**
   * Required. The
   * [project](https://cloud.google.com/monitoring/api/v3#project_name) whose
   * groups are to be listed. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]
   *
   * @generated from field: string name = 7;
   */
  name: string;

  /**
   * An optional filter consisting of a single group name.  The filters limit
   * the groups returned based on their parent-child relationship with the
   * specified group. If no filter is specified, all groups are returned.
   *
   * @generated from oneof google.monitoring.v3.ListGroupsRequest.filter
   */
  filter: {
    /**
     * A group name. The format is:
     *
     *     projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID]
     *
     * Returns groups whose `parent_name` field contains the group
     * name.  If no groups have this parent, the results are empty.
     *
     * @generated from field: string children_of_group = 2;
     */
    value: string;
    case: "childrenOfGroup";
  } | {
    /**
     * A group name. The format is:
     *
     *     projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID]
     *
     * Returns groups that are ancestors of the specified group.
     * The groups are returned in order, starting with the immediate parent and
     * ending with the most distant ancestor.  If the specified group has no
     * immediate parent, the results are empty.
     *
     * @generated from field: string ancestors_of_group = 3;
     */
    value: string;
    case: "ancestorsOfGroup";
  } | {
    /**
     * A group name. The format is:
     *
     *     projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID]
     *
     * Returns the descendants of the specified group.  This is a superset of
     * the results returned by the `children_of_group` filter, and includes
     * children-of-children, and so forth.
     *
     * @generated from field: string descendants_of_group = 4;
     */
    value: string;
    case: "descendantsOfGroup";
  } | { case: undefined; value?: undefined };

  /**
   * A positive number that is the maximum number of results to return.
   *
   * @generated from field: int32 page_size = 5;
   */
  pageSize: number;

  /**
   * If this field is not empty then it must contain the `next_page_token` value
   * returned by a previous call to this method.  Using this field causes the
   * method to return additional results from the previous method call.
   *
   * @generated from field: string page_token = 6;
   */
  pageToken: string;
};

/**
 * Describes the message google.monitoring.v3.ListGroupsRequest.
 * Use `create(ListGroupsRequestSchema)` to create a new message.
 */
export const ListGroupsRequestSchema: GenMessage<ListGroupsRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_group_service, 0);

/**
 * The `ListGroups` response.
 *
 * @generated from message google.monitoring.v3.ListGroupsResponse
 */
export type ListGroupsResponse = Message<"google.monitoring.v3.ListGroupsResponse"> & {
  /**
   * The groups that match the specified filters.
   *
   * @generated from field: repeated google.monitoring.v3.Group group = 1;
   */
  group: Group[];

  /**
   * If there are more results than have been returned, then this field is set
   * to a non-empty value.  To see the additional results,
   * use that value as `page_token` in the next call to this method.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.monitoring.v3.ListGroupsResponse.
 * Use `create(ListGroupsResponseSchema)` to create a new message.
 */
export const ListGroupsResponseSchema: GenMessage<ListGroupsResponse> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_group_service, 1);

/**
 * The `GetGroup` request.
 *
 * @generated from message google.monitoring.v3.GetGroupRequest
 */
export type GetGroupRequest = Message<"google.monitoring.v3.GetGroupRequest"> & {
  /**
   * Required. The group to retrieve. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID]
   *
   * @generated from field: string name = 3;
   */
  name: string;
};

/**
 * Describes the message google.monitoring.v3.GetGroupRequest.
 * Use `create(GetGroupRequestSchema)` to create a new message.
 */
export const GetGroupRequestSchema: GenMessage<GetGroupRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_group_service, 2);

/**
 * The `CreateGroup` request.
 *
 * @generated from message google.monitoring.v3.CreateGroupRequest
 */
export type CreateGroupRequest = Message<"google.monitoring.v3.CreateGroupRequest"> & {
  /**
   * Required. The
   * [project](https://cloud.google.com/monitoring/api/v3#project_name) in which
   * to create the group. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * Required. A group definition. It is an error to define the `name` field
   * because the system assigns the name.
   *
   * @generated from field: google.monitoring.v3.Group group = 2;
   */
  group?: Group;

  /**
   * If true, validate this request but do not create the group.
   *
   * @generated from field: bool validate_only = 3;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.monitoring.v3.CreateGroupRequest.
 * Use `create(CreateGroupRequestSchema)` to create a new message.
 */
export const CreateGroupRequestSchema: GenMessage<CreateGroupRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_group_service, 3);

/**
 * The `UpdateGroup` request.
 *
 * @generated from message google.monitoring.v3.UpdateGroupRequest
 */
export type UpdateGroupRequest = Message<"google.monitoring.v3.UpdateGroupRequest"> & {
  /**
   * Required. The new definition of the group.  All fields of the existing
   * group, excepting `name`, are replaced with the corresponding fields of this
   * group.
   *
   * @generated from field: google.monitoring.v3.Group group = 2;
   */
  group?: Group;

  /**
   * If true, validate this request but do not update the existing group.
   *
   * @generated from field: bool validate_only = 3;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.monitoring.v3.UpdateGroupRequest.
 * Use `create(UpdateGroupRequestSchema)` to create a new message.
 */
export const UpdateGroupRequestSchema: GenMessage<UpdateGroupRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_group_service, 4);

/**
 * The `DeleteGroup` request. The default behavior is to be able to delete a
 * single group without any descendants.
 *
 * @generated from message google.monitoring.v3.DeleteGroupRequest
 */
export type DeleteGroupRequest = Message<"google.monitoring.v3.DeleteGroupRequest"> & {
  /**
   * Required. The group to delete. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID]
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * If this field is true, then the request means to delete a group with all
   * its descendants. Otherwise, the request means to delete a group only when
   * it has no descendants. The default value is false.
   *
   * @generated from field: bool recursive = 4;
   */
  recursive: boolean;
};

/**
 * Describes the message google.monitoring.v3.DeleteGroupRequest.
 * Use `create(DeleteGroupRequestSchema)` to create a new message.
 */
export const DeleteGroupRequestSchema: GenMessage<DeleteGroupRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_group_service, 5);

/**
 * The `ListGroupMembers` request.
 *
 * @generated from message google.monitoring.v3.ListGroupMembersRequest
 */
export type ListGroupMembersRequest = Message<"google.monitoring.v3.ListGroupMembersRequest"> & {
  /**
   * Required. The group whose members are listed. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID]
   *
   * @generated from field: string name = 7;
   */
  name: string;

  /**
   * A positive number that is the maximum number of results to return.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * If this field is not empty then it must contain the `next_page_token` value
   * returned by a previous call to this method.  Using this field causes the
   * method to return additional results from the previous method call.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * An optional [list
   * filter](https://cloud.google.com/monitoring/api/learn_more#filtering)
   * describing the members to be returned.  The filter may reference the type,
   * labels, and metadata of monitored resources that comprise the group. For
   * example, to return only resources representing Compute Engine VM instances,
   * use this filter:
   *
   *     `resource.type = "gce_instance"`
   *
   * @generated from field: string filter = 5;
   */
  filter: string;

  /**
   * An optional time interval for which results should be returned. Only
   * members that were part of the group during the specified interval are
   * included in the response.  If no interval is provided then the group
   * membership over the last minute is returned.
   *
   * @generated from field: google.monitoring.v3.TimeInterval interval = 6;
   */
  interval?: TimeInterval;
};

/**
 * Describes the message google.monitoring.v3.ListGroupMembersRequest.
 * Use `create(ListGroupMembersRequestSchema)` to create a new message.
 */
export const ListGroupMembersRequestSchema: GenMessage<ListGroupMembersRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_group_service, 6);

/**
 * The `ListGroupMembers` response.
 *
 * @generated from message google.monitoring.v3.ListGroupMembersResponse
 */
export type ListGroupMembersResponse = Message<"google.monitoring.v3.ListGroupMembersResponse"> & {
  /**
   * A set of monitored resources in the group.
   *
   * @generated from field: repeated google.api.MonitoredResource members = 1;
   */
  members: MonitoredResource[];

  /**
   * If there are more results than have been returned, then this field is
   * set to a non-empty value.  To see the additional results, use that value as
   * `page_token` in the next call to this method.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * The total number of elements matching this request.
   *
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message google.monitoring.v3.ListGroupMembersResponse.
 * Use `create(ListGroupMembersResponseSchema)` to create a new message.
 */
export const ListGroupMembersResponseSchema: GenMessage<ListGroupMembersResponse> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_group_service, 7);

/**
 * The Group API lets you inspect and manage your
 * [groups](#google.monitoring.v3.Group).
 *
 * A group is a named filter that is used to identify
 * a collection of monitored resources. Groups are typically used to
 * mirror the physical and/or logical topology of the environment.
 * Because group membership is computed dynamically, monitored
 * resources that are started in the future are automatically placed
 * in matching groups. By using a group to name monitored resources in,
 * for example, an alert policy, the target of that alert policy is
 * updated automatically as monitored resources are added and removed
 * from the infrastructure.
 *
 * @generated from service google.monitoring.v3.GroupService
 */
export const GroupService: GenService<{
  /**
   * Lists the existing groups.
   *
   * @generated from rpc google.monitoring.v3.GroupService.ListGroups
   */
  listGroups: {
    methodKind: "unary";
    input: typeof ListGroupsRequestSchema;
    output: typeof ListGroupsResponseSchema;
  },
  /**
   * Gets a single group.
   *
   * @generated from rpc google.monitoring.v3.GroupService.GetGroup
   */
  getGroup: {
    methodKind: "unary";
    input: typeof GetGroupRequestSchema;
    output: typeof GroupSchema;
  },
  /**
   * Creates a new group.
   *
   * @generated from rpc google.monitoring.v3.GroupService.CreateGroup
   */
  createGroup: {
    methodKind: "unary";
    input: typeof CreateGroupRequestSchema;
    output: typeof GroupSchema;
  },
  /**
   * Updates an existing group.
   * You can change any group attributes except `name`.
   *
   * @generated from rpc google.monitoring.v3.GroupService.UpdateGroup
   */
  updateGroup: {
    methodKind: "unary";
    input: typeof UpdateGroupRequestSchema;
    output: typeof GroupSchema;
  },
  /**
   * Deletes an existing group.
   *
   * @generated from rpc google.monitoring.v3.GroupService.DeleteGroup
   */
  deleteGroup: {
    methodKind: "unary";
    input: typeof DeleteGroupRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists the monitored resources that are members of a group.
   *
   * @generated from rpc google.monitoring.v3.GroupService.ListGroupMembers
   */
  listGroupMembers: {
    methodKind: "unary";
    input: typeof ListGroupMembersRequestSchema;
    output: typeof ListGroupMembersResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_monitoring_v3_group_service, 0);

