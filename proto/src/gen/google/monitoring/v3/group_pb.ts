// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/monitoring/v3/group.proto (package google.monitoring.v3, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_resource } from "../../api/resource_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/monitoring/v3/group.proto.
 */
export const file_google_monitoring_v3_group: GenFile = /*@__PURE__*/
  fileDesc("CiBnb29nbGUvbW9uaXRvcmluZy92My9ncm91cC5wcm90bxIUZ29vZ2xlLm1vbml0b3JpbmcudjMigAIKBUdyb3VwEgwKBG5hbWUYASABKAkSFAoMZGlzcGxheV9uYW1lGAIgASgJEhMKC3BhcmVudF9uYW1lGAMgASgJEg4KBmZpbHRlchgFIAEoCRISCgppc19jbHVzdGVyGAYgASgIOpkB6kGVAQofbW9uaXRvcmluZy5nb29nbGVhcGlzLmNvbS9Hcm91cBIhcHJvamVjdHMve3Byb2plY3R9L2dyb3Vwcy97Z3JvdXB9Eitvcmdhbml6YXRpb25zL3tvcmdhbml6YXRpb259L2dyb3Vwcy97Z3JvdXB9Eh9mb2xkZXJzL3tmb2xkZXJ9L2dyb3Vwcy97Z3JvdXB9EgEqQsUBChhjb20uZ29vZ2xlLm1vbml0b3JpbmcudjNCCkdyb3VwUHJvdG9QAVpBY2xvdWQuZ29vZ2xlLmNvbS9nby9tb25pdG9yaW5nL2FwaXYzL3YyL21vbml0b3JpbmdwYjttb25pdG9yaW5ncGKqAhpHb29nbGUuQ2xvdWQuTW9uaXRvcmluZy5WM8oCGkdvb2dsZVxDbG91ZFxNb25pdG9yaW5nXFYz6gIdR29vZ2xlOjpDbG91ZDo6TW9uaXRvcmluZzo6VjNiBnByb3RvMw", [file_google_api_resource]);

/**
 * The description of a dynamic collection of monitored resources. Each group
 * has a filter that is matched against monitored resources and their associated
 * metadata. If a group's filter matches an available monitored resource, then
 * that resource is a member of that group.  Groups can contain any number of
 * monitored resources, and each monitored resource can be a member of any
 * number of groups.
 *
 * Groups can be nested in parent-child hierarchies. The `parentName` field
 * identifies an optional parent for each group.  If a group has a parent, then
 * the only monitored resources available to be matched by the group's filter
 * are the resources contained in the parent group.  In other words, a group
 * contains the monitored resources that match its filter and the filters of all
 * the group's ancestors.  A group without a parent can contain any monitored
 * resource.
 *
 * For example, consider an infrastructure running a set of instances with two
 * user-defined tags: `"environment"` and `"role"`. A parent group has a filter,
 * `environment="production"`.  A child of that parent group has a filter,
 * `role="transcoder"`.  The parent group contains all instances in the
 * production environment, regardless of their roles.  The child group contains
 * instances that have the transcoder role *and* are in the production
 * environment.
 *
 * The monitored resources contained in a group can change at any moment,
 * depending on what resources exist and what filters are associated with the
 * group and its ancestors.
 *
 * @generated from message google.monitoring.v3.Group
 */
export type Group = Message<"google.monitoring.v3.Group"> & {
  /**
   * Output only. The name of this group. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID]
   *
   * When creating a group, this field is ignored and a new name is created
   * consisting of the project specified in the call to `CreateGroup`
   * and a unique `[GROUP_ID]` that is generated automatically.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A user-assigned name for this group, used only for display purposes.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * The name of the group's parent, if it has one. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID]
   *
   * For groups with no parent, `parent_name` is the empty string, `""`.
   *
   * @generated from field: string parent_name = 3;
   */
  parentName: string;

  /**
   * The filter used to determine which monitored resources belong to this
   * group.
   *
   * @generated from field: string filter = 5;
   */
  filter: string;

  /**
   * If true, the members of this group are considered to be a cluster.
   * The system can perform additional analysis on groups that are clusters.
   *
   * @generated from field: bool is_cluster = 6;
   */
  isCluster: boolean;
};

/**
 * Describes the message google.monitoring.v3.Group.
 * Use `create(GroupSchema)` to create a new message.
 */
export const GroupSchema: GenMessage<Group> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_group, 0);

