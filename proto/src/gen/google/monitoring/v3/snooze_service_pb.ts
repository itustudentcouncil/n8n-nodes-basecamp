// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/monitoring/v3/snooze_service.proto (package google.monitoring.v3, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../api/annotations_pb";
import { file_google_api_client } from "../../api/client_pb";
import { file_google_api_field_behavior } from "../../api/field_behavior_pb";
import { file_google_api_resource } from "../../api/resource_pb";
import type { Snooze, SnoozeSchema } from "./snooze_pb";
import { file_google_monitoring_v3_snooze } from "./snooze_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/monitoring/v3/snooze_service.proto.
 */
export const file_google_monitoring_v3_snooze_service: GenFile = /*@__PURE__*/
  fileDesc("Cilnb29nbGUvbW9uaXRvcmluZy92My9zbm9vemVfc2VydmljZS5wcm90bxIUZ29vZ2xlLm1vbml0b3JpbmcudjMiggEKE0NyZWF0ZVNub296ZVJlcXVlc3QSOAoGcGFyZW50GAEgASgJQijgQQL6QSISIG1vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb20vU25vb3plEjEKBnNub296ZRgCIAEoCzIcLmdvb2dsZS5tb25pdG9yaW5nLnYzLlNub296ZUID4EECIpQBChJMaXN0U25vb3plc1JlcXVlc3QSOAoGcGFyZW50GAEgASgJQijgQQL6QSISIG1vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb20vU25vb3plEhMKBmZpbHRlchgCIAEoCUID4EEBEhYKCXBhZ2Vfc2l6ZRgEIAEoBUID4EEBEhcKCnBhZ2VfdG9rZW4YBSABKAlCA+BBASJdChNMaXN0U25vb3plc1Jlc3BvbnNlEi0KB3Nub296ZXMYASADKAsyHC5nb29nbGUubW9uaXRvcmluZy52My5Tbm9vemUSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIkoKEEdldFNub296ZVJlcXVlc3QSNgoEbmFtZRgBIAEoCUIo4EEC+kEiCiBtb25pdG9yaW5nLmdvb2dsZWFwaXMuY29tL1Nub296ZSJ+ChNVcGRhdGVTbm9vemVSZXF1ZXN0EjEKBnNub296ZRgBIAEoCzIcLmdvb2dsZS5tb25pdG9yaW5nLnYzLlNub296ZUID4EECEjQKC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFza0ID4EECMpgGCg1Tbm9vemVTZXJ2aWNlEpgBCgxDcmVhdGVTbm9vemUSKS5nb29nbGUubW9uaXRvcmluZy52My5DcmVhdGVTbm9vemVSZXF1ZXN0GhwuZ29vZ2xlLm1vbml0b3JpbmcudjMuU25vb3plIj/aQQ1wYXJlbnQsc25vb3plgtPkkwIpOgZzbm9vemUiHy92My97cGFyZW50PXByb2plY3RzLyp9L3Nub296ZXMSlAEKC0xpc3RTbm9vemVzEiguZ29vZ2xlLm1vbml0b3JpbmcudjMuTGlzdFNub296ZXNSZXF1ZXN0GikuZ29vZ2xlLm1vbml0b3JpbmcudjMuTGlzdFNub296ZXNSZXNwb25zZSIw2kEGcGFyZW50gtPkkwIhEh8vdjMve3BhcmVudD1wcm9qZWN0cy8qfS9zbm9vemVzEoEBCglHZXRTbm9vemUSJi5nb29nbGUubW9uaXRvcmluZy52My5HZXRTbm9vemVSZXF1ZXN0GhwuZ29vZ2xlLm1vbml0b3JpbmcudjMuU25vb3plIi7aQQRuYW1lgtPkkwIhEh8vdjMve25hbWU9cHJvamVjdHMvKi9zbm9vemVzLyp9EqQBCgxVcGRhdGVTbm9vemUSKS5nb29nbGUubW9uaXRvcmluZy52My5VcGRhdGVTbm9vemVSZXF1ZXN0GhwuZ29vZ2xlLm1vbml0b3JpbmcudjMuU25vb3plIkvaQRJzbm9vemUsdXBkYXRlX21hc2uC0+STAjA6BnNub296ZTImL3YzL3tzbm9vemUubmFtZT1wcm9qZWN0cy8qL3Nub296ZXMvKn0aqQHKQRltb25pdG9yaW5nLmdvb2dsZWFwaXMuY29t0kGJAWh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm0saHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9tb25pdG9yaW5nLGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvbW9uaXRvcmluZy5yZWFkQs0BChhjb20uZ29vZ2xlLm1vbml0b3JpbmcudjNCElNub296ZVNlcnZpY2VQcm90b1ABWkFjbG91ZC5nb29nbGUuY29tL2dvL21vbml0b3JpbmcvYXBpdjMvdjIvbW9uaXRvcmluZ3BiO21vbml0b3JpbmdwYqoCGkdvb2dsZS5DbG91ZC5Nb25pdG9yaW5nLlYzygIaR29vZ2xlXENsb3VkXE1vbml0b3JpbmdcVjPqAh1Hb29nbGU6OkNsb3VkOjpNb25pdG9yaW5nOjpWM2IGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_monitoring_v3_snooze, file_google_protobuf_field_mask]);

/**
 * The message definition for creating a `Snooze`. Users must provide the body
 * of the `Snooze` to be created but must omit the `Snooze` field, `name`.
 *
 * @generated from message google.monitoring.v3.CreateSnoozeRequest
 */
export type CreateSnoozeRequest = Message<"google.monitoring.v3.CreateSnoozeRequest"> & {
  /**
   * Required. The
   * [project](https://cloud.google.com/monitoring/api/v3#project_name) in which
   * a `Snooze` should be created. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The `Snooze` to create. Omit the `name` field, as it will be
   * filled in by the API.
   *
   * @generated from field: google.monitoring.v3.Snooze snooze = 2;
   */
  snooze?: Snooze;
};

/**
 * Describes the message google.monitoring.v3.CreateSnoozeRequest.
 * Use `create(CreateSnoozeRequestSchema)` to create a new message.
 */
export const CreateSnoozeRequestSchema: GenMessage<CreateSnoozeRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_snooze_service, 0);

/**
 * The message definition for listing `Snooze`s associated with the given
 * `parent`, satisfying the optional `filter`.
 *
 * @generated from message google.monitoring.v3.ListSnoozesRequest
 */
export type ListSnoozesRequest = Message<"google.monitoring.v3.ListSnoozesRequest"> & {
  /**
   * Required. The
   * [project](https://cloud.google.com/monitoring/api/v3#project_name) whose
   * `Snooze`s should be listed. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Optional filter to restrict results to the given criteria. The
   * following fields are supported.
   *
   *   * `interval.start_time`
   *   * `interval.end_time`
   *
   * For example:
   *
   *     ```
   *     interval.start_time > "2022-03-11T00:00:00-08:00" AND
   *         interval.end_time < "2022-03-12T00:00:00-08:00"
   *     ```
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * Optional. The maximum number of results to return for a single query. The
   * server may further constrain the maximum number of results returned in a
   * single page. The value should be in the range [1, 1000]. If the value given
   * is outside this range, the server will decide the number of results to be
   * returned.
   *
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;

  /**
   * Optional. The `next_page_token` from a previous call to
   * `ListSnoozesRequest` to get the next page of results.
   *
   * @generated from field: string page_token = 5;
   */
  pageToken: string;
};

/**
 * Describes the message google.monitoring.v3.ListSnoozesRequest.
 * Use `create(ListSnoozesRequestSchema)` to create a new message.
 */
export const ListSnoozesRequestSchema: GenMessage<ListSnoozesRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_snooze_service, 1);

/**
 * The results of a successful `ListSnoozes` call, containing the matching
 * `Snooze`s.
 *
 * @generated from message google.monitoring.v3.ListSnoozesResponse
 */
export type ListSnoozesResponse = Message<"google.monitoring.v3.ListSnoozesResponse"> & {
  /**
   * `Snooze`s matching this list call.
   *
   * @generated from field: repeated google.monitoring.v3.Snooze snoozes = 1;
   */
  snoozes: Snooze[];

  /**
   * Page token for repeated calls to `ListSnoozes`, to fetch additional pages
   * of results. If this is empty or missing, there are no more pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.monitoring.v3.ListSnoozesResponse.
 * Use `create(ListSnoozesResponseSchema)` to create a new message.
 */
export const ListSnoozesResponseSchema: GenMessage<ListSnoozesResponse> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_snooze_service, 2);

/**
 * The message definition for retrieving a `Snooze`. Users must specify the
 * field, `name`, which identifies the `Snooze`.
 *
 * @generated from message google.monitoring.v3.GetSnoozeRequest
 */
export type GetSnoozeRequest = Message<"google.monitoring.v3.GetSnoozeRequest"> & {
  /**
   * Required. The ID of the `Snooze` to retrieve. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/snoozes/[SNOOZE_ID]
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.monitoring.v3.GetSnoozeRequest.
 * Use `create(GetSnoozeRequestSchema)` to create a new message.
 */
export const GetSnoozeRequestSchema: GenMessage<GetSnoozeRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_snooze_service, 3);

/**
 * The message definition for updating a `Snooze`. The field, `snooze.name`
 * identifies the `Snooze` to be updated. The remainder of `snooze` gives the
 * content the `Snooze` in question will be assigned.
 *
 * What fields can be updated depends on the start time and end time of the
 * `Snooze`.
 *
 *   * end time is in the past: These `Snooze`s are considered
 *     read-only and cannot be updated.
 *   * start time is in the past and end time is in the future: `display_name`
 *     and `interval.end_time` can be updated.
 *   * start time is in the future: `display_name`, `interval.start_time` and
 *     `interval.end_time` can be updated.
 *
 * @generated from message google.monitoring.v3.UpdateSnoozeRequest
 */
export type UpdateSnoozeRequest = Message<"google.monitoring.v3.UpdateSnoozeRequest"> & {
  /**
   * Required. The `Snooze` to update. Must have the name field present.
   *
   * @generated from field: google.monitoring.v3.Snooze snooze = 1;
   */
  snooze?: Snooze;

  /**
   * Required. The fields to update.
   *
   * For each field listed in `update_mask`:
   *
   *   * If the `Snooze` object supplied in the `UpdateSnoozeRequest` has a
   *     value for that field, the value of the field in the existing `Snooze`
   *     will be set to the value of the field in the supplied `Snooze`.
   *   * If the field does not have a value in the supplied `Snooze`, the field
   *     in the existing `Snooze` is set to its default value.
   *
   * Fields not listed retain their existing value.
   *
   * The following are the field names that are accepted in `update_mask`:
   *
   *   * `display_name`
   *   * `interval.start_time`
   *   * `interval.end_time`
   *
   * That said, the start time and end time of the `Snooze` determines which
   * fields can legally be updated. Before attempting an update, users should
   * consult the documentation for `UpdateSnoozeRequest`, which talks about
   * which fields can be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.monitoring.v3.UpdateSnoozeRequest.
 * Use `create(UpdateSnoozeRequestSchema)` to create a new message.
 */
export const UpdateSnoozeRequestSchema: GenMessage<UpdateSnoozeRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_snooze_service, 4);

/**
 * The SnoozeService API is used to temporarily prevent an alert policy from
 * generating alerts. A Snooze is a description of the criteria under which one
 * or more alert policies should not fire alerts for the specified duration.
 *
 * @generated from service google.monitoring.v3.SnoozeService
 */
export const SnoozeService: GenService<{
  /**
   * Creates a `Snooze` that will prevent alerts, which match the provided
   * criteria, from being opened. The `Snooze` applies for a specific time
   * interval.
   *
   * @generated from rpc google.monitoring.v3.SnoozeService.CreateSnooze
   */
  createSnooze: {
    methodKind: "unary";
    input: typeof CreateSnoozeRequestSchema;
    output: typeof SnoozeSchema;
  },
  /**
   * Lists the `Snooze`s associated with a project. Can optionally pass in
   * `filter`, which specifies predicates to match `Snooze`s.
   *
   * @generated from rpc google.monitoring.v3.SnoozeService.ListSnoozes
   */
  listSnoozes: {
    methodKind: "unary";
    input: typeof ListSnoozesRequestSchema;
    output: typeof ListSnoozesResponseSchema;
  },
  /**
   * Retrieves a `Snooze` by `name`.
   *
   * @generated from rpc google.monitoring.v3.SnoozeService.GetSnooze
   */
  getSnooze: {
    methodKind: "unary";
    input: typeof GetSnoozeRequestSchema;
    output: typeof SnoozeSchema;
  },
  /**
   * Updates a `Snooze`, identified by its `name`, with the parameters in the
   * given `Snooze` object.
   *
   * @generated from rpc google.monitoring.v3.SnoozeService.UpdateSnooze
   */
  updateSnooze: {
    methodKind: "unary";
    input: typeof UpdateSnoozeRequestSchema;
    output: typeof SnoozeSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_monitoring_v3_snooze_service, 0);

