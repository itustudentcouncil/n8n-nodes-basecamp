// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/monitoring/v3/notification.proto (package google.monitoring.v3, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { LabelDescriptor } from "../../api/label_pb";
import { file_google_api_label } from "../../api/label_pb";
import type { LaunchStage } from "../../api/launch_stage_pb";
import { file_google_api_launch_stage } from "../../api/launch_stage_pb";
import { file_google_api_resource } from "../../api/resource_pb";
import type { ServiceTier } from "./common_pb";
import { file_google_monitoring_v3_common } from "./common_pb";
import type { MutationRecord } from "./mutation_record_pb";
import { file_google_monitoring_v3_mutation_record } from "./mutation_record_pb";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/monitoring/v3/notification.proto.
 */
export const file_google_monitoring_v3_notification: GenFile = /*@__PURE__*/
  fileDesc("Cidnb29nbGUvbW9uaXRvcmluZy92My9ub3RpZmljYXRpb24ucHJvdG8SFGdvb2dsZS5tb25pdG9yaW5nLnYzIqUECh1Ob3RpZmljYXRpb25DaGFubmVsRGVzY3JpcHRvchIMCgRuYW1lGAYgASgJEgwKBHR5cGUYASABKAkSFAoMZGlzcGxheV9uYW1lGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJEisKBmxhYmVscxgEIAMoCzIbLmdvb2dsZS5hcGkuTGFiZWxEZXNjcmlwdG9yEj4KD3N1cHBvcnRlZF90aWVycxgFIAMoDjIhLmdvb2dsZS5tb25pdG9yaW5nLnYzLlNlcnZpY2VUaWVyQgIYARItCgxsYXVuY2hfc3RhZ2UYByABKA4yFy5nb29nbGUuYXBpLkxhdW5jaFN0YWdlOqAC6kGcAgo3bW9uaXRvcmluZy5nb29nbGVhcGlzLmNvbS9Ob3RpZmljYXRpb25DaGFubmVsRGVzY3JpcHRvchJGcHJvamVjdHMve3Byb2plY3R9L25vdGlmaWNhdGlvbkNoYW5uZWxEZXNjcmlwdG9ycy97Y2hhbm5lbF9kZXNjcmlwdG9yfRJQb3JnYW5pemF0aW9ucy97b3JnYW5pemF0aW9ufS9ub3RpZmljYXRpb25DaGFubmVsRGVzY3JpcHRvcnMve2NoYW5uZWxfZGVzY3JpcHRvcn0SRGZvbGRlcnMve2ZvbGRlcn0vbm90aWZpY2F0aW9uQ2hhbm5lbERlc2NyaXB0b3JzL3tjaGFubmVsX2Rlc2NyaXB0b3J9EgEqIrYHChNOb3RpZmljYXRpb25DaGFubmVsEgwKBHR5cGUYASABKAkSDAoEbmFtZRgGIAEoCRIUCgxkaXNwbGF5X25hbWUYAyABKAkSEwoLZGVzY3JpcHRpb24YBCABKAkSRQoGbGFiZWxzGAUgAygLMjUuZ29vZ2xlLm1vbml0b3JpbmcudjMuTm90aWZpY2F0aW9uQ2hhbm5lbC5MYWJlbHNFbnRyeRJOCgt1c2VyX2xhYmVscxgIIAMoCzI5Lmdvb2dsZS5tb25pdG9yaW5nLnYzLk5vdGlmaWNhdGlvbkNoYW5uZWwuVXNlckxhYmVsc0VudHJ5ElkKE3ZlcmlmaWNhdGlvbl9zdGF0dXMYCSABKA4yPC5nb29nbGUubW9uaXRvcmluZy52My5Ob3RpZmljYXRpb25DaGFubmVsLlZlcmlmaWNhdGlvblN0YXR1cxIrCgdlbmFibGVkGAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRI9Cg9jcmVhdGlvbl9yZWNvcmQYDCABKAsyJC5nb29nbGUubW9uaXRvcmluZy52My5NdXRhdGlvblJlY29yZBI+ChBtdXRhdGlvbl9yZWNvcmRzGA0gAygLMiQuZ29vZ2xlLm1vbml0b3JpbmcudjMuTXV0YXRpb25SZWNvcmQaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ARoxCg9Vc2VyTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJXChJWZXJpZmljYXRpb25TdGF0dXMSIwofVkVSSUZJQ0FUSU9OX1NUQVRVU19VTlNQRUNJRklFRBAAEg4KClVOVkVSSUZJRUQQARIMCghWRVJJRklFRBACOv4B6kH6AQotbW9uaXRvcmluZy5nb29nbGVhcGlzLmNvbS9Ob3RpZmljYXRpb25DaGFubmVsEj5wcm9qZWN0cy97cHJvamVjdH0vbm90aWZpY2F0aW9uQ2hhbm5lbHMve25vdGlmaWNhdGlvbl9jaGFubmVsfRJIb3JnYW5pemF0aW9ucy97b3JnYW5pemF0aW9ufS9ub3RpZmljYXRpb25DaGFubmVscy97bm90aWZpY2F0aW9uX2NoYW5uZWx9Ejxmb2xkZXJzL3tmb2xkZXJ9L25vdGlmaWNhdGlvbkNoYW5uZWxzL3tub3RpZmljYXRpb25fY2hhbm5lbH0SASpCzAEKGGNvbS5nb29nbGUubW9uaXRvcmluZy52M0IRTm90aWZpY2F0aW9uUHJvdG9QAVpBY2xvdWQuZ29vZ2xlLmNvbS9nby9tb25pdG9yaW5nL2FwaXYzL3YyL21vbml0b3JpbmdwYjttb25pdG9yaW5ncGKqAhpHb29nbGUuQ2xvdWQuTW9uaXRvcmluZy5WM8oCGkdvb2dsZVxDbG91ZFxNb25pdG9yaW5nXFYz6gIdR29vZ2xlOjpDbG91ZDo6TW9uaXRvcmluZzo6VjNiBnByb3RvMw", [file_google_api_label, file_google_api_launch_stage, file_google_api_resource, file_google_monitoring_v3_common, file_google_monitoring_v3_mutation_record, file_google_protobuf_wrappers]);

/**
 * A description of a notification channel. The descriptor includes
 * the properties of the channel and the set of labels or fields that
 * must be specified to configure channels of a given type.
 *
 * @generated from message google.monitoring.v3.NotificationChannelDescriptor
 */
export type NotificationChannelDescriptor = Message<"google.monitoring.v3.NotificationChannelDescriptor"> & {
  /**
   * The full REST resource name for this descriptor. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/notificationChannelDescriptors/[TYPE]
   *
   * In the above, `[TYPE]` is the value of the `type` field.
   *
   * @generated from field: string name = 6;
   */
  name: string;

  /**
   * The type of notification channel, such as "email" and "sms". To view the
   * full list of channels, see
   * [Channel
   * descriptors](https://cloud.google.com/monitoring/alerts/using-channels-api#ncd).
   * Notification channel types are globally unique.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * A human-readable name for the notification channel type.  This
   * form of the name is suitable for a user interface.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * A human-readable description of the notification channel
   * type. The description may include a description of the properties
   * of the channel and pointers to external documentation.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * The set of labels that must be defined to identify a particular
   * channel of the corresponding type. Each label includes a
   * description for how that field should be populated.
   *
   * @generated from field: repeated google.api.LabelDescriptor labels = 4;
   */
  labels: LabelDescriptor[];

  /**
   * The tiers that support this notification channel; the project service tier
   * must be one of the supported_tiers.
   *
   * @generated from field: repeated google.monitoring.v3.ServiceTier supported_tiers = 5 [deprecated = true];
   * @deprecated
   */
  supportedTiers: ServiceTier[];

  /**
   * The product launch stage for channels of this type.
   *
   * @generated from field: google.api.LaunchStage launch_stage = 7;
   */
  launchStage: LaunchStage;
};

/**
 * Describes the message google.monitoring.v3.NotificationChannelDescriptor.
 * Use `create(NotificationChannelDescriptorSchema)` to create a new message.
 */
export const NotificationChannelDescriptorSchema: GenMessage<NotificationChannelDescriptor> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_notification, 0);

/**
 * A `NotificationChannel` is a medium through which an alert is
 * delivered when a policy violation is detected. Examples of channels
 * include email, SMS, and third-party messaging applications. Fields
 * containing sensitive information like authentication tokens or
 * contact info are only partially populated on retrieval.
 *
 * @generated from message google.monitoring.v3.NotificationChannel
 */
export type NotificationChannel = Message<"google.monitoring.v3.NotificationChannel"> & {
  /**
   * The type of the notification channel. This field matches the
   * value of the
   * [NotificationChannelDescriptor.type][google.monitoring.v3.NotificationChannelDescriptor.type]
   * field.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * The full REST resource name for this channel. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/notificationChannels/[CHANNEL_ID]
   *
   * The `[CHANNEL_ID]` is automatically assigned by the server on creation.
   *
   * @generated from field: string name = 6;
   */
  name: string;

  /**
   * An optional human-readable name for this notification channel. It is
   * recommended that you specify a non-empty and unique name in order to
   * make it easier to identify the channels in your project, though this is
   * not enforced. The display name is limited to 512 Unicode characters.
   *
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * An optional human-readable description of this notification channel. This
   * description may provide additional details, beyond the display
   * name, for the channel. This may not exceed 1024 Unicode characters.
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * Configuration fields that define the channel and its behavior. The
   * permissible and required labels are specified in the
   * [NotificationChannelDescriptor.labels][google.monitoring.v3.NotificationChannelDescriptor.labels]
   * of the `NotificationChannelDescriptor` corresponding to the `type` field.
   *
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };

  /**
   * User-supplied key/value data that does not need to conform to
   * the corresponding `NotificationChannelDescriptor`'s schema, unlike
   * the `labels` field. This field is intended to be used for organizing
   * and identifying the `NotificationChannel` objects.
   *
   * The field can contain up to 64 entries. Each key and value is limited to
   * 63 Unicode characters or 128 bytes, whichever is smaller. Labels and
   * values can contain only lowercase letters, numerals, underscores, and
   * dashes. Keys must begin with a letter.
   *
   * @generated from field: map<string, string> user_labels = 8;
   */
  userLabels: { [key: string]: string };

  /**
   * Indicates whether this channel has been verified or not. On a
   * [`ListNotificationChannels`][google.monitoring.v3.NotificationChannelService.ListNotificationChannels]
   * or
   * [`GetNotificationChannel`][google.monitoring.v3.NotificationChannelService.GetNotificationChannel]
   * operation, this field is expected to be populated.
   *
   * If the value is `UNVERIFIED`, then it indicates that the channel is
   * non-functioning (it both requires verification and lacks verification);
   * otherwise, it is assumed that the channel works.
   *
   * If the channel is neither `VERIFIED` nor `UNVERIFIED`, it implies that
   * the channel is of a type that does not require verification or that
   * this specific channel has been exempted from verification because it was
   * created prior to verification being required for channels of this type.
   *
   * This field cannot be modified using a standard
   * [`UpdateNotificationChannel`][google.monitoring.v3.NotificationChannelService.UpdateNotificationChannel]
   * operation. To change the value of this field, you must call
   * [`VerifyNotificationChannel`][google.monitoring.v3.NotificationChannelService.VerifyNotificationChannel].
   *
   * @generated from field: google.monitoring.v3.NotificationChannel.VerificationStatus verification_status = 9;
   */
  verificationStatus: NotificationChannel_VerificationStatus;

  /**
   * Whether notifications are forwarded to the described channel. This makes
   * it possible to disable delivery of notifications to a particular channel
   * without removing the channel from all alerting policies that reference
   * the channel. This is a more convenient approach when the change is
   * temporary and you want to receive notifications from the same set
   * of alerting policies on the channel at some point in the future.
   *
   * @generated from field: google.protobuf.BoolValue enabled = 11;
   */
  enabled?: boolean;

  /**
   * Record of the creation of this channel.
   *
   * @generated from field: google.monitoring.v3.MutationRecord creation_record = 12;
   */
  creationRecord?: MutationRecord;

  /**
   * Records of the modification of this channel.
   *
   * @generated from field: repeated google.monitoring.v3.MutationRecord mutation_records = 13;
   */
  mutationRecords: MutationRecord[];
};

/**
 * Describes the message google.monitoring.v3.NotificationChannel.
 * Use `create(NotificationChannelSchema)` to create a new message.
 */
export const NotificationChannelSchema: GenMessage<NotificationChannel> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_notification, 1);

/**
 * Indicates whether the channel has been verified or not. It is illegal
 * to specify this field in a
 * [`CreateNotificationChannel`][google.monitoring.v3.NotificationChannelService.CreateNotificationChannel]
 * or an
 * [`UpdateNotificationChannel`][google.monitoring.v3.NotificationChannelService.UpdateNotificationChannel]
 * operation.
 *
 * @generated from enum google.monitoring.v3.NotificationChannel.VerificationStatus
 */
export enum NotificationChannel_VerificationStatus {
  /**
   * Sentinel value used to indicate that the state is unknown, omitted, or
   * is not applicable (as in the case of channels that neither support
   * nor require verification in order to function).
   *
   * @generated from enum value: VERIFICATION_STATUS_UNSPECIFIED = 0;
   */
  VERIFICATION_STATUS_UNSPECIFIED = 0,

  /**
   * The channel has yet to be verified and requires verification to function.
   * Note that this state also applies to the case where the verification
   * process has been initiated by sending a verification code but where
   * the verification code has not been submitted to complete the process.
   *
   * @generated from enum value: UNVERIFIED = 1;
   */
  UNVERIFIED = 1,

  /**
   * It has been proven that notifications can be received on this
   * notification channel and that someone on the project has access
   * to messages that are delivered to that channel.
   *
   * @generated from enum value: VERIFIED = 2;
   */
  VERIFIED = 2,
}

/**
 * Describes the enum google.monitoring.v3.NotificationChannel.VerificationStatus.
 */
export const NotificationChannel_VerificationStatusSchema: GenEnum<NotificationChannel_VerificationStatus> = /*@__PURE__*/
  enumDesc(file_google_monitoring_v3_notification, 1, 0);

