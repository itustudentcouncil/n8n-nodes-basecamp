// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/monitoring/v3/service_service.proto (package google.monitoring.v3, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../api/annotations_pb";
import { file_google_api_client } from "../../api/client_pb";
import { file_google_api_field_behavior } from "../../api/field_behavior_pb";
import { file_google_api_resource } from "../../api/resource_pb";
import type { Service, ServiceLevelObjective, ServiceLevelObjective_View, ServiceLevelObjectiveSchema, ServiceSchema } from "./service_pb";
import { file_google_monitoring_v3_service } from "./service_pb";
import type { EmptySchema, FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/monitoring/v3/service_service.proto.
 */
export const file_google_monitoring_v3_service_service: GenFile = /*@__PURE__*/
  fileDesc("Cipnb29nbGUvbW9uaXRvcmluZy92My9zZXJ2aWNlX3NlcnZpY2UucHJvdG8SFGdvb2dsZS5tb25pdG9yaW5nLnYzIpoBChRDcmVhdGVTZXJ2aWNlUmVxdWVzdBI5CgZwYXJlbnQYASABKAlCKeBBAvpBIxIhbW9uaXRvcmluZy5nb29nbGVhcGlzLmNvbS9TZXJ2aWNlEhIKCnNlcnZpY2VfaWQYAyABKAkSMwoHc2VydmljZRgCIAEoCzIdLmdvb2dsZS5tb25pdG9yaW5nLnYzLlNlcnZpY2VCA+BBAiJMChFHZXRTZXJ2aWNlUmVxdWVzdBI3CgRuYW1lGAEgASgJQingQQL6QSMKIW1vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb20vU2VydmljZSKHAQoTTGlzdFNlcnZpY2VzUmVxdWVzdBI5CgZwYXJlbnQYASABKAlCKeBBAvpBIxIhbW9uaXRvcmluZy5nb29nbGVhcGlzLmNvbS9TZXJ2aWNlEg4KBmZpbHRlchgCIAEoCRIRCglwYWdlX3NpemUYAyABKAUSEgoKcGFnZV90b2tlbhgEIAEoCSJgChRMaXN0U2VydmljZXNSZXNwb25zZRIvCghzZXJ2aWNlcxgBIAMoCzIdLmdvb2dsZS5tb25pdG9yaW5nLnYzLlNlcnZpY2USFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJInwKFFVwZGF0ZVNlcnZpY2VSZXF1ZXN0EjMKB3NlcnZpY2UYASABKAsyHS5nb29nbGUubW9uaXRvcmluZy52My5TZXJ2aWNlQgPgQQISLwoLdXBkYXRlX21hc2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrIk8KFERlbGV0ZVNlcnZpY2VSZXF1ZXN0EjcKBG5hbWUYASABKAlCKeBBAvpBIwohbW9uaXRvcmluZy5nb29nbGVhcGlzLmNvbS9TZXJ2aWNlItYBCiJDcmVhdGVTZXJ2aWNlTGV2ZWxPYmplY3RpdmVSZXF1ZXN0EjkKBnBhcmVudBgBIAEoCUIp4EEC+kEjCiFtb25pdG9yaW5nLmdvb2dsZWFwaXMuY29tL1NlcnZpY2USIgoac2VydmljZV9sZXZlbF9vYmplY3RpdmVfaWQYAyABKAkSUQoXc2VydmljZV9sZXZlbF9vYmplY3RpdmUYAiABKAsyKy5nb29nbGUubW9uaXRvcmluZy52My5TZXJ2aWNlTGV2ZWxPYmplY3RpdmVCA+BBAiKoAQofR2V0U2VydmljZUxldmVsT2JqZWN0aXZlUmVxdWVzdBJFCgRuYW1lGAEgASgJQjfgQQL6QTEKL21vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb20vU2VydmljZUxldmVsT2JqZWN0aXZlEj4KBHZpZXcYAiABKA4yMC5nb29nbGUubW9uaXRvcmluZy52My5TZXJ2aWNlTGV2ZWxPYmplY3RpdmUuVmlldyLVAQohTGlzdFNlcnZpY2VMZXZlbE9iamVjdGl2ZXNSZXF1ZXN0EjkKBnBhcmVudBgBIAEoCUIp4EEC+kEjCiFtb25pdG9yaW5nLmdvb2dsZWFwaXMuY29tL1NlcnZpY2USDgoGZmlsdGVyGAIgASgJEhEKCXBhZ2Vfc2l6ZRgDIAEoBRISCgpwYWdlX3Rva2VuGAQgASgJEj4KBHZpZXcYBSABKA4yMC5nb29nbGUubW9uaXRvcmluZy52My5TZXJ2aWNlTGV2ZWxPYmplY3RpdmUuVmlldyKMAQoiTGlzdFNlcnZpY2VMZXZlbE9iamVjdGl2ZXNSZXNwb25zZRJNChhzZXJ2aWNlX2xldmVsX29iamVjdGl2ZXMYASADKAsyKy5nb29nbGUubW9uaXRvcmluZy52My5TZXJ2aWNlTGV2ZWxPYmplY3RpdmUSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIqgBCiJVcGRhdGVTZXJ2aWNlTGV2ZWxPYmplY3RpdmVSZXF1ZXN0ElEKF3NlcnZpY2VfbGV2ZWxfb2JqZWN0aXZlGAEgASgLMisuZ29vZ2xlLm1vbml0b3JpbmcudjMuU2VydmljZUxldmVsT2JqZWN0aXZlQgPgQQISLwoLdXBkYXRlX21hc2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrImsKIkRlbGV0ZVNlcnZpY2VMZXZlbE9iamVjdGl2ZVJlcXVlc3QSRQoEbmFtZRgBIAEoCUI34EEC+kExCi9tb25pdG9yaW5nLmdvb2dsZWFwaXMuY29tL1NlcnZpY2VMZXZlbE9iamVjdGl2ZTLqDwoYU2VydmljZU1vbml0b3JpbmdTZXJ2aWNlEpcBCg1DcmVhdGVTZXJ2aWNlEiouZ29vZ2xlLm1vbml0b3JpbmcudjMuQ3JlYXRlU2VydmljZVJlcXVlc3QaHS5nb29nbGUubW9uaXRvcmluZy52My5TZXJ2aWNlIjvaQQ5wYXJlbnQsc2VydmljZYLT5JMCJDoHc2VydmljZSIZL3YzL3twYXJlbnQ9Ki8qfS9zZXJ2aWNlcxJ+CgpHZXRTZXJ2aWNlEicuZ29vZ2xlLm1vbml0b3JpbmcudjMuR2V0U2VydmljZVJlcXVlc3QaHS5nb29nbGUubW9uaXRvcmluZy52My5TZXJ2aWNlIijaQQRuYW1lgtPkkwIbEhkvdjMve25hbWU9Ki8qL3NlcnZpY2VzLyp9EpEBCgxMaXN0U2VydmljZXMSKS5nb29nbGUubW9uaXRvcmluZy52My5MaXN0U2VydmljZXNSZXF1ZXN0GiouZ29vZ2xlLm1vbml0b3JpbmcudjMuTGlzdFNlcnZpY2VzUmVzcG9uc2UiKtpBBnBhcmVudILT5JMCGxIZL3YzL3twYXJlbnQ9Ki8qfS9zZXJ2aWNlcxKYAQoNVXBkYXRlU2VydmljZRIqLmdvb2dsZS5tb25pdG9yaW5nLnYzLlVwZGF0ZVNlcnZpY2VSZXF1ZXN0Gh0uZ29vZ2xlLm1vbml0b3JpbmcudjMuU2VydmljZSI82kEHc2VydmljZYLT5JMCLDoHc2VydmljZTIhL3YzL3tzZXJ2aWNlLm5hbWU9Ki8qL3NlcnZpY2VzLyp9En0KDURlbGV0ZVNlcnZpY2USKi5nb29nbGUubW9uaXRvcmluZy52My5EZWxldGVTZXJ2aWNlUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIo2kEEbmFtZYLT5JMCGyoZL3YzL3tuYW1lPSovKi9zZXJ2aWNlcy8qfRL6AQobQ3JlYXRlU2VydmljZUxldmVsT2JqZWN0aXZlEjguZ29vZ2xlLm1vbml0b3JpbmcudjMuQ3JlYXRlU2VydmljZUxldmVsT2JqZWN0aXZlUmVxdWVzdBorLmdvb2dsZS5tb25pdG9yaW5nLnYzLlNlcnZpY2VMZXZlbE9iamVjdGl2ZSJ02kEecGFyZW50LHNlcnZpY2VfbGV2ZWxfb2JqZWN0aXZlgtPkkwJNOhdzZXJ2aWNlX2xldmVsX29iamVjdGl2ZSIyL3YzL3twYXJlbnQ9Ki8qL3NlcnZpY2VzLyp9L3NlcnZpY2VMZXZlbE9iamVjdGl2ZXMSwQEKGEdldFNlcnZpY2VMZXZlbE9iamVjdGl2ZRI1Lmdvb2dsZS5tb25pdG9yaW5nLnYzLkdldFNlcnZpY2VMZXZlbE9iamVjdGl2ZVJlcXVlc3QaKy5nb29nbGUubW9uaXRvcmluZy52My5TZXJ2aWNlTGV2ZWxPYmplY3RpdmUiQdpBBG5hbWWC0+STAjQSMi92My97bmFtZT0qLyovc2VydmljZXMvKi9zZXJ2aWNlTGV2ZWxPYmplY3RpdmVzLyp9EtQBChpMaXN0U2VydmljZUxldmVsT2JqZWN0aXZlcxI3Lmdvb2dsZS5tb25pdG9yaW5nLnYzLkxpc3RTZXJ2aWNlTGV2ZWxPYmplY3RpdmVzUmVxdWVzdBo4Lmdvb2dsZS5tb25pdG9yaW5nLnYzLkxpc3RTZXJ2aWNlTGV2ZWxPYmplY3RpdmVzUmVzcG9uc2UiQ9pBBnBhcmVudILT5JMCNBIyL3YzL3twYXJlbnQ9Ki8qL3NlcnZpY2VzLyp9L3NlcnZpY2VMZXZlbE9iamVjdGl2ZXMSjAIKG1VwZGF0ZVNlcnZpY2VMZXZlbE9iamVjdGl2ZRI4Lmdvb2dsZS5tb25pdG9yaW5nLnYzLlVwZGF0ZVNlcnZpY2VMZXZlbE9iamVjdGl2ZVJlcXVlc3QaKy5nb29nbGUubW9uaXRvcmluZy52My5TZXJ2aWNlTGV2ZWxPYmplY3RpdmUihQHaQRdzZXJ2aWNlX2xldmVsX29iamVjdGl2ZYLT5JMCZToXc2VydmljZV9sZXZlbF9vYmplY3RpdmUySi92My97c2VydmljZV9sZXZlbF9vYmplY3RpdmUubmFtZT0qLyovc2VydmljZXMvKi9zZXJ2aWNlTGV2ZWxPYmplY3RpdmVzLyp9ErIBChtEZWxldGVTZXJ2aWNlTGV2ZWxPYmplY3RpdmUSOC5nb29nbGUubW9uaXRvcmluZy52My5EZWxldGVTZXJ2aWNlTGV2ZWxPYmplY3RpdmVSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IkHaQQRuYW1lgtPkkwI0KjIvdjMve25hbWU9Ki8qL3NlcnZpY2VzLyovc2VydmljZUxldmVsT2JqZWN0aXZlcy8qfRqpAcpBGW1vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb23SQYkBaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybSxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL21vbml0b3JpbmcsaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9tb25pdG9yaW5nLnJlYWRC2AEKGGNvbS5nb29nbGUubW9uaXRvcmluZy52M0IdU2VydmljZU1vbml0b3JpbmdTZXJ2aWNlUHJvdG9QAVpBY2xvdWQuZ29vZ2xlLmNvbS9nby9tb25pdG9yaW5nL2FwaXYzL3YyL21vbml0b3JpbmdwYjttb25pdG9yaW5ncGKqAhpHb29nbGUuQ2xvdWQuTW9uaXRvcmluZy5WM8oCGkdvb2dsZVxDbG91ZFxNb25pdG9yaW5nXFYz6gIdR29vZ2xlOjpDbG91ZDo6TW9uaXRvcmluZzo6VjNiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_monitoring_v3_service, file_google_protobuf_empty, file_google_protobuf_field_mask]);

/**
 * The `CreateService` request.
 *
 * @generated from message google.monitoring.v3.CreateServiceRequest
 */
export type CreateServiceRequest = Message<"google.monitoring.v3.CreateServiceRequest"> & {
  /**
   * Required. Resource
   * [name](https://cloud.google.com/monitoring/api/v3#project_name) of the
   * parent Metrics Scope. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The Service id to use for this Service. If omitted, an id will be
   * generated instead. Must match the pattern `[a-z0-9\-]+`
   *
   * @generated from field: string service_id = 3;
   */
  serviceId: string;

  /**
   * Required. The `Service` to create.
   *
   * @generated from field: google.monitoring.v3.Service service = 2;
   */
  service?: Service;
};

/**
 * Describes the message google.monitoring.v3.CreateServiceRequest.
 * Use `create(CreateServiceRequestSchema)` to create a new message.
 */
export const CreateServiceRequestSchema: GenMessage<CreateServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_service_service, 0);

/**
 * The `GetService` request.
 *
 * @generated from message google.monitoring.v3.GetServiceRequest
 */
export type GetServiceRequest = Message<"google.monitoring.v3.GetServiceRequest"> & {
  /**
   * Required. Resource name of the `Service`. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.monitoring.v3.GetServiceRequest.
 * Use `create(GetServiceRequestSchema)` to create a new message.
 */
export const GetServiceRequestSchema: GenMessage<GetServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_service_service, 1);

/**
 * The `ListServices` request.
 *
 * @generated from message google.monitoring.v3.ListServicesRequest
 */
export type ListServicesRequest = Message<"google.monitoring.v3.ListServicesRequest"> & {
  /**
   * Required. Resource name of the parent containing the listed services,
   * either a [project](https://cloud.google.com/monitoring/api/v3#project_name)
   * or a Monitoring Metrics Scope. The formats are:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]
   *     workspaces/[HOST_PROJECT_ID_OR_NUMBER]
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * A filter specifying what `Service`s to return. The filter supports
   * filtering on a particular service-identifier type or one of its attributes.
   *
   * To filter on a particular service-identifier type, the `identifier_case`
   * refers to which option in the `identifier` field is populated. For example,
   * the filter `identifier_case = "CUSTOM"` would match all services with a
   * value for the `custom` field. Valid options include "CUSTOM", "APP_ENGINE",
   * "MESH_ISTIO", and the other options listed at
   * https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services#Service
   *
   * To filter on an attribute of a service-identifier type, apply the filter
   * name by using the snake case of the service-identifier type and the
   * attribute of that service-identifier type, and join the two with a period.
   * For example, to filter by the `meshUid` field of the `MeshIstio`
   * service-identifier type, you must filter on `mesh_istio.mesh_uid =
   * "123"` to match all services with mesh UID "123". Service-identifier types
   * and their attributes are described at
   * https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services#Service
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * A non-negative number that is the maximum number of results to return.
   * When 0, use default page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * If this field is not empty then it must contain the `nextPageToken` value
   * returned by a previous call to this method.  Using this field causes the
   * method to return additional results from the previous method call.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.monitoring.v3.ListServicesRequest.
 * Use `create(ListServicesRequestSchema)` to create a new message.
 */
export const ListServicesRequestSchema: GenMessage<ListServicesRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_service_service, 2);

/**
 * The `ListServices` response.
 *
 * @generated from message google.monitoring.v3.ListServicesResponse
 */
export type ListServicesResponse = Message<"google.monitoring.v3.ListServicesResponse"> & {
  /**
   * The `Service`s matching the specified filter.
   *
   * @generated from field: repeated google.monitoring.v3.Service services = 1;
   */
  services: Service[];

  /**
   * If there are more results than have been returned, then this field is set
   * to a non-empty value.  To see the additional results,
   * use that value as `page_token` in the next call to this method.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.monitoring.v3.ListServicesResponse.
 * Use `create(ListServicesResponseSchema)` to create a new message.
 */
export const ListServicesResponseSchema: GenMessage<ListServicesResponse> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_service_service, 3);

/**
 * The `UpdateService` request.
 *
 * @generated from message google.monitoring.v3.UpdateServiceRequest
 */
export type UpdateServiceRequest = Message<"google.monitoring.v3.UpdateServiceRequest"> & {
  /**
   * Required. The `Service` to draw updates from.
   * The given `name` specifies the resource to update.
   *
   * @generated from field: google.monitoring.v3.Service service = 1;
   */
  service?: Service;

  /**
   * A set of field paths defining which fields to use for the update.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.monitoring.v3.UpdateServiceRequest.
 * Use `create(UpdateServiceRequestSchema)` to create a new message.
 */
export const UpdateServiceRequestSchema: GenMessage<UpdateServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_service_service, 4);

/**
 * The `DeleteService` request.
 *
 * @generated from message google.monitoring.v3.DeleteServiceRequest
 */
export type DeleteServiceRequest = Message<"google.monitoring.v3.DeleteServiceRequest"> & {
  /**
   * Required. Resource name of the `Service` to delete. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.monitoring.v3.DeleteServiceRequest.
 * Use `create(DeleteServiceRequestSchema)` to create a new message.
 */
export const DeleteServiceRequestSchema: GenMessage<DeleteServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_service_service, 5);

/**
 * The `CreateServiceLevelObjective` request.
 *
 * @generated from message google.monitoring.v3.CreateServiceLevelObjectiveRequest
 */
export type CreateServiceLevelObjectiveRequest = Message<"google.monitoring.v3.CreateServiceLevelObjectiveRequest"> & {
  /**
   * Required. Resource name of the parent `Service`. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The ServiceLevelObjective id to use for this
   * ServiceLevelObjective. If omitted, an id will be generated instead. Must
   * match the pattern `^[a-zA-Z0-9-_:.]+$`
   *
   * @generated from field: string service_level_objective_id = 3;
   */
  serviceLevelObjectiveId: string;

  /**
   * Required. The `ServiceLevelObjective` to create.
   * The provided `name` will be respected if no `ServiceLevelObjective` exists
   * with this name.
   *
   * @generated from field: google.monitoring.v3.ServiceLevelObjective service_level_objective = 2;
   */
  serviceLevelObjective?: ServiceLevelObjective;
};

/**
 * Describes the message google.monitoring.v3.CreateServiceLevelObjectiveRequest.
 * Use `create(CreateServiceLevelObjectiveRequestSchema)` to create a new message.
 */
export const CreateServiceLevelObjectiveRequestSchema: GenMessage<CreateServiceLevelObjectiveRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_service_service, 6);

/**
 * The `GetServiceLevelObjective` request.
 *
 * @generated from message google.monitoring.v3.GetServiceLevelObjectiveRequest
 */
export type GetServiceLevelObjectiveRequest = Message<"google.monitoring.v3.GetServiceLevelObjectiveRequest"> & {
  /**
   * Required. Resource name of the `ServiceLevelObjective` to get. The format
   * is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * View of the `ServiceLevelObjective` to return. If `DEFAULT`, return the
   * `ServiceLevelObjective` as originally defined. If `EXPLICIT` and the
   * `ServiceLevelObjective` is defined in terms of a `BasicSli`, replace the
   * `BasicSli` with a `RequestBasedSli` spelling out how the SLI is computed.
   *
   * @generated from field: google.monitoring.v3.ServiceLevelObjective.View view = 2;
   */
  view: ServiceLevelObjective_View;
};

/**
 * Describes the message google.monitoring.v3.GetServiceLevelObjectiveRequest.
 * Use `create(GetServiceLevelObjectiveRequestSchema)` to create a new message.
 */
export const GetServiceLevelObjectiveRequestSchema: GenMessage<GetServiceLevelObjectiveRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_service_service, 7);

/**
 * The `ListServiceLevelObjectives` request.
 *
 * @generated from message google.monitoring.v3.ListServiceLevelObjectivesRequest
 */
export type ListServiceLevelObjectivesRequest = Message<"google.monitoring.v3.ListServiceLevelObjectivesRequest"> & {
  /**
   * Required. Resource name of the parent containing the listed SLOs, either a
   * project or a Monitoring Metrics Scope. The formats are:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
   *     workspaces/[HOST_PROJECT_ID_OR_NUMBER]/services/-
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * A filter specifying what `ServiceLevelObjective`s to return.
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * A non-negative number that is the maximum number of results to return.
   * When 0, use default page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * If this field is not empty then it must contain the `nextPageToken` value
   * returned by a previous call to this method.  Using this field causes the
   * method to return additional results from the previous method call.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * View of the `ServiceLevelObjective`s to return. If `DEFAULT`, return each
   * `ServiceLevelObjective` as originally defined. If `EXPLICIT` and the
   * `ServiceLevelObjective` is defined in terms of a `BasicSli`, replace the
   * `BasicSli` with a `RequestBasedSli` spelling out how the SLI is computed.
   *
   * @generated from field: google.monitoring.v3.ServiceLevelObjective.View view = 5;
   */
  view: ServiceLevelObjective_View;
};

/**
 * Describes the message google.monitoring.v3.ListServiceLevelObjectivesRequest.
 * Use `create(ListServiceLevelObjectivesRequestSchema)` to create a new message.
 */
export const ListServiceLevelObjectivesRequestSchema: GenMessage<ListServiceLevelObjectivesRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_service_service, 8);

/**
 * The `ListServiceLevelObjectives` response.
 *
 * @generated from message google.monitoring.v3.ListServiceLevelObjectivesResponse
 */
export type ListServiceLevelObjectivesResponse = Message<"google.monitoring.v3.ListServiceLevelObjectivesResponse"> & {
  /**
   * The `ServiceLevelObjective`s matching the specified filter.
   *
   * @generated from field: repeated google.monitoring.v3.ServiceLevelObjective service_level_objectives = 1;
   */
  serviceLevelObjectives: ServiceLevelObjective[];

  /**
   * If there are more results than have been returned, then this field is set
   * to a non-empty value.  To see the additional results,
   * use that value as `page_token` in the next call to this method.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.monitoring.v3.ListServiceLevelObjectivesResponse.
 * Use `create(ListServiceLevelObjectivesResponseSchema)` to create a new message.
 */
export const ListServiceLevelObjectivesResponseSchema: GenMessage<ListServiceLevelObjectivesResponse> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_service_service, 9);

/**
 * The `UpdateServiceLevelObjective` request.
 *
 * @generated from message google.monitoring.v3.UpdateServiceLevelObjectiveRequest
 */
export type UpdateServiceLevelObjectiveRequest = Message<"google.monitoring.v3.UpdateServiceLevelObjectiveRequest"> & {
  /**
   * Required. The `ServiceLevelObjective` to draw updates from.
   * The given `name` specifies the resource to update.
   *
   * @generated from field: google.monitoring.v3.ServiceLevelObjective service_level_objective = 1;
   */
  serviceLevelObjective?: ServiceLevelObjective;

  /**
   * A set of field paths defining which fields to use for the update.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.monitoring.v3.UpdateServiceLevelObjectiveRequest.
 * Use `create(UpdateServiceLevelObjectiveRequestSchema)` to create a new message.
 */
export const UpdateServiceLevelObjectiveRequestSchema: GenMessage<UpdateServiceLevelObjectiveRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_service_service, 10);

/**
 * The `DeleteServiceLevelObjective` request.
 *
 * @generated from message google.monitoring.v3.DeleteServiceLevelObjectiveRequest
 */
export type DeleteServiceLevelObjectiveRequest = Message<"google.monitoring.v3.DeleteServiceLevelObjectiveRequest"> & {
  /**
   * Required. Resource name of the `ServiceLevelObjective` to delete. The
   * format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.monitoring.v3.DeleteServiceLevelObjectiveRequest.
 * Use `create(DeleteServiceLevelObjectiveRequestSchema)` to create a new message.
 */
export const DeleteServiceLevelObjectiveRequestSchema: GenMessage<DeleteServiceLevelObjectiveRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_v3_service_service, 11);

/**
 * The Cloud Monitoring Service-Oriented Monitoring API has endpoints for
 * managing and querying aspects of a Metrics Scope's services. These include
 * the `Service`'s monitored resources, its Service-Level Objectives, and a
 * taxonomy of categorized Health Metrics.
 *
 * @generated from service google.monitoring.v3.ServiceMonitoringService
 */
export const ServiceMonitoringService: GenService<{
  /**
   * Create a `Service`.
   *
   * @generated from rpc google.monitoring.v3.ServiceMonitoringService.CreateService
   */
  createService: {
    methodKind: "unary";
    input: typeof CreateServiceRequestSchema;
    output: typeof ServiceSchema;
  },
  /**
   * Get the named `Service`.
   *
   * @generated from rpc google.monitoring.v3.ServiceMonitoringService.GetService
   */
  getService: {
    methodKind: "unary";
    input: typeof GetServiceRequestSchema;
    output: typeof ServiceSchema;
  },
  /**
   * List `Service`s for this Metrics Scope.
   *
   * @generated from rpc google.monitoring.v3.ServiceMonitoringService.ListServices
   */
  listServices: {
    methodKind: "unary";
    input: typeof ListServicesRequestSchema;
    output: typeof ListServicesResponseSchema;
  },
  /**
   * Update this `Service`.
   *
   * @generated from rpc google.monitoring.v3.ServiceMonitoringService.UpdateService
   */
  updateService: {
    methodKind: "unary";
    input: typeof UpdateServiceRequestSchema;
    output: typeof ServiceSchema;
  },
  /**
   * Soft delete this `Service`.
   *
   * @generated from rpc google.monitoring.v3.ServiceMonitoringService.DeleteService
   */
  deleteService: {
    methodKind: "unary";
    input: typeof DeleteServiceRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Create a `ServiceLevelObjective` for the given `Service`.
   *
   * @generated from rpc google.monitoring.v3.ServiceMonitoringService.CreateServiceLevelObjective
   */
  createServiceLevelObjective: {
    methodKind: "unary";
    input: typeof CreateServiceLevelObjectiveRequestSchema;
    output: typeof ServiceLevelObjectiveSchema;
  },
  /**
   * Get a `ServiceLevelObjective` by name.
   *
   * @generated from rpc google.monitoring.v3.ServiceMonitoringService.GetServiceLevelObjective
   */
  getServiceLevelObjective: {
    methodKind: "unary";
    input: typeof GetServiceLevelObjectiveRequestSchema;
    output: typeof ServiceLevelObjectiveSchema;
  },
  /**
   * List the `ServiceLevelObjective`s for the given `Service`.
   *
   * @generated from rpc google.monitoring.v3.ServiceMonitoringService.ListServiceLevelObjectives
   */
  listServiceLevelObjectives: {
    methodKind: "unary";
    input: typeof ListServiceLevelObjectivesRequestSchema;
    output: typeof ListServiceLevelObjectivesResponseSchema;
  },
  /**
   * Update the given `ServiceLevelObjective`.
   *
   * @generated from rpc google.monitoring.v3.ServiceMonitoringService.UpdateServiceLevelObjective
   */
  updateServiceLevelObjective: {
    methodKind: "unary";
    input: typeof UpdateServiceLevelObjectiveRequestSchema;
    output: typeof ServiceLevelObjectiveSchema;
  },
  /**
   * Delete the given `ServiceLevelObjective`.
   *
   * @generated from rpc google.monitoring.v3.ServiceMonitoringService.DeleteServiceLevelObjective
   */
  deleteServiceLevelObjective: {
    methodKind: "unary";
    input: typeof DeleteServiceLevelObjectiveRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_monitoring_v3_service_service, 0);

