// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/monitoring/dashboard/v1/dashboards_service.proto (package google.monitoring.dashboard.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Dashboard, DashboardSchema } from "./dashboard_pb";
import { file_google_monitoring_dashboard_v1_dashboard } from "./dashboard_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/monitoring/dashboard/v1/dashboards_service.proto.
 */
export const file_google_monitoring_dashboard_v1_dashboards_service: GenFile = /*@__PURE__*/
  fileDesc("Cjdnb29nbGUvbW9uaXRvcmluZy9kYXNoYm9hcmQvdjEvZGFzaGJvYXJkc19zZXJ2aWNlLnByb3RvEh5nb29nbGUubW9uaXRvcmluZy5kYXNoYm9hcmQudjEitwEKFkNyZWF0ZURhc2hib2FyZFJlcXVlc3QSQwoGcGFyZW50GAEgASgJQjPgQQL6QS0KK2Nsb3VkcmVzb3VyY2VtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL1Byb2plY3QSQQoJZGFzaGJvYXJkGAIgASgLMikuZ29vZ2xlLm1vbml0b3JpbmcuZGFzaGJvYXJkLnYxLkRhc2hib2FyZEID4EECEhUKDXZhbGlkYXRlX29ubHkYAyABKAgiiAEKFUxpc3REYXNoYm9hcmRzUmVxdWVzdBJDCgZwYXJlbnQYASABKAlCM+BBAvpBLQorY2xvdWRyZXNvdXJjZW1hbmFnZXIuZ29vZ2xlYXBpcy5jb20vUHJvamVjdBIRCglwYWdlX3NpemUYAiABKAUSFwoKcGFnZV90b2tlbhgDIAEoCUID4EEBInAKFkxpc3REYXNoYm9hcmRzUmVzcG9uc2USPQoKZGFzaGJvYXJkcxgBIAMoCzIpLmdvb2dsZS5tb25pdG9yaW5nLmRhc2hib2FyZC52MS5EYXNoYm9hcmQSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIlAKE0dldERhc2hib2FyZFJlcXVlc3QSOQoEbmFtZRgBIAEoCUIr4EEC+kElCiNtb25pdG9yaW5nLmdvb2dsZWFwaXMuY29tL0Rhc2hib2FyZCJTChZEZWxldGVEYXNoYm9hcmRSZXF1ZXN0EjkKBG5hbWUYASABKAlCK+BBAvpBJQojbW9uaXRvcmluZy5nb29nbGVhcGlzLmNvbS9EYXNoYm9hcmQicgoWVXBkYXRlRGFzaGJvYXJkUmVxdWVzdBJBCglkYXNoYm9hcmQYASABKAsyKS5nb29nbGUubW9uaXRvcmluZy5kYXNoYm9hcmQudjEuRGFzaGJvYXJkQgPgQQISFQoNdmFsaWRhdGVfb25seRgDIAEoCDLbCAoRRGFzaGJvYXJkc1NlcnZpY2USvgEKD0NyZWF0ZURhc2hib2FyZBI2Lmdvb2dsZS5tb25pdG9yaW5nLmRhc2hib2FyZC52MS5DcmVhdGVEYXNoYm9hcmRSZXF1ZXN0GikuZ29vZ2xlLm1vbml0b3JpbmcuZGFzaGJvYXJkLnYxLkRhc2hib2FyZCJI2kEQcGFyZW50LGRhc2hib2FyZILT5JMCLzoJZGFzaGJvYXJkIiIvdjEve3BhcmVudD1wcm9qZWN0cy8qfS9kYXNoYm9hcmRzErQBCg5MaXN0RGFzaGJvYXJkcxI1Lmdvb2dsZS5tb25pdG9yaW5nLmRhc2hib2FyZC52MS5MaXN0RGFzaGJvYXJkc1JlcXVlc3QaNi5nb29nbGUubW9uaXRvcmluZy5kYXNoYm9hcmQudjEuTGlzdERhc2hib2FyZHNSZXNwb25zZSIz2kEGcGFyZW50gtPkkwIkEiIvdjEve3BhcmVudD1wcm9qZWN0cy8qfS9kYXNoYm9hcmRzEqEBCgxHZXREYXNoYm9hcmQSMy5nb29nbGUubW9uaXRvcmluZy5kYXNoYm9hcmQudjEuR2V0RGFzaGJvYXJkUmVxdWVzdBopLmdvb2dsZS5tb25pdG9yaW5nLmRhc2hib2FyZC52MS5EYXNoYm9hcmQiMdpBBG5hbWWC0+STAiQSIi92MS97bmFtZT1wcm9qZWN0cy8qL2Rhc2hib2FyZHMvKn0SlAEKD0RlbGV0ZURhc2hib2FyZBI2Lmdvb2dsZS5tb25pdG9yaW5nLmRhc2hib2FyZC52MS5EZWxldGVEYXNoYm9hcmRSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IjHaQQRuYW1lgtPkkwIkKiIvdjEve25hbWU9cHJvamVjdHMvKi9kYXNoYm9hcmRzLyp9ErUBCg9VcGRhdGVEYXNoYm9hcmQSNi5nb29nbGUubW9uaXRvcmluZy5kYXNoYm9hcmQudjEuVXBkYXRlRGFzaGJvYXJkUmVxdWVzdBopLmdvb2dsZS5tb25pdG9yaW5nLmRhc2hib2FyZC52MS5EYXNoYm9hcmQiP4LT5JMCOToJZGFzaGJvYXJkMiwvdjEve2Rhc2hib2FyZC5uYW1lPXByb2plY3RzLyovZGFzaGJvYXJkcy8qfRraAcpBGW1vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb23SQboBaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybSxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL21vbml0b3JpbmcsaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9tb25pdG9yaW5nLnJlYWQsaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9tb25pdG9yaW5nLndyaXRlQv8BCiJjb20uZ29vZ2xlLm1vbml0b3JpbmcuZGFzaGJvYXJkLnYxQhZEYXNoYm9hcmRzU2VydmljZVByb3RvUAFaRmNsb3VkLmdvb2dsZS5jb20vZ28vbW9uaXRvcmluZy9kYXNoYm9hcmQvYXBpdjEvZGFzaGJvYXJkcGI7ZGFzaGJvYXJkcGKqAiRHb29nbGUuQ2xvdWQuTW9uaXRvcmluZy5EYXNoYm9hcmQuVjHKAiRHb29nbGVcQ2xvdWRcTW9uaXRvcmluZ1xEYXNoYm9hcmRcVjHqAihHb29nbGU6OkNsb3VkOjpNb25pdG9yaW5nOjpEYXNoYm9hcmQ6OlYxYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_monitoring_dashboard_v1_dashboard, file_google_protobuf_empty]);

/**
 * The `CreateDashboard` request.
 *
 * @generated from message google.monitoring.dashboard.v1.CreateDashboardRequest
 */
export type CreateDashboardRequest = Message<"google.monitoring.dashboard.v1.CreateDashboardRequest"> & {
  /**
   * Required. The project on which to execute the request. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]
   *
   * The `[PROJECT_ID_OR_NUMBER]` must match the dashboard resource name.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The initial dashboard specification.
   *
   * @generated from field: google.monitoring.dashboard.v1.Dashboard dashboard = 2;
   */
  dashboard?: Dashboard;

  /**
   * If set, validate the request and preview the review, but do not actually
   * save it.
   *
   * @generated from field: bool validate_only = 3;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.monitoring.dashboard.v1.CreateDashboardRequest.
 * Use `create(CreateDashboardRequestSchema)` to create a new message.
 */
export const CreateDashboardRequestSchema: GenMessage<CreateDashboardRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_dashboard_v1_dashboards_service, 0);

/**
 * The `ListDashboards` request.
 *
 * @generated from message google.monitoring.dashboard.v1.ListDashboardsRequest
 */
export type ListDashboardsRequest = Message<"google.monitoring.dashboard.v1.ListDashboardsRequest"> & {
  /**
   * Required. The scope of the dashboards to list. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * A positive number that is the maximum number of results to return.
   * If unspecified, a default of 1000 is used.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. If this field is not empty then it must contain the
   * `nextPageToken` value returned by a previous call to this method.  Using
   * this field causes the method to return additional results from the previous
   * method call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.monitoring.dashboard.v1.ListDashboardsRequest.
 * Use `create(ListDashboardsRequestSchema)` to create a new message.
 */
export const ListDashboardsRequestSchema: GenMessage<ListDashboardsRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_dashboard_v1_dashboards_service, 1);

/**
 * The `ListDashboards` request.
 *
 * @generated from message google.monitoring.dashboard.v1.ListDashboardsResponse
 */
export type ListDashboardsResponse = Message<"google.monitoring.dashboard.v1.ListDashboardsResponse"> & {
  /**
   * The list of requested dashboards.
   *
   * @generated from field: repeated google.monitoring.dashboard.v1.Dashboard dashboards = 1;
   */
  dashboards: Dashboard[];

  /**
   * If there are more results than have been returned, then this field is set
   * to a non-empty value.  To see the additional results,
   * use that value as `page_token` in the next call to this method.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.monitoring.dashboard.v1.ListDashboardsResponse.
 * Use `create(ListDashboardsResponseSchema)` to create a new message.
 */
export const ListDashboardsResponseSchema: GenMessage<ListDashboardsResponse> = /*@__PURE__*/
  messageDesc(file_google_monitoring_dashboard_v1_dashboards_service, 2);

/**
 * The `GetDashboard` request.
 *
 * @generated from message google.monitoring.dashboard.v1.GetDashboardRequest
 */
export type GetDashboardRequest = Message<"google.monitoring.dashboard.v1.GetDashboardRequest"> & {
  /**
   * Required. The resource name of the Dashboard. The format is one of:
   *
   *  -  `dashboards/[DASHBOARD_ID]` (for system dashboards)
   *  -  `projects/[PROJECT_ID_OR_NUMBER]/dashboards/[DASHBOARD_ID]`
   *       (for custom dashboards).
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.monitoring.dashboard.v1.GetDashboardRequest.
 * Use `create(GetDashboardRequestSchema)` to create a new message.
 */
export const GetDashboardRequestSchema: GenMessage<GetDashboardRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_dashboard_v1_dashboards_service, 3);

/**
 * The `DeleteDashboard` request.
 *
 * @generated from message google.monitoring.dashboard.v1.DeleteDashboardRequest
 */
export type DeleteDashboardRequest = Message<"google.monitoring.dashboard.v1.DeleteDashboardRequest"> & {
  /**
   * Required. The resource name of the Dashboard. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/dashboards/[DASHBOARD_ID]
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.monitoring.dashboard.v1.DeleteDashboardRequest.
 * Use `create(DeleteDashboardRequestSchema)` to create a new message.
 */
export const DeleteDashboardRequestSchema: GenMessage<DeleteDashboardRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_dashboard_v1_dashboards_service, 4);

/**
 * The `UpdateDashboard` request.
 *
 * @generated from message google.monitoring.dashboard.v1.UpdateDashboardRequest
 */
export type UpdateDashboardRequest = Message<"google.monitoring.dashboard.v1.UpdateDashboardRequest"> & {
  /**
   * Required. The dashboard that will replace the existing dashboard.
   *
   * @generated from field: google.monitoring.dashboard.v1.Dashboard dashboard = 1;
   */
  dashboard?: Dashboard;

  /**
   * If set, validate the request and preview the review, but do not actually
   * save it.
   *
   * @generated from field: bool validate_only = 3;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.monitoring.dashboard.v1.UpdateDashboardRequest.
 * Use `create(UpdateDashboardRequestSchema)` to create a new message.
 */
export const UpdateDashboardRequestSchema: GenMessage<UpdateDashboardRequest> = /*@__PURE__*/
  messageDesc(file_google_monitoring_dashboard_v1_dashboards_service, 5);

/**
 * Manages Stackdriver dashboards. A dashboard is an arrangement of data display
 * widgets in a specific layout.
 *
 * @generated from service google.monitoring.dashboard.v1.DashboardsService
 */
export const DashboardsService: GenService<{
  /**
   * Creates a new custom dashboard. For examples on how you can use this API to
   * create dashboards, see [Managing dashboards by
   * API](https://cloud.google.com/monitoring/dashboards/api-dashboard). This
   * method requires the `monitoring.dashboards.create` permission on the
   * specified project. For more information about permissions, see [Cloud
   * Identity and Access Management](https://cloud.google.com/iam).
   *
   * @generated from rpc google.monitoring.dashboard.v1.DashboardsService.CreateDashboard
   */
  createDashboard: {
    methodKind: "unary";
    input: typeof CreateDashboardRequestSchema;
    output: typeof DashboardSchema;
  },
  /**
   * Lists the existing dashboards.
   *
   * This method requires the `monitoring.dashboards.list` permission
   * on the specified project. For more information, see
   * [Cloud Identity and Access Management](https://cloud.google.com/iam).
   *
   * @generated from rpc google.monitoring.dashboard.v1.DashboardsService.ListDashboards
   */
  listDashboards: {
    methodKind: "unary";
    input: typeof ListDashboardsRequestSchema;
    output: typeof ListDashboardsResponseSchema;
  },
  /**
   * Fetches a specific dashboard.
   *
   * This method requires the `monitoring.dashboards.get` permission
   * on the specified dashboard. For more information, see
   * [Cloud Identity and Access Management](https://cloud.google.com/iam).
   *
   * @generated from rpc google.monitoring.dashboard.v1.DashboardsService.GetDashboard
   */
  getDashboard: {
    methodKind: "unary";
    input: typeof GetDashboardRequestSchema;
    output: typeof DashboardSchema;
  },
  /**
   * Deletes an existing custom dashboard.
   *
   * This method requires the `monitoring.dashboards.delete` permission
   * on the specified dashboard. For more information, see
   * [Cloud Identity and Access Management](https://cloud.google.com/iam).
   *
   * @generated from rpc google.monitoring.dashboard.v1.DashboardsService.DeleteDashboard
   */
  deleteDashboard: {
    methodKind: "unary";
    input: typeof DeleteDashboardRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Replaces an existing custom dashboard with a new definition.
   *
   * This method requires the `monitoring.dashboards.update` permission
   * on the specified dashboard. For more information, see
   * [Cloud Identity and Access Management](https://cloud.google.com/iam).
   *
   * @generated from rpc google.monitoring.dashboard.v1.DashboardsService.UpdateDashboard
   */
  updateDashboard: {
    methodKind: "unary";
    input: typeof UpdateDashboardRequestSchema;
    output: typeof DashboardSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_monitoring_dashboard_v1_dashboards_service, 0);

