// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/monitoring/dashboard/v1/table.proto (package google.monitoring.dashboard.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { TimeSeriesQuery } from "./metrics_pb";
import { file_google_monitoring_dashboard_v1_metrics } from "./metrics_pb";
import type { TableDisplayOptions } from "./table_display_options_pb";
import { file_google_monitoring_dashboard_v1_table_display_options } from "./table_display_options_pb";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/monitoring/dashboard/v1/table.proto.
 */
export const file_google_monitoring_dashboard_v1_table: GenFile = /*@__PURE__*/
  fileDesc("Cipnb29nbGUvbW9uaXRvcmluZy9kYXNoYm9hcmQvdjEvdGFibGUucHJvdG8SHmdvb2dsZS5tb25pdG9yaW5nLmRhc2hib2FyZC52MSLSBQoPVGltZVNlcmllc1RhYmxlElQKCWRhdGFfc2V0cxgBIAMoCzI8Lmdvb2dsZS5tb25pdG9yaW5nLmRhc2hib2FyZC52MS5UaW1lU2VyaWVzVGFibGUuVGFibGVEYXRhU2V0QgPgQQISZgoUbWV0cmljX3Zpc3VhbGl6YXRpb24YAiABKA4yQy5nb29nbGUubW9uaXRvcmluZy5kYXNoYm9hcmQudjEuVGltZVNlcmllc1RhYmxlLk1ldHJpY1Zpc3VhbGl6YXRpb25CA+BBARJcCg9jb2x1bW5fc2V0dGluZ3MYBCADKAsyPi5nb29nbGUubW9uaXRvcmluZy5kYXNoYm9hcmQudjEuVGltZVNlcmllc1RhYmxlLkNvbHVtblNldHRpbmdzQgPgQQEakwIKDFRhYmxlRGF0YVNldBJPChF0aW1lX3Nlcmllc19xdWVyeRgBIAEoCzIvLmdvb2dsZS5tb25pdG9yaW5nLmRhc2hib2FyZC52MS5UaW1lU2VyaWVzUXVlcnlCA+BBAhIbCg50YWJsZV90ZW1wbGF0ZRgCIAEoCUID4EEBEjwKFG1pbl9hbGlnbm1lbnRfcGVyaW9kGAMgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uQgPgQQESVwoVdGFibGVfZGlzcGxheV9vcHRpb25zGAQgASgLMjMuZ29vZ2xlLm1vbml0b3JpbmcuZGFzaGJvYXJkLnYxLlRhYmxlRGlzcGxheU9wdGlvbnNCA+BBARo7Cg5Db2x1bW5TZXR0aW5ncxITCgZjb2x1bW4YASABKAlCA+BBAhIUCgd2aXNpYmxlGAIgASgIQgPgQQIiUAoTTWV0cmljVmlzdWFsaXphdGlvbhIkCiBNRVRSSUNfVklTVUFMSVpBVElPTl9VTlNQRUNJRklFRBAAEgoKBk5VTUJFUhABEgcKA0JBUhACQvMBCiJjb20uZ29vZ2xlLm1vbml0b3JpbmcuZGFzaGJvYXJkLnYxQgpUYWJsZVByb3RvUAFaRmNsb3VkLmdvb2dsZS5jb20vZ28vbW9uaXRvcmluZy9kYXNoYm9hcmQvYXBpdjEvZGFzaGJvYXJkcGI7ZGFzaGJvYXJkcGKqAiRHb29nbGUuQ2xvdWQuTW9uaXRvcmluZy5EYXNoYm9hcmQuVjHKAiRHb29nbGVcQ2xvdWRcTW9uaXRvcmluZ1xEYXNoYm9hcmRcVjHqAihHb29nbGU6OkNsb3VkOjpNb25pdG9yaW5nOjpEYXNoYm9hcmQ6OlYxYgZwcm90bzM", [file_google_api_field_behavior, file_google_monitoring_dashboard_v1_metrics, file_google_monitoring_dashboard_v1_table_display_options, file_google_protobuf_duration]);

/**
 * A table that displays time series data.
 *
 * @generated from message google.monitoring.dashboard.v1.TimeSeriesTable
 */
export type TimeSeriesTable = Message<"google.monitoring.dashboard.v1.TimeSeriesTable"> & {
  /**
   * Required. The data displayed in this table.
   *
   * @generated from field: repeated google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet data_sets = 1;
   */
  dataSets: TimeSeriesTable_TableDataSet[];

  /**
   * Optional. Store rendering strategy
   *
   * @generated from field: google.monitoring.dashboard.v1.TimeSeriesTable.MetricVisualization metric_visualization = 2;
   */
  metricVisualization: TimeSeriesTable_MetricVisualization;

  /**
   * Optional. The list of the persistent column settings for the table.
   *
   * @generated from field: repeated google.monitoring.dashboard.v1.TimeSeriesTable.ColumnSettings column_settings = 4;
   */
  columnSettings: TimeSeriesTable_ColumnSettings[];
};

/**
 * Describes the message google.monitoring.dashboard.v1.TimeSeriesTable.
 * Use `create(TimeSeriesTableSchema)` to create a new message.
 */
export const TimeSeriesTableSchema: GenMessage<TimeSeriesTable> = /*@__PURE__*/
  messageDesc(file_google_monitoring_dashboard_v1_table, 0);

/**
 * Groups a time series query definition with table options.
 *
 * @generated from message google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet
 */
export type TimeSeriesTable_TableDataSet = Message<"google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet"> & {
  /**
   * Required. Fields for querying time series data from the
   * Stackdriver metrics API.
   *
   * @generated from field: google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1;
   */
  timeSeriesQuery?: TimeSeriesQuery;

  /**
   * Optional. A template string for naming `TimeSeries` in the resulting data
   * set. This should be a string with interpolations of the form
   * `${label_name}`, which will resolve to the label's value i.e.
   * "${resource.labels.project_id}."
   *
   * @generated from field: string table_template = 2;
   */
  tableTemplate: string;

  /**
   * Optional. The lower bound on data point frequency for this data set,
   * implemented by specifying the minimum alignment period to use in a time
   * series query For example, if the data is published once every 10 minutes,
   * the `min_alignment_period` should be at least 10 minutes. It would not
   * make sense to fetch and align data at one minute intervals.
   *
   * @generated from field: google.protobuf.Duration min_alignment_period = 3;
   */
  minAlignmentPeriod?: Duration;

  /**
   * Optional. Table display options for configuring how the table is
   * rendered.
   *
   * @generated from field: google.monitoring.dashboard.v1.TableDisplayOptions table_display_options = 4;
   */
  tableDisplayOptions?: TableDisplayOptions;
};

/**
 * Describes the message google.monitoring.dashboard.v1.TimeSeriesTable.TableDataSet.
 * Use `create(TimeSeriesTable_TableDataSetSchema)` to create a new message.
 */
export const TimeSeriesTable_TableDataSetSchema: GenMessage<TimeSeriesTable_TableDataSet> = /*@__PURE__*/
  messageDesc(file_google_monitoring_dashboard_v1_table, 0, 0);

/**
 * The persistent settings for a table's columns.
 *
 * @generated from message google.monitoring.dashboard.v1.TimeSeriesTable.ColumnSettings
 */
export type TimeSeriesTable_ColumnSettings = Message<"google.monitoring.dashboard.v1.TimeSeriesTable.ColumnSettings"> & {
  /**
   * Required. The id of the column.
   *
   * @generated from field: string column = 1;
   */
  column: string;

  /**
   * Required. Whether the column should be visible on page load.
   *
   * @generated from field: bool visible = 2;
   */
  visible: boolean;
};

/**
 * Describes the message google.monitoring.dashboard.v1.TimeSeriesTable.ColumnSettings.
 * Use `create(TimeSeriesTable_ColumnSettingsSchema)` to create a new message.
 */
export const TimeSeriesTable_ColumnSettingsSchema: GenMessage<TimeSeriesTable_ColumnSettings> = /*@__PURE__*/
  messageDesc(file_google_monitoring_dashboard_v1_table, 0, 1);

/**
 * Enum for metric metric_visualization
 *
 * @generated from enum google.monitoring.dashboard.v1.TimeSeriesTable.MetricVisualization
 */
export enum TimeSeriesTable_MetricVisualization {
  /**
   * Unspecified state
   *
   * @generated from enum value: METRIC_VISUALIZATION_UNSPECIFIED = 0;
   */
  METRIC_VISUALIZATION_UNSPECIFIED = 0,

  /**
   * Default text rendering
   *
   * @generated from enum value: NUMBER = 1;
   */
  NUMBER = 1,

  /**
   * Horizontal bar rendering
   *
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,
}

/**
 * Describes the enum google.monitoring.dashboard.v1.TimeSeriesTable.MetricVisualization.
 */
export const TimeSeriesTable_MetricVisualizationSchema: GenEnum<TimeSeriesTable_MetricVisualization> = /*@__PURE__*/
  enumDesc(file_google_monitoring_dashboard_v1_table, 0, 0);

