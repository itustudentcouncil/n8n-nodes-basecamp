// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/actions/sdk/v2/interactionmodel/slot.proto (package google.actions.sdk.v2.interactionmodel, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { EventHandler } from "./event_handler_pb";
import { file_google_actions_sdk_v2_interactionmodel_event_handler } from "./event_handler_pb";
import type { ClassReference } from "./type/class_reference_pb";
import { file_google_actions_sdk_v2_interactionmodel_type_class_reference } from "./type/class_reference_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import type { Value } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/actions/sdk/v2/interactionmodel/slot.proto.
 */
export const file_google_actions_sdk_v2_interactionmodel_slot: GenFile = /*@__PURE__*/
  fileDesc("CjFnb29nbGUvYWN0aW9ucy9zZGsvdjIvaW50ZXJhY3Rpb25tb2RlbC9zbG90LnByb3RvEiZnb29nbGUuYWN0aW9ucy5zZGsudjIuaW50ZXJhY3Rpb25tb2RlbCKPCQoEU2xvdBIRCgRuYW1lGAEgASgJQgPgQQISTgoEdHlwZRgCIAEoCzI7Lmdvb2dsZS5hY3Rpb25zLnNkay52Mi5pbnRlcmFjdGlvbm1vZGVsLnR5cGUuQ2xhc3NSZWZlcmVuY2VCA+BBAhIVCghyZXF1aXJlZBgDIAEoCEID4EEBElkKD3Byb21wdF9zZXR0aW5ncxgEIAEoCzI7Lmdvb2dsZS5hY3Rpb25zLnNkay52Mi5pbnRlcmFjdGlvbm1vZGVsLlNsb3QuUHJvbXB0U2V0dGluZ3NCA+BBARJZCg9jb21taXRfYmVoYXZpb3IYBSABKAsyOy5nb29nbGUuYWN0aW9ucy5zZGsudjIuaW50ZXJhY3Rpb25tb2RlbC5TbG90LkNvbW1pdEJlaGF2aW9yQgPgQQESKwoGY29uZmlnGAYgASgLMhYuZ29vZ2xlLnByb3RvYnVmLlZhbHVlQgPgQQESVQoNZGVmYXVsdF92YWx1ZRgHIAEoCzI5Lmdvb2dsZS5hY3Rpb25zLnNkay52Mi5pbnRlcmFjdGlvbm1vZGVsLlNsb3QuRGVmYXVsdFZhbHVlQgPgQQEayAQKDlByb21wdFNldHRpbmdzEkwKDmluaXRpYWxfcHJvbXB0GAEgASgLMjQuZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLmludGVyYWN0aW9ubW9kZWwuRXZlbnRIYW5kbGVyEk4KEG5vX21hdGNoX3Byb21wdDEYAiABKAsyNC5nb29nbGUuYWN0aW9ucy5zZGsudjIuaW50ZXJhY3Rpb25tb2RlbC5FdmVudEhhbmRsZXISTgoQbm9fbWF0Y2hfcHJvbXB0MhgDIAEoCzI0Lmdvb2dsZS5hY3Rpb25zLnNkay52Mi5pbnRlcmFjdGlvbm1vZGVsLkV2ZW50SGFuZGxlchJTChVub19tYXRjaF9maW5hbF9wcm9tcHQYBCABKAsyNC5nb29nbGUuYWN0aW9ucy5zZGsudjIuaW50ZXJhY3Rpb25tb2RlbC5FdmVudEhhbmRsZXISTgoQbm9faW5wdXRfcHJvbXB0MRgFIAEoCzI0Lmdvb2dsZS5hY3Rpb25zLnNkay52Mi5pbnRlcmFjdGlvbm1vZGVsLkV2ZW50SGFuZGxlchJOChBub19pbnB1dF9wcm9tcHQyGAYgASgLMjQuZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLmludGVyYWN0aW9ubW9kZWwuRXZlbnRIYW5kbGVyElMKFW5vX2lucHV0X2ZpbmFsX3Byb21wdBgHIAEoCzI0Lmdvb2dsZS5hY3Rpb25zLnNkay52Mi5pbnRlcmFjdGlvbm1vZGVsLkV2ZW50SGFuZGxlchotCg5Db21taXRCZWhhdmlvchIbChN3cml0ZV9zZXNzaW9uX3BhcmFtGAEgASgJGlkKDERlZmF1bHRWYWx1ZRIaCg1zZXNzaW9uX3BhcmFtGAEgASgJQgPgQQESLQoIY29uc3RhbnQYAiABKAsyFi5nb29nbGUucHJvdG9idWYuVmFsdWVCA+BBAUKRAQoqY29tLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5pbnRlcmFjdGlvbm1vZGVsQglTbG90UHJvdG9QAVpWZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9hY3Rpb25zL3Nkay92Mi9pbnRlcmFjdGlvbm1vZGVsO2ludGVyYWN0aW9ubW9kZWxiBnByb3RvMw", [file_google_actions_sdk_v2_interactionmodel_event_handler, file_google_actions_sdk_v2_interactionmodel_type_class_reference, file_google_api_field_behavior, file_google_protobuf_struct]);

/**
 * Configuration for a slot. Slots are single units of data that can be filled
 * through natural language (ie. intent parameters), session parameters, and
 * other sources.
 *
 * @generated from message google.actions.sdk.v2.interactionmodel.Slot
 */
export type Slot = Message<"google.actions.sdk.v2.interactionmodel.Slot"> & {
  /**
   * Required. Name of the slot.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. Declares the data type of this slot.
   *
   * @generated from field: google.actions.sdk.v2.interactionmodel.type.ClassReference type = 2;
   */
  type?: ClassReference;

  /**
   * Optional. Indicates whether the slot is required to be filled before
   * advancing. Required slots that are not filled will trigger a customizable
   * prompt to the user.
   *
   * @generated from field: bool required = 3;
   */
  required: boolean;

  /**
   * Optional. Registers Prompts for different stages of slot filling.
   *
   * @generated from field: google.actions.sdk.v2.interactionmodel.Slot.PromptSettings prompt_settings = 4;
   */
  promptSettings?: Slot_PromptSettings;

  /**
   * Optional. Commit behavior associated with the slot.
   *
   * @generated from field: google.actions.sdk.v2.interactionmodel.Slot.CommitBehavior commit_behavior = 5;
   */
  commitBehavior?: Slot_CommitBehavior;

  /**
   * Optional. Additional configuration associated with the slot which is
   * used for filling the slot. The format of the config is specific to the
   * type of the slot. Resource references to user or session parameter can be
   * added to this config. This config is needed for filling slots related to
   * transactions and user engagement.
   *
   * Example:
   *  For a slot of type actions.type.CompletePurchaseValue, the following
   *  config proposes a digital good order with a reference to a client defined
   *  session parameter `userSelectedSkuId`:
   *
   *    {
   *      "@type": "type.googleapis.com/
   *                  google.actions.transactions.v3.CompletePurchaseValueSpec",
   *      "skuId": {
   *        "skuType": "SKU_TYPE_IN_APP",
   *        "id": "$session.params.userSelectedSkuId",
   *        "packageName": "com.example.company"
   *      }
   *    }
   *
   * @generated from field: google.protobuf.Value config = 6;
   */
  config?: Value;

  /**
   * Optional. Configuration to populate a default value for this slot.
   *
   * @generated from field: google.actions.sdk.v2.interactionmodel.Slot.DefaultValue default_value = 7;
   */
  defaultValue?: Slot_DefaultValue;
};

/**
 * Describes the message google.actions.sdk.v2.interactionmodel.Slot.
 * Use `create(SlotSchema)` to create a new message.
 */
export const SlotSchema: GenMessage<Slot> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_interactionmodel_slot, 0);

/**
 * A single place where slot prompts are defined.
 *
 * @generated from message google.actions.sdk.v2.interactionmodel.Slot.PromptSettings
 */
export type Slot_PromptSettings = Message<"google.actions.sdk.v2.interactionmodel.Slot.PromptSettings"> & {
  /**
   * Prompt for the slot value itself. Example: "What size did you want?"
   *
   * @generated from field: google.actions.sdk.v2.interactionmodel.EventHandler initial_prompt = 1;
   */
  initialPrompt?: EventHandler;

  /**
   * Prompt to give when the user's input does not match the expected
   * value type for the slot for the first time. Example: "Sorry, I
   * didn't get that."
   *
   * @generated from field: google.actions.sdk.v2.interactionmodel.EventHandler no_match_prompt1 = 2;
   */
  noMatchPrompt1?: EventHandler;

  /**
   * Prompt to give when the user's input does not match the expected
   * value type for the slot for the second time. Example: "Sorry, I
   * didn't get that."
   *
   * @generated from field: google.actions.sdk.v2.interactionmodel.EventHandler no_match_prompt2 = 3;
   */
  noMatchPrompt2?: EventHandler;

  /**
   * Prompt to give when the user's input does not match the expected
   * value type for the slot for the last time. Example: "Sorry, I
   * didn't get that."
   *
   * @generated from field: google.actions.sdk.v2.interactionmodel.EventHandler no_match_final_prompt = 4;
   */
  noMatchFinalPrompt?: EventHandler;

  /**
   * Prompt to give when the user does not provide an input for the first
   * time. Example: "Sorry, I didn't get that."
   *
   * @generated from field: google.actions.sdk.v2.interactionmodel.EventHandler no_input_prompt1 = 5;
   */
  noInputPrompt1?: EventHandler;

  /**
   * Prompt to give when the user does not provide an input for the second
   * time. Example: "Sorry, I didn't get that."
   *
   * @generated from field: google.actions.sdk.v2.interactionmodel.EventHandler no_input_prompt2 = 6;
   */
  noInputPrompt2?: EventHandler;

  /**
   * Prompt to give when the user does not provide an input for the last
   * time. Example: "Sorry, I didn't get that."
   *
   * @generated from field: google.actions.sdk.v2.interactionmodel.EventHandler no_input_final_prompt = 7;
   */
  noInputFinalPrompt?: EventHandler;
};

/**
 * Describes the message google.actions.sdk.v2.interactionmodel.Slot.PromptSettings.
 * Use `create(Slot_PromptSettingsSchema)` to create a new message.
 */
export const Slot_PromptSettingsSchema: GenMessage<Slot_PromptSettings> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_interactionmodel_slot, 0, 0);

/**
 * Message describing the commit behavior associated with the slot after it
 * has been successfully filled.
 *
 * @generated from message google.actions.sdk.v2.interactionmodel.Slot.CommitBehavior
 */
export type Slot_CommitBehavior = Message<"google.actions.sdk.v2.interactionmodel.Slot.CommitBehavior"> & {
  /**
   * The session parameter to write the slot value after it is filled. Note
   * that nested paths are not currently supported. "$$" is used to write the
   * slot value to a session parameter with same name as the slot.
   * Eg: write_session_param = "fruit" corresponds to "$session.params.fruit".
   * write_session_param = "ticket" corresponds to "$session.params.ticket".
   *
   * @generated from field: string write_session_param = 1;
   */
  writeSessionParam: string;
};

/**
 * Describes the message google.actions.sdk.v2.interactionmodel.Slot.CommitBehavior.
 * Use `create(Slot_CommitBehaviorSchema)` to create a new message.
 */
export const Slot_CommitBehaviorSchema: GenMessage<Slot_CommitBehavior> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_interactionmodel_slot, 0, 1);

/**
 * Configuration to populate a default value for this slot.
 *
 * @generated from message google.actions.sdk.v2.interactionmodel.Slot.DefaultValue
 */
export type Slot_DefaultValue = Message<"google.actions.sdk.v2.interactionmodel.Slot.DefaultValue"> & {
  /**
   * Optional. The session parameter to be used to initialize the slot value, if it has
   * a non-empty value. The type of the value must match the type of the slot.
   * Note that nested paths are not currently supported.
   * Eg: `session_param = "fruit"` corresponds to `$session.params.fruit`.
   * `session_param = "ticket"` corresponds to `$session.params.ticket`.
   *
   * @generated from field: string session_param = 1;
   */
  sessionParam: string;

  /**
   * Optional. Constant default value for the slot. This will only be used if a value
   * for this slot was not populated through the `session_param`. The
   * type for this value must match the type of the slot.
   *
   * @generated from field: google.protobuf.Value constant = 2;
   */
  constant?: Value;
};

/**
 * Describes the message google.actions.sdk.v2.interactionmodel.Slot.DefaultValue.
 * Use `create(Slot_DefaultValueSchema)` to create a new message.
 */
export const Slot_DefaultValueSchema: GenMessage<Slot_DefaultValue> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_interactionmodel_slot, 0, 2);

