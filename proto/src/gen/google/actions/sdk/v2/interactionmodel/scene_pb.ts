// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/actions/sdk/v2/interactionmodel/scene.proto (package google.actions.sdk.v2.interactionmodel, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { ConditionalEvent } from "./conditional_event_pb";
import { file_google_actions_sdk_v2_interactionmodel_conditional_event } from "./conditional_event_pb";
import type { EventHandler } from "./event_handler_pb";
import { file_google_actions_sdk_v2_interactionmodel_event_handler } from "./event_handler_pb";
import type { IntentEvent } from "./intent_event_pb";
import { file_google_actions_sdk_v2_interactionmodel_intent_event } from "./intent_event_pb";
import type { Slot } from "./slot_pb";
import { file_google_actions_sdk_v2_interactionmodel_slot } from "./slot_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/actions/sdk/v2/interactionmodel/scene.proto.
 */
export const file_google_actions_sdk_v2_interactionmodel_scene: GenFile = /*@__PURE__*/
  fileDesc("CjJnb29nbGUvYWN0aW9ucy9zZGsvdjIvaW50ZXJhY3Rpb25tb2RlbC9zY2VuZS5wcm90bxImZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLmludGVyYWN0aW9ubW9kZWwi/QIKBVNjZW5lEkYKCG9uX2VudGVyGAEgASgLMjQuZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLmludGVyYWN0aW9ubW9kZWwuRXZlbnRIYW5kbGVyEkoKDWludGVudF9ldmVudHMYAiADKAsyMy5nb29nbGUuYWN0aW9ucy5zZGsudjIuaW50ZXJhY3Rpb25tb2RlbC5JbnRlbnRFdmVudBJUChJjb25kaXRpb25hbF9ldmVudHMYAyADKAsyOC5nb29nbGUuYWN0aW9ucy5zZGsudjIuaW50ZXJhY3Rpb25tb2RlbC5Db25kaXRpb25hbEV2ZW50EjsKBXNsb3RzGAQgAygLMiwuZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLmludGVyYWN0aW9ubW9kZWwuU2xvdBJNCg9vbl9zbG90X3VwZGF0ZWQYBSABKAsyNC5nb29nbGUuYWN0aW9ucy5zZGsudjIuaW50ZXJhY3Rpb25tb2RlbC5FdmVudEhhbmRsZXJCkgEKKmNvbS5nb29nbGUuYWN0aW9ucy5zZGsudjIuaW50ZXJhY3Rpb25tb2RlbEIKU2NlbmVQcm90b1ABWlZnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2FjdGlvbnMvc2RrL3YyL2ludGVyYWN0aW9ubW9kZWw7aW50ZXJhY3Rpb25tb2RlbGIGcHJvdG8z", [file_google_actions_sdk_v2_interactionmodel_conditional_event, file_google_actions_sdk_v2_interactionmodel_event_handler, file_google_actions_sdk_v2_interactionmodel_intent_event, file_google_actions_sdk_v2_interactionmodel_slot]);

/**
 * Scene is the basic unit of control flow when designing a conversation. They
 * can be chained together with other scenes, generate prompts for the end user,
 * and define slots.
 * The scene name is specified in the name of the file.
 *
 * @generated from message google.actions.sdk.v2.interactionmodel.Scene
 */
export type Scene = Message<"google.actions.sdk.v2.interactionmodel.Scene"> & {
  /**
   * Handler to invoke when transitioning into this scene.
   *
   * @generated from field: google.actions.sdk.v2.interactionmodel.EventHandler on_enter = 1;
   */
  onEnter?: EventHandler;

  /**
   * The list of events that trigger based on intents. These events can
   * be triggered at any time after the on_load Handler has been called.
   * Important - these events define the set of intents which are scoped to
   * this scene and will take precedence over any globally defined events that
   * have the same intents or their triggering phrases. Intent names must be
   * unique within a scene.
   *
   * @generated from field: repeated google.actions.sdk.v2.interactionmodel.IntentEvent intent_events = 2;
   */
  intentEvents: IntentEvent[];

  /**
   * The list of events to trigger based on conditional statements. These are
   * evaluated after the form has been filled or immediately after on_load if
   * this scene does not have a form (evaluation is only done once). Only the
   * first matching event will be triggered.
   *
   * @generated from field: repeated google.actions.sdk.v2.interactionmodel.ConditionalEvent conditional_events = 3;
   */
  conditionalEvents: ConditionalEvent[];

  /**
   * Ordered list of slots. Each slot defines the type of data
   * that it will resolve and configuration to customize the experience of this
   * resolution (e.g. prompts).
   *
   * @generated from field: repeated google.actions.sdk.v2.interactionmodel.Slot slots = 4;
   */
  slots: Slot[];

  /**
   * Handler called when there is a change in state of a slot not
   * caused by updates within another Handler. This allows slots to be
   * invalidated, the scene invalidated or other changes to scene state.
   *
   * @generated from field: google.actions.sdk.v2.interactionmodel.EventHandler on_slot_updated = 5;
   */
  onSlotUpdated?: EventHandler;
};

/**
 * Describes the message google.actions.sdk.v2.interactionmodel.Scene.
 * Use `create(SceneSchema)` to create a new message.
 */
export const SceneSchema: GenMessage<Scene> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_interactionmodel_scene, 0);

