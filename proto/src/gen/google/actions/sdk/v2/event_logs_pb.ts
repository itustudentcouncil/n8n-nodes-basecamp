// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/actions/sdk/v2/event_logs.proto (package google.actions.sdk.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { IntentParameterValue } from "./conversation/intent_pb";
import { file_google_actions_sdk_v2_conversation_intent } from "./conversation/intent_pb";
import type { Prompt } from "./conversation/prompt/prompt_pb";
import { file_google_actions_sdk_v2_conversation_prompt_prompt } from "./conversation/prompt/prompt_pb";
import type { Slot, SlotFillingStatus } from "./conversation/scene_pb";
import { file_google_actions_sdk_v2_conversation_scene } from "./conversation/scene_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Status } from "../../../rpc/status_pb";
import { file_google_rpc_status } from "../../../rpc/status_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/actions/sdk/v2/event_logs.proto.
 */
export const file_google_actions_sdk_v2_event_logs: GenFile = /*@__PURE__*/
  fileDesc("CiZnb29nbGUvYWN0aW9ucy9zZGsvdjIvZXZlbnRfbG9ncy5wcm90bxIVZ29vZ2xlLmFjdGlvbnMuc2RrLnYyIrcICg5FeGVjdXRpb25FdmVudBIuCgpldmVudF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI+Cg9leGVjdXRpb25fc3RhdGUYAiABKAsyJS5nb29nbGUuYWN0aW9ucy5zZGsudjIuRXhlY3V0aW9uU3RhdGUSIgoGc3RhdHVzGAMgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXMSQgoKdXNlcl9pbnB1dBgEIAEoCzIsLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5Vc2VyQ29udmVyc2F0aW9uSW5wdXRIABI6CgxpbnRlbnRfbWF0Y2gYBSABKAsyIi5nb29nbGUuYWN0aW9ucy5zZGsudjIuSW50ZW50TWF0Y2hIABJKChRjb25kaXRpb25zX2V2YWx1YXRlZBgGIAEoCzIqLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5Db25kaXRpb25zRXZhbHVhdGVkSAASPQoOb25fc2NlbmVfZW50ZXIYByABKAsyIy5nb29nbGUuYWN0aW9ucy5zZGsudjIuT25TY2VuZUVudGVySAASQAoPd2ViaG9va19yZXF1ZXN0GAggASgLMiUuZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLldlYmhvb2tSZXF1ZXN0SAASQgoQd2ViaG9va19yZXNwb25zZRgJIAEoCzImLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5XZWJob29rUmVzcG9uc2VIABJZChx3ZWJob29rX2luaXRpYXRlZF90cmFuc2l0aW9uGAogASgLMjEuZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLldlYmhvb2tJbml0aWF0ZWRUcmFuc2l0aW9uSAASNgoKc2xvdF9tYXRjaBgLIAEoCzIgLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5TbG90TWF0Y2hIABI+Cg5zbG90X3JlcXVlc3RlZBgMIAEoCzIkLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5TbG90UmVxdWVzdGVkSAASPgoOc2xvdF92YWxpZGF0ZWQYDSABKAsyJC5nb29nbGUuYWN0aW9ucy5zZGsudjIuU2xvdFZhbGlkYXRlZEgAEjgKC2Zvcm1fZmlsbGVkGA4gASgLMiEuZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLkZvcm1GaWxsZWRIABJIChJ3YWl0aW5nX3VzZXJfaW5wdXQYDyABKAsyKi5nb29nbGUuYWN0aW9ucy5zZGsudjIuV2FpdGluZ0ZvclVzZXJJbnB1dEgAEkIKEGVuZF9jb252ZXJzYXRpb24YECABKAsyJi5nb29nbGUuYWN0aW9ucy5zZGsudjIuRW5kQ29udmVyc2F0aW9uSAASGAoQd2FybmluZ19tZXNzYWdlcxgRIAMoCUILCglFdmVudERhdGEirgIKDkV4ZWN1dGlvblN0YXRlEhgKEGN1cnJlbnRfc2NlbmVfaWQYASABKAkSMAoPc2Vzc2lvbl9zdG9yYWdlGAIgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdBIrCgVzbG90cxgFIAEoCzIcLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5TbG90cxJACgxwcm9tcHRfcXVldWUYByADKAsyKi5nb29nbGUuYWN0aW9ucy5zZGsudjIuY29udmVyc2F0aW9uLlByb21wdBItCgx1c2VyX3N0b3JhZ2UYBiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0EjIKEWhvdXNlaG9sZF9zdG9yYWdlGAggASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdCLeAQoFU2xvdHMSRQoGc3RhdHVzGAIgASgOMjUuZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLmNvbnZlcnNhdGlvbi5TbG90RmlsbGluZ1N0YXR1cxI2CgVzbG90cxgDIAMoCzInLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5TbG90cy5TbG90c0VudHJ5GlYKClNsb3RzRW50cnkSCwoDa2V5GAEgASgJEjcKBXZhbHVlGAIgASgLMiguZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLmNvbnZlcnNhdGlvbi5TbG90OgI4ASI9ChVVc2VyQ29udmVyc2F0aW9uSW5wdXQSDAoEdHlwZRgBIAEoCRIWCg5vcmlnaW5hbF9xdWVyeRgCIAEoCSKQAgoLSW50ZW50TWF0Y2gSEQoJaW50ZW50X2lkGAEgASgJElMKEWludGVudF9wYXJhbWV0ZXJzGAUgAygLMjguZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLkludGVudE1hdGNoLkludGVudFBhcmFtZXRlcnNFbnRyeRIPCgdoYW5kbGVyGAMgASgJEhUKDW5leHRfc2NlbmVfaWQYBCABKAkacQoVSW50ZW50UGFyYW1ldGVyc0VudHJ5EgsKA2tleRgBIAEoCRJHCgV2YWx1ZRgCIAEoCzI4Lmdvb2dsZS5hY3Rpb25zLnNkay52Mi5jb252ZXJzYXRpb24uSW50ZW50UGFyYW1ldGVyVmFsdWU6AjgBIo8BChNDb25kaXRpb25zRXZhbHVhdGVkEjsKEWZhaWxlZF9jb25kaXRpb25zGAEgAygLMiAuZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLkNvbmRpdGlvbhI7ChFzdWNjZXNzX2NvbmRpdGlvbhgCIAEoCzIgLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5Db25kaXRpb24iRwoJQ29uZGl0aW9uEhIKCmV4cHJlc3Npb24YASABKAkSDwoHaGFuZGxlchgCIAEoCRIVCg1uZXh0X3NjZW5lX2lkGAMgASgJIh8KDE9uU2NlbmVFbnRlchIPCgdoYW5kbGVyGAEgASgJIjMKGldlYmhvb2tJbml0aWF0ZWRUcmFuc2l0aW9uEhUKDW5leHRfc2NlbmVfaWQYASABKAkiJgoOV2ViaG9va1JlcXVlc3QSFAoMcmVxdWVzdF9qc29uGAEgASgJIigKD1dlYmhvb2tSZXNwb25zZRIVCg1yZXNwb25zZV9qc29uGAEgASgJIsgBCglTbG90TWF0Y2gSSwoObmx1X3BhcmFtZXRlcnMYAiADKAsyMy5nb29nbGUuYWN0aW9ucy5zZGsudjIuU2xvdE1hdGNoLk5sdVBhcmFtZXRlcnNFbnRyeRpuChJObHVQYXJhbWV0ZXJzRW50cnkSCwoDa2V5GAEgASgJEkcKBXZhbHVlGAIgASgLMjguZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLmNvbnZlcnNhdGlvbi5JbnRlbnRQYXJhbWV0ZXJWYWx1ZToCOAEiWQoNU2xvdFJlcXVlc3RlZBIMCgRzbG90GAEgASgJEjoKBnByb21wdBgDIAEoCzIqLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5jb252ZXJzYXRpb24uUHJvbXB0Ig8KDVNsb3RWYWxpZGF0ZWQiDAoKRm9ybUZpbGxlZCIVChNXYWl0aW5nRm9yVXNlcklucHV0IhEKD0VuZENvbnZlcnNhdGlvbkJnChljb20uZ29vZ2xlLmFjdGlvbnMuc2RrLnYyQg5FdmVudExvZ3NQcm90b1ABWjhnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2FjdGlvbnMvc2RrL3YyO3Nka2IGcHJvdG8z", [file_google_actions_sdk_v2_conversation_intent, file_google_actions_sdk_v2_conversation_prompt_prompt, file_google_actions_sdk_v2_conversation_scene, file_google_protobuf_struct, file_google_protobuf_timestamp, file_google_rpc_status]);

/**
 * Contains information about execution event which happened during processing
 * Actions Builder conversation request. For an overview of the stages involved
 * in a conversation request, see
 * https://developers.google.com/assistant/conversational/actions.
 *
 * @generated from message google.actions.sdk.v2.ExecutionEvent
 */
export type ExecutionEvent = Message<"google.actions.sdk.v2.ExecutionEvent"> & {
  /**
   * Timestamp when the event happened.
   *
   * @generated from field: google.protobuf.Timestamp event_time = 1;
   */
  eventTime?: Timestamp;

  /**
   * State of the execution during this event.
   *
   * @generated from field: google.actions.sdk.v2.ExecutionState execution_state = 2;
   */
  executionState?: ExecutionState;

  /**
   * Resulting status of particular execution step.
   *
   * @generated from field: google.rpc.Status status = 3;
   */
  status?: Status;

  /**
   * Detailed information specific to different of events that may be involved
   * in processing a conversation round. The field set here defines the type of
   * this event.
   *
   * @generated from oneof google.actions.sdk.v2.ExecutionEvent.EventData
   */
  EventData: {
    /**
     * User input handling event.
     *
     * @generated from field: google.actions.sdk.v2.UserConversationInput user_input = 4;
     */
    value: UserConversationInput;
    case: "userInput";
  } | {
    /**
     * Intent matching event.
     *
     * @generated from field: google.actions.sdk.v2.IntentMatch intent_match = 5;
     */
    value: IntentMatch;
    case: "intentMatch";
  } | {
    /**
     * Condition evaluation event.
     *
     * @generated from field: google.actions.sdk.v2.ConditionsEvaluated conditions_evaluated = 6;
     */
    value: ConditionsEvaluated;
    case: "conditionsEvaluated";
  } | {
    /**
     * OnSceneEnter execution event.
     *
     * @generated from field: google.actions.sdk.v2.OnSceneEnter on_scene_enter = 7;
     */
    value: OnSceneEnter;
    case: "onSceneEnter";
  } | {
    /**
     * Webhook request dispatch event.
     *
     * @generated from field: google.actions.sdk.v2.WebhookRequest webhook_request = 8;
     */
    value: WebhookRequest;
    case: "webhookRequest";
  } | {
    /**
     * Webhook response receipt event.
     *
     * @generated from field: google.actions.sdk.v2.WebhookResponse webhook_response = 9;
     */
    value: WebhookResponse;
    case: "webhookResponse";
  } | {
    /**
     * Webhook-initiated transition event.
     *
     * @generated from field: google.actions.sdk.v2.WebhookInitiatedTransition webhook_initiated_transition = 10;
     */
    value: WebhookInitiatedTransition;
    case: "webhookInitiatedTransition";
  } | {
    /**
     * Slot matching event.
     *
     * @generated from field: google.actions.sdk.v2.SlotMatch slot_match = 11;
     */
    value: SlotMatch;
    case: "slotMatch";
  } | {
    /**
     * Slot requesting event.
     *
     * @generated from field: google.actions.sdk.v2.SlotRequested slot_requested = 12;
     */
    value: SlotRequested;
    case: "slotRequested";
  } | {
    /**
     * Slot validation event.
     *
     * @generated from field: google.actions.sdk.v2.SlotValidated slot_validated = 13;
     */
    value: SlotValidated;
    case: "slotValidated";
  } | {
    /**
     * Form filling event.
     *
     * @generated from field: google.actions.sdk.v2.FormFilled form_filled = 14;
     */
    value: FormFilled;
    case: "formFilled";
  } | {
    /**
     * Waiting-for-user-input event.
     *
     * @generated from field: google.actions.sdk.v2.WaitingForUserInput waiting_user_input = 15;
     */
    value: WaitingForUserInput;
    case: "waitingUserInput";
  } | {
    /**
     * End-of-conversation event.
     *
     * @generated from field: google.actions.sdk.v2.EndConversation end_conversation = 16;
     */
    value: EndConversation;
    case: "endConversation";
  } | { case: undefined; value?: undefined };

  /**
   * List of warnings generated during execution of this Event. Warnings are
   * tips for the developer discovered during the conversation request. These
   * are usually non-critical and do not halt the execution of the request. For
   * example, a warnings might be generated when webhook tries to override a
   * custom Type which does not exist. Errors are reported as a failed status
   * code, but warnings can be present even when the status is OK.
   *
   * @generated from field: repeated string warning_messages = 17;
   */
  warningMessages: string[];
};

/**
 * Describes the message google.actions.sdk.v2.ExecutionEvent.
 * Use `create(ExecutionEventSchema)` to create a new message.
 */
export const ExecutionEventSchema: GenMessage<ExecutionEvent> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 0);

/**
 * Current state of the execution.
 *
 * @generated from message google.actions.sdk.v2.ExecutionState
 */
export type ExecutionState = Message<"google.actions.sdk.v2.ExecutionState"> & {
  /**
   * ID of the scene which is currently  active.
   *
   * @generated from field: string current_scene_id = 1;
   */
  currentSceneId: string;

  /**
   * State of the session storage:
   * https://developers.google.com/assistant/conversational/storage-session
   *
   * @generated from field: google.protobuf.Struct session_storage = 2;
   */
  sessionStorage?: JsonObject;

  /**
   * State of the slots filling, if applicable:
   * https://developers.google.com/assistant/conversational/scenes#slot_filling
   *
   * @generated from field: google.actions.sdk.v2.Slots slots = 5;
   */
  slots?: Slots;

  /**
   * Prompt queue:
   * https://developers.google.com/assistant/conversational/prompts
   *
   * @generated from field: repeated google.actions.sdk.v2.conversation.Prompt prompt_queue = 7;
   */
  promptQueue: Prompt[];

  /**
   * State of the user storage:
   * https://developers.google.com/assistant/conversational/storage-user
   *
   * @generated from field: google.protobuf.Struct user_storage = 6;
   */
  userStorage?: JsonObject;

  /**
   * State of the home storage:
   * https://developers.google.com/assistant/conversational/storage-home
   *
   * @generated from field: google.protobuf.Struct household_storage = 8;
   */
  householdStorage?: JsonObject;
};

/**
 * Describes the message google.actions.sdk.v2.ExecutionState.
 * Use `create(ExecutionStateSchema)` to create a new message.
 */
export const ExecutionStateSchema: GenMessage<ExecutionState> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 1);

/**
 * Represents the current state of a the scene's slots.
 *
 * @generated from message google.actions.sdk.v2.Slots
 */
export type Slots = Message<"google.actions.sdk.v2.Slots"> & {
  /**
   * The current status of slot filling.
   *
   * @generated from field: google.actions.sdk.v2.conversation.SlotFillingStatus status = 2;
   */
  status: SlotFillingStatus;

  /**
   * The slots associated with the current scene.
   *
   * @generated from field: map<string, google.actions.sdk.v2.conversation.Slot> slots = 3;
   */
  slots: { [key: string]: Slot };
};

/**
 * Describes the message google.actions.sdk.v2.Slots.
 * Use `create(SlotsSchema)` to create a new message.
 */
export const SlotsSchema: GenMessage<Slots> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 2);

/**
 * Information related to user input.
 *
 * @generated from message google.actions.sdk.v2.UserConversationInput
 */
export type UserConversationInput = Message<"google.actions.sdk.v2.UserConversationInput"> & {
  /**
   * Type of user input. E.g. keyboard, voice, touch, etc.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Original text input from the user.
   *
   * @generated from field: string original_query = 2;
   */
  originalQuery: string;
};

/**
 * Describes the message google.actions.sdk.v2.UserConversationInput.
 * Use `create(UserConversationInputSchema)` to create a new message.
 */
export const UserConversationInputSchema: GenMessage<UserConversationInput> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 3);

/**
 * Information about triggered intent match (global or within a scene):
 * https://developers.google.com/assistant/conversational/intents
 *
 * @generated from message google.actions.sdk.v2.IntentMatch
 */
export type IntentMatch = Message<"google.actions.sdk.v2.IntentMatch"> & {
  /**
   * Intent id which triggered this interaction.
   *
   * @generated from field: string intent_id = 1;
   */
  intentId: string;

  /**
   * Parameters of intent which triggered this interaction.
   *
   * @generated from field: map<string, google.actions.sdk.v2.conversation.IntentParameterValue> intent_parameters = 5;
   */
  intentParameters: { [key: string]: IntentParameterValue };

  /**
   * Name of the handler attached to this interaction.
   *
   * @generated from field: string handler = 3;
   */
  handler: string;

  /**
   * Scene to which this interaction leads to.
   *
   * @generated from field: string next_scene_id = 4;
   */
  nextSceneId: string;
};

/**
 * Describes the message google.actions.sdk.v2.IntentMatch.
 * Use `create(IntentMatchSchema)` to create a new message.
 */
export const IntentMatchSchema: GenMessage<IntentMatch> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 4);

/**
 * Results of conditions evaluation:
 * https://developers.google.com/assistant/conversational/scenes#conditions
 *
 * @generated from message google.actions.sdk.v2.ConditionsEvaluated
 */
export type ConditionsEvaluated = Message<"google.actions.sdk.v2.ConditionsEvaluated"> & {
  /**
   * List of conditions which were evaluated to 'false'.
   *
   * @generated from field: repeated google.actions.sdk.v2.Condition failed_conditions = 1;
   */
  failedConditions: Condition[];

  /**
   * The first condition which was evaluated to 'true', if any.
   *
   * @generated from field: google.actions.sdk.v2.Condition success_condition = 2;
   */
  successCondition?: Condition;
};

/**
 * Describes the message google.actions.sdk.v2.ConditionsEvaluated.
 * Use `create(ConditionsEvaluatedSchema)` to create a new message.
 */
export const ConditionsEvaluatedSchema: GenMessage<ConditionsEvaluated> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 5);

/**
 * Evaluated condition.
 *
 * @generated from message google.actions.sdk.v2.Condition
 */
export type Condition = Message<"google.actions.sdk.v2.Condition"> & {
  /**
   * Expression specified in this condition.
   *
   * @generated from field: string expression = 1;
   */
  expression: string;

  /**
   * Handler name specified in evaluated condition.
   *
   * @generated from field: string handler = 2;
   */
  handler: string;

  /**
   * Destination scene specified in evaluated condition.
   *
   * @generated from field: string next_scene_id = 3;
   */
  nextSceneId: string;
};

/**
 * Describes the message google.actions.sdk.v2.Condition.
 * Use `create(ConditionSchema)` to create a new message.
 */
export const ConditionSchema: GenMessage<Condition> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 6);

/**
 * Information about execution of onSceneEnter stage:
 * https://developers.google.com/assistant/conversational/scenes#on_enter
 *
 * @generated from message google.actions.sdk.v2.OnSceneEnter
 */
export type OnSceneEnter = Message<"google.actions.sdk.v2.OnSceneEnter"> & {
  /**
   * Handler name specified in onSceneEnter event.
   *
   * @generated from field: string handler = 1;
   */
  handler: string;
};

/**
 * Describes the message google.actions.sdk.v2.OnSceneEnter.
 * Use `create(OnSceneEnterSchema)` to create a new message.
 */
export const OnSceneEnterSchema: GenMessage<OnSceneEnter> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 7);

/**
 * Event triggered by destination scene returned from webhook:
 * https://developers.google.com/assistant/conversational/webhooks#transition_scenes
 *
 * @generated from message google.actions.sdk.v2.WebhookInitiatedTransition
 */
export type WebhookInitiatedTransition = Message<"google.actions.sdk.v2.WebhookInitiatedTransition"> & {
  /**
   * ID of the scene the transition is leading to.
   *
   * @generated from field: string next_scene_id = 1;
   */
  nextSceneId: string;
};

/**
 * Describes the message google.actions.sdk.v2.WebhookInitiatedTransition.
 * Use `create(WebhookInitiatedTransitionSchema)` to create a new message.
 */
export const WebhookInitiatedTransitionSchema: GenMessage<WebhookInitiatedTransition> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 8);

/**
 * Information about a request dispatched to the Action webhook:
 * https://developers.google.com/assistant/conversational/webhooks#payloads
 *
 * @generated from message google.actions.sdk.v2.WebhookRequest
 */
export type WebhookRequest = Message<"google.actions.sdk.v2.WebhookRequest"> & {
  /**
   * Payload of the webhook request.
   *
   * @generated from field: string request_json = 1;
   */
  requestJson: string;
};

/**
 * Describes the message google.actions.sdk.v2.WebhookRequest.
 * Use `create(WebhookRequestSchema)` to create a new message.
 */
export const WebhookRequestSchema: GenMessage<WebhookRequest> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 9);

/**
 * Information about a response received from the Action webhook:
 * https://developers.google.com/assistant/conversational/webhooks#payloads
 *
 * @generated from message google.actions.sdk.v2.WebhookResponse
 */
export type WebhookResponse = Message<"google.actions.sdk.v2.WebhookResponse"> & {
  /**
   * Payload of the webhook response.
   *
   * @generated from field: string response_json = 1;
   */
  responseJson: string;
};

/**
 * Describes the message google.actions.sdk.v2.WebhookResponse.
 * Use `create(WebhookResponseSchema)` to create a new message.
 */
export const WebhookResponseSchema: GenMessage<WebhookResponse> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 10);

/**
 * Information about matched slot(s):
 * https://developers.google.com/assistant/conversational/scenes#slot_filling
 *
 * @generated from message google.actions.sdk.v2.SlotMatch
 */
export type SlotMatch = Message<"google.actions.sdk.v2.SlotMatch"> & {
  /**
   * Parameters extracted by NLU from user input.
   *
   * @generated from field: map<string, google.actions.sdk.v2.conversation.IntentParameterValue> nlu_parameters = 2;
   */
  nluParameters: { [key: string]: IntentParameterValue };
};

/**
 * Describes the message google.actions.sdk.v2.SlotMatch.
 * Use `create(SlotMatchSchema)` to create a new message.
 */
export const SlotMatchSchema: GenMessage<SlotMatch> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 11);

/**
 * Information about currently requested slot:
 * https://developers.google.com/assistant/conversational/scenes#slot_filling
 *
 * @generated from message google.actions.sdk.v2.SlotRequested
 */
export type SlotRequested = Message<"google.actions.sdk.v2.SlotRequested"> & {
  /**
   * Name of the requested slot.
   *
   * @generated from field: string slot = 1;
   */
  slot: string;

  /**
   * Slot prompt.
   *
   * @generated from field: google.actions.sdk.v2.conversation.Prompt prompt = 3;
   */
  prompt?: Prompt;
};

/**
 * Describes the message google.actions.sdk.v2.SlotRequested.
 * Use `create(SlotRequestedSchema)` to create a new message.
 */
export const SlotRequestedSchema: GenMessage<SlotRequested> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 12);

/**
 * Event which happens after webhook validation was finished for slot(s):
 * https://developers.google.com/assistant/conversational/scenes#slot_filling
 *
 * @generated from message google.actions.sdk.v2.SlotValidated
 */
export type SlotValidated = Message<"google.actions.sdk.v2.SlotValidated"> & {
};

/**
 * Describes the message google.actions.sdk.v2.SlotValidated.
 * Use `create(SlotValidatedSchema)` to create a new message.
 */
export const SlotValidatedSchema: GenMessage<SlotValidated> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 13);

/**
 * Event which happens when form is fully filled:
 * https://developers.google.com/assistant/conversational/scenes#slot_filling
 *
 * @generated from message google.actions.sdk.v2.FormFilled
 */
export type FormFilled = Message<"google.actions.sdk.v2.FormFilled"> & {
};

/**
 * Describes the message google.actions.sdk.v2.FormFilled.
 * Use `create(FormFilledSchema)` to create a new message.
 */
export const FormFilledSchema: GenMessage<FormFilled> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 14);

/**
 * Event which happens when system needs user input:
 * https://developers.google.com/assistant/conversational/scenes#input
 *
 * @generated from message google.actions.sdk.v2.WaitingForUserInput
 */
export type WaitingForUserInput = Message<"google.actions.sdk.v2.WaitingForUserInput"> & {
};

/**
 * Describes the message google.actions.sdk.v2.WaitingForUserInput.
 * Use `create(WaitingForUserInputSchema)` to create a new message.
 */
export const WaitingForUserInputSchema: GenMessage<WaitingForUserInput> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 15);

/**
 * Event which informs that conversation with agent was ended.
 *
 * @generated from message google.actions.sdk.v2.EndConversation
 */
export type EndConversation = Message<"google.actions.sdk.v2.EndConversation"> & {
};

/**
 * Describes the message google.actions.sdk.v2.EndConversation.
 * Use `create(EndConversationSchema)` to create a new message.
 */
export const EndConversationSchema: GenMessage<EndConversation> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_event_logs, 16);

