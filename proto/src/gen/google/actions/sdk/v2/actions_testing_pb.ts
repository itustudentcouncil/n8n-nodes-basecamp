// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/actions/sdk/v2/actions_testing.proto (package google.actions.sdk.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Intent } from "./conversation/intent_pb";
import { file_google_actions_sdk_v2_conversation_intent } from "./conversation/intent_pb";
import type { Canvas } from "./conversation/prompt/content/canvas_pb";
import { file_google_actions_sdk_v2_conversation_prompt_content_canvas } from "./conversation/prompt/content/canvas_pb";
import type { Prompt } from "./conversation/prompt/prompt_pb";
import { file_google_actions_sdk_v2_conversation_prompt_prompt } from "./conversation/prompt/prompt_pb";
import type { ExecutionEvent } from "./event_logs_pb";
import { file_google_actions_sdk_v2_event_logs } from "./event_logs_pb";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { LatLng } from "../../../type/latlng_pb";
import { file_google_type_latlng } from "../../../type/latlng_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/actions/sdk/v2/actions_testing.proto.
 */
export const file_google_actions_sdk_v2_actions_testing: GenFile = /*@__PURE__*/
  fileDesc("Citnb29nbGUvYWN0aW9ucy9zZGsvdjIvYWN0aW9uc190ZXN0aW5nLnByb3RvEhVnb29nbGUuYWN0aW9ucy5zZGsudjIiyQEKFlNlbmRJbnRlcmFjdGlvblJlcXVlc3QSFAoHcHJvamVjdBgBIAEoCUID4EECEjQKBWlucHV0GAIgASgLMiAuZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLlVzZXJJbnB1dEID4EECEkcKEWRldmljZV9wcm9wZXJ0aWVzGAMgASgLMicuZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLkRldmljZVByb3BlcnRpZXNCA+BBAhIaChJjb252ZXJzYXRpb25fdG9rZW4YBCABKAkiqgEKCVVzZXJJbnB1dBINCgVxdWVyeRgBIAEoCRI4CgR0eXBlGAIgASgOMiouZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLlVzZXJJbnB1dC5JbnB1dFR5cGUiVAoJSW5wdXRUeXBlEhoKFklOUFVUX1RZUEVfVU5TUEVDSUZJRUQQABIJCgVUT1VDSBABEgkKBVZPSUNFEAISDAoIS0VZQk9BUkQQAxIHCgNVUkwQBCKPAgoQRGV2aWNlUHJvcGVydGllcxJACgdzdXJmYWNlGAEgASgOMi8uZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLkRldmljZVByb3BlcnRpZXMuU3VyZmFjZRIxCghsb2NhdGlvbhgCIAEoCzIfLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5Mb2NhdGlvbhIOCgZsb2NhbGUYAyABKAkSEQoJdGltZV96b25lGAQgASgJImMKB1N1cmZhY2USFwoTU1VSRkFDRV9VTlNQRUNJRklFRBAAEgsKB1NQRUFLRVIQARIJCgVQSE9ORRACEggKBEFMTE8QAxIRCg1TTUFSVF9ESVNQTEFZEAQSCgoGS0FJX09TEAUibwoITG9jYXRpb24SKAoLY29vcmRpbmF0ZXMYASABKAsyEy5nb29nbGUudHlwZS5MYXRMbmcSGQoRZm9ybWF0dGVkX2FkZHJlc3MYAiABKAkSEAoIemlwX2NvZGUYAyABKAkSDAoEY2l0eRgEIAEoCSKdAQoXU2VuZEludGVyYWN0aW9uUmVzcG9uc2USLQoGb3V0cHV0GAEgASgLMh0uZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLk91dHB1dBI3CgtkaWFnbm9zdGljcxgCIAEoCzIiLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5EaWFnbm9zdGljcxIaChJjb252ZXJzYXRpb25fdG9rZW4YAyABKAkirgEKBk91dHB1dBIMCgR0ZXh0GAEgASgJEg4KBnNwZWVjaBgCIAMoCRI6CgZjYW52YXMYAyABKAsyKi5nb29nbGUuYWN0aW9ucy5zZGsudjIuY29udmVyc2F0aW9uLkNhbnZhcxJKChZhY3Rpb25zX2J1aWxkZXJfcHJvbXB0GAQgASgLMiouZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLmNvbnZlcnNhdGlvbi5Qcm9tcHQiVAoLRGlhZ25vc3RpY3MSRQoWYWN0aW9uc19idWlsZGVyX2V2ZW50cxgBIAMoCzIlLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5FeGVjdXRpb25FdmVudCJUChNNYXRjaEludGVudHNSZXF1ZXN0EhQKB3Byb2plY3QYASABKAlCA+BBAhISCgVxdWVyeRgCIAEoCUID4EECEhMKBmxvY2FsZRgDIAEoCUID4EECIlsKFE1hdGNoSW50ZW50c1Jlc3BvbnNlEkMKD21hdGNoZWRfaW50ZW50cxgBIAMoCzIqLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5jb252ZXJzYXRpb24uSW50ZW50IjUKIlNldFdlYkFuZEFwcEFjdGl2aXR5Q29udHJvbFJlcXVlc3QSDwoHZW5hYmxlZBgBIAEoCDKvBAoOQWN0aW9uc1Rlc3RpbmcSpQEKD1NlbmRJbnRlcmFjdGlvbhItLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5TZW5kSW50ZXJhY3Rpb25SZXF1ZXN0Gi4uZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLlNlbmRJbnRlcmFjdGlvblJlc3BvbnNlIjOC0+STAi06ASoiKC92Mi97cHJvamVjdD1wcm9qZWN0cy8qfTpzZW5kSW50ZXJhY3Rpb24SsAEKDE1hdGNoSW50ZW50cxIqLmdvb2dsZS5hY3Rpb25zLnNkay52Mi5NYXRjaEludGVudHNSZXF1ZXN0GisuZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLk1hdGNoSW50ZW50c1Jlc3BvbnNlIkfaQRRwcm9qZWN0LHF1ZXJ5LGxvY2FsZYLT5JMCKjoBKiIlL3YyL3twcm9qZWN0PXByb2plY3RzLyp9Om1hdGNoSW50ZW50cxKmAQobU2V0V2ViQW5kQXBwQWN0aXZpdHlDb250cm9sEjkuZ29vZ2xlLmFjdGlvbnMuc2RrLnYyLlNldFdlYkFuZEFwcEFjdGl2aXR5Q29udHJvbFJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiNNpBB2VuYWJsZWSC0+STAiQ6ASoiHy92MjpzZXRXZWJBbmRBcHBBY3Rpdml0eUNvbnRyb2waGcpBFmFjdGlvbnMuZ29vZ2xlYXBpcy5jb21CbAoZY29tLmdvb2dsZS5hY3Rpb25zLnNkay52MkITQWN0aW9uc1Rlc3RpbmdQcm90b1ABWjhnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2FjdGlvbnMvc2RrL3YyO3Nka2IGcHJvdG8z", [file_google_actions_sdk_v2_conversation_intent, file_google_actions_sdk_v2_conversation_prompt_content_canvas, file_google_actions_sdk_v2_conversation_prompt_prompt, file_google_actions_sdk_v2_event_logs, file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_protobuf_empty, file_google_type_latlng]);

/**
 * Request for playing a round of the conversation.
 *
 * @generated from message google.actions.sdk.v2.SendInteractionRequest
 */
export type SendInteractionRequest = Message<"google.actions.sdk.v2.SendInteractionRequest"> & {
  /**
   * Required. The project being tested, indicated by the Project ID.
   * Format: projects/{project}
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * Required. Input provided by the user.
   *
   * @generated from field: google.actions.sdk.v2.UserInput input = 2;
   */
  input?: UserInput;

  /**
   * Required. Properties of the device used for interacting with the Action.
   *
   * @generated from field: google.actions.sdk.v2.DeviceProperties device_properties = 3;
   */
  deviceProperties?: DeviceProperties;

  /**
   * Opaque token that must be passed as received from SendInteractionResponse
   * on the previous interaction. This can be left unset in order to start a new
   * conversation, either as the first interaction of a testing session or to
   * abandon a previous conversation and start a new one.
   *
   * @generated from field: string conversation_token = 4;
   */
  conversationToken: string;
};

/**
 * Describes the message google.actions.sdk.v2.SendInteractionRequest.
 * Use `create(SendInteractionRequestSchema)` to create a new message.
 */
export const SendInteractionRequestSchema: GenMessage<SendInteractionRequest> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_actions_testing, 0);

/**
 * User input provided on a conversation round.
 *
 * @generated from message google.actions.sdk.v2.UserInput
 */
export type UserInput = Message<"google.actions.sdk.v2.UserInput"> & {
  /**
   * Content of the input sent by the user.
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * Type of the input.
   *
   * @generated from field: google.actions.sdk.v2.UserInput.InputType type = 2;
   */
  type: UserInput_InputType;
};

/**
 * Describes the message google.actions.sdk.v2.UserInput.
 * Use `create(UserInputSchema)` to create a new message.
 */
export const UserInputSchema: GenMessage<UserInput> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_actions_testing, 1);

/**
 * Indicates the input source, typed query or voice query.
 *
 * @generated from enum google.actions.sdk.v2.UserInput.InputType
 */
export enum UserInput_InputType {
  /**
   * Unspecified input source.
   *
   * @generated from enum value: INPUT_TYPE_UNSPECIFIED = 0;
   */
  INPUT_TYPE_UNSPECIFIED = 0,

  /**
   * Query from a GUI interaction.
   *
   * @generated from enum value: TOUCH = 1;
   */
  TOUCH = 1,

  /**
   * Voice query.
   *
   * @generated from enum value: VOICE = 2;
   */
  VOICE = 2,

  /**
   * Typed query.
   *
   * @generated from enum value: KEYBOARD = 3;
   */
  KEYBOARD = 3,

  /**
   * The action was triggered by a URL link.
   *
   * @generated from enum value: URL = 4;
   */
  URL = 4,
}

/**
 * Describes the enum google.actions.sdk.v2.UserInput.InputType.
 */
export const UserInput_InputTypeSchema: GenEnum<UserInput_InputType> = /*@__PURE__*/
  enumDesc(file_google_actions_sdk_v2_actions_testing, 1, 0);

/**
 * Properties of device relevant to a conversation round.
 *
 * @generated from message google.actions.sdk.v2.DeviceProperties
 */
export type DeviceProperties = Message<"google.actions.sdk.v2.DeviceProperties"> & {
  /**
   * Surface used for interacting with the Action.
   *
   * @generated from field: google.actions.sdk.v2.DeviceProperties.Surface surface = 1;
   */
  surface: DeviceProperties_Surface;

  /**
   * Device location such as latitude, longitude, and formatted address.
   *
   * @generated from field: google.actions.sdk.v2.Location location = 2;
   */
  location?: Location;

  /**
   * Locale as set on the device.
   * The format should follow BCP 47: https://tools.ietf.org/html/bcp47
   * Examples: en, en-US, es-419 (more examples at
   * https://tools.ietf.org/html/bcp47#appendix-A).
   *
   * @generated from field: string locale = 3;
   */
  locale: string;

  /**
   * Time zone as set on the device.
   * The format should follow the IANA Time Zone Database, e.g.
   * "America/New_York": https://www.iana.org/time-zones
   *
   * @generated from field: string time_zone = 4;
   */
  timeZone: string;
};

/**
 * Describes the message google.actions.sdk.v2.DeviceProperties.
 * Use `create(DevicePropertiesSchema)` to create a new message.
 */
export const DevicePropertiesSchema: GenMessage<DeviceProperties> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_actions_testing, 2);

/**
 * Possible surfaces used to interact with the Action.
 * Additional values may be included in the future.
 *
 * @generated from enum google.actions.sdk.v2.DeviceProperties.Surface
 */
export enum DeviceProperties_Surface {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: SURFACE_UNSPECIFIED = 0;
   */
  SURFACE_UNSPECIFIED = 0,

  /**
   * Speaker (e.g. Google Home).
   *
   * @generated from enum value: SPEAKER = 1;
   */
  SPEAKER = 1,

  /**
   * Phone.
   *
   * @generated from enum value: PHONE = 2;
   */
  PHONE = 2,

  /**
   * Allo Chat.
   *
   * @generated from enum value: ALLO = 3;
   */
  ALLO = 3,

  /**
   * Smart Display Device.
   *
   * @generated from enum value: SMART_DISPLAY = 4;
   */
  SMART_DISPLAY = 4,

  /**
   * KaiOS.
   *
   * @generated from enum value: KAI_OS = 5;
   */
  KAI_OS = 5,
}

/**
 * Describes the enum google.actions.sdk.v2.DeviceProperties.Surface.
 */
export const DeviceProperties_SurfaceSchema: GenEnum<DeviceProperties_Surface> = /*@__PURE__*/
  enumDesc(file_google_actions_sdk_v2_actions_testing, 2, 0);

/**
 * Container that represents a location.
 *
 * @generated from message google.actions.sdk.v2.Location
 */
export type Location = Message<"google.actions.sdk.v2.Location"> & {
  /**
   * Geo coordinates.
   * Requires the [DEVICE_PRECISE_LOCATION]
   * [google.actions.v2.Permission.DEVICE_PRECISE_LOCATION] permission.
   *
   * @generated from field: google.type.LatLng coordinates = 1;
   */
  coordinates?: LatLng;

  /**
   * Display address, e.g., "1600 Amphitheatre Pkwy, Mountain View, CA 94043".
   * Requires the [DEVICE_PRECISE_LOCATION]
   * [google.actions.v2.Permission.DEVICE_PRECISE_LOCATION] permission.
   *
   * @generated from field: string formatted_address = 2;
   */
  formattedAddress: string;

  /**
   * Zip code.
   * Requires the [DEVICE_PRECISE_LOCATION]
   * [google.actions.v2.Permission.DEVICE_PRECISE_LOCATION] or
   * [DEVICE_COARSE_LOCATION]
   * [google.actions.v2.Permission.DEVICE_COARSE_LOCATION] permission.
   *
   * @generated from field: string zip_code = 3;
   */
  zipCode: string;

  /**
   * City.
   * Requires the [DEVICE_PRECISE_LOCATION]
   * [google.actions.v2.Permission.DEVICE_PRECISE_LOCATION] or
   * [DEVICE_COARSE_LOCATION]
   * [google.actions.v2.Permission.DEVICE_COARSE_LOCATION] permission.
   *
   * @generated from field: string city = 4;
   */
  city: string;
};

/**
 * Describes the message google.actions.sdk.v2.Location.
 * Use `create(LocationSchema)` to create a new message.
 */
export const LocationSchema: GenMessage<Location> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_actions_testing, 3);

/**
 * Response to a round of the conversation.
 *
 * @generated from message google.actions.sdk.v2.SendInteractionResponse
 */
export type SendInteractionResponse = Message<"google.actions.sdk.v2.SendInteractionResponse"> & {
  /**
   * Output provided to the user.
   *
   * @generated from field: google.actions.sdk.v2.Output output = 1;
   */
  output?: Output;

  /**
   * Diagnostics information that explains how the request was handled.
   *
   * @generated from field: google.actions.sdk.v2.Diagnostics diagnostics = 2;
   */
  diagnostics?: Diagnostics;

  /**
   * Opaque token to be set on SendInteractionRequest on the next RPC call in
   * order to continue the same conversation.
   *
   * @generated from field: string conversation_token = 3;
   */
  conversationToken: string;
};

/**
 * Describes the message google.actions.sdk.v2.SendInteractionResponse.
 * Use `create(SendInteractionResponseSchema)` to create a new message.
 */
export const SendInteractionResponseSchema: GenMessage<SendInteractionResponse> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_actions_testing, 4);

/**
 * User-visible output to the conversation round.
 *
 * @generated from message google.actions.sdk.v2.Output
 */
export type Output = Message<"google.actions.sdk.v2.Output"> & {
  /**
   * Spoken response sent to user as a plain string.
   *
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * Speech content produced by the Action. This may include markup elements
   * such as SSML.
   *
   * @generated from field: repeated string speech = 2;
   */
  speech: string[];

  /**
   * Interactive Canvas content.
   *
   * @generated from field: google.actions.sdk.v2.conversation.Canvas canvas = 3;
   */
  canvas?: Canvas;

  /**
   * State of the prompt at the end of the conversation round.
   * More information about the prompt:
   * https://developers.google.com/assistant/conversational/prompts
   *
   * @generated from field: google.actions.sdk.v2.conversation.Prompt actions_builder_prompt = 4;
   */
  actionsBuilderPrompt?: Prompt;
};

/**
 * Describes the message google.actions.sdk.v2.Output.
 * Use `create(OutputSchema)` to create a new message.
 */
export const OutputSchema: GenMessage<Output> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_actions_testing, 5);

/**
 * Diagnostics information related to the conversation round.
 *
 * @generated from message google.actions.sdk.v2.Diagnostics
 */
export type Diagnostics = Message<"google.actions.sdk.v2.Diagnostics"> & {
  /**
   * List of events with details about processing of the conversation round
   * throughout the stages of the Actions Builder interaction model.
   * Populated for Actions Builder & Actions SDK apps only.
   *
   * @generated from field: repeated google.actions.sdk.v2.ExecutionEvent actions_builder_events = 1;
   */
  actionsBuilderEvents: ExecutionEvent[];
};

/**
 * Describes the message google.actions.sdk.v2.Diagnostics.
 * Use `create(DiagnosticsSchema)` to create a new message.
 */
export const DiagnosticsSchema: GenMessage<Diagnostics> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_actions_testing, 6);

/**
 * Request for finding matching intents.
 *
 * @generated from message google.actions.sdk.v2.MatchIntentsRequest
 */
export type MatchIntentsRequest = Message<"google.actions.sdk.v2.MatchIntentsRequest"> & {
  /**
   * Required. The project being tested, indicated by the Project ID.
   * Format: projects/{project}
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * Required. User query as plain text.
   *
   * @generated from field: string query = 2;
   */
  query: string;

  /**
   * Required. Locale to use to evaluate the query, such as "en".
   * The format should follow BCP 47: https://tools.ietf.org/html/bcp47
   * See the list of supported languages in
   * https://developers.google.com/assistant/console/languages-locales
   *
   * @generated from field: string locale = 3;
   */
  locale: string;
};

/**
 * Describes the message google.actions.sdk.v2.MatchIntentsRequest.
 * Use `create(MatchIntentsRequestSchema)` to create a new message.
 */
export const MatchIntentsRequestSchema: GenMessage<MatchIntentsRequest> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_actions_testing, 7);

/**
 * Response for finding matching intents.
 *
 * @generated from message google.actions.sdk.v2.MatchIntentsResponse
 */
export type MatchIntentsResponse = Message<"google.actions.sdk.v2.MatchIntentsResponse"> & {
  /**
   * Intents matched, ordered from most to least relevant. Only the first
   * 50 matches are returned.
   *
   * @generated from field: repeated google.actions.sdk.v2.conversation.Intent matched_intents = 1;
   */
  matchedIntents: Intent[];
};

/**
 * Describes the message google.actions.sdk.v2.MatchIntentsResponse.
 * Use `create(MatchIntentsResponseSchema)` to create a new message.
 */
export const MatchIntentsResponseSchema: GenMessage<MatchIntentsResponse> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_actions_testing, 8);

/**
 * Request for setting Web & App Activity preferences.
 *
 * @generated from message google.actions.sdk.v2.SetWebAndAppActivityControlRequest
 */
export type SetWebAndAppActivityControlRequest = Message<"google.actions.sdk.v2.SetWebAndAppActivityControlRequest"> & {
  /**
   * Whether the setting should be set to an enabled or disabled state.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.actions.sdk.v2.SetWebAndAppActivityControlRequest.
 * Use `create(SetWebAndAppActivityControlRequestSchema)` to create a new message.
 */
export const SetWebAndAppActivityControlRequestSchema: GenMessage<SetWebAndAppActivityControlRequest> = /*@__PURE__*/
  messageDesc(file_google_actions_sdk_v2_actions_testing, 9);

/**
 * Actions Testing API which allows developers to run automated tests.
 *
 * @generated from service google.actions.sdk.v2.ActionsTesting
 */
export const ActionsTesting: GenService<{
  /**
   * Plays one round of the conversation.
   *
   * @generated from rpc google.actions.sdk.v2.ActionsTesting.SendInteraction
   */
  sendInteraction: {
    methodKind: "unary";
    input: typeof SendInteractionRequestSchema;
    output: typeof SendInteractionResponseSchema;
  },
  /**
   * Finds the intents that match a given query.
   *
   * @generated from rpc google.actions.sdk.v2.ActionsTesting.MatchIntents
   */
  matchIntents: {
    methodKind: "unary";
    input: typeof MatchIntentsRequestSchema;
    output: typeof MatchIntentsResponseSchema;
  },
  /**
   * Sets the Web & App Activity control on a service account.
   *
   * It is necessary to have this setting enabled in order to use call Actions.
   * The setting is originally disabled for service accounts, and it is
   * preserved until set to a different value. This means it only needs to be
   * enabled once per account (and not necessarily once per test), unless it is
   * later disabled.
   *
   * Returns an error if the caller is not a service account. User accounts can
   * change this setting via the Activity Controls page. See
   * https://support.google.com/websearch/answer/54068.
   *
   * @generated from rpc google.actions.sdk.v2.ActionsTesting.SetWebAndAppActivityControl
   */
  setWebAndAppActivityControl: {
    methodKind: "unary";
    input: typeof SetWebAndAppActivityControlRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_actions_sdk_v2_actions_testing, 0);

