// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/storage/v2/storage.proto (package google.storage.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_client } from "../../api/client_pb";
import { file_google_api_field_behavior } from "../../api/field_behavior_pb";
import { file_google_api_resource } from "../../api/resource_pb";
import { file_google_api_routing } from "../../api/routing_pb";
import type { GetIamPolicyRequestSchema, SetIamPolicyRequestSchema, TestIamPermissionsRequestSchema, TestIamPermissionsResponseSchema } from "../../iam/v1/iam_policy_pb";
import { file_google_iam_v1_iam_policy } from "../../iam/v1/iam_policy_pb";
import type { PolicySchema } from "../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../iam/v1/policy_pb";
import type { Duration, EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Date } from "../../type/date_pb";
import { file_google_type_date } from "../../type/date_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/storage/v2/storage.proto.
 */
export const file_google_storage_v2_storage: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_api_routing, file_google_iam_v1_iam_policy, file_google_iam_v1_policy, file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_type_date]);

/**
 * Request message for DeleteBucket.
 *
 * @generated from message google.storage.v2.DeleteBucketRequest
 */
export type DeleteBucketRequest = Message<"google.storage.v2.DeleteBucketRequest"> & {
  /**
   * Required. Name of a bucket to delete.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * If set, only deletes the bucket if its metageneration matches this value.
   *
   * @generated from field: optional int64 if_metageneration_match = 2;
   */
  ifMetagenerationMatch?: bigint;

  /**
   * If set, only deletes the bucket if its metageneration does not match this
   * value.
   *
   * @generated from field: optional int64 if_metageneration_not_match = 3;
   */
  ifMetagenerationNotMatch?: bigint;
};

/**
 * Describes the message google.storage.v2.DeleteBucketRequest.
 * Use `create(DeleteBucketRequestSchema)` to create a new message.
 */
export const DeleteBucketRequestSchema: GenMessage<DeleteBucketRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 0);

/**
 * Request message for GetBucket.
 *
 * @generated from message google.storage.v2.GetBucketRequest
 */
export type GetBucketRequest = Message<"google.storage.v2.GetBucketRequest"> & {
  /**
   * Required. Name of a bucket.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * If set, and if the bucket's current metageneration does not match the
   * specified value, the request will return an error.
   *
   * @generated from field: optional int64 if_metageneration_match = 2;
   */
  ifMetagenerationMatch?: bigint;

  /**
   * If set, and if the bucket's current metageneration matches the specified
   * value, the request will return an error.
   *
   * @generated from field: optional int64 if_metageneration_not_match = 3;
   */
  ifMetagenerationNotMatch?: bigint;

  /**
   * Mask specifying which fields to read.
   * A "*" field may be used to indicate all fields.
   * If no mask is specified, will default to all fields.
   *
   * @generated from field: optional google.protobuf.FieldMask read_mask = 5;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.storage.v2.GetBucketRequest.
 * Use `create(GetBucketRequestSchema)` to create a new message.
 */
export const GetBucketRequestSchema: GenMessage<GetBucketRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 1);

/**
 * Request message for CreateBucket.
 *
 * @generated from message google.storage.v2.CreateBucketRequest
 */
export type CreateBucketRequest = Message<"google.storage.v2.CreateBucketRequest"> & {
  /**
   * Required. The project to which this bucket will belong.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Properties of the new bucket being inserted.
   * The name of the bucket is specified in the `bucket_id` field. Populating
   * `bucket.name` field will result in an error.
   * The project of the bucket must be specified in the `bucket.project` field.
   * This field must be in `projects/{projectIdentifier}` format,
   * {projectIdentifier} can be the project ID or project number. The `parent`
   * field must be either empty or `projects/_`.
   *
   * @generated from field: google.storage.v2.Bucket bucket = 2;
   */
  bucket?: Bucket;

  /**
   * Required. The ID to use for this bucket, which will become the final
   * component of the bucket's resource name. For example, the value `foo` might
   * result in a bucket with the name `projects/123456/buckets/foo`.
   *
   * @generated from field: string bucket_id = 3;
   */
  bucketId: string;

  /**
   * Apply a predefined set of access controls to this bucket.
   * Valid values are "authenticatedRead", "private", "projectPrivate",
   * "publicRead", or "publicReadWrite".
   *
   * @generated from field: string predefined_acl = 6;
   */
  predefinedAcl: string;

  /**
   * Apply a predefined set of default object access controls to this bucket.
   * Valid values are "authenticatedRead", "bucketOwnerFullControl",
   * "bucketOwnerRead", "private", "projectPrivate", or "publicRead".
   *
   * @generated from field: string predefined_default_object_acl = 7;
   */
  predefinedDefaultObjectAcl: string;
};

/**
 * Describes the message google.storage.v2.CreateBucketRequest.
 * Use `create(CreateBucketRequestSchema)` to create a new message.
 */
export const CreateBucketRequestSchema: GenMessage<CreateBucketRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 2);

/**
 * Request message for ListBuckets.
 *
 * @generated from message google.storage.v2.ListBucketsRequest
 */
export type ListBucketsRequest = Message<"google.storage.v2.ListBucketsRequest"> & {
  /**
   * Required. The project whose buckets we are listing.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Maximum number of buckets to return in a single response. The service will
   * use this parameter or 1,000 items, whichever is smaller. If "acl" is
   * present in the read_mask, the service will use this parameter of 200 items,
   * whichever is smaller.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A previously-returned page token representing part of the larger set of
   * results to view.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Filter results to buckets whose names begin with this prefix.
   *
   * @generated from field: string prefix = 4;
   */
  prefix: string;

  /**
   * Mask specifying which fields to read from each result.
   * If no mask is specified, will default to all fields except items.owner,
   * items.acl, and items.default_object_acl.
   * * may be used to mean "all fields".
   *
   * @generated from field: optional google.protobuf.FieldMask read_mask = 5;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.storage.v2.ListBucketsRequest.
 * Use `create(ListBucketsRequestSchema)` to create a new message.
 */
export const ListBucketsRequestSchema: GenMessage<ListBucketsRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 3);

/**
 * The result of a call to Buckets.ListBuckets
 *
 * @generated from message google.storage.v2.ListBucketsResponse
 */
export type ListBucketsResponse = Message<"google.storage.v2.ListBucketsResponse"> & {
  /**
   * The list of items.
   *
   * @generated from field: repeated google.storage.v2.Bucket buckets = 1;
   */
  buckets: Bucket[];

  /**
   * The continuation token, used to page through large result sets. Provide
   * this value in a subsequent request to return the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.storage.v2.ListBucketsResponse.
 * Use `create(ListBucketsResponseSchema)` to create a new message.
 */
export const ListBucketsResponseSchema: GenMessage<ListBucketsResponse> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 4);

/**
 * Request message for LockBucketRetentionPolicyRequest.
 *
 * @generated from message google.storage.v2.LockBucketRetentionPolicyRequest
 */
export type LockBucketRetentionPolicyRequest = Message<"google.storage.v2.LockBucketRetentionPolicyRequest"> & {
  /**
   * Required. Name of a bucket.
   *
   * @generated from field: string bucket = 1;
   */
  bucket: string;

  /**
   * Required. Makes the operation conditional on whether bucket's current
   * metageneration matches the given value. Must be positive.
   *
   * @generated from field: int64 if_metageneration_match = 2;
   */
  ifMetagenerationMatch: bigint;
};

/**
 * Describes the message google.storage.v2.LockBucketRetentionPolicyRequest.
 * Use `create(LockBucketRetentionPolicyRequestSchema)` to create a new message.
 */
export const LockBucketRetentionPolicyRequestSchema: GenMessage<LockBucketRetentionPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 5);

/**
 * Request for UpdateBucket method.
 *
 * @generated from message google.storage.v2.UpdateBucketRequest
 */
export type UpdateBucketRequest = Message<"google.storage.v2.UpdateBucketRequest"> & {
  /**
   * Required. The bucket to update.
   * The bucket's `name` field will be used to identify the bucket.
   *
   * @generated from field: google.storage.v2.Bucket bucket = 1;
   */
  bucket?: Bucket;

  /**
   * If set, will only modify the bucket if its metageneration matches this
   * value.
   *
   * @generated from field: optional int64 if_metageneration_match = 2;
   */
  ifMetagenerationMatch?: bigint;

  /**
   * If set, will only modify the bucket if its metageneration does not match
   * this value.
   *
   * @generated from field: optional int64 if_metageneration_not_match = 3;
   */
  ifMetagenerationNotMatch?: bigint;

  /**
   * Apply a predefined set of access controls to this bucket.
   * Valid values are "authenticatedRead", "private", "projectPrivate",
   * "publicRead", or "publicReadWrite".
   *
   * @generated from field: string predefined_acl = 8;
   */
  predefinedAcl: string;

  /**
   * Apply a predefined set of default object access controls to this bucket.
   * Valid values are "authenticatedRead", "bucketOwnerFullControl",
   * "bucketOwnerRead", "private", "projectPrivate", or "publicRead".
   *
   * @generated from field: string predefined_default_object_acl = 9;
   */
  predefinedDefaultObjectAcl: string;

  /**
   * Required. List of fields to be updated.
   *
   * To specify ALL fields, equivalent to the JSON API's "update" function,
   * specify a single field with the value `*`. Note: not recommended. If a new
   * field is introduced at a later time, an older client updating with the `*`
   * may accidentally reset the new field's value.
   *
   * Not specifying any fields is an error.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 6;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.storage.v2.UpdateBucketRequest.
 * Use `create(UpdateBucketRequestSchema)` to create a new message.
 */
export const UpdateBucketRequestSchema: GenMessage<UpdateBucketRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 6);

/**
 * Request message for ComposeObject.
 *
 * @generated from message google.storage.v2.ComposeObjectRequest
 */
export type ComposeObjectRequest = Message<"google.storage.v2.ComposeObjectRequest"> & {
  /**
   * Required. Properties of the resulting object.
   *
   * @generated from field: google.storage.v2.Object destination = 1;
   */
  destination?: Object$;

  /**
   * The list of source objects that will be concatenated into a single object.
   *
   * @generated from field: repeated google.storage.v2.ComposeObjectRequest.SourceObject source_objects = 2;
   */
  sourceObjects: ComposeObjectRequest_SourceObject[];

  /**
   * Apply a predefined set of access controls to the destination object.
   * Valid values are "authenticatedRead", "bucketOwnerFullControl",
   * "bucketOwnerRead", "private", "projectPrivate", or "publicRead".
   *
   * @generated from field: string destination_predefined_acl = 9;
   */
  destinationPredefinedAcl: string;

  /**
   * Makes the operation conditional on whether the object's current generation
   * matches the given value. Setting to 0 makes the operation succeed only if
   * there are no live versions of the object.
   *
   * @generated from field: optional int64 if_generation_match = 4;
   */
  ifGenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's current
   * metageneration matches the given value.
   *
   * @generated from field: optional int64 if_metageneration_match = 5;
   */
  ifMetagenerationMatch?: bigint;

  /**
   * Resource name of the Cloud KMS key, of the form
   * `projects/my-project/locations/my-location/keyRings/my-kr/cryptoKeys/my-key`,
   * that will be used to encrypt the object. Overrides the object
   * metadata's `kms_key_name` value, if any.
   *
   * @generated from field: string kms_key = 6;
   */
  kmsKey: string;

  /**
   * A set of parameters common to Storage API requests concerning an object.
   *
   * @generated from field: google.storage.v2.CommonObjectRequestParams common_object_request_params = 7;
   */
  commonObjectRequestParams?: CommonObjectRequestParams;

  /**
   * The checksums of the complete object. This will be validated against the
   * combined checksums of the component objects.
   *
   * @generated from field: google.storage.v2.ObjectChecksums object_checksums = 10;
   */
  objectChecksums?: ObjectChecksums;
};

/**
 * Describes the message google.storage.v2.ComposeObjectRequest.
 * Use `create(ComposeObjectRequestSchema)` to create a new message.
 */
export const ComposeObjectRequestSchema: GenMessage<ComposeObjectRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 7);

/**
 * Description of a source object for a composition request.
 *
 * @generated from message google.storage.v2.ComposeObjectRequest.SourceObject
 */
export type ComposeObjectRequest_SourceObject = Message<"google.storage.v2.ComposeObjectRequest.SourceObject"> & {
  /**
   * Required. The source object's name. All source objects must reside in the
   * same bucket.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The generation of this object to use as the source.
   *
   * @generated from field: int64 generation = 2;
   */
  generation: bigint;

  /**
   * Conditions that must be met for this operation to execute.
   *
   * @generated from field: google.storage.v2.ComposeObjectRequest.SourceObject.ObjectPreconditions object_preconditions = 3;
   */
  objectPreconditions?: ComposeObjectRequest_SourceObject_ObjectPreconditions;
};

/**
 * Describes the message google.storage.v2.ComposeObjectRequest.SourceObject.
 * Use `create(ComposeObjectRequest_SourceObjectSchema)` to create a new message.
 */
export const ComposeObjectRequest_SourceObjectSchema: GenMessage<ComposeObjectRequest_SourceObject> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 7, 0);

/**
 * Preconditions for a source object of a composition request.
 *
 * @generated from message google.storage.v2.ComposeObjectRequest.SourceObject.ObjectPreconditions
 */
export type ComposeObjectRequest_SourceObject_ObjectPreconditions = Message<"google.storage.v2.ComposeObjectRequest.SourceObject.ObjectPreconditions"> & {
  /**
   * Only perform the composition if the generation of the source object
   * that would be used matches this value.  If this value and a generation
   * are both specified, they must be the same value or the call will fail.
   *
   * @generated from field: optional int64 if_generation_match = 1;
   */
  ifGenerationMatch?: bigint;
};

/**
 * Describes the message google.storage.v2.ComposeObjectRequest.SourceObject.ObjectPreconditions.
 * Use `create(ComposeObjectRequest_SourceObject_ObjectPreconditionsSchema)` to create a new message.
 */
export const ComposeObjectRequest_SourceObject_ObjectPreconditionsSchema: GenMessage<ComposeObjectRequest_SourceObject_ObjectPreconditions> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 7, 0, 0);

/**
 * Message for deleting an object.
 * `bucket` and `object` **must** be set.
 *
 * @generated from message google.storage.v2.DeleteObjectRequest
 */
export type DeleteObjectRequest = Message<"google.storage.v2.DeleteObjectRequest"> & {
  /**
   * Required. Name of the bucket in which the object resides.
   *
   * @generated from field: string bucket = 1;
   */
  bucket: string;

  /**
   * Required. The name of the finalized object to delete.
   * Note: If you want to delete an unfinalized resumable upload please use
   * `CancelResumableWrite`.
   *
   * @generated from field: string object = 2;
   */
  object: string;

  /**
   * If present, permanently deletes a specific revision of this object (as
   * opposed to the latest version, the default).
   *
   * @generated from field: int64 generation = 4;
   */
  generation: bigint;

  /**
   * Makes the operation conditional on whether the object's current generation
   * matches the given value. Setting to 0 makes the operation succeed only if
   * there are no live versions of the object.
   *
   * @generated from field: optional int64 if_generation_match = 5;
   */
  ifGenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's live generation
   * does not match the given value. If no live object exists, the precondition
   * fails. Setting to 0 makes the operation succeed only if there is a live
   * version of the object.
   *
   * @generated from field: optional int64 if_generation_not_match = 6;
   */
  ifGenerationNotMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's current
   * metageneration matches the given value.
   *
   * @generated from field: optional int64 if_metageneration_match = 7;
   */
  ifMetagenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's current
   * metageneration does not match the given value.
   *
   * @generated from field: optional int64 if_metageneration_not_match = 8;
   */
  ifMetagenerationNotMatch?: bigint;

  /**
   * A set of parameters common to Storage API requests concerning an object.
   *
   * @generated from field: google.storage.v2.CommonObjectRequestParams common_object_request_params = 10;
   */
  commonObjectRequestParams?: CommonObjectRequestParams;
};

/**
 * Describes the message google.storage.v2.DeleteObjectRequest.
 * Use `create(DeleteObjectRequestSchema)` to create a new message.
 */
export const DeleteObjectRequestSchema: GenMessage<DeleteObjectRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 8);

/**
 * Message for restoring an object.
 * `bucket`, `object`, and `generation` **must** be set.
 *
 * @generated from message google.storage.v2.RestoreObjectRequest
 */
export type RestoreObjectRequest = Message<"google.storage.v2.RestoreObjectRequest"> & {
  /**
   * Required. Name of the bucket in which the object resides.
   *
   * @generated from field: string bucket = 1;
   */
  bucket: string;

  /**
   * Required. The name of the object to restore.
   *
   * @generated from field: string object = 2;
   */
  object: string;

  /**
   * Required. The specific revision of the object to restore.
   *
   * @generated from field: int64 generation = 3;
   */
  generation: bigint;

  /**
   * Makes the operation conditional on whether the object's current generation
   * matches the given value. Setting to 0 makes the operation succeed only if
   * there are no live versions of the object.
   *
   * @generated from field: optional int64 if_generation_match = 4;
   */
  ifGenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's live generation
   * does not match the given value. If no live object exists, the precondition
   * fails. Setting to 0 makes the operation succeed only if there is a live
   * version of the object.
   *
   * @generated from field: optional int64 if_generation_not_match = 5;
   */
  ifGenerationNotMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's current
   * metageneration matches the given value.
   *
   * @generated from field: optional int64 if_metageneration_match = 6;
   */
  ifMetagenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's current
   * metageneration does not match the given value.
   *
   * @generated from field: optional int64 if_metageneration_not_match = 7;
   */
  ifMetagenerationNotMatch?: bigint;

  /**
   * If false or unset, the bucket's default object ACL will be used.
   * If true, copy the source object's access controls.
   * Return an error if bucket has UBLA enabled.
   *
   * @generated from field: optional bool copy_source_acl = 9;
   */
  copySourceAcl?: boolean;

  /**
   * A set of parameters common to Storage API requests concerning an object.
   *
   * @generated from field: google.storage.v2.CommonObjectRequestParams common_object_request_params = 8;
   */
  commonObjectRequestParams?: CommonObjectRequestParams;
};

/**
 * Describes the message google.storage.v2.RestoreObjectRequest.
 * Use `create(RestoreObjectRequestSchema)` to create a new message.
 */
export const RestoreObjectRequestSchema: GenMessage<RestoreObjectRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 9);

/**
 * Message for canceling an in-progress resumable upload.
 * `upload_id` **must** be set.
 *
 * @generated from message google.storage.v2.CancelResumableWriteRequest
 */
export type CancelResumableWriteRequest = Message<"google.storage.v2.CancelResumableWriteRequest"> & {
  /**
   * Required. The upload_id of the resumable upload to cancel. This should be
   * copied from the `upload_id` field of `StartResumableWriteResponse`.
   *
   * @generated from field: string upload_id = 1;
   */
  uploadId: string;
};

/**
 * Describes the message google.storage.v2.CancelResumableWriteRequest.
 * Use `create(CancelResumableWriteRequestSchema)` to create a new message.
 */
export const CancelResumableWriteRequestSchema: GenMessage<CancelResumableWriteRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 10);

/**
 * Empty response message for canceling an in-progress resumable upload, will be
 * extended as needed.
 *
 * @generated from message google.storage.v2.CancelResumableWriteResponse
 */
export type CancelResumableWriteResponse = Message<"google.storage.v2.CancelResumableWriteResponse"> & {
};

/**
 * Describes the message google.storage.v2.CancelResumableWriteResponse.
 * Use `create(CancelResumableWriteResponseSchema)` to create a new message.
 */
export const CancelResumableWriteResponseSchema: GenMessage<CancelResumableWriteResponse> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 11);

/**
 * Request message for ReadObject.
 *
 * @generated from message google.storage.v2.ReadObjectRequest
 */
export type ReadObjectRequest = Message<"google.storage.v2.ReadObjectRequest"> & {
  /**
   * Required. The name of the bucket containing the object to read.
   *
   * @generated from field: string bucket = 1;
   */
  bucket: string;

  /**
   * Required. The name of the object to read.
   *
   * @generated from field: string object = 2;
   */
  object: string;

  /**
   * If present, selects a specific revision of this object (as opposed
   * to the latest version, the default).
   *
   * @generated from field: int64 generation = 3;
   */
  generation: bigint;

  /**
   * The offset for the first byte to return in the read, relative to the start
   * of the object.
   *
   * A negative `read_offset` value will be interpreted as the number of bytes
   * back from the end of the object to be returned. For example, if an object's
   * length is 15 bytes, a ReadObjectRequest with `read_offset` = -5 and
   * `read_limit` = 3 would return bytes 10 through 12 of the object. Requesting
   * a negative offset with magnitude larger than the size of the object will
   * return the entire object.
   *
   * @generated from field: int64 read_offset = 4;
   */
  readOffset: bigint;

  /**
   * The maximum number of `data` bytes the server is allowed to return in the
   * sum of all `Object` messages. A `read_limit` of zero indicates that there
   * is no limit, and a negative `read_limit` will cause an error.
   *
   * If the stream returns fewer bytes than allowed by the `read_limit` and no
   * error occurred, the stream includes all data from the `read_offset` to the
   * end of the resource.
   *
   * @generated from field: int64 read_limit = 5;
   */
  readLimit: bigint;

  /**
   * Makes the operation conditional on whether the object's current generation
   * matches the given value. Setting to 0 makes the operation succeed only if
   * there are no live versions of the object.
   *
   * @generated from field: optional int64 if_generation_match = 6;
   */
  ifGenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's live generation
   * does not match the given value. If no live object exists, the precondition
   * fails. Setting to 0 makes the operation succeed only if there is a live
   * version of the object.
   *
   * @generated from field: optional int64 if_generation_not_match = 7;
   */
  ifGenerationNotMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's current
   * metageneration matches the given value.
   *
   * @generated from field: optional int64 if_metageneration_match = 8;
   */
  ifMetagenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's current
   * metageneration does not match the given value.
   *
   * @generated from field: optional int64 if_metageneration_not_match = 9;
   */
  ifMetagenerationNotMatch?: bigint;

  /**
   * A set of parameters common to Storage API requests concerning an object.
   *
   * @generated from field: google.storage.v2.CommonObjectRequestParams common_object_request_params = 10;
   */
  commonObjectRequestParams?: CommonObjectRequestParams;

  /**
   * Mask specifying which fields to read.
   * The checksummed_data field and its children will always be present.
   * If no mask is specified, will default to all fields except metadata.owner
   * and metadata.acl.
   * * may be used to mean "all fields".
   *
   * @generated from field: optional google.protobuf.FieldMask read_mask = 12;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.storage.v2.ReadObjectRequest.
 * Use `create(ReadObjectRequestSchema)` to create a new message.
 */
export const ReadObjectRequestSchema: GenMessage<ReadObjectRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 12);

/**
 * Request message for GetObject.
 *
 * @generated from message google.storage.v2.GetObjectRequest
 */
export type GetObjectRequest = Message<"google.storage.v2.GetObjectRequest"> & {
  /**
   * Required. Name of the bucket in which the object resides.
   *
   * @generated from field: string bucket = 1;
   */
  bucket: string;

  /**
   * Required. Name of the object.
   *
   * @generated from field: string object = 2;
   */
  object: string;

  /**
   * If present, selects a specific revision of this object (as opposed to the
   * latest version, the default).
   *
   * @generated from field: int64 generation = 3;
   */
  generation: bigint;

  /**
   * If true, return the soft-deleted version of this object.
   *
   * @generated from field: optional bool soft_deleted = 11;
   */
  softDeleted?: boolean;

  /**
   * Makes the operation conditional on whether the object's current generation
   * matches the given value. Setting to 0 makes the operation succeed only if
   * there are no live versions of the object.
   *
   * @generated from field: optional int64 if_generation_match = 4;
   */
  ifGenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's live generation
   * does not match the given value. If no live object exists, the precondition
   * fails. Setting to 0 makes the operation succeed only if there is a live
   * version of the object.
   *
   * @generated from field: optional int64 if_generation_not_match = 5;
   */
  ifGenerationNotMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's current
   * metageneration matches the given value.
   *
   * @generated from field: optional int64 if_metageneration_match = 6;
   */
  ifMetagenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's current
   * metageneration does not match the given value.
   *
   * @generated from field: optional int64 if_metageneration_not_match = 7;
   */
  ifMetagenerationNotMatch?: bigint;

  /**
   * A set of parameters common to Storage API requests concerning an object.
   *
   * @generated from field: google.storage.v2.CommonObjectRequestParams common_object_request_params = 8;
   */
  commonObjectRequestParams?: CommonObjectRequestParams;

  /**
   * Mask specifying which fields to read.
   * If no mask is specified, will default to all fields except metadata.acl and
   * metadata.owner.
   * * may be used to mean "all fields".
   *
   * @generated from field: optional google.protobuf.FieldMask read_mask = 10;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message google.storage.v2.GetObjectRequest.
 * Use `create(GetObjectRequestSchema)` to create a new message.
 */
export const GetObjectRequestSchema: GenMessage<GetObjectRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 13);

/**
 * Response message for ReadObject.
 *
 * @generated from message google.storage.v2.ReadObjectResponse
 */
export type ReadObjectResponse = Message<"google.storage.v2.ReadObjectResponse"> & {
  /**
   * A portion of the data for the object. The service **may** leave `data`
   * empty for any given `ReadResponse`. This enables the service to inform the
   * client that the request is still live while it is running an operation to
   * generate more data.
   *
   * @generated from field: google.storage.v2.ChecksummedData checksummed_data = 1;
   */
  checksummedData?: ChecksummedData;

  /**
   * The checksums of the complete object. If the object is downloaded in full,
   * the client should compute one of these checksums over the downloaded object
   * and compare it against the value provided here.
   *
   * @generated from field: google.storage.v2.ObjectChecksums object_checksums = 2;
   */
  objectChecksums?: ObjectChecksums;

  /**
   * If read_offset and or read_limit was specified on the
   * ReadObjectRequest, ContentRange will be populated on the first
   * ReadObjectResponse message of the read stream.
   *
   * @generated from field: google.storage.v2.ContentRange content_range = 3;
   */
  contentRange?: ContentRange;

  /**
   * Metadata of the object whose media is being returned.
   * Only populated in the first response in the stream.
   *
   * @generated from field: google.storage.v2.Object metadata = 4;
   */
  metadata?: Object$;
};

/**
 * Describes the message google.storage.v2.ReadObjectResponse.
 * Use `create(ReadObjectResponseSchema)` to create a new message.
 */
export const ReadObjectResponseSchema: GenMessage<ReadObjectResponse> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 14);

/**
 * Describes an attempt to insert an object, possibly over multiple requests.
 *
 * @generated from message google.storage.v2.WriteObjectSpec
 */
export type WriteObjectSpec = Message<"google.storage.v2.WriteObjectSpec"> & {
  /**
   * Required. Destination object, including its name and its metadata.
   *
   * @generated from field: google.storage.v2.Object resource = 1;
   */
  resource?: Object$;

  /**
   * Apply a predefined set of access controls to this object.
   * Valid values are "authenticatedRead", "bucketOwnerFullControl",
   * "bucketOwnerRead", "private", "projectPrivate", or "publicRead".
   *
   * @generated from field: string predefined_acl = 7;
   */
  predefinedAcl: string;

  /**
   * Makes the operation conditional on whether the object's current
   * generation matches the given value. Setting to 0 makes the operation
   * succeed only if there are no live versions of the object.
   *
   * @generated from field: optional int64 if_generation_match = 3;
   */
  ifGenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's live
   * generation does not match the given value. If no live object exists, the
   * precondition fails. Setting to 0 makes the operation succeed only if
   * there is a live version of the object.
   *
   * @generated from field: optional int64 if_generation_not_match = 4;
   */
  ifGenerationNotMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's current
   * metageneration matches the given value.
   *
   * @generated from field: optional int64 if_metageneration_match = 5;
   */
  ifMetagenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's current
   * metageneration does not match the given value.
   *
   * @generated from field: optional int64 if_metageneration_not_match = 6;
   */
  ifMetagenerationNotMatch?: bigint;

  /**
   * The expected final object size being uploaded.
   * If this value is set, closing the stream after writing fewer or more than
   * `object_size` bytes will result in an OUT_OF_RANGE error.
   *
   * This situation is considered a client error, and if such an error occurs
   * you must start the upload over from scratch, this time sending the correct
   * number of bytes.
   *
   * @generated from field: optional int64 object_size = 8;
   */
  objectSize?: bigint;
};

/**
 * Describes the message google.storage.v2.WriteObjectSpec.
 * Use `create(WriteObjectSpecSchema)` to create a new message.
 */
export const WriteObjectSpecSchema: GenMessage<WriteObjectSpec> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 15);

/**
 * Request message for WriteObject.
 *
 * @generated from message google.storage.v2.WriteObjectRequest
 */
export type WriteObjectRequest = Message<"google.storage.v2.WriteObjectRequest"> & {
  /**
   * The first message of each stream should set one of the following.
   *
   * @generated from oneof google.storage.v2.WriteObjectRequest.first_message
   */
  firstMessage: {
    /**
     * For resumable uploads. This should be the `upload_id` returned from a
     * call to `StartResumableWriteResponse`.
     *
     * @generated from field: string upload_id = 1;
     */
    value: string;
    case: "uploadId";
  } | {
    /**
     * For non-resumable uploads. Describes the overall upload, including the
     * destination bucket and object name, preconditions, etc.
     *
     * @generated from field: google.storage.v2.WriteObjectSpec write_object_spec = 2;
     */
    value: WriteObjectSpec;
    case: "writeObjectSpec";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The offset from the beginning of the object at which the data
   * should be written.
   *
   * In the first `WriteObjectRequest` of a `WriteObject()` action, it
   * indicates the initial offset for the `Write()` call. The value **must** be
   * equal to the `persisted_size` that a call to `QueryWriteStatus()` would
   * return (0 if this is the first write to the object).
   *
   * On subsequent calls, this value **must** be no larger than the sum of the
   * first `write_offset` and the sizes of all `data` chunks sent previously on
   * this stream.
   *
   * An incorrect value will cause an error.
   *
   * @generated from field: int64 write_offset = 3;
   */
  writeOffset: bigint;

  /**
   * A portion of the data for the object.
   *
   * @generated from oneof google.storage.v2.WriteObjectRequest.data
   */
  data: {
    /**
     * The data to insert. If a crc32c checksum is provided that doesn't match
     * the checksum computed by the service, the request will fail.
     *
     * @generated from field: google.storage.v2.ChecksummedData checksummed_data = 4;
     */
    value: ChecksummedData;
    case: "checksummedData";
  } | { case: undefined; value?: undefined };

  /**
   * Checksums for the complete object. If the checksums computed by the service
   * don't match the specified checksums the call will fail. May only be
   * provided in the first or last request (either with first_message, or
   * finish_write set).
   *
   * @generated from field: google.storage.v2.ObjectChecksums object_checksums = 6;
   */
  objectChecksums?: ObjectChecksums;

  /**
   * If `true`, this indicates that the write is complete. Sending any
   * `WriteObjectRequest`s subsequent to one in which `finish_write` is `true`
   * will cause an error.
   * For a non-resumable write (where the upload_id was not set in the first
   * message), it is an error not to set this field in the final message of the
   * stream.
   *
   * @generated from field: bool finish_write = 7;
   */
  finishWrite: boolean;

  /**
   * A set of parameters common to Storage API requests concerning an object.
   *
   * @generated from field: google.storage.v2.CommonObjectRequestParams common_object_request_params = 8;
   */
  commonObjectRequestParams?: CommonObjectRequestParams;
};

/**
 * Describes the message google.storage.v2.WriteObjectRequest.
 * Use `create(WriteObjectRequestSchema)` to create a new message.
 */
export const WriteObjectRequestSchema: GenMessage<WriteObjectRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 16);

/**
 * Response message for WriteObject.
 *
 * @generated from message google.storage.v2.WriteObjectResponse
 */
export type WriteObjectResponse = Message<"google.storage.v2.WriteObjectResponse"> & {
  /**
   * The response will set one of the following.
   *
   * @generated from oneof google.storage.v2.WriteObjectResponse.write_status
   */
  writeStatus: {
    /**
     * The total number of bytes that have been processed for the given object
     * from all `WriteObject` calls. Only set if the upload has not finalized.
     *
     * @generated from field: int64 persisted_size = 1;
     */
    value: bigint;
    case: "persistedSize";
  } | {
    /**
     * A resource containing the metadata for the uploaded object. Only set if
     * the upload has finalized.
     *
     * @generated from field: google.storage.v2.Object resource = 2;
     */
    value: Object$;
    case: "resource";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.storage.v2.WriteObjectResponse.
 * Use `create(WriteObjectResponseSchema)` to create a new message.
 */
export const WriteObjectResponseSchema: GenMessage<WriteObjectResponse> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 17);

/**
 * Request message for BidiWriteObject.
 *
 * @generated from message google.storage.v2.BidiWriteObjectRequest
 */
export type BidiWriteObjectRequest = Message<"google.storage.v2.BidiWriteObjectRequest"> & {
  /**
   * The first message of each stream should set one of the following.
   *
   * @generated from oneof google.storage.v2.BidiWriteObjectRequest.first_message
   */
  firstMessage: {
    /**
     * For resumable uploads. This should be the `upload_id` returned from a
     * call to `StartResumableWriteResponse`.
     *
     * @generated from field: string upload_id = 1;
     */
    value: string;
    case: "uploadId";
  } | {
    /**
     * For non-resumable uploads. Describes the overall upload, including the
     * destination bucket and object name, preconditions, etc.
     *
     * @generated from field: google.storage.v2.WriteObjectSpec write_object_spec = 2;
     */
    value: WriteObjectSpec;
    case: "writeObjectSpec";
  } | { case: undefined; value?: undefined };

  /**
   * Required. The offset from the beginning of the object at which the data
   * should be written.
   *
   * In the first `WriteObjectRequest` of a `WriteObject()` action, it
   * indicates the initial offset for the `Write()` call. The value **must** be
   * equal to the `persisted_size` that a call to `QueryWriteStatus()` would
   * return (0 if this is the first write to the object).
   *
   * On subsequent calls, this value **must** be no larger than the sum of the
   * first `write_offset` and the sizes of all `data` chunks sent previously on
   * this stream.
   *
   * An invalid value will cause an error.
   *
   * @generated from field: int64 write_offset = 3;
   */
  writeOffset: bigint;

  /**
   * A portion of the data for the object.
   *
   * @generated from oneof google.storage.v2.BidiWriteObjectRequest.data
   */
  data: {
    /**
     * The data to insert. If a crc32c checksum is provided that doesn't match
     * the checksum computed by the service, the request will fail.
     *
     * @generated from field: google.storage.v2.ChecksummedData checksummed_data = 4;
     */
    value: ChecksummedData;
    case: "checksummedData";
  } | { case: undefined; value?: undefined };

  /**
   * Checksums for the complete object. If the checksums computed by the service
   * don't match the specified checksums the call will fail. May only be
   * provided in last request (with finish_write set).
   *
   * @generated from field: google.storage.v2.ObjectChecksums object_checksums = 6;
   */
  objectChecksums?: ObjectChecksums;

  /**
   * For each BidiWriteObjectRequest where state_lookup is `true` or the client
   * closes the stream, the service will send a BidiWriteObjectResponse
   * containing the current persisted size. The persisted size sent in responses
   * covers all the bytes the server has persisted thus far and can be used to
   * decide what data is safe for the client to drop. Note that the object's
   * current size reported by the BidiWriteObjectResponse may lag behind the
   * number of bytes written by the client. This field is ignored if
   * `finish_write` is set to true.
   *
   * @generated from field: bool state_lookup = 7;
   */
  stateLookup: boolean;

  /**
   * Persists data written on the stream, up to and including the current
   * message, to permanent storage. This option should be used sparingly as it
   * may reduce performance. Ongoing writes will periodically be persisted on
   * the server even when `flush` is not set. This field is ignored if
   * `finish_write` is set to true since there's no need to checkpoint or flush
   * if this message completes the write.
   *
   * @generated from field: bool flush = 8;
   */
  flush: boolean;

  /**
   * If `true`, this indicates that the write is complete. Sending any
   * `WriteObjectRequest`s subsequent to one in which `finish_write` is `true`
   * will cause an error.
   * For a non-resumable write (where the upload_id was not set in the first
   * message), it is an error not to set this field in the final message of the
   * stream.
   *
   * @generated from field: bool finish_write = 9;
   */
  finishWrite: boolean;

  /**
   * A set of parameters common to Storage API requests concerning an object.
   *
   * @generated from field: google.storage.v2.CommonObjectRequestParams common_object_request_params = 10;
   */
  commonObjectRequestParams?: CommonObjectRequestParams;
};

/**
 * Describes the message google.storage.v2.BidiWriteObjectRequest.
 * Use `create(BidiWriteObjectRequestSchema)` to create a new message.
 */
export const BidiWriteObjectRequestSchema: GenMessage<BidiWriteObjectRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 18);

/**
 * Response message for BidiWriteObject.
 *
 * @generated from message google.storage.v2.BidiWriteObjectResponse
 */
export type BidiWriteObjectResponse = Message<"google.storage.v2.BidiWriteObjectResponse"> & {
  /**
   * The response will set one of the following.
   *
   * @generated from oneof google.storage.v2.BidiWriteObjectResponse.write_status
   */
  writeStatus: {
    /**
     * The total number of bytes that have been processed for the given object
     * from all `WriteObject` calls. Only set if the upload has not finalized.
     *
     * @generated from field: int64 persisted_size = 1;
     */
    value: bigint;
    case: "persistedSize";
  } | {
    /**
     * A resource containing the metadata for the uploaded object. Only set if
     * the upload has finalized.
     *
     * @generated from field: google.storage.v2.Object resource = 2;
     */
    value: Object$;
    case: "resource";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.storage.v2.BidiWriteObjectResponse.
 * Use `create(BidiWriteObjectResponseSchema)` to create a new message.
 */
export const BidiWriteObjectResponseSchema: GenMessage<BidiWriteObjectResponse> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 19);

/**
 * Request message for ListObjects.
 *
 * @generated from message google.storage.v2.ListObjectsRequest
 */
export type ListObjectsRequest = Message<"google.storage.v2.ListObjectsRequest"> & {
  /**
   * Required. Name of the bucket in which to look for objects.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Maximum number of `items` plus `prefixes` to return
   * in a single page of responses. As duplicate `prefixes` are
   * omitted, fewer total results may be returned than requested. The service
   * will use this parameter or 1,000 items, whichever is smaller.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A previously-returned page token representing part of the larger set of
   * results to view.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * If set, returns results in a directory-like mode. `items` will contain
   * only objects whose names, aside from the `prefix`, do not
   * contain `delimiter`. Objects whose names, aside from the
   * `prefix`, contain `delimiter` will have their name,
   * truncated after the `delimiter`, returned in
   * `prefixes`. Duplicate `prefixes` are omitted.
   *
   * @generated from field: string delimiter = 4;
   */
  delimiter: string;

  /**
   * If true, objects that end in exactly one instance of `delimiter`
   * will have their metadata included in `items` in addition to
   * `prefixes`.
   *
   * @generated from field: bool include_trailing_delimiter = 5;
   */
  includeTrailingDelimiter: boolean;

  /**
   * Filter results to objects whose names begin with this prefix.
   *
   * @generated from field: string prefix = 6;
   */
  prefix: string;

  /**
   * If `true`, lists all versions of an object as distinct results.
   * For more information, see
   * [Object
   * Versioning](https://cloud.google.com/storage/docs/object-versioning).
   *
   * @generated from field: bool versions = 7;
   */
  versions: boolean;

  /**
   * Mask specifying which fields to read from each result.
   * If no mask is specified, will default to all fields except items.acl and
   * items.owner.
   * * may be used to mean "all fields".
   *
   * @generated from field: optional google.protobuf.FieldMask read_mask = 8;
   */
  readMask?: FieldMask;

  /**
   * Optional. Filter results to objects whose names are lexicographically equal
   * to or after lexicographic_start. If lexicographic_end is also set, the
   * objects listed have names between lexicographic_start (inclusive) and
   * lexicographic_end (exclusive).
   *
   * @generated from field: string lexicographic_start = 10;
   */
  lexicographicStart: string;

  /**
   * Optional. Filter results to objects whose names are lexicographically
   * before lexicographic_end. If lexicographic_start is also set, the objects
   * listed have names between lexicographic_start (inclusive) and
   * lexicographic_end (exclusive).
   *
   * @generated from field: string lexicographic_end = 11;
   */
  lexicographicEnd: string;

  /**
   * Optional. If true, only list all soft-deleted versions of the object.
   * Soft delete policy is required to set this option.
   *
   * @generated from field: bool soft_deleted = 12;
   */
  softDeleted: boolean;

  /**
   * Optional. If true, will also include folders and managed folders (besides
   * objects) in the returned `prefixes`. Requires `delimiter` to be set to '/'.
   *
   * @generated from field: bool include_folders_as_prefixes = 13;
   */
  includeFoldersAsPrefixes: boolean;

  /**
   * Optional. Filter results to objects and prefixes that match this glob
   * pattern. See [List Objects Using
   * Glob](https://cloud.google.com/storage/docs/json_api/v1/objects/list#list-objects-and-prefixes-using-glob)
   * for the full syntax.
   *
   * @generated from field: string match_glob = 14;
   */
  matchGlob: string;
};

/**
 * Describes the message google.storage.v2.ListObjectsRequest.
 * Use `create(ListObjectsRequestSchema)` to create a new message.
 */
export const ListObjectsRequestSchema: GenMessage<ListObjectsRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 20);

/**
 * Request object for `QueryWriteStatus`.
 *
 * @generated from message google.storage.v2.QueryWriteStatusRequest
 */
export type QueryWriteStatusRequest = Message<"google.storage.v2.QueryWriteStatusRequest"> & {
  /**
   * Required. The name of the resume token for the object whose write status is
   * being requested.
   *
   * @generated from field: string upload_id = 1;
   */
  uploadId: string;

  /**
   * A set of parameters common to Storage API requests concerning an object.
   *
   * @generated from field: google.storage.v2.CommonObjectRequestParams common_object_request_params = 2;
   */
  commonObjectRequestParams?: CommonObjectRequestParams;
};

/**
 * Describes the message google.storage.v2.QueryWriteStatusRequest.
 * Use `create(QueryWriteStatusRequestSchema)` to create a new message.
 */
export const QueryWriteStatusRequestSchema: GenMessage<QueryWriteStatusRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 21);

/**
 * Response object for `QueryWriteStatus`.
 *
 * @generated from message google.storage.v2.QueryWriteStatusResponse
 */
export type QueryWriteStatusResponse = Message<"google.storage.v2.QueryWriteStatusResponse"> & {
  /**
   * The response will set one of the following.
   *
   * @generated from oneof google.storage.v2.QueryWriteStatusResponse.write_status
   */
  writeStatus: {
    /**
     * The total number of bytes that have been processed for the given object
     * from all `WriteObject` calls. This is the correct value for the
     * 'write_offset' field to use when resuming the `WriteObject` operation.
     * Only set if the upload has not finalized.
     *
     * @generated from field: int64 persisted_size = 1;
     */
    value: bigint;
    case: "persistedSize";
  } | {
    /**
     * A resource containing the metadata for the uploaded object. Only set if
     * the upload has finalized.
     *
     * @generated from field: google.storage.v2.Object resource = 2;
     */
    value: Object$;
    case: "resource";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.storage.v2.QueryWriteStatusResponse.
 * Use `create(QueryWriteStatusResponseSchema)` to create a new message.
 */
export const QueryWriteStatusResponseSchema: GenMessage<QueryWriteStatusResponse> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 22);

/**
 * Request message for RewriteObject.
 * If the source object is encrypted using a Customer-Supplied Encryption Key
 * the key information must be provided in the copy_source_encryption_algorithm,
 * copy_source_encryption_key_bytes, and copy_source_encryption_key_sha256_bytes
 * fields. If the destination object should be encrypted the keying information
 * should be provided in the encryption_algorithm, encryption_key_bytes, and
 * encryption_key_sha256_bytes fields of the
 * common_object_request_params.customer_encryption field.
 *
 * @generated from message google.storage.v2.RewriteObjectRequest
 */
export type RewriteObjectRequest = Message<"google.storage.v2.RewriteObjectRequest"> & {
  /**
   * Required. Immutable. The name of the destination object.
   * See the
   * [Naming Guidelines](https://cloud.google.com/storage/docs/objects#naming).
   * Example: `test.txt`
   * The `name` field by itself does not uniquely identify a Cloud Storage
   * object. A Cloud Storage object is uniquely identified by the tuple of
   * (bucket, object, generation).
   *
   * @generated from field: string destination_name = 24;
   */
  destinationName: string;

  /**
   * Required. Immutable. The name of the bucket containing the destination
   * object.
   *
   * @generated from field: string destination_bucket = 25;
   */
  destinationBucket: string;

  /**
   * The name of the Cloud KMS key that will be used to encrypt the destination
   * object. The Cloud KMS key must be located in same location as the object.
   * If the parameter is not specified, the request uses the destination
   * bucket's default encryption key, if any, or else the Google-managed
   * encryption key.
   *
   * @generated from field: string destination_kms_key = 27;
   */
  destinationKmsKey: string;

  /**
   * Properties of the destination, post-rewrite object.
   * The `name`, `bucket` and `kms_key` fields must not be populated (these
   * values are specified in the `destination_name`, `destination_bucket`, and
   * `destination_kms_key` fields).
   * If `destination` is present it will be used to construct the destination
   * object's metadata; otherwise the destination object's metadata will be
   * copied from the source object.
   *
   * @generated from field: google.storage.v2.Object destination = 1;
   */
  destination?: Object$;

  /**
   * Required. Name of the bucket in which to find the source object.
   *
   * @generated from field: string source_bucket = 2;
   */
  sourceBucket: string;

  /**
   * Required. Name of the source object.
   *
   * @generated from field: string source_object = 3;
   */
  sourceObject: string;

  /**
   * If present, selects a specific revision of the source object (as opposed to
   * the latest version, the default).
   *
   * @generated from field: int64 source_generation = 4;
   */
  sourceGeneration: bigint;

  /**
   * Include this field (from the previous rewrite response) on each rewrite
   * request after the first one, until the rewrite response 'done' flag is
   * true. Calls that provide a rewriteToken can omit all other request fields,
   * but if included those fields must match the values provided in the first
   * rewrite request.
   *
   * @generated from field: string rewrite_token = 5;
   */
  rewriteToken: string;

  /**
   * Apply a predefined set of access controls to the destination object.
   * Valid values are "authenticatedRead", "bucketOwnerFullControl",
   * "bucketOwnerRead", "private", "projectPrivate", or "publicRead".
   *
   * @generated from field: string destination_predefined_acl = 28;
   */
  destinationPredefinedAcl: string;

  /**
   * Makes the operation conditional on whether the object's current generation
   * matches the given value. Setting to 0 makes the operation succeed only if
   * there are no live versions of the object.
   *
   * @generated from field: optional int64 if_generation_match = 7;
   */
  ifGenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's live generation
   * does not match the given value. If no live object exists, the precondition
   * fails. Setting to 0 makes the operation succeed only if there is a live
   * version of the object.
   *
   * @generated from field: optional int64 if_generation_not_match = 8;
   */
  ifGenerationNotMatch?: bigint;

  /**
   * Makes the operation conditional on whether the destination object's current
   * metageneration matches the given value.
   *
   * @generated from field: optional int64 if_metageneration_match = 9;
   */
  ifMetagenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the destination object's current
   * metageneration does not match the given value.
   *
   * @generated from field: optional int64 if_metageneration_not_match = 10;
   */
  ifMetagenerationNotMatch?: bigint;

  /**
   * Makes the operation conditional on whether the source object's live
   * generation matches the given value.
   *
   * @generated from field: optional int64 if_source_generation_match = 11;
   */
  ifSourceGenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the source object's live
   * generation does not match the given value.
   *
   * @generated from field: optional int64 if_source_generation_not_match = 12;
   */
  ifSourceGenerationNotMatch?: bigint;

  /**
   * Makes the operation conditional on whether the source object's current
   * metageneration matches the given value.
   *
   * @generated from field: optional int64 if_source_metageneration_match = 13;
   */
  ifSourceMetagenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the source object's current
   * metageneration does not match the given value.
   *
   * @generated from field: optional int64 if_source_metageneration_not_match = 14;
   */
  ifSourceMetagenerationNotMatch?: bigint;

  /**
   * The maximum number of bytes that will be rewritten per rewrite request.
   * Most callers
   * shouldn't need to specify this parameter - it is primarily in place to
   * support testing. If specified the value must be an integral multiple of
   * 1 MiB (1048576). Also, this only applies to requests where the source and
   * destination span locations and/or storage classes. Finally, this value must
   * not change across rewrite calls else you'll get an error that the
   * `rewriteToken` is invalid.
   *
   * @generated from field: int64 max_bytes_rewritten_per_call = 15;
   */
  maxBytesRewrittenPerCall: bigint;

  /**
   * The algorithm used to encrypt the source object, if any. Used if the source
   * object was encrypted with a Customer-Supplied Encryption Key.
   *
   * @generated from field: string copy_source_encryption_algorithm = 16;
   */
  copySourceEncryptionAlgorithm: string;

  /**
   * The raw bytes (not base64-encoded) AES-256 encryption key used to encrypt
   * the source object, if it was encrypted with a Customer-Supplied Encryption
   * Key.
   *
   * @generated from field: bytes copy_source_encryption_key_bytes = 21;
   */
  copySourceEncryptionKeyBytes: Uint8Array;

  /**
   * The raw bytes (not base64-encoded) SHA256 hash of the encryption key used
   * to encrypt the source object, if it was encrypted with a Customer-Supplied
   * Encryption Key.
   *
   * @generated from field: bytes copy_source_encryption_key_sha256_bytes = 22;
   */
  copySourceEncryptionKeySha256Bytes: Uint8Array;

  /**
   * A set of parameters common to Storage API requests concerning an object.
   *
   * @generated from field: google.storage.v2.CommonObjectRequestParams common_object_request_params = 19;
   */
  commonObjectRequestParams?: CommonObjectRequestParams;

  /**
   * The checksums of the complete object. This will be used to validate the
   * destination object after rewriting.
   *
   * @generated from field: google.storage.v2.ObjectChecksums object_checksums = 29;
   */
  objectChecksums?: ObjectChecksums;
};

/**
 * Describes the message google.storage.v2.RewriteObjectRequest.
 * Use `create(RewriteObjectRequestSchema)` to create a new message.
 */
export const RewriteObjectRequestSchema: GenMessage<RewriteObjectRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 23);

/**
 * A rewrite response.
 *
 * @generated from message google.storage.v2.RewriteResponse
 */
export type RewriteResponse = Message<"google.storage.v2.RewriteResponse"> & {
  /**
   * The total bytes written so far, which can be used to provide a waiting user
   * with a progress indicator. This property is always present in the response.
   *
   * @generated from field: int64 total_bytes_rewritten = 1;
   */
  totalBytesRewritten: bigint;

  /**
   * The total size of the object being copied in bytes. This property is always
   * present in the response.
   *
   * @generated from field: int64 object_size = 2;
   */
  objectSize: bigint;

  /**
   * `true` if the copy is finished; otherwise, `false` if
   * the copy is in progress. This property is always present in the response.
   *
   * @generated from field: bool done = 3;
   */
  done: boolean;

  /**
   * A token to use in subsequent requests to continue copying data. This token
   * is present in the response only when there is more data to copy.
   *
   * @generated from field: string rewrite_token = 4;
   */
  rewriteToken: string;

  /**
   * A resource containing the metadata for the copied-to object. This property
   * is present in the response only when copying completes.
   *
   * @generated from field: google.storage.v2.Object resource = 5;
   */
  resource?: Object$;
};

/**
 * Describes the message google.storage.v2.RewriteResponse.
 * Use `create(RewriteResponseSchema)` to create a new message.
 */
export const RewriteResponseSchema: GenMessage<RewriteResponse> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 24);

/**
 * Request message StartResumableWrite.
 *
 * @generated from message google.storage.v2.StartResumableWriteRequest
 */
export type StartResumableWriteRequest = Message<"google.storage.v2.StartResumableWriteRequest"> & {
  /**
   * Required. The destination bucket, object, and metadata, as well as any
   * preconditions.
   *
   * @generated from field: google.storage.v2.WriteObjectSpec write_object_spec = 1;
   */
  writeObjectSpec?: WriteObjectSpec;

  /**
   * A set of parameters common to Storage API requests concerning an object.
   *
   * @generated from field: google.storage.v2.CommonObjectRequestParams common_object_request_params = 3;
   */
  commonObjectRequestParams?: CommonObjectRequestParams;

  /**
   * The checksums of the complete object. This will be used to validate the
   * uploaded object. For each upload, object_checksums can be provided with
   * either StartResumableWriteRequest or the WriteObjectRequest with
   * finish_write set to `true`.
   *
   * @generated from field: google.storage.v2.ObjectChecksums object_checksums = 5;
   */
  objectChecksums?: ObjectChecksums;
};

/**
 * Describes the message google.storage.v2.StartResumableWriteRequest.
 * Use `create(StartResumableWriteRequestSchema)` to create a new message.
 */
export const StartResumableWriteRequestSchema: GenMessage<StartResumableWriteRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 25);

/**
 * Response object for `StartResumableWrite`.
 *
 * @generated from message google.storage.v2.StartResumableWriteResponse
 */
export type StartResumableWriteResponse = Message<"google.storage.v2.StartResumableWriteResponse"> & {
  /**
   * The upload_id of the newly started resumable write operation. This
   * value should be copied into the `WriteObjectRequest.upload_id` field.
   *
   * @generated from field: string upload_id = 1;
   */
  uploadId: string;
};

/**
 * Describes the message google.storage.v2.StartResumableWriteResponse.
 * Use `create(StartResumableWriteResponseSchema)` to create a new message.
 */
export const StartResumableWriteResponseSchema: GenMessage<StartResumableWriteResponse> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 26);

/**
 * Request message for UpdateObject.
 *
 * @generated from message google.storage.v2.UpdateObjectRequest
 */
export type UpdateObjectRequest = Message<"google.storage.v2.UpdateObjectRequest"> & {
  /**
   * Required. The object to update.
   * The object's bucket and name fields are used to identify the object to
   * update. If present, the object's generation field selects a specific
   * revision of this object whose metadata should be updated. Otherwise,
   * assumes the live version of the object.
   *
   * @generated from field: google.storage.v2.Object object = 1;
   */
  object?: Object$;

  /**
   * Makes the operation conditional on whether the object's current generation
   * matches the given value. Setting to 0 makes the operation succeed only if
   * there are no live versions of the object.
   *
   * @generated from field: optional int64 if_generation_match = 2;
   */
  ifGenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's live generation
   * does not match the given value. If no live object exists, the precondition
   * fails. Setting to 0 makes the operation succeed only if there is a live
   * version of the object.
   *
   * @generated from field: optional int64 if_generation_not_match = 3;
   */
  ifGenerationNotMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's current
   * metageneration matches the given value.
   *
   * @generated from field: optional int64 if_metageneration_match = 4;
   */
  ifMetagenerationMatch?: bigint;

  /**
   * Makes the operation conditional on whether the object's current
   * metageneration does not match the given value.
   *
   * @generated from field: optional int64 if_metageneration_not_match = 5;
   */
  ifMetagenerationNotMatch?: bigint;

  /**
   * Apply a predefined set of access controls to this object.
   * Valid values are "authenticatedRead", "bucketOwnerFullControl",
   * "bucketOwnerRead", "private", "projectPrivate", or "publicRead".
   *
   * @generated from field: string predefined_acl = 10;
   */
  predefinedAcl: string;

  /**
   * Required. List of fields to be updated.
   *
   * To specify ALL fields, equivalent to the JSON API's "update" function,
   * specify a single field with the value `*`. Note: not recommended. If a new
   * field is introduced at a later time, an older client updating with the `*`
   * may accidentally reset the new field's value.
   *
   * Not specifying any fields is an error.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 7;
   */
  updateMask?: FieldMask;

  /**
   * A set of parameters common to Storage API requests concerning an object.
   *
   * @generated from field: google.storage.v2.CommonObjectRequestParams common_object_request_params = 8;
   */
  commonObjectRequestParams?: CommonObjectRequestParams;
};

/**
 * Describes the message google.storage.v2.UpdateObjectRequest.
 * Use `create(UpdateObjectRequestSchema)` to create a new message.
 */
export const UpdateObjectRequestSchema: GenMessage<UpdateObjectRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 27);

/**
 * Request message for GetServiceAccount.
 *
 * @generated from message google.storage.v2.GetServiceAccountRequest
 */
export type GetServiceAccountRequest = Message<"google.storage.v2.GetServiceAccountRequest"> & {
  /**
   * Required. Project ID, in the format of "projects/{projectIdentifier}".
   * {projectIdentifier} can be the project ID or project number.
   *
   * @generated from field: string project = 1;
   */
  project: string;
};

/**
 * Describes the message google.storage.v2.GetServiceAccountRequest.
 * Use `create(GetServiceAccountRequestSchema)` to create a new message.
 */
export const GetServiceAccountRequestSchema: GenMessage<GetServiceAccountRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 28);

/**
 * A service account, owned by Cloud Storage, which may be used when taking
 * action on behalf of a given project, for example to publish Pub/Sub
 * notifications or to retrieve security keys.
 *
 * @generated from message google.storage.v2.ServiceAccount
 */
export type ServiceAccount = Message<"google.storage.v2.ServiceAccount"> & {
  /**
   * The ID of the notification.
   *
   * @generated from field: string email_address = 1;
   */
  emailAddress: string;
};

/**
 * Describes the message google.storage.v2.ServiceAccount.
 * Use `create(ServiceAccountSchema)` to create a new message.
 */
export const ServiceAccountSchema: GenMessage<ServiceAccount> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 29);

/**
 * Request message for CreateHmacKey.
 *
 * @generated from message google.storage.v2.CreateHmacKeyRequest
 */
export type CreateHmacKeyRequest = Message<"google.storage.v2.CreateHmacKeyRequest"> & {
  /**
   * Required. The project that the HMAC-owning service account lives in, in the
   * format of "projects/{projectIdentifier}". {projectIdentifier} can be the
   * project ID or project number.
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * Required. The service account to create the HMAC for.
   *
   * @generated from field: string service_account_email = 2;
   */
  serviceAccountEmail: string;
};

/**
 * Describes the message google.storage.v2.CreateHmacKeyRequest.
 * Use `create(CreateHmacKeyRequestSchema)` to create a new message.
 */
export const CreateHmacKeyRequestSchema: GenMessage<CreateHmacKeyRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 30);

/**
 * Create hmac response.  The only time the secret for an HMAC will be returned.
 *
 * @generated from message google.storage.v2.CreateHmacKeyResponse
 */
export type CreateHmacKeyResponse = Message<"google.storage.v2.CreateHmacKeyResponse"> & {
  /**
   * Key metadata.
   *
   * @generated from field: google.storage.v2.HmacKeyMetadata metadata = 1;
   */
  metadata?: HmacKeyMetadata;

  /**
   * HMAC key secret material.
   * In raw bytes format (not base64-encoded).
   *
   * @generated from field: bytes secret_key_bytes = 3;
   */
  secretKeyBytes: Uint8Array;
};

/**
 * Describes the message google.storage.v2.CreateHmacKeyResponse.
 * Use `create(CreateHmacKeyResponseSchema)` to create a new message.
 */
export const CreateHmacKeyResponseSchema: GenMessage<CreateHmacKeyResponse> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 31);

/**
 * Request object to delete a given HMAC key.
 *
 * @generated from message google.storage.v2.DeleteHmacKeyRequest
 */
export type DeleteHmacKeyRequest = Message<"google.storage.v2.DeleteHmacKeyRequest"> & {
  /**
   * Required. The identifying key for the HMAC to delete.
   *
   * @generated from field: string access_id = 1;
   */
  accessId: string;

  /**
   * Required. The project that owns the HMAC key, in the format of
   * "projects/{projectIdentifier}".
   * {projectIdentifier} can be the project ID or project number.
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message google.storage.v2.DeleteHmacKeyRequest.
 * Use `create(DeleteHmacKeyRequestSchema)` to create a new message.
 */
export const DeleteHmacKeyRequestSchema: GenMessage<DeleteHmacKeyRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 32);

/**
 * Request object to get metadata on a given HMAC key.
 *
 * @generated from message google.storage.v2.GetHmacKeyRequest
 */
export type GetHmacKeyRequest = Message<"google.storage.v2.GetHmacKeyRequest"> & {
  /**
   * Required. The identifying key for the HMAC to delete.
   *
   * @generated from field: string access_id = 1;
   */
  accessId: string;

  /**
   * Required. The project the HMAC key lies in, in the format of
   * "projects/{projectIdentifier}".
   * {projectIdentifier} can be the project ID or project number.
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message google.storage.v2.GetHmacKeyRequest.
 * Use `create(GetHmacKeyRequestSchema)` to create a new message.
 */
export const GetHmacKeyRequestSchema: GenMessage<GetHmacKeyRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 33);

/**
 * Request to fetch a list of HMAC keys under a given project.
 *
 * @generated from message google.storage.v2.ListHmacKeysRequest
 */
export type ListHmacKeysRequest = Message<"google.storage.v2.ListHmacKeysRequest"> & {
  /**
   * Required. The project to list HMAC keys for, in the format of
   * "projects/{projectIdentifier}".
   * {projectIdentifier} can be the project ID or project number.
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * The maximum number of keys to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A previously returned token from ListHmacKeysResponse to get the next page.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * If set, filters to only return HMAC keys for specified service account.
   *
   * @generated from field: string service_account_email = 4;
   */
  serviceAccountEmail: string;

  /**
   * If set, return deleted keys that have not yet been wiped out.
   *
   * @generated from field: bool show_deleted_keys = 5;
   */
  showDeletedKeys: boolean;
};

/**
 * Describes the message google.storage.v2.ListHmacKeysRequest.
 * Use `create(ListHmacKeysRequestSchema)` to create a new message.
 */
export const ListHmacKeysRequestSchema: GenMessage<ListHmacKeysRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 34);

/**
 * Hmac key list response with next page information.
 *
 * @generated from message google.storage.v2.ListHmacKeysResponse
 */
export type ListHmacKeysResponse = Message<"google.storage.v2.ListHmacKeysResponse"> & {
  /**
   * The list of items.
   *
   * @generated from field: repeated google.storage.v2.HmacKeyMetadata hmac_keys = 1;
   */
  hmacKeys: HmacKeyMetadata[];

  /**
   * The continuation token, used to page through large result sets. Provide
   * this value in a subsequent request to return the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.storage.v2.ListHmacKeysResponse.
 * Use `create(ListHmacKeysResponseSchema)` to create a new message.
 */
export const ListHmacKeysResponseSchema: GenMessage<ListHmacKeysResponse> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 35);

/**
 * Request object to update an HMAC key state.
 * HmacKeyMetadata.state is required and the only writable field in
 * UpdateHmacKey operation. Specifying fields other than state will result in an
 * error.
 *
 * @generated from message google.storage.v2.UpdateHmacKeyRequest
 */
export type UpdateHmacKeyRequest = Message<"google.storage.v2.UpdateHmacKeyRequest"> & {
  /**
   * Required. The HMAC key to update.
   * If present, the hmac_key's `id` field will be used to identify the key.
   * Otherwise, the hmac_key's access_id and project fields will be used to
   * identify the key.
   *
   * @generated from field: google.storage.v2.HmacKeyMetadata hmac_key = 1;
   */
  hmacKey?: HmacKeyMetadata;

  /**
   * Update mask for hmac_key.
   * Not specifying any fields will mean only the `state` field is updated to
   * the value specified in `hmac_key`.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.storage.v2.UpdateHmacKeyRequest.
 * Use `create(UpdateHmacKeyRequestSchema)` to create a new message.
 */
export const UpdateHmacKeyRequestSchema: GenMessage<UpdateHmacKeyRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 36);

/**
 * Hmac Key Metadata, which includes all information other than the secret.
 *
 * @generated from message google.storage.v2.HmacKeyMetadata
 */
export type HmacKeyMetadata = Message<"google.storage.v2.HmacKeyMetadata"> & {
  /**
   * Immutable. Resource name ID of the key in the format
   * {projectIdentifier}/{accessId}.
   * {projectIdentifier} can be the project ID or project number.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Immutable. Globally unique id for keys.
   *
   * @generated from field: string access_id = 2;
   */
  accessId: string;

  /**
   * Immutable. Identifies the project that owns the service account of the
   * specified HMAC key, in the format "projects/{projectIdentifier}".
   * {projectIdentifier} can be the project ID or project number.
   *
   * @generated from field: string project = 3;
   */
  project: string;

  /**
   * Output only. Email of the service account the key authenticates as.
   *
   * @generated from field: string service_account_email = 4;
   */
  serviceAccountEmail: string;

  /**
   * Optional. State of the key. One of ACTIVE, INACTIVE, or DELETED.
   * Writable, can be updated by UpdateHmacKey operation.
   *
   * @generated from field: string state = 5;
   */
  state: string;

  /**
   * Output only. The creation time of the HMAC key.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;

  /**
   * Output only. The last modification time of the HMAC key metadata.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 7;
   */
  updateTime?: Timestamp;

  /**
   * Optional. The etag of the HMAC key.
   *
   * @generated from field: string etag = 8;
   */
  etag: string;
};

/**
 * Describes the message google.storage.v2.HmacKeyMetadata.
 * Use `create(HmacKeyMetadataSchema)` to create a new message.
 */
export const HmacKeyMetadataSchema: GenMessage<HmacKeyMetadata> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 37);

/**
 * Parameters that can be passed to any object request.
 *
 * @generated from message google.storage.v2.CommonObjectRequestParams
 */
export type CommonObjectRequestParams = Message<"google.storage.v2.CommonObjectRequestParams"> & {
  /**
   * Encryption algorithm used with the Customer-Supplied Encryption Keys
   * feature.
   *
   * @generated from field: string encryption_algorithm = 1;
   */
  encryptionAlgorithm: string;

  /**
   * Encryption key used with the Customer-Supplied Encryption Keys feature.
   * In raw bytes format (not base64-encoded).
   *
   * @generated from field: bytes encryption_key_bytes = 4;
   */
  encryptionKeyBytes: Uint8Array;

  /**
   * SHA256 hash of encryption key used with the Customer-Supplied Encryption
   * Keys feature.
   *
   * @generated from field: bytes encryption_key_sha256_bytes = 5;
   */
  encryptionKeySha256Bytes: Uint8Array;
};

/**
 * Describes the message google.storage.v2.CommonObjectRequestParams.
 * Use `create(CommonObjectRequestParamsSchema)` to create a new message.
 */
export const CommonObjectRequestParamsSchema: GenMessage<CommonObjectRequestParams> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 38);

/**
 * Shared constants.
 *
 * @generated from message google.storage.v2.ServiceConstants
 */
export type ServiceConstants = Message<"google.storage.v2.ServiceConstants"> & {
};

/**
 * Describes the message google.storage.v2.ServiceConstants.
 * Use `create(ServiceConstantsSchema)` to create a new message.
 */
export const ServiceConstantsSchema: GenMessage<ServiceConstants> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 39);

/**
 * A collection of constant values meaningful to the Storage API.
 *
 * @generated from enum google.storage.v2.ServiceConstants.Values
 */
export enum ServiceConstants_Values {
  /**
   * Unused. Proto3 requires first enum to be 0.
   *
   * @generated from enum value: VALUES_UNSPECIFIED = 0;
   */
  VALUES_UNSPECIFIED = 0,

  /**
   * The maximum size chunk that can will be returned in a single
   * ReadRequest.
   * 2 MiB.
   *
   * @generated from enum value: MAX_READ_CHUNK_BYTES = 2097152;
   */
  MAX_READ_CHUNK_BYTES = 2097152,

  /**
   * The maximum size chunk that can be sent in a single WriteObjectRequest.
   * 2 MiB.
   *
   * @generated from enum value: MAX_WRITE_CHUNK_BYTES = 2097152;
   */
  MAX_WRITE_CHUNK_BYTES = 2097152,

  /**
   * The maximum size of an object in MB - whether written in a single stream
   * or composed from multiple other objects.
   * 5 TiB.
   *
   * @generated from enum value: MAX_OBJECT_SIZE_MB = 5242880;
   */
  MAX_OBJECT_SIZE_MB = 5242880,

  /**
   * The maximum length field name that can be sent in a single
   * custom metadata field.
   * 1 KiB.
   *
   * @generated from enum value: MAX_CUSTOM_METADATA_FIELD_NAME_BYTES = 1024;
   */
  MAX_CUSTOM_METADATA_FIELD_NAME_BYTES = 1024,

  /**
   * The maximum length field value that can be sent in a single
   * custom_metadata field.
   * 4 KiB.
   *
   * @generated from enum value: MAX_CUSTOM_METADATA_FIELD_VALUE_BYTES = 4096;
   */
  MAX_CUSTOM_METADATA_FIELD_VALUE_BYTES = 4096,

  /**
   * The maximum total bytes that can be populated into all field names and
   * values of the custom_metadata for one object.
   * 8 KiB.
   *
   * @generated from enum value: MAX_CUSTOM_METADATA_TOTAL_SIZE_BYTES = 8192;
   */
  MAX_CUSTOM_METADATA_TOTAL_SIZE_BYTES = 8192,

  /**
   * The maximum total bytes that can be populated into all bucket metadata
   * fields.
   * 20 KiB.
   *
   * @generated from enum value: MAX_BUCKET_METADATA_TOTAL_SIZE_BYTES = 20480;
   */
  MAX_BUCKET_METADATA_TOTAL_SIZE_BYTES = 20480,

  /**
   * The maximum number of NotificationConfigs that can be registered
   * for a given bucket.
   *
   * @generated from enum value: MAX_NOTIFICATION_CONFIGS_PER_BUCKET = 100;
   */
  MAX_NOTIFICATION_CONFIGS_PER_BUCKET = 100,

  /**
   * The maximum number of LifecycleRules that can be registered for a given
   * bucket.
   *
   * @generated from enum value: MAX_LIFECYCLE_RULES_PER_BUCKET = 100;
   */
  MAX_LIFECYCLE_RULES_PER_BUCKET = 100,

  /**
   * The maximum number of custom attributes per NotificationConfigs.
   *
   * @generated from enum value: MAX_NOTIFICATION_CUSTOM_ATTRIBUTES = 5;
   */
  MAX_NOTIFICATION_CUSTOM_ATTRIBUTES = 5,

  /**
   * The maximum length of a custom attribute key included in
   * NotificationConfig.
   *
   * @generated from enum value: MAX_NOTIFICATION_CUSTOM_ATTRIBUTE_KEY_LENGTH = 256;
   */
  MAX_NOTIFICATION_CUSTOM_ATTRIBUTE_KEY_LENGTH = 256,

  /**
   * The maximum length of a custom attribute value included in a
   * NotificationConfig.
   *
   * @generated from enum value: MAX_NOTIFICATION_CUSTOM_ATTRIBUTE_VALUE_LENGTH = 1024;
   */
  MAX_NOTIFICATION_CUSTOM_ATTRIBUTE_VALUE_LENGTH = 1024,

  /**
   * The maximum number of key/value entries per bucket label.
   *
   * @generated from enum value: MAX_LABELS_ENTRIES_COUNT = 64;
   */
  MAX_LABELS_ENTRIES_COUNT = 64,

  /**
   * The maximum character length of the key or value in a bucket
   * label map.
   *
   * @generated from enum value: MAX_LABELS_KEY_VALUE_LENGTH = 63;
   */
  MAX_LABELS_KEY_VALUE_LENGTH = 63,

  /**
   * The maximum byte size of the key or value in a bucket label
   * map.
   *
   * @generated from enum value: MAX_LABELS_KEY_VALUE_BYTES = 128;
   */
  MAX_LABELS_KEY_VALUE_BYTES = 128,

  /**
   * The maximum number of object IDs that can be included in a
   * DeleteObjectsRequest.
   *
   * @generated from enum value: MAX_OBJECT_IDS_PER_DELETE_OBJECTS_REQUEST = 1000;
   */
  MAX_OBJECT_IDS_PER_DELETE_OBJECTS_REQUEST = 1000,

  /**
   * The maximum number of days for which a token returned by the
   * GetListObjectsSplitPoints RPC is valid.
   *
   * @generated from enum value: SPLIT_TOKEN_MAX_VALID_DAYS = 14;
   */
  SPLIT_TOKEN_MAX_VALID_DAYS = 14,
}

/**
 * Describes the enum google.storage.v2.ServiceConstants.Values.
 */
export const ServiceConstants_ValuesSchema: GenEnum<ServiceConstants_Values> = /*@__PURE__*/
  enumDesc(file_google_storage_v2_storage, 39, 0);

/**
 * A bucket.
 *
 * @generated from message google.storage.v2.Bucket
 */
export type Bucket = Message<"google.storage.v2.Bucket"> & {
  /**
   * Immutable. The name of the bucket.
   * Format: `projects/{project}/buckets/{bucket}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The user-chosen part of the bucket name. The `{bucket}`
   * portion of the `name` field. For globally unique buckets, this is equal to
   * the "bucket name" of other Cloud Storage APIs. Example: "pub".
   *
   * @generated from field: string bucket_id = 2;
   */
  bucketId: string;

  /**
   * The etag of the bucket.
   * If included in the metadata of an UpdateBucketRequest, the operation will
   * only be performed if the etag matches that of the bucket.
   *
   * @generated from field: string etag = 29;
   */
  etag: string;

  /**
   * Immutable. The project which owns this bucket, in the format of
   * "projects/{projectIdentifier}".
   * {projectIdentifier} can be the project ID or project number.
   *
   * @generated from field: string project = 3;
   */
  project: string;

  /**
   * Output only. The metadata generation of this bucket.
   *
   * @generated from field: int64 metageneration = 4;
   */
  metageneration: bigint;

  /**
   * Immutable. The location of the bucket. Object data for objects in the
   * bucket resides in physical storage within this region.  Defaults to `US`.
   * See the
   * [https://developers.google.com/storage/docs/concepts-techniques#specifyinglocations"][developer's
   * guide] for the authoritative list. Attempting to update this field after
   * the bucket is created will result in an error.
   *
   * @generated from field: string location = 5;
   */
  location: string;

  /**
   * Output only. The location type of the bucket (region, dual-region,
   * multi-region, etc).
   *
   * @generated from field: string location_type = 6;
   */
  locationType: string;

  /**
   * The bucket's default storage class, used whenever no storageClass is
   * specified for a newly-created object. This defines how objects in the
   * bucket are stored and determines the SLA and the cost of storage.
   * If this value is not specified when the bucket is created, it will default
   * to `STANDARD`. For more information, see
   * https://developers.google.com/storage/docs/storage-classes.
   *
   * @generated from field: string storage_class = 7;
   */
  storageClass: string;

  /**
   * The recovery point objective for cross-region replication of the bucket.
   * Applicable only for dual- and multi-region buckets. "DEFAULT" uses default
   * replication. "ASYNC_TURBO" enables turbo replication, valid for dual-region
   * buckets only. If rpo is not specified when the bucket is created, it
   * defaults to "DEFAULT". For more information, see
   * https://cloud.google.com/storage/docs/availability-durability#turbo-replication.
   *
   * @generated from field: string rpo = 27;
   */
  rpo: string;

  /**
   * Access controls on the bucket.
   * If iam_config.uniform_bucket_level_access is enabled on this bucket,
   * requests to set, read, or modify acl is an error.
   *
   * @generated from field: repeated google.storage.v2.BucketAccessControl acl = 8;
   */
  acl: BucketAccessControl[];

  /**
   * Default access controls to apply to new objects when no ACL is provided.
   * If iam_config.uniform_bucket_level_access is enabled on this bucket,
   * requests to set, read, or modify acl is an error.
   *
   * @generated from field: repeated google.storage.v2.ObjectAccessControl default_object_acl = 9;
   */
  defaultObjectAcl: ObjectAccessControl[];

  /**
   * The bucket's lifecycle config. See
   * [https://developers.google.com/storage/docs/lifecycle]Lifecycle Management]
   * for more information.
   *
   * @generated from field: google.storage.v2.Bucket.Lifecycle lifecycle = 10;
   */
  lifecycle?: Bucket_Lifecycle;

  /**
   * Output only. The creation time of the bucket.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 11;
   */
  createTime?: Timestamp;

  /**
   * The bucket's [https://www.w3.org/TR/cors/][Cross-Origin Resource Sharing]
   * (CORS) config.
   *
   * @generated from field: repeated google.storage.v2.Bucket.Cors cors = 12;
   */
  cors: Bucket_Cors[];

  /**
   * Output only. The modification time of the bucket.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 13;
   */
  updateTime?: Timestamp;

  /**
   * The default value for event-based hold on newly created objects in this
   * bucket.  Event-based hold is a way to retain objects indefinitely until an
   * event occurs, signified by the
   * hold's release. After being released, such objects will be subject to
   * bucket-level retention (if any).  One sample use case of this flag is for
   * banks to hold loan documents for at least 3 years after loan is paid in
   * full. Here, bucket-level retention is 3 years and the event is loan being
   * paid in full. In this example, these objects will be held intact for any
   * number of years until the event has occurred (event-based hold on the
   * object is released) and then 3 more years after that. That means retention
   * duration of the objects begins from the moment event-based hold
   * transitioned from true to false.  Objects under event-based hold cannot be
   * deleted, overwritten or archived until the hold is removed.
   *
   * @generated from field: bool default_event_based_hold = 14;
   */
  defaultEventBasedHold: boolean;

  /**
   * User-provided labels, in key/value pairs.
   *
   * @generated from field: map<string, string> labels = 15;
   */
  labels: { [key: string]: string };

  /**
   * The bucket's website config, controlling how the service behaves
   * when accessing bucket contents as a web site. See the
   * [https://cloud.google.com/storage/docs/static-website][Static Website
   * Examples] for more information.
   *
   * @generated from field: google.storage.v2.Bucket.Website website = 16;
   */
  website?: Bucket_Website;

  /**
   * The bucket's versioning config.
   *
   * @generated from field: google.storage.v2.Bucket.Versioning versioning = 17;
   */
  versioning?: Bucket_Versioning;

  /**
   * The bucket's logging config, which defines the destination bucket
   * and name prefix (if any) for the current bucket's logs.
   *
   * @generated from field: google.storage.v2.Bucket.Logging logging = 18;
   */
  logging?: Bucket_Logging;

  /**
   * Output only. The owner of the bucket. This is always the project team's
   * owner group.
   *
   * @generated from field: google.storage.v2.Owner owner = 19;
   */
  owner?: Owner;

  /**
   * Encryption config for a bucket.
   *
   * @generated from field: google.storage.v2.Bucket.Encryption encryption = 20;
   */
  encryption?: Bucket_Encryption;

  /**
   * The bucket's billing config.
   *
   * @generated from field: google.storage.v2.Bucket.Billing billing = 21;
   */
  billing?: Bucket_Billing;

  /**
   * The bucket's retention policy. The retention policy enforces a minimum
   * retention time for all objects contained in the bucket, based on their
   * creation time. Any attempt to overwrite or delete objects younger than the
   * retention period will result in a PERMISSION_DENIED error.  An unlocked
   * retention policy can be modified or removed from the bucket via a
   * storage.buckets.update operation. A locked retention policy cannot be
   * removed or shortened in duration for the lifetime of the bucket.
   * Attempting to remove or decrease period of a locked retention policy will
   * result in a PERMISSION_DENIED error.
   *
   * @generated from field: google.storage.v2.Bucket.RetentionPolicy retention_policy = 22;
   */
  retentionPolicy?: Bucket_RetentionPolicy;

  /**
   * The bucket's IAM config.
   *
   * @generated from field: google.storage.v2.Bucket.IamConfig iam_config = 23;
   */
  iamConfig?: Bucket_IamConfig;

  /**
   * Reserved for future use.
   *
   * @generated from field: bool satisfies_pzs = 25;
   */
  satisfiesPzs: boolean;

  /**
   * Configuration that, if present, specifies the data placement for a
   * [https://cloud.google.com/storage/docs/locations#location-dr][configurable
   * dual-region].
   *
   * @generated from field: google.storage.v2.Bucket.CustomPlacementConfig custom_placement_config = 26;
   */
  customPlacementConfig?: Bucket_CustomPlacementConfig;

  /**
   * The bucket's Autoclass configuration. If there is no configuration, the
   * Autoclass feature will be disabled and have no effect on the bucket.
   *
   * @generated from field: google.storage.v2.Bucket.Autoclass autoclass = 28;
   */
  autoclass?: Bucket_Autoclass;

  /**
   * Optional. The bucket's hierarchical namespace configuration. If there is no
   * configuration, the hierarchical namespace feature will be disabled and have
   * no effect on the bucket.
   *
   * @generated from field: google.storage.v2.Bucket.HierarchicalNamespace hierarchical_namespace = 32;
   */
  hierarchicalNamespace?: Bucket_HierarchicalNamespace;

  /**
   * Optional. The bucket's soft delete policy. The soft delete policy prevents
   * soft-deleted objects from being permanently deleted.
   *
   * @generated from field: google.storage.v2.Bucket.SoftDeletePolicy soft_delete_policy = 31;
   */
  softDeletePolicy?: Bucket_SoftDeletePolicy;
};

/**
 * Describes the message google.storage.v2.Bucket.
 * Use `create(BucketSchema)` to create a new message.
 */
export const BucketSchema: GenMessage<Bucket> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40);

/**
 * Billing properties of a bucket.
 *
 * @generated from message google.storage.v2.Bucket.Billing
 */
export type Bucket_Billing = Message<"google.storage.v2.Bucket.Billing"> & {
  /**
   * When set to true, Requester Pays is enabled for this bucket.
   *
   * @generated from field: bool requester_pays = 1;
   */
  requesterPays: boolean;
};

/**
 * Describes the message google.storage.v2.Bucket.Billing.
 * Use `create(Bucket_BillingSchema)` to create a new message.
 */
export const Bucket_BillingSchema: GenMessage<Bucket_Billing> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 0);

/**
 * Cross-Origin Response sharing (CORS) properties for a bucket.
 * For more on Cloud Storage and CORS, see
 * https://cloud.google.com/storage/docs/cross-origin.
 * For more on CORS in general, see https://tools.ietf.org/html/rfc6454.
 *
 * @generated from message google.storage.v2.Bucket.Cors
 */
export type Bucket_Cors = Message<"google.storage.v2.Bucket.Cors"> & {
  /**
   * The list of Origins eligible to receive CORS response headers. See
   * [https://tools.ietf.org/html/rfc6454][RFC 6454] for more on origins.
   * Note: "*" is permitted in the list of origins, and means "any Origin".
   *
   * @generated from field: repeated string origin = 1;
   */
  origin: string[];

  /**
   * The list of HTTP methods on which to include CORS response headers,
   * (`GET`, `OPTIONS`, `POST`, etc) Note: "*" is permitted in the list of
   * methods, and means "any method".
   *
   * @generated from field: repeated string method = 2;
   */
  method: string[];

  /**
   * The list of HTTP headers other than the
   * [https://www.w3.org/TR/cors/#simple-response-header][simple response
   * headers] to give permission for the user-agent to share across domains.
   *
   * @generated from field: repeated string response_header = 3;
   */
  responseHeader: string[];

  /**
   * The value, in seconds, to return in the
   * [https://www.w3.org/TR/cors/#access-control-max-age-response-header][Access-Control-Max-Age
   * header] used in preflight responses.
   *
   * @generated from field: int32 max_age_seconds = 4;
   */
  maxAgeSeconds: number;
};

/**
 * Describes the message google.storage.v2.Bucket.Cors.
 * Use `create(Bucket_CorsSchema)` to create a new message.
 */
export const Bucket_CorsSchema: GenMessage<Bucket_Cors> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 1);

/**
 * Encryption properties of a bucket.
 *
 * @generated from message google.storage.v2.Bucket.Encryption
 */
export type Bucket_Encryption = Message<"google.storage.v2.Bucket.Encryption"> & {
  /**
   * The name of the Cloud KMS key that will be used to encrypt objects
   * inserted into this bucket, if no encryption method is specified.
   *
   * @generated from field: string default_kms_key = 1;
   */
  defaultKmsKey: string;
};

/**
 * Describes the message google.storage.v2.Bucket.Encryption.
 * Use `create(Bucket_EncryptionSchema)` to create a new message.
 */
export const Bucket_EncryptionSchema: GenMessage<Bucket_Encryption> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 2);

/**
 * Bucket restriction options.
 *
 * @generated from message google.storage.v2.Bucket.IamConfig
 */
export type Bucket_IamConfig = Message<"google.storage.v2.Bucket.IamConfig"> & {
  /**
   * Bucket restriction options currently enforced on the bucket.
   *
   * @generated from field: google.storage.v2.Bucket.IamConfig.UniformBucketLevelAccess uniform_bucket_level_access = 1;
   */
  uniformBucketLevelAccess?: Bucket_IamConfig_UniformBucketLevelAccess;

  /**
   * Whether IAM will enforce public access prevention. Valid values are
   * "enforced" or "inherited".
   *
   * @generated from field: string public_access_prevention = 3;
   */
  publicAccessPrevention: string;
};

/**
 * Describes the message google.storage.v2.Bucket.IamConfig.
 * Use `create(Bucket_IamConfigSchema)` to create a new message.
 */
export const Bucket_IamConfigSchema: GenMessage<Bucket_IamConfig> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 3);

/**
 * Settings for Uniform Bucket level access.
 * See https://cloud.google.com/storage/docs/uniform-bucket-level-access.
 *
 * @generated from message google.storage.v2.Bucket.IamConfig.UniformBucketLevelAccess
 */
export type Bucket_IamConfig_UniformBucketLevelAccess = Message<"google.storage.v2.Bucket.IamConfig.UniformBucketLevelAccess"> & {
  /**
   * If set, access checks only use bucket-level IAM policies or above.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * The deadline time for changing
   * `iam_config.uniform_bucket_level_access.enabled` from `true` to
   * `false`. Mutable until the specified deadline is reached, but not
   * afterward.
   *
   * @generated from field: google.protobuf.Timestamp lock_time = 2;
   */
  lockTime?: Timestamp;
};

/**
 * Describes the message google.storage.v2.Bucket.IamConfig.UniformBucketLevelAccess.
 * Use `create(Bucket_IamConfig_UniformBucketLevelAccessSchema)` to create a new message.
 */
export const Bucket_IamConfig_UniformBucketLevelAccessSchema: GenMessage<Bucket_IamConfig_UniformBucketLevelAccess> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 3, 0);

/**
 * Lifecycle properties of a bucket.
 * For more information, see https://cloud.google.com/storage/docs/lifecycle.
 *
 * @generated from message google.storage.v2.Bucket.Lifecycle
 */
export type Bucket_Lifecycle = Message<"google.storage.v2.Bucket.Lifecycle"> & {
  /**
   * A lifecycle management rule, which is made of an action to take and the
   * condition(s) under which the action will be taken.
   *
   * @generated from field: repeated google.storage.v2.Bucket.Lifecycle.Rule rule = 1;
   */
  rule: Bucket_Lifecycle_Rule[];
};

/**
 * Describes the message google.storage.v2.Bucket.Lifecycle.
 * Use `create(Bucket_LifecycleSchema)` to create a new message.
 */
export const Bucket_LifecycleSchema: GenMessage<Bucket_Lifecycle> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 4);

/**
 * A lifecycle Rule, combining an action to take on an object and a
 * condition which will trigger that action.
 *
 * @generated from message google.storage.v2.Bucket.Lifecycle.Rule
 */
export type Bucket_Lifecycle_Rule = Message<"google.storage.v2.Bucket.Lifecycle.Rule"> & {
  /**
   * The action to take.
   *
   * @generated from field: google.storage.v2.Bucket.Lifecycle.Rule.Action action = 1;
   */
  action?: Bucket_Lifecycle_Rule_Action;

  /**
   * The condition(s) under which the action will be taken.
   *
   * @generated from field: google.storage.v2.Bucket.Lifecycle.Rule.Condition condition = 2;
   */
  condition?: Bucket_Lifecycle_Rule_Condition;
};

/**
 * Describes the message google.storage.v2.Bucket.Lifecycle.Rule.
 * Use `create(Bucket_Lifecycle_RuleSchema)` to create a new message.
 */
export const Bucket_Lifecycle_RuleSchema: GenMessage<Bucket_Lifecycle_Rule> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 4, 0);

/**
 * An action to take on an object.
 *
 * @generated from message google.storage.v2.Bucket.Lifecycle.Rule.Action
 */
export type Bucket_Lifecycle_Rule_Action = Message<"google.storage.v2.Bucket.Lifecycle.Rule.Action"> & {
  /**
   * Type of the action. Currently, only `Delete`, `SetStorageClass`, and
   * `AbortIncompleteMultipartUpload` are supported.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Target storage class. Required iff the type of the action is
   * SetStorageClass.
   *
   * @generated from field: string storage_class = 2;
   */
  storageClass: string;
};

/**
 * Describes the message google.storage.v2.Bucket.Lifecycle.Rule.Action.
 * Use `create(Bucket_Lifecycle_Rule_ActionSchema)` to create a new message.
 */
export const Bucket_Lifecycle_Rule_ActionSchema: GenMessage<Bucket_Lifecycle_Rule_Action> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 4, 0, 0);

/**
 * A condition of an object which triggers some action.
 *
 * @generated from message google.storage.v2.Bucket.Lifecycle.Rule.Condition
 */
export type Bucket_Lifecycle_Rule_Condition = Message<"google.storage.v2.Bucket.Lifecycle.Rule.Condition"> & {
  /**
   * Age of an object (in days). This condition is satisfied when an
   * object reaches the specified age.
   * A value of 0 indicates that all objects immediately match this
   * condition.
   *
   * @generated from field: optional int32 age_days = 1;
   */
  ageDays?: number;

  /**
   * This condition is satisfied when an object is created before midnight
   * of the specified date in UTC.
   *
   * @generated from field: google.type.Date created_before = 2;
   */
  createdBefore?: Date;

  /**
   * Relevant only for versioned objects. If the value is
   * `true`, this condition matches live objects; if the value
   * is `false`, it matches archived objects.
   *
   * @generated from field: optional bool is_live = 3;
   */
  isLive?: boolean;

  /**
   * Relevant only for versioned objects. If the value is N, this
   * condition is satisfied when there are at least N versions (including
   * the live version) newer than this version of the object.
   *
   * @generated from field: optional int32 num_newer_versions = 4;
   */
  numNewerVersions?: number;

  /**
   * Objects having any of the storage classes specified by this condition
   * will be matched. Values include `MULTI_REGIONAL`, `REGIONAL`,
   * `NEARLINE`, `COLDLINE`, `STANDARD`, and
   * `DURABLE_REDUCED_AVAILABILITY`.
   *
   * @generated from field: repeated string matches_storage_class = 5;
   */
  matchesStorageClass: string[];

  /**
   * Number of days that have elapsed since the custom timestamp set on an
   * object.
   * The value of the field must be a nonnegative integer.
   *
   * @generated from field: optional int32 days_since_custom_time = 7;
   */
  daysSinceCustomTime?: number;

  /**
   * An object matches this condition if the custom timestamp set on the
   * object is before the specified date in UTC.
   *
   * @generated from field: google.type.Date custom_time_before = 8;
   */
  customTimeBefore?: Date;

  /**
   * This condition is relevant only for versioned objects. An object
   * version satisfies this condition only if these many days have been
   * passed since it became noncurrent. The value of the field must be a
   * nonnegative integer. If it's zero, the object version will become
   * eligible for Lifecycle action as soon as it becomes noncurrent.
   *
   * @generated from field: optional int32 days_since_noncurrent_time = 9;
   */
  daysSinceNoncurrentTime?: number;

  /**
   * This condition is relevant only for versioned objects. An object
   * version satisfies this condition only if it became noncurrent before
   * the specified date in UTC.
   *
   * @generated from field: google.type.Date noncurrent_time_before = 10;
   */
  noncurrentTimeBefore?: Date;

  /**
   * List of object name prefixes. If any prefix exactly matches the
   * beginning of the object name, the condition evaluates to true.
   *
   * @generated from field: repeated string matches_prefix = 11;
   */
  matchesPrefix: string[];

  /**
   * List of object name suffixes. If any suffix exactly matches the
   * end of the object name, the condition evaluates to true.
   *
   * @generated from field: repeated string matches_suffix = 12;
   */
  matchesSuffix: string[];
};

/**
 * Describes the message google.storage.v2.Bucket.Lifecycle.Rule.Condition.
 * Use `create(Bucket_Lifecycle_Rule_ConditionSchema)` to create a new message.
 */
export const Bucket_Lifecycle_Rule_ConditionSchema: GenMessage<Bucket_Lifecycle_Rule_Condition> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 4, 0, 1);

/**
 * Logging-related properties of a bucket.
 *
 * @generated from message google.storage.v2.Bucket.Logging
 */
export type Bucket_Logging = Message<"google.storage.v2.Bucket.Logging"> & {
  /**
   * The destination bucket where the current bucket's logs should be placed,
   * using path format (like `projects/123456/buckets/foo`).
   *
   * @generated from field: string log_bucket = 1;
   */
  logBucket: string;

  /**
   * A prefix for log object names.
   *
   * @generated from field: string log_object_prefix = 2;
   */
  logObjectPrefix: string;
};

/**
 * Describes the message google.storage.v2.Bucket.Logging.
 * Use `create(Bucket_LoggingSchema)` to create a new message.
 */
export const Bucket_LoggingSchema: GenMessage<Bucket_Logging> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 5);

/**
 * Retention policy properties of a bucket.
 *
 * @generated from message google.storage.v2.Bucket.RetentionPolicy
 */
export type Bucket_RetentionPolicy = Message<"google.storage.v2.Bucket.RetentionPolicy"> & {
  /**
   * Server-determined value that indicates the time from which policy was
   * enforced and effective.
   *
   * @generated from field: google.protobuf.Timestamp effective_time = 1;
   */
  effectiveTime?: Timestamp;

  /**
   * Once locked, an object retention policy cannot be modified.
   *
   * @generated from field: bool is_locked = 2;
   */
  isLocked: boolean;

  /**
   * The duration that objects need to be retained. Retention duration must be
   * greater than zero and less than 100 years. Note that enforcement of
   * retention periods less than a day is not guaranteed. Such periods should
   * only be used for testing purposes. Any `nanos` value specified will be
   * rounded down to the nearest second.
   *
   * @generated from field: google.protobuf.Duration retention_duration = 4;
   */
  retentionDuration?: Duration;
};

/**
 * Describes the message google.storage.v2.Bucket.RetentionPolicy.
 * Use `create(Bucket_RetentionPolicySchema)` to create a new message.
 */
export const Bucket_RetentionPolicySchema: GenMessage<Bucket_RetentionPolicy> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 6);

/**
 * Soft delete policy properties of a bucket.
 *
 * @generated from message google.storage.v2.Bucket.SoftDeletePolicy
 */
export type Bucket_SoftDeletePolicy = Message<"google.storage.v2.Bucket.SoftDeletePolicy"> & {
  /**
   * The period of time that soft-deleted objects in the bucket must be
   * retained and cannot be permanently deleted. The duration must be greater
   * than or equal to 7 days and less than 1 year.
   *
   * @generated from field: optional google.protobuf.Duration retention_duration = 1;
   */
  retentionDuration?: Duration;

  /**
   * Time from which the policy was effective. This is service-provided.
   *
   * @generated from field: optional google.protobuf.Timestamp effective_time = 2;
   */
  effectiveTime?: Timestamp;
};

/**
 * Describes the message google.storage.v2.Bucket.SoftDeletePolicy.
 * Use `create(Bucket_SoftDeletePolicySchema)` to create a new message.
 */
export const Bucket_SoftDeletePolicySchema: GenMessage<Bucket_SoftDeletePolicy> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 7);

/**
 * Properties of a bucket related to versioning.
 * For more on Cloud Storage versioning, see
 * https://cloud.google.com/storage/docs/object-versioning.
 *
 * @generated from message google.storage.v2.Bucket.Versioning
 */
export type Bucket_Versioning = Message<"google.storage.v2.Bucket.Versioning"> & {
  /**
   * While set to true, versioning is fully enabled for this bucket.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.storage.v2.Bucket.Versioning.
 * Use `create(Bucket_VersioningSchema)` to create a new message.
 */
export const Bucket_VersioningSchema: GenMessage<Bucket_Versioning> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 8);

/**
 * Properties of a bucket related to accessing the contents as a static
 * website. For more on hosting a static website via Cloud Storage, see
 * https://cloud.google.com/storage/docs/hosting-static-website.
 *
 * @generated from message google.storage.v2.Bucket.Website
 */
export type Bucket_Website = Message<"google.storage.v2.Bucket.Website"> & {
  /**
   * If the requested object path is missing, the service will ensure the path
   * has a trailing '/', append this suffix, and attempt to retrieve the
   * resulting object. This allows the creation of `index.html`
   * objects to represent directory pages.
   *
   * @generated from field: string main_page_suffix = 1;
   */
  mainPageSuffix: string;

  /**
   * If the requested object path is missing, and any
   * `mainPageSuffix` object is missing, if applicable, the service
   * will return the named object from this bucket as the content for a
   * [https://tools.ietf.org/html/rfc7231#section-6.5.4][404 Not Found]
   * result.
   *
   * @generated from field: string not_found_page = 2;
   */
  notFoundPage: string;
};

/**
 * Describes the message google.storage.v2.Bucket.Website.
 * Use `create(Bucket_WebsiteSchema)` to create a new message.
 */
export const Bucket_WebsiteSchema: GenMessage<Bucket_Website> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 9);

/**
 * Configuration for Custom Dual Regions.  It should specify precisely two
 * eligible regions within the same Multiregion. More information on regions
 * may be found [https://cloud.google.com/storage/docs/locations][here].
 *
 * @generated from message google.storage.v2.Bucket.CustomPlacementConfig
 */
export type Bucket_CustomPlacementConfig = Message<"google.storage.v2.Bucket.CustomPlacementConfig"> & {
  /**
   * List of locations to use for data placement.
   *
   * @generated from field: repeated string data_locations = 1;
   */
  dataLocations: string[];
};

/**
 * Describes the message google.storage.v2.Bucket.CustomPlacementConfig.
 * Use `create(Bucket_CustomPlacementConfigSchema)` to create a new message.
 */
export const Bucket_CustomPlacementConfigSchema: GenMessage<Bucket_CustomPlacementConfig> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 10);

/**
 * Configuration for a bucket's Autoclass feature.
 *
 * @generated from message google.storage.v2.Bucket.Autoclass
 */
export type Bucket_Autoclass = Message<"google.storage.v2.Bucket.Autoclass"> & {
  /**
   * Enables Autoclass.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * Output only. Latest instant at which the `enabled` field was set to true
   * after being disabled/unconfigured or set to false after being enabled. If
   * Autoclass is enabled when the bucket is created, the toggle_time is set
   * to the bucket creation time.
   *
   * @generated from field: google.protobuf.Timestamp toggle_time = 2;
   */
  toggleTime?: Timestamp;

  /**
   * An object in an Autoclass bucket will eventually cool down to the
   * terminal storage class if there is no access to the object.
   * The only valid values are NEARLINE and ARCHIVE.
   *
   * @generated from field: optional string terminal_storage_class = 3;
   */
  terminalStorageClass?: string;

  /**
   * Output only. Latest instant at which the autoclass terminal storage class
   * was updated.
   *
   * @generated from field: optional google.protobuf.Timestamp terminal_storage_class_update_time = 4;
   */
  terminalStorageClassUpdateTime?: Timestamp;
};

/**
 * Describes the message google.storage.v2.Bucket.Autoclass.
 * Use `create(Bucket_AutoclassSchema)` to create a new message.
 */
export const Bucket_AutoclassSchema: GenMessage<Bucket_Autoclass> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 11);

/**
 * Configuration for a bucket's hierarchical namespace feature.
 *
 * @generated from message google.storage.v2.Bucket.HierarchicalNamespace
 */
export type Bucket_HierarchicalNamespace = Message<"google.storage.v2.Bucket.HierarchicalNamespace"> & {
  /**
   * Optional. Enables the hierarchical namespace feature.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message google.storage.v2.Bucket.HierarchicalNamespace.
 * Use `create(Bucket_HierarchicalNamespaceSchema)` to create a new message.
 */
export const Bucket_HierarchicalNamespaceSchema: GenMessage<Bucket_HierarchicalNamespace> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 40, 12);

/**
 * An access-control entry.
 *
 * @generated from message google.storage.v2.BucketAccessControl
 */
export type BucketAccessControl = Message<"google.storage.v2.BucketAccessControl"> & {
  /**
   * The access permission for the entity.
   *
   * @generated from field: string role = 1;
   */
  role: string;

  /**
   * The ID of the access-control entry.
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * The entity holding the permission, in one of the following forms:
   * * `user-{userid}`
   * * `user-{email}`
   * * `group-{groupid}`
   * * `group-{email}`
   * * `domain-{domain}`
   * * `project-{team}-{projectnumber}`
   * * `project-{team}-{projectid}`
   * * `allUsers`
   * * `allAuthenticatedUsers`
   * Examples:
   * * The user `liz@example.com` would be `user-liz@example.com`.
   * * The group `example@googlegroups.com` would be
   * `group-example@googlegroups.com`
   * * All members of the Google Apps for Business domain `example.com` would be
   * `domain-example.com`
   * For project entities, `project-{team}-{projectnumber}` format will be
   * returned on response.
   *
   * @generated from field: string entity = 3;
   */
  entity: string;

  /**
   * Output only. The alternative entity format, if exists. For project
   * entities, `project-{team}-{projectid}` format will be returned on response.
   *
   * @generated from field: string entity_alt = 9;
   */
  entityAlt: string;

  /**
   * The ID for the entity, if any.
   *
   * @generated from field: string entity_id = 4;
   */
  entityId: string;

  /**
   * The etag of the BucketAccessControl.
   * If included in the metadata of an update or delete request message, the
   * operation operation will only be performed if the etag matches that of the
   * bucket's BucketAccessControl.
   *
   * @generated from field: string etag = 8;
   */
  etag: string;

  /**
   * The email address associated with the entity, if any.
   *
   * @generated from field: string email = 5;
   */
  email: string;

  /**
   * The domain associated with the entity, if any.
   *
   * @generated from field: string domain = 6;
   */
  domain: string;

  /**
   * The project team associated with the entity, if any.
   *
   * @generated from field: google.storage.v2.ProjectTeam project_team = 7;
   */
  projectTeam?: ProjectTeam;
};

/**
 * Describes the message google.storage.v2.BucketAccessControl.
 * Use `create(BucketAccessControlSchema)` to create a new message.
 */
export const BucketAccessControlSchema: GenMessage<BucketAccessControl> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 41);

/**
 * Message used to convey content being read or written, along with an optional
 * checksum.
 *
 * @generated from message google.storage.v2.ChecksummedData
 */
export type ChecksummedData = Message<"google.storage.v2.ChecksummedData"> & {
  /**
   * Optional. The data.
   *
   * @generated from field: bytes content = 1;
   */
  content: Uint8Array;

  /**
   * If set, the CRC32C digest of the content field.
   *
   * @generated from field: optional fixed32 crc32c = 2;
   */
  crc32c?: number;
};

/**
 * Describes the message google.storage.v2.ChecksummedData.
 * Use `create(ChecksummedDataSchema)` to create a new message.
 */
export const ChecksummedDataSchema: GenMessage<ChecksummedData> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 42);

/**
 * Message used for storing full (not subrange) object checksums.
 *
 * @generated from message google.storage.v2.ObjectChecksums
 */
export type ObjectChecksums = Message<"google.storage.v2.ObjectChecksums"> & {
  /**
   * CRC32C digest of the object data. Computed by the Cloud Storage service for
   * all written objects.
   * If set in a WriteObjectRequest, service will validate that the stored
   * object matches this checksum.
   *
   * @generated from field: optional fixed32 crc32c = 1;
   */
  crc32c?: number;

  /**
   * 128 bit MD5 hash of the object data.
   * For more information about using the MD5 hash, see
   * [https://cloud.google.com/storage/docs/hashes-etags#json-api][Hashes and
   * ETags: Best Practices].
   * Not all objects will provide an MD5 hash. For example, composite objects
   * provide only crc32c hashes. This value is equivalent to running `cat
   * object.txt | openssl md5 -binary`
   *
   * @generated from field: bytes md5_hash = 2;
   */
  md5Hash: Uint8Array;
};

/**
 * Describes the message google.storage.v2.ObjectChecksums.
 * Use `create(ObjectChecksumsSchema)` to create a new message.
 */
export const ObjectChecksumsSchema: GenMessage<ObjectChecksums> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 43);

/**
 * Describes the Customer-Supplied Encryption Key mechanism used to store an
 * Object's data at rest.
 *
 * @generated from message google.storage.v2.CustomerEncryption
 */
export type CustomerEncryption = Message<"google.storage.v2.CustomerEncryption"> & {
  /**
   * The encryption algorithm.
   *
   * @generated from field: string encryption_algorithm = 1;
   */
  encryptionAlgorithm: string;

  /**
   * SHA256 hash value of the encryption key.
   * In raw bytes format (not base64-encoded).
   *
   * @generated from field: bytes key_sha256_bytes = 3;
   */
  keySha256Bytes: Uint8Array;
};

/**
 * Describes the message google.storage.v2.CustomerEncryption.
 * Use `create(CustomerEncryptionSchema)` to create a new message.
 */
export const CustomerEncryptionSchema: GenMessage<CustomerEncryption> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 44);

/**
 * An object.
 *
 * @generated from message google.storage.v2.Object
 */
export type Object$ = Message<"google.storage.v2.Object"> & {
  /**
   * Immutable. The name of this object. Nearly any sequence of unicode
   * characters is valid. See
   * [Guidelines](https://cloud.google.com/storage/docs/objects#naming).
   * Example: `test.txt`
   * The `name` field by itself does not uniquely identify a Cloud Storage
   * object. A Cloud Storage object is uniquely identified by the tuple of
   * (bucket, object, generation).
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Immutable. The name of the bucket containing this object.
   *
   * @generated from field: string bucket = 2;
   */
  bucket: string;

  /**
   * The etag of the object.
   * If included in the metadata of an update or delete request message, the
   * operation will only be performed if the etag matches that of the live
   * object.
   *
   * @generated from field: string etag = 27;
   */
  etag: string;

  /**
   * Immutable. The content generation of this object. Used for object
   * versioning.
   *
   * @generated from field: int64 generation = 3;
   */
  generation: bigint;

  /**
   * Output only. The version of the metadata for this generation of this
   * object. Used for preconditions and for detecting changes in metadata. A
   * metageneration number is only meaningful in the context of a particular
   * generation of a particular object.
   *
   * @generated from field: int64 metageneration = 4;
   */
  metageneration: bigint;

  /**
   * Storage class of the object.
   *
   * @generated from field: string storage_class = 5;
   */
  storageClass: string;

  /**
   * Output only. Content-Length of the object data in bytes, matching
   * [https://tools.ietf.org/html/rfc7230#section-3.3.2][RFC 7230 §3.3.2].
   *
   * @generated from field: int64 size = 6;
   */
  size: bigint;

  /**
   * Content-Encoding of the object data, matching
   * [https://tools.ietf.org/html/rfc7231#section-3.1.2.2][RFC 7231 §3.1.2.2]
   *
   * @generated from field: string content_encoding = 7;
   */
  contentEncoding: string;

  /**
   * Content-Disposition of the object data, matching
   * [https://tools.ietf.org/html/rfc6266][RFC 6266].
   *
   * @generated from field: string content_disposition = 8;
   */
  contentDisposition: string;

  /**
   * Cache-Control directive for the object data, matching
   * [https://tools.ietf.org/html/rfc7234#section-5.2"][RFC 7234 §5.2].
   * If omitted, and the object is accessible to all anonymous users, the
   * default will be `public, max-age=3600`.
   *
   * @generated from field: string cache_control = 9;
   */
  cacheControl: string;

  /**
   * Access controls on the object.
   * If iam_config.uniform_bucket_level_access is enabled on the parent
   * bucket, requests to set, read, or modify acl is an error.
   *
   * @generated from field: repeated google.storage.v2.ObjectAccessControl acl = 10;
   */
  acl: ObjectAccessControl[];

  /**
   * Content-Language of the object data, matching
   * [https://tools.ietf.org/html/rfc7231#section-3.1.3.2][RFC 7231 §3.1.3.2].
   *
   * @generated from field: string content_language = 11;
   */
  contentLanguage: string;

  /**
   * Output only. If this object is noncurrent, this is the time when the object
   * became noncurrent.
   *
   * @generated from field: google.protobuf.Timestamp delete_time = 12;
   */
  deleteTime?: Timestamp;

  /**
   * Content-Type of the object data, matching
   * [https://tools.ietf.org/html/rfc7231#section-3.1.1.5][RFC 7231 §3.1.1.5].
   * If an object is stored without a Content-Type, it is served as
   * `application/octet-stream`.
   *
   * @generated from field: string content_type = 13;
   */
  contentType: string;

  /**
   * Output only. The creation time of the object.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 14;
   */
  createTime?: Timestamp;

  /**
   * Output only. Number of underlying components that make up this object.
   * Components are accumulated by compose operations.
   *
   * @generated from field: int32 component_count = 15;
   */
  componentCount: number;

  /**
   * Output only. Hashes for the data part of this object. This field is used
   * for output only and will be silently ignored if provided in requests. The
   * checksums of the complete object regardless of data range. If the object is
   * downloaded in full, the client should compute one of these checksums over
   * the downloaded object and compare it against the value provided here.
   *
   * @generated from field: google.storage.v2.ObjectChecksums checksums = 16;
   */
  checksums?: ObjectChecksums;

  /**
   * Output only. The modification time of the object metadata.
   * Set initially to object creation time and then updated whenever any
   * metadata of the object changes. This includes changes made by a requester,
   * such as modifying custom metadata, as well as changes made by Cloud Storage
   * on behalf of a requester, such as changing the storage class based on an
   * Object Lifecycle Configuration.
   *
   * @generated from field: google.protobuf.Timestamp update_time = 17;
   */
  updateTime?: Timestamp;

  /**
   * Cloud KMS Key used to encrypt this object, if the object is encrypted by
   * such a key.
   *
   * @generated from field: string kms_key = 18;
   */
  kmsKey: string;

  /**
   * Output only. The time at which the object's storage class was last changed.
   * When the object is initially created, it will be set to time_created.
   *
   * @generated from field: google.protobuf.Timestamp update_storage_class_time = 19;
   */
  updateStorageClassTime?: Timestamp;

  /**
   * Whether an object is under temporary hold. While this flag is set to true,
   * the object is protected against deletion and overwrites.  A common use case
   * of this flag is regulatory investigations where objects need to be retained
   * while the investigation is ongoing. Note that unlike event-based hold,
   * temporary hold does not impact retention expiration time of an object.
   *
   * @generated from field: bool temporary_hold = 20;
   */
  temporaryHold: boolean;

  /**
   * A server-determined value that specifies the earliest time that the
   * object's retention period expires.
   * Note 1: This field is not provided for objects with an active event-based
   * hold, since retention expiration is unknown until the hold is removed.
   * Note 2: This value can be provided even when temporary hold is set (so that
   * the user can reason about policy without having to first unset the
   * temporary hold).
   *
   * @generated from field: google.protobuf.Timestamp retention_expire_time = 21;
   */
  retentionExpireTime?: Timestamp;

  /**
   * User-provided metadata, in key/value pairs.
   *
   * @generated from field: map<string, string> metadata = 22;
   */
  metadata: { [key: string]: string };

  /**
   * Whether an object is under event-based hold.
   * An event-based hold is a way to force the retention of an object until
   * after some event occurs. Once the hold is released by explicitly setting
   * this field to false, the object will become subject to any bucket-level
   * retention policy, except that the retention duration will be calculated
   * from the time the event based hold was lifted, rather than the time the
   * object was created.
   *
   * In a WriteObject request, not setting this field implies that the value
   * should be taken from the parent bucket's "default_event_based_hold" field.
   * In a response, this field will always be set to true or false.
   *
   * @generated from field: optional bool event_based_hold = 23;
   */
  eventBasedHold?: boolean;

  /**
   * Output only. The owner of the object. This will always be the uploader of
   * the object.
   *
   * @generated from field: google.storage.v2.Owner owner = 24;
   */
  owner?: Owner;

  /**
   * Metadata of Customer-Supplied Encryption Key, if the object is encrypted by
   * such a key.
   *
   * @generated from field: google.storage.v2.CustomerEncryption customer_encryption = 25;
   */
  customerEncryption?: CustomerEncryption;

  /**
   * A user-specified timestamp set on an object.
   *
   * @generated from field: google.protobuf.Timestamp custom_time = 26;
   */
  customTime?: Timestamp;

  /**
   * Output only. This is the time when the object became soft-deleted.
   *
   * Soft-deleted objects are only accessible if a soft_delete_policy is
   * enabled. Also see hard_delete_time.
   *
   * @generated from field: optional google.protobuf.Timestamp soft_delete_time = 28;
   */
  softDeleteTime?: Timestamp;

  /**
   * Output only. The time when the object will be permanently deleted.
   *
   * Only set when an object becomes soft-deleted with a soft_delete_policy.
   * Otherwise, the object will not be accessible.
   *
   * @generated from field: optional google.protobuf.Timestamp hard_delete_time = 29;
   */
  hardDeleteTime?: Timestamp;
};

/**
 * Describes the message google.storage.v2.Object.
 * Use `create(ObjectSchema)` to create a new message.
 */
export const ObjectSchema: GenMessage<Object$> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 45);

/**
 * An access-control entry.
 *
 * @generated from message google.storage.v2.ObjectAccessControl
 */
export type ObjectAccessControl = Message<"google.storage.v2.ObjectAccessControl"> & {
  /**
   * The access permission for the entity. One of the following values:
   * * `READER`
   * * `WRITER`
   * * `OWNER`
   *
   * @generated from field: string role = 1;
   */
  role: string;

  /**
   * The ID of the access-control entry.
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * The entity holding the permission, in one of the following forms:
   * * `user-{userid}`
   * * `user-{email}`
   * * `group-{groupid}`
   * * `group-{email}`
   * * `domain-{domain}`
   * * `project-{team}-{projectnumber}`
   * * `project-{team}-{projectid}`
   * * `allUsers`
   * * `allAuthenticatedUsers`
   * Examples:
   * * The user `liz@example.com` would be `user-liz@example.com`.
   * * The group `example@googlegroups.com` would be
   * `group-example@googlegroups.com`.
   * * All members of the Google Apps for Business domain `example.com` would be
   * `domain-example.com`.
   * For project entities, `project-{team}-{projectnumber}` format will be
   * returned on response.
   *
   * @generated from field: string entity = 3;
   */
  entity: string;

  /**
   * Output only. The alternative entity format, if exists. For project
   * entities, `project-{team}-{projectid}` format will be returned on response.
   *
   * @generated from field: string entity_alt = 9;
   */
  entityAlt: string;

  /**
   * The ID for the entity, if any.
   *
   * @generated from field: string entity_id = 4;
   */
  entityId: string;

  /**
   * The etag of the ObjectAccessControl.
   * If included in the metadata of an update or delete request message, the
   * operation will only be performed if the etag matches that of the live
   * object's ObjectAccessControl.
   *
   * @generated from field: string etag = 8;
   */
  etag: string;

  /**
   * The email address associated with the entity, if any.
   *
   * @generated from field: string email = 5;
   */
  email: string;

  /**
   * The domain associated with the entity, if any.
   *
   * @generated from field: string domain = 6;
   */
  domain: string;

  /**
   * The project team associated with the entity, if any.
   *
   * @generated from field: google.storage.v2.ProjectTeam project_team = 7;
   */
  projectTeam?: ProjectTeam;
};

/**
 * Describes the message google.storage.v2.ObjectAccessControl.
 * Use `create(ObjectAccessControlSchema)` to create a new message.
 */
export const ObjectAccessControlSchema: GenMessage<ObjectAccessControl> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 46);

/**
 * The result of a call to Objects.ListObjects
 *
 * @generated from message google.storage.v2.ListObjectsResponse
 */
export type ListObjectsResponse = Message<"google.storage.v2.ListObjectsResponse"> & {
  /**
   * The list of items.
   *
   * @generated from field: repeated google.storage.v2.Object objects = 1;
   */
  objects: Object$[];

  /**
   * The list of prefixes of objects matching-but-not-listed up to and including
   * the requested delimiter.
   *
   * @generated from field: repeated string prefixes = 2;
   */
  prefixes: string[];

  /**
   * The continuation token, used to page through large result sets. Provide
   * this value in a subsequent request to return the next page of results.
   *
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.storage.v2.ListObjectsResponse.
 * Use `create(ListObjectsResponseSchema)` to create a new message.
 */
export const ListObjectsResponseSchema: GenMessage<ListObjectsResponse> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 47);

/**
 * Represents the Viewers, Editors, or Owners of a given project.
 *
 * @generated from message google.storage.v2.ProjectTeam
 */
export type ProjectTeam = Message<"google.storage.v2.ProjectTeam"> & {
  /**
   * The project number.
   *
   * @generated from field: string project_number = 1;
   */
  projectNumber: string;

  /**
   * The team.
   *
   * @generated from field: string team = 2;
   */
  team: string;
};

/**
 * Describes the message google.storage.v2.ProjectTeam.
 * Use `create(ProjectTeamSchema)` to create a new message.
 */
export const ProjectTeamSchema: GenMessage<ProjectTeam> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 48);

/**
 * The owner of a specific resource.
 *
 * @generated from message google.storage.v2.Owner
 */
export type Owner = Message<"google.storage.v2.Owner"> & {
  /**
   * The entity, in the form `user-`*userId*.
   *
   * @generated from field: string entity = 1;
   */
  entity: string;

  /**
   * The ID for the entity.
   *
   * @generated from field: string entity_id = 2;
   */
  entityId: string;
};

/**
 * Describes the message google.storage.v2.Owner.
 * Use `create(OwnerSchema)` to create a new message.
 */
export const OwnerSchema: GenMessage<Owner> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 49);

/**
 * Specifies a requested range of bytes to download.
 *
 * @generated from message google.storage.v2.ContentRange
 */
export type ContentRange = Message<"google.storage.v2.ContentRange"> & {
  /**
   * The starting offset of the object data. This value is inclusive.
   *
   * @generated from field: int64 start = 1;
   */
  start: bigint;

  /**
   * The ending offset of the object data. This value is exclusive.
   *
   * @generated from field: int64 end = 2;
   */
  end: bigint;

  /**
   * The complete length of the object data.
   *
   * @generated from field: int64 complete_length = 3;
   */
  completeLength: bigint;
};

/**
 * Describes the message google.storage.v2.ContentRange.
 * Use `create(ContentRangeSchema)` to create a new message.
 */
export const ContentRangeSchema: GenMessage<ContentRange> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 50);

/**
 * Request message for DeleteNotificationConfig.
 *
 * @generated from message google.storage.v2.DeleteNotificationConfigRequest
 */
export type DeleteNotificationConfigRequest = Message<"google.storage.v2.DeleteNotificationConfigRequest"> & {
  /**
   * Required. The parent bucket of the NotificationConfig.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.storage.v2.DeleteNotificationConfigRequest.
 * Use `create(DeleteNotificationConfigRequestSchema)` to create a new message.
 */
export const DeleteNotificationConfigRequestSchema: GenMessage<DeleteNotificationConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 51);

/**
 * Request message for GetNotificationConfig.
 *
 * @generated from message google.storage.v2.GetNotificationConfigRequest
 */
export type GetNotificationConfigRequest = Message<"google.storage.v2.GetNotificationConfigRequest"> & {
  /**
   * Required. The parent bucket of the NotificationConfig.
   * Format:
   * `projects/{project}/buckets/{bucket}/notificationConfigs/{notificationConfig}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.storage.v2.GetNotificationConfigRequest.
 * Use `create(GetNotificationConfigRequestSchema)` to create a new message.
 */
export const GetNotificationConfigRequestSchema: GenMessage<GetNotificationConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 52);

/**
 * Request message for CreateNotificationConfig.
 *
 * @generated from message google.storage.v2.CreateNotificationConfigRequest
 */
export type CreateNotificationConfigRequest = Message<"google.storage.v2.CreateNotificationConfigRequest"> & {
  /**
   * Required. The bucket to which this NotificationConfig belongs.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Properties of the NotificationConfig to be inserted.
   *
   * @generated from field: google.storage.v2.NotificationConfig notification_config = 2;
   */
  notificationConfig?: NotificationConfig;
};

/**
 * Describes the message google.storage.v2.CreateNotificationConfigRequest.
 * Use `create(CreateNotificationConfigRequestSchema)` to create a new message.
 */
export const CreateNotificationConfigRequestSchema: GenMessage<CreateNotificationConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 53);

/**
 * Request message for ListNotifications.
 *
 * @generated from message google.storage.v2.ListNotificationConfigsRequest
 */
export type ListNotificationConfigsRequest = Message<"google.storage.v2.ListNotificationConfigsRequest"> & {
  /**
   * Required. Name of a Google Cloud Storage bucket.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of NotificationConfigs to return. The service
   * may return fewer than this value. The default value is 100. Specifying a
   * value above 100 will result in a page_size of 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A page token, received from a previous `ListNotificationConfigs`
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListNotificationConfigs`
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.storage.v2.ListNotificationConfigsRequest.
 * Use `create(ListNotificationConfigsRequestSchema)` to create a new message.
 */
export const ListNotificationConfigsRequestSchema: GenMessage<ListNotificationConfigsRequest> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 54);

/**
 * The result of a call to ListNotificationConfigs
 *
 * @generated from message google.storage.v2.ListNotificationConfigsResponse
 */
export type ListNotificationConfigsResponse = Message<"google.storage.v2.ListNotificationConfigsResponse"> & {
  /**
   * The list of items.
   *
   * @generated from field: repeated google.storage.v2.NotificationConfig notification_configs = 1;
   */
  notificationConfigs: NotificationConfig[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.storage.v2.ListNotificationConfigsResponse.
 * Use `create(ListNotificationConfigsResponseSchema)` to create a new message.
 */
export const ListNotificationConfigsResponseSchema: GenMessage<ListNotificationConfigsResponse> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 55);

/**
 * A directive to publish Pub/Sub notifications upon changes to a bucket.
 *
 * @generated from message google.storage.v2.NotificationConfig
 */
export type NotificationConfig = Message<"google.storage.v2.NotificationConfig"> & {
  /**
   * Required. The resource name of this NotificationConfig.
   * Format:
   * `projects/{project}/buckets/{bucket}/notificationConfigs/{notificationConfig}`
   * The `{project}` portion may be `_` for globally unique buckets.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The Pub/Sub topic to which this subscription publishes. Formatted
   * as:
   * '//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}'
   *
   * @generated from field: string topic = 2;
   */
  topic: string;

  /**
   * Optional. The etag of the NotificationConfig.
   * If included in the metadata of GetNotificationConfigRequest, the operation
   * will only be performed if the etag matches that of the NotificationConfig.
   *
   * @generated from field: string etag = 7;
   */
  etag: string;

  /**
   * Optional. If present, only send notifications about listed event types. If
   * empty, sent notifications for all event types.
   *
   * @generated from field: repeated string event_types = 3;
   */
  eventTypes: string[];

  /**
   * Optional. A list of additional attributes to attach to each Pub/Sub
   * message published for this NotificationConfig.
   *
   * @generated from field: map<string, string> custom_attributes = 4;
   */
  customAttributes: { [key: string]: string };

  /**
   * Optional. If present, only apply this NotificationConfig to object names
   * that begin with this prefix.
   *
   * @generated from field: string object_name_prefix = 5;
   */
  objectNamePrefix: string;

  /**
   * Required. The desired content of the Payload.
   *
   * @generated from field: string payload_format = 6;
   */
  payloadFormat: string;
};

/**
 * Describes the message google.storage.v2.NotificationConfig.
 * Use `create(NotificationConfigSchema)` to create a new message.
 */
export const NotificationConfigSchema: GenMessage<NotificationConfig> = /*@__PURE__*/
  messageDesc(file_google_storage_v2_storage, 56);

/**
 * ## API Overview and Naming Syntax
 *
 * The Cloud Storage gRPC API allows applications to read and write data through
 * the abstractions of buckets and objects. For a description of these
 * abstractions please see https://cloud.google.com/storage/docs.
 *
 * Resources are named as follows:
 *   - Projects are referred to as they are defined by the Resource Manager API,
 *     using strings like `projects/123456` or `projects/my-string-id`.
 *   - Buckets are named using string names of the form:
 *     `projects/{project}/buckets/{bucket}`
 *     For globally unique buckets, `_` may be substituted for the project.
 *   - Objects are uniquely identified by their name along with the name of the
 *     bucket they belong to, as separate strings in this API. For example:
 *
 *       ReadObjectRequest {
 *         bucket: 'projects/_/buckets/my-bucket'
 *         object: 'my-object'
 *       }
 *     Note that object names can contain `/` characters, which are treated as
 *     any other character (no special directory semantics).
 *
 * @generated from service google.storage.v2.Storage
 */
export const Storage: GenService<{
  /**
   * Permanently deletes an empty bucket.
   *
   * @generated from rpc google.storage.v2.Storage.DeleteBucket
   */
  deleteBucket: {
    methodKind: "unary";
    input: typeof DeleteBucketRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Returns metadata for the specified bucket.
   *
   * @generated from rpc google.storage.v2.Storage.GetBucket
   */
  getBucket: {
    methodKind: "unary";
    input: typeof GetBucketRequestSchema;
    output: typeof BucketSchema;
  },
  /**
   * Creates a new bucket.
   *
   * @generated from rpc google.storage.v2.Storage.CreateBucket
   */
  createBucket: {
    methodKind: "unary";
    input: typeof CreateBucketRequestSchema;
    output: typeof BucketSchema;
  },
  /**
   * Retrieves a list of buckets for a given project.
   *
   * @generated from rpc google.storage.v2.Storage.ListBuckets
   */
  listBuckets: {
    methodKind: "unary";
    input: typeof ListBucketsRequestSchema;
    output: typeof ListBucketsResponseSchema;
  },
  /**
   * Locks retention policy on a bucket.
   *
   * @generated from rpc google.storage.v2.Storage.LockBucketRetentionPolicy
   */
  lockBucketRetentionPolicy: {
    methodKind: "unary";
    input: typeof LockBucketRetentionPolicyRequestSchema;
    output: typeof BucketSchema;
  },
  /**
   * Gets the IAM policy for a specified bucket.
   * The `resource` field in the request should be
   * `projects/_/buckets/{bucket}`.
   *
   * @generated from rpc google.storage.v2.Storage.GetIamPolicy
   */
  getIamPolicy: {
    methodKind: "unary";
    input: typeof GetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Updates an IAM policy for the specified bucket.
   * The `resource` field in the request should be
   * `projects/_/buckets/{bucket}`.
   *
   * @generated from rpc google.storage.v2.Storage.SetIamPolicy
   */
  setIamPolicy: {
    methodKind: "unary";
    input: typeof SetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Tests a set of permissions on the given bucket, object, or managed folder
   * to see which, if any, are held by the caller.
   * The `resource` field in the request should be
   * `projects/_/buckets/{bucket}` for a bucket,
   * `projects/_/buckets/{bucket}/objects/{object}` for an object, or
   * `projects/_/buckets/{bucket}/managedFolders/{managedFolder}`
   * for a managed folder.
   *
   * @generated from rpc google.storage.v2.Storage.TestIamPermissions
   */
  testIamPermissions: {
    methodKind: "unary";
    input: typeof TestIamPermissionsRequestSchema;
    output: typeof TestIamPermissionsResponseSchema;
  },
  /**
   * Updates a bucket. Equivalent to JSON API's storage.buckets.patch method.
   *
   * @generated from rpc google.storage.v2.Storage.UpdateBucket
   */
  updateBucket: {
    methodKind: "unary";
    input: typeof UpdateBucketRequestSchema;
    output: typeof BucketSchema;
  },
  /**
   * Concatenates a list of existing objects into a new object in the same
   * bucket.
   *
   * @generated from rpc google.storage.v2.Storage.ComposeObject
   */
  composeObject: {
    methodKind: "unary";
    input: typeof ComposeObjectRequestSchema;
    output: typeof ObjectSchema;
  },
  /**
   * Deletes an object and its metadata.
   *
   * Deletions are normally permanent when versioning is disabled or whenever
   * the generation parameter is used. However, if soft delete is enabled for
   * the bucket, deleted objects can be restored using RestoreObject until the
   * soft delete retention period has passed.
   *
   * @generated from rpc google.storage.v2.Storage.DeleteObject
   */
  deleteObject: {
    methodKind: "unary";
    input: typeof DeleteObjectRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Restores a soft-deleted object.
   *
   * @generated from rpc google.storage.v2.Storage.RestoreObject
   */
  restoreObject: {
    methodKind: "unary";
    input: typeof RestoreObjectRequestSchema;
    output: typeof ObjectSchema;
  },
  /**
   * Cancels an in-progress resumable upload.
   *
   * Any attempts to write to the resumable upload after cancelling the upload
   * will fail.
   *
   * The behavior for currently in progress write operations is not guaranteed -
   * they could either complete before the cancellation or fail if the
   * cancellation completes first.
   *
   * @generated from rpc google.storage.v2.Storage.CancelResumableWrite
   */
  cancelResumableWrite: {
    methodKind: "unary";
    input: typeof CancelResumableWriteRequestSchema;
    output: typeof CancelResumableWriteResponseSchema;
  },
  /**
   * Retrieves an object's metadata.
   *
   * @generated from rpc google.storage.v2.Storage.GetObject
   */
  getObject: {
    methodKind: "unary";
    input: typeof GetObjectRequestSchema;
    output: typeof ObjectSchema;
  },
  /**
   * Reads an object's data.
   *
   * @generated from rpc google.storage.v2.Storage.ReadObject
   */
  readObject: {
    methodKind: "server_streaming";
    input: typeof ReadObjectRequestSchema;
    output: typeof ReadObjectResponseSchema;
  },
  /**
   * Updates an object's metadata.
   * Equivalent to JSON API's storage.objects.patch.
   *
   * @generated from rpc google.storage.v2.Storage.UpdateObject
   */
  updateObject: {
    methodKind: "unary";
    input: typeof UpdateObjectRequestSchema;
    output: typeof ObjectSchema;
  },
  /**
   * Stores a new object and metadata.
   *
   * An object can be written either in a single message stream or in a
   * resumable sequence of message streams. To write using a single stream,
   * the client should include in the first message of the stream an
   * `WriteObjectSpec` describing the destination bucket, object, and any
   * preconditions. Additionally, the final message must set 'finish_write' to
   * true, or else it is an error.
   *
   * For a resumable write, the client should instead call
   * `StartResumableWrite()`, populating a `WriteObjectSpec` into that request.
   * They should then attach the returned `upload_id` to the first message of
   * each following call to `WriteObject`. If the stream is closed before
   * finishing the upload (either explicitly by the client or due to a network
   * error or an error response from the server), the client should do as
   * follows:
   *   - Check the result Status of the stream, to determine if writing can be
   *     resumed on this stream or must be restarted from scratch (by calling
   *     `StartResumableWrite()`). The resumable errors are DEADLINE_EXCEEDED,
   *     INTERNAL, and UNAVAILABLE. For each case, the client should use binary
   *     exponential backoff before retrying.  Additionally, writes can be
   *     resumed after RESOURCE_EXHAUSTED errors, but only after taking
   *     appropriate measures, which may include reducing aggregate send rate
   *     across clients and/or requesting a quota increase for your project.
   *   - If the call to `WriteObject` returns `ABORTED`, that indicates
   *     concurrent attempts to update the resumable write, caused either by
   *     multiple racing clients or by a single client where the previous
   *     request was timed out on the client side but nonetheless reached the
   *     server. In this case the client should take steps to prevent further
   *     concurrent writes (e.g., increase the timeouts, stop using more than
   *     one process to perform the upload, etc.), and then should follow the
   *     steps below for resuming the upload.
   *   - For resumable errors, the client should call `QueryWriteStatus()` and
   *     then continue writing from the returned `persisted_size`. This may be
   *     less than the amount of data the client previously sent. Note also that
   *     it is acceptable to send data starting at an offset earlier than the
   *     returned `persisted_size`; in this case, the service will skip data at
   *     offsets that were already persisted (without checking that it matches
   *     the previously written data), and write only the data starting from the
   *     persisted offset. Even though the data isn't written, it may still
   *     incur a performance cost over resuming at the correct write offset.
   *     This behavior can make client-side handling simpler in some cases.
   *   - Clients must only send data that is a multiple of 256 KiB per message,
   *     unless the object is being finished with `finish_write` set to `true`.
   *
   * The service will not view the object as complete until the client has
   * sent a `WriteObjectRequest` with `finish_write` set to `true`. Sending any
   * requests on a stream after sending a request with `finish_write` set to
   * `true` will cause an error. The client **should** check the response it
   * receives to determine how much data the service was able to commit and
   * whether the service views the object as complete.
   *
   * Attempting to resume an already finalized object will result in an OK
   * status, with a WriteObjectResponse containing the finalized object's
   * metadata.
   *
   * Alternatively, the BidiWriteObject operation may be used to write an
   * object with controls over flushing and the ability to fetch the ability to
   * determine the current persisted size.
   *
   * @generated from rpc google.storage.v2.Storage.WriteObject
   */
  writeObject: {
    methodKind: "client_streaming";
    input: typeof WriteObjectRequestSchema;
    output: typeof WriteObjectResponseSchema;
  },
  /**
   * Stores a new object and metadata.
   *
   * This is similar to the WriteObject call with the added support for
   * manual flushing of persisted state, and the ability to determine current
   * persisted size without closing the stream.
   *
   * The client may specify one or both of the `state_lookup` and `flush` fields
   * in each BidiWriteObjectRequest. If `flush` is specified, the data written
   * so far will be persisted to storage. If `state_lookup` is specified, the
   * service will respond with a BidiWriteObjectResponse that contains the
   * persisted size. If both `flush` and `state_lookup` are specified, the flush
   * will always occur before a `state_lookup`, so that both may be set in the
   * same request and the returned state will be the state of the object
   * post-flush. When the stream is closed, a BidiWriteObjectResponse will
   * always be sent to the client, regardless of the value of `state_lookup`.
   *
   * @generated from rpc google.storage.v2.Storage.BidiWriteObject
   */
  bidiWriteObject: {
    methodKind: "bidi_streaming";
    input: typeof BidiWriteObjectRequestSchema;
    output: typeof BidiWriteObjectResponseSchema;
  },
  /**
   * Retrieves a list of objects matching the criteria.
   *
   * @generated from rpc google.storage.v2.Storage.ListObjects
   */
  listObjects: {
    methodKind: "unary";
    input: typeof ListObjectsRequestSchema;
    output: typeof ListObjectsResponseSchema;
  },
  /**
   * Rewrites a source object to a destination object. Optionally overrides
   * metadata.
   *
   * @generated from rpc google.storage.v2.Storage.RewriteObject
   */
  rewriteObject: {
    methodKind: "unary";
    input: typeof RewriteObjectRequestSchema;
    output: typeof RewriteResponseSchema;
  },
  /**
   * Starts a resumable write. How long the write operation remains valid, and
   * what happens when the write operation becomes invalid, are
   * service-dependent.
   *
   * @generated from rpc google.storage.v2.Storage.StartResumableWrite
   */
  startResumableWrite: {
    methodKind: "unary";
    input: typeof StartResumableWriteRequestSchema;
    output: typeof StartResumableWriteResponseSchema;
  },
  /**
   * Determines the `persisted_size` for an object that is being written, which
   * can then be used as the `write_offset` for the next `Write()` call.
   *
   * If the object does not exist (i.e., the object has been deleted, or the
   * first `Write()` has not yet reached the service), this method returns the
   * error `NOT_FOUND`.
   *
   * The client **may** call `QueryWriteStatus()` at any time to determine how
   * much data has been processed for this object. This is useful if the
   * client is buffering data and needs to know which data can be safely
   * evicted. For any sequence of `QueryWriteStatus()` calls for a given
   * object name, the sequence of returned `persisted_size` values will be
   * non-decreasing.
   *
   * @generated from rpc google.storage.v2.Storage.QueryWriteStatus
   */
  queryWriteStatus: {
    methodKind: "unary";
    input: typeof QueryWriteStatusRequestSchema;
    output: typeof QueryWriteStatusResponseSchema;
  },
  /**
   * Retrieves the name of a project's Google Cloud Storage service account.
   *
   * @generated from rpc google.storage.v2.Storage.GetServiceAccount
   * @deprecated
   */
  getServiceAccount: {
    methodKind: "unary";
    input: typeof GetServiceAccountRequestSchema;
    output: typeof ServiceAccountSchema;
  },
  /**
   * Creates a new HMAC key for the given service account.
   *
   * @generated from rpc google.storage.v2.Storage.CreateHmacKey
   * @deprecated
   */
  createHmacKey: {
    methodKind: "unary";
    input: typeof CreateHmacKeyRequestSchema;
    output: typeof CreateHmacKeyResponseSchema;
  },
  /**
   * Deletes a given HMAC key.  Key must be in an INACTIVE state.
   *
   * @generated from rpc google.storage.v2.Storage.DeleteHmacKey
   * @deprecated
   */
  deleteHmacKey: {
    methodKind: "unary";
    input: typeof DeleteHmacKeyRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Gets an existing HMAC key metadata for the given id.
   *
   * @generated from rpc google.storage.v2.Storage.GetHmacKey
   * @deprecated
   */
  getHmacKey: {
    methodKind: "unary";
    input: typeof GetHmacKeyRequestSchema;
    output: typeof HmacKeyMetadataSchema;
  },
  /**
   * Lists HMAC keys under a given project with the additional filters provided.
   *
   * @generated from rpc google.storage.v2.Storage.ListHmacKeys
   * @deprecated
   */
  listHmacKeys: {
    methodKind: "unary";
    input: typeof ListHmacKeysRequestSchema;
    output: typeof ListHmacKeysResponseSchema;
  },
  /**
   * Updates a given HMAC key state between ACTIVE and INACTIVE.
   *
   * @generated from rpc google.storage.v2.Storage.UpdateHmacKey
   * @deprecated
   */
  updateHmacKey: {
    methodKind: "unary";
    input: typeof UpdateHmacKeyRequestSchema;
    output: typeof HmacKeyMetadataSchema;
  },
  /**
   * Permanently deletes a NotificationConfig.
   *
   * @generated from rpc google.storage.v2.Storage.DeleteNotificationConfig
   * @deprecated
   */
  deleteNotificationConfig: {
    methodKind: "unary";
    input: typeof DeleteNotificationConfigRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * View a NotificationConfig.
   *
   * @generated from rpc google.storage.v2.Storage.GetNotificationConfig
   * @deprecated
   */
  getNotificationConfig: {
    methodKind: "unary";
    input: typeof GetNotificationConfigRequestSchema;
    output: typeof NotificationConfigSchema;
  },
  /**
   * Creates a NotificationConfig for a given bucket.
   * These NotificationConfigs, when triggered, publish messages to the
   * specified Pub/Sub topics. See
   * https://cloud.google.com/storage/docs/pubsub-notifications.
   *
   * @generated from rpc google.storage.v2.Storage.CreateNotificationConfig
   * @deprecated
   */
  createNotificationConfig: {
    methodKind: "unary";
    input: typeof CreateNotificationConfigRequestSchema;
    output: typeof NotificationConfigSchema;
  },
  /**
   * Retrieves a list of NotificationConfigs for a given bucket.
   *
   * @generated from rpc google.storage.v2.Storage.ListNotificationConfigs
   * @deprecated
   */
  listNotificationConfigs: {
    methodKind: "unary";
    input: typeof ListNotificationConfigsRequestSchema;
    output: typeof ListNotificationConfigsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_storage_v2_storage, 0);

