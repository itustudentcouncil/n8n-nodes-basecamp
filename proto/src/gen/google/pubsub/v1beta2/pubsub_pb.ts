// Copyright (c) 2015, Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/pubsub/v1beta2/pubsub.proto (package google.pubsub.v1beta2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/pubsub/v1beta2/pubsub.proto.
 */
export const file_google_pubsub_v1beta2_pubsub: GenFile = /*@__PURE__*/
  fileDesc("CiJnb29nbGUvcHVic3ViL3YxYmV0YTIvcHVic3ViLnByb3RvEhVnb29nbGUucHVic3ViLnYxYmV0YTIiFQoFVG9waWMSDAoEbmFtZRgBIAEoCSKuAQoNUHVic3ViTWVzc2FnZRIMCgRkYXRhGAEgASgMEkgKCmF0dHJpYnV0ZXMYAiADKAsyNC5nb29nbGUucHVic3ViLnYxYmV0YTIuUHVic3ViTWVzc2FnZS5BdHRyaWJ1dGVzRW50cnkSEgoKbWVzc2FnZV9pZBgDIAEoCRoxCg9BdHRyaWJ1dGVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASIgCg9HZXRUb3BpY1JlcXVlc3QSDQoFdG9waWMYASABKAkiVwoOUHVibGlzaFJlcXVlc3QSDQoFdG9waWMYASABKAkSNgoIbWVzc2FnZXMYAiADKAsyJC5nb29nbGUucHVic3ViLnYxYmV0YTIuUHVic3ViTWVzc2FnZSImCg9QdWJsaXNoUmVzcG9uc2USEwoLbWVzc2FnZV9pZHMYASADKAkiSwoRTGlzdFRvcGljc1JlcXVlc3QSDwoHcHJvamVjdBgBIAEoCRIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCSJbChJMaXN0VG9waWNzUmVzcG9uc2USLAoGdG9waWNzGAEgAygLMhwuZ29vZ2xlLnB1YnN1Yi52MWJldGEyLlRvcGljEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSJVCh1MaXN0VG9waWNTdWJzY3JpcHRpb25zUmVxdWVzdBINCgV0b3BpYxgBIAEoCRIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCSJQCh5MaXN0VG9waWNTdWJzY3JpcHRpb25zUmVzcG9uc2USFQoNc3Vic2NyaXB0aW9ucxgBIAMoCRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiIwoSRGVsZXRlVG9waWNSZXF1ZXN0Eg0KBXRvcGljGAEgASgJIoEBCgxTdWJzY3JpcHRpb24SDAoEbmFtZRgBIAEoCRINCgV0b3BpYxgCIAEoCRI2CgtwdXNoX2NvbmZpZxgEIAEoCzIhLmdvb2dsZS5wdWJzdWIudjFiZXRhMi5QdXNoQ29uZmlnEhwKFGFja19kZWFkbGluZV9zZWNvbmRzGAUgASgFIp0BCgpQdXNoQ29uZmlnEhUKDXB1c2hfZW5kcG9pbnQYASABKAkSRQoKYXR0cmlidXRlcxgCIAMoCzIxLmdvb2dsZS5wdWJzdWIudjFiZXRhMi5QdXNoQ29uZmlnLkF0dHJpYnV0ZXNFbnRyeRoxCg9BdHRyaWJ1dGVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJYCg9SZWNlaXZlZE1lc3NhZ2USDgoGYWNrX2lkGAEgASgJEjUKB21lc3NhZ2UYAiABKAsyJC5nb29nbGUucHVic3ViLnYxYmV0YTIuUHVic3ViTWVzc2FnZSIuChZHZXRTdWJzY3JpcHRpb25SZXF1ZXN0EhQKDHN1YnNjcmlwdGlvbhgBIAEoCSJSChhMaXN0U3Vic2NyaXB0aW9uc1JlcXVlc3QSDwoHcHJvamVjdBgBIAEoCRIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCSJwChlMaXN0U3Vic2NyaXB0aW9uc1Jlc3BvbnNlEjoKDXN1YnNjcmlwdGlvbnMYASADKAsyIy5nb29nbGUucHVic3ViLnYxYmV0YTIuU3Vic2NyaXB0aW9uEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSIxChlEZWxldGVTdWJzY3JpcHRpb25SZXF1ZXN0EhQKDHN1YnNjcmlwdGlvbhgBIAEoCSJnChdNb2RpZnlQdXNoQ29uZmlnUmVxdWVzdBIUCgxzdWJzY3JpcHRpb24YASABKAkSNgoLcHVzaF9jb25maWcYAiABKAsyIS5nb29nbGUucHVic3ViLnYxYmV0YTIuUHVzaENvbmZpZyJVCgtQdWxsUmVxdWVzdBIUCgxzdWJzY3JpcHRpb24YASABKAkSGgoScmV0dXJuX2ltbWVkaWF0ZWx5GAIgASgIEhQKDG1heF9tZXNzYWdlcxgDIAEoBSJRCgxQdWxsUmVzcG9uc2USQQoRcmVjZWl2ZWRfbWVzc2FnZXMYASADKAsyJi5nb29nbGUucHVic3ViLnYxYmV0YTIuUmVjZWl2ZWRNZXNzYWdlIl4KGE1vZGlmeUFja0RlYWRsaW5lUmVxdWVzdBIUCgxzdWJzY3JpcHRpb24YASABKAkSDgoGYWNrX2lkGAIgASgJEhwKFGFja19kZWFkbGluZV9zZWNvbmRzGAMgASgFIjsKEkFja25vd2xlZGdlUmVxdWVzdBIUCgxzdWJzY3JpcHRpb24YASABKAkSDwoHYWNrX2lkcxgCIAMoCTKIBgoKU3Vic2NyaWJlchJeChJDcmVhdGVTdWJzY3JpcHRpb24SIy5nb29nbGUucHVic3ViLnYxYmV0YTIuU3Vic2NyaXB0aW9uGiMuZ29vZ2xlLnB1YnN1Yi52MWJldGEyLlN1YnNjcmlwdGlvbhJlCg9HZXRTdWJzY3JpcHRpb24SLS5nb29nbGUucHVic3ViLnYxYmV0YTIuR2V0U3Vic2NyaXB0aW9uUmVxdWVzdBojLmdvb2dsZS5wdWJzdWIudjFiZXRhMi5TdWJzY3JpcHRpb24SdgoRTGlzdFN1YnNjcmlwdGlvbnMSLy5nb29nbGUucHVic3ViLnYxYmV0YTIuTGlzdFN1YnNjcmlwdGlvbnNSZXF1ZXN0GjAuZ29vZ2xlLnB1YnN1Yi52MWJldGEyLkxpc3RTdWJzY3JpcHRpb25zUmVzcG9uc2USXgoSRGVsZXRlU3Vic2NyaXB0aW9uEjAuZ29vZ2xlLnB1YnN1Yi52MWJldGEyLkRlbGV0ZVN1YnNjcmlwdGlvblJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSXAoRTW9kaWZ5QWNrRGVhZGxpbmUSLy5nb29nbGUucHVic3ViLnYxYmV0YTIuTW9kaWZ5QWNrRGVhZGxpbmVSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5ElAKC0Fja25vd2xlZGdlEikuZ29vZ2xlLnB1YnN1Yi52MWJldGEyLkFja25vd2xlZGdlUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRJPCgRQdWxsEiIuZ29vZ2xlLnB1YnN1Yi52MWJldGEyLlB1bGxSZXF1ZXN0GiMuZ29vZ2xlLnB1YnN1Yi52MWJldGEyLlB1bGxSZXNwb25zZRJaChBNb2RpZnlQdXNoQ29uZmlnEi4uZ29vZ2xlLnB1YnN1Yi52MWJldGEyLk1vZGlmeVB1c2hDb25maWdSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Mr8ECglQdWJsaXNoZXISSQoLQ3JlYXRlVG9waWMSHC5nb29nbGUucHVic3ViLnYxYmV0YTIuVG9waWMaHC5nb29nbGUucHVic3ViLnYxYmV0YTIuVG9waWMSWAoHUHVibGlzaBIlLmdvb2dsZS5wdWJzdWIudjFiZXRhMi5QdWJsaXNoUmVxdWVzdBomLmdvb2dsZS5wdWJzdWIudjFiZXRhMi5QdWJsaXNoUmVzcG9uc2USUAoIR2V0VG9waWMSJi5nb29nbGUucHVic3ViLnYxYmV0YTIuR2V0VG9waWNSZXF1ZXN0GhwuZ29vZ2xlLnB1YnN1Yi52MWJldGEyLlRvcGljEmEKCkxpc3RUb3BpY3MSKC5nb29nbGUucHVic3ViLnYxYmV0YTIuTGlzdFRvcGljc1JlcXVlc3QaKS5nb29nbGUucHVic3ViLnYxYmV0YTIuTGlzdFRvcGljc1Jlc3BvbnNlEoUBChZMaXN0VG9waWNTdWJzY3JpcHRpb25zEjQuZ29vZ2xlLnB1YnN1Yi52MWJldGEyLkxpc3RUb3BpY1N1YnNjcmlwdGlvbnNSZXF1ZXN0GjUuZ29vZ2xlLnB1YnN1Yi52MWJldGEyLkxpc3RUb3BpY1N1YnNjcmlwdGlvbnNSZXNwb25zZRJQCgtEZWxldGVUb3BpYxIpLmdvb2dsZS5wdWJzdWIudjFiZXRhMi5EZWxldGVUb3BpY1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHlCZwoZY29tLmdvb2dsZS5wdWJzdWIudjFiZXRhMkILUHVic3ViUHJvdG9QAVo7Z29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9wdWJzdWIvdjFiZXRhMjtwdWJzdWJiBnByb3RvMw", [file_google_protobuf_empty]);

/**
 * A topic resource.
 *
 * @generated from message google.pubsub.v1beta2.Topic
 */
export type Topic = Message<"google.pubsub.v1beta2.Topic"> & {
  /**
   * Name of the topic.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.pubsub.v1beta2.Topic.
 * Use `create(TopicSchema)` to create a new message.
 */
export const TopicSchema: GenMessage<Topic> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 0);

/**
 * A message data and its attributes.
 *
 * @generated from message google.pubsub.v1beta2.PubsubMessage
 */
export type PubsubMessage = Message<"google.pubsub.v1beta2.PubsubMessage"> & {
  /**
   * The message payload. For JSON requests, the value of this field must be
   * base64-encoded.
   *
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;

  /**
   * Optional attributes for this message.
   *
   * @generated from field: map<string, string> attributes = 2;
   */
  attributes: { [key: string]: string };

  /**
   * ID of this message assigned by the server at publication time. Guaranteed
   * to be unique within the topic. This value may be read by a subscriber
   * that receives a PubsubMessage via a Pull call or a push delivery. It must
   * not be populated by a publisher in a Publish call.
   *
   * @generated from field: string message_id = 3;
   */
  messageId: string;
};

/**
 * Describes the message google.pubsub.v1beta2.PubsubMessage.
 * Use `create(PubsubMessageSchema)` to create a new message.
 */
export const PubsubMessageSchema: GenMessage<PubsubMessage> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 1);

/**
 * Request for the GetTopic method.
 *
 * @generated from message google.pubsub.v1beta2.GetTopicRequest
 */
export type GetTopicRequest = Message<"google.pubsub.v1beta2.GetTopicRequest"> & {
  /**
   * The name of the topic to get.
   *
   * @generated from field: string topic = 1;
   */
  topic: string;
};

/**
 * Describes the message google.pubsub.v1beta2.GetTopicRequest.
 * Use `create(GetTopicRequestSchema)` to create a new message.
 */
export const GetTopicRequestSchema: GenMessage<GetTopicRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 2);

/**
 * Request for the Publish method.
 *
 * @generated from message google.pubsub.v1beta2.PublishRequest
 */
export type PublishRequest = Message<"google.pubsub.v1beta2.PublishRequest"> & {
  /**
   * The messages in the request will be published on this topic.
   *
   * @generated from field: string topic = 1;
   */
  topic: string;

  /**
   * The messages to publish.
   *
   * @generated from field: repeated google.pubsub.v1beta2.PubsubMessage messages = 2;
   */
  messages: PubsubMessage[];
};

/**
 * Describes the message google.pubsub.v1beta2.PublishRequest.
 * Use `create(PublishRequestSchema)` to create a new message.
 */
export const PublishRequestSchema: GenMessage<PublishRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 3);

/**
 * Response for the Publish method.
 *
 * @generated from message google.pubsub.v1beta2.PublishResponse
 */
export type PublishResponse = Message<"google.pubsub.v1beta2.PublishResponse"> & {
  /**
   * The server-assigned ID of each published message, in the same order as
   * the messages in the request. IDs are guaranteed to be unique within
   * the topic.
   *
   * @generated from field: repeated string message_ids = 1;
   */
  messageIds: string[];
};

/**
 * Describes the message google.pubsub.v1beta2.PublishResponse.
 * Use `create(PublishResponseSchema)` to create a new message.
 */
export const PublishResponseSchema: GenMessage<PublishResponse> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 4);

/**
 * Request for the ListTopics method.
 *
 * @generated from message google.pubsub.v1beta2.ListTopicsRequest
 */
export type ListTopicsRequest = Message<"google.pubsub.v1beta2.ListTopicsRequest"> & {
  /**
   * The name of the cloud project that topics belong to.
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * Maximum number of topics to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The value returned by the last ListTopicsResponse; indicates that this is
   * a continuation of a prior ListTopics call, and that the system should
   * return the next page of data.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.pubsub.v1beta2.ListTopicsRequest.
 * Use `create(ListTopicsRequestSchema)` to create a new message.
 */
export const ListTopicsRequestSchema: GenMessage<ListTopicsRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 5);

/**
 * Response for the ListTopics method.
 *
 * @generated from message google.pubsub.v1beta2.ListTopicsResponse
 */
export type ListTopicsResponse = Message<"google.pubsub.v1beta2.ListTopicsResponse"> & {
  /**
   * The resulting topics.
   *
   * @generated from field: repeated google.pubsub.v1beta2.Topic topics = 1;
   */
  topics: Topic[];

  /**
   * If not empty, indicates that there may be more topics that match the
   * request; this value should be passed in a new ListTopicsRequest.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.pubsub.v1beta2.ListTopicsResponse.
 * Use `create(ListTopicsResponseSchema)` to create a new message.
 */
export const ListTopicsResponseSchema: GenMessage<ListTopicsResponse> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 6);

/**
 * Request for the ListTopicSubscriptions method.
 *
 * @generated from message google.pubsub.v1beta2.ListTopicSubscriptionsRequest
 */
export type ListTopicSubscriptionsRequest = Message<"google.pubsub.v1beta2.ListTopicSubscriptionsRequest"> & {
  /**
   * The name of the topic that subscriptions are attached to.
   *
   * @generated from field: string topic = 1;
   */
  topic: string;

  /**
   * Maximum number of subscription names to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The value returned by the last ListTopicSubscriptionsResponse; indicates
   * that this is a continuation of a prior ListTopicSubscriptions call, and
   * that the system should return the next page of data.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.pubsub.v1beta2.ListTopicSubscriptionsRequest.
 * Use `create(ListTopicSubscriptionsRequestSchema)` to create a new message.
 */
export const ListTopicSubscriptionsRequestSchema: GenMessage<ListTopicSubscriptionsRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 7);

/**
 * Response for the ListTopicSubscriptions method.
 *
 * @generated from message google.pubsub.v1beta2.ListTopicSubscriptionsResponse
 */
export type ListTopicSubscriptionsResponse = Message<"google.pubsub.v1beta2.ListTopicSubscriptionsResponse"> & {
  /**
   * The names of the subscriptions that match the request.
   *
   * @generated from field: repeated string subscriptions = 1;
   */
  subscriptions: string[];

  /**
   * If not empty, indicates that there may be more subscriptions that match
   * the request; this value should be passed in a new
   * ListTopicSubscriptionsRequest to get more subscriptions.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.pubsub.v1beta2.ListTopicSubscriptionsResponse.
 * Use `create(ListTopicSubscriptionsResponseSchema)` to create a new message.
 */
export const ListTopicSubscriptionsResponseSchema: GenMessage<ListTopicSubscriptionsResponse> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 8);

/**
 * Request for the DeleteTopic method.
 *
 * @generated from message google.pubsub.v1beta2.DeleteTopicRequest
 */
export type DeleteTopicRequest = Message<"google.pubsub.v1beta2.DeleteTopicRequest"> & {
  /**
   * Name of the topic to delete.
   *
   * @generated from field: string topic = 1;
   */
  topic: string;
};

/**
 * Describes the message google.pubsub.v1beta2.DeleteTopicRequest.
 * Use `create(DeleteTopicRequestSchema)` to create a new message.
 */
export const DeleteTopicRequestSchema: GenMessage<DeleteTopicRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 9);

/**
 * A subscription resource.
 *
 * @generated from message google.pubsub.v1beta2.Subscription
 */
export type Subscription = Message<"google.pubsub.v1beta2.Subscription"> & {
  /**
   * Name of the subscription.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The name of the topic from which this subscription is receiving messages.
   * This will be present if and only if the subscription has not been detached
   * from its topic.
   *
   * @generated from field: string topic = 2;
   */
  topic: string;

  /**
   * If push delivery is used with this subscription, this field is
   * used to configure it. An empty pushConfig signifies that the subscriber
   * will pull and ack messages using API methods.
   *
   * @generated from field: google.pubsub.v1beta2.PushConfig push_config = 4;
   */
  pushConfig?: PushConfig;

  /**
   * This value is the maximum time after a subscriber receives a message
   * before the subscriber should acknowledge the message. After message
   * delivery but before the ack deadline expires and before the message is
   * acknowledged, it is an outstanding message and will not be delivered
   * again during that time (on a best-effort basis).
   *
   * For pull delivery this value
   * is used as the initial value for the ack deadline. It may be overridden
   * for a specific message by calling ModifyAckDeadline.
   *
   * For push delivery, this value is also used to set the request timeout for
   * the call to the push endpoint.
   *
   * If the subscriber never acknowledges the message, the Pub/Sub
   * system will eventually redeliver the message.
   *
   * @generated from field: int32 ack_deadline_seconds = 5;
   */
  ackDeadlineSeconds: number;
};

/**
 * Describes the message google.pubsub.v1beta2.Subscription.
 * Use `create(SubscriptionSchema)` to create a new message.
 */
export const SubscriptionSchema: GenMessage<Subscription> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 10);

/**
 * Configuration for a push delivery endpoint.
 *
 * @generated from message google.pubsub.v1beta2.PushConfig
 */
export type PushConfig = Message<"google.pubsub.v1beta2.PushConfig"> & {
  /**
   * A URL locating the endpoint to which messages should be pushed.
   * For example, a Webhook endpoint might use "https://example.com/push".
   *
   * @generated from field: string push_endpoint = 1;
   */
  pushEndpoint: string;

  /**
   * Endpoint configuration attributes.
   *
   * Every endpoint has a set of API supported attributes that can be used to
   * control different aspects of the message delivery.
   *
   * The currently supported attribute is `x-goog-version`, which you can
   * use to change the format of the push message. This attribute
   * indicates the version of the data expected by the endpoint. This
   * controls the shape of the envelope (i.e. its fields and metadata).
   * The endpoint version is based on the version of the Pub/Sub
   * API.
   *
   * If not present during the CreateSubscription call, it will default to
   * the version of the API used to make such call. If not present during a
   * ModifyPushConfig call, its value will not be changed. GetSubscription
   * calls will always return a valid version, even if the subscription was
   * created without this attribute.
   *
   * The possible values for this attribute are:
   *
   * * `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API.
   * * `v1beta2`: uses the push format defined in the v1beta2 Pub/Sub API.
   *
   *
   * @generated from field: map<string, string> attributes = 2;
   */
  attributes: { [key: string]: string };
};

/**
 * Describes the message google.pubsub.v1beta2.PushConfig.
 * Use `create(PushConfigSchema)` to create a new message.
 */
export const PushConfigSchema: GenMessage<PushConfig> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 11);

/**
 * A message and its corresponding acknowledgment ID.
 *
 * @generated from message google.pubsub.v1beta2.ReceivedMessage
 */
export type ReceivedMessage = Message<"google.pubsub.v1beta2.ReceivedMessage"> & {
  /**
   * This ID can be used to acknowledge the received message.
   *
   * @generated from field: string ack_id = 1;
   */
  ackId: string;

  /**
   * The message.
   *
   * @generated from field: google.pubsub.v1beta2.PubsubMessage message = 2;
   */
  message?: PubsubMessage;
};

/**
 * Describes the message google.pubsub.v1beta2.ReceivedMessage.
 * Use `create(ReceivedMessageSchema)` to create a new message.
 */
export const ReceivedMessageSchema: GenMessage<ReceivedMessage> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 12);

/**
 * Request for the GetSubscription method.
 *
 * @generated from message google.pubsub.v1beta2.GetSubscriptionRequest
 */
export type GetSubscriptionRequest = Message<"google.pubsub.v1beta2.GetSubscriptionRequest"> & {
  /**
   * The name of the subscription to get.
   *
   * @generated from field: string subscription = 1;
   */
  subscription: string;
};

/**
 * Describes the message google.pubsub.v1beta2.GetSubscriptionRequest.
 * Use `create(GetSubscriptionRequestSchema)` to create a new message.
 */
export const GetSubscriptionRequestSchema: GenMessage<GetSubscriptionRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 13);

/**
 * Request for the ListSubscriptions method.
 *
 * @generated from message google.pubsub.v1beta2.ListSubscriptionsRequest
 */
export type ListSubscriptionsRequest = Message<"google.pubsub.v1beta2.ListSubscriptionsRequest"> & {
  /**
   * The name of the cloud project that subscriptions belong to.
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * Maximum number of subscriptions to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The value returned by the last ListSubscriptionsResponse; indicates that
   * this is a continuation of a prior ListSubscriptions call, and that the
   * system should return the next page of data.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.pubsub.v1beta2.ListSubscriptionsRequest.
 * Use `create(ListSubscriptionsRequestSchema)` to create a new message.
 */
export const ListSubscriptionsRequestSchema: GenMessage<ListSubscriptionsRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 14);

/**
 * Response for the ListSubscriptions method.
 *
 * @generated from message google.pubsub.v1beta2.ListSubscriptionsResponse
 */
export type ListSubscriptionsResponse = Message<"google.pubsub.v1beta2.ListSubscriptionsResponse"> & {
  /**
   * The subscriptions that match the request.
   *
   * @generated from field: repeated google.pubsub.v1beta2.Subscription subscriptions = 1;
   */
  subscriptions: Subscription[];

  /**
   * If not empty, indicates that there may be more subscriptions that match
   * the request; this value should be passed in a new ListSubscriptionsRequest
   * to get more subscriptions.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.pubsub.v1beta2.ListSubscriptionsResponse.
 * Use `create(ListSubscriptionsResponseSchema)` to create a new message.
 */
export const ListSubscriptionsResponseSchema: GenMessage<ListSubscriptionsResponse> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 15);

/**
 * Request for the DeleteSubscription method.
 *
 * @generated from message google.pubsub.v1beta2.DeleteSubscriptionRequest
 */
export type DeleteSubscriptionRequest = Message<"google.pubsub.v1beta2.DeleteSubscriptionRequest"> & {
  /**
   * The subscription to delete.
   *
   * @generated from field: string subscription = 1;
   */
  subscription: string;
};

/**
 * Describes the message google.pubsub.v1beta2.DeleteSubscriptionRequest.
 * Use `create(DeleteSubscriptionRequestSchema)` to create a new message.
 */
export const DeleteSubscriptionRequestSchema: GenMessage<DeleteSubscriptionRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 16);

/**
 * Request for the ModifyPushConfig method.
 *
 * @generated from message google.pubsub.v1beta2.ModifyPushConfigRequest
 */
export type ModifyPushConfigRequest = Message<"google.pubsub.v1beta2.ModifyPushConfigRequest"> & {
  /**
   * The name of the subscription.
   *
   * @generated from field: string subscription = 1;
   */
  subscription: string;

  /**
   * The push configuration for future deliveries.
   *
   * An empty pushConfig indicates that the Pub/Sub system should
   * stop pushing messages from the given subscription and allow
   * messages to be pulled and acknowledged - effectively pausing
   * the subscription if Pull is not called.
   *
   * @generated from field: google.pubsub.v1beta2.PushConfig push_config = 2;
   */
  pushConfig?: PushConfig;
};

/**
 * Describes the message google.pubsub.v1beta2.ModifyPushConfigRequest.
 * Use `create(ModifyPushConfigRequestSchema)` to create a new message.
 */
export const ModifyPushConfigRequestSchema: GenMessage<ModifyPushConfigRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 17);

/**
 * Request for the Pull method.
 *
 * @generated from message google.pubsub.v1beta2.PullRequest
 */
export type PullRequest = Message<"google.pubsub.v1beta2.PullRequest"> & {
  /**
   * The subscription from which messages should be pulled.
   *
   * @generated from field: string subscription = 1;
   */
  subscription: string;

  /**
   * If this is specified as true the system will respond immediately even if
   * it is not able to return a message in the Pull response. Otherwise the
   * system is allowed to wait until at least one message is available rather
   * than returning no messages. The client may cancel the request if it does
   * not wish to wait any longer for the response.
   *
   * @generated from field: bool return_immediately = 2;
   */
  returnImmediately: boolean;

  /**
   * The maximum number of messages returned for this request. The Pub/Sub
   * system may return fewer than the number specified.
   *
   * @generated from field: int32 max_messages = 3;
   */
  maxMessages: number;
};

/**
 * Describes the message google.pubsub.v1beta2.PullRequest.
 * Use `create(PullRequestSchema)` to create a new message.
 */
export const PullRequestSchema: GenMessage<PullRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 18);

/**
 * Response for the Pull method.
 *
 * @generated from message google.pubsub.v1beta2.PullResponse
 */
export type PullResponse = Message<"google.pubsub.v1beta2.PullResponse"> & {
  /**
   * Received Pub/Sub messages. The Pub/Sub system will return zero messages if
   * there are no more available in the backlog. The Pub/Sub system may return
   * fewer than the maxMessages requested even if there are more messages
   * available in the backlog.
   *
   * @generated from field: repeated google.pubsub.v1beta2.ReceivedMessage received_messages = 1;
   */
  receivedMessages: ReceivedMessage[];
};

/**
 * Describes the message google.pubsub.v1beta2.PullResponse.
 * Use `create(PullResponseSchema)` to create a new message.
 */
export const PullResponseSchema: GenMessage<PullResponse> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 19);

/**
 * Request for the ModifyAckDeadline method.
 *
 * @generated from message google.pubsub.v1beta2.ModifyAckDeadlineRequest
 */
export type ModifyAckDeadlineRequest = Message<"google.pubsub.v1beta2.ModifyAckDeadlineRequest"> & {
  /**
   * The name of the subscription.
   *
   * @generated from field: string subscription = 1;
   */
  subscription: string;

  /**
   * The acknowledgment ID.
   *
   * @generated from field: string ack_id = 2;
   */
  ackId: string;

  /**
   * The new ack deadline with respect to the time this request was sent to the
   * Pub/Sub system. Must be >= 0. For example, if the value is 10, the new ack
   * deadline will expire 10 seconds after the ModifyAckDeadline call was made.
   * Specifying zero may immediately make the message available for another pull
   * request.
   *
   * @generated from field: int32 ack_deadline_seconds = 3;
   */
  ackDeadlineSeconds: number;
};

/**
 * Describes the message google.pubsub.v1beta2.ModifyAckDeadlineRequest.
 * Use `create(ModifyAckDeadlineRequestSchema)` to create a new message.
 */
export const ModifyAckDeadlineRequestSchema: GenMessage<ModifyAckDeadlineRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 20);

/**
 * Request for the Acknowledge method.
 *
 * @generated from message google.pubsub.v1beta2.AcknowledgeRequest
 */
export type AcknowledgeRequest = Message<"google.pubsub.v1beta2.AcknowledgeRequest"> & {
  /**
   * The subscription whose message is being acknowledged.
   *
   * @generated from field: string subscription = 1;
   */
  subscription: string;

  /**
   * The acknowledgment ID for the messages being acknowledged that was returned
   * by the Pub/Sub system in the Pull response. Must not be empty.
   *
   * @generated from field: repeated string ack_ids = 2;
   */
  ackIds: string[];
};

/**
 * Describes the message google.pubsub.v1beta2.AcknowledgeRequest.
 * Use `create(AcknowledgeRequestSchema)` to create a new message.
 */
export const AcknowledgeRequestSchema: GenMessage<AcknowledgeRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1beta2_pubsub, 21);

/**
 * The service that an application uses to manipulate subscriptions and to
 * consume messages from a subscription via the Pull method.
 *
 * @generated from service google.pubsub.v1beta2.Subscriber
 */
export const Subscriber: GenService<{
  /**
   * Creates a subscription to a given topic for a given subscriber.
   * If the subscription already exists, returns ALREADY_EXISTS.
   * If the corresponding topic doesn't exist, returns NOT_FOUND.
   *
   * If the name is not provided in the request, the server will assign a random
   * name for this subscription on the same project as the topic.
   *
   * @generated from rpc google.pubsub.v1beta2.Subscriber.CreateSubscription
   */
  createSubscription: {
    methodKind: "unary";
    input: typeof SubscriptionSchema;
    output: typeof SubscriptionSchema;
  },
  /**
   * Gets the configuration details of a subscription.
   *
   * @generated from rpc google.pubsub.v1beta2.Subscriber.GetSubscription
   */
  getSubscription: {
    methodKind: "unary";
    input: typeof GetSubscriptionRequestSchema;
    output: typeof SubscriptionSchema;
  },
  /**
   * Lists matching subscriptions.
   *
   * @generated from rpc google.pubsub.v1beta2.Subscriber.ListSubscriptions
   */
  listSubscriptions: {
    methodKind: "unary";
    input: typeof ListSubscriptionsRequestSchema;
    output: typeof ListSubscriptionsResponseSchema;
  },
  /**
   * Deletes an existing subscription. All pending messages in the subscription
   * are immediately dropped. Calls to Pull after deletion will return
   * NOT_FOUND. After a subscription is deleted, a new one may be created with
   * the same name, but the new one has no association with the old
   * subscription, or its topic unless the same topic is specified.
   *
   * @generated from rpc google.pubsub.v1beta2.Subscriber.DeleteSubscription
   */
  deleteSubscription: {
    methodKind: "unary";
    input: typeof DeleteSubscriptionRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Modifies the ack deadline for a specific message. This method is useful to
   * indicate that more time is needed to process a message by the subscriber,
   * or to make the message available for redelivery if the processing was
   * interrupted.
   *
   * @generated from rpc google.pubsub.v1beta2.Subscriber.ModifyAckDeadline
   */
  modifyAckDeadline: {
    methodKind: "unary";
    input: typeof ModifyAckDeadlineRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Acknowledges the messages associated with the ack tokens in the
   * AcknowledgeRequest. The Pub/Sub system can remove the relevant messages
   * from the subscription.
   *
   * Acknowledging a message whose ack deadline has expired may succeed,
   * but such a message may be redelivered later. Acknowledging a message more
   * than once will not result in an error.
   *
   * @generated from rpc google.pubsub.v1beta2.Subscriber.Acknowledge
   */
  acknowledge: {
    methodKind: "unary";
    input: typeof AcknowledgeRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Pulls messages from the server. Returns an empty list if there are no
   * messages available in the backlog. The server may return UNAVAILABLE if
   * there are too many concurrent pull requests pending for the given
   * subscription.
   *
   * @generated from rpc google.pubsub.v1beta2.Subscriber.Pull
   */
  pull: {
    methodKind: "unary";
    input: typeof PullRequestSchema;
    output: typeof PullResponseSchema;
  },
  /**
   * Modifies the PushConfig for a specified subscription.
   *
   * This may be used to change a push subscription to a pull one (signified
   * by an empty PushConfig) or vice versa, or change the endpoint URL and other
   * attributes of a push subscription. Messages will accumulate for
   * delivery continuously through the call regardless of changes to the
   * PushConfig.
   *
   * @generated from rpc google.pubsub.v1beta2.Subscriber.ModifyPushConfig
   */
  modifyPushConfig: {
    methodKind: "unary";
    input: typeof ModifyPushConfigRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_pubsub_v1beta2_pubsub, 0);

/**
 * The service that an application uses to manipulate topics, and to send
 * messages to a topic.
 *
 * @generated from service google.pubsub.v1beta2.Publisher
 */
export const Publisher: GenService<{
  /**
   * Creates the given topic with the given name.
   *
   * @generated from rpc google.pubsub.v1beta2.Publisher.CreateTopic
   */
  createTopic: {
    methodKind: "unary";
    input: typeof TopicSchema;
    output: typeof TopicSchema;
  },
  /**
   * Adds one or more messages to the topic. Returns NOT_FOUND if the topic does
   * not exist.
   *
   * @generated from rpc google.pubsub.v1beta2.Publisher.Publish
   */
  publish: {
    methodKind: "unary";
    input: typeof PublishRequestSchema;
    output: typeof PublishResponseSchema;
  },
  /**
   * Gets the configuration of a topic.
   *
   * @generated from rpc google.pubsub.v1beta2.Publisher.GetTopic
   */
  getTopic: {
    methodKind: "unary";
    input: typeof GetTopicRequestSchema;
    output: typeof TopicSchema;
  },
  /**
   * Lists matching topics.
   *
   * @generated from rpc google.pubsub.v1beta2.Publisher.ListTopics
   */
  listTopics: {
    methodKind: "unary";
    input: typeof ListTopicsRequestSchema;
    output: typeof ListTopicsResponseSchema;
  },
  /**
   * Lists the name of the subscriptions for this topic.
   *
   * @generated from rpc google.pubsub.v1beta2.Publisher.ListTopicSubscriptions
   */
  listTopicSubscriptions: {
    methodKind: "unary";
    input: typeof ListTopicSubscriptionsRequestSchema;
    output: typeof ListTopicSubscriptionsResponseSchema;
  },
  /**
   * Deletes the topic with the given name. Returns NOT_FOUND if the topic does
   * not exist. After a topic is deleted, a new topic may be created with the
   * same name; this is an entirely new topic with none of the old
   * configuration or subscriptions. Existing subscriptions to this topic are
   * not deleted.
   *
   * @generated from rpc google.pubsub.v1beta2.Publisher.DeleteTopic
   */
  deleteTopic: {
    methodKind: "unary";
    input: typeof DeleteTopicRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_pubsub_v1beta2_pubsub, 1);

