// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/pubsub/v1/schema.proto (package google.pubsub.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../api/annotations_pb";
import { file_google_api_client } from "../../api/client_pb";
import { file_google_api_field_behavior } from "../../api/field_behavior_pb";
import { file_google_api_resource } from "../../api/resource_pb";
import type { EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/pubsub/v1/schema.proto.
 */
export const file_google_pubsub_v1_schema: GenFile = /*@__PURE__*/
  fileDesc("Ch1nb29nbGUvcHVic3ViL3YxL3NjaGVtYS5wcm90bxIQZ29vZ2xlLnB1YnN1Yi52MSK9AgoGU2NoZW1hEhEKBG5hbWUYASABKAlCA+BBAhIrCgR0eXBlGAIgASgOMh0uZ29vZ2xlLnB1YnN1Yi52MS5TY2hlbWEuVHlwZRISCgpkZWZpbml0aW9uGAMgASgJEhsKC3JldmlzaW9uX2lkGAQgASgJQgbgQQXgQQMSPQoUcmV2aXNpb25fY3JlYXRlX3RpbWUYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMiOwoEVHlwZRIUChBUWVBFX1VOU1BFQ0lGSUVEEAASEwoPUFJPVE9DT0xfQlVGRkVSEAESCAoEQVZSTxACOkbqQUMKHHB1YnN1Yi5nb29nbGVhcGlzLmNvbS9TY2hlbWESI3Byb2plY3RzL3twcm9qZWN0fS9zY2hlbWFzL3tzY2hlbWF9Io0BChNDcmVhdGVTY2hlbWFSZXF1ZXN0EjQKBnBhcmVudBgBIAEoCUIk4EEC+kEeEhxwdWJzdWIuZ29vZ2xlYXBpcy5jb20vU2NoZW1hEi0KBnNjaGVtYRgCIAEoCzIYLmdvb2dsZS5wdWJzdWIudjEuU2NoZW1hQgPgQQISEQoJc2NoZW1hX2lkGAMgASgJInIKEEdldFNjaGVtYVJlcXVlc3QSMgoEbmFtZRgBIAEoCUIk4EEC+kEeChxwdWJzdWIuZ29vZ2xlYXBpcy5jb20vU2NoZW1hEioKBHZpZXcYAiABKA4yHC5nb29nbGUucHVic3ViLnYxLlNjaGVtYVZpZXcirAEKEkxpc3RTY2hlbWFzUmVxdWVzdBJDCgZwYXJlbnQYASABKAlCM+BBAvpBLQorY2xvdWRyZXNvdXJjZW1hbmFnZXIuZ29vZ2xlYXBpcy5jb20vUHJvamVjdBIqCgR2aWV3GAIgASgOMhwuZ29vZ2xlLnB1YnN1Yi52MS5TY2hlbWFWaWV3EhEKCXBhZ2Vfc2l6ZRgDIAEoBRISCgpwYWdlX3Rva2VuGAQgASgJIlkKE0xpc3RTY2hlbWFzUmVzcG9uc2USKQoHc2NoZW1hcxgBIAMoCzIYLmdvb2dsZS5wdWJzdWIudjEuU2NoZW1hEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSKjAQoaTGlzdFNjaGVtYVJldmlzaW9uc1JlcXVlc3QSMgoEbmFtZRgBIAEoCUIk4EEC+kEeChxwdWJzdWIuZ29vZ2xlYXBpcy5jb20vU2NoZW1hEioKBHZpZXcYAiABKA4yHC5nb29nbGUucHVic3ViLnYxLlNjaGVtYVZpZXcSEQoJcGFnZV9zaXplGAMgASgFEhIKCnBhZ2VfdG9rZW4YBCABKAkiYQobTGlzdFNjaGVtYVJldmlzaW9uc1Jlc3BvbnNlEikKB3NjaGVtYXMYASADKAsyGC5nb29nbGUucHVic3ViLnYxLlNjaGVtYRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkieAoTQ29tbWl0U2NoZW1hUmVxdWVzdBIyCgRuYW1lGAEgASgJQiTgQQL6QR4KHHB1YnN1Yi5nb29nbGVhcGlzLmNvbS9TY2hlbWESLQoGc2NoZW1hGAIgASgLMhguZ29vZ2xlLnB1YnN1Yi52MS5TY2hlbWFCA+BBAiJlChVSb2xsYmFja1NjaGVtYVJlcXVlc3QSMgoEbmFtZRgBIAEoCUIk4EEC+kEeChxwdWJzdWIuZ29vZ2xlYXBpcy5jb20vU2NoZW1hEhgKC3JldmlzaW9uX2lkGAIgASgJQgPgQQIibQobRGVsZXRlU2NoZW1hUmV2aXNpb25SZXF1ZXN0EjIKBG5hbWUYASABKAlCJOBBAvpBHgoccHVic3ViLmdvb2dsZWFwaXMuY29tL1NjaGVtYRIaCgtyZXZpc2lvbl9pZBgCIAEoCUIFGAHgQQEiSQoTRGVsZXRlU2NoZW1hUmVxdWVzdBIyCgRuYW1lGAEgASgJQiTgQQL6QR4KHHB1YnN1Yi5nb29nbGVhcGlzLmNvbS9TY2hlbWEiiwEKFVZhbGlkYXRlU2NoZW1hUmVxdWVzdBJDCgZwYXJlbnQYASABKAlCM+BBAvpBLQorY2xvdWRyZXNvdXJjZW1hbmFnZXIuZ29vZ2xlYXBpcy5jb20vUHJvamVjdBItCgZzY2hlbWEYAiABKAsyGC5nb29nbGUucHVic3ViLnYxLlNjaGVtYUID4EECIhgKFlZhbGlkYXRlU2NoZW1hUmVzcG9uc2UiigIKFlZhbGlkYXRlTWVzc2FnZVJlcXVlc3QSQwoGcGFyZW50GAEgASgJQjPgQQL6QS0KK2Nsb3VkcmVzb3VyY2VtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL1Byb2plY3QSMQoEbmFtZRgCIAEoCUIh+kEeChxwdWJzdWIuZ29vZ2xlYXBpcy5jb20vU2NoZW1hSAASKgoGc2NoZW1hGAMgASgLMhguZ29vZ2xlLnB1YnN1Yi52MS5TY2hlbWFIABIPCgdtZXNzYWdlGAQgASgMEiwKCGVuY29kaW5nGAUgASgOMhouZ29vZ2xlLnB1YnN1Yi52MS5FbmNvZGluZ0INCgtzY2hlbWFfc3BlYyIZChdWYWxpZGF0ZU1lc3NhZ2VSZXNwb25zZSo+CgpTY2hlbWFWaWV3EhsKF1NDSEVNQV9WSUVXX1VOU1BFQ0lGSUVEEAASCQoFQkFTSUMQARIICgRGVUxMEAIqOgoIRW5jb2RpbmcSGAoURU5DT0RJTkdfVU5TUEVDSUZJRUQQABIICgRKU09OEAESCgoGQklOQVJZEAIyiA0KDVNjaGVtYVNlcnZpY2USmgEKDENyZWF0ZVNjaGVtYRIlLmdvb2dsZS5wdWJzdWIudjEuQ3JlYXRlU2NoZW1hUmVxdWVzdBoYLmdvb2dsZS5wdWJzdWIudjEuU2NoZW1hIknaQRdwYXJlbnQsc2NoZW1hLHNjaGVtYV9pZILT5JMCKToGc2NoZW1hIh8vdjEve3BhcmVudD1wcm9qZWN0cy8qfS9zY2hlbWFzEnkKCUdldFNjaGVtYRIiLmdvb2dsZS5wdWJzdWIudjEuR2V0U2NoZW1hUmVxdWVzdBoYLmdvb2dsZS5wdWJzdWIudjEuU2NoZW1hIi7aQQRuYW1lgtPkkwIhEh8vdjEve25hbWU9cHJvamVjdHMvKi9zY2hlbWFzLyp9EowBCgtMaXN0U2NoZW1hcxIkLmdvb2dsZS5wdWJzdWIudjEuTGlzdFNjaGVtYXNSZXF1ZXN0GiUuZ29vZ2xlLnB1YnN1Yi52MS5MaXN0U2NoZW1hc1Jlc3BvbnNlIjDaQQZwYXJlbnSC0+STAiESHy92MS97cGFyZW50PXByb2plY3RzLyp9L3NjaGVtYXMSsAEKE0xpc3RTY2hlbWFSZXZpc2lvbnMSLC5nb29nbGUucHVic3ViLnYxLkxpc3RTY2hlbWFSZXZpc2lvbnNSZXF1ZXN0Gi0uZ29vZ2xlLnB1YnN1Yi52MS5MaXN0U2NoZW1hUmV2aXNpb25zUmVzcG9uc2UiPNpBBG5hbWWC0+STAi8SLS92MS97bmFtZT1wcm9qZWN0cy8qL3NjaGVtYXMvKn06bGlzdFJldmlzaW9ucxKQAQoMQ29tbWl0U2NoZW1hEiUuZ29vZ2xlLnB1YnN1Yi52MS5Db21taXRTY2hlbWFSZXF1ZXN0GhguZ29vZ2xlLnB1YnN1Yi52MS5TY2hlbWEiP9pBC25hbWUsc2NoZW1hgtPkkwIrOgEqIiYvdjEve25hbWU9cHJvamVjdHMvKi9zY2hlbWFzLyp9OmNvbW1pdBKbAQoOUm9sbGJhY2tTY2hlbWESJy5nb29nbGUucHVic3ViLnYxLlJvbGxiYWNrU2NoZW1hUmVxdWVzdBoYLmdvb2dsZS5wdWJzdWIudjEuU2NoZW1hIkbaQRBuYW1lLHJldmlzaW9uX2lkgtPkkwItOgEqIigvdjEve25hbWU9cHJvamVjdHMvKi9zY2hlbWFzLyp9OnJvbGxiYWNrEqoBChREZWxldGVTY2hlbWFSZXZpc2lvbhItLmdvb2dsZS5wdWJzdWIudjEuRGVsZXRlU2NoZW1hUmV2aXNpb25SZXF1ZXN0GhguZ29vZ2xlLnB1YnN1Yi52MS5TY2hlbWEiSdpBEG5hbWUscmV2aXNpb25faWSC0+STAjAqLi92MS97bmFtZT1wcm9qZWN0cy8qL3NjaGVtYXMvKn06ZGVsZXRlUmV2aXNpb24SfQoMRGVsZXRlU2NoZW1hEiUuZ29vZ2xlLnB1YnN1Yi52MS5EZWxldGVTY2hlbWFSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Ii7aQQRuYW1lgtPkkwIhKh8vdjEve25hbWU9cHJvamVjdHMvKi9zY2hlbWFzLyp9EqgBCg5WYWxpZGF0ZVNjaGVtYRInLmdvb2dsZS5wdWJzdWIudjEuVmFsaWRhdGVTY2hlbWFSZXF1ZXN0GiguZ29vZ2xlLnB1YnN1Yi52MS5WYWxpZGF0ZVNjaGVtYVJlc3BvbnNlIkPaQQ1wYXJlbnQsc2NoZW1hgtPkkwItOgEqIigvdjEve3BhcmVudD1wcm9qZWN0cy8qfS9zY2hlbWFzOnZhbGlkYXRlEqIBCg9WYWxpZGF0ZU1lc3NhZ2USKC5nb29nbGUucHVic3ViLnYxLlZhbGlkYXRlTWVzc2FnZVJlcXVlc3QaKS5nb29nbGUucHVic3ViLnYxLlZhbGlkYXRlTWVzc2FnZVJlc3BvbnNlIjqC0+STAjQ6ASoiLy92MS97cGFyZW50PXByb2plY3RzLyp9L3NjaGVtYXM6dmFsaWRhdGVNZXNzYWdlGnDKQRVwdWJzdWIuZ29vZ2xlYXBpcy5jb23SQVVodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtLGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvcHVic3ViQqoBChRjb20uZ29vZ2xlLnB1YnN1Yi52MUILU2NoZW1hUHJvdG9QAVoyY2xvdWQuZ29vZ2xlLmNvbS9nby9wdWJzdWIvYXBpdjEvcHVic3VicGI7cHVic3VicGL4AQGqAhZHb29nbGUuQ2xvdWQuUHViU3ViLlYxygIWR29vZ2xlXENsb3VkXFB1YlN1YlxWMeoCGUdvb2dsZTo6Q2xvdWQ6OlB1YlN1Yjo6VjFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_empty, file_google_protobuf_timestamp]);

/**
 * A schema resource.
 *
 * @generated from message google.pubsub.v1.Schema
 */
export type Schema = Message<"google.pubsub.v1.Schema"> & {
  /**
   * Required. Name of the schema.
   * Format is `projects/{project}/schemas/{schema}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The type of the schema definition.
   *
   * @generated from field: google.pubsub.v1.Schema.Type type = 2;
   */
  type: Schema_Type;

  /**
   * The definition of the schema. This should contain a string representing
   * the full definition of the schema that is a valid schema definition of
   * the type specified in `type`.
   *
   * @generated from field: string definition = 3;
   */
  definition: string;

  /**
   * Output only. Immutable. The revision ID of the schema.
   *
   * @generated from field: string revision_id = 4;
   */
  revisionId: string;

  /**
   * Output only. The timestamp that the revision was created.
   *
   * @generated from field: google.protobuf.Timestamp revision_create_time = 6;
   */
  revisionCreateTime?: Timestamp;
};

/**
 * Describes the message google.pubsub.v1.Schema.
 * Use `create(SchemaSchema)` to create a new message.
 */
export const SchemaSchema: GenMessage<Schema> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1_schema, 0);

/**
 * Possible schema definition types.
 *
 * @generated from enum google.pubsub.v1.Schema.Type
 */
export enum Schema_Type {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * A Protocol Buffer schema definition.
   *
   * @generated from enum value: PROTOCOL_BUFFER = 1;
   */
  PROTOCOL_BUFFER = 1,

  /**
   * An Avro schema definition.
   *
   * @generated from enum value: AVRO = 2;
   */
  AVRO = 2,
}

/**
 * Describes the enum google.pubsub.v1.Schema.Type.
 */
export const Schema_TypeSchema: GenEnum<Schema_Type> = /*@__PURE__*/
  enumDesc(file_google_pubsub_v1_schema, 0, 0);

/**
 * Request for the CreateSchema method.
 *
 * @generated from message google.pubsub.v1.CreateSchemaRequest
 */
export type CreateSchemaRequest = Message<"google.pubsub.v1.CreateSchemaRequest"> & {
  /**
   * Required. The name of the project in which to create the schema.
   * Format is `projects/{project-id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The schema object to create.
   *
   * This schema's `name` parameter is ignored. The schema object returned
   * by CreateSchema will have a `name` made using the given `parent` and
   * `schema_id`.
   *
   * @generated from field: google.pubsub.v1.Schema schema = 2;
   */
  schema?: Schema;

  /**
   * The ID to use for the schema, which will become the final component of
   * the schema's resource name.
   *
   * See https://cloud.google.com/pubsub/docs/pubsub-basics#resource_names for
   * resource name constraints.
   *
   * @generated from field: string schema_id = 3;
   */
  schemaId: string;
};

/**
 * Describes the message google.pubsub.v1.CreateSchemaRequest.
 * Use `create(CreateSchemaRequestSchema)` to create a new message.
 */
export const CreateSchemaRequestSchema: GenMessage<CreateSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1_schema, 1);

/**
 * Request for the GetSchema method.
 *
 * @generated from message google.pubsub.v1.GetSchemaRequest
 */
export type GetSchemaRequest = Message<"google.pubsub.v1.GetSchemaRequest"> & {
  /**
   * Required. The name of the schema to get.
   * Format is `projects/{project}/schemas/{schema}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The set of fields to return in the response. If not set, returns a Schema
   * with all fields filled out. Set to `BASIC` to omit the `definition`.
   *
   * @generated from field: google.pubsub.v1.SchemaView view = 2;
   */
  view: SchemaView;
};

/**
 * Describes the message google.pubsub.v1.GetSchemaRequest.
 * Use `create(GetSchemaRequestSchema)` to create a new message.
 */
export const GetSchemaRequestSchema: GenMessage<GetSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1_schema, 2);

/**
 * Request for the `ListSchemas` method.
 *
 * @generated from message google.pubsub.v1.ListSchemasRequest
 */
export type ListSchemasRequest = Message<"google.pubsub.v1.ListSchemasRequest"> & {
  /**
   * Required. The name of the project in which to list schemas.
   * Format is `projects/{project-id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The set of Schema fields to return in the response. If not set, returns
   * Schemas with `name` and `type`, but not `definition`. Set to `FULL` to
   * retrieve all fields.
   *
   * @generated from field: google.pubsub.v1.SchemaView view = 2;
   */
  view: SchemaView;

  /**
   * Maximum number of schemas to return.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The value returned by the last `ListSchemasResponse`; indicates that
   * this is a continuation of a prior `ListSchemas` call, and that the
   * system should return the next page of data.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.pubsub.v1.ListSchemasRequest.
 * Use `create(ListSchemasRequestSchema)` to create a new message.
 */
export const ListSchemasRequestSchema: GenMessage<ListSchemasRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1_schema, 3);

/**
 * Response for the `ListSchemas` method.
 *
 * @generated from message google.pubsub.v1.ListSchemasResponse
 */
export type ListSchemasResponse = Message<"google.pubsub.v1.ListSchemasResponse"> & {
  /**
   * The resulting schemas.
   *
   * @generated from field: repeated google.pubsub.v1.Schema schemas = 1;
   */
  schemas: Schema[];

  /**
   * If not empty, indicates that there may be more schemas that match the
   * request; this value should be passed in a new `ListSchemasRequest`.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.pubsub.v1.ListSchemasResponse.
 * Use `create(ListSchemasResponseSchema)` to create a new message.
 */
export const ListSchemasResponseSchema: GenMessage<ListSchemasResponse> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1_schema, 4);

/**
 * Request for the `ListSchemaRevisions` method.
 *
 * @generated from message google.pubsub.v1.ListSchemaRevisionsRequest
 */
export type ListSchemaRevisionsRequest = Message<"google.pubsub.v1.ListSchemaRevisionsRequest"> & {
  /**
   * Required. The name of the schema to list revisions for.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The set of Schema fields to return in the response. If not set, returns
   * Schemas with `name` and `type`, but not `definition`. Set to `FULL` to
   * retrieve all fields.
   *
   * @generated from field: google.pubsub.v1.SchemaView view = 2;
   */
  view: SchemaView;

  /**
   * The maximum number of revisions to return per page.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The page token, received from a previous ListSchemaRevisions call.
   * Provide this to retrieve the subsequent page.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.pubsub.v1.ListSchemaRevisionsRequest.
 * Use `create(ListSchemaRevisionsRequestSchema)` to create a new message.
 */
export const ListSchemaRevisionsRequestSchema: GenMessage<ListSchemaRevisionsRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1_schema, 5);

/**
 * Response for the `ListSchemaRevisions` method.
 *
 * @generated from message google.pubsub.v1.ListSchemaRevisionsResponse
 */
export type ListSchemaRevisionsResponse = Message<"google.pubsub.v1.ListSchemaRevisionsResponse"> & {
  /**
   * The revisions of the schema.
   *
   * @generated from field: repeated google.pubsub.v1.Schema schemas = 1;
   */
  schemas: Schema[];

  /**
   * A token that can be sent as `page_token` to retrieve the next page.
   * If this field is empty, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.pubsub.v1.ListSchemaRevisionsResponse.
 * Use `create(ListSchemaRevisionsResponseSchema)` to create a new message.
 */
export const ListSchemaRevisionsResponseSchema: GenMessage<ListSchemaRevisionsResponse> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1_schema, 6);

/**
 * Request for CommitSchema method.
 *
 * @generated from message google.pubsub.v1.CommitSchemaRequest
 */
export type CommitSchemaRequest = Message<"google.pubsub.v1.CommitSchemaRequest"> & {
  /**
   * Required. The name of the schema we are revising.
   * Format is `projects/{project}/schemas/{schema}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The schema revision to commit.
   *
   * @generated from field: google.pubsub.v1.Schema schema = 2;
   */
  schema?: Schema;
};

/**
 * Describes the message google.pubsub.v1.CommitSchemaRequest.
 * Use `create(CommitSchemaRequestSchema)` to create a new message.
 */
export const CommitSchemaRequestSchema: GenMessage<CommitSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1_schema, 7);

/**
 * Request for the `RollbackSchema` method.
 *
 * @generated from message google.pubsub.v1.RollbackSchemaRequest
 */
export type RollbackSchemaRequest = Message<"google.pubsub.v1.RollbackSchemaRequest"> & {
  /**
   * Required. The schema being rolled back with revision id.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The revision ID to roll back to.
   * It must be a revision of the same schema.
   *
   *   Example: c7cfa2a8
   *
   * @generated from field: string revision_id = 2;
   */
  revisionId: string;
};

/**
 * Describes the message google.pubsub.v1.RollbackSchemaRequest.
 * Use `create(RollbackSchemaRequestSchema)` to create a new message.
 */
export const RollbackSchemaRequestSchema: GenMessage<RollbackSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1_schema, 8);

/**
 * Request for the `DeleteSchemaRevision` method.
 *
 * @generated from message google.pubsub.v1.DeleteSchemaRevisionRequest
 */
export type DeleteSchemaRevisionRequest = Message<"google.pubsub.v1.DeleteSchemaRevisionRequest"> & {
  /**
   * Required. The name of the schema revision to be deleted, with a revision ID
   * explicitly included.
   *
   * Example: `projects/123/schemas/my-schema@c7cfa2a8`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. This field is deprecated and should not be used for specifying
   * the revision ID. The revision ID should be specified via the `name`
   * parameter.
   *
   * @generated from field: string revision_id = 2 [deprecated = true];
   * @deprecated
   */
  revisionId: string;
};

/**
 * Describes the message google.pubsub.v1.DeleteSchemaRevisionRequest.
 * Use `create(DeleteSchemaRevisionRequestSchema)` to create a new message.
 */
export const DeleteSchemaRevisionRequestSchema: GenMessage<DeleteSchemaRevisionRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1_schema, 9);

/**
 * Request for the `DeleteSchema` method.
 *
 * @generated from message google.pubsub.v1.DeleteSchemaRequest
 */
export type DeleteSchemaRequest = Message<"google.pubsub.v1.DeleteSchemaRequest"> & {
  /**
   * Required. Name of the schema to delete.
   * Format is `projects/{project}/schemas/{schema}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.pubsub.v1.DeleteSchemaRequest.
 * Use `create(DeleteSchemaRequestSchema)` to create a new message.
 */
export const DeleteSchemaRequestSchema: GenMessage<DeleteSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1_schema, 10);

/**
 * Request for the `ValidateSchema` method.
 *
 * @generated from message google.pubsub.v1.ValidateSchemaRequest
 */
export type ValidateSchemaRequest = Message<"google.pubsub.v1.ValidateSchemaRequest"> & {
  /**
   * Required. The name of the project in which to validate schemas.
   * Format is `projects/{project-id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The schema object to validate.
   *
   * @generated from field: google.pubsub.v1.Schema schema = 2;
   */
  schema?: Schema;
};

/**
 * Describes the message google.pubsub.v1.ValidateSchemaRequest.
 * Use `create(ValidateSchemaRequestSchema)` to create a new message.
 */
export const ValidateSchemaRequestSchema: GenMessage<ValidateSchemaRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1_schema, 11);

/**
 * Response for the `ValidateSchema` method.
 * Empty for now.
 *
 * @generated from message google.pubsub.v1.ValidateSchemaResponse
 */
export type ValidateSchemaResponse = Message<"google.pubsub.v1.ValidateSchemaResponse"> & {
};

/**
 * Describes the message google.pubsub.v1.ValidateSchemaResponse.
 * Use `create(ValidateSchemaResponseSchema)` to create a new message.
 */
export const ValidateSchemaResponseSchema: GenMessage<ValidateSchemaResponse> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1_schema, 12);

/**
 * Request for the `ValidateMessage` method.
 *
 * @generated from message google.pubsub.v1.ValidateMessageRequest
 */
export type ValidateMessageRequest = Message<"google.pubsub.v1.ValidateMessageRequest"> & {
  /**
   * Required. The name of the project in which to validate schemas.
   * Format is `projects/{project-id}`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * @generated from oneof google.pubsub.v1.ValidateMessageRequest.schema_spec
   */
  schemaSpec: {
    /**
     * Name of the schema against which to validate.
     *
     * Format is `projects/{project}/schemas/{schema}`.
     *
     * @generated from field: string name = 2;
     */
    value: string;
    case: "name";
  } | {
    /**
     * Ad-hoc schema against which to validate
     *
     * @generated from field: google.pubsub.v1.Schema schema = 3;
     */
    value: Schema;
    case: "schema";
  } | { case: undefined; value?: undefined };

  /**
   * Message to validate against the provided `schema_spec`.
   *
   * @generated from field: bytes message = 4;
   */
  message: Uint8Array;

  /**
   * The encoding expected for messages
   *
   * @generated from field: google.pubsub.v1.Encoding encoding = 5;
   */
  encoding: Encoding;
};

/**
 * Describes the message google.pubsub.v1.ValidateMessageRequest.
 * Use `create(ValidateMessageRequestSchema)` to create a new message.
 */
export const ValidateMessageRequestSchema: GenMessage<ValidateMessageRequest> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1_schema, 13);

/**
 * Response for the `ValidateMessage` method.
 * Empty for now.
 *
 * @generated from message google.pubsub.v1.ValidateMessageResponse
 */
export type ValidateMessageResponse = Message<"google.pubsub.v1.ValidateMessageResponse"> & {
};

/**
 * Describes the message google.pubsub.v1.ValidateMessageResponse.
 * Use `create(ValidateMessageResponseSchema)` to create a new message.
 */
export const ValidateMessageResponseSchema: GenMessage<ValidateMessageResponse> = /*@__PURE__*/
  messageDesc(file_google_pubsub_v1_schema, 14);

/**
 * View of Schema object fields to be returned by GetSchema and ListSchemas.
 *
 * @generated from enum google.pubsub.v1.SchemaView
 */
export enum SchemaView {
  /**
   * The default / unset value.
   * The API will default to the BASIC view.
   *
   * @generated from enum value: SCHEMA_VIEW_UNSPECIFIED = 0;
   */
  SCHEMA_VIEW_UNSPECIFIED = 0,

  /**
   * Include the name and type of the schema, but not the definition.
   *
   * @generated from enum value: BASIC = 1;
   */
  BASIC = 1,

  /**
   * Include all Schema object fields.
   *
   * @generated from enum value: FULL = 2;
   */
  FULL = 2,
}

/**
 * Describes the enum google.pubsub.v1.SchemaView.
 */
export const SchemaViewSchema: GenEnum<SchemaView> = /*@__PURE__*/
  enumDesc(file_google_pubsub_v1_schema, 0);

/**
 * Possible encoding types for messages.
 *
 * @generated from enum google.pubsub.v1.Encoding
 */
export enum Encoding {
  /**
   * Unspecified
   *
   * @generated from enum value: ENCODING_UNSPECIFIED = 0;
   */
  ENCODING_UNSPECIFIED = 0,

  /**
   * JSON encoding
   *
   * @generated from enum value: JSON = 1;
   */
  JSON = 1,

  /**
   * Binary encoding, as defined by the schema type. For some schema types,
   * binary encoding may not be available.
   *
   * @generated from enum value: BINARY = 2;
   */
  BINARY = 2,
}

/**
 * Describes the enum google.pubsub.v1.Encoding.
 */
export const EncodingSchema: GenEnum<Encoding> = /*@__PURE__*/
  enumDesc(file_google_pubsub_v1_schema, 1);

/**
 * Service for doing schema-related operations.
 *
 * @generated from service google.pubsub.v1.SchemaService
 */
export const SchemaService: GenService<{
  /**
   * Creates a schema.
   *
   * @generated from rpc google.pubsub.v1.SchemaService.CreateSchema
   */
  createSchema: {
    methodKind: "unary";
    input: typeof CreateSchemaRequestSchema;
    output: typeof SchemaSchema;
  },
  /**
   * Gets a schema.
   *
   * @generated from rpc google.pubsub.v1.SchemaService.GetSchema
   */
  getSchema: {
    methodKind: "unary";
    input: typeof GetSchemaRequestSchema;
    output: typeof SchemaSchema;
  },
  /**
   * Lists schemas in a project.
   *
   * @generated from rpc google.pubsub.v1.SchemaService.ListSchemas
   */
  listSchemas: {
    methodKind: "unary";
    input: typeof ListSchemasRequestSchema;
    output: typeof ListSchemasResponseSchema;
  },
  /**
   * Lists all schema revisions for the named schema.
   *
   * @generated from rpc google.pubsub.v1.SchemaService.ListSchemaRevisions
   */
  listSchemaRevisions: {
    methodKind: "unary";
    input: typeof ListSchemaRevisionsRequestSchema;
    output: typeof ListSchemaRevisionsResponseSchema;
  },
  /**
   * Commits a new schema revision to an existing schema.
   *
   * @generated from rpc google.pubsub.v1.SchemaService.CommitSchema
   */
  commitSchema: {
    methodKind: "unary";
    input: typeof CommitSchemaRequestSchema;
    output: typeof SchemaSchema;
  },
  /**
   * Creates a new schema revision that is a copy of the provided revision_id.
   *
   * @generated from rpc google.pubsub.v1.SchemaService.RollbackSchema
   */
  rollbackSchema: {
    methodKind: "unary";
    input: typeof RollbackSchemaRequestSchema;
    output: typeof SchemaSchema;
  },
  /**
   * Deletes a specific schema revision.
   *
   * @generated from rpc google.pubsub.v1.SchemaService.DeleteSchemaRevision
   */
  deleteSchemaRevision: {
    methodKind: "unary";
    input: typeof DeleteSchemaRevisionRequestSchema;
    output: typeof SchemaSchema;
  },
  /**
   * Deletes a schema.
   *
   * @generated from rpc google.pubsub.v1.SchemaService.DeleteSchema
   */
  deleteSchema: {
    methodKind: "unary";
    input: typeof DeleteSchemaRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Validates a schema.
   *
   * @generated from rpc google.pubsub.v1.SchemaService.ValidateSchema
   */
  validateSchema: {
    methodKind: "unary";
    input: typeof ValidateSchemaRequestSchema;
    output: typeof ValidateSchemaResponseSchema;
  },
  /**
   * Validates a message against a schema.
   *
   * @generated from rpc google.pubsub.v1.SchemaService.ValidateMessage
   */
  validateMessage: {
    methodKind: "unary";
    input: typeof ValidateMessageRequestSchema;
    output: typeof ValidateMessageResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_pubsub_v1_schema, 0);

