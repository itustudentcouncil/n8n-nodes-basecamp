// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/home/graph/v1/homegraph.proto (package google.home.graph.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Device } from "./device_pb";
import { file_google_home_graph_v1_device } from "./device_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/home/graph/v1/homegraph.proto.
 */
export const file_google_home_graph_v1_homegraph: GenFile = /*@__PURE__*/
  fileDesc("CiRnb29nbGUvaG9tZS9ncmFwaC92MS9ob21lZ3JhcGgucHJvdG8SFGdvb2dsZS5ob21lLmdyYXBoLnYxIksKGVJlcXVlc3RTeW5jRGV2aWNlc1JlcXVlc3QSGgoNYWdlbnRfdXNlcl9pZBgBIAEoCUID4EECEhIKBWFzeW5jGAIgASgIQgPgQQEiHAoaUmVxdWVzdFN5bmNEZXZpY2VzUmVzcG9uc2UiywEKIVJlcG9ydFN0YXRlQW5kTm90aWZpY2F0aW9uUmVxdWVzdBISCgpyZXF1ZXN0X2lkGAEgASgJEhAKCGV2ZW50X2lkGAQgASgJEhoKDWFnZW50X3VzZXJfaWQYAiABKAlCA+BBAhIbCg9mb2xsb3dfdXBfdG9rZW4YBSABKAlCAhgBEkcKB3BheWxvYWQYAyABKAsyMS5nb29nbGUuaG9tZS5ncmFwaC52MS5TdGF0ZUFuZE5vdGlmaWNhdGlvblBheWxvYWRCA+BBAiI4CiJSZXBvcnRTdGF0ZUFuZE5vdGlmaWNhdGlvblJlc3BvbnNlEhIKCnJlcXVlc3RfaWQYASABKAkiZgobU3RhdGVBbmROb3RpZmljYXRpb25QYXlsb2FkEkcKB2RldmljZXMYASABKAsyNi5nb29nbGUuaG9tZS5ncmFwaC52MS5SZXBvcnRTdGF0ZUFuZE5vdGlmaWNhdGlvbkRldmljZSJ7CiBSZXBvcnRTdGF0ZUFuZE5vdGlmaWNhdGlvbkRldmljZRInCgZzdGF0ZXMYASABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0Ei4KDW5vdGlmaWNhdGlvbnMYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0InMKFkRlbGV0ZUFnZW50VXNlclJlcXVlc3QSEgoKcmVxdWVzdF9pZBgBIAEoCRJFCg1hZ2VudF91c2VyX2lkGAIgASgJQi7gQQL6QSgKJmhvbWVncmFwaC5nb29nbGVhcGlzLmNvbS9BZ2VudFVzZXJQYXRoInwKDFF1ZXJ5UmVxdWVzdBISCgpyZXF1ZXN0X2lkGAEgASgJEhoKDWFnZW50X3VzZXJfaWQYAiABKAlCA+BBAhI8CgZpbnB1dHMYAyADKAsyJy5nb29nbGUuaG9tZS5ncmFwaC52MS5RdWVyeVJlcXVlc3RJbnB1dEID4EECIk8KEVF1ZXJ5UmVxdWVzdElucHV0EjoKB3BheWxvYWQYASABKAsyKS5nb29nbGUuaG9tZS5ncmFwaC52MS5RdWVyeVJlcXVlc3RQYXlsb2FkIksKE1F1ZXJ5UmVxdWVzdFBheWxvYWQSNAoHZGV2aWNlcxgBIAMoCzIjLmdvb2dsZS5ob21lLmdyYXBoLnYxLkFnZW50RGV2aWNlSWQiGwoNQWdlbnREZXZpY2VJZBIKCgJpZBgBIAEoCSJgCg1RdWVyeVJlc3BvbnNlEhIKCnJlcXVlc3RfaWQYASABKAkSOwoHcGF5bG9hZBgCIAEoCzIqLmdvb2dsZS5ob21lLmdyYXBoLnYxLlF1ZXJ5UmVzcG9uc2VQYXlsb2FkIqkBChRRdWVyeVJlc3BvbnNlUGF5bG9hZBJICgdkZXZpY2VzGAEgAygLMjcuZ29vZ2xlLmhvbWUuZ3JhcGgudjEuUXVlcnlSZXNwb25zZVBheWxvYWQuRGV2aWNlc0VudHJ5GkcKDERldmljZXNFbnRyeRILCgNrZXkYASABKAkSJgoFdmFsdWUYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0OgI4ASI9CgtTeW5jUmVxdWVzdBISCgpyZXF1ZXN0X2lkGAEgASgJEhoKDWFnZW50X3VzZXJfaWQYAiABKAlCA+BBAiJeCgxTeW5jUmVzcG9uc2USEgoKcmVxdWVzdF9pZBgBIAEoCRI6CgdwYXlsb2FkGAIgASgLMikuZ29vZ2xlLmhvbWUuZ3JhcGgudjEuU3luY1Jlc3BvbnNlUGF5bG9hZCJbChNTeW5jUmVzcG9uc2VQYXlsb2FkEhUKDWFnZW50X3VzZXJfaWQYASABKAkSLQoHZGV2aWNlcxgCIAMoCzIcLmdvb2dsZS5ob21lLmdyYXBoLnYxLkRldmljZTK4BwoTSG9tZUdyYXBoQXBpU2VydmljZRKrAQoSUmVxdWVzdFN5bmNEZXZpY2VzEi8uZ29vZ2xlLmhvbWUuZ3JhcGgudjEuUmVxdWVzdFN5bmNEZXZpY2VzUmVxdWVzdBowLmdvb2dsZS5ob21lLmdyYXBoLnYxLlJlcXVlc3RTeW5jRGV2aWNlc1Jlc3BvbnNlIjLaQQ1hZ2VudF91c2VyX2lkgtPkkwIcOgEqIhcvdjEvZGV2aWNlczpyZXF1ZXN0U3luYxLuAQoaUmVwb3J0U3RhdGVBbmROb3RpZmljYXRpb24SNy5nb29nbGUuaG9tZS5ncmFwaC52MS5SZXBvcnRTdGF0ZUFuZE5vdGlmaWNhdGlvblJlcXVlc3QaOC5nb29nbGUuaG9tZS5ncmFwaC52MS5SZXBvcnRTdGF0ZUFuZE5vdGlmaWNhdGlvblJlc3BvbnNlIl3aQSlyZXF1ZXN0X2lkLGV2ZW50X2lkLGFnZW50X3VzZXJfaWQscGF5bG9hZILT5JMCKzoBKiImL3YxL2RldmljZXM6cmVwb3J0U3RhdGVBbmROb3RpZmljYXRpb24SnQEKD0RlbGV0ZUFnZW50VXNlchIsLmdvb2dsZS5ob21lLmdyYXBoLnYxLkRlbGV0ZUFnZW50VXNlclJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiRNpBGHJlcXVlc3RfaWQsYWdlbnRfdXNlcl9pZILT5JMCIyohL3YxL3thZ2VudF91c2VyX2lkPWFnZW50VXNlcnMvKip9EpABCgVRdWVyeRIiLmdvb2dsZS5ob21lLmdyYXBoLnYxLlF1ZXJ5UmVxdWVzdBojLmdvb2dsZS5ob21lLmdyYXBoLnYxLlF1ZXJ5UmVzcG9uc2UiPtpBH3JlcXVlc3RfaWQsYWdlbnRfdXNlcl9pZCxpbnB1dHOC0+STAhY6ASoiES92MS9kZXZpY2VzOnF1ZXJ5EoUBCgRTeW5jEiEuZ29vZ2xlLmhvbWUuZ3JhcGgudjEuU3luY1JlcXVlc3QaIi5nb29nbGUuaG9tZS5ncmFwaC52MS5TeW5jUmVzcG9uc2UiNtpBGHJlcXVlc3RfaWQsYWdlbnRfdXNlcl9pZILT5JMCFToBKiIQL3YxL2RldmljZXM6c3luYxpHykEYaG9tZWdyYXBoLmdvb2dsZWFwaXMuY29t0kEpaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9ob21lZ3JhcGhCzwEKGGNvbS5nb29nbGUuaG9tZS5ncmFwaC52MUIYSG9tZUdyYXBoQXBpU2VydmljZVByb3RvWjlnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2hvbWUvZ3JhcGgvdjE7Z3JhcGjKAhRHb29nbGVcSG9tZVxHcmFwaFxWMepBRgomaG9tZWdyYXBoLmdvb2dsZWFwaXMuY29tL0FnZW50VXNlclBhdGgSHGFnZW50VXNlcnMve2FnZW50X3VzZXJfcGF0aH1iBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_home_graph_v1_device, file_google_protobuf_empty, file_google_protobuf_struct]);

/**
 * Request type for the
 * [`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices)
 * call.
 *
 * @generated from message google.home.graph.v1.RequestSyncDevicesRequest
 */
export type RequestSyncDevicesRequest = Message<"google.home.graph.v1.RequestSyncDevicesRequest"> & {
  /**
   * Required. Third-party user ID.
   *
   * @generated from field: string agent_user_id = 1;
   */
  agentUserId: string;

  /**
   * Optional. If set, the request will be added to a queue and a response will
   * be returned immediately. This enables concurrent requests for the given
   * `agent_user_id`, but the caller will not receive any error responses.
   *
   * @generated from field: bool async = 2;
   */
  async: boolean;
};

/**
 * Describes the message google.home.graph.v1.RequestSyncDevicesRequest.
 * Use `create(RequestSyncDevicesRequestSchema)` to create a new message.
 */
export const RequestSyncDevicesRequestSchema: GenMessage<RequestSyncDevicesRequest> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 0);

/**
 * Response type for the
 * [`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices)
 * call.
 *
 * Intentionally empty upon success. An HTTP response code is returned
 * with more details upon failure.
 *
 * @generated from message google.home.graph.v1.RequestSyncDevicesResponse
 */
export type RequestSyncDevicesResponse = Message<"google.home.graph.v1.RequestSyncDevicesResponse"> & {
};

/**
 * Describes the message google.home.graph.v1.RequestSyncDevicesResponse.
 * Use `create(RequestSyncDevicesResponseSchema)` to create a new message.
 */
export const RequestSyncDevicesResponseSchema: GenMessage<RequestSyncDevicesResponse> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 1);

/**
 * Request type for the
 * [`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification)
 * call. It may include states, notifications, or both. States and notifications
 * are defined per `device_id` (for example, "123" and "456" in the following
 * example).
 *
 * Example:
 *
 * ```json
 * {
 *   "requestId": "ff36a3cc-ec34-11e6-b1a0-64510650abcf",
 *   "agentUserId": "1234",
 *   "payload": {
 *     "devices": {
 *       "states": {
 *         "123": {
 *           "on": true
 *         },
 *         "456": {
 *           "on": true,
 *           "brightness": 10
 *         }
 *       },
 *     }
 *   }
 * }
 * ```
 *
 * @generated from message google.home.graph.v1.ReportStateAndNotificationRequest
 */
export type ReportStateAndNotificationRequest = Message<"google.home.graph.v1.ReportStateAndNotificationRequest"> & {
  /**
   * Request ID used for debugging.
   *
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * Unique identifier per event (for example, a doorbell press).
   *
   * @generated from field: string event_id = 4;
   */
  eventId: string;

  /**
   * Required. Third-party user ID.
   *
   * @generated from field: string agent_user_id = 2;
   */
  agentUserId: string;

  /**
   * Deprecated.
   *
   * @generated from field: string follow_up_token = 5 [deprecated = true];
   * @deprecated
   */
  followUpToken: string;

  /**
   * Required. State of devices to update and notification metadata for devices.
   *
   * @generated from field: google.home.graph.v1.StateAndNotificationPayload payload = 3;
   */
  payload?: StateAndNotificationPayload;
};

/**
 * Describes the message google.home.graph.v1.ReportStateAndNotificationRequest.
 * Use `create(ReportStateAndNotificationRequestSchema)` to create a new message.
 */
export const ReportStateAndNotificationRequestSchema: GenMessage<ReportStateAndNotificationRequest> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 2);

/**
 * Response type for the
 * [`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification)
 * call.
 *
 * @generated from message google.home.graph.v1.ReportStateAndNotificationResponse
 */
export type ReportStateAndNotificationResponse = Message<"google.home.graph.v1.ReportStateAndNotificationResponse"> & {
  /**
   * Request ID copied from
   * [ReportStateAndNotificationRequest][google.home.graph.v1.ReportStateAndNotificationRequest].
   *
   * @generated from field: string request_id = 1;
   */
  requestId: string;
};

/**
 * Describes the message google.home.graph.v1.ReportStateAndNotificationResponse.
 * Use `create(ReportStateAndNotificationResponseSchema)` to create a new message.
 */
export const ReportStateAndNotificationResponseSchema: GenMessage<ReportStateAndNotificationResponse> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 3);

/**
 * Payload containing the state and notification information for devices.
 *
 * @generated from message google.home.graph.v1.StateAndNotificationPayload
 */
export type StateAndNotificationPayload = Message<"google.home.graph.v1.StateAndNotificationPayload"> & {
  /**
   * The devices for updating state and sending notifications.
   *
   * @generated from field: google.home.graph.v1.ReportStateAndNotificationDevice devices = 1;
   */
  devices?: ReportStateAndNotificationDevice;
};

/**
 * Describes the message google.home.graph.v1.StateAndNotificationPayload.
 * Use `create(StateAndNotificationPayloadSchema)` to create a new message.
 */
export const StateAndNotificationPayloadSchema: GenMessage<StateAndNotificationPayload> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 4);

/**
 * The states and notifications specific to a device.
 *
 * @generated from message google.home.graph.v1.ReportStateAndNotificationDevice
 */
export type ReportStateAndNotificationDevice = Message<"google.home.graph.v1.ReportStateAndNotificationDevice"> & {
  /**
   * States of devices to update. See the **Device STATES** section
   * of the individual trait [reference
   * guides](https://developers.home.google.com/cloud-to-cloud/traits).
   *
   * @generated from field: google.protobuf.Struct states = 1;
   */
  states?: JsonObject;

  /**
   * Notifications metadata for devices. See the **Device NOTIFICATIONS**
   * section of the individual trait [reference
   * guides](https://developers.home.google.com/cloud-to-cloud/traits).
   *
   * @generated from field: google.protobuf.Struct notifications = 2;
   */
  notifications?: JsonObject;
};

/**
 * Describes the message google.home.graph.v1.ReportStateAndNotificationDevice.
 * Use `create(ReportStateAndNotificationDeviceSchema)` to create a new message.
 */
export const ReportStateAndNotificationDeviceSchema: GenMessage<ReportStateAndNotificationDevice> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 5);

/**
 * Request type for the
 * [`DeleteAgentUser`](#google.home.graph.v1.HomeGraphApiService.DeleteAgentUser)
 * call.
 *
 * @generated from message google.home.graph.v1.DeleteAgentUserRequest
 */
export type DeleteAgentUserRequest = Message<"google.home.graph.v1.DeleteAgentUserRequest"> & {
  /**
   * Request ID used for debugging.
   *
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * Required. Third-party user ID.
   *
   * @generated from field: string agent_user_id = 2;
   */
  agentUserId: string;
};

/**
 * Describes the message google.home.graph.v1.DeleteAgentUserRequest.
 * Use `create(DeleteAgentUserRequestSchema)` to create a new message.
 */
export const DeleteAgentUserRequestSchema: GenMessage<DeleteAgentUserRequest> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 6);

/**
 * Request type for the
 * [`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call.
 *
 * @generated from message google.home.graph.v1.QueryRequest
 */
export type QueryRequest = Message<"google.home.graph.v1.QueryRequest"> & {
  /**
   * Request ID used for debugging.
   *
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * Required. Third-party user ID.
   *
   * @generated from field: string agent_user_id = 2;
   */
  agentUserId: string;

  /**
   * Required. Inputs containing third-party device IDs for which to
   * get the device states.
   *
   * @generated from field: repeated google.home.graph.v1.QueryRequestInput inputs = 3;
   */
  inputs: QueryRequestInput[];
};

/**
 * Describes the message google.home.graph.v1.QueryRequest.
 * Use `create(QueryRequestSchema)` to create a new message.
 */
export const QueryRequestSchema: GenMessage<QueryRequest> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 7);

/**
 * Device ID inputs to [QueryRequest][google.home.graph.v1.QueryRequest].
 *
 * @generated from message google.home.graph.v1.QueryRequestInput
 */
export type QueryRequestInput = Message<"google.home.graph.v1.QueryRequestInput"> & {
  /**
   * Payload containing third-party device IDs.
   *
   * @generated from field: google.home.graph.v1.QueryRequestPayload payload = 1;
   */
  payload?: QueryRequestPayload;
};

/**
 * Describes the message google.home.graph.v1.QueryRequestInput.
 * Use `create(QueryRequestInputSchema)` to create a new message.
 */
export const QueryRequestInputSchema: GenMessage<QueryRequestInput> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 8);

/**
 * Payload containing device IDs.
 *
 * @generated from message google.home.graph.v1.QueryRequestPayload
 */
export type QueryRequestPayload = Message<"google.home.graph.v1.QueryRequestPayload"> & {
  /**
   * Third-party device IDs for which to get the device states.
   *
   * @generated from field: repeated google.home.graph.v1.AgentDeviceId devices = 1;
   */
  devices: AgentDeviceId[];
};

/**
 * Describes the message google.home.graph.v1.QueryRequestPayload.
 * Use `create(QueryRequestPayloadSchema)` to create a new message.
 */
export const QueryRequestPayloadSchema: GenMessage<QueryRequestPayload> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 9);

/**
 * Third-party device ID for one device.
 *
 * @generated from message google.home.graph.v1.AgentDeviceId
 */
export type AgentDeviceId = Message<"google.home.graph.v1.AgentDeviceId"> & {
  /**
   * Third-party device ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message google.home.graph.v1.AgentDeviceId.
 * Use `create(AgentDeviceIdSchema)` to create a new message.
 */
export const AgentDeviceIdSchema: GenMessage<AgentDeviceId> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 10);

/**
 * Response type for the
 * [`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call.
 * This should follow the same format as the Google smart home
 * `action.devices.QUERY`
 * [response](https://developers.home.google.com/cloud-to-cloud/intents/query).
 *
 * Example:
 *
 * ```json
 * {
 *   "requestId": "ff36a3cc-ec34-11e6-b1a0-64510650abcf",
 *   "payload": {
 *     "devices": {
 *       "123": {
 *         "on": true,
 *         "online": true
 *       },
 *       "456": {
 *         "on": true,
 *         "online": true,
 *         "brightness": 80,
 *         "color": {
 *           "name": "cerulean",
 *           "spectrumRGB": 31655
 *         }
 *       }
 *     }
 *   }
 * }
 * ```
 *
 * @generated from message google.home.graph.v1.QueryResponse
 */
export type QueryResponse = Message<"google.home.graph.v1.QueryResponse"> & {
  /**
   * Request ID used for debugging. Copied from the request.
   *
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * Device states for the devices given in the request.
   *
   * @generated from field: google.home.graph.v1.QueryResponsePayload payload = 2;
   */
  payload?: QueryResponsePayload;
};

/**
 * Describes the message google.home.graph.v1.QueryResponse.
 * Use `create(QueryResponseSchema)` to create a new message.
 */
export const QueryResponseSchema: GenMessage<QueryResponse> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 11);

/**
 * Payload containing device states information.
 *
 * @generated from message google.home.graph.v1.QueryResponsePayload
 */
export type QueryResponsePayload = Message<"google.home.graph.v1.QueryResponsePayload"> & {
  /**
   * States of the devices. Map of third-party device ID to struct of device
   * states.
   *
   * @generated from field: map<string, google.protobuf.Struct> devices = 1;
   */
  devices: { [key: string]: JsonObject };
};

/**
 * Describes the message google.home.graph.v1.QueryResponsePayload.
 * Use `create(QueryResponsePayloadSchema)` to create a new message.
 */
export const QueryResponsePayloadSchema: GenMessage<QueryResponsePayload> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 12);

/**
 * Request type for the [`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync)
 * call.
 *
 * @generated from message google.home.graph.v1.SyncRequest
 */
export type SyncRequest = Message<"google.home.graph.v1.SyncRequest"> & {
  /**
   * Request ID used for debugging.
   *
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * Required. Third-party user ID.
   *
   * @generated from field: string agent_user_id = 2;
   */
  agentUserId: string;
};

/**
 * Describes the message google.home.graph.v1.SyncRequest.
 * Use `create(SyncRequestSchema)` to create a new message.
 */
export const SyncRequestSchema: GenMessage<SyncRequest> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 13);

/**
 * Response type for the
 * [`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync) call.
 * This should follow the same format as the Google smart home
 * `action.devices.SYNC`
 * [response](https://developers.home.google.com/cloud-to-cloud/intents/sync).
 *
 * Example:
 *
 * ```json
 * {
 *   "requestId": "ff36a3cc-ec34-11e6-b1a0-64510650abcf",
 *   "payload": {
 *     "agentUserId": "1836.15267389",
 *     "devices": [{
 *       "id": "123",
 *       "type": "action.devices.types.OUTLET",
 *       "traits": [
 *         "action.devices.traits.OnOff"
 *       ],
 *       "name": {
 *         "defaultNames": ["My Outlet 1234"],
 *         "name": "Night light",
 *         "nicknames": ["wall plug"]
 *       },
 *       "willReportState": false,
 *       "deviceInfo": {
 *         "manufacturer": "lights-out-inc",
 *         "model": "hs1234",
 *         "hwVersion": "3.2",
 *         "swVersion": "11.4"
 *       },
 *       "customData": {
 *         "fooValue": 74,
 *         "barValue": true,
 *         "bazValue": "foo"
 *       }
 *     }]
 *   }
 * }
 * ```
 *
 * @generated from message google.home.graph.v1.SyncResponse
 */
export type SyncResponse = Message<"google.home.graph.v1.SyncResponse"> & {
  /**
   * Request ID used for debugging. Copied from the request.
   *
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * Devices associated with the third-party user.
   *
   * @generated from field: google.home.graph.v1.SyncResponsePayload payload = 2;
   */
  payload?: SyncResponsePayload;
};

/**
 * Describes the message google.home.graph.v1.SyncResponse.
 * Use `create(SyncResponseSchema)` to create a new message.
 */
export const SyncResponseSchema: GenMessage<SyncResponse> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 14);

/**
 * Payload containing device information.
 *
 * @generated from message google.home.graph.v1.SyncResponsePayload
 */
export type SyncResponsePayload = Message<"google.home.graph.v1.SyncResponsePayload"> & {
  /**
   * Third-party user ID
   *
   * @generated from field: string agent_user_id = 1;
   */
  agentUserId: string;

  /**
   * Devices associated with the third-party user.
   *
   * @generated from field: repeated google.home.graph.v1.Device devices = 2;
   */
  devices: Device[];
};

/**
 * Describes the message google.home.graph.v1.SyncResponsePayload.
 * Use `create(SyncResponsePayloadSchema)` to create a new message.
 */
export const SyncResponsePayloadSchema: GenMessage<SyncResponsePayload> = /*@__PURE__*/
  messageDesc(file_google_home_graph_v1_homegraph, 15);

/**
 * Google Home Graph API service. The Home Graph service provides support for
 * accessing first-party and third-party devices stored in Google's Home Graph.
 * The Home Graph database provides contextual data about the relationships
 * between devices and the home.
 *
 * For more details, see the [Home Graph developer
 * guide](https://developers.home.google.com/cloud-to-cloud/primer/home-graph).
 *
 * @generated from service google.home.graph.v1.HomeGraphApiService
 */
export const HomeGraphApiService: GenService<{
  /**
   * Requests Google to send an `action.devices.SYNC`
   * [intent](https://developers.home.google.com/cloud-to-cloud/intents/sync)
   * to your smart home Action to update device metadata for the given user.
   *
   *
   * The third-party user's identity is passed via the `agent_user_id`
   * (see
   * [RequestSyncDevicesRequest][google.home.graph.v1.RequestSyncDevicesRequest]).
   * This request must be authorized using service account credentials from your
   * Actions console project.
   *
   * @generated from rpc google.home.graph.v1.HomeGraphApiService.RequestSyncDevices
   */
  requestSyncDevices: {
    methodKind: "unary";
    input: typeof RequestSyncDevicesRequestSchema;
    output: typeof RequestSyncDevicesResponseSchema;
  },
  /**
   * Reports device state and optionally sends device notifications.
   * Called by your smart home Action when the state of a third-party device
   * changes or you need to send a notification about the device.
   * See [Implement Report
   * State](https://developers.home.google.com/cloud-to-cloud/integration/report-state)
   * for more information.
   *
   * This method updates the device state according to its declared
   * [traits](https://developers.home.google.com/cloud-to-cloud/primer/device-types-and-traits).
   * Publishing a new state value outside of these traits will result in an
   * `INVALID_ARGUMENT` error response.
   *
   * The third-party user's identity is passed in via the `agent_user_id`
   * (see
   * [ReportStateAndNotificationRequest][google.home.graph.v1.ReportStateAndNotificationRequest]).
   * This request must be authorized using service account credentials from your
   * Actions console project.
   *
   * @generated from rpc google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification
   */
  reportStateAndNotification: {
    methodKind: "unary";
    input: typeof ReportStateAndNotificationRequestSchema;
    output: typeof ReportStateAndNotificationResponseSchema;
  },
  /**
   * Unlinks the given third-party user from your smart home Action.
   * All data related to this user will be deleted.
   *
   * For more details on how users link their accounts, see
   * [fulfillment and
   * authentication](https://developers.home.google.com/cloud-to-cloud/primer/fulfillment).
   *
   * The third-party user's identity is passed in via the `agent_user_id`
   * (see
   * [DeleteAgentUserRequest][google.home.graph.v1.DeleteAgentUserRequest]).
   * This request must be authorized using service account credentials from your
   * Actions console project.
   *
   * @generated from rpc google.home.graph.v1.HomeGraphApiService.DeleteAgentUser
   */
  deleteAgentUser: {
    methodKind: "unary";
    input: typeof DeleteAgentUserRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Gets the current states in Home Graph for the given set of the third-party
   * user's devices.
   *
   * The third-party user's identity is passed in via the `agent_user_id`
   * (see [QueryRequest][google.home.graph.v1.QueryRequest]).
   * This request must be authorized using service account credentials from your
   * Actions console project.
   *
   * @generated from rpc google.home.graph.v1.HomeGraphApiService.Query
   */
  query: {
    methodKind: "unary";
    input: typeof QueryRequestSchema;
    output: typeof QueryResponseSchema;
  },
  /**
   * Gets all the devices associated with the given third-party user.
   *
   * The third-party user's identity is passed in via the `agent_user_id`
   * (see [SyncRequest][google.home.graph.v1.SyncRequest]).
   * This request must be authorized using service account credentials from your
   * Actions console project.
   *
   * @generated from rpc google.home.graph.v1.HomeGraphApiService.Sync
   */
  sync: {
    methodKind: "unary";
    input: typeof SyncRequestSchema;
    output: typeof SyncResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_home_graph_v1_homegraph, 0);

