// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/datastore/v1/entity.proto (package google.datastore.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { NullValue, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { LatLng } from "../../type/latlng_pb";
import { file_google_type_latlng } from "../../type/latlng_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/datastore/v1/entity.proto.
 */
export const file_google_datastore_v1_entity: GenFile = /*@__PURE__*/
  fileDesc("CiBnb29nbGUvZGF0YXN0b3JlL3YxL2VudGl0eS5wcm90bxITZ29vZ2xlLmRhdGFzdG9yZS52MSJMCgtQYXJ0aXRpb25JZBISCgpwcm9qZWN0X2lkGAIgASgJEhMKC2RhdGFiYXNlX2lkGAMgASgJEhQKDG5hbWVzcGFjZV9pZBgEIAEoCSK3AQoDS2V5EjYKDHBhcnRpdGlvbl9pZBgBIAEoCzIgLmdvb2dsZS5kYXRhc3RvcmUudjEuUGFydGl0aW9uSWQSMgoEcGF0aBgCIAMoCzIkLmdvb2dsZS5kYXRhc3RvcmUudjEuS2V5LlBhdGhFbGVtZW50GkQKC1BhdGhFbGVtZW50EgwKBGtpbmQYASABKAkSDAoCaWQYAiABKANIABIOCgRuYW1lGAMgASgJSABCCQoHaWRfdHlwZSI4CgpBcnJheVZhbHVlEioKBnZhbHVlcxgBIAMoCzIaLmdvb2dsZS5kYXRhc3RvcmUudjEuVmFsdWUi8QMKBVZhbHVlEjAKCm51bGxfdmFsdWUYCyABKA4yGi5nb29nbGUucHJvdG9idWYuTnVsbFZhbHVlSAASFwoNYm9vbGVhbl92YWx1ZRgBIAEoCEgAEhcKDWludGVnZXJfdmFsdWUYAiABKANIABIWCgxkb3VibGVfdmFsdWUYAyABKAFIABI1Cg90aW1lc3RhbXBfdmFsdWUYCiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAASLQoJa2V5X3ZhbHVlGAUgASgLMhguZ29vZ2xlLmRhdGFzdG9yZS52MS5LZXlIABIWCgxzdHJpbmdfdmFsdWUYESABKAlIABIUCgpibG9iX3ZhbHVlGBIgASgMSAASLgoPZ2VvX3BvaW50X3ZhbHVlGAggASgLMhMuZ29vZ2xlLnR5cGUuTGF0TG5nSAASMwoMZW50aXR5X3ZhbHVlGAYgASgLMhsuZ29vZ2xlLmRhdGFzdG9yZS52MS5FbnRpdHlIABI2CgthcnJheV92YWx1ZRgJIAEoCzIfLmdvb2dsZS5kYXRhc3RvcmUudjEuQXJyYXlWYWx1ZUgAEg8KB21lYW5pbmcYDiABKAUSHAoUZXhjbHVkZV9mcm9tX2luZGV4ZXMYEyABKAhCDAoKdmFsdWVfdHlwZSK/AQoGRW50aXR5EiUKA2tleRgBIAEoCzIYLmdvb2dsZS5kYXRhc3RvcmUudjEuS2V5Ej8KCnByb3BlcnRpZXMYAyADKAsyKy5nb29nbGUuZGF0YXN0b3JlLnYxLkVudGl0eS5Qcm9wZXJ0aWVzRW50cnkaTQoPUHJvcGVydGllc0VudHJ5EgsKA2tleRgBIAEoCRIpCgV2YWx1ZRgCIAEoCzIaLmdvb2dsZS5kYXRhc3RvcmUudjEuVmFsdWU6AjgBQrwBChdjb20uZ29vZ2xlLmRhdGFzdG9yZS52MUILRW50aXR5UHJvdG9QAVo7Y2xvdWQuZ29vZ2xlLmNvbS9nby9kYXRhc3RvcmUvYXBpdjEvZGF0YXN0b3JlcGI7ZGF0YXN0b3JlcGKqAhlHb29nbGUuQ2xvdWQuRGF0YXN0b3JlLlYxygIZR29vZ2xlXENsb3VkXERhdGFzdG9yZVxWMeoCHEdvb2dsZTo6Q2xvdWQ6OkRhdGFzdG9yZTo6VjFiBnByb3RvMw", [file_google_protobuf_struct, file_google_protobuf_timestamp, file_google_type_latlng]);

/**
 * A partition ID identifies a grouping of entities. The grouping is always
 * by project and namespace, however the namespace ID may be empty.
 *
 * A partition ID contains several dimensions:
 * project ID and namespace ID.
 *
 * Partition dimensions:
 *
 * - May be `""`.
 * - Must be valid UTF-8 bytes.
 * - Must have values that match regex `[A-Za-z\d\.\-_]{1,100}`
 * If the value of any dimension matches regex `__.*__`, the partition is
 * reserved/read-only.
 * A reserved/read-only partition ID is forbidden in certain documented
 * contexts.
 *
 * Foreign partition IDs (in which the project ID does
 * not match the context project ID ) are discouraged.
 * Reads and writes of foreign partition IDs may fail if the project is not in
 * an active state.
 *
 * @generated from message google.datastore.v1.PartitionId
 */
export type PartitionId = Message<"google.datastore.v1.PartitionId"> & {
  /**
   * The ID of the project to which the entities belong.
   *
   * @generated from field: string project_id = 2;
   */
  projectId: string;

  /**
   * If not empty, the ID of the database to which the entities
   * belong.
   *
   * @generated from field: string database_id = 3;
   */
  databaseId: string;

  /**
   * If not empty, the ID of the namespace to which the entities belong.
   *
   * @generated from field: string namespace_id = 4;
   */
  namespaceId: string;
};

/**
 * Describes the message google.datastore.v1.PartitionId.
 * Use `create(PartitionIdSchema)` to create a new message.
 */
export const PartitionIdSchema: GenMessage<PartitionId> = /*@__PURE__*/
  messageDesc(file_google_datastore_v1_entity, 0);

/**
 * A unique identifier for an entity.
 * If a key's partition ID or any of its path kinds or names are
 * reserved/read-only, the key is reserved/read-only.
 * A reserved/read-only key is forbidden in certain documented contexts.
 *
 * @generated from message google.datastore.v1.Key
 */
export type Key = Message<"google.datastore.v1.Key"> & {
  /**
   * Entities are partitioned into subsets, currently identified by a project
   * ID and namespace ID.
   * Queries are scoped to a single partition.
   *
   * @generated from field: google.datastore.v1.PartitionId partition_id = 1;
   */
  partitionId?: PartitionId;

  /**
   * The entity path.
   * An entity path consists of one or more elements composed of a kind and a
   * string or numerical identifier, which identify entities. The first
   * element identifies a _root entity_, the second element identifies
   * a _child_ of the root entity, the third element identifies a child of the
   * second entity, and so forth. The entities identified by all prefixes of
   * the path are called the element's _ancestors_.
   *
   * An entity path is always fully complete: *all* of the entity's ancestors
   * are required to be in the path along with the entity identifier itself.
   * The only exception is that in some documented cases, the identifier in the
   * last path element (for the entity) itself may be omitted. For example,
   * the last path element of the key of `Mutation.insert` may have no
   * identifier.
   *
   * A path can never be empty, and a path can have at most 100 elements.
   *
   * @generated from field: repeated google.datastore.v1.Key.PathElement path = 2;
   */
  path: Key_PathElement[];
};

/**
 * Describes the message google.datastore.v1.Key.
 * Use `create(KeySchema)` to create a new message.
 */
export const KeySchema: GenMessage<Key> = /*@__PURE__*/
  messageDesc(file_google_datastore_v1_entity, 1);

/**
 * A (kind, ID/name) pair used to construct a key path.
 *
 * If either name or ID is set, the element is complete.
 * If neither is set, the element is incomplete.
 *
 * @generated from message google.datastore.v1.Key.PathElement
 */
export type Key_PathElement = Message<"google.datastore.v1.Key.PathElement"> & {
  /**
   * The kind of the entity.
   *
   * A kind matching regex `__.*__` is reserved/read-only.
   * A kind must not contain more than 1500 bytes when UTF-8 encoded.
   * Cannot be `""`.
   *
   * Must be valid UTF-8 bytes. Legacy values that are not valid UTF-8 are
   * encoded as `__bytes<X>__` where `<X>` is the base-64 encoding of the
   * bytes.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The type of ID.
   *
   * @generated from oneof google.datastore.v1.Key.PathElement.id_type
   */
  idType: {
    /**
     * The auto-allocated ID of the entity.
     *
     * Never equal to zero. Values less than zero are discouraged and may not
     * be supported in the future.
     *
     * @generated from field: int64 id = 2;
     */
    value: bigint;
    case: "id";
  } | {
    /**
     * The name of the entity.
     *
     * A name matching regex `__.*__` is reserved/read-only.
     * A name must not be more than 1500 bytes when UTF-8 encoded.
     * Cannot be `""`.
     *
     * Must be valid UTF-8 bytes. Legacy values that are not valid UTF-8 are
     * encoded as `__bytes<X>__` where `<X>` is the base-64 encoding of the
     * bytes.
     *
     * @generated from field: string name = 3;
     */
    value: string;
    case: "name";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message google.datastore.v1.Key.PathElement.
 * Use `create(Key_PathElementSchema)` to create a new message.
 */
export const Key_PathElementSchema: GenMessage<Key_PathElement> = /*@__PURE__*/
  messageDesc(file_google_datastore_v1_entity, 1, 0);

/**
 * An array value.
 *
 * @generated from message google.datastore.v1.ArrayValue
 */
export type ArrayValue = Message<"google.datastore.v1.ArrayValue"> & {
  /**
   * Values in the array.
   * The order of values in an array is preserved as long as all values have
   * identical settings for 'exclude_from_indexes'.
   *
   * @generated from field: repeated google.datastore.v1.Value values = 1;
   */
  values: Value[];
};

/**
 * Describes the message google.datastore.v1.ArrayValue.
 * Use `create(ArrayValueSchema)` to create a new message.
 */
export const ArrayValueSchema: GenMessage<ArrayValue> = /*@__PURE__*/
  messageDesc(file_google_datastore_v1_entity, 2);

/**
 * A message that can hold any of the supported value types and associated
 * metadata.
 *
 * @generated from message google.datastore.v1.Value
 */
export type Value = Message<"google.datastore.v1.Value"> & {
  /**
   * Must have a value set.
   *
   * @generated from oneof google.datastore.v1.Value.value_type
   */
  valueType: {
    /**
     * A null value.
     *
     * @generated from field: google.protobuf.NullValue null_value = 11;
     */
    value: NullValue;
    case: "nullValue";
  } | {
    /**
     * A boolean value.
     *
     * @generated from field: bool boolean_value = 1;
     */
    value: boolean;
    case: "booleanValue";
  } | {
    /**
     * An integer value.
     *
     * @generated from field: int64 integer_value = 2;
     */
    value: bigint;
    case: "integerValue";
  } | {
    /**
     * A double value.
     *
     * @generated from field: double double_value = 3;
     */
    value: number;
    case: "doubleValue";
  } | {
    /**
     * A timestamp value.
     * When stored in the Datastore, precise only to microseconds;
     * any additional precision is rounded down.
     *
     * @generated from field: google.protobuf.Timestamp timestamp_value = 10;
     */
    value: Timestamp;
    case: "timestampValue";
  } | {
    /**
     * A key value.
     *
     * @generated from field: google.datastore.v1.Key key_value = 5;
     */
    value: Key;
    case: "keyValue";
  } | {
    /**
     * A UTF-8 encoded string value.
     * When `exclude_from_indexes` is false (it is indexed) , may have at most
     * 1500 bytes. Otherwise, may be set to at most 1,000,000 bytes.
     *
     * @generated from field: string string_value = 17;
     */
    value: string;
    case: "stringValue";
  } | {
    /**
     * A blob value.
     * May have at most 1,000,000 bytes.
     * When `exclude_from_indexes` is false, may have at most 1500 bytes.
     * In JSON requests, must be base64-encoded.
     *
     * @generated from field: bytes blob_value = 18;
     */
    value: Uint8Array;
    case: "blobValue";
  } | {
    /**
     * A geo point value representing a point on the surface of Earth.
     *
     * @generated from field: google.type.LatLng geo_point_value = 8;
     */
    value: LatLng;
    case: "geoPointValue";
  } | {
    /**
     * An entity value.
     *
     * - May have no key.
     * - May have a key with an incomplete key path.
     * - May have a reserved/read-only key.
     *
     * @generated from field: google.datastore.v1.Entity entity_value = 6;
     */
    value: Entity;
    case: "entityValue";
  } | {
    /**
     * An array value.
     * Cannot contain another array value.
     * A `Value` instance that sets field `array_value` must not set fields
     * `meaning` or `exclude_from_indexes`.
     *
     * @generated from field: google.datastore.v1.ArrayValue array_value = 9;
     */
    value: ArrayValue;
    case: "arrayValue";
  } | { case: undefined; value?: undefined };

  /**
   * The `meaning` field should only be populated for backwards compatibility.
   *
   * @generated from field: int32 meaning = 14;
   */
  meaning: number;

  /**
   * If the value should be excluded from all indexes including those defined
   * explicitly.
   *
   * @generated from field: bool exclude_from_indexes = 19;
   */
  excludeFromIndexes: boolean;
};

/**
 * Describes the message google.datastore.v1.Value.
 * Use `create(ValueSchema)` to create a new message.
 */
export const ValueSchema: GenMessage<Value> = /*@__PURE__*/
  messageDesc(file_google_datastore_v1_entity, 3);

/**
 * A Datastore data object.
 *
 * Must not exceed 1 MiB - 4 bytes.
 *
 * @generated from message google.datastore.v1.Entity
 */
export type Entity = Message<"google.datastore.v1.Entity"> & {
  /**
   * The entity's key.
   *
   * An entity must have a key, unless otherwise documented (for example,
   * an entity in `Value.entity_value` may have no key).
   * An entity's kind is its key path's last element's kind,
   * or null if it has no key.
   *
   * @generated from field: google.datastore.v1.Key key = 1;
   */
  key?: Key;

  /**
   * The entity's properties.
   * The map's keys are property names.
   * A property name matching regex `__.*__` is reserved.
   * A reserved property name is forbidden in certain documented contexts.
   * The map keys, represented as UTF-8, must not exceed 1,500 bytes and cannot
   * be empty.
   *
   * @generated from field: map<string, google.datastore.v1.Value> properties = 3;
   */
  properties: { [key: string]: Value };
};

/**
 * Describes the message google.datastore.v1.Entity.
 * Use `create(EntitySchema)` to create a new message.
 */
export const EntitySchema: GenMessage<Entity> = /*@__PURE__*/
  messageDesc(file_google_datastore_v1_entity, 4);

