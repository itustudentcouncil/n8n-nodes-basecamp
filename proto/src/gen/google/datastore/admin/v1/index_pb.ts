// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/datastore/admin/v1/index.proto (package google.datastore.admin.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/datastore/admin/v1/index.proto.
 */
export const file_google_datastore_admin_v1_index: GenFile = /*@__PURE__*/
  fileDesc("CiVnb29nbGUvZGF0YXN0b3JlL2FkbWluL3YxL2luZGV4LnByb3RvEhlnb29nbGUuZGF0YXN0b3JlLmFkbWluLnYxIuYECgVJbmRleBIXCgpwcm9qZWN0X2lkGAEgASgJQgPgQQMSFQoIaW5kZXhfaWQYAyABKAlCA+BBAxIRCgRraW5kGAQgASgJQgPgQQISRAoIYW5jZXN0b3IYBSABKA4yLS5nb29nbGUuZGF0YXN0b3JlLmFkbWluLnYxLkluZGV4LkFuY2VzdG9yTW9kZUID4EECEkkKCnByb3BlcnRpZXMYBiADKAsyMC5nb29nbGUuZGF0YXN0b3JlLmFkbWluLnYxLkluZGV4LkluZGV4ZWRQcm9wZXJ0eUID4EECEjoKBXN0YXRlGAcgASgOMiYuZ29vZ2xlLmRhdGFzdG9yZS5hZG1pbi52MS5JbmRleC5TdGF0ZUID4EEDGmgKD0luZGV4ZWRQcm9wZXJ0eRIRCgRuYW1lGAEgASgJQgPgQQISQgoJZGlyZWN0aW9uGAIgASgOMiouZ29vZ2xlLmRhdGFzdG9yZS5hZG1pbi52MS5JbmRleC5EaXJlY3Rpb25CA+BBAiJKCgxBbmNlc3Rvck1vZGUSHQoZQU5DRVNUT1JfTU9ERV9VTlNQRUNJRklFRBAAEggKBE5PTkUQARIRCg1BTExfQU5DRVNUT1JTEAIiRQoJRGlyZWN0aW9uEhkKFURJUkVDVElPTl9VTlNQRUNJRklFRBAAEg0KCUFTQ0VORElORxABEg4KCkRFU0NFTkRJTkcQAiJQCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgwKCENSRUFUSU5HEAESCQoFUkVBRFkQAhIMCghERUxFVElORxADEgkKBUVSUk9SEARC0gEKHWNvbS5nb29nbGUuZGF0YXN0b3JlLmFkbWluLnYxQgpJbmRleFByb3RvUAFaOWNsb3VkLmdvb2dsZS5jb20vZ28vZGF0YXN0b3JlL2FkbWluL2FwaXYxL2FkbWlucGI7YWRtaW5wYqoCH0dvb2dsZS5DbG91ZC5EYXRhc3RvcmUuQWRtaW4uVjHKAh9Hb29nbGVcQ2xvdWRcRGF0YXN0b3JlXEFkbWluXFYx6gIjR29vZ2xlOjpDbG91ZDo6RGF0YXN0b3JlOjpBZG1pbjo6VjFiBnByb3RvMw", [file_google_api_field_behavior]);

/**
 * Datastore composite index definition.
 *
 * @generated from message google.datastore.admin.v1.Index
 */
export type Index = Message<"google.datastore.admin.v1.Index"> & {
  /**
   * Output only. Project ID.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Output only. The resource ID of the index.
   *
   * @generated from field: string index_id = 3;
   */
  indexId: string;

  /**
   * Required. The entity kind to which this index applies.
   *
   * @generated from field: string kind = 4;
   */
  kind: string;

  /**
   * Required. The index's ancestor mode.  Must not be
   * ANCESTOR_MODE_UNSPECIFIED.
   *
   * @generated from field: google.datastore.admin.v1.Index.AncestorMode ancestor = 5;
   */
  ancestor: Index_AncestorMode;

  /**
   * Required. An ordered sequence of property names and their index attributes.
   *
   * Requires:
   *
   * * A maximum of 100 properties.
   *
   * @generated from field: repeated google.datastore.admin.v1.Index.IndexedProperty properties = 6;
   */
  properties: Index_IndexedProperty[];

  /**
   * Output only. The state of the index.
   *
   * @generated from field: google.datastore.admin.v1.Index.State state = 7;
   */
  state: Index_State;
};

/**
 * Describes the message google.datastore.admin.v1.Index.
 * Use `create(IndexSchema)` to create a new message.
 */
export const IndexSchema: GenMessage<Index> = /*@__PURE__*/
  messageDesc(file_google_datastore_admin_v1_index, 0);

/**
 * A property of an index.
 *
 * @generated from message google.datastore.admin.v1.Index.IndexedProperty
 */
export type Index_IndexedProperty = Message<"google.datastore.admin.v1.Index.IndexedProperty"> & {
  /**
   * Required. The property name to index.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The indexed property's direction.  Must not be
   * DIRECTION_UNSPECIFIED.
   *
   * @generated from field: google.datastore.admin.v1.Index.Direction direction = 2;
   */
  direction: Index_Direction;
};

/**
 * Describes the message google.datastore.admin.v1.Index.IndexedProperty.
 * Use `create(Index_IndexedPropertySchema)` to create a new message.
 */
export const Index_IndexedPropertySchema: GenMessage<Index_IndexedProperty> = /*@__PURE__*/
  messageDesc(file_google_datastore_admin_v1_index, 0, 0);

/**
 * For an ordered index, specifies whether each of the entity's ancestors
 * will be included.
 *
 * @generated from enum google.datastore.admin.v1.Index.AncestorMode
 */
export enum Index_AncestorMode {
  /**
   * The ancestor mode is unspecified.
   *
   * @generated from enum value: ANCESTOR_MODE_UNSPECIFIED = 0;
   */
  ANCESTOR_MODE_UNSPECIFIED = 0,

  /**
   * Do not include the entity's ancestors in the index.
   *
   * @generated from enum value: NONE = 1;
   */
  NONE = 1,

  /**
   * Include all the entity's ancestors in the index.
   *
   * @generated from enum value: ALL_ANCESTORS = 2;
   */
  ALL_ANCESTORS = 2,
}

/**
 * Describes the enum google.datastore.admin.v1.Index.AncestorMode.
 */
export const Index_AncestorModeSchema: GenEnum<Index_AncestorMode> = /*@__PURE__*/
  enumDesc(file_google_datastore_admin_v1_index, 0, 0);

/**
 * The direction determines how a property is indexed.
 *
 * @generated from enum google.datastore.admin.v1.Index.Direction
 */
export enum Index_Direction {
  /**
   * The direction is unspecified.
   *
   * @generated from enum value: DIRECTION_UNSPECIFIED = 0;
   */
  DIRECTION_UNSPECIFIED = 0,

  /**
   * The property's values are indexed so as to support sequencing in
   * ascending order and also query by <, >, <=, >=, and =.
   *
   * @generated from enum value: ASCENDING = 1;
   */
  ASCENDING = 1,

  /**
   * The property's values are indexed so as to support sequencing in
   * descending order and also query by <, >, <=, >=, and =.
   *
   * @generated from enum value: DESCENDING = 2;
   */
  DESCENDING = 2,
}

/**
 * Describes the enum google.datastore.admin.v1.Index.Direction.
 */
export const Index_DirectionSchema: GenEnum<Index_Direction> = /*@__PURE__*/
  enumDesc(file_google_datastore_admin_v1_index, 0, 1);

/**
 * The possible set of states of an index.
 *
 * @generated from enum google.datastore.admin.v1.Index.State
 */
export enum Index_State {
  /**
   * The state is unspecified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The index is being created, and cannot be used by queries.
   * There is an active long-running operation for the index.
   * The index is updated when writing an entity.
   * Some index data may exist.
   *
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * The index is ready to be used.
   * The index is updated when writing an entity.
   * The index is fully populated from all stored entities it applies to.
   *
   * @generated from enum value: READY = 2;
   */
  READY = 2,

  /**
   * The index is being deleted, and cannot be used by queries.
   * There is an active long-running operation for the index.
   * The index is not updated when writing an entity.
   * Some index data may exist.
   *
   * @generated from enum value: DELETING = 3;
   */
  DELETING = 3,

  /**
   * The index was being created or deleted, but something went wrong.
   * The index cannot by used by queries.
   * There is no active long-running operation for the index,
   * and the most recently finished long-running operation failed.
   * The index is not updated when writing an entity.
   * Some index data may exist.
   *
   * @generated from enum value: ERROR = 4;
   */
  ERROR = 4,
}

/**
 * Describes the enum google.datastore.admin.v1.Index.State.
 */
export const Index_StateSchema: GenEnum<Index_State> = /*@__PURE__*/
  enumDesc(file_google_datastore_admin_v1_index, 0, 2);

