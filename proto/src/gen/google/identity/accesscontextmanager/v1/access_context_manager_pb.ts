// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/identity/accesscontextmanager/v1/access_context_manager.proto (package google.identity.accesscontextmanager.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import { file_google_api_client } from "../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { GetIamPolicyRequestSchema, SetIamPolicyRequestSchema, TestIamPermissionsRequestSchema, TestIamPermissionsResponseSchema } from "../../../iam/v1/iam_policy_pb";
import { file_google_iam_v1_iam_policy } from "../../../iam/v1/iam_policy_pb";
import type { PolicySchema } from "../../../iam/v1/policy_pb";
import { file_google_iam_v1_policy } from "../../../iam/v1/policy_pb";
import type { AccessLevel, AccessLevelSchema } from "./access_level_pb";
import { file_google_identity_accesscontextmanager_v1_access_level } from "./access_level_pb";
import type { AccessPolicy, AccessPolicySchema } from "./access_policy_pb";
import { file_google_identity_accesscontextmanager_v1_access_policy } from "./access_policy_pb";
import type { GcpUserAccessBinding, GcpUserAccessBindingSchema } from "./gcp_user_access_binding_pb";
import { file_google_identity_accesscontextmanager_v1_gcp_user_access_binding } from "./gcp_user_access_binding_pb";
import type { ServicePerimeter, ServicePerimeterSchema } from "./service_perimeter_pb";
import { file_google_identity_accesscontextmanager_v1_service_perimeter } from "./service_perimeter_pb";
import type { OperationSchema } from "../../../longrunning/operations_pb";
import { file_google_longrunning_operations } from "../../../longrunning/operations_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/identity/accesscontextmanager/v1/access_context_manager.proto.
 */
export const file_google_identity_accesscontextmanager_v1_access_context_manager: GenFile = /*@__PURE__*/
  fileDesc("CkRnb29nbGUvaWRlbnRpdHkvYWNjZXNzY29udGV4dG1hbmFnZXIvdjEvYWNjZXNzX2NvbnRleHRfbWFuYWdlci5wcm90bxInZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxIowBChlMaXN0QWNjZXNzUG9saWNpZXNSZXF1ZXN0EkgKBnBhcmVudBgBIAEoCUI44EEC+kEyCjBjbG91ZHJlc291cmNlbWFuYWdlci5nb29nbGVhcGlzLmNvbS9Pcmdhbml6YXRpb24SEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkihQEKGkxpc3RBY2Nlc3NQb2xpY2llc1Jlc3BvbnNlEk4KD2FjY2Vzc19wb2xpY2llcxgBIAMoCzI1Lmdvb2dsZS5pZGVudGl0eS5hY2Nlc3Njb250ZXh0bWFuYWdlci52MS5BY2Nlc3NQb2xpY3kSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJImAKFkdldEFjY2Vzc1BvbGljeVJlcXVlc3QSRgoEbmFtZRgBIAEoCUI44EEC+kEyCjBhY2Nlc3Njb250ZXh0bWFuYWdlci5nb29nbGVhcGlzLmNvbS9BY2Nlc3NQb2xpY3kinQEKGVVwZGF0ZUFjY2Vzc1BvbGljeVJlcXVlc3QSSgoGcG9saWN5GAEgASgLMjUuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLkFjY2Vzc1BvbGljeUID4EECEjQKC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFza0ID4EECImMKGURlbGV0ZUFjY2Vzc1BvbGljeVJlcXVlc3QSRgoEbmFtZRgBIAEoCUI44EEC+kEyCjBhY2Nlc3Njb250ZXh0bWFuYWdlci5nb29nbGVhcGlzLmNvbS9BY2Nlc3NQb2xpY3ki3AEKF0xpc3RBY2Nlc3NMZXZlbHNSZXF1ZXN0EkcKBnBhcmVudBgBIAEoCUI34EEC+kExEi9hY2Nlc3Njb250ZXh0bWFuYWdlci5nb29nbGVhcGlzLmNvbS9BY2Nlc3NMZXZlbBIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCRJRChNhY2Nlc3NfbGV2ZWxfZm9ybWF0GAQgASgOMjQuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLkxldmVsRm9ybWF0IoABChhMaXN0QWNjZXNzTGV2ZWxzUmVzcG9uc2USSwoNYWNjZXNzX2xldmVscxgBIAMoCzI0Lmdvb2dsZS5pZGVudGl0eS5hY2Nlc3Njb250ZXh0bWFuYWdlci52MS5BY2Nlc3NMZXZlbBIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkisQEKFUdldEFjY2Vzc0xldmVsUmVxdWVzdBJFCgRuYW1lGAEgASgJQjfgQQL6QTEKL2FjY2Vzc2NvbnRleHRtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL0FjY2Vzc0xldmVsElEKE2FjY2Vzc19sZXZlbF9mb3JtYXQYAiABKA4yNC5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuTGV2ZWxGb3JtYXQitAEKGENyZWF0ZUFjY2Vzc0xldmVsUmVxdWVzdBJHCgZwYXJlbnQYASABKAlCN+BBAvpBMRIvYWNjZXNzY29udGV4dG1hbmFnZXIuZ29vZ2xlYXBpcy5jb20vQWNjZXNzTGV2ZWwSTwoMYWNjZXNzX2xldmVsGAIgASgLMjQuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLkFjY2Vzc0xldmVsQgPgQQIioQEKGFVwZGF0ZUFjY2Vzc0xldmVsUmVxdWVzdBJPCgxhY2Nlc3NfbGV2ZWwYASABKAsyNC5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuQWNjZXNzTGV2ZWxCA+BBAhI0Cgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2tCA+BBAiJhChhEZWxldGVBY2Nlc3NMZXZlbFJlcXVlc3QSRQoEbmFtZRgBIAEoCUI34EEC+kExCi9hY2Nlc3Njb250ZXh0bWFuYWdlci5nb29nbGVhcGlzLmNvbS9BY2Nlc3NMZXZlbCLFAQoaUmVwbGFjZUFjY2Vzc0xldmVsc1JlcXVlc3QSRwoGcGFyZW50GAEgASgJQjfgQQL6QTESL2FjY2Vzc2NvbnRleHRtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL0FjY2Vzc0xldmVsElAKDWFjY2Vzc19sZXZlbHMYAiADKAsyNC5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuQWNjZXNzTGV2ZWxCA+BBAhIMCgRldGFnGAQgASgJImoKG1JlcGxhY2VBY2Nlc3NMZXZlbHNSZXNwb25zZRJLCg1hY2Nlc3NfbGV2ZWxzGAEgAygLMjQuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLkFjY2Vzc0xldmVsIpMBChxMaXN0U2VydmljZVBlcmltZXRlcnNSZXF1ZXN0EkwKBnBhcmVudBgBIAEoCUI84EEC+kE2EjRhY2Nlc3Njb250ZXh0bWFuYWdlci5nb29nbGVhcGlzLmNvbS9TZXJ2aWNlUGVyaW1ldGVyEhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMgASgJIo8BCh1MaXN0U2VydmljZVBlcmltZXRlcnNSZXNwb25zZRJVChJzZXJ2aWNlX3BlcmltZXRlcnMYASADKAsyOS5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuU2VydmljZVBlcmltZXRlchIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiaAoaR2V0U2VydmljZVBlcmltZXRlclJlcXVlc3QSSgoEbmFtZRgBIAEoCUI84EEC+kE2CjRhY2Nlc3Njb250ZXh0bWFuYWdlci5nb29nbGVhcGlzLmNvbS9TZXJ2aWNlUGVyaW1ldGVyIsgBCh1DcmVhdGVTZXJ2aWNlUGVyaW1ldGVyUmVxdWVzdBJMCgZwYXJlbnQYASABKAlCPOBBAvpBNhI0YWNjZXNzY29udGV4dG1hbmFnZXIuZ29vZ2xlYXBpcy5jb20vU2VydmljZVBlcmltZXRlchJZChFzZXJ2aWNlX3BlcmltZXRlchgCIAEoCzI5Lmdvb2dsZS5pZGVudGl0eS5hY2Nlc3Njb250ZXh0bWFuYWdlci52MS5TZXJ2aWNlUGVyaW1ldGVyQgPgQQIisAEKHVVwZGF0ZVNlcnZpY2VQZXJpbWV0ZXJSZXF1ZXN0ElkKEXNlcnZpY2VfcGVyaW1ldGVyGAEgASgLMjkuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLlNlcnZpY2VQZXJpbWV0ZXJCA+BBAhI0Cgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2tCA+BBAiJrCh1EZWxldGVTZXJ2aWNlUGVyaW1ldGVyUmVxdWVzdBJKCgRuYW1lGAEgASgJQjzgQQL6QTYKNGFjY2Vzc2NvbnRleHRtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL1NlcnZpY2VQZXJpbWV0ZXIi2QEKH1JlcGxhY2VTZXJ2aWNlUGVyaW1ldGVyc1JlcXVlc3QSTAoGcGFyZW50GAEgASgJQjzgQQL6QTYSNGFjY2Vzc2NvbnRleHRtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL1NlcnZpY2VQZXJpbWV0ZXISWgoSc2VydmljZV9wZXJpbWV0ZXJzGAIgAygLMjkuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLlNlcnZpY2VQZXJpbWV0ZXJCA+BBAhIMCgRldGFnGAMgASgJInkKIFJlcGxhY2VTZXJ2aWNlUGVyaW1ldGVyc1Jlc3BvbnNlElUKEnNlcnZpY2VfcGVyaW1ldGVycxgBIAMoCzI5Lmdvb2dsZS5pZGVudGl0eS5hY2Nlc3Njb250ZXh0bWFuYWdlci52MS5TZXJ2aWNlUGVyaW1ldGVyInwKHkNvbW1pdFNlcnZpY2VQZXJpbWV0ZXJzUmVxdWVzdBJMCgZwYXJlbnQYASABKAlCPOBBAvpBNhI0YWNjZXNzY29udGV4dG1hbmFnZXIuZ29vZ2xlYXBpcy5jb20vU2VydmljZVBlcmltZXRlchIMCgRldGFnGAIgASgJIngKH0NvbW1pdFNlcnZpY2VQZXJpbWV0ZXJzUmVzcG9uc2USVQoSc2VydmljZV9wZXJpbWV0ZXJzGAEgAygLMjkuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLlNlcnZpY2VQZXJpbWV0ZXIinQEKIExpc3RHY3BVc2VyQWNjZXNzQmluZGluZ3NSZXF1ZXN0EkgKBnBhcmVudBgBIAEoCUI44EEC+kEyCjBjbG91ZHJlc291cmNlbWFuYWdlci5nb29nbGVhcGlzLmNvbS9Pcmdhbml6YXRpb24SFgoJcGFnZV9zaXplGAIgASgFQgPgQQESFwoKcGFnZV90b2tlbhgDIAEoCUID4EEBIp0BCiFMaXN0R2NwVXNlckFjY2Vzc0JpbmRpbmdzUmVzcG9uc2USXwoYZ2NwX3VzZXJfYWNjZXNzX2JpbmRpbmdzGAEgAygLMj0uZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLkdjcFVzZXJBY2Nlc3NCaW5kaW5nEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSJwCh5HZXRHY3BVc2VyQWNjZXNzQmluZGluZ1JlcXVlc3QSTgoEbmFtZRgBIAEoCUJA4EEC+kE6CjhhY2Nlc3Njb250ZXh0bWFuYWdlci5nb29nbGVhcGlzLmNvbS9HY3BVc2VyQWNjZXNzQmluZGluZyLSAQohQ3JlYXRlR2NwVXNlckFjY2Vzc0JpbmRpbmdSZXF1ZXN0EkgKBnBhcmVudBgBIAEoCUI44EEC+kEyCjBjbG91ZHJlc291cmNlbWFuYWdlci5nb29nbGVhcGlzLmNvbS9Pcmdhbml6YXRpb24SYwoXZ2NwX3VzZXJfYWNjZXNzX2JpbmRpbmcYAiABKAsyPS5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuR2NwVXNlckFjY2Vzc0JpbmRpbmdCA+BBAiK+AQohVXBkYXRlR2NwVXNlckFjY2Vzc0JpbmRpbmdSZXF1ZXN0EmMKF2djcF91c2VyX2FjY2Vzc19iaW5kaW5nGAEgASgLMj0uZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLkdjcFVzZXJBY2Nlc3NCaW5kaW5nQgPgQQISNAoLdXBkYXRlX21hc2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrQgPgQQIicwohRGVsZXRlR2NwVXNlckFjY2Vzc0JpbmRpbmdSZXF1ZXN0Ek4KBG5hbWUYASABKAlCQOBBAvpBOgo4YWNjZXNzY29udGV4dG1hbmFnZXIuZ29vZ2xlYXBpcy5jb20vR2NwVXNlckFjY2Vzc0JpbmRpbmciJwolR2NwVXNlckFjY2Vzc0JpbmRpbmdPcGVyYXRpb25NZXRhZGF0YSInCiVBY2Nlc3NDb250ZXh0TWFuYWdlck9wZXJhdGlvbk1ldGFkYXRhKkQKC0xldmVsRm9ybWF0EhwKGExFVkVMX0ZPUk1BVF9VTlNQRUNJRklFRBAAEg4KCkFTX0RFRklORUQQARIHCgNDRUwQAjLxMgoUQWNjZXNzQ29udGV4dE1hbmFnZXISuQEKEkxpc3RBY2Nlc3NQb2xpY2llcxJCLmdvb2dsZS5pZGVudGl0eS5hY2Nlc3Njb250ZXh0bWFuYWdlci52MS5MaXN0QWNjZXNzUG9saWNpZXNSZXF1ZXN0GkMuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLkxpc3RBY2Nlc3NQb2xpY2llc1Jlc3BvbnNlIhqC0+STAhQSEi92MS9hY2Nlc3NQb2xpY2llcxK1AQoPR2V0QWNjZXNzUG9saWN5Ej8uZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLkdldEFjY2Vzc1BvbGljeVJlcXVlc3QaNS5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuQWNjZXNzUG9saWN5IiraQQRuYW1lgtPkkwIdEhsvdjEve25hbWU9YWNjZXNzUG9saWNpZXMvKn0SwQEKEkNyZWF0ZUFjY2Vzc1BvbGljeRI1Lmdvb2dsZS5pZGVudGl0eS5hY2Nlc3Njb250ZXh0bWFuYWdlci52MS5BY2Nlc3NQb2xpY3kaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIlXKQTUKDEFjY2Vzc1BvbGljeRIlQWNjZXNzQ29udGV4dE1hbmFnZXJPcGVyYXRpb25NZXRhZGF0YYLT5JMCFzoBKiISL3YxL2FjY2Vzc1BvbGljaWVzEvgBChJVcGRhdGVBY2Nlc3NQb2xpY3kSQi5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuVXBkYXRlQWNjZXNzUG9saWN5UmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24if8pBNQoMQWNjZXNzUG9saWN5EiVBY2Nlc3NDb250ZXh0TWFuYWdlck9wZXJhdGlvbk1ldGFkYXRh2kEScG9saWN5LHVwZGF0ZV9tYXNrgtPkkwIsOgZwb2xpY3kyIi92MS97cG9saWN5Lm5hbWU9YWNjZXNzUG9saWNpZXMvKn0S5AEKEkRlbGV0ZUFjY2Vzc1BvbGljeRJCLmdvb2dsZS5pZGVudGl0eS5hY2Nlc3Njb250ZXh0bWFuYWdlci52MS5EZWxldGVBY2Nlc3NQb2xpY3lSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJrykE+ChVnb29nbGUucHJvdG9idWYuRW1wdHkSJUFjY2Vzc0NvbnRleHRNYW5hZ2VyT3BlcmF0aW9uTWV0YWRhdGHaQQRuYW1lgtPkkwIdKhsvdjEve25hbWU9YWNjZXNzUG9saWNpZXMvKn0S1AEKEExpc3RBY2Nlc3NMZXZlbHMSQC5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuTGlzdEFjY2Vzc0xldmVsc1JlcXVlc3QaQS5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuTGlzdEFjY2Vzc0xldmVsc1Jlc3BvbnNlIjvaQQZwYXJlbnSC0+STAiwSKi92MS97cGFyZW50PWFjY2Vzc1BvbGljaWVzLyp9L2FjY2Vzc0xldmVscxLBAQoOR2V0QWNjZXNzTGV2ZWwSPi5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuR2V0QWNjZXNzTGV2ZWxSZXF1ZXN0GjQuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLkFjY2Vzc0xldmVsIjnaQQRuYW1lgtPkkwIsEiovdjEve25hbWU9YWNjZXNzUG9saWNpZXMvKi9hY2Nlc3NMZXZlbHMvKn0ShQIKEUNyZWF0ZUFjY2Vzc0xldmVsEkEuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLkNyZWF0ZUFjY2Vzc0xldmVsUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24ijQHKQTQKC0FjY2Vzc0xldmVsEiVBY2Nlc3NDb250ZXh0TWFuYWdlck9wZXJhdGlvbk1ldGFkYXRh2kETcGFyZW50LGFjY2Vzc19sZXZlbILT5JMCOjoMYWNjZXNzX2xldmVsIiovdjEve3BhcmVudD1hY2Nlc3NQb2xpY2llcy8qfS9hY2Nlc3NMZXZlbHMSlwIKEVVwZGF0ZUFjY2Vzc0xldmVsEkEuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLlVwZGF0ZUFjY2Vzc0xldmVsUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24inwHKQTQKC0FjY2Vzc0xldmVsEiVBY2Nlc3NDb250ZXh0TWFuYWdlck9wZXJhdGlvbk1ldGFkYXRh2kEYYWNjZXNzX2xldmVsLHVwZGF0ZV9tYXNrgtPkkwJHOgxhY2Nlc3NfbGV2ZWwyNy92MS97YWNjZXNzX2xldmVsLm5hbWU9YWNjZXNzUG9saWNpZXMvKi9hY2Nlc3NMZXZlbHMvKn0S8QEKEURlbGV0ZUFjY2Vzc0xldmVsEkEuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLkRlbGV0ZUFjY2Vzc0xldmVsUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24iespBPgoVZ29vZ2xlLnByb3RvYnVmLkVtcHR5EiVBY2Nlc3NDb250ZXh0TWFuYWdlck9wZXJhdGlvbk1ldGFkYXRh2kEEbmFtZYLT5JMCLCoqL3YxL3tuYW1lPWFjY2Vzc1BvbGljaWVzLyovYWNjZXNzTGV2ZWxzLyp9EoMCChNSZXBsYWNlQWNjZXNzTGV2ZWxzEkMuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLlJlcGxhY2VBY2Nlc3NMZXZlbHNSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKHAcpBRAobUmVwbGFjZUFjY2Vzc0xldmVsc1Jlc3BvbnNlEiVBY2Nlc3NDb250ZXh0TWFuYWdlck9wZXJhdGlvbk1ldGFkYXRhgtPkkwI6OgEqIjUvdjEve3BhcmVudD1hY2Nlc3NQb2xpY2llcy8qfS9hY2Nlc3NMZXZlbHM6cmVwbGFjZUFsbBLoAQoVTGlzdFNlcnZpY2VQZXJpbWV0ZXJzEkUuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLkxpc3RTZXJ2aWNlUGVyaW1ldGVyc1JlcXVlc3QaRi5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuTGlzdFNlcnZpY2VQZXJpbWV0ZXJzUmVzcG9uc2UiQNpBBnBhcmVudILT5JMCMRIvL3YxL3twYXJlbnQ9YWNjZXNzUG9saWNpZXMvKn0vc2VydmljZVBlcmltZXRlcnMS1QEKE0dldFNlcnZpY2VQZXJpbWV0ZXISQy5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuR2V0U2VydmljZVBlcmltZXRlclJlcXVlc3QaOS5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuU2VydmljZVBlcmltZXRlciI+2kEEbmFtZYLT5JMCMRIvL3YxL3tuYW1lPWFjY2Vzc1BvbGljaWVzLyovc2VydmljZVBlcmltZXRlcnMvKn0SowIKFkNyZWF0ZVNlcnZpY2VQZXJpbWV0ZXISRi5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuQ3JlYXRlU2VydmljZVBlcmltZXRlclJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIqEBykE5ChBTZXJ2aWNlUGVyaW1ldGVyEiVBY2Nlc3NDb250ZXh0TWFuYWdlck9wZXJhdGlvbk1ldGFkYXRh2kEYcGFyZW50LHNlcnZpY2VfcGVyaW1ldGVygtPkkwJEOhFzZXJ2aWNlX3BlcmltZXRlciIvL3YxL3twYXJlbnQ9YWNjZXNzUG9saWNpZXMvKn0vc2VydmljZVBlcmltZXRlcnMSugIKFlVwZGF0ZVNlcnZpY2VQZXJpbWV0ZXISRi5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuVXBkYXRlU2VydmljZVBlcmltZXRlclJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIrgBykE5ChBTZXJ2aWNlUGVyaW1ldGVyEiVBY2Nlc3NDb250ZXh0TWFuYWdlck9wZXJhdGlvbk1ldGFkYXRh2kEdc2VydmljZV9wZXJpbWV0ZXIsdXBkYXRlX21hc2uC0+STAlY6EXNlcnZpY2VfcGVyaW1ldGVyMkEvdjEve3NlcnZpY2VfcGVyaW1ldGVyLm5hbWU9YWNjZXNzUG9saWNpZXMvKi9zZXJ2aWNlUGVyaW1ldGVycy8qfRKAAgoWRGVsZXRlU2VydmljZVBlcmltZXRlchJGLmdvb2dsZS5pZGVudGl0eS5hY2Nlc3Njb250ZXh0bWFuYWdlci52MS5EZWxldGVTZXJ2aWNlUGVyaW1ldGVyUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24if8pBPgoVZ29vZ2xlLnByb3RvYnVmLkVtcHR5EiVBY2Nlc3NDb250ZXh0TWFuYWdlck9wZXJhdGlvbk1ldGFkYXRh2kEEbmFtZYLT5JMCMSovL3YxL3tuYW1lPWFjY2Vzc1BvbGljaWVzLyovc2VydmljZVBlcmltZXRlcnMvKn0SlwIKGFJlcGxhY2VTZXJ2aWNlUGVyaW1ldGVycxJILmdvb2dsZS5pZGVudGl0eS5hY2Nlc3Njb250ZXh0bWFuYWdlci52MS5SZXBsYWNlU2VydmljZVBlcmltZXRlcnNSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKRAcpBSQogUmVwbGFjZVNlcnZpY2VQZXJpbWV0ZXJzUmVzcG9uc2USJUFjY2Vzc0NvbnRleHRNYW5hZ2VyT3BlcmF0aW9uTWV0YWRhdGGC0+STAj86ASoiOi92MS97cGFyZW50PWFjY2Vzc1BvbGljaWVzLyp9L3NlcnZpY2VQZXJpbWV0ZXJzOnJlcGxhY2VBbGwSkAIKF0NvbW1pdFNlcnZpY2VQZXJpbWV0ZXJzEkcuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLkNvbW1pdFNlcnZpY2VQZXJpbWV0ZXJzUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24ijAHKQUgKH0NvbW1pdFNlcnZpY2VQZXJpbWV0ZXJzUmVzcG9uc2USJUFjY2Vzc0NvbnRleHRNYW5hZ2VyT3BlcmF0aW9uTWV0YWRhdGGC0+STAjs6ASoiNi92MS97cGFyZW50PWFjY2Vzc1BvbGljaWVzLyp9L3NlcnZpY2VQZXJpbWV0ZXJzOmNvbW1pdBL3AQoZTGlzdEdjcFVzZXJBY2Nlc3NCaW5kaW5ncxJJLmdvb2dsZS5pZGVudGl0eS5hY2Nlc3Njb250ZXh0bWFuYWdlci52MS5MaXN0R2NwVXNlckFjY2Vzc0JpbmRpbmdzUmVxdWVzdBpKLmdvb2dsZS5pZGVudGl0eS5hY2Nlc3Njb250ZXh0bWFuYWdlci52MS5MaXN0R2NwVXNlckFjY2Vzc0JpbmRpbmdzUmVzcG9uc2UiQ9pBBnBhcmVudILT5JMCNBIyL3YxL3twYXJlbnQ9b3JnYW5pemF0aW9ucy8qfS9nY3BVc2VyQWNjZXNzQmluZGluZ3MS5AEKF0dldEdjcFVzZXJBY2Nlc3NCaW5kaW5nEkcuZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLkdldEdjcFVzZXJBY2Nlc3NCaW5kaW5nUmVxdWVzdBo9Lmdvb2dsZS5pZGVudGl0eS5hY2Nlc3Njb250ZXh0bWFuYWdlci52MS5HY3BVc2VyQWNjZXNzQmluZGluZyJB2kEEbmFtZYLT5JMCNBIyL3YxL3tuYW1lPW9yZ2FuaXphdGlvbnMvKi9nY3BVc2VyQWNjZXNzQmluZGluZ3MvKn0SvgIKGkNyZWF0ZUdjcFVzZXJBY2Nlc3NCaW5kaW5nEkouZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLkNyZWF0ZUdjcFVzZXJBY2Nlc3NCaW5kaW5nUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24itAHKQT0KFEdjcFVzZXJBY2Nlc3NCaW5kaW5nEiVHY3BVc2VyQWNjZXNzQmluZGluZ09wZXJhdGlvbk1ldGFkYXRh2kEecGFyZW50LGdjcF91c2VyX2FjY2Vzc19iaW5kaW5ngtPkkwJNOhdnY3BfdXNlcl9hY2Nlc3NfYmluZGluZyIyL3YxL3twYXJlbnQ9b3JnYW5pemF0aW9ucy8qfS9nY3BVc2VyQWNjZXNzQmluZGluZ3MS2wIKGlVwZGF0ZUdjcFVzZXJBY2Nlc3NCaW5kaW5nEkouZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRleHRtYW5hZ2VyLnYxLlVwZGF0ZUdjcFVzZXJBY2Nlc3NCaW5kaW5nUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24i0QHKQT0KFEdjcFVzZXJBY2Nlc3NCaW5kaW5nEiVHY3BVc2VyQWNjZXNzQmluZGluZ09wZXJhdGlvbk1ldGFkYXRh2kEjZ2NwX3VzZXJfYWNjZXNzX2JpbmRpbmcsdXBkYXRlX21hc2uC0+STAmU6F2djcF91c2VyX2FjY2Vzc19iaW5kaW5nMkovdjEve2djcF91c2VyX2FjY2Vzc19iaW5kaW5nLm5hbWU9b3JnYW5pemF0aW9ucy8qL2djcFVzZXJBY2Nlc3NCaW5kaW5ncy8qfRKMAgoaRGVsZXRlR2NwVXNlckFjY2Vzc0JpbmRpbmcSSi5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuRGVsZXRlR2NwVXNlckFjY2Vzc0JpbmRpbmdSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKCAcpBPgoVZ29vZ2xlLnByb3RvYnVmLkVtcHR5EiVHY3BVc2VyQWNjZXNzQmluZGluZ09wZXJhdGlvbk1ldGFkYXRh2kEEbmFtZYLT5JMCNCoyL3YxL3tuYW1lPW9yZ2FuaXphdGlvbnMvKi9nY3BVc2VyQWNjZXNzQmluZGluZ3MvKn0SggEKDFNldElhbVBvbGljeRIiLmdvb2dsZS5pYW0udjEuU2V0SWFtUG9saWN5UmVxdWVzdBoVLmdvb2dsZS5pYW0udjEuUG9saWN5IjeC0+STAjE6ASoiLC92MS97cmVzb3VyY2U9YWNjZXNzUG9saWNpZXMvKn06c2V0SWFtUG9saWN5EoIBCgxHZXRJYW1Qb2xpY3kSIi5nb29nbGUuaWFtLnYxLkdldElhbVBvbGljeVJlcXVlc3QaFS5nb29nbGUuaWFtLnYxLlBvbGljeSI3gtPkkwIxOgEqIiwvdjEve3Jlc291cmNlPWFjY2Vzc1BvbGljaWVzLyp9OmdldElhbVBvbGljeRK/AgoSVGVzdElhbVBlcm1pc3Npb25zEiguZ29vZ2xlLmlhbS52MS5UZXN0SWFtUGVybWlzc2lvbnNSZXF1ZXN0GikuZ29vZ2xlLmlhbS52MS5UZXN0SWFtUGVybWlzc2lvbnNSZXNwb25zZSLTAYLT5JMCzAE6ASpaRjoBKiJBL3YxL3tyZXNvdXJjZT1hY2Nlc3NQb2xpY2llcy8qL2FjY2Vzc0xldmVscy8qfTp0ZXN0SWFtUGVybWlzc2lvbnNaSzoBKiJGL3YxL3tyZXNvdXJjZT1hY2Nlc3NQb2xpY2llcy8qL3NlcnZpY2VQZXJpbWV0ZXJzLyp9OnRlc3RJYW1QZXJtaXNzaW9ucyIyL3YxL3tyZXNvdXJjZT1hY2Nlc3NQb2xpY2llcy8qfTp0ZXN0SWFtUGVybWlzc2lvbnMaV8pBI2FjY2Vzc2NvbnRleHRtYW5hZ2VyLmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybUKwAgorY29tLmdvb2dsZS5pZGVudGl0eS5hY2Nlc3Njb250ZXh0bWFuYWdlci52MUIZQWNjZXNzQ29udGV4dE1hbmFnZXJQcm90b1ABWlxjbG91ZC5nb29nbGUuY29tL2dvL2FjY2Vzc2NvbnRleHRtYW5hZ2VyL2FwaXYxL2FjY2Vzc2NvbnRleHRtYW5hZ2VycGI7YWNjZXNzY29udGV4dG1hbmFnZXJwYqICBEdBQ02qAidHb29nbGUuSWRlbnRpdHkuQWNjZXNzQ29udGV4dE1hbmFnZXIuVjHKAidHb29nbGVcSWRlbnRpdHlcQWNjZXNzQ29udGV4dE1hbmFnZXJcVjHqAipHb29nbGU6OklkZW50aXR5OjpBY2Nlc3NDb250ZXh0TWFuYWdlcjo6VjFiBnByb3RvMw", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_iam_v1_iam_policy, file_google_iam_v1_policy, file_google_identity_accesscontextmanager_v1_access_level, file_google_identity_accesscontextmanager_v1_access_policy, file_google_identity_accesscontextmanager_v1_gcp_user_access_binding, file_google_identity_accesscontextmanager_v1_service_perimeter, file_google_longrunning_operations, file_google_protobuf_field_mask]);

/**
 * A request to list all `AccessPolicies` for a container.
 *
 * @generated from message google.identity.accesscontextmanager.v1.ListAccessPoliciesRequest
 */
export type ListAccessPoliciesRequest = Message<"google.identity.accesscontextmanager.v1.ListAccessPoliciesRequest"> & {
  /**
   * Required. Resource name for the container to list AccessPolicy instances
   * from.
   *
   * Format:
   * `organizations/{org_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Number of AccessPolicy instances to include in the list. Default 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Next page token for the next batch of AccessPolicy instances. Defaults to
   * the first page of results.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.ListAccessPoliciesRequest.
 * Use `create(ListAccessPoliciesRequestSchema)` to create a new message.
 */
export const ListAccessPoliciesRequestSchema: GenMessage<ListAccessPoliciesRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 0);

/**
 * A response to `ListAccessPoliciesRequest`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.ListAccessPoliciesResponse
 */
export type ListAccessPoliciesResponse = Message<"google.identity.accesscontextmanager.v1.ListAccessPoliciesResponse"> & {
  /**
   * List of the AccessPolicy instances.
   *
   * @generated from field: repeated google.identity.accesscontextmanager.v1.AccessPolicy access_policies = 1;
   */
  accessPolicies: AccessPolicy[];

  /**
   * The pagination token to retrieve the next page of results. If the value is
   * empty, no further results remain.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.ListAccessPoliciesResponse.
 * Use `create(ListAccessPoliciesResponseSchema)` to create a new message.
 */
export const ListAccessPoliciesResponseSchema: GenMessage<ListAccessPoliciesResponse> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 1);

/**
 * A request to get a particular `AccessPolicy`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.GetAccessPolicyRequest
 */
export type GetAccessPolicyRequest = Message<"google.identity.accesscontextmanager.v1.GetAccessPolicyRequest"> & {
  /**
   * Required. Resource name for the access policy to get.
   *
   * Format `accessPolicies/{policy_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.GetAccessPolicyRequest.
 * Use `create(GetAccessPolicyRequestSchema)` to create a new message.
 */
export const GetAccessPolicyRequestSchema: GenMessage<GetAccessPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 2);

/**
 * A request to update an `AccessPolicy`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.UpdateAccessPolicyRequest
 */
export type UpdateAccessPolicyRequest = Message<"google.identity.accesscontextmanager.v1.UpdateAccessPolicyRequest"> & {
  /**
   * Required. The updated AccessPolicy.
   *
   * @generated from field: google.identity.accesscontextmanager.v1.AccessPolicy policy = 1;
   */
  policy?: AccessPolicy;

  /**
   * Required. Mask to control which fields get updated. Must be non-empty.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.UpdateAccessPolicyRequest.
 * Use `create(UpdateAccessPolicyRequestSchema)` to create a new message.
 */
export const UpdateAccessPolicyRequestSchema: GenMessage<UpdateAccessPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 3);

/**
 * A request to delete an `AccessPolicy`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.DeleteAccessPolicyRequest
 */
export type DeleteAccessPolicyRequest = Message<"google.identity.accesscontextmanager.v1.DeleteAccessPolicyRequest"> & {
  /**
   * Required. Resource name for the access policy to delete.
   *
   * Format `accessPolicies/{policy_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.DeleteAccessPolicyRequest.
 * Use `create(DeleteAccessPolicyRequestSchema)` to create a new message.
 */
export const DeleteAccessPolicyRequestSchema: GenMessage<DeleteAccessPolicyRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 4);

/**
 * A request to list all `AccessLevels` in an `AccessPolicy`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.ListAccessLevelsRequest
 */
export type ListAccessLevelsRequest = Message<"google.identity.accesscontextmanager.v1.ListAccessLevelsRequest"> & {
  /**
   * Required. Resource name for the access policy to list [Access Levels]
   * [google.identity.accesscontextmanager.v1.AccessLevel] from.
   *
   * Format:
   * `accessPolicies/{policy_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Number of [Access Levels]
   * [google.identity.accesscontextmanager.v1.AccessLevel] to include in
   * the list. Default 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Next page token for the next batch of [Access Level]
   * [google.identity.accesscontextmanager.v1.AccessLevel] instances.
   * Defaults to the first page of results.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Whether to return `BasicLevels` in the Cloud Common Expression language, as
   * `CustomLevels`, rather than as `BasicLevels`. Defaults to returning
   * `AccessLevels` in the format they were defined.
   *
   * @generated from field: google.identity.accesscontextmanager.v1.LevelFormat access_level_format = 4;
   */
  accessLevelFormat: LevelFormat;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.ListAccessLevelsRequest.
 * Use `create(ListAccessLevelsRequestSchema)` to create a new message.
 */
export const ListAccessLevelsRequestSchema: GenMessage<ListAccessLevelsRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 5);

/**
 * A response to `ListAccessLevelsRequest`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.ListAccessLevelsResponse
 */
export type ListAccessLevelsResponse = Message<"google.identity.accesscontextmanager.v1.ListAccessLevelsResponse"> & {
  /**
   * List of the [Access Level]
   * [google.identity.accesscontextmanager.v1.AccessLevel] instances.
   *
   * @generated from field: repeated google.identity.accesscontextmanager.v1.AccessLevel access_levels = 1;
   */
  accessLevels: AccessLevel[];

  /**
   * The pagination token to retrieve the next page of results. If the value is
   * empty, no further results remain.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.ListAccessLevelsResponse.
 * Use `create(ListAccessLevelsResponseSchema)` to create a new message.
 */
export const ListAccessLevelsResponseSchema: GenMessage<ListAccessLevelsResponse> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 6);

/**
 * A request to get a particular `AccessLevel`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.GetAccessLevelRequest
 */
export type GetAccessLevelRequest = Message<"google.identity.accesscontextmanager.v1.GetAccessLevelRequest"> & {
  /**
   * Required. Resource name for the [Access Level]
   * [google.identity.accesscontextmanager.v1.AccessLevel].
   *
   * Format:
   * `accessPolicies/{policy_id}/accessLevels/{access_level_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Whether to return `BasicLevels` in the Cloud Common Expression
   * Language rather than as `BasicLevels`. Defaults to AS_DEFINED, where
   * [Access Levels] [google.identity.accesscontextmanager.v1.AccessLevel]
   * are returned as `BasicLevels` or `CustomLevels` based on how they were
   * created. If set to CEL, all [Access Levels]
   * [google.identity.accesscontextmanager.v1.AccessLevel] are returned as
   * `CustomLevels`. In the CEL case, `BasicLevels` are translated to equivalent
   * `CustomLevels`.
   *
   * @generated from field: google.identity.accesscontextmanager.v1.LevelFormat access_level_format = 2;
   */
  accessLevelFormat: LevelFormat;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.GetAccessLevelRequest.
 * Use `create(GetAccessLevelRequestSchema)` to create a new message.
 */
export const GetAccessLevelRequestSchema: GenMessage<GetAccessLevelRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 7);

/**
 * A request to create an `AccessLevel`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.CreateAccessLevelRequest
 */
export type CreateAccessLevelRequest = Message<"google.identity.accesscontextmanager.v1.CreateAccessLevelRequest"> & {
  /**
   * Required. Resource name for the access policy which owns this [Access
   * Level] [google.identity.accesscontextmanager.v1.AccessLevel].
   *
   * Format: `accessPolicies/{policy_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The [Access Level]
   * [google.identity.accesscontextmanager.v1.AccessLevel] to create.
   * Syntactic correctness of the [Access Level]
   * [google.identity.accesscontextmanager.v1.AccessLevel] is a
   * precondition for creation.
   *
   * @generated from field: google.identity.accesscontextmanager.v1.AccessLevel access_level = 2;
   */
  accessLevel?: AccessLevel;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.CreateAccessLevelRequest.
 * Use `create(CreateAccessLevelRequestSchema)` to create a new message.
 */
export const CreateAccessLevelRequestSchema: GenMessage<CreateAccessLevelRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 8);

/**
 * A request to update an `AccessLevel`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.UpdateAccessLevelRequest
 */
export type UpdateAccessLevelRequest = Message<"google.identity.accesscontextmanager.v1.UpdateAccessLevelRequest"> & {
  /**
   * Required. The updated [Access Level]
   * [google.identity.accesscontextmanager.v1.AccessLevel]. Syntactic
   * correctness of the [Access Level]
   * [google.identity.accesscontextmanager.v1.AccessLevel] is a
   * precondition for creation.
   *
   * @generated from field: google.identity.accesscontextmanager.v1.AccessLevel access_level = 1;
   */
  accessLevel?: AccessLevel;

  /**
   * Required. Mask to control which fields get updated. Must be non-empty.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.UpdateAccessLevelRequest.
 * Use `create(UpdateAccessLevelRequestSchema)` to create a new message.
 */
export const UpdateAccessLevelRequestSchema: GenMessage<UpdateAccessLevelRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 9);

/**
 * A request to delete an `AccessLevel`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.DeleteAccessLevelRequest
 */
export type DeleteAccessLevelRequest = Message<"google.identity.accesscontextmanager.v1.DeleteAccessLevelRequest"> & {
  /**
   * Required. Resource name for the [Access Level]
   * [google.identity.accesscontextmanager.v1.AccessLevel].
   *
   * Format:
   * `accessPolicies/{policy_id}/accessLevels/{access_level_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.DeleteAccessLevelRequest.
 * Use `create(DeleteAccessLevelRequestSchema)` to create a new message.
 */
export const DeleteAccessLevelRequestSchema: GenMessage<DeleteAccessLevelRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 10);

/**
 * A request to replace all existing Access Levels in an Access Policy with
 * the Access Levels provided. This is done atomically.
 *
 * @generated from message google.identity.accesscontextmanager.v1.ReplaceAccessLevelsRequest
 */
export type ReplaceAccessLevelsRequest = Message<"google.identity.accesscontextmanager.v1.ReplaceAccessLevelsRequest"> & {
  /**
   * Required. Resource name for the access policy which owns these
   * [Access Levels]
   * [google.identity.accesscontextmanager.v1.AccessLevel].
   *
   * Format: `accessPolicies/{policy_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The desired [Access Levels]
   * [google.identity.accesscontextmanager.v1.AccessLevel] that should
   * replace all existing [Access Levels]
   * [google.identity.accesscontextmanager.v1.AccessLevel] in the
   * [Access Policy]
   * [google.identity.accesscontextmanager.v1.AccessPolicy].
   *
   * @generated from field: repeated google.identity.accesscontextmanager.v1.AccessLevel access_levels = 2;
   */
  accessLevels: AccessLevel[];

  /**
   * Optional. The etag for the version of the [Access Policy]
   * [google.identity.accesscontextmanager.v1.AccessPolicy] that this
   * replace operation is to be performed on. If, at the time of replace, the
   * etag for the Access Policy stored in Access Context Manager is different
   * from the specified etag, then the replace operation will not be performed
   * and the call will fail. This field is not required. If etag is not
   * provided, the operation will be performed as if a valid etag is provided.
   *
   * @generated from field: string etag = 4;
   */
  etag: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.ReplaceAccessLevelsRequest.
 * Use `create(ReplaceAccessLevelsRequestSchema)` to create a new message.
 */
export const ReplaceAccessLevelsRequestSchema: GenMessage<ReplaceAccessLevelsRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 11);

/**
 * A response to ReplaceAccessLevelsRequest. This will be put inside of
 * Operation.response field.
 *
 * @generated from message google.identity.accesscontextmanager.v1.ReplaceAccessLevelsResponse
 */
export type ReplaceAccessLevelsResponse = Message<"google.identity.accesscontextmanager.v1.ReplaceAccessLevelsResponse"> & {
  /**
   * List of the [Access Level]
   * [google.identity.accesscontextmanager.v1.AccessLevel] instances.
   *
   * @generated from field: repeated google.identity.accesscontextmanager.v1.AccessLevel access_levels = 1;
   */
  accessLevels: AccessLevel[];
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.ReplaceAccessLevelsResponse.
 * Use `create(ReplaceAccessLevelsResponseSchema)` to create a new message.
 */
export const ReplaceAccessLevelsResponseSchema: GenMessage<ReplaceAccessLevelsResponse> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 12);

/**
 * A request to list all `ServicePerimeters` in an `AccessPolicy`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.ListServicePerimetersRequest
 */
export type ListServicePerimetersRequest = Message<"google.identity.accesscontextmanager.v1.ListServicePerimetersRequest"> & {
  /**
   * Required. Resource name for the access policy to list [Service Perimeters]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] from.
   *
   * Format:
   * `accessPolicies/{policy_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Number of [Service Perimeters]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] to include
   * in the list. Default 100.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Next page token for the next batch of [Service Perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] instances.
   * Defaults to the first page of results.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.ListServicePerimetersRequest.
 * Use `create(ListServicePerimetersRequestSchema)` to create a new message.
 */
export const ListServicePerimetersRequestSchema: GenMessage<ListServicePerimetersRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 13);

/**
 * A response to `ListServicePerimetersRequest`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.ListServicePerimetersResponse
 */
export type ListServicePerimetersResponse = Message<"google.identity.accesscontextmanager.v1.ListServicePerimetersResponse"> & {
  /**
   * List of the [Service Perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] instances.
   *
   * @generated from field: repeated google.identity.accesscontextmanager.v1.ServicePerimeter service_perimeters = 1;
   */
  servicePerimeters: ServicePerimeter[];

  /**
   * The pagination token to retrieve the next page of results. If the value is
   * empty, no further results remain.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.ListServicePerimetersResponse.
 * Use `create(ListServicePerimetersResponseSchema)` to create a new message.
 */
export const ListServicePerimetersResponseSchema: GenMessage<ListServicePerimetersResponse> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 14);

/**
 * A request to get a particular `ServicePerimeter`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.GetServicePerimeterRequest
 */
export type GetServicePerimeterRequest = Message<"google.identity.accesscontextmanager.v1.GetServicePerimeterRequest"> & {
  /**
   * Required. Resource name for the [Service Perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter].
   *
   * Format:
   * `accessPolicies/{policy_id}/servicePerimeters/{service_perimeters_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.GetServicePerimeterRequest.
 * Use `create(GetServicePerimeterRequestSchema)` to create a new message.
 */
export const GetServicePerimeterRequestSchema: GenMessage<GetServicePerimeterRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 15);

/**
 * A request to create a `ServicePerimeter`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.CreateServicePerimeterRequest
 */
export type CreateServicePerimeterRequest = Message<"google.identity.accesscontextmanager.v1.CreateServicePerimeterRequest"> & {
  /**
   * Required. Resource name for the access policy which owns this [Service
   * Perimeter] [google.identity.accesscontextmanager.v1.ServicePerimeter].
   *
   * Format: `accessPolicies/{policy_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The [Service Perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] to create.
   * Syntactic correctness of the [Service Perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] is a
   * precondition for creation.
   *
   * @generated from field: google.identity.accesscontextmanager.v1.ServicePerimeter service_perimeter = 2;
   */
  servicePerimeter?: ServicePerimeter;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.CreateServicePerimeterRequest.
 * Use `create(CreateServicePerimeterRequestSchema)` to create a new message.
 */
export const CreateServicePerimeterRequestSchema: GenMessage<CreateServicePerimeterRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 16);

/**
 * A request to update a `ServicePerimeter`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.UpdateServicePerimeterRequest
 */
export type UpdateServicePerimeterRequest = Message<"google.identity.accesscontextmanager.v1.UpdateServicePerimeterRequest"> & {
  /**
   * Required. The updated `ServicePerimeter`. Syntactic correctness of the
   * `ServicePerimeter` is a precondition for creation.
   *
   * @generated from field: google.identity.accesscontextmanager.v1.ServicePerimeter service_perimeter = 1;
   */
  servicePerimeter?: ServicePerimeter;

  /**
   * Required. Mask to control which fields get updated. Must be non-empty.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.UpdateServicePerimeterRequest.
 * Use `create(UpdateServicePerimeterRequestSchema)` to create a new message.
 */
export const UpdateServicePerimeterRequestSchema: GenMessage<UpdateServicePerimeterRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 17);

/**
 * A request to delete a `ServicePerimeter`.
 *
 * @generated from message google.identity.accesscontextmanager.v1.DeleteServicePerimeterRequest
 */
export type DeleteServicePerimeterRequest = Message<"google.identity.accesscontextmanager.v1.DeleteServicePerimeterRequest"> & {
  /**
   * Required. Resource name for the [Service Perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter].
   *
   * Format:
   * `accessPolicies/{policy_id}/servicePerimeters/{service_perimeter_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.DeleteServicePerimeterRequest.
 * Use `create(DeleteServicePerimeterRequestSchema)` to create a new message.
 */
export const DeleteServicePerimeterRequestSchema: GenMessage<DeleteServicePerimeterRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 18);

/**
 * A request to replace all existing Service Perimeters in an Access Policy
 * with the Service Perimeters provided. This is done atomically.
 *
 * @generated from message google.identity.accesscontextmanager.v1.ReplaceServicePerimetersRequest
 */
export type ReplaceServicePerimetersRequest = Message<"google.identity.accesscontextmanager.v1.ReplaceServicePerimetersRequest"> & {
  /**
   * Required. Resource name for the access policy which owns these
   * [Service Perimeters]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter].
   *
   * Format: `accessPolicies/{policy_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The desired [Service Perimeters]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] that should
   * replace all existing [Service Perimeters]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] in the
   * [Access Policy]
   * [google.identity.accesscontextmanager.v1.AccessPolicy].
   *
   * @generated from field: repeated google.identity.accesscontextmanager.v1.ServicePerimeter service_perimeters = 2;
   */
  servicePerimeters: ServicePerimeter[];

  /**
   * Optional. The etag for the version of the [Access Policy]
   * [google.identity.accesscontextmanager.v1.AccessPolicy] that this
   * replace operation is to be performed on. If, at the time of replace, the
   * etag for the Access Policy stored in Access Context Manager is different
   * from the specified etag, then the replace operation will not be performed
   * and the call will fail. This field is not required. If etag is not
   * provided, the operation will be performed as if a valid etag is provided.
   *
   * @generated from field: string etag = 3;
   */
  etag: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.ReplaceServicePerimetersRequest.
 * Use `create(ReplaceServicePerimetersRequestSchema)` to create a new message.
 */
export const ReplaceServicePerimetersRequestSchema: GenMessage<ReplaceServicePerimetersRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 19);

/**
 * A response to ReplaceServicePerimetersRequest. This will be put inside of
 * Operation.response field.
 *
 * @generated from message google.identity.accesscontextmanager.v1.ReplaceServicePerimetersResponse
 */
export type ReplaceServicePerimetersResponse = Message<"google.identity.accesscontextmanager.v1.ReplaceServicePerimetersResponse"> & {
  /**
   * List of the [Service Perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] instances.
   *
   * @generated from field: repeated google.identity.accesscontextmanager.v1.ServicePerimeter service_perimeters = 1;
   */
  servicePerimeters: ServicePerimeter[];
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.ReplaceServicePerimetersResponse.
 * Use `create(ReplaceServicePerimetersResponseSchema)` to create a new message.
 */
export const ReplaceServicePerimetersResponseSchema: GenMessage<ReplaceServicePerimetersResponse> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 20);

/**
 * A request to commit dry-run specs in all [Service Perimeters]
 * [google.identity.accesscontextmanager.v1.ServicePerimeter] belonging to
 * an [Access Policy][google.identity.accesscontextmanager.v1.AccessPolicy].
 *
 * @generated from message google.identity.accesscontextmanager.v1.CommitServicePerimetersRequest
 */
export type CommitServicePerimetersRequest = Message<"google.identity.accesscontextmanager.v1.CommitServicePerimetersRequest"> & {
  /**
   * Required. Resource name for the parent [Access Policy]
   * [google.identity.accesscontextmanager.v1.AccessPolicy] which owns all
   * [Service Perimeters]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] in scope for
   * the commit operation.
   *
   * Format: `accessPolicies/{policy_id}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The etag for the version of the [Access Policy]
   * [google.identity.accesscontextmanager.v1.AccessPolicy] that this
   * commit operation is to be performed on. If, at the time of commit, the
   * etag for the Access Policy stored in Access Context Manager is different
   * from the specified etag, then the commit operation will not be performed
   * and the call will fail. This field is not required. If etag is not
   * provided, the operation will be performed as if a valid etag is provided.
   *
   * @generated from field: string etag = 2;
   */
  etag: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.CommitServicePerimetersRequest.
 * Use `create(CommitServicePerimetersRequestSchema)` to create a new message.
 */
export const CommitServicePerimetersRequestSchema: GenMessage<CommitServicePerimetersRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 21);

/**
 * A response to CommitServicePerimetersRequest. This will be put inside of
 * Operation.response field.
 *
 * @generated from message google.identity.accesscontextmanager.v1.CommitServicePerimetersResponse
 */
export type CommitServicePerimetersResponse = Message<"google.identity.accesscontextmanager.v1.CommitServicePerimetersResponse"> & {
  /**
   * List of all the [Service Perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] instances in
   * the [Access Policy]
   * [google.identity.accesscontextmanager.v1.AccessPolicy].
   *
   * @generated from field: repeated google.identity.accesscontextmanager.v1.ServicePerimeter service_perimeters = 1;
   */
  servicePerimeters: ServicePerimeter[];
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.CommitServicePerimetersResponse.
 * Use `create(CommitServicePerimetersResponseSchema)` to create a new message.
 */
export const CommitServicePerimetersResponseSchema: GenMessage<CommitServicePerimetersResponse> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 22);

/**
 * Request of [ListGcpUserAccessBindings]
 * [google.identity.accesscontextmanager.v1.AccessContextManager.ListGcpUserAccessBindings].
 *
 * @generated from message google.identity.accesscontextmanager.v1.ListGcpUserAccessBindingsRequest
 */
export type ListGcpUserAccessBindingsRequest = Message<"google.identity.accesscontextmanager.v1.ListGcpUserAccessBindingsRequest"> & {
  /**
   * Required. Example: "organizations/256"
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. Maximum number of items to return. The server may return fewer items.
   * If left blank, the server may return any number of items.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. If left blank, returns the first page. To enumerate all items, use the
   * [next_page_token]
   * [google.identity.accesscontextmanager.v1.ListGcpUserAccessBindingsResponse.next_page_token]
   * from your previous list operation.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.ListGcpUserAccessBindingsRequest.
 * Use `create(ListGcpUserAccessBindingsRequestSchema)` to create a new message.
 */
export const ListGcpUserAccessBindingsRequestSchema: GenMessage<ListGcpUserAccessBindingsRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 23);

/**
 * Response of [ListGcpUserAccessBindings]
 * [google.identity.accesscontextmanager.v1.AccessContextManager.ListGcpUserAccessBindings].
 *
 * @generated from message google.identity.accesscontextmanager.v1.ListGcpUserAccessBindingsResponse
 */
export type ListGcpUserAccessBindingsResponse = Message<"google.identity.accesscontextmanager.v1.ListGcpUserAccessBindingsResponse"> & {
  /**
   * [GcpUserAccessBinding]
   * [google.identity.accesscontextmanager.v1.GcpUserAccessBinding]
   *
   * @generated from field: repeated google.identity.accesscontextmanager.v1.GcpUserAccessBinding gcp_user_access_bindings = 1;
   */
  gcpUserAccessBindings: GcpUserAccessBinding[];

  /**
   * Token to get the next page of items. If blank, there are no more items.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.ListGcpUserAccessBindingsResponse.
 * Use `create(ListGcpUserAccessBindingsResponseSchema)` to create a new message.
 */
export const ListGcpUserAccessBindingsResponseSchema: GenMessage<ListGcpUserAccessBindingsResponse> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 24);

/**
 * Request of [GetGcpUserAccessBinding]
 * [google.identity.accesscontextmanager.v1.AccessContextManager.GetGcpUserAccessBinding].
 *
 * @generated from message google.identity.accesscontextmanager.v1.GetGcpUserAccessBindingRequest
 */
export type GetGcpUserAccessBindingRequest = Message<"google.identity.accesscontextmanager.v1.GetGcpUserAccessBindingRequest"> & {
  /**
   * Required. Example: "organizations/256/gcpUserAccessBindings/b3-BhcX_Ud5N"
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.GetGcpUserAccessBindingRequest.
 * Use `create(GetGcpUserAccessBindingRequestSchema)` to create a new message.
 */
export const GetGcpUserAccessBindingRequestSchema: GenMessage<GetGcpUserAccessBindingRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 25);

/**
 * Request of [CreateGcpUserAccessBinding]
 * [google.identity.accesscontextmanager.v1.AccessContextManager.CreateGcpUserAccessBinding].
 *
 * @generated from message google.identity.accesscontextmanager.v1.CreateGcpUserAccessBindingRequest
 */
export type CreateGcpUserAccessBindingRequest = Message<"google.identity.accesscontextmanager.v1.CreateGcpUserAccessBindingRequest"> & {
  /**
   * Required. Example: "organizations/256"
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. [GcpUserAccessBinding]
   * [google.identity.accesscontextmanager.v1.GcpUserAccessBinding]
   *
   * @generated from field: google.identity.accesscontextmanager.v1.GcpUserAccessBinding gcp_user_access_binding = 2;
   */
  gcpUserAccessBinding?: GcpUserAccessBinding;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.CreateGcpUserAccessBindingRequest.
 * Use `create(CreateGcpUserAccessBindingRequestSchema)` to create a new message.
 */
export const CreateGcpUserAccessBindingRequestSchema: GenMessage<CreateGcpUserAccessBindingRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 26);

/**
 * Request of [UpdateGcpUserAccessBinding]
 * [google.identity.accesscontextmanager.v1.AccessContextManager.UpdateGcpUserAccessBinding].
 *
 * @generated from message google.identity.accesscontextmanager.v1.UpdateGcpUserAccessBindingRequest
 */
export type UpdateGcpUserAccessBindingRequest = Message<"google.identity.accesscontextmanager.v1.UpdateGcpUserAccessBindingRequest"> & {
  /**
   * Required. [GcpUserAccessBinding]
   * [google.identity.accesscontextmanager.v1.GcpUserAccessBinding]
   *
   * @generated from field: google.identity.accesscontextmanager.v1.GcpUserAccessBinding gcp_user_access_binding = 1;
   */
  gcpUserAccessBinding?: GcpUserAccessBinding;

  /**
   * Required. Only the fields specified in this mask are updated. Because name and
   * group_key cannot be changed, update_mask is required and must always be:
   *
   * update_mask {
   * paths: "access_levels"
   * }
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.UpdateGcpUserAccessBindingRequest.
 * Use `create(UpdateGcpUserAccessBindingRequestSchema)` to create a new message.
 */
export const UpdateGcpUserAccessBindingRequestSchema: GenMessage<UpdateGcpUserAccessBindingRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 27);

/**
 * Request of [DeleteGcpUserAccessBinding]
 * [google.identity.accesscontextmanager.v1.AccessContextManager.DeleteGcpUserAccessBinding].
 *
 * @generated from message google.identity.accesscontextmanager.v1.DeleteGcpUserAccessBindingRequest
 */
export type DeleteGcpUserAccessBindingRequest = Message<"google.identity.accesscontextmanager.v1.DeleteGcpUserAccessBindingRequest"> & {
  /**
   * Required. Example: "organizations/256/gcpUserAccessBindings/b3-BhcX_Ud5N"
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.DeleteGcpUserAccessBindingRequest.
 * Use `create(DeleteGcpUserAccessBindingRequestSchema)` to create a new message.
 */
export const DeleteGcpUserAccessBindingRequestSchema: GenMessage<DeleteGcpUserAccessBindingRequest> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 28);

/**
 * Currently, a completed operation means nothing. In the future, this metadata
 * and a completed operation may indicate that the binding has taken effect and
 * is affecting access decisions for all users.
 *
 * @generated from message google.identity.accesscontextmanager.v1.GcpUserAccessBindingOperationMetadata
 */
export type GcpUserAccessBindingOperationMetadata = Message<"google.identity.accesscontextmanager.v1.GcpUserAccessBindingOperationMetadata"> & {
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.GcpUserAccessBindingOperationMetadata.
 * Use `create(GcpUserAccessBindingOperationMetadataSchema)` to create a new message.
 */
export const GcpUserAccessBindingOperationMetadataSchema: GenMessage<GcpUserAccessBindingOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 29);

/**
 * Metadata of Access Context Manager's Long Running Operations.
 *
 * @generated from message google.identity.accesscontextmanager.v1.AccessContextManagerOperationMetadata
 */
export type AccessContextManagerOperationMetadata = Message<"google.identity.accesscontextmanager.v1.AccessContextManagerOperationMetadata"> & {
};

/**
 * Describes the message google.identity.accesscontextmanager.v1.AccessContextManagerOperationMetadata.
 * Use `create(AccessContextManagerOperationMetadataSchema)` to create a new message.
 */
export const AccessContextManagerOperationMetadataSchema: GenMessage<AccessContextManagerOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 30);

/**
 * The format used in an `AccessLevel`.
 *
 * @generated from enum google.identity.accesscontextmanager.v1.LevelFormat
 */
export enum LevelFormat {
  /**
   * The format was not specified.
   *
   * @generated from enum value: LEVEL_FORMAT_UNSPECIFIED = 0;
   */
  LEVEL_FORMAT_UNSPECIFIED = 0,

  /**
   * Uses the format the resource was defined in. BasicLevels are returned as
   * BasicLevels, CustomLevels are returned as CustomLevels.
   *
   * @generated from enum value: AS_DEFINED = 1;
   */
  AS_DEFINED = 1,

  /**
   * Use Cloud Common Expression Language when returning the resource.  Both
   * BasicLevels and CustomLevels are returned as CustomLevels.
   *
   * @generated from enum value: CEL = 2;
   */
  CEL = 2,
}

/**
 * Describes the enum google.identity.accesscontextmanager.v1.LevelFormat.
 */
export const LevelFormatSchema: GenEnum<LevelFormat> = /*@__PURE__*/
  enumDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 0);

/**
 * API for setting [access levels]
 * [google.identity.accesscontextmanager.v1.AccessLevel] and [service
 * perimeters] [google.identity.accesscontextmanager.v1.ServicePerimeter]
 * for Google Cloud projects. Each organization has one [access policy]
 * [google.identity.accesscontextmanager.v1.AccessPolicy] that contains the
 * [access levels] [google.identity.accesscontextmanager.v1.AccessLevel]
 * and [service perimeters]
 * [google.identity.accesscontextmanager.v1.ServicePerimeter]. This
 * [access policy] [google.identity.accesscontextmanager.v1.AccessPolicy] is
 * applicable to all resources in the organization.
 * AccessPolicies
 *
 * @generated from service google.identity.accesscontextmanager.v1.AccessContextManager
 */
export const AccessContextManager: GenService<{
  /**
   * Lists all [access policies]
   * [google.identity.accesscontextmanager.v1.AccessPolicy] in an
   * organization.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.ListAccessPolicies
   */
  listAccessPolicies: {
    methodKind: "unary";
    input: typeof ListAccessPoliciesRequestSchema;
    output: typeof ListAccessPoliciesResponseSchema;
  },
  /**
   * Returns an [access policy]
   * [google.identity.accesscontextmanager.v1.AccessPolicy] based on the name.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.GetAccessPolicy
   */
  getAccessPolicy: {
    methodKind: "unary";
    input: typeof GetAccessPolicyRequestSchema;
    output: typeof AccessPolicySchema;
  },
  /**
   * Creates an access policy. This method fails if the organization already has
   * an access policy. The long-running operation has a successful status
   * after the access policy propagates to long-lasting storage.
   * Syntactic and basic semantic errors are returned in `metadata` as a
   * BadRequest proto.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.CreateAccessPolicy
   */
  createAccessPolicy: {
    methodKind: "unary";
    input: typeof AccessPolicySchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates an [access policy]
   * [google.identity.accesscontextmanager.v1.AccessPolicy]. The
   * long-running operation from this RPC has a successful status after the
   * changes to the [access policy]
   * [google.identity.accesscontextmanager.v1.AccessPolicy] propagate
   * to long-lasting storage.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.UpdateAccessPolicy
   */
  updateAccessPolicy: {
    methodKind: "unary";
    input: typeof UpdateAccessPolicyRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes an [access policy]
   * [google.identity.accesscontextmanager.v1.AccessPolicy] based on the
   * resource name. The long-running operation has a successful status after the
   * [access policy] [google.identity.accesscontextmanager.v1.AccessPolicy]
   * is removed from long-lasting storage.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.DeleteAccessPolicy
   */
  deleteAccessPolicy: {
    methodKind: "unary";
    input: typeof DeleteAccessPolicyRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists all [access levels]
   * [google.identity.accesscontextmanager.v1.AccessLevel] for an access
   * policy.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.ListAccessLevels
   */
  listAccessLevels: {
    methodKind: "unary";
    input: typeof ListAccessLevelsRequestSchema;
    output: typeof ListAccessLevelsResponseSchema;
  },
  /**
   * Gets an [access level]
   * [google.identity.accesscontextmanager.v1.AccessLevel] based on the resource
   * name.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.GetAccessLevel
   */
  getAccessLevel: {
    methodKind: "unary";
    input: typeof GetAccessLevelRequestSchema;
    output: typeof AccessLevelSchema;
  },
  /**
   * Creates an [access level]
   * [google.identity.accesscontextmanager.v1.AccessLevel]. The long-running
   * operation from this RPC has a successful status after the [access
   * level] [google.identity.accesscontextmanager.v1.AccessLevel]
   * propagates to long-lasting storage. If [access levels]
   * [google.identity.accesscontextmanager.v1.AccessLevel] contain
   * errors, an error response is returned for the first error encountered.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.CreateAccessLevel
   */
  createAccessLevel: {
    methodKind: "unary";
    input: typeof CreateAccessLevelRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates an [access level]
   * [google.identity.accesscontextmanager.v1.AccessLevel]. The long-running
   * operation from this RPC has a successful status after the changes to
   * the [access level]
   * [google.identity.accesscontextmanager.v1.AccessLevel] propagate
   * to long-lasting storage. If [access levels]
   * [google.identity.accesscontextmanager.v1.AccessLevel] contain
   * errors, an error response is returned for the first error encountered.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.UpdateAccessLevel
   */
  updateAccessLevel: {
    methodKind: "unary";
    input: typeof UpdateAccessLevelRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes an [access level]
   * [google.identity.accesscontextmanager.v1.AccessLevel] based on the resource
   * name. The long-running operation from this RPC has a successful status
   * after the [access level]
   * [google.identity.accesscontextmanager.v1.AccessLevel] has been removed
   * from long-lasting storage.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.DeleteAccessLevel
   */
  deleteAccessLevel: {
    methodKind: "unary";
    input: typeof DeleteAccessLevelRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Replaces all existing [access levels]
   * [google.identity.accesscontextmanager.v1.AccessLevel] in an [access
   * policy] [google.identity.accesscontextmanager.v1.AccessPolicy] with
   * the [access levels]
   * [google.identity.accesscontextmanager.v1.AccessLevel] provided. This
   * is done atomically. The long-running operation from this RPC has a
   * successful status after all replacements propagate to long-lasting
   * storage. If the replacement contains errors, an error response is returned
   * for the first error encountered.  Upon error, the replacement is cancelled,
   * and existing [access levels]
   * [google.identity.accesscontextmanager.v1.AccessLevel] are not
   * affected. The Operation.response field contains
   * ReplaceAccessLevelsResponse. Removing [access levels]
   * [google.identity.accesscontextmanager.v1.AccessLevel] contained in existing
   * [service perimeters]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] result in an
   * error.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.ReplaceAccessLevels
   */
  replaceAccessLevels: {
    methodKind: "unary";
    input: typeof ReplaceAccessLevelsRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists all [service perimeters]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] for an
   * access policy.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.ListServicePerimeters
   */
  listServicePerimeters: {
    methodKind: "unary";
    input: typeof ListServicePerimetersRequestSchema;
    output: typeof ListServicePerimetersResponseSchema;
  },
  /**
   * Gets a [service perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] based on the
   * resource name.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.GetServicePerimeter
   */
  getServicePerimeter: {
    methodKind: "unary";
    input: typeof GetServicePerimeterRequestSchema;
    output: typeof ServicePerimeterSchema;
  },
  /**
   * Creates a [service perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter]. The
   * long-running operation from this RPC has a successful status after the
   * [service perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter]
   * propagates to long-lasting storage. If a [service perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] contains
   * errors, an error response is returned for the first error encountered.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.CreateServicePerimeter
   */
  createServicePerimeter: {
    methodKind: "unary";
    input: typeof CreateServicePerimeterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a [service perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter]. The
   * long-running operation from this RPC has a successful status after the
   * [service perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter]
   * propagates to long-lasting storage. If a [service perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] contains
   * errors, an error response is returned for the first error encountered.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.UpdateServicePerimeter
   */
  updateServicePerimeter: {
    methodKind: "unary";
    input: typeof UpdateServicePerimeterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a [service perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] based on the
   * resource name. The long-running operation from this RPC has a successful
   * status after the [service perimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] is removed from
   * long-lasting storage.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.DeleteServicePerimeter
   */
  deleteServicePerimeter: {
    methodKind: "unary";
    input: typeof DeleteServicePerimeterRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Replace all existing [service perimeters]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] in an [access
   * policy] [google.identity.accesscontextmanager.v1.AccessPolicy] with the
   * [service perimeters]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] provided. This
   * is done atomically. The long-running operation from this RPC has a
   * successful status after all replacements propagate to long-lasting storage.
   * Replacements containing errors result in an error response for the first
   * error encountered. Upon an error, replacement are cancelled and existing
   * [service perimeters]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] are not
   * affected. The Operation.response field contains
   * ReplaceServicePerimetersResponse.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.ReplaceServicePerimeters
   */
  replaceServicePerimeters: {
    methodKind: "unary";
    input: typeof ReplaceServicePerimetersRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Commits the dry-run specification for all the [service perimeters]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] in an
   * [access policy][google.identity.accesscontextmanager.v1.AccessPolicy].
   * A commit operation on a service perimeter involves copying its `spec` field
   * to the `status` field of the service perimeter. Only [service perimeters]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] with
   * `use_explicit_dry_run_spec` field set to true are affected by a commit
   * operation. The long-running operation from this RPC has a successful
   * status after the dry-run specifications for all the [service perimeters]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] have been
   * committed. If a commit fails, it causes the long-running operation to
   * return an error response and the entire commit operation is cancelled.
   * When successful, the Operation.response field contains
   * CommitServicePerimetersResponse. The `dry_run` and the `spec` fields are
   * cleared after a successful commit operation.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.CommitServicePerimeters
   */
  commitServicePerimeters: {
    methodKind: "unary";
    input: typeof CommitServicePerimetersRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Lists all [GcpUserAccessBindings]
   * [google.identity.accesscontextmanager.v1.GcpUserAccessBinding] for a
   * Google Cloud organization.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.ListGcpUserAccessBindings
   */
  listGcpUserAccessBindings: {
    methodKind: "unary";
    input: typeof ListGcpUserAccessBindingsRequestSchema;
    output: typeof ListGcpUserAccessBindingsResponseSchema;
  },
  /**
   * Gets the [GcpUserAccessBinding]
   * [google.identity.accesscontextmanager.v1.GcpUserAccessBinding] with
   * the given name.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.GetGcpUserAccessBinding
   */
  getGcpUserAccessBinding: {
    methodKind: "unary";
    input: typeof GetGcpUserAccessBindingRequestSchema;
    output: typeof GcpUserAccessBindingSchema;
  },
  /**
   * Creates a [GcpUserAccessBinding]
   * [google.identity.accesscontextmanager.v1.GcpUserAccessBinding]. If the
   * client specifies a [name]
   * [google.identity.accesscontextmanager.v1.GcpUserAccessBinding.name],
   * the server ignores it. Fails if a resource already exists with the same
   * [group_key]
   * [google.identity.accesscontextmanager.v1.GcpUserAccessBinding.group_key].
   * Completion of this long-running operation does not necessarily signify that
   * the new binding is deployed onto all affected users, which may take more
   * time.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.CreateGcpUserAccessBinding
   */
  createGcpUserAccessBinding: {
    methodKind: "unary";
    input: typeof CreateGcpUserAccessBindingRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Updates a [GcpUserAccessBinding]
   * [google.identity.accesscontextmanager.v1.GcpUserAccessBinding].
   * Completion of this long-running operation does not necessarily signify that
   * the changed binding is deployed onto all affected users, which may take
   * more time.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.UpdateGcpUserAccessBinding
   */
  updateGcpUserAccessBinding: {
    methodKind: "unary";
    input: typeof UpdateGcpUserAccessBindingRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Deletes a [GcpUserAccessBinding]
   * [google.identity.accesscontextmanager.v1.GcpUserAccessBinding].
   * Completion of this long-running operation does not necessarily signify that
   * the binding deletion is deployed onto all affected users, which may take
   * more time.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.DeleteGcpUserAccessBinding
   */
  deleteGcpUserAccessBinding: {
    methodKind: "unary";
    input: typeof DeleteGcpUserAccessBindingRequestSchema;
    output: typeof OperationSchema;
  },
  /**
   * Sets the IAM policy for the specified Access Context Manager
   * [access policy][google.identity.accesscontextmanager.v1.AccessPolicy].
   * This method replaces the existing IAM policy on the access policy. The IAM
   * policy controls the set of users who can perform specific operations on the
   * Access Context Manager [access
   * policy][google.identity.accesscontextmanager.v1.AccessPolicy].
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.SetIamPolicy
   */
  setIamPolicy: {
    methodKind: "unary";
    input: typeof SetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Gets the IAM policy for the specified Access Context Manager
   * [access policy][google.identity.accesscontextmanager.v1.AccessPolicy].
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.GetIamPolicy
   */
  getIamPolicy: {
    methodKind: "unary";
    input: typeof GetIamPolicyRequestSchema;
    output: typeof PolicySchema;
  },
  /**
   * Returns the IAM permissions that the caller has on the specified Access
   * Context Manager resource. The resource can be an
   * [AccessPolicy][google.identity.accesscontextmanager.v1.AccessPolicy],
   * [AccessLevel][google.identity.accesscontextmanager.v1.AccessLevel], or
   * [ServicePerimeter][google.identity.accesscontextmanager.v1.ServicePerimeter
   * ]. This method does not support other resources.
   *
   * @generated from rpc google.identity.accesscontextmanager.v1.AccessContextManager.TestIamPermissions
   */
  testIamPermissions: {
    methodKind: "unary";
    input: typeof TestIamPermissionsRequestSchema;
    output: typeof TestIamPermissionsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_identity_accesscontextmanager_v1_access_context_manager, 0);

