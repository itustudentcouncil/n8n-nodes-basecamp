// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/appengine/v1/domain_mapping.proto (package google.appengine.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/appengine/v1/domain_mapping.proto.
 */
export const file_google_appengine_v1_domain_mapping: GenFile = /*@__PURE__*/
  fileDesc("Cihnb29nbGUvYXBwZW5naW5lL3YxL2RvbWFpbl9tYXBwaW5nLnByb3RvEhNnb29nbGUuYXBwZW5naW5lLnYxIqABCg1Eb21haW5NYXBwaW5nEgwKBG5hbWUYASABKAkSCgoCaWQYAiABKAkSNgoMc3NsX3NldHRpbmdzGAMgASgLMiAuZ29vZ2xlLmFwcGVuZ2luZS52MS5Tc2xTZXR0aW5ncxI9ChByZXNvdXJjZV9yZWNvcmRzGAQgAygLMiMuZ29vZ2xlLmFwcGVuZ2luZS52MS5SZXNvdXJjZVJlY29yZCLzAQoLU3NsU2V0dGluZ3MSFgoOY2VydGlmaWNhdGVfaWQYASABKAkSTwoTc3NsX21hbmFnZW1lbnRfdHlwZRgDIAEoDjIyLmdvb2dsZS5hcHBlbmdpbmUudjEuU3NsU2V0dGluZ3MuU3NsTWFuYWdlbWVudFR5cGUSJgoecGVuZGluZ19tYW5hZ2VkX2NlcnRpZmljYXRlX2lkGAQgASgJIlMKEVNzbE1hbmFnZW1lbnRUeXBlEiMKH1NTTF9NQU5BR0VNRU5UX1RZUEVfVU5TUEVDSUZJRUQQABINCglBVVRPTUFUSUMQARIKCgZNQU5VQUwQAiKzAQoOUmVzb3VyY2VSZWNvcmQSDAoEbmFtZRgBIAEoCRIOCgZycmRhdGEYAiABKAkSPAoEdHlwZRgDIAEoDjIuLmdvb2dsZS5hcHBlbmdpbmUudjEuUmVzb3VyY2VSZWNvcmQuUmVjb3JkVHlwZSJFCgpSZWNvcmRUeXBlEhsKF1JFQ09SRF9UWVBFX1VOU1BFQ0lGSUVEEAASBQoBQRABEggKBEFBQUEQAhIJCgVDTkFNRRADQsMBChdjb20uZ29vZ2xlLmFwcGVuZ2luZS52MUISRG9tYWluTWFwcGluZ1Byb3RvUAFaO2Nsb3VkLmdvb2dsZS5jb20vZ28vYXBwZW5naW5lL2FwaXYxL2FwcGVuZ2luZXBiO2FwcGVuZ2luZXBiqgIZR29vZ2xlLkNsb3VkLkFwcEVuZ2luZS5WMcoCGUdvb2dsZVxDbG91ZFxBcHBFbmdpbmVcVjHqAhxHb29nbGU6OkNsb3VkOjpBcHBFbmdpbmU6OlYxYgZwcm90bzM");

/**
 * A domain serving an App Engine application.
 *
 * @generated from message google.appengine.v1.DomainMapping
 */
export type DomainMapping = Message<"google.appengine.v1.DomainMapping"> & {
  /**
   * Full path to the `DomainMapping` resource in the API. Example:
   * `apps/myapp/domainMapping/example.com`.
   *
   * @OutputOnly
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Relative name of the domain serving the application. Example:
   * `example.com`.
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * SSL configuration for this domain. If unconfigured, this domain will not
   * serve with SSL.
   *
   * @generated from field: google.appengine.v1.SslSettings ssl_settings = 3;
   */
  sslSettings?: SslSettings;

  /**
   * The resource records required to configure this domain mapping. These
   * records must be added to the domain's DNS configuration in order to
   * serve the application via this domain mapping.
   *
   * @OutputOnly
   *
   * @generated from field: repeated google.appengine.v1.ResourceRecord resource_records = 4;
   */
  resourceRecords: ResourceRecord[];
};

/**
 * Describes the message google.appengine.v1.DomainMapping.
 * Use `create(DomainMappingSchema)` to create a new message.
 */
export const DomainMappingSchema: GenMessage<DomainMapping> = /*@__PURE__*/
  messageDesc(file_google_appengine_v1_domain_mapping, 0);

/**
 * SSL configuration for a `DomainMapping` resource.
 *
 * @generated from message google.appengine.v1.SslSettings
 */
export type SslSettings = Message<"google.appengine.v1.SslSettings"> & {
  /**
   * ID of the `AuthorizedCertificate` resource configuring SSL for the
   * application. Clearing this field will remove SSL support.
   *
   * By default, a managed certificate is automatically created for every
   * domain mapping. To omit SSL support or to configure SSL manually, specify
   * `SslManagementType.MANUAL` on a `CREATE` or `UPDATE` request. You must
   * be authorized to administer the `AuthorizedCertificate` resource to
   * manually map it to a `DomainMapping` resource.
   * Example: `12345`.
   *
   * @generated from field: string certificate_id = 1;
   */
  certificateId: string;

  /**
   * SSL management type for this domain. If `AUTOMATIC`, a managed certificate
   * is automatically provisioned. If `MANUAL`, `certificate_id` must be
   * manually specified in order to configure SSL for this domain.
   *
   * @generated from field: google.appengine.v1.SslSettings.SslManagementType ssl_management_type = 3;
   */
  sslManagementType: SslSettings_SslManagementType;

  /**
   * ID of the managed `AuthorizedCertificate` resource currently being
   * provisioned, if applicable. Until the new managed certificate has been
   * successfully provisioned, the previous SSL state will be preserved. Once
   * the provisioning process completes, the `certificate_id` field will reflect
   * the new managed certificate and this field will be left empty. To remove
   * SSL support while there is still a pending managed certificate, clear the
   * `certificate_id` field with an `UpdateDomainMappingRequest`.
   *
   * @OutputOnly
   *
   * @generated from field: string pending_managed_certificate_id = 4;
   */
  pendingManagedCertificateId: string;
};

/**
 * Describes the message google.appengine.v1.SslSettings.
 * Use `create(SslSettingsSchema)` to create a new message.
 */
export const SslSettingsSchema: GenMessage<SslSettings> = /*@__PURE__*/
  messageDesc(file_google_appengine_v1_domain_mapping, 1);

/**
 * The SSL management type for this domain.
 *
 * @generated from enum google.appengine.v1.SslSettings.SslManagementType
 */
export enum SslSettings_SslManagementType {
  /**
   * Defaults to `AUTOMATIC`.
   *
   * @generated from enum value: SSL_MANAGEMENT_TYPE_UNSPECIFIED = 0;
   */
  SSL_MANAGEMENT_TYPE_UNSPECIFIED = 0,

  /**
   * SSL support for this domain is configured automatically. The mapped SSL
   * certificate will be automatically renewed.
   *
   * @generated from enum value: AUTOMATIC = 1;
   */
  AUTOMATIC = 1,

  /**
   * SSL support for this domain is configured manually by the user. Either
   * the domain has no SSL support or a user-obtained SSL certificate has been
   * explictly mapped to this domain.
   *
   * @generated from enum value: MANUAL = 2;
   */
  MANUAL = 2,
}

/**
 * Describes the enum google.appengine.v1.SslSettings.SslManagementType.
 */
export const SslSettings_SslManagementTypeSchema: GenEnum<SslSettings_SslManagementType> = /*@__PURE__*/
  enumDesc(file_google_appengine_v1_domain_mapping, 1, 0);

/**
 * A DNS resource record.
 *
 * @generated from message google.appengine.v1.ResourceRecord
 */
export type ResourceRecord = Message<"google.appengine.v1.ResourceRecord"> & {
  /**
   * Relative name of the object affected by this record. Only applicable for
   * `CNAME` records. Example: 'www'.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Data for this record. Values vary by record type, as defined in RFC 1035
   * (section 5) and RFC 1034 (section 3.6.1).
   *
   * @generated from field: string rrdata = 2;
   */
  rrdata: string;

  /**
   * Resource record type. Example: `AAAA`.
   *
   * @generated from field: google.appengine.v1.ResourceRecord.RecordType type = 3;
   */
  type: ResourceRecord_RecordType;
};

/**
 * Describes the message google.appengine.v1.ResourceRecord.
 * Use `create(ResourceRecordSchema)` to create a new message.
 */
export const ResourceRecordSchema: GenMessage<ResourceRecord> = /*@__PURE__*/
  messageDesc(file_google_appengine_v1_domain_mapping, 2);

/**
 * A resource record type.
 *
 * @generated from enum google.appengine.v1.ResourceRecord.RecordType
 */
export enum ResourceRecord_RecordType {
  /**
   * An unknown resource record.
   *
   * @generated from enum value: RECORD_TYPE_UNSPECIFIED = 0;
   */
  RECORD_TYPE_UNSPECIFIED = 0,

  /**
   * An A resource record. Data is an IPv4 address.
   *
   * @generated from enum value: A = 1;
   */
  A = 1,

  /**
   * An AAAA resource record. Data is an IPv6 address.
   *
   * @generated from enum value: AAAA = 2;
   */
  AAAA = 2,

  /**
   * A CNAME resource record. Data is a domain name to be aliased.
   *
   * @generated from enum value: CNAME = 3;
   */
  CNAME = 3,
}

/**
 * Describes the enum google.appengine.v1.ResourceRecord.RecordType.
 */
export const ResourceRecord_RecordTypeSchema: GenEnum<ResourceRecord_RecordType> = /*@__PURE__*/
  enumDesc(file_google_appengine_v1_domain_mapping, 2, 0);

