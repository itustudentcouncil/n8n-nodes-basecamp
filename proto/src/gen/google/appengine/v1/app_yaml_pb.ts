// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/appengine/v1/app_yaml.proto (package google.appengine.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/appengine/v1/app_yaml.proto.
 */
export const file_google_appengine_v1_app_yaml: GenFile = /*@__PURE__*/
  fileDesc("CiJnb29nbGUvYXBwZW5naW5lL3YxL2FwcF95YW1sLnByb3RvEhNnb29nbGUuYXBwZW5naW5lLnYxIuABChBBcGlDb25maWdIYW5kbGVyEj0KEGF1dGhfZmFpbF9hY3Rpb24YASABKA4yIy5nb29nbGUuYXBwZW5naW5lLnYxLkF1dGhGYWlsQWN0aW9uEjQKBWxvZ2luGAIgASgOMiUuZ29vZ2xlLmFwcGVuZ2luZS52MS5Mb2dpblJlcXVpcmVtZW50Eg4KBnNjcmlwdBgDIAEoCRI6Cg5zZWN1cml0eV9sZXZlbBgEIAEoDjIiLmdvb2dsZS5hcHBlbmdpbmUudjEuU2VjdXJpdHlMZXZlbBILCgN1cmwYBSABKAkijwIKDEVycm9ySGFuZGxlchI/CgplcnJvcl9jb2RlGAEgASgOMisuZ29vZ2xlLmFwcGVuZ2luZS52MS5FcnJvckhhbmRsZXIuRXJyb3JDb2RlEhMKC3N0YXRpY19maWxlGAIgASgJEhEKCW1pbWVfdHlwZRgDIAEoCSKVAQoJRXJyb3JDb2RlEhoKFkVSUk9SX0NPREVfVU5TUEVDSUZJRUQQABIWChJFUlJPUl9DT0RFX0RFRkFVTFQQABIZChVFUlJPUl9DT0RFX09WRVJfUVVPVEEQARIdChlFUlJPUl9DT0RFX0RPU19BUElfREVOSUFMEAISFgoSRVJST1JfQ09ERV9USU1FT1VUEAMaAhABIs0FCgZVcmxNYXASEQoJdXJsX3JlZ2V4GAEgASgJEj8KDHN0YXRpY19maWxlcxgCIAEoCzInLmdvb2dsZS5hcHBlbmdpbmUudjEuU3RhdGljRmlsZXNIYW5kbGVySAASNAoGc2NyaXB0GAMgASgLMiIuZ29vZ2xlLmFwcGVuZ2luZS52MS5TY3JpcHRIYW5kbGVySAASPwoMYXBpX2VuZHBvaW50GAQgASgLMicuZ29vZ2xlLmFwcGVuZ2luZS52MS5BcGlFbmRwb2ludEhhbmRsZXJIABI6Cg5zZWN1cml0eV9sZXZlbBgFIAEoDjIiLmdvb2dsZS5hcHBlbmdpbmUudjEuU2VjdXJpdHlMZXZlbBI0CgVsb2dpbhgGIAEoDjIlLmdvb2dsZS5hcHBlbmdpbmUudjEuTG9naW5SZXF1aXJlbWVudBI9ChBhdXRoX2ZhaWxfYWN0aW9uGAcgASgOMiMuZ29vZ2xlLmFwcGVuZ2luZS52MS5BdXRoRmFpbEFjdGlvbhJZChtyZWRpcmVjdF9odHRwX3Jlc3BvbnNlX2NvZGUYCCABKA4yNC5nb29nbGUuYXBwZW5naW5lLnYxLlVybE1hcC5SZWRpcmVjdEh0dHBSZXNwb25zZUNvZGUi2wEKGFJlZGlyZWN0SHR0cFJlc3BvbnNlQ29kZRIrCidSRURJUkVDVF9IVFRQX1JFU1BPTlNFX0NPREVfVU5TUEVDSUZJRUQQABIjCh9SRURJUkVDVF9IVFRQX1JFU1BPTlNFX0NPREVfMzAxEAESIwofUkVESVJFQ1RfSFRUUF9SRVNQT05TRV9DT0RFXzMwMhACEiMKH1JFRElSRUNUX0hUVFBfUkVTUE9OU0VfQ09ERV8zMDMQAxIjCh9SRURJUkVDVF9IVFRQX1JFU1BPTlNFX0NPREVfMzA3EARCDgoMaGFuZGxlcl90eXBlIsACChJTdGF0aWNGaWxlc0hhbmRsZXISDAoEcGF0aBgBIAEoCRIZChF1cGxvYWRfcGF0aF9yZWdleBgCIAEoCRJOCgxodHRwX2hlYWRlcnMYAyADKAsyOC5nb29nbGUuYXBwZW5naW5lLnYxLlN0YXRpY0ZpbGVzSGFuZGxlci5IdHRwSGVhZGVyc0VudHJ5EhEKCW1pbWVfdHlwZRgEIAEoCRItCgpleHBpcmF0aW9uGAUgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEh0KFXJlcXVpcmVfbWF0Y2hpbmdfZmlsZRgGIAEoCBIcChRhcHBsaWNhdGlvbl9yZWFkYWJsZRgHIAEoCBoyChBIdHRwSGVhZGVyc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiJAoNU2NyaXB0SGFuZGxlchITCgtzY3JpcHRfcGF0aBgBIAEoCSIpChJBcGlFbmRwb2ludEhhbmRsZXISEwoLc2NyaXB0X3BhdGgYASABKAki6wEKC0hlYWx0aENoZWNrEhwKFGRpc2FibGVfaGVhbHRoX2NoZWNrGAEgASgIEgwKBGhvc3QYAiABKAkSGQoRaGVhbHRoeV90aHJlc2hvbGQYAyABKA0SGwoTdW5oZWFsdGh5X3RocmVzaG9sZBgEIAEoDRIZChFyZXN0YXJ0X3RocmVzaG9sZBgFIAEoDRIxCg5jaGVja19pbnRlcnZhbBgGIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhIqCgd0aW1lb3V0GAcgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uIvcBCg5SZWFkaW5lc3NDaGVjaxIMCgRwYXRoGAEgASgJEgwKBGhvc3QYAiABKAkSGQoRZmFpbHVyZV90aHJlc2hvbGQYAyABKA0SGQoRc3VjY2Vzc190aHJlc2hvbGQYBCABKA0SMQoOY2hlY2tfaW50ZXJ2YWwYBSABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SKgoHdGltZW91dBgGIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhI0ChFhcHBfc3RhcnRfdGltZW91dBgHIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbiLyAQoNTGl2ZW5lc3NDaGVjaxIMCgRwYXRoGAEgASgJEgwKBGhvc3QYAiABKAkSGQoRZmFpbHVyZV90aHJlc2hvbGQYAyABKA0SGQoRc3VjY2Vzc190aHJlc2hvbGQYBCABKA0SMQoOY2hlY2tfaW50ZXJ2YWwYBSABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SKgoHdGltZW91dBgGIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhIwCg1pbml0aWFsX2RlbGF5GAcgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uIigKB0xpYnJhcnkSDAoEbmFtZRgBIAEoCRIPCgd2ZXJzaW9uGAIgASgJKnQKDkF1dGhGYWlsQWN0aW9uEiAKHEFVVEhfRkFJTF9BQ1RJT05fVU5TUEVDSUZJRUQQABIdChlBVVRIX0ZBSUxfQUNUSU9OX1JFRElSRUNUEAESIQodQVVUSF9GQUlMX0FDVElPTl9VTkFVVEhPUklaRUQQAipiChBMb2dpblJlcXVpcmVtZW50EhUKEUxPR0lOX1VOU1BFQ0lGSUVEEAASEgoOTE9HSU5fT1BUSU9OQUwQARIPCgtMT0dJTl9BRE1JThACEhIKDkxPR0lOX1JFUVVJUkVEEAMqeQoNU2VjdXJpdHlMZXZlbBIWChJTRUNVUkVfVU5TUEVDSUZJRUQQABISCg5TRUNVUkVfREVGQVVMVBAAEhAKDFNFQ1VSRV9ORVZFUhABEhMKD1NFQ1VSRV9PUFRJT05BTBACEhEKDVNFQ1VSRV9BTFdBWVMQAxoCEAFCvQEKF2NvbS5nb29nbGUuYXBwZW5naW5lLnYxQgxBcHBZYW1sUHJvdG9QAVo7Y2xvdWQuZ29vZ2xlLmNvbS9nby9hcHBlbmdpbmUvYXBpdjEvYXBwZW5naW5lcGI7YXBwZW5naW5lcGKqAhlHb29nbGUuQ2xvdWQuQXBwRW5naW5lLlYxygIZR29vZ2xlXENsb3VkXEFwcEVuZ2luZVxWMeoCHEdvb2dsZTo6Q2xvdWQ6OkFwcEVuZ2luZTo6VjFiBnByb3RvMw", [file_google_protobuf_duration]);

/**
 * [Google Cloud Endpoints](https://cloud.google.com/appengine/docs/python/endpoints/)
 * configuration for API handlers.
 *
 * @generated from message google.appengine.v1.ApiConfigHandler
 */
export type ApiConfigHandler = Message<"google.appengine.v1.ApiConfigHandler"> & {
  /**
   * Action to take when users access resources that require
   * authentication. Defaults to `redirect`.
   *
   * @generated from field: google.appengine.v1.AuthFailAction auth_fail_action = 1;
   */
  authFailAction: AuthFailAction;

  /**
   * Level of login required to access this resource. Defaults to
   * `optional`.
   *
   * @generated from field: google.appengine.v1.LoginRequirement login = 2;
   */
  login: LoginRequirement;

  /**
   * Path to the script from the application root directory.
   *
   * @generated from field: string script = 3;
   */
  script: string;

  /**
   * Security (HTTPS) enforcement for this URL.
   *
   * @generated from field: google.appengine.v1.SecurityLevel security_level = 4;
   */
  securityLevel: SecurityLevel;

  /**
   * URL to serve the endpoint at.
   *
   * @generated from field: string url = 5;
   */
  url: string;
};

/**
 * Describes the message google.appengine.v1.ApiConfigHandler.
 * Use `create(ApiConfigHandlerSchema)` to create a new message.
 */
export const ApiConfigHandlerSchema: GenMessage<ApiConfigHandler> = /*@__PURE__*/
  messageDesc(file_google_appengine_v1_app_yaml, 0);

/**
 * Custom static error page to be served when an error occurs.
 *
 * @generated from message google.appengine.v1.ErrorHandler
 */
export type ErrorHandler = Message<"google.appengine.v1.ErrorHandler"> & {
  /**
   * Error condition this handler applies to.
   *
   * @generated from field: google.appengine.v1.ErrorHandler.ErrorCode error_code = 1;
   */
  errorCode: ErrorHandler_ErrorCode;

  /**
   * Static file content to be served for this error.
   *
   * @generated from field: string static_file = 2;
   */
  staticFile: string;

  /**
   * MIME type of file. Defaults to `text/html`.
   *
   * @generated from field: string mime_type = 3;
   */
  mimeType: string;
};

/**
 * Describes the message google.appengine.v1.ErrorHandler.
 * Use `create(ErrorHandlerSchema)` to create a new message.
 */
export const ErrorHandlerSchema: GenMessage<ErrorHandler> = /*@__PURE__*/
  messageDesc(file_google_appengine_v1_app_yaml, 1);

/**
 * Error codes.
 *
 * @generated from enum google.appengine.v1.ErrorHandler.ErrorCode
 */
export enum ErrorHandler_ErrorCode {
  /**
   * Not specified. ERROR_CODE_DEFAULT is assumed.
   *
   * @generated from enum value: ERROR_CODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * All other error types.
   *
   * @generated from enum value: ERROR_CODE_DEFAULT = 0;
   */
  DEFAULT = 0,

  /**
   * Application has exceeded a resource quota.
   *
   * @generated from enum value: ERROR_CODE_OVER_QUOTA = 1;
   */
  OVER_QUOTA = 1,

  /**
   * Client blocked by the application's Denial of Service protection
   * configuration.
   *
   * @generated from enum value: ERROR_CODE_DOS_API_DENIAL = 2;
   */
  DOS_API_DENIAL = 2,

  /**
   * Deadline reached before the application responds.
   *
   * @generated from enum value: ERROR_CODE_TIMEOUT = 3;
   */
  TIMEOUT = 3,
}

/**
 * Describes the enum google.appengine.v1.ErrorHandler.ErrorCode.
 */
export const ErrorHandler_ErrorCodeSchema: GenEnum<ErrorHandler_ErrorCode> = /*@__PURE__*/
  enumDesc(file_google_appengine_v1_app_yaml, 1, 0);

/**
 * URL pattern and description of how the URL should be handled. App Engine can
 * handle URLs by executing application code or by serving static files
 * uploaded with the version, such as images, CSS, or JavaScript.
 *
 * @generated from message google.appengine.v1.UrlMap
 */
export type UrlMap = Message<"google.appengine.v1.UrlMap"> & {
  /**
   * URL prefix. Uses regular expression syntax, which means regexp
   * special characters must be escaped, but should not contain groupings.
   * All URLs that begin with this prefix are handled by this handler, using the
   * portion of the URL after the prefix as part of the file path.
   *
   * @generated from field: string url_regex = 1;
   */
  urlRegex: string;

  /**
   * Type of handler for this URL pattern.
   *
   * @generated from oneof google.appengine.v1.UrlMap.handler_type
   */
  handlerType: {
    /**
     * Returns the contents of a file, such as an image, as the response.
     *
     * @generated from field: google.appengine.v1.StaticFilesHandler static_files = 2;
     */
    value: StaticFilesHandler;
    case: "staticFiles";
  } | {
    /**
     * Executes a script to handle the requests that match this URL
     * pattern. Only the `auto` value is supported for Node.js in the
     * App Engine standard environment, for example `"script": "auto"`.
     *
     * @generated from field: google.appengine.v1.ScriptHandler script = 3;
     */
    value: ScriptHandler;
    case: "script";
  } | {
    /**
     * Uses API Endpoints to handle requests.
     *
     * @generated from field: google.appengine.v1.ApiEndpointHandler api_endpoint = 4;
     */
    value: ApiEndpointHandler;
    case: "apiEndpoint";
  } | { case: undefined; value?: undefined };

  /**
   * Security (HTTPS) enforcement for this URL.
   *
   * @generated from field: google.appengine.v1.SecurityLevel security_level = 5;
   */
  securityLevel: SecurityLevel;

  /**
   * Level of login required to access this resource. Not supported for Node.js
   * in the App Engine standard environment.
   *
   * @generated from field: google.appengine.v1.LoginRequirement login = 6;
   */
  login: LoginRequirement;

  /**
   * Action to take when users access resources that require
   * authentication. Defaults to `redirect`.
   *
   * @generated from field: google.appengine.v1.AuthFailAction auth_fail_action = 7;
   */
  authFailAction: AuthFailAction;

  /**
   * `30x` code to use when performing redirects for the `secure` field.
   * Defaults to `302`.
   *
   * @generated from field: google.appengine.v1.UrlMap.RedirectHttpResponseCode redirect_http_response_code = 8;
   */
  redirectHttpResponseCode: UrlMap_RedirectHttpResponseCode;
};

/**
 * Describes the message google.appengine.v1.UrlMap.
 * Use `create(UrlMapSchema)` to create a new message.
 */
export const UrlMapSchema: GenMessage<UrlMap> = /*@__PURE__*/
  messageDesc(file_google_appengine_v1_app_yaml, 2);

/**
 * Redirect codes.
 *
 * @generated from enum google.appengine.v1.UrlMap.RedirectHttpResponseCode
 */
export enum UrlMap_RedirectHttpResponseCode {
  /**
   * Not specified. `302` is assumed.
   *
   * @generated from enum value: REDIRECT_HTTP_RESPONSE_CODE_UNSPECIFIED = 0;
   */
  REDIRECT_HTTP_RESPONSE_CODE_UNSPECIFIED = 0,

  /**
   * `301 Moved Permanently` code.
   *
   * @generated from enum value: REDIRECT_HTTP_RESPONSE_CODE_301 = 1;
   */
  REDIRECT_HTTP_RESPONSE_CODE_301 = 1,

  /**
   * `302 Moved Temporarily` code.
   *
   * @generated from enum value: REDIRECT_HTTP_RESPONSE_CODE_302 = 2;
   */
  REDIRECT_HTTP_RESPONSE_CODE_302 = 2,

  /**
   * `303 See Other` code.
   *
   * @generated from enum value: REDIRECT_HTTP_RESPONSE_CODE_303 = 3;
   */
  REDIRECT_HTTP_RESPONSE_CODE_303 = 3,

  /**
   * `307 Temporary Redirect` code.
   *
   * @generated from enum value: REDIRECT_HTTP_RESPONSE_CODE_307 = 4;
   */
  REDIRECT_HTTP_RESPONSE_CODE_307 = 4,
}

/**
 * Describes the enum google.appengine.v1.UrlMap.RedirectHttpResponseCode.
 */
export const UrlMap_RedirectHttpResponseCodeSchema: GenEnum<UrlMap_RedirectHttpResponseCode> = /*@__PURE__*/
  enumDesc(file_google_appengine_v1_app_yaml, 2, 0);

/**
 * Files served directly to the user for a given URL, such as images, CSS
 * stylesheets, or JavaScript source files. Static file handlers describe which
 * files in the application directory are static files, and which URLs serve
 * them.
 *
 * @generated from message google.appengine.v1.StaticFilesHandler
 */
export type StaticFilesHandler = Message<"google.appengine.v1.StaticFilesHandler"> & {
  /**
   * Path to the static files matched by the URL pattern, from the
   * application root directory. The path can refer to text matched in groupings
   * in the URL pattern.
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * Regular expression that matches the file paths for all files that should be
   * referenced by this handler.
   *
   * @generated from field: string upload_path_regex = 2;
   */
  uploadPathRegex: string;

  /**
   * HTTP headers to use for all responses from these URLs.
   *
   * @generated from field: map<string, string> http_headers = 3;
   */
  httpHeaders: { [key: string]: string };

  /**
   * MIME type used to serve all files served by this handler.
   *
   * Defaults to file-specific MIME types, which are derived from each file's
   * filename extension.
   *
   * @generated from field: string mime_type = 4;
   */
  mimeType: string;

  /**
   * Time a static file served by this handler should be cached
   * by web proxies and browsers.
   *
   * @generated from field: google.protobuf.Duration expiration = 5;
   */
  expiration?: Duration;

  /**
   * Whether this handler should match the request if the file
   * referenced by the handler does not exist.
   *
   * @generated from field: bool require_matching_file = 6;
   */
  requireMatchingFile: boolean;

  /**
   * Whether files should also be uploaded as code data. By default, files
   * declared in static file handlers are uploaded as static
   * data and are only served to end users; they cannot be read by the
   * application. If enabled, uploads are charged against both your code and
   * static data storage resource quotas.
   *
   * @generated from field: bool application_readable = 7;
   */
  applicationReadable: boolean;
};

/**
 * Describes the message google.appengine.v1.StaticFilesHandler.
 * Use `create(StaticFilesHandlerSchema)` to create a new message.
 */
export const StaticFilesHandlerSchema: GenMessage<StaticFilesHandler> = /*@__PURE__*/
  messageDesc(file_google_appengine_v1_app_yaml, 3);

/**
 * Executes a script to handle the request that matches the URL pattern.
 *
 * @generated from message google.appengine.v1.ScriptHandler
 */
export type ScriptHandler = Message<"google.appengine.v1.ScriptHandler"> & {
  /**
   * Path to the script from the application root directory.
   *
   * @generated from field: string script_path = 1;
   */
  scriptPath: string;
};

/**
 * Describes the message google.appengine.v1.ScriptHandler.
 * Use `create(ScriptHandlerSchema)` to create a new message.
 */
export const ScriptHandlerSchema: GenMessage<ScriptHandler> = /*@__PURE__*/
  messageDesc(file_google_appengine_v1_app_yaml, 4);

/**
 * Uses Google Cloud Endpoints to handle requests.
 *
 * @generated from message google.appengine.v1.ApiEndpointHandler
 */
export type ApiEndpointHandler = Message<"google.appengine.v1.ApiEndpointHandler"> & {
  /**
   * Path to the script from the application root directory.
   *
   * @generated from field: string script_path = 1;
   */
  scriptPath: string;
};

/**
 * Describes the message google.appengine.v1.ApiEndpointHandler.
 * Use `create(ApiEndpointHandlerSchema)` to create a new message.
 */
export const ApiEndpointHandlerSchema: GenMessage<ApiEndpointHandler> = /*@__PURE__*/
  messageDesc(file_google_appengine_v1_app_yaml, 5);

/**
 * Health checking configuration for VM instances. Unhealthy instances
 * are killed and replaced with new instances. Only applicable for
 * instances in App Engine flexible environment.
 *
 * @generated from message google.appengine.v1.HealthCheck
 */
export type HealthCheck = Message<"google.appengine.v1.HealthCheck"> & {
  /**
   * Whether to explicitly disable health checks for this instance.
   *
   * @generated from field: bool disable_health_check = 1;
   */
  disableHealthCheck: boolean;

  /**
   * Host header to send when performing an HTTP health check.
   * Example: "myapp.appspot.com"
   *
   * @generated from field: string host = 2;
   */
  host: string;

  /**
   * Number of consecutive successful health checks required before receiving
   * traffic.
   *
   * @generated from field: uint32 healthy_threshold = 3;
   */
  healthyThreshold: number;

  /**
   * Number of consecutive failed health checks required before removing
   * traffic.
   *
   * @generated from field: uint32 unhealthy_threshold = 4;
   */
  unhealthyThreshold: number;

  /**
   * Number of consecutive failed health checks required before an instance is
   * restarted.
   *
   * @generated from field: uint32 restart_threshold = 5;
   */
  restartThreshold: number;

  /**
   * Interval between health checks.
   *
   * @generated from field: google.protobuf.Duration check_interval = 6;
   */
  checkInterval?: Duration;

  /**
   * Time before the health check is considered failed.
   *
   * @generated from field: google.protobuf.Duration timeout = 7;
   */
  timeout?: Duration;
};

/**
 * Describes the message google.appengine.v1.HealthCheck.
 * Use `create(HealthCheckSchema)` to create a new message.
 */
export const HealthCheckSchema: GenMessage<HealthCheck> = /*@__PURE__*/
  messageDesc(file_google_appengine_v1_app_yaml, 6);

/**
 * Readiness checking configuration for VM instances. Unhealthy instances
 * are removed from traffic rotation.
 *
 * @generated from message google.appengine.v1.ReadinessCheck
 */
export type ReadinessCheck = Message<"google.appengine.v1.ReadinessCheck"> & {
  /**
   * The request path.
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * Host header to send when performing a HTTP Readiness check.
   * Example: "myapp.appspot.com"
   *
   * @generated from field: string host = 2;
   */
  host: string;

  /**
   * Number of consecutive failed checks required before removing
   * traffic.
   *
   * @generated from field: uint32 failure_threshold = 3;
   */
  failureThreshold: number;

  /**
   * Number of consecutive successful checks required before receiving
   * traffic.
   *
   * @generated from field: uint32 success_threshold = 4;
   */
  successThreshold: number;

  /**
   * Interval between health checks.
   *
   * @generated from field: google.protobuf.Duration check_interval = 5;
   */
  checkInterval?: Duration;

  /**
   * Time before the check is considered failed.
   *
   * @generated from field: google.protobuf.Duration timeout = 6;
   */
  timeout?: Duration;

  /**
   * A maximum time limit on application initialization, measured from moment
   * the application successfully replies to a healthcheck until it is ready to
   * serve traffic.
   *
   * @generated from field: google.protobuf.Duration app_start_timeout = 7;
   */
  appStartTimeout?: Duration;
};

/**
 * Describes the message google.appengine.v1.ReadinessCheck.
 * Use `create(ReadinessCheckSchema)` to create a new message.
 */
export const ReadinessCheckSchema: GenMessage<ReadinessCheck> = /*@__PURE__*/
  messageDesc(file_google_appengine_v1_app_yaml, 7);

/**
 * Health checking configuration for VM instances. Unhealthy instances
 * are killed and replaced with new instances.
 *
 * @generated from message google.appengine.v1.LivenessCheck
 */
export type LivenessCheck = Message<"google.appengine.v1.LivenessCheck"> & {
  /**
   * The request path.
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * Host header to send when performing a HTTP Liveness check.
   * Example: "myapp.appspot.com"
   *
   * @generated from field: string host = 2;
   */
  host: string;

  /**
   * Number of consecutive failed checks required before considering the
   * VM unhealthy.
   *
   * @generated from field: uint32 failure_threshold = 3;
   */
  failureThreshold: number;

  /**
   * Number of consecutive successful checks required before considering
   * the VM healthy.
   *
   * @generated from field: uint32 success_threshold = 4;
   */
  successThreshold: number;

  /**
   * Interval between health checks.
   *
   * @generated from field: google.protobuf.Duration check_interval = 5;
   */
  checkInterval?: Duration;

  /**
   * Time before the check is considered failed.
   *
   * @generated from field: google.protobuf.Duration timeout = 6;
   */
  timeout?: Duration;

  /**
   * The initial delay before starting to execute the checks.
   *
   * @generated from field: google.protobuf.Duration initial_delay = 7;
   */
  initialDelay?: Duration;
};

/**
 * Describes the message google.appengine.v1.LivenessCheck.
 * Use `create(LivenessCheckSchema)` to create a new message.
 */
export const LivenessCheckSchema: GenMessage<LivenessCheck> = /*@__PURE__*/
  messageDesc(file_google_appengine_v1_app_yaml, 8);

/**
 * Third-party Python runtime library that is required by the application.
 *
 * @generated from message google.appengine.v1.Library
 */
export type Library = Message<"google.appengine.v1.Library"> & {
  /**
   * Name of the library. Example: "django".
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Version of the library to select, or "latest".
   *
   * @generated from field: string version = 2;
   */
  version: string;
};

/**
 * Describes the message google.appengine.v1.Library.
 * Use `create(LibrarySchema)` to create a new message.
 */
export const LibrarySchema: GenMessage<Library> = /*@__PURE__*/
  messageDesc(file_google_appengine_v1_app_yaml, 9);

/**
 * Actions to take when the user is not logged in.
 *
 * @generated from enum google.appengine.v1.AuthFailAction
 */
export enum AuthFailAction {
  /**
   * Not specified. `AUTH_FAIL_ACTION_REDIRECT` is assumed.
   *
   * @generated from enum value: AUTH_FAIL_ACTION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Redirects user to "accounts.google.com". The user is redirected back to the
   * application URL after signing in or creating an account.
   *
   * @generated from enum value: AUTH_FAIL_ACTION_REDIRECT = 1;
   */
  REDIRECT = 1,

  /**
   * Rejects request with a `401` HTTP status code and an error
   * message.
   *
   * @generated from enum value: AUTH_FAIL_ACTION_UNAUTHORIZED = 2;
   */
  UNAUTHORIZED = 2,
}

/**
 * Describes the enum google.appengine.v1.AuthFailAction.
 */
export const AuthFailActionSchema: GenEnum<AuthFailAction> = /*@__PURE__*/
  enumDesc(file_google_appengine_v1_app_yaml, 0);

/**
 * Methods to restrict access to a URL based on login status.
 *
 * @generated from enum google.appengine.v1.LoginRequirement
 */
export enum LoginRequirement {
  /**
   * Not specified. `LOGIN_OPTIONAL` is assumed.
   *
   * @generated from enum value: LOGIN_UNSPECIFIED = 0;
   */
  LOGIN_UNSPECIFIED = 0,

  /**
   * Does not require that the user is signed in.
   *
   * @generated from enum value: LOGIN_OPTIONAL = 1;
   */
  LOGIN_OPTIONAL = 1,

  /**
   * If the user is not signed in, the `auth_fail_action` is taken.
   * In addition, if the user is not an administrator for the
   * application, they are given an error message regardless of
   * `auth_fail_action`. If the user is an administrator, the handler
   * proceeds.
   *
   * @generated from enum value: LOGIN_ADMIN = 2;
   */
  LOGIN_ADMIN = 2,

  /**
   * If the user has signed in, the handler proceeds normally. Otherwise, the
   * auth_fail_action is taken.
   *
   * @generated from enum value: LOGIN_REQUIRED = 3;
   */
  LOGIN_REQUIRED = 3,
}

/**
 * Describes the enum google.appengine.v1.LoginRequirement.
 */
export const LoginRequirementSchema: GenEnum<LoginRequirement> = /*@__PURE__*/
  enumDesc(file_google_appengine_v1_app_yaml, 1);

/**
 * Methods to enforce security (HTTPS) on a URL.
 *
 * @generated from enum google.appengine.v1.SecurityLevel
 */
export enum SecurityLevel {
  /**
   * Not specified.
   *
   * @generated from enum value: SECURE_UNSPECIFIED = 0;
   */
  SECURE_UNSPECIFIED = 0,

  /**
   * Both HTTP and HTTPS requests with URLs that match the handler succeed
   * without redirects. The application can examine the request to determine
   * which protocol was used, and respond accordingly.
   *
   * @generated from enum value: SECURE_DEFAULT = 0;
   */
  SECURE_DEFAULT = 0,

  /**
   * Requests for a URL that match this handler that use HTTPS are automatically
   * redirected to the HTTP equivalent URL.
   *
   * @generated from enum value: SECURE_NEVER = 1;
   */
  SECURE_NEVER = 1,

  /**
   * Both HTTP and HTTPS requests with URLs that match the handler succeed
   * without redirects. The application can examine the request to determine
   * which protocol was used and respond accordingly.
   *
   * @generated from enum value: SECURE_OPTIONAL = 2;
   */
  SECURE_OPTIONAL = 2,

  /**
   * Requests for a URL that match this handler that do not use HTTPS are
   * automatically redirected to the HTTPS URL with the same path. Query
   * parameters are reserved for the redirect.
   *
   * @generated from enum value: SECURE_ALWAYS = 3;
   */
  SECURE_ALWAYS = 3,
}

/**
 * Describes the enum google.appengine.v1.SecurityLevel.
 */
export const SecurityLevelSchema: GenEnum<SecurityLevel> = /*@__PURE__*/
  enumDesc(file_google_appengine_v1_app_yaml, 2);

