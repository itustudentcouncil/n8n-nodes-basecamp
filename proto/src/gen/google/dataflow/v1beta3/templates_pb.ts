// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/dataflow/v1beta3/templates.proto (package google.dataflow.v1beta3, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../api/annotations_pb";
import { file_google_api_client } from "../../api/client_pb";
import type { AutoscalingAlgorithm, FlexResourceSchedulingGoal, WorkerIPAddressConfiguration } from "./environment_pb";
import { file_google_dataflow_v1beta3_environment } from "./environment_pb";
import type { Job, JobSchema } from "./jobs_pb";
import { file_google_dataflow_v1beta3_jobs } from "./jobs_pb";
import type { Status } from "../../rpc/status_pb";
import { file_google_rpc_status } from "../../rpc/status_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/dataflow/v1beta3/templates.proto.
 */
export const file_google_dataflow_v1beta3_templates: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_dataflow_v1beta3_environment, file_google_dataflow_v1beta3_jobs, file_google_rpc_status]);

/**
 * Response to the request to launch a job from Flex Template.
 *
 * @generated from message google.dataflow.v1beta3.LaunchFlexTemplateResponse
 */
export type LaunchFlexTemplateResponse = Message<"google.dataflow.v1beta3.LaunchFlexTemplateResponse"> & {
  /**
   * The job that was launched, if the request was not a dry run and
   * the job was successfully launched.
   *
   * @generated from field: google.dataflow.v1beta3.Job job = 1;
   */
  job?: Job;
};

/**
 * Describes the message google.dataflow.v1beta3.LaunchFlexTemplateResponse.
 * Use `create(LaunchFlexTemplateResponseSchema)` to create a new message.
 */
export const LaunchFlexTemplateResponseSchema: GenMessage<LaunchFlexTemplateResponse> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 0);

/**
 * Container Spec.
 *
 * @generated from message google.dataflow.v1beta3.ContainerSpec
 */
export type ContainerSpec = Message<"google.dataflow.v1beta3.ContainerSpec"> & {
  /**
   * Name of the docker container image. E.g., gcr.io/project/some-image
   *
   * @generated from field: string image = 1;
   */
  image: string;

  /**
   * Metadata describing a template including description and validation rules.
   *
   * @generated from field: google.dataflow.v1beta3.TemplateMetadata metadata = 2;
   */
  metadata?: TemplateMetadata;

  /**
   * Required. SDK info of the Flex Template.
   *
   * @generated from field: google.dataflow.v1beta3.SDKInfo sdk_info = 3;
   */
  sdkInfo?: SDKInfo;

  /**
   * Default runtime environment for the job.
   *
   * @generated from field: google.dataflow.v1beta3.FlexTemplateRuntimeEnvironment default_environment = 4;
   */
  defaultEnvironment?: FlexTemplateRuntimeEnvironment;
};

/**
 * Describes the message google.dataflow.v1beta3.ContainerSpec.
 * Use `create(ContainerSpecSchema)` to create a new message.
 */
export const ContainerSpecSchema: GenMessage<ContainerSpec> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 1);

/**
 * Launch FlexTemplate Parameter.
 *
 * @generated from message google.dataflow.v1beta3.LaunchFlexTemplateParameter
 */
export type LaunchFlexTemplateParameter = Message<"google.dataflow.v1beta3.LaunchFlexTemplateParameter"> & {
  /**
   * Required. The job name to use for the created job. For update job request,
   * job name should be same as the existing running job.
   *
   * @generated from field: string job_name = 1;
   */
  jobName: string;

  /**
   * Launch Mechanism.
   *
   * @generated from oneof google.dataflow.v1beta3.LaunchFlexTemplateParameter.template
   */
  template: {
    /**
     * Spec about the container image to launch.
     *
     * @generated from field: google.dataflow.v1beta3.ContainerSpec container_spec = 4;
     */
    value: ContainerSpec;
    case: "containerSpec";
  } | {
    /**
     * Cloud Storage path to a file with json serialized ContainerSpec as
     * content.
     *
     * @generated from field: string container_spec_gcs_path = 5;
     */
    value: string;
    case: "containerSpecGcsPath";
  } | { case: undefined; value?: undefined };

  /**
   * The parameters for FlexTemplate.
   * Ex. {"num_workers":"5"}
   *
   * @generated from field: map<string, string> parameters = 2;
   */
  parameters: { [key: string]: string };

  /**
   * Launch options for this flex template job. This is a common set of options
   * across languages and templates. This should not be used to pass job
   * parameters.
   *
   * @generated from field: map<string, string> launch_options = 6;
   */
  launchOptions: { [key: string]: string };

  /**
   * The runtime environment for the FlexTemplate job
   *
   * @generated from field: google.dataflow.v1beta3.FlexTemplateRuntimeEnvironment environment = 7;
   */
  environment?: FlexTemplateRuntimeEnvironment;

  /**
   * Set this to true if you are sending a request to update a running
   * streaming job. When set, the job name should be the same as the
   * running job.
   *
   * @generated from field: bool update = 8;
   */
  update: boolean;

  /**
   * Use this to pass transform_name_mappings for streaming update jobs.
   * Ex:{"oldTransformName":"newTransformName",...}'
   *
   * @generated from field: map<string, string> transform_name_mappings = 9;
   */
  transformNameMappings: { [key: string]: string };
};

/**
 * Describes the message google.dataflow.v1beta3.LaunchFlexTemplateParameter.
 * Use `create(LaunchFlexTemplateParameterSchema)` to create a new message.
 */
export const LaunchFlexTemplateParameterSchema: GenMessage<LaunchFlexTemplateParameter> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 2);

/**
 * The environment values to be set at runtime for flex template.
 *
 * @generated from message google.dataflow.v1beta3.FlexTemplateRuntimeEnvironment
 */
export type FlexTemplateRuntimeEnvironment = Message<"google.dataflow.v1beta3.FlexTemplateRuntimeEnvironment"> & {
  /**
   * The initial number of Google Compute Engine instances for the job.
   *
   * @generated from field: int32 num_workers = 1;
   */
  numWorkers: number;

  /**
   * The maximum number of Google Compute Engine instances to be made
   * available to your pipeline during execution, from 1 to 1000.
   *
   * @generated from field: int32 max_workers = 2;
   */
  maxWorkers: number;

  /**
   * The Compute Engine [availability
   * zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones)
   * for launching worker instances to run your pipeline.
   * In the future, worker_zone will take precedence.
   *
   * @generated from field: string zone = 3;
   */
  zone: string;

  /**
   * The email address of the service account to run the job as.
   *
   * @generated from field: string service_account_email = 4;
   */
  serviceAccountEmail: string;

  /**
   * The Cloud Storage path to use for temporary files.
   * Must be a valid Cloud Storage URL, beginning with `gs://`.
   *
   * @generated from field: string temp_location = 5;
   */
  tempLocation: string;

  /**
   * The machine type to use for the job. Defaults to the value from the
   * template if not specified.
   *
   * @generated from field: string machine_type = 6;
   */
  machineType: string;

  /**
   * Additional experiment flags for the job.
   *
   * @generated from field: repeated string additional_experiments = 7;
   */
  additionalExperiments: string[];

  /**
   * Network to which VMs will be assigned.  If empty or unspecified,
   * the service will use the network "default".
   *
   * @generated from field: string network = 8;
   */
  network: string;

  /**
   * Subnetwork to which VMs will be assigned, if desired. You can specify a
   * subnetwork using either a complete URL or an abbreviated path. Expected to
   * be of the form
   * "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK"
   * or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in
   * a Shared VPC network, you must use the complete URL.
   *
   * @generated from field: string subnetwork = 9;
   */
  subnetwork: string;

  /**
   * Additional user labels to be specified for the job.
   * Keys and values must follow the restrictions specified in the [labeling
   * restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)
   * page.
   * An object containing a list of "key": value pairs.
   * Example: { "name": "wrench", "mass": "1kg", "count": "3" }.
   *
   * @generated from field: map<string, string> additional_user_labels = 10;
   */
  additionalUserLabels: { [key: string]: string };

  /**
   * Name for the Cloud KMS key for the job.
   * Key format is:
   * projects/<project>/locations/<location>/keyRings/<keyring>/cryptoKeys/<key>
   *
   * @generated from field: string kms_key_name = 11;
   */
  kmsKeyName: string;

  /**
   * Configuration for VM IPs.
   *
   * @generated from field: google.dataflow.v1beta3.WorkerIPAddressConfiguration ip_configuration = 12;
   */
  ipConfiguration: WorkerIPAddressConfiguration;

  /**
   * The Compute Engine region
   * (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in
   * which worker processing should occur, e.g. "us-west1". Mutually exclusive
   * with worker_zone. If neither worker_region nor worker_zone is specified,
   * default to the control plane's region.
   *
   * @generated from field: string worker_region = 13;
   */
  workerRegion: string;

  /**
   * The Compute Engine zone
   * (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in
   * which worker processing should occur, e.g. "us-west1-a". Mutually exclusive
   * with worker_region. If neither worker_region nor worker_zone is specified,
   * a zone in the control plane's region is chosen based on available capacity.
   * If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
   *
   * @generated from field: string worker_zone = 14;
   */
  workerZone: string;

  /**
   * Whether to enable Streaming Engine for the job.
   *
   * @generated from field: bool enable_streaming_engine = 15;
   */
  enableStreamingEngine: boolean;

  /**
   * Set FlexRS goal for the job.
   * https://cloud.google.com/dataflow/docs/guides/flexrs
   *
   * @generated from field: google.dataflow.v1beta3.FlexResourceSchedulingGoal flexrs_goal = 16;
   */
  flexrsGoal: FlexResourceSchedulingGoal;

  /**
   * The Cloud Storage path for staging local files.
   * Must be a valid Cloud Storage URL, beginning with `gs://`.
   *
   * @generated from field: string staging_location = 17;
   */
  stagingLocation: string;

  /**
   * Docker registry location of container image to use for the 'worker harness.
   * Default is the container for the version of the SDK. Note this field is
   * only valid for portable pipelines.
   *
   * @generated from field: string sdk_container_image = 18;
   */
  sdkContainerImage: string;

  /**
   * Worker disk size, in gigabytes.
   *
   * @generated from field: int32 disk_size_gb = 20;
   */
  diskSizeGb: number;

  /**
   * The algorithm to use for autoscaling
   *
   * @generated from field: google.dataflow.v1beta3.AutoscalingAlgorithm autoscaling_algorithm = 21;
   */
  autoscalingAlgorithm: AutoscalingAlgorithm;

  /**
   * If true, save a heap dump before killing a thread or process which is GC
   * thrashing or out of memory. The location of the heap file will either be
   * echoed back to the user, or the user will be given the opportunity to
   * download the heap file.
   *
   * @generated from field: bool dump_heap_on_oom = 22;
   */
  dumpHeapOnOom: boolean;

  /**
   * Cloud Storage bucket (directory) to upload heap dumps to the given
   * location. Enabling this implies that heap dumps should be generated on OOM
   * (dump_heap_on_oom is set to true).
   *
   * @generated from field: string save_heap_dumps_to_gcs_path = 23;
   */
  saveHeapDumpsToGcsPath: string;

  /**
   * The machine type to use for launching the job. The default is
   * n1-standard-1.
   *
   * @generated from field: string launcher_machine_type = 24;
   */
  launcherMachineType: string;
};

/**
 * Describes the message google.dataflow.v1beta3.FlexTemplateRuntimeEnvironment.
 * Use `create(FlexTemplateRuntimeEnvironmentSchema)` to create a new message.
 */
export const FlexTemplateRuntimeEnvironmentSchema: GenMessage<FlexTemplateRuntimeEnvironment> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 3);

/**
 * A request to launch a Cloud Dataflow job from a FlexTemplate.
 *
 * @generated from message google.dataflow.v1beta3.LaunchFlexTemplateRequest
 */
export type LaunchFlexTemplateRequest = Message<"google.dataflow.v1beta3.LaunchFlexTemplateRequest"> & {
  /**
   * Required. The ID of the Cloud Platform project that the job belongs to.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. Parameter to launch a job form Flex Template.
   *
   * @generated from field: google.dataflow.v1beta3.LaunchFlexTemplateParameter launch_parameter = 2;
   */
  launchParameter?: LaunchFlexTemplateParameter;

  /**
   * Required. The [regional endpoint]
   * (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
   * which to direct the request. E.g., us-central1, us-west1.
   *
   * @generated from field: string location = 3;
   */
  location: string;

  /**
   * If true, the request is validated but not actually executed.
   * Defaults to false.
   *
   * @generated from field: bool validate_only = 4;
   */
  validateOnly: boolean;
};

/**
 * Describes the message google.dataflow.v1beta3.LaunchFlexTemplateRequest.
 * Use `create(LaunchFlexTemplateRequestSchema)` to create a new message.
 */
export const LaunchFlexTemplateRequestSchema: GenMessage<LaunchFlexTemplateRequest> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 4);

/**
 * The environment values to set at runtime.
 *
 * @generated from message google.dataflow.v1beta3.RuntimeEnvironment
 */
export type RuntimeEnvironment = Message<"google.dataflow.v1beta3.RuntimeEnvironment"> & {
  /**
   * The initial number of Google Compute Engine instnaces for the job.
   *
   * @generated from field: int32 num_workers = 11;
   */
  numWorkers: number;

  /**
   * The maximum number of Google Compute Engine instances to be made
   * available to your pipeline during execution, from 1 to 1000.
   *
   * @generated from field: int32 max_workers = 1;
   */
  maxWorkers: number;

  /**
   * The Compute Engine [availability
   * zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones)
   * for launching worker instances to run your pipeline.
   * In the future, worker_zone will take precedence.
   *
   * @generated from field: string zone = 2;
   */
  zone: string;

  /**
   * The email address of the service account to run the job as.
   *
   * @generated from field: string service_account_email = 3;
   */
  serviceAccountEmail: string;

  /**
   * The Cloud Storage path to use for temporary files.
   * Must be a valid Cloud Storage URL, beginning with `gs://`.
   *
   * @generated from field: string temp_location = 4;
   */
  tempLocation: string;

  /**
   * Whether to bypass the safety checks for the job's temporary directory.
   * Use with caution.
   *
   * @generated from field: bool bypass_temp_dir_validation = 5;
   */
  bypassTempDirValidation: boolean;

  /**
   * The machine type to use for the job. Defaults to the value from the
   * template if not specified.
   *
   * @generated from field: string machine_type = 6;
   */
  machineType: string;

  /**
   * Additional experiment flags for the job, specified with the
   * `--experiments` option.
   *
   * @generated from field: repeated string additional_experiments = 7;
   */
  additionalExperiments: string[];

  /**
   * Network to which VMs will be assigned.  If empty or unspecified,
   * the service will use the network "default".
   *
   * @generated from field: string network = 8;
   */
  network: string;

  /**
   * Subnetwork to which VMs will be assigned, if desired. You can specify a
   * subnetwork using either a complete URL or an abbreviated path. Expected to
   * be of the form
   * "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK"
   * or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in
   * a Shared VPC network, you must use the complete URL.
   *
   * @generated from field: string subnetwork = 9;
   */
  subnetwork: string;

  /**
   * Additional user labels to be specified for the job.
   * Keys and values should follow the restrictions specified in the [labeling
   * restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)
   * page.
   * An object containing a list of "key": value pairs.
   * Example: { "name": "wrench", "mass": "1kg", "count": "3" }.
   *
   * @generated from field: map<string, string> additional_user_labels = 10;
   */
  additionalUserLabels: { [key: string]: string };

  /**
   * Name for the Cloud KMS key for the job.
   * Key format is:
   * projects/<project>/locations/<location>/keyRings/<keyring>/cryptoKeys/<key>
   *
   * @generated from field: string kms_key_name = 12;
   */
  kmsKeyName: string;

  /**
   * Configuration for VM IPs.
   *
   * @generated from field: google.dataflow.v1beta3.WorkerIPAddressConfiguration ip_configuration = 14;
   */
  ipConfiguration: WorkerIPAddressConfiguration;

  /**
   * The Compute Engine region
   * (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in
   * which worker processing should occur, e.g. "us-west1". Mutually exclusive
   * with worker_zone. If neither worker_region nor worker_zone is specified,
   * default to the control plane's region.
   *
   * @generated from field: string worker_region = 15;
   */
  workerRegion: string;

  /**
   * The Compute Engine zone
   * (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in
   * which worker processing should occur, e.g. "us-west1-a". Mutually exclusive
   * with worker_region. If neither worker_region nor worker_zone is specified,
   * a zone in the control plane's region is chosen based on available capacity.
   * If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
   *
   * @generated from field: string worker_zone = 16;
   */
  workerZone: string;

  /**
   * Whether to enable Streaming Engine for the job.
   *
   * @generated from field: bool enable_streaming_engine = 17;
   */
  enableStreamingEngine: boolean;
};

/**
 * Describes the message google.dataflow.v1beta3.RuntimeEnvironment.
 * Use `create(RuntimeEnvironmentSchema)` to create a new message.
 */
export const RuntimeEnvironmentSchema: GenMessage<RuntimeEnvironment> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 5);

/**
 * Metadata for a specific parameter.
 *
 * @generated from message google.dataflow.v1beta3.ParameterMetadata
 */
export type ParameterMetadata = Message<"google.dataflow.v1beta3.ParameterMetadata"> & {
  /**
   * Required. The name of the parameter.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The label to display for the parameter.
   *
   * @generated from field: string label = 2;
   */
  label: string;

  /**
   * Required. The help text to display for the parameter.
   *
   * @generated from field: string help_text = 3;
   */
  helpText: string;

  /**
   * Optional. Whether the parameter is optional. Defaults to false.
   *
   * @generated from field: bool is_optional = 4;
   */
  isOptional: boolean;

  /**
   * Optional. Regexes that the parameter must match.
   *
   * @generated from field: repeated string regexes = 5;
   */
  regexes: string[];

  /**
   * Optional. The type of the parameter.
   * Used for selecting input picker.
   *
   * @generated from field: google.dataflow.v1beta3.ParameterType param_type = 6;
   */
  paramType: ParameterType;

  /**
   * Optional. Additional metadata for describing this parameter.
   *
   * @generated from field: map<string, string> custom_metadata = 7;
   */
  customMetadata: { [key: string]: string };
};

/**
 * Describes the message google.dataflow.v1beta3.ParameterMetadata.
 * Use `create(ParameterMetadataSchema)` to create a new message.
 */
export const ParameterMetadataSchema: GenMessage<ParameterMetadata> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 6);

/**
 * Metadata describing a template.
 *
 * @generated from message google.dataflow.v1beta3.TemplateMetadata
 */
export type TemplateMetadata = Message<"google.dataflow.v1beta3.TemplateMetadata"> & {
  /**
   * Required. The name of the template.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional. A description of the template.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * The parameters for the template.
   *
   * @generated from field: repeated google.dataflow.v1beta3.ParameterMetadata parameters = 3;
   */
  parameters: ParameterMetadata[];
};

/**
 * Describes the message google.dataflow.v1beta3.TemplateMetadata.
 * Use `create(TemplateMetadataSchema)` to create a new message.
 */
export const TemplateMetadataSchema: GenMessage<TemplateMetadata> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 7);

/**
 * SDK Information.
 *
 * @generated from message google.dataflow.v1beta3.SDKInfo
 */
export type SDKInfo = Message<"google.dataflow.v1beta3.SDKInfo"> & {
  /**
   * Required. The SDK Language.
   *
   * @generated from field: google.dataflow.v1beta3.SDKInfo.Language language = 1;
   */
  language: SDKInfo_Language;

  /**
   * Optional. The SDK version.
   *
   * @generated from field: string version = 2;
   */
  version: string;
};

/**
 * Describes the message google.dataflow.v1beta3.SDKInfo.
 * Use `create(SDKInfoSchema)` to create a new message.
 */
export const SDKInfoSchema: GenMessage<SDKInfo> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 8);

/**
 * SDK Language.
 *
 * @generated from enum google.dataflow.v1beta3.SDKInfo.Language
 */
export enum SDKInfo_Language {
  /**
   * UNKNOWN Language.
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * Java.
   *
   * @generated from enum value: JAVA = 1;
   */
  JAVA = 1,

  /**
   * Python.
   *
   * @generated from enum value: PYTHON = 2;
   */
  PYTHON = 2,
}

/**
 * Describes the enum google.dataflow.v1beta3.SDKInfo.Language.
 */
export const SDKInfo_LanguageSchema: GenEnum<SDKInfo_Language> = /*@__PURE__*/
  enumDesc(file_google_dataflow_v1beta3_templates, 8, 0);

/**
 * RuntimeMetadata describing a runtime environment.
 *
 * @generated from message google.dataflow.v1beta3.RuntimeMetadata
 */
export type RuntimeMetadata = Message<"google.dataflow.v1beta3.RuntimeMetadata"> & {
  /**
   * SDK Info for the template.
   *
   * @generated from field: google.dataflow.v1beta3.SDKInfo sdk_info = 1;
   */
  sdkInfo?: SDKInfo;

  /**
   * The parameters for the template.
   *
   * @generated from field: repeated google.dataflow.v1beta3.ParameterMetadata parameters = 2;
   */
  parameters: ParameterMetadata[];
};

/**
 * Describes the message google.dataflow.v1beta3.RuntimeMetadata.
 * Use `create(RuntimeMetadataSchema)` to create a new message.
 */
export const RuntimeMetadataSchema: GenMessage<RuntimeMetadata> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 9);

/**
 * A request to create a Cloud Dataflow job from a template.
 *
 * @generated from message google.dataflow.v1beta3.CreateJobFromTemplateRequest
 */
export type CreateJobFromTemplateRequest = Message<"google.dataflow.v1beta3.CreateJobFromTemplateRequest"> & {
  /**
   * Required. The ID of the Cloud Platform project that the job belongs to.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Required. The job name to use for the created job.
   *
   * @generated from field: string job_name = 4;
   */
  jobName: string;

  /**
   * The template from which to create the job.
   *
   * @generated from oneof google.dataflow.v1beta3.CreateJobFromTemplateRequest.template
   */
  template: {
    /**
     * Required. A Cloud Storage path to the template from which to
     * create the job.
     * Must be a valid Cloud Storage URL, beginning with `gs://`.
     *
     * @generated from field: string gcs_path = 2;
     */
    value: string;
    case: "gcsPath";
  } | { case: undefined; value?: undefined };

  /**
   * The runtime parameters to pass to the job.
   *
   * @generated from field: map<string, string> parameters = 3;
   */
  parameters: { [key: string]: string };

  /**
   * The runtime environment for the job.
   *
   * @generated from field: google.dataflow.v1beta3.RuntimeEnvironment environment = 5;
   */
  environment?: RuntimeEnvironment;

  /**
   * The [regional endpoint]
   * (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
   * which to direct the request.
   *
   * @generated from field: string location = 6;
   */
  location: string;
};

/**
 * Describes the message google.dataflow.v1beta3.CreateJobFromTemplateRequest.
 * Use `create(CreateJobFromTemplateRequestSchema)` to create a new message.
 */
export const CreateJobFromTemplateRequestSchema: GenMessage<CreateJobFromTemplateRequest> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 10);

/**
 * A request to retrieve a Cloud Dataflow job template.
 *
 * @generated from message google.dataflow.v1beta3.GetTemplateRequest
 */
export type GetTemplateRequest = Message<"google.dataflow.v1beta3.GetTemplateRequest"> & {
  /**
   * Required. The ID of the Cloud Platform project that the job belongs to.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The template from which to create the job.
   *
   * @generated from oneof google.dataflow.v1beta3.GetTemplateRequest.template
   */
  template: {
    /**
     * Required. A Cloud Storage path to the template from which to
     * create the job.
     * Must be valid Cloud Storage URL, beginning with 'gs://'.
     *
     * @generated from field: string gcs_path = 2;
     */
    value: string;
    case: "gcsPath";
  } | { case: undefined; value?: undefined };

  /**
   * The view to retrieve. Defaults to METADATA_ONLY.
   *
   * @generated from field: google.dataflow.v1beta3.GetTemplateRequest.TemplateView view = 3;
   */
  view: GetTemplateRequest_TemplateView;

  /**
   * The [regional endpoint]
   * (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
   * which to direct the request.
   *
   * @generated from field: string location = 4;
   */
  location: string;
};

/**
 * Describes the message google.dataflow.v1beta3.GetTemplateRequest.
 * Use `create(GetTemplateRequestSchema)` to create a new message.
 */
export const GetTemplateRequestSchema: GenMessage<GetTemplateRequest> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 11);

/**
 * The various views of a template that may be retrieved.
 *
 * @generated from enum google.dataflow.v1beta3.GetTemplateRequest.TemplateView
 */
export enum GetTemplateRequest_TemplateView {
  /**
   * Template view that retrieves only the metadata associated with the
   * template.
   *
   * @generated from enum value: METADATA_ONLY = 0;
   */
  METADATA_ONLY = 0,
}

/**
 * Describes the enum google.dataflow.v1beta3.GetTemplateRequest.TemplateView.
 */
export const GetTemplateRequest_TemplateViewSchema: GenEnum<GetTemplateRequest_TemplateView> = /*@__PURE__*/
  enumDesc(file_google_dataflow_v1beta3_templates, 11, 0);

/**
 * The response to a GetTemplate request.
 *
 * @generated from message google.dataflow.v1beta3.GetTemplateResponse
 */
export type GetTemplateResponse = Message<"google.dataflow.v1beta3.GetTemplateResponse"> & {
  /**
   * The status of the get template request. Any problems with the
   * request will be indicated in the error_details.
   *
   * @generated from field: google.rpc.Status status = 1;
   */
  status?: Status;

  /**
   * The template metadata describing the template name, available
   * parameters, etc.
   *
   * @generated from field: google.dataflow.v1beta3.TemplateMetadata metadata = 2;
   */
  metadata?: TemplateMetadata;

  /**
   * Template Type.
   *
   * @generated from field: google.dataflow.v1beta3.GetTemplateResponse.TemplateType template_type = 3;
   */
  templateType: GetTemplateResponse_TemplateType;

  /**
   * Describes the runtime metadata with SDKInfo and available parameters.
   *
   * @generated from field: google.dataflow.v1beta3.RuntimeMetadata runtime_metadata = 4;
   */
  runtimeMetadata?: RuntimeMetadata;
};

/**
 * Describes the message google.dataflow.v1beta3.GetTemplateResponse.
 * Use `create(GetTemplateResponseSchema)` to create a new message.
 */
export const GetTemplateResponseSchema: GenMessage<GetTemplateResponse> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 12);

/**
 * Template Type.
 *
 * @generated from enum google.dataflow.v1beta3.GetTemplateResponse.TemplateType
 */
export enum GetTemplateResponse_TemplateType {
  /**
   * Unknown Template Type.
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * Legacy Template.
   *
   * @generated from enum value: LEGACY = 1;
   */
  LEGACY = 1,

  /**
   * Flex Template.
   *
   * @generated from enum value: FLEX = 2;
   */
  FLEX = 2,
}

/**
 * Describes the enum google.dataflow.v1beta3.GetTemplateResponse.TemplateType.
 */
export const GetTemplateResponse_TemplateTypeSchema: GenEnum<GetTemplateResponse_TemplateType> = /*@__PURE__*/
  enumDesc(file_google_dataflow_v1beta3_templates, 12, 0);

/**
 * Parameters to provide to the template being launched.
 *
 * @generated from message google.dataflow.v1beta3.LaunchTemplateParameters
 */
export type LaunchTemplateParameters = Message<"google.dataflow.v1beta3.LaunchTemplateParameters"> & {
  /**
   * Required. The job name to use for the created job.
   *
   * @generated from field: string job_name = 1;
   */
  jobName: string;

  /**
   * The runtime parameters to pass to the job.
   *
   * @generated from field: map<string, string> parameters = 2;
   */
  parameters: { [key: string]: string };

  /**
   * The runtime environment for the job.
   *
   * @generated from field: google.dataflow.v1beta3.RuntimeEnvironment environment = 3;
   */
  environment?: RuntimeEnvironment;

  /**
   * If set, replace the existing pipeline with the name specified by jobName
   * with this pipeline, preserving state.
   *
   * @generated from field: bool update = 4;
   */
  update: boolean;

  /**
   * Only applicable when updating a pipeline. Map of transform name prefixes of
   * the job to be replaced to the corresponding name prefixes of the new job.
   *
   * @generated from field: map<string, string> transform_name_mapping = 5;
   */
  transformNameMapping: { [key: string]: string };
};

/**
 * Describes the message google.dataflow.v1beta3.LaunchTemplateParameters.
 * Use `create(LaunchTemplateParametersSchema)` to create a new message.
 */
export const LaunchTemplateParametersSchema: GenMessage<LaunchTemplateParameters> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 13);

/**
 * A request to launch a template.
 *
 * @generated from message google.dataflow.v1beta3.LaunchTemplateRequest
 */
export type LaunchTemplateRequest = Message<"google.dataflow.v1beta3.LaunchTemplateRequest"> & {
  /**
   * Required. The ID of the Cloud Platform project that the job belongs to.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * If true, the request is validated but not actually executed.
   * Defaults to false.
   *
   * @generated from field: bool validate_only = 2;
   */
  validateOnly: boolean;

  /**
   * The template from which to create the job.
   *
   * @generated from oneof google.dataflow.v1beta3.LaunchTemplateRequest.template
   */
  template: {
    /**
     * A Cloud Storage path to the template from which to create
     * the job.
     * Must be valid Cloud Storage URL, beginning with 'gs://'.
     *
     * @generated from field: string gcs_path = 3;
     */
    value: string;
    case: "gcsPath";
  } | {
    /**
     * Params for launching a dynamic template.
     *
     * @generated from field: google.dataflow.v1beta3.DynamicTemplateLaunchParams dynamic_template = 6;
     */
    value: DynamicTemplateLaunchParams;
    case: "dynamicTemplate";
  } | { case: undefined; value?: undefined };

  /**
   * The parameters of the template to launch. This should be part of the
   * body of the POST request.
   *
   * @generated from field: google.dataflow.v1beta3.LaunchTemplateParameters launch_parameters = 4;
   */
  launchParameters?: LaunchTemplateParameters;

  /**
   * The [regional endpoint]
   * (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
   * which to direct the request.
   *
   * @generated from field: string location = 5;
   */
  location: string;
};

/**
 * Describes the message google.dataflow.v1beta3.LaunchTemplateRequest.
 * Use `create(LaunchTemplateRequestSchema)` to create a new message.
 */
export const LaunchTemplateRequestSchema: GenMessage<LaunchTemplateRequest> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 14);

/**
 * Response to the request to launch a template.
 *
 * @generated from message google.dataflow.v1beta3.LaunchTemplateResponse
 */
export type LaunchTemplateResponse = Message<"google.dataflow.v1beta3.LaunchTemplateResponse"> & {
  /**
   * The job that was launched, if the request was not a dry run and
   * the job was successfully launched.
   *
   * @generated from field: google.dataflow.v1beta3.Job job = 1;
   */
  job?: Job;
};

/**
 * Describes the message google.dataflow.v1beta3.LaunchTemplateResponse.
 * Use `create(LaunchTemplateResponseSchema)` to create a new message.
 */
export const LaunchTemplateResponseSchema: GenMessage<LaunchTemplateResponse> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 15);

/**
 * Used in the error_details field of a google.rpc.Status message, this
 * indicates problems with the template parameter.
 *
 * @generated from message google.dataflow.v1beta3.InvalidTemplateParameters
 */
export type InvalidTemplateParameters = Message<"google.dataflow.v1beta3.InvalidTemplateParameters"> & {
  /**
   * Describes all parameter violations in a template request.
   *
   * @generated from field: repeated google.dataflow.v1beta3.InvalidTemplateParameters.ParameterViolation parameter_violations = 1;
   */
  parameterViolations: InvalidTemplateParameters_ParameterViolation[];
};

/**
 * Describes the message google.dataflow.v1beta3.InvalidTemplateParameters.
 * Use `create(InvalidTemplateParametersSchema)` to create a new message.
 */
export const InvalidTemplateParametersSchema: GenMessage<InvalidTemplateParameters> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 16);

/**
 * A specific template-parameter violation.
 *
 * @generated from message google.dataflow.v1beta3.InvalidTemplateParameters.ParameterViolation
 */
export type InvalidTemplateParameters_ParameterViolation = Message<"google.dataflow.v1beta3.InvalidTemplateParameters.ParameterViolation"> & {
  /**
   * The parameter that failed to validate.
   *
   * @generated from field: string parameter = 1;
   */
  parameter: string;

  /**
   * A description of why the parameter failed to validate.
   *
   * @generated from field: string description = 2;
   */
  description: string;
};

/**
 * Describes the message google.dataflow.v1beta3.InvalidTemplateParameters.ParameterViolation.
 * Use `create(InvalidTemplateParameters_ParameterViolationSchema)` to create a new message.
 */
export const InvalidTemplateParameters_ParameterViolationSchema: GenMessage<InvalidTemplateParameters_ParameterViolation> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 16, 0);

/**
 * Params which should be passed when launching a dynamic template.
 *
 * @generated from message google.dataflow.v1beta3.DynamicTemplateLaunchParams
 */
export type DynamicTemplateLaunchParams = Message<"google.dataflow.v1beta3.DynamicTemplateLaunchParams"> & {
  /**
   * Path to dynamic template spec file on Cloud Storage.
   * The file must be a Json serialized DynamicTemplateFieSpec object.
   *
   * @generated from field: string gcs_path = 1;
   */
  gcsPath: string;

  /**
   * Cloud Storage path for staging dependencies.
   * Must be a valid Cloud Storage URL, beginning with `gs://`.
   *
   * @generated from field: string staging_location = 2;
   */
  stagingLocation: string;
};

/**
 * Describes the message google.dataflow.v1beta3.DynamicTemplateLaunchParams.
 * Use `create(DynamicTemplateLaunchParamsSchema)` to create a new message.
 */
export const DynamicTemplateLaunchParamsSchema: GenMessage<DynamicTemplateLaunchParams> = /*@__PURE__*/
  messageDesc(file_google_dataflow_v1beta3_templates, 17);

/**
 * ParameterType specifies what kind of input we need for this parameter.
 *
 * @generated from enum google.dataflow.v1beta3.ParameterType
 */
export enum ParameterType {
  /**
   * Default input type.
   *
   * @generated from enum value: DEFAULT = 0;
   */
  DEFAULT = 0,

  /**
   * The parameter specifies generic text input.
   *
   * @generated from enum value: TEXT = 1;
   */
  TEXT = 1,

  /**
   * The parameter specifies a Cloud Storage Bucket to read from.
   *
   * @generated from enum value: GCS_READ_BUCKET = 2;
   */
  GCS_READ_BUCKET = 2,

  /**
   * The parameter specifies a Cloud Storage Bucket to write to.
   *
   * @generated from enum value: GCS_WRITE_BUCKET = 3;
   */
  GCS_WRITE_BUCKET = 3,

  /**
   * The parameter specifies a Cloud Storage file path to read from.
   *
   * @generated from enum value: GCS_READ_FILE = 4;
   */
  GCS_READ_FILE = 4,

  /**
   * The parameter specifies a Cloud Storage file path to write to.
   *
   * @generated from enum value: GCS_WRITE_FILE = 5;
   */
  GCS_WRITE_FILE = 5,

  /**
   * The parameter specifies a Cloud Storage folder path to read from.
   *
   * @generated from enum value: GCS_READ_FOLDER = 6;
   */
  GCS_READ_FOLDER = 6,

  /**
   * The parameter specifies a Cloud Storage folder to write to.
   *
   * @generated from enum value: GCS_WRITE_FOLDER = 7;
   */
  GCS_WRITE_FOLDER = 7,

  /**
   * The parameter specifies a Pub/Sub Topic.
   *
   * @generated from enum value: PUBSUB_TOPIC = 8;
   */
  PUBSUB_TOPIC = 8,

  /**
   * The parameter specifies a Pub/Sub Subscription.
   *
   * @generated from enum value: PUBSUB_SUBSCRIPTION = 9;
   */
  PUBSUB_SUBSCRIPTION = 9,
}

/**
 * Describes the enum google.dataflow.v1beta3.ParameterType.
 */
export const ParameterTypeSchema: GenEnum<ParameterType> = /*@__PURE__*/
  enumDesc(file_google_dataflow_v1beta3_templates, 0);

/**
 * Provides a method to create Cloud Dataflow jobs from templates.
 *
 * @generated from service google.dataflow.v1beta3.TemplatesService
 */
export const TemplatesService: GenService<{
  /**
   * Creates a Cloud Dataflow job from a template.
   *
   * @generated from rpc google.dataflow.v1beta3.TemplatesService.CreateJobFromTemplate
   */
  createJobFromTemplate: {
    methodKind: "unary";
    input: typeof CreateJobFromTemplateRequestSchema;
    output: typeof JobSchema;
  },
  /**
   * Launch a template.
   *
   * @generated from rpc google.dataflow.v1beta3.TemplatesService.LaunchTemplate
   */
  launchTemplate: {
    methodKind: "unary";
    input: typeof LaunchTemplateRequestSchema;
    output: typeof LaunchTemplateResponseSchema;
  },
  /**
   * Get the template associated with a template.
   *
   * @generated from rpc google.dataflow.v1beta3.TemplatesService.GetTemplate
   */
  getTemplate: {
    methodKind: "unary";
    input: typeof GetTemplateRequestSchema;
    output: typeof GetTemplateResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_dataflow_v1beta3_templates, 0);

/**
 * Provides a service for Flex templates. This feature is not ready yet.
 *
 * @generated from service google.dataflow.v1beta3.FlexTemplatesService
 */
export const FlexTemplatesService: GenService<{
  /**
   * Launch a job with a FlexTemplate.
   *
   * @generated from rpc google.dataflow.v1beta3.FlexTemplatesService.LaunchFlexTemplate
   */
  launchFlexTemplate: {
    methodKind: "unary";
    input: typeof LaunchFlexTemplateRequestSchema;
    output: typeof LaunchFlexTemplateResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_dataflow_v1beta3_templates, 1);

