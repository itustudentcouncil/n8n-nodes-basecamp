// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/shopping/merchant/accounts/v1beta/termsofserviceagreementstate.proto (package google.shopping.merchant.accounts.v1beta, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { TermsOfServiceKind } from "./termsofservicekind_pb";
import { file_google_shopping_merchant_accounts_v1beta_termsofservicekind } from "./termsofservicekind_pb";
import type { Date } from "../../../../type/date_pb";
import { file_google_type_date } from "../../../../type/date_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/shopping/merchant/accounts/v1beta/termsofserviceagreementstate.proto.
 */
export const file_google_shopping_merchant_accounts_v1beta_termsofserviceagreementstate: GenFile = /*@__PURE__*/
  fileDesc("Cktnb29nbGUvc2hvcHBpbmcvbWVyY2hhbnQvYWNjb3VudHMvdjFiZXRhL3Rlcm1zb2ZzZXJ2aWNlYWdyZWVtZW50c3RhdGUucHJvdG8SKGdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5hY2NvdW50cy52MWJldGEijwQKHFRlcm1zT2ZTZXJ2aWNlQWdyZWVtZW50U3RhdGUSEQoEbmFtZRgBIAEoCUID4EEIEhMKC3JlZ2lvbl9jb2RlGAIgASgJElsKFXRlcm1zX29mX3NlcnZpY2Vfa2luZBgDIAEoDjI8Lmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5hY2NvdW50cy52MWJldGEuVGVybXNPZlNlcnZpY2VLaW5kEkkKCGFjY2VwdGVkGAQgASgLMjIuZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmFjY291bnRzLnYxYmV0YS5BY2NlcHRlZEgAiAEBEkkKCHJlcXVpcmVkGAUgASgLMjIuZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmFjY291bnRzLnYxYmV0YS5SZXF1aXJlZEgBiAEBOrkB6kG1AQo3bWVyY2hhbnRhcGkuZ29vZ2xlYXBpcy5jb20vVGVybXNPZlNlcnZpY2VBZ3JlZW1lbnRTdGF0ZRI9YWNjb3VudHMve2FjY291bnR9L3Rlcm1zT2ZTZXJ2aWNlQWdyZWVtZW50U3RhdGVzL3tpZGVudGlmaWVyfSoddGVybXNPZlNlcnZpY2VBZ3JlZW1lbnRTdGF0ZXMyHHRlcm1zT2ZTZXJ2aWNlQWdyZWVtZW50U3RhdGVCCwoJX2FjY2VwdGVkQgsKCV9yZXF1aXJlZCLPAQoIQWNjZXB0ZWQSSAoQdGVybXNfb2Zfc2VydmljZRgBIAEoCUIu+kErCiltZXJjaGFudGFwaS5nb29nbGVhcGlzLmNvbS9UZXJtc09mU2VydmljZRI8CgthY2NlcHRlZF9ieRgCIAEoCUIn+kEkCiJtZXJjaGFudGFwaS5nb29nbGVhcGlzLmNvbS9BY2NvdW50EisKC3ZhbGlkX3VudGlsGAMgASgLMhEuZ29vZ2xlLnR5cGUuRGF0ZUgAiAEBQg4KDF92YWxpZF91bnRpbCJqCghSZXF1aXJlZBJIChB0ZXJtc19vZl9zZXJ2aWNlGAEgASgJQi76QSsKKW1lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL1Rlcm1zT2ZTZXJ2aWNlEhQKDHRvc19maWxlX3VyaRgCIAEoCSJ3CiZHZXRUZXJtc09mU2VydmljZUFncmVlbWVudFN0YXRlUmVxdWVzdBJNCgRuYW1lGAEgASgJQj/gQQL6QTkKN21lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL1Rlcm1zT2ZTZXJ2aWNlQWdyZWVtZW50U3RhdGUijAEKOVJldHJpZXZlRm9yQXBwbGljYXRpb25UZXJtc09mU2VydmljZUFncmVlbWVudFN0YXRlUmVxdWVzdBJPCgZwYXJlbnQYASABKAlCP+BBAvpBORI3bWVyY2hhbnRhcGkuZ29vZ2xlYXBpcy5jb20vVGVybXNPZlNlcnZpY2VBZ3JlZW1lbnRTdGF0ZTLPBQojVGVybXNPZlNlcnZpY2VBZ3JlZW1lbnRTdGF0ZVNlcnZpY2USjgIKH0dldFRlcm1zT2ZTZXJ2aWNlQWdyZWVtZW50U3RhdGUSUC5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuYWNjb3VudHMudjFiZXRhLkdldFRlcm1zT2ZTZXJ2aWNlQWdyZWVtZW50U3RhdGVSZXF1ZXN0GkYuZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmFjY291bnRzLnYxYmV0YS5UZXJtc09mU2VydmljZUFncmVlbWVudFN0YXRlIlHaQQRuYW1lgtPkkwJEEkIvYWNjb3VudHMvdjFiZXRhL3tuYW1lPWFjY291bnRzLyovdGVybXNPZlNlcnZpY2VBZ3JlZW1lbnRTdGF0ZXMvKn0SzQIKMlJldHJpZXZlRm9yQXBwbGljYXRpb25UZXJtc09mU2VydmljZUFncmVlbWVudFN0YXRlEmMuZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmFjY291bnRzLnYxYmV0YS5SZXRyaWV2ZUZvckFwcGxpY2F0aW9uVGVybXNPZlNlcnZpY2VBZ3JlZW1lbnRTdGF0ZVJlcXVlc3QaRi5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuYWNjb3VudHMudjFiZXRhLlRlcm1zT2ZTZXJ2aWNlQWdyZWVtZW50U3RhdGUiatpBBnBhcmVudILT5JMCWxJZL2FjY291bnRzL3YxYmV0YS97cGFyZW50PWFjY291bnRzLyp9L3Rlcm1zT2ZTZXJ2aWNlQWdyZWVtZW50U3RhdGVzOnJldHJpZXZlRm9yQXBwbGljYXRpb24aR8pBGm1lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29t0kEnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jb250ZW50QqMBCixjb20uZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmFjY291bnRzLnYxYmV0YUIhVGVybXNPZlNlcnZpY2VBZ3JlZW1lbnRTdGF0ZVByb3RvUAFaTmNsb3VkLmdvb2dsZS5jb20vZ28vc2hvcHBpbmcvbWVyY2hhbnQvYWNjb3VudHMvYXBpdjFiZXRhL2FjY291bnRzcGI7YWNjb3VudHNwYmIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_shopping_merchant_accounts_v1beta_termsofservicekind, file_google_type_date]);

/**
 * This resource represents the agreement state for a given account and terms of
 * service kind.
 * The state is as follows:
 *
 * * If the merchant has accepted a terms of service:
 * [accepted](TermsOfServiceAggrementState.accepted) will be populated,
 * otherwise it will be empty
 * * If the merchant must sign a terms of service:
 * [required](TermsOfServiceAggrementState.required) will be populated,
 * otherwise it will be empty.
 *
 * Note that both [required](TermsOfServiceAggrementState.required) and
 * [accepted](TermsOfServiceAggrementState.accepted) can be present. In this
 * case the `accepted` terms of services will have an expiration date set in the
 * [valid_until](Accepted.valid_until) field. The `required` terms of services
 * need to be accepted before `valid_until` in order for the account to continue
 * having a valid agreement. When accepting new terms of services we expect 3Ps
 * to display the text associated with the given terms of service agreement (the
 * url to the file containing the text is added in the Required message below as
 * [tos_file_uri](Accepted.tos_file_uri). The actual acceptance of the terms of
 * service is done by calling accept on the [TermsOfService](TermsOfService)
 * resource.
 *
 * @generated from message google.shopping.merchant.accounts.v1beta.TermsOfServiceAgreementState
 */
export type TermsOfServiceAgreementState = Message<"google.shopping.merchant.accounts.v1beta.TermsOfServiceAgreementState"> & {
  /**
   * Identifier. The resource name of the terms of service version.
   * Format: `accounts/{account}/termsOfServiceAgreementState/{identifier}`
   * The identifier format is: `{TermsOfServiceKind}-{country}`
   * For example, an identifier could be: `MERCHANT_CENTER-US`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Region code as defined by https://cldr.unicode.org/. This is the
   * country the current state applies to.
   *
   * @generated from field: string region_code = 2;
   */
  regionCode: string;

  /**
   * Terms of Service kind associated with the particular version.
   *
   * @generated from field: google.shopping.merchant.accounts.v1beta.TermsOfServiceKind terms_of_service_kind = 3;
   */
  termsOfServiceKind: TermsOfServiceKind;

  /**
   * The accepted terms of service of this kind and for the associated
   * region_code
   *
   * @generated from field: optional google.shopping.merchant.accounts.v1beta.Accepted accepted = 4;
   */
  accepted?: Accepted;

  /**
   * The required terms of service
   *
   * @generated from field: optional google.shopping.merchant.accounts.v1beta.Required required = 5;
   */
  required?: Required;
};

/**
 * Describes the message google.shopping.merchant.accounts.v1beta.TermsOfServiceAgreementState.
 * Use `create(TermsOfServiceAgreementStateSchema)` to create a new message.
 */
export const TermsOfServiceAgreementStateSchema: GenMessage<TermsOfServiceAgreementState> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_accounts_v1beta_termsofserviceagreementstate, 0);

/**
 * Describes the accepted terms of service.
 *
 * @generated from message google.shopping.merchant.accounts.v1beta.Accepted
 */
export type Accepted = Message<"google.shopping.merchant.accounts.v1beta.Accepted"> & {
  /**
   * The accepted
   * [termsOfService](google.shopping.merchant.accounts.v1main.TermsOfService).
   *
   * @generated from field: string terms_of_service = 1;
   */
  termsOfService: string;

  /**
   * The account where the acceptance was recorded. This can be the account
   * itself or, in the case of subaccounts, the MCA account.
   *
   * @generated from field: string accepted_by = 2;
   */
  acceptedBy: string;

  /**
   * When set, it states that the accepted
   * [TermsOfService](google.shopping.merchant.accounts.v1main.TermsOfService)
   * is only valid until the end of this date (in UTC). A new one must be
   * accepted before then. The information of the required
   * [TermsOfService](google.shopping.merchant.accounts.v1main.TermsOfService)
   * is found in the [Required](Required) message.
   *
   * @generated from field: optional google.type.Date valid_until = 3;
   */
  validUntil?: Date;
};

/**
 * Describes the message google.shopping.merchant.accounts.v1beta.Accepted.
 * Use `create(AcceptedSchema)` to create a new message.
 */
export const AcceptedSchema: GenMessage<Accepted> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_accounts_v1beta_termsofserviceagreementstate, 1);

/**
 * Describes the terms of service which are required to be accepted.
 *
 * @generated from message google.shopping.merchant.accounts.v1beta.Required
 */
export type Required = Message<"google.shopping.merchant.accounts.v1beta.Required"> & {
  /**
   * The
   * [termsOfService](google.shopping.merchant.accounts.v1main.TermsOfService)
   * that need to be accepted.
   *
   * @generated from field: string terms_of_service = 1;
   */
  termsOfService: string;

  /**
   * Full URL to the terms of service file. This field is the same as
   * [TermsOfService.file_uri](TermsOfService.file_uri), it is added
   * here for convenience only.
   *
   * @generated from field: string tos_file_uri = 2;
   */
  tosFileUri: string;
};

/**
 * Describes the message google.shopping.merchant.accounts.v1beta.Required.
 * Use `create(RequiredSchema)` to create a new message.
 */
export const RequiredSchema: GenMessage<Required> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_accounts_v1beta_termsofserviceagreementstate, 2);

/**
 * Request message for the `GetTermsOfServiceAgreementState` method.
 *
 * @generated from message google.shopping.merchant.accounts.v1beta.GetTermsOfServiceAgreementStateRequest
 */
export type GetTermsOfServiceAgreementStateRequest = Message<"google.shopping.merchant.accounts.v1beta.GetTermsOfServiceAgreementStateRequest"> & {
  /**
   * Required. The resource name of the terms of service version.
   * Format: `accounts/{account}/termsOfServiceAgreementState/{identifier}`
   * The identifier format is: `{TermsOfServiceKind}-{country}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.shopping.merchant.accounts.v1beta.GetTermsOfServiceAgreementStateRequest.
 * Use `create(GetTermsOfServiceAgreementStateRequestSchema)` to create a new message.
 */
export const GetTermsOfServiceAgreementStateRequestSchema: GenMessage<GetTermsOfServiceAgreementStateRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_accounts_v1beta_termsofserviceagreementstate, 3);

/**
 * Request message for the `RetrieveForApplicationTermsOfServiceAgreementState`
 * method.
 *
 * @generated from message google.shopping.merchant.accounts.v1beta.RetrieveForApplicationTermsOfServiceAgreementStateRequest
 */
export type RetrieveForApplicationTermsOfServiceAgreementStateRequest = Message<"google.shopping.merchant.accounts.v1beta.RetrieveForApplicationTermsOfServiceAgreementStateRequest"> & {
  /**
   * Required. The account for which to get a TermsOfServiceAgreementState
   * Format: `accounts/{account}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;
};

/**
 * Describes the message google.shopping.merchant.accounts.v1beta.RetrieveForApplicationTermsOfServiceAgreementStateRequest.
 * Use `create(RetrieveForApplicationTermsOfServiceAgreementStateRequestSchema)` to create a new message.
 */
export const RetrieveForApplicationTermsOfServiceAgreementStateRequestSchema: GenMessage<RetrieveForApplicationTermsOfServiceAgreementStateRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_accounts_v1beta_termsofserviceagreementstate, 4);

/**
 * Service to support `TermsOfServiceAgreementState` API.
 *
 * @generated from service google.shopping.merchant.accounts.v1beta.TermsOfServiceAgreementStateService
 */
export const TermsOfServiceAgreementStateService: GenService<{
  /**
   * Returns the state of a terms of service agreement.
   *
   * @generated from rpc google.shopping.merchant.accounts.v1beta.TermsOfServiceAgreementStateService.GetTermsOfServiceAgreementState
   */
  getTermsOfServiceAgreementState: {
    methodKind: "unary";
    input: typeof GetTermsOfServiceAgreementStateRequestSchema;
    output: typeof TermsOfServiceAgreementStateSchema;
  },
  /**
   * Retrieves the state of the agreement for the application terms of service.
   *
   * @generated from rpc google.shopping.merchant.accounts.v1beta.TermsOfServiceAgreementStateService.RetrieveForApplicationTermsOfServiceAgreementState
   */
  retrieveForApplicationTermsOfServiceAgreementState: {
    methodKind: "unary";
    input: typeof RetrieveForApplicationTermsOfServiceAgreementStateRequestSchema;
    output: typeof TermsOfServiceAgreementStateSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_shopping_merchant_accounts_v1beta_termsofserviceagreementstate, 0);

