// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/shopping/merchant/accounts/v1beta/termsofservice.proto (package google.shopping.merchant.accounts.v1beta, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { TermsOfServiceKind } from "./termsofservicekind_pb";
import { file_google_shopping_merchant_accounts_v1beta_termsofservicekind } from "./termsofservicekind_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/shopping/merchant/accounts/v1beta/termsofservice.proto.
 */
export const file_google_shopping_merchant_accounts_v1beta_termsofservice: GenFile = /*@__PURE__*/
  fileDesc("Cj1nb29nbGUvc2hvcHBpbmcvbWVyY2hhbnQvYWNjb3VudHMvdjFiZXRhL3Rlcm1zb2ZzZXJ2aWNlLnByb3RvEihnb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuYWNjb3VudHMudjFiZXRhIrICCg5UZXJtc09mU2VydmljZRI/CgRuYW1lGAEgASgJQjHgQQj6QSsKKW1lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL1Rlcm1zT2ZTZXJ2aWNlEhMKC3JlZ2lvbl9jb2RlGAIgASgJEkoKBGtpbmQYAyABKA4yPC5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuYWNjb3VudHMudjFiZXRhLlRlcm1zT2ZTZXJ2aWNlS2luZBIVCghmaWxlX3VyaRgEIAEoCUgAiAEBEhAKCGV4dGVybmFsGAUgASgIOkjqQUUKKW1lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL1Rlcm1zT2ZTZXJ2aWNlEhh0ZXJtc09mU2VydmljZS97dmVyc2lvbn1CCwoJX2ZpbGVfdXJpIlsKGEdldFRlcm1zT2ZTZXJ2aWNlUmVxdWVzdBI/CgRuYW1lGAEgASgJQjHgQQL6QSsKKW1lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL1Rlcm1zT2ZTZXJ2aWNlIpABCiNSZXRyaWV2ZUxhdGVzdFRlcm1zT2ZTZXJ2aWNlUmVxdWVzdBIYCgtyZWdpb25fY29kZRgBIAEoCUID4EECEk8KBGtpbmQYAiABKA4yPC5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuYWNjb3VudHMudjFiZXRhLlRlcm1zT2ZTZXJ2aWNlS2luZEID4EECIrUBChtBY2NlcHRUZXJtc09mU2VydmljZVJlcXVlc3QSPwoEbmFtZRgBIAEoCUIx4EEC+kErCiltZXJjaGFudGFwaS5nb29nbGVhcGlzLmNvbS9UZXJtc09mU2VydmljZRI7CgdhY2NvdW50GAIgASgJQirgQQL6QSQKIm1lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL0FjY291bnQSGAoLcmVnaW9uX2NvZGUYAyABKAlCA+BBAjLHBQoVVGVybXNPZlNlcnZpY2VTZXJ2aWNlEsoBChFHZXRUZXJtc09mU2VydmljZRJCLmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5hY2NvdW50cy52MWJldGEuR2V0VGVybXNPZlNlcnZpY2VSZXF1ZXN0GjguZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmFjY291bnRzLnYxYmV0YS5UZXJtc09mU2VydmljZSI32kEEbmFtZYLT5JMCKhIoL2FjY291bnRzL3YxYmV0YS97bmFtZT10ZXJtc09mU2VydmljZS8qfRLfAQocUmV0cmlldmVMYXRlc3RUZXJtc09mU2VydmljZRJNLmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5hY2NvdW50cy52MWJldGEuUmV0cmlldmVMYXRlc3RUZXJtc09mU2VydmljZVJlcXVlc3QaOC5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuYWNjb3VudHMudjFiZXRhLlRlcm1zT2ZTZXJ2aWNlIjaC0+STAjASLi9hY2NvdW50cy92MWJldGEvdGVybXNPZlNlcnZpY2U6cmV0cmlldmVMYXRlc3QStQEKFEFjY2VwdFRlcm1zT2ZTZXJ2aWNlEkUuZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmFjY291bnRzLnYxYmV0YS5BY2NlcHRUZXJtc09mU2VydmljZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiPtpBBG5hbWWC0+STAjESLy9hY2NvdW50cy92MWJldGEve25hbWU9dGVybXNPZlNlcnZpY2UvKn06YWNjZXB0GkfKQRptZXJjaGFudGFwaS5nb29nbGVhcGlzLmNvbdJBJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY29udGVudEKVAQosY29tLmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5hY2NvdW50cy52MWJldGFCE1Rlcm1zT2ZTZXJ2aWNlUHJvdG9QAVpOY2xvdWQuZ29vZ2xlLmNvbS9nby9zaG9wcGluZy9tZXJjaGFudC9hY2NvdW50cy9hcGl2MWJldGEvYWNjb3VudHNwYjthY2NvdW50c3BiYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_empty, file_google_shopping_merchant_accounts_v1beta_termsofservicekind]);

/**
 * A `TermsOfService`.
 *
 * @generated from message google.shopping.merchant.accounts.v1beta.TermsOfService
 */
export type TermsOfService = Message<"google.shopping.merchant.accounts.v1beta.TermsOfService"> & {
  /**
   * Identifier. The resource name of the terms of service version.
   * Format: `termsOfService/{version}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Region code as defined by [CLDR](https://cldr.unicode.org/). This is either
   * a country where the ToS applies specifically to that country or `001` when
   * the same `TermsOfService` can be signed in any country. However note that
   * when signing a ToS that applies globally we still expect that a specific
   * country is provided  (this should be merchant business country or program
   * country of participation).
   *
   * @generated from field: string region_code = 2;
   */
  regionCode: string;

  /**
   * The Kind this terms of service version applies to.
   *
   * @generated from field: google.shopping.merchant.accounts.v1beta.TermsOfServiceKind kind = 3;
   */
  kind: TermsOfServiceKind;

  /**
   * URI for terms of service file that needs to be displayed to signing users.
   *
   * @generated from field: optional string file_uri = 4;
   */
  fileUri?: string;

  /**
   * Whether this terms of service version is external. External terms of
   * service versions can only be agreed through external processes and not
   * directly by the merchant through UI or API.
   *
   * @generated from field: bool external = 5;
   */
  external: boolean;
};

/**
 * Describes the message google.shopping.merchant.accounts.v1beta.TermsOfService.
 * Use `create(TermsOfServiceSchema)` to create a new message.
 */
export const TermsOfServiceSchema: GenMessage<TermsOfService> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_accounts_v1beta_termsofservice, 0);

/**
 * Request message for the `GetTermsOfService` method.
 *
 * @generated from message google.shopping.merchant.accounts.v1beta.GetTermsOfServiceRequest
 */
export type GetTermsOfServiceRequest = Message<"google.shopping.merchant.accounts.v1beta.GetTermsOfServiceRequest"> & {
  /**
   * Required. The resource name of the terms of service version.
   * Format: `termsOfService/{version}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.shopping.merchant.accounts.v1beta.GetTermsOfServiceRequest.
 * Use `create(GetTermsOfServiceRequestSchema)` to create a new message.
 */
export const GetTermsOfServiceRequestSchema: GenMessage<GetTermsOfServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_accounts_v1beta_termsofservice, 1);

/**
 * Request message for the `RetrieveLatestTermsOfService` method.
 *
 * @generated from message google.shopping.merchant.accounts.v1beta.RetrieveLatestTermsOfServiceRequest
 */
export type RetrieveLatestTermsOfServiceRequest = Message<"google.shopping.merchant.accounts.v1beta.RetrieveLatestTermsOfServiceRequest"> & {
  /**
   * Required. Region code as defined by [CLDR](https://cldr.unicode.org/). This
   * is either a country when the ToS applies specifically to that country or
   * 001 when it applies globally.
   *
   * @generated from field: string region_code = 1;
   */
  regionCode: string;

  /**
   * Required. The Kind this terms of service version applies to.
   *
   * @generated from field: google.shopping.merchant.accounts.v1beta.TermsOfServiceKind kind = 2;
   */
  kind: TermsOfServiceKind;
};

/**
 * Describes the message google.shopping.merchant.accounts.v1beta.RetrieveLatestTermsOfServiceRequest.
 * Use `create(RetrieveLatestTermsOfServiceRequestSchema)` to create a new message.
 */
export const RetrieveLatestTermsOfServiceRequestSchema: GenMessage<RetrieveLatestTermsOfServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_accounts_v1beta_termsofservice, 2);

/**
 * Request message for the `AcceptTermsOfService` method.
 *
 * @generated from message google.shopping.merchant.accounts.v1beta.AcceptTermsOfServiceRequest
 */
export type AcceptTermsOfServiceRequest = Message<"google.shopping.merchant.accounts.v1beta.AcceptTermsOfServiceRequest"> & {
  /**
   * Required. The resource name of the terms of service version.
   * Format: `termsOfService/{version}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The account for which to accept the ToS.
   *
   * @generated from field: string account = 2;
   */
  account: string;

  /**
   * Required. Region code as defined by [CLDR](https://cldr.unicode.org/). This
   * is either a country when the ToS applies specifically to that country or
   * 001 when it applies globally.
   *
   * @generated from field: string region_code = 3;
   */
  regionCode: string;
};

/**
 * Describes the message google.shopping.merchant.accounts.v1beta.AcceptTermsOfServiceRequest.
 * Use `create(AcceptTermsOfServiceRequestSchema)` to create a new message.
 */
export const AcceptTermsOfServiceRequestSchema: GenMessage<AcceptTermsOfServiceRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_accounts_v1beta_termsofservice, 3);

/**
 * Service to support `TermsOfService` API.
 *
 * @generated from service google.shopping.merchant.accounts.v1beta.TermsOfServiceService
 */
export const TermsOfServiceService: GenService<{
  /**
   * Retrieves the `TermsOfService` associated with the provided version.
   *
   * @generated from rpc google.shopping.merchant.accounts.v1beta.TermsOfServiceService.GetTermsOfService
   */
  getTermsOfService: {
    methodKind: "unary";
    input: typeof GetTermsOfServiceRequestSchema;
    output: typeof TermsOfServiceSchema;
  },
  /**
   * Retrieves the latest version of the `TermsOfService` for a given `kind` and
   * `region_code`.
   *
   * @generated from rpc google.shopping.merchant.accounts.v1beta.TermsOfServiceService.RetrieveLatestTermsOfService
   */
  retrieveLatestTermsOfService: {
    methodKind: "unary";
    input: typeof RetrieveLatestTermsOfServiceRequestSchema;
    output: typeof TermsOfServiceSchema;
  },
  /**
   * Accepts a `TermsOfService`. Executing this method requires admin access.
   *
   * @generated from rpc google.shopping.merchant.accounts.v1beta.TermsOfServiceService.AcceptTermsOfService
   */
  acceptTermsOfService: {
    methodKind: "unary";
    input: typeof AcceptTermsOfServiceRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_shopping_merchant_accounts_v1beta_termsofservice, 0);

