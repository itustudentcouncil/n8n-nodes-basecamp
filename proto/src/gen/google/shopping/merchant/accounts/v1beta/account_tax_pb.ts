// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/shopping/merchant/accounts/v1beta/account_tax.proto (package google.shopping.merchant.accounts.v1beta, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { TaxRule } from "./tax_rule_pb";
import { file_google_shopping_merchant_accounts_v1beta_tax_rule } from "./tax_rule_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/shopping/merchant/accounts/v1beta/account_tax.proto.
 */
export const file_google_shopping_merchant_accounts_v1beta_account_tax: GenFile = /*@__PURE__*/
  fileDesc("Cjpnb29nbGUvc2hvcHBpbmcvbWVyY2hhbnQvYWNjb3VudHMvdjFiZXRhL2FjY291bnRfdGF4LnByb3RvEihnb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuYWNjb3VudHMudjFiZXRhIuYBCgpBY2NvdW50VGF4EhEKBG5hbWUYASABKAlCA+BBCBIUCgdhY2NvdW50GAIgASgDQgPgQQMSRAoJdGF4X3J1bGVzGAMgAygLMjEuZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmFjY291bnRzLnYxYmV0YS5UYXhSdWxlOmnqQWYKJW1lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL0FjY291bnRUYXgSI2FjY291bnRzL3thY2NvdW50fS9hY2NvdW50dGF4L3t0YXh9KgxhY2NvdW50VGF4ZXMyCmFjY291bnRUYXgiUwoUR2V0QWNjb3VudFRheFJlcXVlc3QSOwoEbmFtZRgBIAEoCUIt4EEC+kEnCiVtZXJjaGFudGFwaS5nb29nbGVhcGlzLmNvbS9BY2NvdW50VGF4IpoBChdVcGRhdGVBY2NvdW50VGF4UmVxdWVzdBJOCgthY2NvdW50X3RheBgBIAEoCzI0Lmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5hY2NvdW50cy52MWJldGEuQWNjb3VudFRheEID4EECEi8KC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayJ9ChVMaXN0QWNjb3VudFRheFJlcXVlc3QSPQoGcGFyZW50GAEgASgJQi3gQQL6QScSJW1lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL0FjY291bnRUYXgSEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkifgoWTGlzdEFjY291bnRUYXhSZXNwb25zZRJLCg1hY2NvdW50X3RheGVzGAEgAygLMjQuZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmFjY291bnRzLnYxYmV0YS5BY2NvdW50VGF4EhcKD25leHRfcGFnZV90b2tlbhgCIAEoCTKEBgoRQWNjb3VudFRheFNlcnZpY2USxQEKDUdldEFjY291bnRUYXgSPi5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuYWNjb3VudHMudjFiZXRhLkdldEFjY291bnRUYXhSZXF1ZXN0GjQuZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmFjY291bnRzLnYxYmV0YS5BY2NvdW50VGF4Ij7aQQRuYW1lgtPkkwIxEi8vYWNjb3VudHMvdjFiZXRhL3tuYW1lPWFjY291bnRzLyovYWNjb3VudHRheC8qfRLVAQoOTGlzdEFjY291bnRUYXgSPy5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuYWNjb3VudHMudjFiZXRhLkxpc3RBY2NvdW50VGF4UmVxdWVzdBpALmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5hY2NvdW50cy52MWJldGEuTGlzdEFjY291bnRUYXhSZXNwb25zZSJA2kEGcGFyZW50gtPkkwIxEi8vYWNjb3VudHMvdjFiZXRhL3twYXJlbnQ9YWNjb3VudHMvKn0vYWNjb3VudHRheBKFAgoQVXBkYXRlQWNjb3VudFRheBJBLmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5hY2NvdW50cy52MWJldGEuVXBkYXRlQWNjb3VudFRheFJlcXVlc3QaNC5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuYWNjb3VudHMudjFiZXRhLkFjY291bnRUYXgieNpBF2FjY291bnRfdGF4LHVwZGF0ZV9tYXNr2kELYWNjb3VudF90YXiC0+STAko6C2FjY291bnRfdGF4MjsvYWNjb3VudHMvdjFiZXRhL3thY2NvdW50X3RheC5uYW1lPWFjY291bnRzLyovYWNjb3VudHRheC8qfRpHykEabWVyY2hhbnRhcGkuZ29vZ2xlYXBpcy5jb23SQSdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2NvbnRlbnRCkQEKLGNvbS5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuYWNjb3VudHMudjFiZXRhQg9BY2NvdW50VGF4UHJvdG9QAVpOY2xvdWQuZ29vZ2xlLmNvbS9nby9zaG9wcGluZy9tZXJjaGFudC9hY2NvdW50cy9hcGl2MWJldGEvYWNjb3VudHNwYjthY2NvdW50c3BiYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_field_mask, file_google_shopping_merchant_accounts_v1beta_tax_rule]);

/**
 * The tax settings of a merchant account. All methods require the admin role.
 *
 * @generated from message google.shopping.merchant.accounts.v1beta.AccountTax
 */
export type AccountTax = Message<"google.shopping.merchant.accounts.v1beta.AccountTax"> & {
  /**
   * Identifier. The name of the tax setting.
   * Format:
   * "{account_tax.name=accounts/{account}}"
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The ID of the account to which these account tax settings
   * belong.
   *
   * @generated from field: int64 account = 2;
   */
  account: bigint;

  /**
   * Tax rules. "Define the tax rules in each region.
   * No tax will be presented if a region has no rule."
   *
   * @generated from field: repeated google.shopping.merchant.accounts.v1beta.TaxRule tax_rules = 3;
   */
  taxRules: TaxRule[];
};

/**
 * Describes the message google.shopping.merchant.accounts.v1beta.AccountTax.
 * Use `create(AccountTaxSchema)` to create a new message.
 */
export const AccountTaxSchema: GenMessage<AccountTax> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_accounts_v1beta_account_tax, 0);

/**
 * Request to get tax settings
 *
 * @generated from message google.shopping.merchant.accounts.v1beta.GetAccountTaxRequest
 */
export type GetAccountTaxRequest = Message<"google.shopping.merchant.accounts.v1beta.GetAccountTaxRequest"> & {
  /**
   * Required. The name from which tax settings will be retrieved
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.shopping.merchant.accounts.v1beta.GetAccountTaxRequest.
 * Use `create(GetAccountTaxRequestSchema)` to create a new message.
 */
export const GetAccountTaxRequestSchema: GenMessage<GetAccountTaxRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_accounts_v1beta_account_tax, 1);

/**
 * Request to update the tax settings
 *
 * @generated from message google.shopping.merchant.accounts.v1beta.UpdateAccountTaxRequest
 */
export type UpdateAccountTaxRequest = Message<"google.shopping.merchant.accounts.v1beta.UpdateAccountTaxRequest"> & {
  /**
   * Required. The tax setting that will be updated
   *
   * @generated from field: google.shopping.merchant.accounts.v1beta.AccountTax account_tax = 1;
   */
  accountTax?: AccountTax;

  /**
   * The list of fields to be updated
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.shopping.merchant.accounts.v1beta.UpdateAccountTaxRequest.
 * Use `create(UpdateAccountTaxRequestSchema)` to create a new message.
 */
export const UpdateAccountTaxRequestSchema: GenMessage<UpdateAccountTaxRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_accounts_v1beta_account_tax, 2);

/**
 * Request to list all sub-account tax settings only for the requesting merchant
 * This method can only be called on a multi-client account, otherwise it'll
 * return an error.
 *
 * @generated from message google.shopping.merchant.accounts.v1beta.ListAccountTaxRequest
 */
export type ListAccountTaxRequest = Message<"google.shopping.merchant.accounts.v1beta.ListAccountTaxRequest"> & {
  /**
   * Required. The parent, which owns this collection of account tax.
   * Format: accounts/{account}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of tax settings to return in the response, used for
   * paging.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * The token returned by the previous request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.shopping.merchant.accounts.v1beta.ListAccountTaxRequest.
 * Use `create(ListAccountTaxRequestSchema)` to create a new message.
 */
export const ListAccountTaxRequestSchema: GenMessage<ListAccountTaxRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_accounts_v1beta_account_tax, 3);

/**
 * Response to account tax list request
 * This method can only be called on a multi-client account, otherwise it'll
 * return an error.
 *
 * @generated from message google.shopping.merchant.accounts.v1beta.ListAccountTaxResponse
 */
export type ListAccountTaxResponse = Message<"google.shopping.merchant.accounts.v1beta.ListAccountTaxResponse"> & {
  /**
   * Page of accounttax settings
   *
   * @generated from field: repeated google.shopping.merchant.accounts.v1beta.AccountTax account_taxes = 1;
   */
  accountTaxes: AccountTax[];

  /**
   * The token for the retrieval of the next page of account tax settings.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.shopping.merchant.accounts.v1beta.ListAccountTaxResponse.
 * Use `create(ListAccountTaxResponseSchema)` to create a new message.
 */
export const ListAccountTaxResponseSchema: GenMessage<ListAccountTaxResponse> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_accounts_v1beta_account_tax, 4);

/**
 * Manages account level tax setting data.
 *
 * This API defines the following resource model:
 *
 * - [AccountTax][google.shopping.merchant.accounts.v1main.AccountTax]
 *
 * @generated from service google.shopping.merchant.accounts.v1beta.AccountTaxService
 */
export const AccountTaxService: GenService<{
  /**
   * Returns the tax rules that match the conditions of GetAccountTaxRequest
   *
   * @generated from rpc google.shopping.merchant.accounts.v1beta.AccountTaxService.GetAccountTax
   */
  getAccountTax: {
    methodKind: "unary";
    input: typeof GetAccountTaxRequestSchema;
    output: typeof AccountTaxSchema;
  },
  /**
   * Lists the tax settings of the sub-accounts only in your
   * Merchant Center account.
   * This method can only be called on a multi-client account, otherwise it'll
   * return an error.
   *
   * @generated from rpc google.shopping.merchant.accounts.v1beta.AccountTaxService.ListAccountTax
   */
  listAccountTax: {
    methodKind: "unary";
    input: typeof ListAccountTaxRequestSchema;
    output: typeof ListAccountTaxResponseSchema;
  },
  /**
   * Updates the tax settings of the account.
   *
   * @generated from rpc google.shopping.merchant.accounts.v1beta.AccountTaxService.UpdateAccountTax
   */
  updateAccountTax: {
    methodKind: "unary";
    input: typeof UpdateAccountTaxRequestSchema;
    output: typeof AccountTaxSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_shopping_merchant_accounts_v1beta_account_tax, 0);

