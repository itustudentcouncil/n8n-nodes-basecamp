// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/shopping/merchant/products/v1beta/products.proto (package google.shopping.merchant.products.v1beta, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { Attributes, ProductStatus } from "./products_common_pb";
import { file_google_shopping_merchant_products_v1beta_products_common } from "./products_common_pb";
import type { Channel_ChannelEnum, CustomAttribute } from "../../../type/types_pb";
import { file_google_shopping_type_types } from "../../../type/types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/shopping/merchant/products/v1beta/products.proto.
 */
export const file_google_shopping_merchant_products_v1beta_products: GenFile = /*@__PURE__*/
  fileDesc("Cjdnb29nbGUvc2hvcHBpbmcvbWVyY2hhbnQvcHJvZHVjdHMvdjFiZXRhL3Byb2R1Y3RzLnByb3RvEihnb29nbGUuc2hvcHBpbmcubWVyY2hhbnQucHJvZHVjdHMudjFiZXRhIrIECgdQcm9kdWN0EgwKBG5hbWUYASABKAkSPwoHY2hhbm5lbBgCIAEoDjIpLmdvb2dsZS5zaG9wcGluZy50eXBlLkNoYW5uZWwuQ2hhbm5lbEVudW1CA+BBAxIVCghvZmZlcl9pZBgDIAEoCUID4EEDEh0KEGNvbnRlbnRfbGFuZ3VhZ2UYBCABKAlCA+BBAxIXCgpmZWVkX2xhYmVsGAUgASgJQgPgQQMSGAoLZGF0YV9zb3VyY2UYBiABKAlCA+BBAxIgCg52ZXJzaW9uX251bWJlchgHIAEoA0ID4EEDSACIAQESTQoKYXR0cmlidXRlcxgIIAEoCzI0Lmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5wcm9kdWN0cy52MWJldGEuQXR0cmlidXRlc0ID4EEDEkUKEWN1c3RvbV9hdHRyaWJ1dGVzGAkgAygLMiUuZ29vZ2xlLnNob3BwaW5nLnR5cGUuQ3VzdG9tQXR0cmlidXRlQgPgQQMSVAoOcHJvZHVjdF9zdGF0dXMYCiABKAsyNy5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQucHJvZHVjdHMudjFiZXRhLlByb2R1Y3RTdGF0dXNCA+BBAzpO6kFLCiJtZXJjaGFudGFwaS5nb29nbGVhcGlzLmNvbS9Qcm9kdWN0EiVhY2NvdW50cy97YWNjb3VudH0vcHJvZHVjdHMve3Byb2R1Y3R9QhEKD192ZXJzaW9uX251bWJlciJNChFHZXRQcm9kdWN0UmVxdWVzdBI4CgRuYW1lGAEgASgJQirgQQL6QSQKIm1lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL1Byb2R1Y3QieAoTTGlzdFByb2R1Y3RzUmVxdWVzdBI6CgZwYXJlbnQYASABKAlCKuBBAvpBJBIibWVyY2hhbnRhcGkuZ29vZ2xlYXBpcy5jb20vUHJvZHVjdBIRCglwYWdlX3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCSJ0ChRMaXN0UHJvZHVjdHNSZXNwb25zZRJDCghwcm9kdWN0cxgBIAMoCzIxLmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5wcm9kdWN0cy52MWJldGEuUHJvZHVjdBIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAky5wMKD1Byb2R1Y3RzU2VydmljZRK6AQoKR2V0UHJvZHVjdBI7Lmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5wcm9kdWN0cy52MWJldGEuR2V0UHJvZHVjdFJlcXVlc3QaMS5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQucHJvZHVjdHMudjFiZXRhLlByb2R1Y3QiPNpBBG5hbWWC0+STAi8SLS9wcm9kdWN0cy92MWJldGEve25hbWU9YWNjb3VudHMvKi9wcm9kdWN0cy8qfRLNAQoMTGlzdFByb2R1Y3RzEj0uZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LnByb2R1Y3RzLnYxYmV0YS5MaXN0UHJvZHVjdHNSZXF1ZXN0Gj4uZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LnByb2R1Y3RzLnYxYmV0YS5MaXN0UHJvZHVjdHNSZXNwb25zZSI+2kEGcGFyZW50gtPkkwIvEi0vcHJvZHVjdHMvdjFiZXRhL3twYXJlbnQ9YWNjb3VudHMvKn0vcHJvZHVjdHMaR8pBGm1lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29t0kEnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jb250ZW50QsoBCixjb20uZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LnByb2R1Y3RzLnYxYmV0YUINUHJvZHVjdHNQcm90b1ABWk5jbG91ZC5nb29nbGUuY29tL2dvL3Nob3BwaW5nL21lcmNoYW50L3Byb2R1Y3RzL2FwaXYxYmV0YS9wcm9kdWN0c3BiO3Byb2R1Y3RzcGLqQTgKIm1lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL0FjY291bnQSEmFjY291bnRzL3thY2NvdW50fWIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_shopping_merchant_products_v1beta_products_common, file_google_shopping_type_types]);

/**
 * The processed product, built from multiple [product
 * inputs][[google.shopping.content.bundles.Products.ProductInput] after
 * applying rules and supplemental data sources. This processed product matches
 * what is shown in your Merchant Center account and in Shopping ads and other
 * surfaces across Google. Each product is built from exactly one primary
 * data source product input, and multiple supplemental data source inputs.
 * After inserting, updating, or deleting a product input, it may take
 * several minutes before the updated processed product can be retrieved.
 *
 * All fields in the processed product and its sub-messages match the name of
 * their corresponding attribute in the [Product data
 * specification](https://support.google.com/merchants/answer/7052112) with some
 * exceptions.
 *
 * @generated from message google.shopping.merchant.products.v1beta.Product
 */
export type Product = Message<"google.shopping.merchant.products.v1beta.Product"> & {
  /**
   * The name of the product.
   * Format:
   * `"{product.name=accounts/{account}/products/{product}}"`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The
   * [channel](https://support.google.com/merchants/answer/7361332) of the
   * product.
   *
   * @generated from field: google.shopping.type.Channel.ChannelEnum channel = 2;
   */
  channel: Channel_ChannelEnum;

  /**
   * Output only. Your unique identifier for the product. This is the same for
   * the product input and processed product. Leading and trailing whitespaces
   * are stripped and multiple whitespaces are replaced by a single whitespace
   * upon submission. See the [product data
   * specification](https://support.google.com/merchants/answer/188494#id) for
   * details.
   *
   * @generated from field: string offer_id = 3;
   */
  offerId: string;

  /**
   * Output only. The two-letter [ISO
   * 639-1](http://en.wikipedia.org/wiki/ISO_639-1) language code for the
   * product.
   *
   * @generated from field: string content_language = 4;
   */
  contentLanguage: string;

  /**
   * Output only. The feed label for the product.
   *
   * @generated from field: string feed_label = 5;
   */
  feedLabel: string;

  /**
   * Output only. The primary data source of the product.
   *
   * @generated from field: string data_source = 6;
   */
  dataSource: string;

  /**
   * Output only. Represents the existing version (freshness) of the product,
   * which can be used to preserve the right order when multiple updates are
   * done at the same time.
   *
   * If set, the insertion is prevented when version number is lower than
   * the current version number of the existing product. Re-insertion (for
   * example, product refresh after 30 days) can be performed with the current
   * `version_number`.
   *
   * Only supported for insertions into primary data sources.
   *
   * If the operation is prevented, the aborted exception will be
   * thrown.
   *
   * @generated from field: optional int64 version_number = 7;
   */
  versionNumber?: bigint;

  /**
   * Output only. A list of product attributes.
   *
   * @generated from field: google.shopping.merchant.products.v1beta.Attributes attributes = 8;
   */
  attributes?: Attributes;

  /**
   * Output only. A list of custom (merchant-provided) attributes. It can also
   * be used to submit any attribute of the data specification in its generic
   * form (for example,
   * `{ "name": "size type", "value": "regular" }`).
   * This is useful for submitting attributes not explicitly exposed by the
   * API, such as additional attributes used for Buy on Google.
   *
   * @generated from field: repeated google.shopping.type.CustomAttribute custom_attributes = 9;
   */
  customAttributes: CustomAttribute[];

  /**
   * Output only. The status of a product, data validation issues, that is,
   * information about a product computed asynchronously.
   *
   * @generated from field: google.shopping.merchant.products.v1beta.ProductStatus product_status = 10;
   */
  productStatus?: ProductStatus;
};

/**
 * Describes the message google.shopping.merchant.products.v1beta.Product.
 * Use `create(ProductSchema)` to create a new message.
 */
export const ProductSchema: GenMessage<Product> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_products_v1beta_products, 0);

/**
 * Request message for the GetProduct method.
 *
 * @generated from message google.shopping.merchant.products.v1beta.GetProductRequest
 */
export type GetProductRequest = Message<"google.shopping.merchant.products.v1beta.GetProductRequest"> & {
  /**
   * Required. The name of the product to retrieve.
   * Format: `accounts/{account}/products/{product}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.shopping.merchant.products.v1beta.GetProductRequest.
 * Use `create(GetProductRequestSchema)` to create a new message.
 */
export const GetProductRequestSchema: GenMessage<GetProductRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_products_v1beta_products, 1);

/**
 * Request message for the ListProducts method.
 *
 * @generated from message google.shopping.merchant.products.v1beta.ListProductsRequest
 */
export type ListProductsRequest = Message<"google.shopping.merchant.products.v1beta.ListProductsRequest"> & {
  /**
   * Required. The account to list processed products for.
   * Format: accounts/{account}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of products to return. The service may return fewer than
   * this value.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   * If unspecified, the maximum number of products will be returned.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListProducts` call.
   * Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListProducts` must
   * match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.shopping.merchant.products.v1beta.ListProductsRequest.
 * Use `create(ListProductsRequestSchema)` to create a new message.
 */
export const ListProductsRequestSchema: GenMessage<ListProductsRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_products_v1beta_products, 2);

/**
 * Response message for the ListProducts method.
 *
 * @generated from message google.shopping.merchant.products.v1beta.ListProductsResponse
 */
export type ListProductsResponse = Message<"google.shopping.merchant.products.v1beta.ListProductsResponse"> & {
  /**
   * The processed products from the specified account. These are your processed
   * products after applying rules and supplemental data sources.
   *
   * @generated from field: repeated google.shopping.merchant.products.v1beta.Product products = 1;
   */
  products: Product[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.shopping.merchant.products.v1beta.ListProductsResponse.
 * Use `create(ListProductsResponseSchema)` to create a new message.
 */
export const ListProductsResponseSchema: GenMessage<ListProductsResponse> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_products_v1beta_products, 3);

/**
 * Service to use Product resource.
 * This service works for products with online channel only.
 *
 * @generated from service google.shopping.merchant.products.v1beta.ProductsService
 */
export const ProductsService: GenService<{
  /**
   * Retrieves the processed product from your Merchant Center account.
   *
   * After inserting, updating, or deleting a product input, it may take several
   * minutes before the updated final product can be retrieved.
   *
   * @generated from rpc google.shopping.merchant.products.v1beta.ProductsService.GetProduct
   */
  getProduct: {
    methodKind: "unary";
    input: typeof GetProductRequestSchema;
    output: typeof ProductSchema;
  },
  /**
   * Lists the processed products in your Merchant Center account. The response
   * might contain fewer items than specified by pageSize. Rely on pageToken to
   * determine if there are more items to be requested.
   *
   * After inserting, updating, or deleting a product input, it may take several
   * minutes before the updated processed product can be retrieved.
   *
   * @generated from rpc google.shopping.merchant.products.v1beta.ProductsService.ListProducts
   */
  listProducts: {
    methodKind: "unary";
    input: typeof ListProductsRequestSchema;
    output: typeof ListProductsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_shopping_merchant_products_v1beta_products, 0);

