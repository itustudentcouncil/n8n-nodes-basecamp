// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/shopping/merchant/reports/v1beta/reports.proto (package google.shopping.merchant.reports.v1beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Channel_ChannelEnum, Price, ReportingContext_ReportingContextEnum } from "../../../type/types_pb";
import { file_google_shopping_type_types } from "../../../type/types_pb";
import type { Date } from "../../../../type/date_pb";
import { file_google_type_date } from "../../../../type/date_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/shopping/merchant/reports/v1beta/reports.proto.
 */
export const file_google_shopping_merchant_reports_v1beta_reports: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_protobuf_timestamp, file_google_shopping_type_types, file_google_type_date]);

/**
 * Request message for the `ReportService.Search` method.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.SearchRequest
 */
export type SearchRequest = Message<"google.shopping.merchant.reports.v1beta.SearchRequest"> & {
  /**
   * Required. Id of the account making the call. Must be a standalone account
   * or an MCA subaccount. Format: accounts/{account}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Query that defines a report to be retrieved.
   *
   * For details on how to construct your query, see the Query Language
   * guide. For the full list of available tables and fields, see the Available
   * fields.
   *
   * @generated from field: string query = 2;
   */
  query: string;

  /**
   * Optional. Number of `ReportRows` to retrieve in a single page. Defaults to
   * 1000. Values above 5000 are coerced to 5000.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * Optional. Token of the page to retrieve. If not specified, the first page
   * of results is returned. In order to request the next page of results, the
   * value obtained from `next_page_token` in the previous response should be
   * used.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.SearchRequest.
 * Use `create(SearchRequestSchema)` to create a new message.
 */
export const SearchRequestSchema: GenMessage<SearchRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 0);

/**
 * Response message for the `ReportService.Search` method.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.SearchResponse
 */
export type SearchResponse = Message<"google.shopping.merchant.reports.v1beta.SearchResponse"> & {
  /**
   * Rows that matched the search query.
   *
   * @generated from field: repeated google.shopping.merchant.reports.v1beta.ReportRow results = 1;
   */
  results: ReportRow[];

  /**
   * Token which can be sent as `page_token` to retrieve the next page. If
   * omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.SearchResponse.
 * Use `create(SearchResponseSchema)` to create a new message.
 */
export const SearchResponseSchema: GenMessage<SearchResponse> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 1);

/**
 * Result row returned from the search query.
 *
 * Only the message corresponding to the queried table is populated in the
 * response. Within the populated message, only the fields requested explicitly
 * in the query are populated.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.ReportRow
 */
export type ReportRow = Message<"google.shopping.merchant.reports.v1beta.ReportRow"> & {
  /**
   * Fields available for query in `product_performance_view` table.
   *
   * @generated from field: google.shopping.merchant.reports.v1beta.ProductPerformanceView product_performance_view = 1;
   */
  productPerformanceView?: ProductPerformanceView;

  /**
   * Fields available for query in `non_product_performance_view` table.
   *
   * @generated from field: google.shopping.merchant.reports.v1beta.NonProductPerformanceView non_product_performance_view = 7;
   */
  nonProductPerformanceView?: NonProductPerformanceView;

  /**
   * Fields available for query in `product_view` table.
   *
   * @generated from field: google.shopping.merchant.reports.v1beta.ProductView product_view = 2;
   */
  productView?: ProductView;

  /**
   * Fields available for query in `price_competitiveness_product_view` table.
   *
   * @generated from field: google.shopping.merchant.reports.v1beta.PriceCompetitivenessProductView price_competitiveness_product_view = 3;
   */
  priceCompetitivenessProductView?: PriceCompetitivenessProductView;

  /**
   * Fields available for query in `price_insights_product_view` table.
   *
   * @generated from field: google.shopping.merchant.reports.v1beta.PriceInsightsProductView price_insights_product_view = 4;
   */
  priceInsightsProductView?: PriceInsightsProductView;

  /**
   * Fields available for query in `best_sellers_product_cluster_view` table.
   *
   * @generated from field: google.shopping.merchant.reports.v1beta.BestSellersProductClusterView best_sellers_product_cluster_view = 5;
   */
  bestSellersProductClusterView?: BestSellersProductClusterView;

  /**
   * Fields available for query in `best_sellers_brand_view` table.
   *
   * @generated from field: google.shopping.merchant.reports.v1beta.BestSellersBrandView best_sellers_brand_view = 6;
   */
  bestSellersBrandView?: BestSellersBrandView;

  /**
   * Fields available for query in `competitive_visibility_competitor_view`
   * table.
   *
   * @generated from field: google.shopping.merchant.reports.v1beta.CompetitiveVisibilityCompetitorView competitive_visibility_competitor_view = 8;
   */
  competitiveVisibilityCompetitorView?: CompetitiveVisibilityCompetitorView;

  /**
   * Fields available for query in `competitive_visibility_top_merchant_view`
   * table.
   *
   * @generated from field: google.shopping.merchant.reports.v1beta.CompetitiveVisibilityTopMerchantView competitive_visibility_top_merchant_view = 9;
   */
  competitiveVisibilityTopMerchantView?: CompetitiveVisibilityTopMerchantView;

  /**
   * Fields available for query in `competitive_visibility_benchmark_view`
   * table.
   *
   * @generated from field: google.shopping.merchant.reports.v1beta.CompetitiveVisibilityBenchmarkView competitive_visibility_benchmark_view = 10;
   */
  competitiveVisibilityBenchmarkView?: CompetitiveVisibilityBenchmarkView;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.ReportRow.
 * Use `create(ReportRowSchema)` to create a new message.
 */
export const ReportRowSchema: GenMessage<ReportRow> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 2);

/**
 * Fields available for query in `product_performance_view` table.
 *
 * Product performance data for your account, including performance metrics (for
 * example, `clicks`) and dimensions according to which performance metrics are
 * segmented (for example, `offer_id`). Values of product dimensions, such as
 * `offer_id`, reflect the state of a product at the time of the impression.
 *
 * Segment fields cannot be selected in queries without also selecting at least
 * one metric field.
 *
 * Values are only set for fields requested explicitly in the request's search
 * query.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.ProductPerformanceView
 */
export type ProductPerformanceView = Message<"google.shopping.merchant.reports.v1beta.ProductPerformanceView"> & {
  /**
   * Marketing method to which metrics apply. Segment.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.MarketingMethod.MarketingMethodEnum marketing_method = 1;
   */
  marketingMethod?: MarketingMethod_MarketingMethodEnum;

  /**
   * Date in the merchant timezone to which metrics apply. Segment.
   *
   * Condition on `date` is required in the `WHERE` clause.
   *
   * @generated from field: google.type.Date date = 2;
   */
  date?: Date;

  /**
   * First day of the week (Monday) of the metrics date in the merchant
   * timezone. Segment.
   *
   * @generated from field: google.type.Date week = 3;
   */
  week?: Date;

  /**
   * Code of the country where the customer is located at the time of the event.
   * Represented in the ISO 3166 format. Segment.
   *
   * If the customer country cannot be determined, a special 'ZZ' code is
   * returned.
   *
   * @generated from field: optional string customer_country_code = 4;
   */
  customerCountryCode?: string;

  /**
   * Merchant-provided id of the product. Segment.
   *
   * @generated from field: optional string offer_id = 5;
   */
  offerId?: string;

  /**
   * Title of the product. Segment.
   *
   * @generated from field: optional string title = 6;
   */
  title?: string;

  /**
   * Brand of the product. Segment.
   *
   * @generated from field: optional string brand = 7;
   */
  brand?: string;

  /**
   * [Product category (1st
   * level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
   * in Google's product taxonomy. Segment.
   *
   * @generated from field: optional string category_l1 = 8;
   */
  categoryL1?: string;

  /**
   * [Product category (2nd
   * level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
   * in Google's product taxonomy. Segment.
   *
   * @generated from field: optional string category_l2 = 9;
   */
  categoryL2?: string;

  /**
   * [Product category (3rd
   * level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
   * in Google's product taxonomy. Segment.
   *
   * @generated from field: optional string category_l3 = 10;
   */
  categoryL3?: string;

  /**
   * [Product category (4th
   * level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
   * in Google's product taxonomy. Segment.
   *
   * @generated from field: optional string category_l4 = 11;
   */
  categoryL4?: string;

  /**
   * [Product category (5th
   * level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
   * in Google's product taxonomy. Segment.
   *
   * @generated from field: optional string category_l5 = 12;
   */
  categoryL5?: string;

  /**
   * [Product type (1st
   * level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
   * in merchant's own product taxonomy. Segment.
   *
   * @generated from field: optional string product_type_l1 = 13;
   */
  productTypeL1?: string;

  /**
   * [Product type (2nd
   * level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
   * in merchant's own product taxonomy. Segment.
   *
   * @generated from field: optional string product_type_l2 = 14;
   */
  productTypeL2?: string;

  /**
   * [Product type (3rd
   * level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
   * in merchant's own product taxonomy. Segment.
   *
   * @generated from field: optional string product_type_l3 = 15;
   */
  productTypeL3?: string;

  /**
   * [Product type (4th
   * level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
   * in merchant's own product taxonomy. Segment.
   *
   * @generated from field: optional string product_type_l4 = 16;
   */
  productTypeL4?: string;

  /**
   * [Product type (5th
   * level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
   * in merchant's own product taxonomy. Segment.
   *
   * @generated from field: optional string product_type_l5 = 17;
   */
  productTypeL5?: string;

  /**
   * Custom label 0 for custom grouping of products. Segment.
   *
   * @generated from field: optional string custom_label0 = 18;
   */
  customLabel0?: string;

  /**
   * Custom label 1 for custom grouping of products. Segment.
   *
   * @generated from field: optional string custom_label1 = 19;
   */
  customLabel1?: string;

  /**
   * Custom label 2 for custom grouping of products. Segment.
   *
   * @generated from field: optional string custom_label2 = 20;
   */
  customLabel2?: string;

  /**
   * Custom label 3 for custom grouping of products. Segment.
   *
   * @generated from field: optional string custom_label3 = 21;
   */
  customLabel3?: string;

  /**
   * Custom label 4 for custom grouping of products. Segment.
   *
   * @generated from field: optional string custom_label4 = 22;
   */
  customLabel4?: string;

  /**
   * Number of clicks. Metric.
   *
   * @generated from field: optional int64 clicks = 23;
   */
  clicks?: bigint;

  /**
   * Number of times merchant's products are shown. Metric.
   *
   * @generated from field: optional int64 impressions = 24;
   */
  impressions?: bigint;

  /**
   * Click-through rate - the number of clicks merchant's products receive
   * (clicks) divided by the number of times the products are shown
   * (impressions). Metric.
   *
   * @generated from field: optional double click_through_rate = 25;
   */
  clickThroughRate?: number;

  /**
   * Number of conversions attributed to the product, reported on the conversion
   * date. Depending on the attribution model, a conversion might be distributed
   * across multiple clicks, where each click gets its own credit assigned. This
   * metric is a sum of all such credits. Metric.
   *
   * Available only for the `FREE` traffic source.
   *
   * @generated from field: optional double conversions = 26;
   */
  conversions?: number;

  /**
   * Value of conversions attributed to the product, reported on the conversion
   * date. Metric.
   *
   * Available only for the `FREE` traffic source.
   *
   * @generated from field: google.shopping.type.Price conversion_value = 27;
   */
  conversionValue?: Price;

  /**
   * Number of conversions divided by the number of clicks, reported on the
   * impression date. Metric.
   *
   * Available only for the `FREE` traffic source.
   *
   * @generated from field: optional double conversion_rate = 28;
   */
  conversionRate?: number;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.ProductPerformanceView.
 * Use `create(ProductPerformanceViewSchema)` to create a new message.
 */
export const ProductPerformanceViewSchema: GenMessage<ProductPerformanceView> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 3);

/**
 * Fields available for query in `product_view` table.
 *
 * Products in the current inventory. Products in this table are the same as in
 * Products sub-API but not all product attributes from Products sub-API are
 * available for query in this table. In contrast to Products sub-API, this
 * table allows to filter the returned list of products by product attributes.
 * To retrieve a single product by `id` or list all products, Products sub-API
 * should be used.
 *
 * Values are only set for fields requested explicitly in the request's search
 * query.
 *
 *
 * @generated from message google.shopping.merchant.reports.v1beta.ProductView
 */
export type ProductView = Message<"google.shopping.merchant.reports.v1beta.ProductView"> & {
  /**
   * REST ID of the product, in the form of
   * `channel~languageCode~feedLabel~offerId`. Merchant API methods that operate
   * on products take this as their `name` parameter.
   *
   * Required in the `SELECT` clause.
   *
   * @generated from field: optional string id = 1;
   */
  id?: string;

  /**
   * Channel of the product. Can be `ONLINE` or `LOCAL`.
   *
   * @generated from field: optional google.shopping.type.Channel.ChannelEnum channel = 28;
   */
  channel?: Channel_ChannelEnum;

  /**
   * Language code of the product in BCP 47 format.
   *
   * @generated from field: optional string language_code = 2;
   */
  languageCode?: string;

  /**
   * Feed label of the product.
   *
   * @generated from field: optional string feed_label = 3;
   */
  feedLabel?: string;

  /**
   * Merchant-provided id of the product.
   *
   * @generated from field: optional string offer_id = 4;
   */
  offerId?: string;

  /**
   * Title of the product.
   *
   * @generated from field: optional string title = 5;
   */
  title?: string;

  /**
   * Brand of the product.
   *
   * @generated from field: optional string brand = 6;
   */
  brand?: string;

  /**
   * Product category (1st level) in [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l1 = 7;
   */
  categoryL1?: string;

  /**
   * Product category (2nd level) in [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l2 = 8;
   */
  categoryL2?: string;

  /**
   * Product category (3rd level) in [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l3 = 9;
   */
  categoryL3?: string;

  /**
   * Product category (4th level) in [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l4 = 10;
   */
  categoryL4?: string;

  /**
   * Product category (5th level) in [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l5 = 11;
   */
  categoryL5?: string;

  /**
   * Product type (1st level) in merchant's own [product
   * taxonomy](https://support.google.com/merchants/answer/6324406).
   *
   * @generated from field: optional string product_type_l1 = 12;
   */
  productTypeL1?: string;

  /**
   * Product type (2nd level) in merchant's own [product
   * taxonomy](https://support.google.com/merchants/answer/6324406).
   *
   * @generated from field: optional string product_type_l2 = 13;
   */
  productTypeL2?: string;

  /**
   * Product type (3rd level) in merchant's own [product
   * taxonomy](https://support.google.com/merchants/answer/6324406).
   *
   * @generated from field: optional string product_type_l3 = 14;
   */
  productTypeL3?: string;

  /**
   * Product type (4th level) in merchant's own [product
   * taxonomy](https://support.google.com/merchants/answer/6324406).
   *
   * @generated from field: optional string product_type_l4 = 15;
   */
  productTypeL4?: string;

  /**
   * Product type (5th level) in merchant's own [product
   * taxonomy](https://support.google.com/merchants/answer/6324406).
   *
   * @generated from field: optional string product_type_l5 = 16;
   */
  productTypeL5?: string;

  /**
   * Product price. Absent if the information about the price of the product is
   * not available.
   *
   * @generated from field: google.shopping.type.Price price = 17;
   */
  price?: Price;

  /**
   * [Condition](https://support.google.com/merchants/answer/6324469) of the
   * product.
   *
   * @generated from field: optional string condition = 18;
   */
  condition?: string;

  /**
   * [Availability](https://support.google.com/merchants/answer/6324448) of the
   * product.
   *
   * @generated from field: optional string availability = 19;
   */
  availability?: string;

  /**
   * Normalized [shipping
   * label](https://support.google.com/merchants/answer/6324504) specified in
   * the data source.
   *
   * @generated from field: optional string shipping_label = 20;
   */
  shippingLabel?: string;

  /**
   * List of Global Trade Item Numbers (GTINs) of the product.
   *
   * @generated from field: repeated string gtin = 21;
   */
  gtin: string[];

  /**
   * Item group id provided by the merchant for grouping variants together.
   *
   * @generated from field: optional string item_group_id = 22;
   */
  itemGroupId?: string;

  /**
   * Link to the processed image of the product, hosted on the Google
   * infrastructure.
   *
   * @generated from field: optional string thumbnail_link = 23;
   */
  thumbnailLink?: string;

  /**
   * The time the merchant created the product in timestamp seconds.
   *
   * @generated from field: google.protobuf.Timestamp creation_time = 24;
   */
  creationTime?: Timestamp;

  /**
   * Expiration date for the product, specified on insertion.
   *
   * @generated from field: google.type.Date expiration_date = 25;
   */
  expirationDate?: Date;

  /**
   * Aggregated status.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.ProductView.AggregatedReportingContextStatus aggregated_reporting_context_status = 26;
   */
  aggregatedReportingContextStatus?: ProductView_AggregatedReportingContextStatus;

  /**
   * List of item issues for the product.
   *
   * **This field cannot be used for sorting the results.**
   *
   * **Only selected attributes of this field (for example,
   * `item_issues.severity.aggregated_severity`) can be used for filtering the
   * results.**
   *
   * @generated from field: repeated google.shopping.merchant.reports.v1beta.ProductView.ItemIssue item_issues = 27;
   */
  itemIssues: ProductView_ItemIssue[];

  /**
   * Estimated performance potential compared to highest performing products of
   * the merchant.
   *
   * @generated from field: google.shopping.merchant.reports.v1beta.ProductView.ClickPotential click_potential = 29;
   */
  clickPotential: ProductView_ClickPotential;

  /**
   * Rank of the product based on its click potential. A product with
   * `click_potential_rank` 1 has the highest click potential among the
   * merchant's products that fulfill the search query conditions.
   *
   * @generated from field: optional int64 click_potential_rank = 30;
   */
  clickPotentialRank?: bigint;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.ProductView.
 * Use `create(ProductViewSchema)` to create a new message.
 */
export const ProductViewSchema: GenMessage<ProductView> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 4);

/**
 * Item issue associated with the product.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.ProductView.ItemIssue
 */
export type ProductView_ItemIssue = Message<"google.shopping.merchant.reports.v1beta.ProductView.ItemIssue"> & {
  /**
   * Item issue type.
   *
   * @generated from field: google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueType type = 1;
   */
  type?: ProductView_ItemIssue_ItemIssueType;

  /**
   * Item issue severity.
   *
   * @generated from field: google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueSeverity severity = 2;
   */
  severity?: ProductView_ItemIssue_ItemIssueSeverity;

  /**
   * Item issue resolution.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueResolution resolution = 3;
   */
  resolution?: ProductView_ItemIssue_ItemIssueResolution;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.
 * Use `create(ProductView_ItemIssueSchema)` to create a new message.
 */
export const ProductView_ItemIssueSchema: GenMessage<ProductView_ItemIssue> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 4, 0);

/**
 * Issue type.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueType
 */
export type ProductView_ItemIssue_ItemIssueType = Message<"google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueType"> & {
  /**
   * Error code of the issue, equivalent to the `code` of [Product
   * issues](https://developers.google.com/shopping-content/guides/product-issues).
   *
   * @generated from field: optional string code = 1;
   */
  code?: string;

  /**
   * Canonical attribute name for attribute-specific issues.
   *
   * @generated from field: optional string canonical_attribute = 2;
   */
  canonicalAttribute?: string;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueType.
 * Use `create(ProductView_ItemIssue_ItemIssueTypeSchema)` to create a new message.
 */
export const ProductView_ItemIssue_ItemIssueTypeSchema: GenMessage<ProductView_ItemIssue_ItemIssueType> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 4, 0, 0);

/**
 * How the issue affects the serving of the product.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueSeverity
 */
export type ProductView_ItemIssue_ItemIssueSeverity = Message<"google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueSeverity"> & {
  /**
   * Issue severity per reporting context.
   *
   * @generated from field: repeated google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueSeverity.IssueSeverityPerReportingContext severity_per_reporting_context = 1;
   */
  severityPerReportingContext: ProductView_ItemIssue_ItemIssueSeverity_IssueSeverityPerReportingContext[];

  /**
   * Aggregated severity of the issue for all reporting contexts it affects.
   *
   * **This field can be used for filtering the results.**
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueSeverity.AggregatedIssueSeverity aggregated_severity = 2;
   */
  aggregatedSeverity?: ProductView_ItemIssue_ItemIssueSeverity_AggregatedIssueSeverity;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueSeverity.
 * Use `create(ProductView_ItemIssue_ItemIssueSeveritySchema)` to create a new message.
 */
export const ProductView_ItemIssue_ItemIssueSeveritySchema: GenMessage<ProductView_ItemIssue_ItemIssueSeverity> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 4, 0, 1);

/**
 * Issue severity per reporting context.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueSeverity.IssueSeverityPerReportingContext
 */
export type ProductView_ItemIssue_ItemIssueSeverity_IssueSeverityPerReportingContext = Message<"google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueSeverity.IssueSeverityPerReportingContext"> & {
  /**
   * Reporting context the issue applies to.
   *
   * @generated from field: optional google.shopping.type.ReportingContext.ReportingContextEnum reporting_context = 1;
   */
  reportingContext?: ReportingContext_ReportingContextEnum;

  /**
   * List of disapproved countries in the reporting context, represented
   * in ISO 3166 format.
   *
   * @generated from field: repeated string disapproved_countries = 2;
   */
  disapprovedCountries: string[];

  /**
   * List of demoted countries in the reporting context, represented in
   * ISO 3166 format.
   *
   * @generated from field: repeated string demoted_countries = 3;
   */
  demotedCountries: string[];
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueSeverity.IssueSeverityPerReportingContext.
 * Use `create(ProductView_ItemIssue_ItemIssueSeverity_IssueSeverityPerReportingContextSchema)` to create a new message.
 */
export const ProductView_ItemIssue_ItemIssueSeverity_IssueSeverityPerReportingContextSchema: GenMessage<ProductView_ItemIssue_ItemIssueSeverity_IssueSeverityPerReportingContext> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 4, 0, 1, 0);

/**
 * Issue severity aggregated for all reporting contexts.
 *
 * @generated from enum google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueSeverity.AggregatedIssueSeverity
 */
export enum ProductView_ItemIssue_ItemIssueSeverity_AggregatedIssueSeverity {
  /**
   * Not specified.
   *
   * @generated from enum value: AGGREGATED_ISSUE_SEVERITY_UNSPECIFIED = 0;
   */
  AGGREGATED_ISSUE_SEVERITY_UNSPECIFIED = 0,

  /**
   * Issue disapproves the product in at least one reporting context.
   *
   * @generated from enum value: DISAPPROVED = 1;
   */
  DISAPPROVED = 1,

  /**
   * Issue demotes the product in all reporting contexts it affects.
   *
   * @generated from enum value: DEMOTED = 2;
   */
  DEMOTED = 2,

  /**
   * Issue resolution is `PENDING_PROCESSING`.
   *
   * @generated from enum value: PENDING = 3;
   */
  PENDING = 3,
}

/**
 * Describes the enum google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueSeverity.AggregatedIssueSeverity.
 */
export const ProductView_ItemIssue_ItemIssueSeverity_AggregatedIssueSeveritySchema: GenEnum<ProductView_ItemIssue_ItemIssueSeverity_AggregatedIssueSeverity> = /*@__PURE__*/
  enumDesc(file_google_shopping_merchant_reports_v1beta_reports, 4, 0, 1, 0);

/**
 * How to resolve the issue.
 *
 * @generated from enum google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueResolution
 */
export enum ProductView_ItemIssue_ItemIssueResolution {
  /**
   * Not specified.
   *
   * @generated from enum value: ITEM_ISSUE_RESOLUTION_UNSPECIFIED = 0;
   */
  ITEM_ISSUE_RESOLUTION_UNSPECIFIED = 0,

  /**
   * The merchant has to fix the issue.
   *
   * @generated from enum value: MERCHANT_ACTION = 1;
   */
  MERCHANT_ACTION = 1,

  /**
   * The issue will be resolved automatically (for example, image crawl) or
   * through a Google review. No merchant action is required now. Resolution
   * might lead to another issue (for example, if crawl fails).
   *
   * @generated from enum value: PENDING_PROCESSING = 2;
   */
  PENDING_PROCESSING = 2,
}

/**
 * Describes the enum google.shopping.merchant.reports.v1beta.ProductView.ItemIssue.ItemIssueResolution.
 */
export const ProductView_ItemIssue_ItemIssueResolutionSchema: GenEnum<ProductView_ItemIssue_ItemIssueResolution> = /*@__PURE__*/
  enumDesc(file_google_shopping_merchant_reports_v1beta_reports, 4, 0, 0);

/**
 * Status of the product aggregated for all reporting contexts.
 *
 * Here's an example of how the aggregated status is computed:
 *
 * Free listings | Shopping ads | Status
 * --------------|--------------|------------------------------
 * Approved      | Approved     | ELIGIBLE
 * Approved      | Pending      | ELIGIBLE
 * Approved      | Disapproved  | ELIGIBLE_LIMITED
 * Pending       | Pending      | PENDING
 * Disapproved   | Disapproved  | NOT_ELIGIBLE_OR_DISAPPROVED
 *
 *
 *
 * @generated from enum google.shopping.merchant.reports.v1beta.ProductView.AggregatedReportingContextStatus
 */
export enum ProductView_AggregatedReportingContextStatus {
  /**
   * Not specified.
   *
   * @generated from enum value: AGGREGATED_REPORTING_CONTEXT_STATUS_UNSPECIFIED = 0;
   */
  AGGREGATED_REPORTING_CONTEXT_STATUS_UNSPECIFIED = 0,

  /**
   * Product is not eligible or is disapproved for all reporting contexts.
   *
   * @generated from enum value: NOT_ELIGIBLE_OR_DISAPPROVED = 1;
   */
  NOT_ELIGIBLE_OR_DISAPPROVED = 1,

  /**
   * Product's status is pending in all reporting contexts.
   *
   * @generated from enum value: PENDING = 2;
   */
  PENDING = 2,

  /**
   * Product is eligible for some (but not all) reporting contexts.
   *
   * @generated from enum value: ELIGIBLE_LIMITED = 3;
   */
  ELIGIBLE_LIMITED = 3,

  /**
   * Product is eligible for all reporting contexts.
   *
   * @generated from enum value: ELIGIBLE = 4;
   */
  ELIGIBLE = 4,
}

/**
 * Describes the enum google.shopping.merchant.reports.v1beta.ProductView.AggregatedReportingContextStatus.
 */
export const ProductView_AggregatedReportingContextStatusSchema: GenEnum<ProductView_AggregatedReportingContextStatus> = /*@__PURE__*/
  enumDesc(file_google_shopping_merchant_reports_v1beta_reports, 4, 0);

/**
 * A product's [click
 * potential](https://support.google.com/merchants/answer/188488) estimates
 * its performance potential compared to highest performing products of the
 * merchant. Click potential of a product helps merchants to prioritize which
 * products to fix and helps them understand how products are performing
 * against their potential.
 *
 * @generated from enum google.shopping.merchant.reports.v1beta.ProductView.ClickPotential
 */
export enum ProductView_ClickPotential {
  /**
   * Unknown predicted clicks impact.
   *
   * @generated from enum value: CLICK_POTENTIAL_UNSPECIFIED = 0;
   */
  CLICK_POTENTIAL_UNSPECIFIED = 0,

  /**
   * Potential to receive a low number of clicks compared to the highest
   * performing products of the merchant.
   *
   * @generated from enum value: LOW = 1;
   */
  LOW = 1,

  /**
   * Potential to receive a moderate number of clicks compared to the highest
   * performing products of the merchant.
   *
   * @generated from enum value: MEDIUM = 2;
   */
  MEDIUM = 2,

  /**
   * Potential to receive a similar number of clicks as the highest performing
   * products of the merchant.
   *
   * @generated from enum value: HIGH = 3;
   */
  HIGH = 3,
}

/**
 * Describes the enum google.shopping.merchant.reports.v1beta.ProductView.ClickPotential.
 */
export const ProductView_ClickPotentialSchema: GenEnum<ProductView_ClickPotential> = /*@__PURE__*/
  enumDesc(file_google_shopping_merchant_reports_v1beta_reports, 4, 1);

/**
 * Fields available for query in `price_competitiveness_product_view` table.
 *
 * [Price competitiveness](https://support.google.com/merchants/answer/9626903)
 * report.
 *
 * Values are only set for fields requested explicitly in the request's search
 * query.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.PriceCompetitivenessProductView
 */
export type PriceCompetitivenessProductView = Message<"google.shopping.merchant.reports.v1beta.PriceCompetitivenessProductView"> & {
  /**
   * Country of the price benchmark. Represented in the ISO 3166 format.
   *
   * Required in the `SELECT` clause.
   *
   * @generated from field: optional string report_country_code = 1;
   */
  reportCountryCode?: string;

  /**
   * REST ID of the product, in the form of
   * `channel~languageCode~feedLabel~offerId`. Can be used to join data with the
   * `product_view` table.
   *
   * Required in the `SELECT` clause.
   *
   * @generated from field: optional string id = 2;
   */
  id?: string;

  /**
   * Merchant-provided id of the product.
   *
   * @generated from field: optional string offer_id = 3;
   */
  offerId?: string;

  /**
   * Title of the product.
   *
   * @generated from field: optional string title = 4;
   */
  title?: string;

  /**
   * Brand of the product.
   *
   * @generated from field: optional string brand = 5;
   */
  brand?: string;

  /**
   * Product category (1st level) in [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l1 = 6;
   */
  categoryL1?: string;

  /**
   * Product category (2nd level) in [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l2 = 7;
   */
  categoryL2?: string;

  /**
   * Product category (3rd level) in [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l3 = 8;
   */
  categoryL3?: string;

  /**
   * Product category (4th level) in [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l4 = 9;
   */
  categoryL4?: string;

  /**
   * Product category (5th level) in [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l5 = 10;
   */
  categoryL5?: string;

  /**
   * Product type (1st level) in merchant's own [product
   * taxonomy](https://support.google.com/merchants/answer/6324406).
   *
   * @generated from field: optional string product_type_l1 = 11;
   */
  productTypeL1?: string;

  /**
   * Product type (2nd level) in merchant's own [product
   * taxonomy](https://support.google.com/merchants/answer/6324406).
   *
   * @generated from field: optional string product_type_l2 = 12;
   */
  productTypeL2?: string;

  /**
   * Product type (3rd level) in merchant's own [product
   * taxonomy](https://support.google.com/merchants/answer/6324406).
   *
   * @generated from field: optional string product_type_l3 = 13;
   */
  productTypeL3?: string;

  /**
   * Product type (4th level) in merchant's own [product
   * taxonomy](https://support.google.com/merchants/answer/6324406).
   *
   * @generated from field: optional string product_type_l4 = 14;
   */
  productTypeL4?: string;

  /**
   * Product type (5th level) in merchant's own [product
   * taxonomy](https://support.google.com/merchants/answer/6324406).
   *
   * @generated from field: optional string product_type_l5 = 15;
   */
  productTypeL5?: string;

  /**
   * Current price of the product.
   *
   * @generated from field: google.shopping.type.Price price = 16;
   */
  price?: Price;

  /**
   * Latest available price benchmark for the product's catalog in the benchmark
   * country.
   *
   * @generated from field: google.shopping.type.Price benchmark_price = 17;
   */
  benchmarkPrice?: Price;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.PriceCompetitivenessProductView.
 * Use `create(PriceCompetitivenessProductViewSchema)` to create a new message.
 */
export const PriceCompetitivenessProductViewSchema: GenMessage<PriceCompetitivenessProductView> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 5);

/**
 * Fields available for query in `price_insights_product_view` table.
 *
 * [Price insights](https://support.google.com/merchants/answer/11916926)
 * report.
 *
 * Values are only set for fields requested explicitly in the request's search
 * query.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.PriceInsightsProductView
 */
export type PriceInsightsProductView = Message<"google.shopping.merchant.reports.v1beta.PriceInsightsProductView"> & {
  /**
   * REST ID of the product, in the form of
   * `channel~languageCode~feedLabel~offerId`. Can be used to join data with the
   * `product_view` table.
   *
   * Required in the `SELECT` clause.
   *
   * @generated from field: optional string id = 1;
   */
  id?: string;

  /**
   * Merchant-provided id of the product.
   *
   * @generated from field: optional string offer_id = 2;
   */
  offerId?: string;

  /**
   * Title of the product.
   *
   * @generated from field: optional string title = 3;
   */
  title?: string;

  /**
   * Brand of the product.
   *
   * @generated from field: optional string brand = 4;
   */
  brand?: string;

  /**
   * Product category (1st level) in [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l1 = 5;
   */
  categoryL1?: string;

  /**
   * Product category (2nd level) in [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l2 = 6;
   */
  categoryL2?: string;

  /**
   * Product category (3rd level) in [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l3 = 7;
   */
  categoryL3?: string;

  /**
   * Product category (4th level) in [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l4 = 8;
   */
  categoryL4?: string;

  /**
   * Product category (5th level) in [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l5 = 9;
   */
  categoryL5?: string;

  /**
   * Product type (1st level) in merchant's own [product
   * taxonomy](https://support.google.com/merchants/answer/6324406).
   *
   * @generated from field: optional string product_type_l1 = 10;
   */
  productTypeL1?: string;

  /**
   * Product type (2nd level) in merchant's own [product
   * taxonomy](https://support.google.com/merchants/answer/6324406).
   *
   * @generated from field: optional string product_type_l2 = 11;
   */
  productTypeL2?: string;

  /**
   * Product type (3rd level) in merchant's own [product
   * taxonomy](https://support.google.com/merchants/answer/6324406).
   *
   * @generated from field: optional string product_type_l3 = 12;
   */
  productTypeL3?: string;

  /**
   * Product type (4th level) in merchant's own [product
   * taxonomy](https://support.google.com/merchants/answer/6324406).
   *
   * @generated from field: optional string product_type_l4 = 13;
   */
  productTypeL4?: string;

  /**
   * Product type (5th level) in merchant's own [product
   * taxonomy](https://support.google.com/merchants/answer/6324406).
   *
   * @generated from field: optional string product_type_l5 = 14;
   */
  productTypeL5?: string;

  /**
   * Current price of the product.
   *
   * @generated from field: google.shopping.type.Price price = 15;
   */
  price?: Price;

  /**
   * Latest suggested price for the product.
   *
   * @generated from field: google.shopping.type.Price suggested_price = 16;
   */
  suggestedPrice?: Price;

  /**
   * Predicted change in impressions as a fraction after introducing the
   * suggested price compared to current active price. For example, 0.05 is a 5%
   * predicted increase in impressions.
   *
   * @generated from field: optional double predicted_impressions_change_fraction = 17;
   */
  predictedImpressionsChangeFraction?: number;

  /**
   * Predicted change in clicks as a fraction after introducing the
   * suggested price compared to current active price. For example, 0.05 is a 5%
   * predicted increase in clicks.
   *
   * @generated from field: optional double predicted_clicks_change_fraction = 18;
   */
  predictedClicksChangeFraction?: number;

  /**
   * Predicted change in conversions as a fraction after introducing the
   * suggested price compared to current active price. For example, 0.05 is a 5%
   * predicted increase in conversions).
   *
   * @generated from field: optional double predicted_conversions_change_fraction = 19;
   */
  predictedConversionsChangeFraction?: number;

  /**
   * The predicted effectiveness of applying the price suggestion, bucketed.
   *
   * @generated from field: google.shopping.merchant.reports.v1beta.PriceInsightsProductView.Effectiveness effectiveness = 22;
   */
  effectiveness: PriceInsightsProductView_Effectiveness;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.PriceInsightsProductView.
 * Use `create(PriceInsightsProductViewSchema)` to create a new message.
 */
export const PriceInsightsProductViewSchema: GenMessage<PriceInsightsProductView> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 6);

/**
 * Predicted effectiveness bucket.
 *
 * Effectiveness indicates which products would benefit most from price
 * changes. This rating takes into consideration the performance boost
 * predicted by adjusting the sale price and the difference between your
 * current price and the suggested price. Price suggestions with `HIGH`
 * effectiveness are predicted to drive the largest increase in performance.
 *
 * @generated from enum google.shopping.merchant.reports.v1beta.PriceInsightsProductView.Effectiveness
 */
export enum PriceInsightsProductView_Effectiveness {
  /**
   * Effectiveness is unknown.
   *
   * @generated from enum value: EFFECTIVENESS_UNSPECIFIED = 0;
   */
  EFFECTIVENESS_UNSPECIFIED = 0,

  /**
   * Effectiveness is low.
   *
   * @generated from enum value: LOW = 1;
   */
  LOW = 1,

  /**
   * Effectiveness is medium.
   *
   * @generated from enum value: MEDIUM = 2;
   */
  MEDIUM = 2,

  /**
   * Effectiveness is high.
   *
   * @generated from enum value: HIGH = 3;
   */
  HIGH = 3,
}

/**
 * Describes the enum google.shopping.merchant.reports.v1beta.PriceInsightsProductView.Effectiveness.
 */
export const PriceInsightsProductView_EffectivenessSchema: GenEnum<PriceInsightsProductView_Effectiveness> = /*@__PURE__*/
  enumDesc(file_google_shopping_merchant_reports_v1beta_reports, 6, 0);

/**
 * Fields available for query in `best_sellers_product_cluster_view` table.
 *
 * [Best sellers](https://support.google.com/merchants/answer/9488679) report
 * with top product clusters. A product cluster is a grouping for different
 * offers and variants that represent the same product, for example, Google
 * Pixel 7.
 *
 * Values are only set for fields requested explicitly in the request's search
 * query.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.BestSellersProductClusterView
 */
export type BestSellersProductClusterView = Message<"google.shopping.merchant.reports.v1beta.BestSellersProductClusterView"> & {
  /**
   * Report date. The value of this field can only be one of the following:
   *
   * *   The first day of the week (Monday) for weekly reports,
   * *   The first day of the month for monthly reports.
   *
   * Required in the `SELECT` clause. If a `WHERE` condition on `report_date` is
   * not specified in the query, the latest available weekly or monthly report
   * is returned.
   *
   * @generated from field: google.type.Date report_date = 1;
   */
  reportDate?: Date;

  /**
   * Granularity of the report. The ranking can be done over a week or a month
   * timeframe.
   *
   * Required in the `SELECT` clause. Condition on `report_granularity` is
   * required in the `WHERE` clause.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.ReportGranularity.ReportGranularityEnum report_granularity = 2;
   */
  reportGranularity?: ReportGranularity_ReportGranularityEnum;

  /**
   * Country where the ranking is calculated. Represented in the ISO 3166
   * format.
   *
   * Required in the `SELECT` clause. Condition on `report_country_code` is
   * required in the `WHERE` clause.
   *
   * @generated from field: optional string report_country_code = 3;
   */
  reportCountryCode?: string;

  /**
   * Google product category ID to calculate the ranking for, represented in
   * [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * Required in the `SELECT` clause. If a `WHERE` condition on
   * `report_category_id` is not specified in the query, rankings for all
   * top-level categories are returned.
   *
   * @generated from field: optional int64 report_category_id = 4;
   */
  reportCategoryId?: bigint;

  /**
   * Title of the product cluster.
   *
   * @generated from field: optional string title = 6;
   */
  title?: string;

  /**
   * Brand of the product cluster.
   *
   * @generated from field: optional string brand = 7;
   */
  brand?: string;

  /**
   * Product category (1st level) of the product cluster, represented in
   * [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l1 = 8;
   */
  categoryL1?: string;

  /**
   * Product category (2nd level) of the product cluster, represented in
   * [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l2 = 9;
   */
  categoryL2?: string;

  /**
   * Product category (3rd level) of the product cluster, represented in
   * [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l3 = 10;
   */
  categoryL3?: string;

  /**
   * Product category (4th level) of the product cluster, represented in
   * [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l4 = 11;
   */
  categoryL4?: string;

  /**
   * Product category (5th level) of the product cluster, represented in
   * [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * @generated from field: optional string category_l5 = 12;
   */
  categoryL5?: string;

  /**
   * GTINs of example variants of the product cluster.
   *
   * @generated from field: repeated string variant_gtins = 13;
   */
  variantGtins: string[];

  /**
   * Whether the product cluster is `IN_STOCK` in your product data source in at
   * least one of the countries, `OUT_OF_STOCK` in your product data source in
   * all countries, or `NOT_IN_INVENTORY` at all.
   *
   * The field doesn't take the Best sellers report country filter into account.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.BestSellersProductClusterView.InventoryStatus inventory_status = 14;
   */
  inventoryStatus?: BestSellersProductClusterView_InventoryStatus;

  /**
   * Whether there is at least one product of the brand currently `IN_STOCK` in
   * your product data source in at least one of the countries, all products are
   * `OUT_OF_STOCK` in your product data source in all countries, or
   * `NOT_IN_INVENTORY`.
   *
   * The field doesn't take the Best sellers report country filter into account.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.BestSellersProductClusterView.InventoryStatus brand_inventory_status = 15;
   */
  brandInventoryStatus?: BestSellersProductClusterView_InventoryStatus;

  /**
   * Popularity of the product cluster on Ads and organic surfaces, in the
   * selected category and country, based on the estimated number of units sold.
   *
   * @generated from field: optional int64 rank = 16;
   */
  rank?: bigint;

  /**
   * Popularity rank in the previous week or month.
   *
   * @generated from field: optional int64 previous_rank = 17;
   */
  previousRank?: bigint;

  /**
   * Estimated demand in relation to the product cluster with the highest
   * popularity rank in the same category and country.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.RelativeDemand.RelativeDemandEnum relative_demand = 18;
   */
  relativeDemand?: RelativeDemand_RelativeDemandEnum;

  /**
   * Estimated demand in relation to the product cluster with the highest
   * popularity rank in the same category and country in the previous week or
   * month.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.RelativeDemand.RelativeDemandEnum previous_relative_demand = 19;
   */
  previousRelativeDemand?: RelativeDemand_RelativeDemandEnum;

  /**
   * Change in the estimated demand. Whether it rose, sank or remained flat.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.RelativeDemandChangeType.RelativeDemandChangeTypeEnum relative_demand_change = 20;
   */
  relativeDemandChange?: RelativeDemandChangeType_RelativeDemandChangeTypeEnum;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.BestSellersProductClusterView.
 * Use `create(BestSellersProductClusterViewSchema)` to create a new message.
 */
export const BestSellersProductClusterViewSchema: GenMessage<BestSellersProductClusterView> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 7);

/**
 * Status of the product cluster or brand in your inventory.
 *
 * @generated from enum google.shopping.merchant.reports.v1beta.BestSellersProductClusterView.InventoryStatus
 */
export enum BestSellersProductClusterView_InventoryStatus {
  /**
   * Not specified.
   *
   * @generated from enum value: INVENTORY_STATUS_UNSPECIFIED = 0;
   */
  INVENTORY_STATUS_UNSPECIFIED = 0,

  /**
   * You have a product for this product cluster or brand in stock.
   *
   * @generated from enum value: IN_STOCK = 1;
   */
  IN_STOCK = 1,

  /**
   * You have a product for this product cluster or brand in inventory but it
   * is currently out of stock.
   *
   * @generated from enum value: OUT_OF_STOCK = 2;
   */
  OUT_OF_STOCK = 2,

  /**
   * You do not have a product for this product cluster or brand in inventory.
   *
   * @generated from enum value: NOT_IN_INVENTORY = 3;
   */
  NOT_IN_INVENTORY = 3,
}

/**
 * Describes the enum google.shopping.merchant.reports.v1beta.BestSellersProductClusterView.InventoryStatus.
 */
export const BestSellersProductClusterView_InventoryStatusSchema: GenEnum<BestSellersProductClusterView_InventoryStatus> = /*@__PURE__*/
  enumDesc(file_google_shopping_merchant_reports_v1beta_reports, 7, 0);

/**
 * Fields available for query in `best_sellers_brand_view` table.
 *
 * [Best sellers](https://support.google.com/merchants/answer/9488679) report
 * with top brands.
 *
 * Values are only set for fields requested explicitly in the request's search
 * query.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.BestSellersBrandView
 */
export type BestSellersBrandView = Message<"google.shopping.merchant.reports.v1beta.BestSellersBrandView"> & {
  /**
   * Report date. The value of this field can only be one of the following:
   *
   * *   The first day of the week (Monday) for weekly reports,
   * *   The first day of the month for monthly reports.
   *
   * Required in the `SELECT` clause. If a `WHERE` condition on `report_date` is
   * not specified in the query, the latest available weekly or monthly report
   * is returned.
   *
   * @generated from field: google.type.Date report_date = 1;
   */
  reportDate?: Date;

  /**
   * Granularity of the report. The ranking can be done over a week or a month
   * timeframe.
   *
   * Required in the `SELECT` clause. Condition on `report_granularity` is
   * required in the `WHERE` clause.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.ReportGranularity.ReportGranularityEnum report_granularity = 2;
   */
  reportGranularity?: ReportGranularity_ReportGranularityEnum;

  /**
   * Country where the ranking is calculated. Represented in the ISO 3166
   * format.
   *
   * Required in the `SELECT` clause. Condition on `report_country_code` is
   * required in the `WHERE` clause.
   *
   * @generated from field: optional string report_country_code = 3;
   */
  reportCountryCode?: string;

  /**
   * Google product category ID to calculate the ranking for, represented in
   * [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * Required in the `SELECT` clause. If a `WHERE` condition on
   * `report_category_id` is not specified in the query, rankings for all
   * top-level categories are returned.
   *
   * @generated from field: optional int64 report_category_id = 4;
   */
  reportCategoryId?: bigint;

  /**
   * Name of the brand.
   *
   * @generated from field: optional string brand = 6;
   */
  brand?: string;

  /**
   * Popularity of the brand on Ads and organic surfaces, in the selected
   * category and country, based on the estimated number of units sold.
   *
   * @generated from field: optional int64 rank = 7;
   */
  rank?: bigint;

  /**
   * Popularity rank in the previous week or month.
   *
   * @generated from field: optional int64 previous_rank = 8;
   */
  previousRank?: bigint;

  /**
   * Estimated demand in relation to the brand with the highest popularity rank
   * in the same category and country.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.RelativeDemand.RelativeDemandEnum relative_demand = 9;
   */
  relativeDemand?: RelativeDemand_RelativeDemandEnum;

  /**
   * Estimated demand in relation to the brand with the highest popularity rank
   * in the same category and country in the previous week or month.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.RelativeDemand.RelativeDemandEnum previous_relative_demand = 10;
   */
  previousRelativeDemand?: RelativeDemand_RelativeDemandEnum;

  /**
   * Change in the estimated demand. Whether it rose, sank or remained flat.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.RelativeDemandChangeType.RelativeDemandChangeTypeEnum relative_demand_change = 11;
   */
  relativeDemandChange?: RelativeDemandChangeType_RelativeDemandChangeTypeEnum;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.BestSellersBrandView.
 * Use `create(BestSellersBrandViewSchema)` to create a new message.
 */
export const BestSellersBrandViewSchema: GenMessage<BestSellersBrandView> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 8);

/**
 * Fields available for query in `non_product_performance_view` table.
 *
 * Performance data on images and online store links leading to your non-product
 * pages. This includes performance metrics (for example, `clicks`)
 * and dimensions according to which performance metrics are segmented (for
 * example, `date`).
 *
 * Segment fields cannot be selected in queries without also selecting at least
 * one metric field.
 *
 * Values are only set for fields requested explicitly in the request's search
 * query.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.NonProductPerformanceView
 */
export type NonProductPerformanceView = Message<"google.shopping.merchant.reports.v1beta.NonProductPerformanceView"> & {
  /**
   * Date in the merchant timezone to which metrics apply. Segment.
   *
   * Condition on `date` is required in the `WHERE` clause.
   *
   * @generated from field: google.type.Date date = 1;
   */
  date?: Date;

  /**
   * First day of the week (Monday) of the metrics date in the merchant
   * timezone. Segment.
   *
   * @generated from field: google.type.Date week = 2;
   */
  week?: Date;

  /**
   * Number of clicks on images and online store links leading to your
   * non-product pages. Metric.
   *
   * @generated from field: optional int64 clicks = 3;
   */
  clicks?: bigint;

  /**
   * Number of times images and online store links leading to your non-product
   * pages were shown. Metric.
   *
   * @generated from field: optional int64 impressions = 4;
   */
  impressions?: bigint;

  /**
   * Click-through rate - the number of clicks (`clicks`) divided by the number
   * of impressions (`impressions`) of images and online store links leading to
   * your non-product pages. Metric.
   *
   * @generated from field: optional double click_through_rate = 5;
   */
  clickThroughRate?: number;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.NonProductPerformanceView.
 * Use `create(NonProductPerformanceViewSchema)` to create a new message.
 */
export const NonProductPerformanceViewSchema: GenMessage<NonProductPerformanceView> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 9);

/**
 * Fields available for query in `competitive_visibility_competitor_view` table.
 *
 * [Competitive
 * visibility](https://support.google.com/merchants/answer/11366442) report with
 * businesses with similar visibility.
 *
 * Values are only set for fields requested explicitly in the request's search
 * query.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.CompetitiveVisibilityCompetitorView
 */
export type CompetitiveVisibilityCompetitorView = Message<"google.shopping.merchant.reports.v1beta.CompetitiveVisibilityCompetitorView"> & {
  /**
   * Date of this row.
   *
   * A condition on `date` is required in the `WHERE` clause.
   *
   * @generated from field: google.type.Date date = 1;
   */
  date?: Date;

  /**
   * Domain of your competitor or your domain, if 'is_your_domain' is true.
   *
   * Required in the `SELECT` clause. Cannot be filtered on in the 'WHERE'
   * clause.
   *
   * @generated from field: optional string domain = 2;
   */
  domain?: string;

  /**
   * True if this row contains data for your domain.
   *
   * Cannot be filtered on in the 'WHERE' clause.
   *
   * @generated from field: optional bool is_your_domain = 3;
   */
  isYourDomain?: boolean;

  /**
   * Country where impressions appeared.
   *
   * Required in the `SELECT` clause. A condition on `report_country_code` is
   * required in the `WHERE` clause.
   *
   * @generated from field: optional string report_country_code = 4;
   */
  reportCountryCode?: string;

  /**
   * Google product category ID to calculate the report for, represented in
   * [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * Required in the `SELECT` clause. A condition on `report_category_id` is
   * required in the `WHERE` clause.
   *
   * @generated from field: optional int64 report_category_id = 5;
   */
  reportCategoryId?: bigint;

  /**
   * Traffic source of impressions.
   *
   * Required in the `SELECT` clause.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.TrafficSource.TrafficSourceEnum traffic_source = 6;
   */
  trafficSource?: TrafficSource_TrafficSourceEnum;

  /**
   * Position of the domain in the similar businesses ranking for the selected
   * keys (`date`, `report_category_id`, `report_country_code`,
   * `traffic_source`) based on impressions. 1 is the highest.
   *
   * Cannot be filtered on in the 'WHERE' clause.
   *
   * @generated from field: optional int64 rank = 7;
   */
  rank?: bigint;

  /**
   * [Ads / organic ratio]
   * (https://support.google.com/merchants/answer/11366442#zippy=%2Cads-free-ratio)
   * shows how often the domain receives impressions from Shopping ads compared
   * to organic traffic. The number is rounded and bucketed.
   *
   * Cannot be filtered on in the 'WHERE' clause.
   *
   * @generated from field: optional double ads_organic_ratio = 8;
   */
  adsOrganicRatio?: number;

  /**
   * [Page overlap rate]
   * (https://support.google.com/merchants/answer/11366442#zippy=%2Cpage-overlap-rate)
   * shows how frequently competing retailers’ offers are shown together with
   * your offers on the same page.
   *
   * Cannot be filtered on in the 'WHERE' clause.
   *
   * @generated from field: optional double page_overlap_rate = 9;
   */
  pageOverlapRate?: number;

  /**
   * [Higher position rate]
   * (https://support.google.com/merchants/answer/11366442#zippy=%2Chigher-position-rate)
   * shows how often a competitor’s offer got placed in a higher position on the
   * page than your offer.
   *
   * Cannot be filtered on in the 'WHERE' clause.
   *
   * @generated from field: optional double higher_position_rate = 10;
   */
  higherPositionRate?: number;

  /**
   * [Relative visibility]
   * (https://support.google.com/merchants/answer/11366442#zippy=%2Crelative-visibility)
   * shows how often your competitors’ offers are shown compared to your offers.
   * In other words, this is the number of displayed impressions of a competitor
   * retailer divided by the number of your displayed impressions during a
   * selected time range for a selected product category and country.
   *
   * Cannot be filtered on in the 'WHERE' clause.
   *
   * @generated from field: optional double relative_visibility = 11;
   */
  relativeVisibility?: number;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.CompetitiveVisibilityCompetitorView.
 * Use `create(CompetitiveVisibilityCompetitorViewSchema)` to create a new message.
 */
export const CompetitiveVisibilityCompetitorViewSchema: GenMessage<CompetitiveVisibilityCompetitorView> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 10);

/**
 * Fields available for query in `competitive_visibility_top_merchant_view`
 * table.
 *
 * [Competitive
 * visibility](https://support.google.com/merchants/answer/11366442) report with
 * business with highest visibility.
 *
 * Values are only set for fields requested explicitly in the request's search
 * query.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.CompetitiveVisibilityTopMerchantView
 */
export type CompetitiveVisibilityTopMerchantView = Message<"google.shopping.merchant.reports.v1beta.CompetitiveVisibilityTopMerchantView"> & {
  /**
   * Date of this row.
   *
   * Cannot be selected in the `SELECT` clause. A condition on `date` is
   * required in the `WHERE` clause.
   *
   * @generated from field: google.type.Date date = 1;
   */
  date?: Date;

  /**
   * Domain of your competitor or your domain, if 'is_your_domain' is true.
   *
   * Required in the `SELECT` clause. Cannot be filtered on in the 'WHERE'
   * clause.
   *
   * @generated from field: optional string domain = 2;
   */
  domain?: string;

  /**
   * True if this row contains data for your domain.
   *
   * Cannot be filtered on in the 'WHERE' clause.
   *
   * @generated from field: optional bool is_your_domain = 3;
   */
  isYourDomain?: boolean;

  /**
   * Country where impressions appeared.
   *
   * Required in the `SELECT` clause. A condition on `report_country_code` is
   * required in the `WHERE` clause.
   *
   * @generated from field: optional string report_country_code = 4;
   */
  reportCountryCode?: string;

  /**
   * Google product category ID to calculate the report for, represented in
   * [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * Required in the `SELECT` clause. A condition on `report_category_id` is
   * required in the `WHERE` clause.
   *
   * @generated from field: optional int64 report_category_id = 5;
   */
  reportCategoryId?: bigint;

  /**
   * Traffic source of impressions.
   *
   * Required in the `SELECT` clause.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.TrafficSource.TrafficSourceEnum traffic_source = 6;
   */
  trafficSource?: TrafficSource_TrafficSourceEnum;

  /**
   * Position of the domain in the top merchants ranking for the selected keys
   * (`date`, `report_category_id`, `report_country_code`, `traffic_source`)
   * based on impressions. 1 is the highest.
   *
   * Cannot be filtered on in the 'WHERE' clause.
   *
   * @generated from field: optional int64 rank = 7;
   */
  rank?: bigint;

  /**
   * [Ads / organic ratio]
   * (https://support.google.com/merchants/answer/11366442#zippy=%2Cads-free-ratio)
   * shows how often the domain receives impressions from Shopping ads compared
   * to organic traffic. The number is rounded and bucketed.
   *
   * Cannot be filtered on in the 'WHERE' clause.
   *
   * @generated from field: optional double ads_organic_ratio = 8;
   */
  adsOrganicRatio?: number;

  /**
   * [Page overlap rate]
   * (https://support.google.com/merchants/answer/11366442#zippy=%2Cpage-overlap-rate)
   * shows how frequently competing retailers’ offers are shown together with
   * your offers on the same page.
   *
   * Cannot be filtered on in the 'WHERE' clause.
   *
   * @generated from field: optional double page_overlap_rate = 9;
   */
  pageOverlapRate?: number;

  /**
   * [Higher position rate]
   * (https://support.google.com/merchants/answer/11366442#zippy=%2Chigher-position-rate)
   * shows how often a competitor’s offer got placed in a higher position on the
   * page than your offer.
   *
   * Cannot be filtered on in the 'WHERE' clause.
   *
   * @generated from field: optional double higher_position_rate = 10;
   */
  higherPositionRate?: number;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.CompetitiveVisibilityTopMerchantView.
 * Use `create(CompetitiveVisibilityTopMerchantViewSchema)` to create a new message.
 */
export const CompetitiveVisibilityTopMerchantViewSchema: GenMessage<CompetitiveVisibilityTopMerchantView> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 11);

/**
 * Fields available for query in `competitive_visibility_benchmark_view` table.
 *
 * [Competitive
 * visibility](https://support.google.com/merchants/answer/11366442) report with
 * the category benchmark.
 *
 * Values are only set for fields requested explicitly in the request's search
 * query.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.CompetitiveVisibilityBenchmarkView
 */
export type CompetitiveVisibilityBenchmarkView = Message<"google.shopping.merchant.reports.v1beta.CompetitiveVisibilityBenchmarkView"> & {
  /**
   * Date of this row.
   *
   * Required in the `SELECT` clause. A condition on `date` is required in the
   * `WHERE` clause.
   *
   * @generated from field: google.type.Date date = 1;
   */
  date?: Date;

  /**
   * Country where impressions appeared.
   *
   * Required in the `SELECT` clause. A condition on `report_country_code` is
   * required in the `WHERE` clause.
   *
   * @generated from field: optional string report_country_code = 2;
   */
  reportCountryCode?: string;

  /**
   * Google product category ID to calculate the report for, represented in
   * [Google's product
   * taxonomy](https://support.google.com/merchants/answer/6324436).
   *
   * Required in the `SELECT` clause. A condition on `report_category_id` is
   * required in the `WHERE` clause.
   *
   * @generated from field: optional int64 report_category_id = 3;
   */
  reportCategoryId?: bigint;

  /**
   * Traffic source of impressions.
   *
   * Required in the `SELECT` clause.
   *
   * @generated from field: optional google.shopping.merchant.reports.v1beta.TrafficSource.TrafficSourceEnum traffic_source = 4;
   */
  trafficSource?: TrafficSource_TrafficSourceEnum;

  /**
   * Change in visibility based on impressions for your domain with respect to
   * the start of the selected time range (or first day with non-zero
   * impressions).
   *
   * Cannot be filtered on in the 'WHERE' clause.
   *
   * @generated from field: optional double your_domain_visibility_trend = 5;
   */
  yourDomainVisibilityTrend?: number;

  /**
   * Change in visibility based on impressions with respect to the start of the
   * selected time range (or first day with non-zero impressions) for a
   * combined set of merchants with highest visibility approximating the
   * market.
   *
   * Cannot be filtered on in the 'WHERE' clause.
   *
   * @generated from field: optional double category_benchmark_visibility_trend = 6;
   */
  categoryBenchmarkVisibilityTrend?: number;
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.CompetitiveVisibilityBenchmarkView.
 * Use `create(CompetitiveVisibilityBenchmarkViewSchema)` to create a new message.
 */
export const CompetitiveVisibilityBenchmarkViewSchema: GenMessage<CompetitiveVisibilityBenchmarkView> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 12);

/**
 * Marketing method used to promote your products on Google (organic versus
 * ads).
 *
 * @generated from message google.shopping.merchant.reports.v1beta.MarketingMethod
 */
export type MarketingMethod = Message<"google.shopping.merchant.reports.v1beta.MarketingMethod"> & {
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.MarketingMethod.
 * Use `create(MarketingMethodSchema)` to create a new message.
 */
export const MarketingMethodSchema: GenMessage<MarketingMethod> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 13);

/**
 * Marketing method values.
 *
 * @generated from enum google.shopping.merchant.reports.v1beta.MarketingMethod.MarketingMethodEnum
 */
export enum MarketingMethod_MarketingMethodEnum {
  /**
   * Not specified.
   *
   * @generated from enum value: MARKETING_METHOD_ENUM_UNSPECIFIED = 0;
   */
  MARKETING_METHOD_ENUM_UNSPECIFIED = 0,

  /**
   * Organic marketing.
   *
   * @generated from enum value: ORGANIC = 1;
   */
  ORGANIC = 1,

  /**
   * Ads-based marketing.
   *
   * @generated from enum value: ADS = 2;
   */
  ADS = 2,
}

/**
 * Describes the enum google.shopping.merchant.reports.v1beta.MarketingMethod.MarketingMethodEnum.
 */
export const MarketingMethod_MarketingMethodEnumSchema: GenEnum<MarketingMethod_MarketingMethodEnum> = /*@__PURE__*/
  enumDesc(file_google_shopping_merchant_reports_v1beta_reports, 13, 0);

/**
 * Granularity of the Best sellers report. Best sellers reports are computed
 * over a week and a month timeframe.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.ReportGranularity
 */
export type ReportGranularity = Message<"google.shopping.merchant.reports.v1beta.ReportGranularity"> & {
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.ReportGranularity.
 * Use `create(ReportGranularitySchema)` to create a new message.
 */
export const ReportGranularitySchema: GenMessage<ReportGranularity> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 14);

/**
 * Report granularity values.
 *
 * @generated from enum google.shopping.merchant.reports.v1beta.ReportGranularity.ReportGranularityEnum
 */
export enum ReportGranularity_ReportGranularityEnum {
  /**
   * Not specified.
   *
   * @generated from enum value: REPORT_GRANULARITY_ENUM_UNSPECIFIED = 0;
   */
  REPORT_GRANULARITY_ENUM_UNSPECIFIED = 0,

  /**
   * Report is computed over a week timeframe.
   *
   * @generated from enum value: WEEKLY = 1;
   */
  WEEKLY = 1,

  /**
   * Report is computed over a month timeframe.
   *
   * @generated from enum value: MONTHLY = 2;
   */
  MONTHLY = 2,
}

/**
 * Describes the enum google.shopping.merchant.reports.v1beta.ReportGranularity.ReportGranularityEnum.
 */
export const ReportGranularity_ReportGranularityEnumSchema: GenEnum<ReportGranularity_ReportGranularityEnum> = /*@__PURE__*/
  enumDesc(file_google_shopping_merchant_reports_v1beta_reports, 14, 0);

/**
 * Relative demand of a product cluster or brand in the Best sellers report.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.RelativeDemand
 */
export type RelativeDemand = Message<"google.shopping.merchant.reports.v1beta.RelativeDemand"> & {
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.RelativeDemand.
 * Use `create(RelativeDemandSchema)` to create a new message.
 */
export const RelativeDemandSchema: GenMessage<RelativeDemand> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 15);

/**
 * Relative demand values.
 *
 * @generated from enum google.shopping.merchant.reports.v1beta.RelativeDemand.RelativeDemandEnum
 */
export enum RelativeDemand_RelativeDemandEnum {
  /**
   * Not specified.
   *
   * @generated from enum value: RELATIVE_DEMAND_ENUM_UNSPECIFIED = 0;
   */
  RELATIVE_DEMAND_ENUM_UNSPECIFIED = 0,

  /**
   * Demand is 0-5% of the demand of the highest ranked product cluster or
   * brand.
   *
   * @generated from enum value: VERY_LOW = 10;
   */
  VERY_LOW = 10,

  /**
   * Demand is 6-10% of the demand of the highest ranked product cluster or
   * brand.
   *
   * @generated from enum value: LOW = 20;
   */
  LOW = 20,

  /**
   * Demand is 11-20% of the demand of the highest ranked product cluster or
   * brand.
   *
   * @generated from enum value: MEDIUM = 30;
   */
  MEDIUM = 30,

  /**
   * Demand is 21-50% of the demand of the highest ranked product cluster or
   * brand.
   *
   * @generated from enum value: HIGH = 40;
   */
  HIGH = 40,

  /**
   * Demand is 51-100% of the demand of the highest ranked product cluster or
   * brand.
   *
   * @generated from enum value: VERY_HIGH = 50;
   */
  VERY_HIGH = 50,
}

/**
 * Describes the enum google.shopping.merchant.reports.v1beta.RelativeDemand.RelativeDemandEnum.
 */
export const RelativeDemand_RelativeDemandEnumSchema: GenEnum<RelativeDemand_RelativeDemandEnum> = /*@__PURE__*/
  enumDesc(file_google_shopping_merchant_reports_v1beta_reports, 15, 0);

/**
 * Relative demand of a product cluster or brand in the Best sellers report
 * compared to the previous time period.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.RelativeDemandChangeType
 */
export type RelativeDemandChangeType = Message<"google.shopping.merchant.reports.v1beta.RelativeDemandChangeType"> & {
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.RelativeDemandChangeType.
 * Use `create(RelativeDemandChangeTypeSchema)` to create a new message.
 */
export const RelativeDemandChangeTypeSchema: GenMessage<RelativeDemandChangeType> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 16);

/**
 * Relative demand change type values.
 *
 * @generated from enum google.shopping.merchant.reports.v1beta.RelativeDemandChangeType.RelativeDemandChangeTypeEnum
 */
export enum RelativeDemandChangeType_RelativeDemandChangeTypeEnum {
  /**
   * Not specified.
   *
   * @generated from enum value: RELATIVE_DEMAND_CHANGE_TYPE_ENUM_UNSPECIFIED = 0;
   */
  RELATIVE_DEMAND_CHANGE_TYPE_ENUM_UNSPECIFIED = 0,

  /**
   * Relative demand is lower than the previous time period.
   *
   * @generated from enum value: SINKER = 1;
   */
  SINKER = 1,

  /**
   * Relative demand is equal to the previous time period.
   *
   * @generated from enum value: FLAT = 2;
   */
  FLAT = 2,

  /**
   * Relative demand is higher than the previous time period.
   *
   * @generated from enum value: RISER = 3;
   */
  RISER = 3,
}

/**
 * Describes the enum google.shopping.merchant.reports.v1beta.RelativeDemandChangeType.RelativeDemandChangeTypeEnum.
 */
export const RelativeDemandChangeType_RelativeDemandChangeTypeEnumSchema: GenEnum<RelativeDemandChangeType_RelativeDemandChangeTypeEnum> = /*@__PURE__*/
  enumDesc(file_google_shopping_merchant_reports_v1beta_reports, 16, 0);

/**
 * Traffic source of impressions in the Competitive visibility report.
 *
 * @generated from message google.shopping.merchant.reports.v1beta.TrafficSource
 */
export type TrafficSource = Message<"google.shopping.merchant.reports.v1beta.TrafficSource"> & {
};

/**
 * Describes the message google.shopping.merchant.reports.v1beta.TrafficSource.
 * Use `create(TrafficSourceSchema)` to create a new message.
 */
export const TrafficSourceSchema: GenMessage<TrafficSource> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_reports_v1beta_reports, 17);

/**
 * Traffic source values.
 *
 * @generated from enum google.shopping.merchant.reports.v1beta.TrafficSource.TrafficSourceEnum
 */
export enum TrafficSource_TrafficSourceEnum {
  /**
   * Not specified.
   *
   * @generated from enum value: TRAFFIC_SOURCE_ENUM_UNSPECIFIED = 0;
   */
  TRAFFIC_SOURCE_ENUM_UNSPECIFIED = 0,

  /**
   * Organic traffic.
   *
   * @generated from enum value: ORGANIC = 1;
   */
  ORGANIC = 1,

  /**
   * Traffic from ads.
   *
   * @generated from enum value: ADS = 2;
   */
  ADS = 2,

  /**
   * Organic and ads traffic.
   *
   * @generated from enum value: ALL = 3;
   */
  ALL = 3,
}

/**
 * Describes the enum google.shopping.merchant.reports.v1beta.TrafficSource.TrafficSourceEnum.
 */
export const TrafficSource_TrafficSourceEnumSchema: GenEnum<TrafficSource_TrafficSourceEnum> = /*@__PURE__*/
  enumDesc(file_google_shopping_merchant_reports_v1beta_reports, 17, 0);

/**
 * Service for retrieving reports and insights about your products, their
 * performance, and their competitive environment on Google.
 *
 * @generated from service google.shopping.merchant.reports.v1beta.ReportService
 */
export const ReportService: GenService<{
  /**
   * Retrieves a report defined by a search query. The response might contain
   * fewer rows than specified by `page_size`. Rely on `next_page_token` to
   * determine if there are more rows to be requested.
   *
   * @generated from rpc google.shopping.merchant.reports.v1beta.ReportService.Search
   */
  search: {
    methodKind: "unary";
    input: typeof SearchRequestSchema;
    output: typeof SearchResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_shopping_merchant_reports_v1beta_reports, 0);

