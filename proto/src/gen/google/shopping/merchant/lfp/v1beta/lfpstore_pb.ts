// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/shopping/merchant/lfp/v1beta/lfpstore.proto (package google.shopping.merchant.lfp.v1beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/shopping/merchant/lfp/v1beta/lfpstore.proto.
 */
export const file_google_shopping_merchant_lfp_v1beta_lfpstore: GenFile = /*@__PURE__*/
  fileDesc("CjJnb29nbGUvc2hvcHBpbmcvbWVyY2hhbnQvbGZwL3YxYmV0YS9sZnBzdG9yZS5wcm90bxIjZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmxmcC52MWJldGEi5gUKCExmcFN0b3JlEhQKBG5hbWUYASABKAlCBuBBA+BBCBIbCg50YXJnZXRfYWNjb3VudBgCIAEoA0ID4EECEhoKCnN0b3JlX2NvZGUYAyABKAlCBuBBAuBBBRIaCg1zdG9yZV9hZGRyZXNzGAQgASgJQgPgQQISHAoKc3RvcmVfbmFtZRgFIAEoCUID4EEBSACIAQESHgoMcGhvbmVfbnVtYmVyGAYgASgJQgPgQQFIAYgBARIdCgt3ZWJzaXRlX3VyaRgHIAEoCUID4EEBSAKIAQESGgoNZ2NpZF9jYXRlZ29yeRgIIAMoCUID4EEBEhoKCHBsYWNlX2lkGAkgASgJQgPgQQFIA4gBARJgCg5tYXRjaGluZ19zdGF0ZRgKIAEoDjJALmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5sZnAudjFiZXRhLkxmcFN0b3JlLlN0b3JlTWF0Y2hpbmdTdGF0ZUIG4EEB4EEDEigKE21hdGNoaW5nX3N0YXRlX2hpbnQYCyABKAlCBuBBAeBBA0gEiAEBIn0KElN0b3JlTWF0Y2hpbmdTdGF0ZRIkCiBTVE9SRV9NQVRDSElOR19TVEFURV9VTlNQRUNJRklFRBAAEiAKHFNUT1JFX01BVENISU5HX1NUQVRFX01BVENIRUQQARIfChtTVE9SRV9NQVRDSElOR19TVEFURV9GQUlMRUQQAjp66kF3CiNtZXJjaGFudGFwaS5nb29nbGVhcGlzLmNvbS9MZnBTdG9yZRI7YWNjb3VudHMve2FjY291bnR9L2xmcFN0b3Jlcy97dGFyZ2V0X21lcmNoYW50fX57c3RvcmVfY29kZX0qCWxmcFN0b3JlczIIbGZwU3RvcmVCDQoLX3N0b3JlX25hbWVCDwoNX3Bob25lX251bWJlckIOCgxfd2Vic2l0ZV91cmlCCwoJX3BsYWNlX2lkQhYKFF9tYXRjaGluZ19zdGF0ZV9oaW50Ik8KEkdldExmcFN0b3JlUmVxdWVzdBI5CgRuYW1lGAEgASgJQivgQQL6QSUKI21lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL0xmcFN0b3JlIpsBChVJbnNlcnRMZnBTdG9yZVJlcXVlc3QSOwoGcGFyZW50GAEgASgJQivgQQL6QSUSI21lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL0xmcFN0b3JlEkUKCWxmcF9zdG9yZRgCIAEoCzItLmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5sZnAudjFiZXRhLkxmcFN0b3JlQgPgQQIiUgoVRGVsZXRlTGZwU3RvcmVSZXF1ZXN0EjkKBG5hbWUYASABKAlCK+BBAvpBJQojbWVyY2hhbnRhcGkuZ29vZ2xlYXBpcy5jb20vTGZwU3RvcmUioQEKFExpc3RMZnBTdG9yZXNSZXF1ZXN0EjsKBnBhcmVudBgBIAEoCUIr4EEC+kElEiNtZXJjaGFudGFwaS5nb29nbGVhcGlzLmNvbS9MZnBTdG9yZRIbCg50YXJnZXRfYWNjb3VudBgCIAEoA0ID4EECEhYKCXBhZ2Vfc2l6ZRgDIAEoBUID4EEBEhcKCnBhZ2VfdG9rZW4YBCABKAlCA+BBASJzChVMaXN0TGZwU3RvcmVzUmVzcG9uc2USQQoKbGZwX3N0b3JlcxgBIAMoCzItLmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5sZnAudjFiZXRhLkxmcFN0b3JlEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCTLIBgoPTGZwU3RvcmVTZXJ2aWNlEq8BCgtHZXRMZnBTdG9yZRI3Lmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5sZnAudjFiZXRhLkdldExmcFN0b3JlUmVxdWVzdBotLmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5sZnAudjFiZXRhLkxmcFN0b3JlIjjaQQRuYW1lgtPkkwIrEikvbGZwL3YxYmV0YS97bmFtZT1hY2NvdW50cy8qL2xmcFN0b3Jlcy8qfRLTAQoOSW5zZXJ0TGZwU3RvcmUSOi5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQubGZwLnYxYmV0YS5JbnNlcnRMZnBTdG9yZVJlcXVlc3QaLS5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQubGZwLnYxYmV0YS5MZnBTdG9yZSJW2kEQcGFyZW50LGxmcF9zdG9yZYLT5JMCPToJbGZwX3N0b3JlIjAvbGZwL3YxYmV0YS97cGFyZW50PWFjY291bnRzLyp9L2xmcFN0b3JlczppbnNlcnQSngEKDkRlbGV0ZUxmcFN0b3JlEjouZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmxmcC52MWJldGEuRGVsZXRlTGZwU3RvcmVSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IjjaQQRuYW1lgtPkkwIrKikvbGZwL3YxYmV0YS97bmFtZT1hY2NvdW50cy8qL2xmcFN0b3Jlcy8qfRLCAQoNTGlzdExmcFN0b3JlcxI5Lmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5sZnAudjFiZXRhLkxpc3RMZnBTdG9yZXNSZXF1ZXN0GjouZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmxmcC52MWJldGEuTGlzdExmcFN0b3Jlc1Jlc3BvbnNlIjraQQZwYXJlbnSC0+STAisSKS9sZnAvdjFiZXRhL3twYXJlbnQ9YWNjb3VudHMvKn0vbGZwU3RvcmVzGkfKQRptZXJjaGFudGFwaS5nb29nbGVhcGlzLmNvbdJBJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY29udGVudEJ7Cidjb20uZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmxmcC52MWJldGFCDUxmcFN0b3JlUHJvdG9QAVo/Y2xvdWQuZ29vZ2xlLmNvbS9nby9zaG9wcGluZy9tZXJjaGFudC9sZnAvYXBpdjFiZXRhL2xmcHBiO2xmcHBiYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_empty]);

/**
 * A store for the merchant. This will be used to match to a store under the
 * Google Business Profile of the target merchant. If a matching store can't be
 * found, the inventories or sales submitted with the store code will not be
 * used.
 *
 * @generated from message google.shopping.merchant.lfp.v1beta.LfpStore
 */
export type LfpStore = Message<"google.shopping.merchant.lfp.v1beta.LfpStore"> & {
  /**
   * Output only. Identifier. The name of the `LfpStore` resource.
   * Format: `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The Merchant Center id of the merchant to submit the store for.
   *
   * @generated from field: int64 target_account = 2;
   */
  targetAccount: bigint;

  /**
   * Required. Immutable. A store identifier that is unique for the target
   * merchant.
   *
   * @generated from field: string store_code = 3;
   */
  storeCode: string;

  /**
   * Required. The street address of the store.
   * Example: 1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA.
   *
   * @generated from field: string store_address = 4;
   */
  storeAddress: string;

  /**
   * Optional. The merchant or store name.
   *
   * @generated from field: optional string store_name = 5;
   */
  storeName?: string;

  /**
   * Optional. The store phone number in
   * [E.164](https://en.wikipedia.org/wiki/E.164) format. Example:
   * `+15556767888`
   *
   * @generated from field: optional string phone_number = 6;
   */
  phoneNumber?: string;

  /**
   * Optional. The website URL for the store or merchant.
   *
   * @generated from field: optional string website_uri = 7;
   */
  websiteUri?: string;

  /**
   * Optional. [Google My Business category
   * id](https://gcid-explorer.corp.google.com/static/gcid.html).
   *
   * @generated from field: repeated string gcid_category = 8;
   */
  gcidCategory: string[];

  /**
   * Optional. The [Google Place
   * Id](https://developers.google.com/maps/documentation/places/web-service/place-id#id-overview)
   * of the store location.
   *
   * @generated from field: optional string place_id = 9;
   */
  placeId?: string;

  /**
   * Optional. Output only. The state of matching to a Google Business Profile.
   * See
   * [matchingStateHint][google.shopping.merchant.lfp.v1beta.LfpStore.matching_state_hint]
   * for further details if no match is found.
   *
   * @generated from field: google.shopping.merchant.lfp.v1beta.LfpStore.StoreMatchingState matching_state = 10;
   */
  matchingState: LfpStore_StoreMatchingState;

  /**
   * Optional. Output only. The hint of why the matching has failed. This is
   * only set when
   * [matchingState][google.shopping.merchant.lfp.v1beta.LfpStore.matching_state]=`STORE_MATCHING_STATE_FAILED`.
   *
   * Possible values are:
   *
   * - "`linked-store-not-found`": There aren't any Google Business
   * Profile stores available for matching.
   * - "`store-match-not-found`": The provided `LfpStore` couldn't be matched to
   * any of the connected Google Business Profile stores. Merchant Center
   * account is connected correctly and stores are available on Google Business
   * Profile, but the `LfpStore` location address does not match with Google
   * Business Profile stores' addresses. Update the `LfpStore` address or Google
   * Business Profile store address to match correctly.
   * - "`store-match-unverified`": The provided `LfpStore` couldn't be matched
   * to any of the connected Google Business Profile stores, as the matched
   * Google Business Profile store is unverified. Go through the Google Business
   * Profile verification process to match correctly.
   *
   * @generated from field: optional string matching_state_hint = 11;
   */
  matchingStateHint?: string;
};

/**
 * Describes the message google.shopping.merchant.lfp.v1beta.LfpStore.
 * Use `create(LfpStoreSchema)` to create a new message.
 */
export const LfpStoreSchema: GenMessage<LfpStore> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_lfp_v1beta_lfpstore, 0);

/**
 * The state of matching `LfpStore` to a Google Business Profile.
 *
 * @generated from enum google.shopping.merchant.lfp.v1beta.LfpStore.StoreMatchingState
 */
export enum LfpStore_StoreMatchingState {
  /**
   * Store matching state unspecified.
   *
   * @generated from enum value: STORE_MATCHING_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The `LfpStore` is successfully matched with a Google Business Profile
   * store.
   *
   * @generated from enum value: STORE_MATCHING_STATE_MATCHED = 1;
   */
  MATCHED = 1,

  /**
   * The `LfpStore` is not matched with a Google Business Profile store.
   *
   * @generated from enum value: STORE_MATCHING_STATE_FAILED = 2;
   */
  FAILED = 2,
}

/**
 * Describes the enum google.shopping.merchant.lfp.v1beta.LfpStore.StoreMatchingState.
 */
export const LfpStore_StoreMatchingStateSchema: GenEnum<LfpStore_StoreMatchingState> = /*@__PURE__*/
  enumDesc(file_google_shopping_merchant_lfp_v1beta_lfpstore, 0, 0);

/**
 * Request message for the `GetLfpStore` method.
 *
 * @generated from message google.shopping.merchant.lfp.v1beta.GetLfpStoreRequest
 */
export type GetLfpStoreRequest = Message<"google.shopping.merchant.lfp.v1beta.GetLfpStoreRequest"> & {
  /**
   * Required. The name of the store to retrieve.
   * Format: `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.shopping.merchant.lfp.v1beta.GetLfpStoreRequest.
 * Use `create(GetLfpStoreRequestSchema)` to create a new message.
 */
export const GetLfpStoreRequestSchema: GenMessage<GetLfpStoreRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_lfp_v1beta_lfpstore, 1);

/**
 * Request message for the InsertLfpStore method.
 *
 * @generated from message google.shopping.merchant.lfp.v1beta.InsertLfpStoreRequest
 */
export type InsertLfpStoreRequest = Message<"google.shopping.merchant.lfp.v1beta.InsertLfpStoreRequest"> & {
  /**
   * Required. The LFP provider account
   * Format: `accounts/{account}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The store to insert.
   *
   * @generated from field: google.shopping.merchant.lfp.v1beta.LfpStore lfp_store = 2;
   */
  lfpStore?: LfpStore;
};

/**
 * Describes the message google.shopping.merchant.lfp.v1beta.InsertLfpStoreRequest.
 * Use `create(InsertLfpStoreRequestSchema)` to create a new message.
 */
export const InsertLfpStoreRequestSchema: GenMessage<InsertLfpStoreRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_lfp_v1beta_lfpstore, 2);

/**
 * Request message for the DeleteLfpStore method.
 *
 * @generated from message google.shopping.merchant.lfp.v1beta.DeleteLfpStoreRequest
 */
export type DeleteLfpStoreRequest = Message<"google.shopping.merchant.lfp.v1beta.DeleteLfpStoreRequest"> & {
  /**
   * Required. The name of the store to delete for the target merchant account.
   * Format: `accounts/{account}/lfpStores/{target_merchant}~{store_code}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.shopping.merchant.lfp.v1beta.DeleteLfpStoreRequest.
 * Use `create(DeleteLfpStoreRequestSchema)` to create a new message.
 */
export const DeleteLfpStoreRequestSchema: GenMessage<DeleteLfpStoreRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_lfp_v1beta_lfpstore, 3);

/**
 * Request message for the ListLfpStores method.
 *
 * @generated from message google.shopping.merchant.lfp.v1beta.ListLfpStoresRequest
 */
export type ListLfpStoresRequest = Message<"google.shopping.merchant.lfp.v1beta.ListLfpStoresRequest"> & {
  /**
   * Required. The LFP partner.
   * Format: `accounts/{account}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The Merchant Center id of the merchant to list stores for.
   *
   * @generated from field: int64 target_account = 2;
   */
  targetAccount: bigint;

  /**
   * Optional. The maximum number of `LfpStore` resources for the given account
   * to return. The service returns fewer than this value if the number of
   * stores for the given account is less than the `pageSize`. The default value
   * is 250. The maximum value is 1000; If a value higher than the maximum is
   * specified, then the `pageSize` will default to the maximum.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * Optional. A page token, received from a previous `ListLfpStoresRequest`
   * call. Provide the page token to retrieve the subsequent page. When
   * paginating, all other parameters provided to `ListLfpStoresRequest` must
   * match the call that provided the page token. The token returned as
   * [nextPageToken][google.shopping.merchant.lfp.v1beta.ListLfpStoresResponse.next_page_token]
   * in the response to the previous request.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message google.shopping.merchant.lfp.v1beta.ListLfpStoresRequest.
 * Use `create(ListLfpStoresRequestSchema)` to create a new message.
 */
export const ListLfpStoresRequestSchema: GenMessage<ListLfpStoresRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_lfp_v1beta_lfpstore, 4);

/**
 * Response message for the ListLfpStores method.
 *
 * @generated from message google.shopping.merchant.lfp.v1beta.ListLfpStoresResponse
 */
export type ListLfpStoresResponse = Message<"google.shopping.merchant.lfp.v1beta.ListLfpStoresResponse"> & {
  /**
   * The stores from the specified merchant.
   *
   * @generated from field: repeated google.shopping.merchant.lfp.v1beta.LfpStore lfp_stores = 1;
   */
  lfpStores: LfpStore[];

  /**
   * A token, which can be sent as `pageToken` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.shopping.merchant.lfp.v1beta.ListLfpStoresResponse.
 * Use `create(ListLfpStoresResponseSchema)` to create a new message.
 */
export const ListLfpStoresResponseSchema: GenMessage<ListLfpStoresResponse> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_lfp_v1beta_lfpstore, 5);

/**
 * Service for a [LFP
 * partner](https://support.google.com/merchants/answer/7676652) to submit local
 * stores for a merchant.
 *
 * @generated from service google.shopping.merchant.lfp.v1beta.LfpStoreService
 */
export const LfpStoreService: GenService<{
  /**
   * Retrieves information about a store.
   *
   * @generated from rpc google.shopping.merchant.lfp.v1beta.LfpStoreService.GetLfpStore
   */
  getLfpStore: {
    methodKind: "unary";
    input: typeof GetLfpStoreRequestSchema;
    output: typeof LfpStoreSchema;
  },
  /**
   * Inserts a store for the target merchant. If the store with the same store
   * code already exists, it will be replaced.
   *
   * @generated from rpc google.shopping.merchant.lfp.v1beta.LfpStoreService.InsertLfpStore
   */
  insertLfpStore: {
    methodKind: "unary";
    input: typeof InsertLfpStoreRequestSchema;
    output: typeof LfpStoreSchema;
  },
  /**
   * Deletes a store for a target merchant.
   *
   * @generated from rpc google.shopping.merchant.lfp.v1beta.LfpStoreService.DeleteLfpStore
   */
  deleteLfpStore: {
    methodKind: "unary";
    input: typeof DeleteLfpStoreRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Lists the stores of the target merchant, specified by the filter in
   * `ListLfpStoresRequest`.
   *
   * @generated from rpc google.shopping.merchant.lfp.v1beta.LfpStoreService.ListLfpStores
   */
  listLfpStores: {
    methodKind: "unary";
    input: typeof ListLfpStoresRequestSchema;
    output: typeof ListLfpStoresResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_shopping_merchant_lfp_v1beta_lfpstore, 0);

