// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/shopping/merchant/lfp/v1beta/lfpinventory.proto (package google.shopping.merchant.lfp.v1beta, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Price } from "../../../type/types_pb";
import { file_google_shopping_type_types } from "../../../type/types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/shopping/merchant/lfp/v1beta/lfpinventory.proto.
 */
export const file_google_shopping_merchant_lfp_v1beta_lfpinventory: GenFile = /*@__PURE__*/
  fileDesc("CjZnb29nbGUvc2hvcHBpbmcvbWVyY2hhbnQvbGZwL3YxYmV0YS9sZnBpbnZlbnRvcnkucHJvdG8SI2dvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5sZnAudjFiZXRhIqIFCgxMZnBJbnZlbnRvcnkSFAoEbmFtZRgBIAEoCUIG4EED4EEIEhsKDnRhcmdldF9hY2NvdW50GAIgASgDQgPgQQISFwoKc3RvcmVfY29kZRgDIAEoCUID4EECEhgKCG9mZmVyX2lkGAQgASgJQgbgQQLgQQUSGAoLcmVnaW9uX2NvZGUYBSABKAlCA+BBAhIdChBjb250ZW50X2xhbmd1YWdlGAYgASgJQgPgQQISFgoEZ3RpbhgHIAEoCUID4EEBSACIAQESLwoFcHJpY2UYCCABKAsyGy5nb29nbGUuc2hvcHBpbmcudHlwZS5QcmljZUID4EEBEhkKDGF2YWlsYWJpbGl0eRgJIAEoCUID4EECEhoKCHF1YW50aXR5GAogASgDQgPgQQFIAYgBARI4Cg9jb2xsZWN0aW9uX3RpbWUYCyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQESHwoNcGlja3VwX21ldGhvZBgMIAEoCUID4EEBSAKIAQESHAoKcGlja3VwX3NsYRgNIAEoCUID4EEBSAOIAQESHAoKZmVlZF9sYWJlbBgOIAEoCUID4EEBSASIAQE6lQHqQZEBCidtZXJjaGFudGFwaS5nb29nbGVhcGlzLmNvbS9MZnBJbnZlbnRvcnkSSGFjY291bnRzL3thY2NvdW50fS9sZnBJbnZlbnRvcmllcy97dGFyZ2V0X21lcmNoYW50fX57c3RvcmVfY29kZX1+e29mZmVyfSoObGZwSW52ZW50b3JpZXMyDGxmcEludmVudG9yeUIHCgVfZ3RpbkILCglfcXVhbnRpdHlCEAoOX3BpY2t1cF9tZXRob2RCDQoLX3BpY2t1cF9zbGFCDQoLX2ZlZWRfbGFiZWwiqwEKGUluc2VydExmcEludmVudG9yeVJlcXVlc3QSPwoGcGFyZW50GAEgASgJQi/gQQL6QSkSJ21lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL0xmcEludmVudG9yeRJNCg1sZnBfaW52ZW50b3J5GAIgASgLMjEuZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmxmcC52MWJldGEuTGZwSW52ZW50b3J5QgPgQQIytgIKE0xmcEludmVudG9yeVNlcnZpY2US1QEKEkluc2VydExmcEludmVudG9yeRI+Lmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5sZnAudjFiZXRhLkluc2VydExmcEludmVudG9yeVJlcXVlc3QaMS5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQubGZwLnYxYmV0YS5MZnBJbnZlbnRvcnkiTILT5JMCRjoNbGZwX2ludmVudG9yeSI1L2xmcC92MWJldGEve3BhcmVudD1hY2NvdW50cy8qfS9sZnBJbnZlbnRvcmllczppbnNlcnQaR8pBGm1lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29t0kEnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jb250ZW50QroBCidjb20uZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmxmcC52MWJldGFCEUxmcEludmVudG9yeVByb3RvUAFaP2Nsb3VkLmdvb2dsZS5jb20vZ28vc2hvcHBpbmcvbWVyY2hhbnQvbGZwL2FwaXYxYmV0YS9sZnBwYjtsZnBwYupBOAoibWVyY2hhbnRhcGkuZ29vZ2xlYXBpcy5jb20vQWNjb3VudBISYWNjb3VudHMve2FjY291bnR9YgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_timestamp, file_google_shopping_type_types]);

/**
 * Local Inventory for the merchant.
 *
 * @generated from message google.shopping.merchant.lfp.v1beta.LfpInventory
 */
export type LfpInventory = Message<"google.shopping.merchant.lfp.v1beta.LfpInventory"> & {
  /**
   * Output only. Identifier. The name for the `LfpInventory` resource.
   * Format:
   * `accounts/{account}/lfpInventories/{target_merchant}~{store_code}~{offer}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The Merchant Center ID of the merchant to submit the inventory
   * for.
   *
   * @generated from field: int64 target_account = 2;
   */
  targetAccount: bigint;

  /**
   * Required. The identifier of the merchant's store. Either the store code
   * inserted through `InsertLfpStore` or the store code in the Business
   * Profile.
   *
   * @generated from field: string store_code = 3;
   */
  storeCode: string;

  /**
   * Required. Immutable. A unique identifier for the product. If both
   * inventories and sales are submitted for a merchant, this id should match
   * for the same product.
   *
   * **Note**: if the merchant sells the same product new and used, they should
   * have different IDs.
   *
   * @generated from field: string offer_id = 4;
   */
  offerId: string;

  /**
   * Required. The [CLDR territory
   * code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml)
   * for the country where the product is sold.
   *
   * @generated from field: string region_code = 5;
   */
  regionCode: string;

  /**
   * Required. The two-letter ISO 639-1 language code for the item.
   *
   * @generated from field: string content_language = 6;
   */
  contentLanguage: string;

  /**
   * Optional. The Global Trade Item Number of the product.
   *
   * @generated from field: optional string gtin = 7;
   */
  gtin?: string;

  /**
   * Optional. The current price of the product.
   *
   * @generated from field: google.shopping.type.Price price = 8;
   */
  price?: Price;

  /**
   * Required. Availability of the product at this store.
   * For accepted attribute values, see the [local product inventory data
   * specification](https://support.google.com/merchants/answer/3061342)
   *
   * @generated from field: string availability = 9;
   */
  availability: string;

  /**
   * Optional. Quantity of the product available at this store. Must be greater
   * than or equal to zero.
   *
   * @generated from field: optional int64 quantity = 10;
   */
  quantity?: bigint;

  /**
   * Optional. The time when the inventory is collected. If not set, it will be
   * set to the time when the inventory is submitted.
   *
   * @generated from field: google.protobuf.Timestamp collection_time = 11;
   */
  collectionTime?: Timestamp;

  /**
   * Optional. Supported pickup method for this offer. Unless the value is "not
   * supported", this field must be submitted together with `pickupSla`. For
   * accepted attribute values, see the [local product inventory data
   * specification](https://support.google.com/merchants/answer/3061342).
   *
   * @generated from field: optional string pickup_method = 12;
   */
  pickupMethod?: string;

  /**
   * Optional. Expected date that an order will be ready for pickup relative to
   * the order date. Must be submitted together with `pickupMethod`. For
   * accepted attribute values, see the [local product inventory data
   * specification](https://support.google.com/merchants/answer/3061342).
   *
   * @generated from field: optional string pickup_sla = 13;
   */
  pickupSla?: string;

  /**
   * Optional. The [feed
   * label](https://developers.google.com/shopping-content/guides/products/feed-labels)
   * for the product. If this is not set, it will default to `regionCode`.
   *
   * @generated from field: optional string feed_label = 14;
   */
  feedLabel?: string;
};

/**
 * Describes the message google.shopping.merchant.lfp.v1beta.LfpInventory.
 * Use `create(LfpInventorySchema)` to create a new message.
 */
export const LfpInventorySchema: GenMessage<LfpInventory> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_lfp_v1beta_lfpinventory, 0);

/**
 * Request message for the `InsertLfpInventory` method.
 *
 * @generated from message google.shopping.merchant.lfp.v1beta.InsertLfpInventoryRequest
 */
export type InsertLfpInventoryRequest = Message<"google.shopping.merchant.lfp.v1beta.InsertLfpInventoryRequest"> & {
  /**
   * Required. The LFP provider account.
   * Format: `accounts/{account}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The inventory to insert.
   *
   * @generated from field: google.shopping.merchant.lfp.v1beta.LfpInventory lfp_inventory = 2;
   */
  lfpInventory?: LfpInventory;
};

/**
 * Describes the message google.shopping.merchant.lfp.v1beta.InsertLfpInventoryRequest.
 * Use `create(InsertLfpInventoryRequestSchema)` to create a new message.
 */
export const InsertLfpInventoryRequestSchema: GenMessage<InsertLfpInventoryRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_lfp_v1beta_lfpinventory, 1);

/**
 * Service for a [LFP
 * partner](https://support.google.com/merchants/answer/7676652) to submit local
 * inventories for a merchant.
 *
 * @generated from service google.shopping.merchant.lfp.v1beta.LfpInventoryService
 */
export const LfpInventoryService: GenService<{
  /**
   * Inserts a `LfpInventory` resource for the given target merchant account. If
   * the resource already exists, it will be replaced. The inventory
   * automatically expires after 30 days.
   *
   * @generated from rpc google.shopping.merchant.lfp.v1beta.LfpInventoryService.InsertLfpInventory
   */
  insertLfpInventory: {
    methodKind: "unary";
    input: typeof InsertLfpInventoryRequestSchema;
    output: typeof LfpInventorySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_shopping_merchant_lfp_v1beta_lfpinventory, 0);

