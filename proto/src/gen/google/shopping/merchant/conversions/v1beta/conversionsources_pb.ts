// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/shopping/merchant/conversions/v1beta/conversionsources.proto (package google.shopping.merchant.conversions.v1beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/shopping/merchant/conversions/v1beta/conversionsources.proto.
 */
export const file_google_shopping_merchant_conversions_v1beta_conversionsources: GenFile = /*@__PURE__*/
  fileDesc("CkNnb29nbGUvc2hvcHBpbmcvbWVyY2hhbnQvY29udmVyc2lvbnMvdjFiZXRhL2NvbnZlcnNpb25zb3VyY2VzLnByb3RvEitnb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuY29udmVyc2lvbnMudjFiZXRhIqoGChBDb252ZXJzaW9uU291cmNlEmYKFWdvb2dsZV9hbmFseXRpY3NfbGluaxgDIAEoCzJALmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5jb252ZXJzaW9ucy52MWJldGEuR29vZ2xlQW5hbHl0aWNzTGlua0ID4EEFSAASbQobbWVyY2hhbnRfY2VudGVyX2Rlc3RpbmF0aW9uGAQgASgLMkYuZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmNvbnZlcnNpb25zLnYxYmV0YS5NZXJjaGFudENlbnRlckRlc3RpbmF0aW9uSAASFAoEbmFtZRgBIAEoCUIG4EED4EEIElcKBXN0YXRlGAUgASgOMkMuZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmNvbnZlcnNpb25zLnYxYmV0YS5Db252ZXJzaW9uU291cmNlLlN0YXRlQgPgQQMSNAoLZXhwaXJlX3RpbWUYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSYQoKY29udHJvbGxlchgHIAEoDjJILmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5jb252ZXJzaW9ucy52MWJldGEuQ29udmVyc2lvblNvdXJjZS5Db250cm9sbGVyQgPgQQMiRQoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABIKCgZBQ1RJVkUQARIMCghBUkNISVZFRBACEgsKB1BFTkRJTkcQAyJOCgpDb250cm9sbGVyEhoKFkNPTlRST0xMRVJfVU5TUEVDSUZJRUQQABIMCghNRVJDSEFOVBABEhYKEllPVVRVQkVfQUZGSUxJQVRFUxACOpAB6kGMAQorbWVyY2hhbnRhcGkuZ29vZ2xlYXBpcy5jb20vQ29udmVyc2lvblNvdXJjZRI4YWNjb3VudHMve2FjY291bnR9L2NvbnZlcnNpb25Tb3VyY2VzL3tjb252ZXJzaW9uX3NvdXJjZX0qEWNvbnZlcnNpb25Tb3VyY2VzMhBjb252ZXJzaW9uU291cmNlQg0KC3NvdXJjZV9kYXRhIu8EChNBdHRyaWJ1dGlvblNldHRpbmdzEi0KIGF0dHJpYnV0aW9uX2xvb2tiYWNrX3dpbmRvd19kYXlzGAEgASgFQgPgQQIScQoRYXR0cmlidXRpb25fbW9kZWwYAiABKA4yUS5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuY29udmVyc2lvbnMudjFiZXRhLkF0dHJpYnV0aW9uU2V0dGluZ3MuQXR0cmlidXRpb25Nb2RlbEID4EECEnAKD2NvbnZlcnNpb25fdHlwZRgDIAMoCzJPLmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5jb252ZXJzaW9ucy52MWJldGEuQXR0cmlidXRpb25TZXR0aW5ncy5Db252ZXJzaW9uVHlwZUIG4EEG4EEFGjgKDkNvbnZlcnNpb25UeXBlEhEKBG5hbWUYASABKAlCA+BBAxITCgZyZXBvcnQYAiABKAhCA+BBAyKJAgoQQXR0cmlidXRpb25Nb2RlbBIhCh1BVFRSSUJVVElPTl9NT0RFTF9VTlNQRUNJRklFRBAAEhwKGENST1NTX0NIQU5ORUxfTEFTVF9DTElDSxABEhwKGEFEU19QUkVGRVJSRURfTEFTVF9DTElDSxACEh0KGUNST1NTX0NIQU5ORUxfREFUQV9EUklWRU4QBRIdChlDUk9TU19DSEFOTkVMX0ZJUlNUX0NMSUNLEAYSGAoUQ1JPU1NfQ0hBTk5FTF9MSU5FQVIQBxIgChxDUk9TU19DSEFOTkVMX1BPU0lUSU9OX0JBU0VEEAgSHAoYQ1JPU1NfQ0hBTk5FTF9USU1FX0RFQ0FZEAkirgEKE0dvb2dsZUFuYWx5dGljc0xpbmsSGwoLcHJvcGVydHlfaWQYASABKANCBuBBAuBBBRJjChRhdHRyaWJ1dGlvbl9zZXR0aW5ncxgCIAEoCzJALmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5jb252ZXJzaW9ucy52MWJldGEuQXR0cmlidXRpb25TZXR0aW5nc0ID4EEDEhUKCHByb3BlcnR5GAMgASgJQgPgQQMi0QEKGU1lcmNoYW50Q2VudGVyRGVzdGluYXRpb24SGAoLZGVzdGluYXRpb24YASABKAlCA+BBAxJjChRhdHRyaWJ1dGlvbl9zZXR0aW5ncxgCIAEoCzJALmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5jb252ZXJzaW9ucy52MWJldGEuQXR0cmlidXRpb25TZXR0aW5nc0ID4EECEhkKDGRpc3BsYXlfbmFtZRgDIAEoCUID4EECEhoKDWN1cnJlbmN5X2NvZGUYBCABKAlCA+BBAiLDAQodQ3JlYXRlQ29udmVyc2lvblNvdXJjZVJlcXVlc3QSQwoGcGFyZW50GAEgASgJQjPgQQL6QS0SK21lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL0NvbnZlcnNpb25Tb3VyY2USXQoRY29udmVyc2lvbl9zb3VyY2UYAiABKAsyPS5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuY29udmVyc2lvbnMudjFiZXRhLkNvbnZlcnNpb25Tb3VyY2VCA+BBAiK0AQodVXBkYXRlQ29udmVyc2lvblNvdXJjZVJlcXVlc3QSXQoRY29udmVyc2lvbl9zb3VyY2UYASABKAsyPS5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuY29udmVyc2lvbnMudjFiZXRhLkNvbnZlcnNpb25Tb3VyY2VCA+BBAhI0Cgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2tCA+BBAiJiCh1EZWxldGVDb252ZXJzaW9uU291cmNlUmVxdWVzdBJBCgRuYW1lGAEgASgJQjPgQQL6QS0KK21lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL0NvbnZlcnNpb25Tb3VyY2UiZAofVW5kZWxldGVDb252ZXJzaW9uU291cmNlUmVxdWVzdBJBCgRuYW1lGAEgASgJQjPgQQL6QS0KK21lcmNoYW50YXBpLmdvb2dsZWFwaXMuY29tL0NvbnZlcnNpb25Tb3VyY2UiXwoaR2V0Q29udmVyc2lvblNvdXJjZVJlcXVlc3QSQQoEbmFtZRgBIAEoCUIz4EEC+kEtCittZXJjaGFudGFwaS5nb29nbGVhcGlzLmNvbS9Db252ZXJzaW9uU291cmNlIq8BChxMaXN0Q29udmVyc2lvblNvdXJjZXNSZXF1ZXN0EkMKBnBhcmVudBgBIAEoCUIz4EEC+kEtEittZXJjaGFudGFwaS5nb29nbGVhcGlzLmNvbS9Db252ZXJzaW9uU291cmNlEhYKCXBhZ2Vfc2l6ZRgCIAEoBUID4EEBEhcKCnBhZ2VfdG9rZW4YAyABKAlCA+BBARIZCgxzaG93X2RlbGV0ZWQYBCABKAhCA+BBASKTAQodTGlzdENvbnZlcnNpb25Tb3VyY2VzUmVzcG9uc2USWQoSY29udmVyc2lvbl9zb3VyY2VzGAEgAygLMj0uZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmNvbnZlcnNpb25zLnYxYmV0YS5Db252ZXJzaW9uU291cmNlEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCTLSDAoYQ29udmVyc2lvblNvdXJjZXNTZXJ2aWNlEpQCChZDcmVhdGVDb252ZXJzaW9uU291cmNlEkouZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmNvbnZlcnNpb25zLnYxYmV0YS5DcmVhdGVDb252ZXJzaW9uU291cmNlUmVxdWVzdBo9Lmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5jb252ZXJzaW9ucy52MWJldGEuQ29udmVyc2lvblNvdXJjZSJv2kEYcGFyZW50LGNvbnZlcnNpb25fc291cmNlgtPkkwJOOhFjb252ZXJzaW9uX3NvdXJjZSI5L2NvbnZlcnNpb25zL3YxYmV0YS97cGFyZW50PWFjY291bnRzLyp9L2NvbnZlcnNpb25Tb3VyY2VzEqwCChZVcGRhdGVDb252ZXJzaW9uU291cmNlEkouZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmNvbnZlcnNpb25zLnYxYmV0YS5VcGRhdGVDb252ZXJzaW9uU291cmNlUmVxdWVzdBo9Lmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5jb252ZXJzaW9ucy52MWJldGEuQ29udmVyc2lvblNvdXJjZSKGAdpBHWNvbnZlcnNpb25fc291cmNlLHVwZGF0ZV9tYXNrgtPkkwJgOhFjb252ZXJzaW9uX3NvdXJjZTJLL2NvbnZlcnNpb25zL3YxYmV0YS97Y29udmVyc2lvbl9zb3VyY2UubmFtZT1hY2NvdW50cy8qL2NvbnZlcnNpb25Tb3VyY2VzLyp9EsYBChZEZWxldGVDb252ZXJzaW9uU291cmNlEkouZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmNvbnZlcnNpb25zLnYxYmV0YS5EZWxldGVDb252ZXJzaW9uU291cmNlUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSJI2kEEbmFtZYLT5JMCOyo5L2NvbnZlcnNpb25zL3YxYmV0YS97bmFtZT1hY2NvdW50cy8qL2NvbnZlcnNpb25Tb3VyY2VzLyp9EvYBChhVbmRlbGV0ZUNvbnZlcnNpb25Tb3VyY2USTC5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuY29udmVyc2lvbnMudjFiZXRhLlVuZGVsZXRlQ29udmVyc2lvblNvdXJjZVJlcXVlc3QaPS5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuY29udmVyc2lvbnMudjFiZXRhLkNvbnZlcnNpb25Tb3VyY2UiTYLT5JMCRzoBKiJCL2NvbnZlcnNpb25zL3YxYmV0YS97bmFtZT1hY2NvdW50cy8qL2NvbnZlcnNpb25Tb3VyY2VzLyp9OnVuZGVsZXRlEucBChNHZXRDb252ZXJzaW9uU291cmNlEkcuZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmNvbnZlcnNpb25zLnYxYmV0YS5HZXRDb252ZXJzaW9uU291cmNlUmVxdWVzdBo9Lmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5jb252ZXJzaW9ucy52MWJldGEuQ29udmVyc2lvblNvdXJjZSJI2kEEbmFtZYLT5JMCOxI5L2NvbnZlcnNpb25zL3YxYmV0YS97bmFtZT1hY2NvdW50cy8qL2NvbnZlcnNpb25Tb3VyY2VzLyp9EvoBChVMaXN0Q29udmVyc2lvblNvdXJjZXMSSS5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuY29udmVyc2lvbnMudjFiZXRhLkxpc3RDb252ZXJzaW9uU291cmNlc1JlcXVlc3QaSi5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuY29udmVyc2lvbnMudjFiZXRhLkxpc3RDb252ZXJzaW9uU291cmNlc1Jlc3BvbnNlIkraQQZwYXJlbnSC0+STAjsSOS9jb252ZXJzaW9ucy92MWJldGEve3BhcmVudD1hY2NvdW50cy8qfS9jb252ZXJzaW9uU291cmNlcxpHykEabWVyY2hhbnRhcGkuZ29vZ2xlYXBpcy5jb23SQSdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2NvbnRlbnRC3wEKL2NvbS5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuY29udmVyc2lvbnMudjFiZXRhQhZDb252ZXJzaW9uU291cmNlc1Byb3RvUAFaV2Nsb3VkLmdvb2dsZS5jb20vZ28vc2hvcHBpbmcvbWVyY2hhbnQvY29udmVyc2lvbnMvYXBpdjFiZXRhL2NvbnZlcnNpb25zcGI7Y29udmVyc2lvbnNwYupBOAoibWVyY2hhbnRhcGkuZ29vZ2xlYXBpcy5jb20vQWNjb3VudBISYWNjb3VudHMve2FjY291bnR9YgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp]);

/**
 * Represents a conversion source owned by a Merchant account. A merchant
 * account can have up to 200 conversion sources.
 *
 * @generated from message google.shopping.merchant.conversions.v1beta.ConversionSource
 */
export type ConversionSource = Message<"google.shopping.merchant.conversions.v1beta.ConversionSource"> & {
  /**
   * Required.
   * Conversion source data specific to each different type of source.
   *
   * @generated from oneof google.shopping.merchant.conversions.v1beta.ConversionSource.source_data
   */
  sourceData: {
    /**
     * Immutable. Conversion Source of type "Link to Google Analytics Property".
     *
     * @generated from field: google.shopping.merchant.conversions.v1beta.GoogleAnalyticsLink google_analytics_link = 3;
     */
    value: GoogleAnalyticsLink;
    case: "googleAnalyticsLink";
  } | {
    /**
     * Conversion Source of type "Merchant Center Tag Destination".
     *
     * @generated from field: google.shopping.merchant.conversions.v1beta.MerchantCenterDestination merchant_center_destination = 4;
     */
    value: MerchantCenterDestination;
    case: "merchantCenterDestination";
  } | { case: undefined; value?: undefined };

  /**
   * Output only. Identifier. Generated by the Content API upon creation of a
   * new `ConversionSource`. Format: [a-z]{4}:.+ The four characters before the
   * colon represent the type of conversio source. Content after the colon
   * represents the ID of the conversion source within that type. The ID of two
   * different conversion sources might be the same across different types. The
   * following type prefixes are supported:
   * - galk: For GoogleAnalyticsLink sources.
   * - mcdn: For MerchantCenterDestination sources.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Current state of this conversion source. Can't be edited
   * through the API.
   *
   * @generated from field: google.shopping.merchant.conversions.v1beta.ConversionSource.State state = 5;
   */
  state: ConversionSource_State;

  /**
   * Output only. The time when an archived conversion source becomes
   * permanently deleted and is no longer available to undelete.
   *
   * @generated from field: google.protobuf.Timestamp expire_time = 6;
   */
  expireTime?: Timestamp;

  /**
   * Output only. Controller of the conversion source.
   *
   * @generated from field: google.shopping.merchant.conversions.v1beta.ConversionSource.Controller controller = 7;
   */
  controller: ConversionSource_Controller;
};

/**
 * Describes the message google.shopping.merchant.conversions.v1beta.ConversionSource.
 * Use `create(ConversionSourceSchema)` to create a new message.
 */
export const ConversionSourceSchema: GenMessage<ConversionSource> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 0);

/**
 * Represents state of the conversion source.
 *
 * @generated from enum google.shopping.merchant.conversions.v1beta.ConversionSource.State
 */
export enum ConversionSource_State {
  /**
   * Conversion source has unspecified state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Conversion source is fully functional.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * Conversion source has been archived in the last 30 days and not
   * currently functional. Can be restored using the undelete method.
   *
   * @generated from enum value: ARCHIVED = 2;
   */
  ARCHIVED = 2,

  /**
   * Conversion source creation has started but not fully finished yet.
   *
   * @generated from enum value: PENDING = 3;
   */
  PENDING = 3,
}

/**
 * Describes the enum google.shopping.merchant.conversions.v1beta.ConversionSource.State.
 */
export const ConversionSource_StateSchema: GenEnum<ConversionSource_State> = /*@__PURE__*/
  enumDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 0, 0);

/**
 * Entity controlling the conversion source.
 *
 * @generated from enum google.shopping.merchant.conversions.v1beta.ConversionSource.Controller
 */
export enum ConversionSource_Controller {
  /**
   * Default value. This value is unused.
   *
   * @generated from enum value: CONTROLLER_UNSPECIFIED = 0;
   */
  CONTROLLER_UNSPECIFIED = 0,

  /**
   * Controlled by the Merchant who owns the Conversion Source.
   *
   * @generated from enum value: MERCHANT = 1;
   */
  MERCHANT = 1,

  /**
   * Controlled by the YT Affiliates program.
   *
   * @generated from enum value: YOUTUBE_AFFILIATES = 2;
   */
  YOUTUBE_AFFILIATES = 2,
}

/**
 * Describes the enum google.shopping.merchant.conversions.v1beta.ConversionSource.Controller.
 */
export const ConversionSource_ControllerSchema: GenEnum<ConversionSource_Controller> = /*@__PURE__*/
  enumDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 0, 1);

/**
 * Represents attribution settings for conversion sources receiving
 * pre-attribution data.
 *
 * @generated from message google.shopping.merchant.conversions.v1beta.AttributionSettings
 */
export type AttributionSettings = Message<"google.shopping.merchant.conversions.v1beta.AttributionSettings"> & {
  /**
   * Required. Lookback windows (in days) used for attribution in this source.
   * Supported values are 7, 30, 40.
   *
   * @generated from field: int32 attribution_lookback_window_days = 1;
   */
  attributionLookbackWindowDays: number;

  /**
   * Required. Attribution model.
   *
   * @generated from field: google.shopping.merchant.conversions.v1beta.AttributionSettings.AttributionModel attribution_model = 2;
   */
  attributionModel: AttributionSettings_AttributionModel;

  /**
   * Immutable. Unordered list. List of different conversion types a conversion
   * event can be classified as. A standard "purchase" type will be
   * automatically created if this list is empty at creation time.
   *
   * @generated from field: repeated google.shopping.merchant.conversions.v1beta.AttributionSettings.ConversionType conversion_type = 3;
   */
  conversionType: AttributionSettings_ConversionType[];
};

/**
 * Describes the message google.shopping.merchant.conversions.v1beta.AttributionSettings.
 * Use `create(AttributionSettingsSchema)` to create a new message.
 */
export const AttributionSettingsSchema: GenMessage<AttributionSettings> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 1);

/**
 * Message representing a types of conversion events
 *
 * @generated from message google.shopping.merchant.conversions.v1beta.AttributionSettings.ConversionType
 */
export type AttributionSettings_ConversionType = Message<"google.shopping.merchant.conversions.v1beta.AttributionSettings.ConversionType"> & {
  /**
   * Output only. Conversion event name, as it'll be reported by the client.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. Option indicating if the type should be included in Merchant
   * Center reporting.
   *
   * @generated from field: bool report = 2;
   */
  report: boolean;
};

/**
 * Describes the message google.shopping.merchant.conversions.v1beta.AttributionSettings.ConversionType.
 * Use `create(AttributionSettings_ConversionTypeSchema)` to create a new message.
 */
export const AttributionSettings_ConversionTypeSchema: GenMessage<AttributionSettings_ConversionType> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 1, 0);

/**
 * The attribution model used for this source. We support the same set of
 * models offered by Google Analytics 4, as described in:
 * https://support.google.com/analytics/answer/10596866.
 *
 * @generated from enum google.shopping.merchant.conversions.v1beta.AttributionSettings.AttributionModel
 */
export enum AttributionSettings_AttributionModel {
  /**
   * Unspecified model.
   *
   * @generated from enum value: ATTRIBUTION_MODEL_UNSPECIFIED = 0;
   */
  ATTRIBUTION_MODEL_UNSPECIFIED = 0,

  /**
   * Cross-channel Last Click model.
   *
   * @generated from enum value: CROSS_CHANNEL_LAST_CLICK = 1;
   */
  CROSS_CHANNEL_LAST_CLICK = 1,

  /**
   * Ads-preferred Last Click model.
   *
   * @generated from enum value: ADS_PREFERRED_LAST_CLICK = 2;
   */
  ADS_PREFERRED_LAST_CLICK = 2,

  /**
   * Cross-channel Data Driven model.
   *
   * @generated from enum value: CROSS_CHANNEL_DATA_DRIVEN = 5;
   */
  CROSS_CHANNEL_DATA_DRIVEN = 5,

  /**
   * Cross-channel First Click model.
   *
   * @generated from enum value: CROSS_CHANNEL_FIRST_CLICK = 6;
   */
  CROSS_CHANNEL_FIRST_CLICK = 6,

  /**
   * Cross-channel Linear model.
   *
   * @generated from enum value: CROSS_CHANNEL_LINEAR = 7;
   */
  CROSS_CHANNEL_LINEAR = 7,

  /**
   * Cross-channel Position Based model.
   *
   * @generated from enum value: CROSS_CHANNEL_POSITION_BASED = 8;
   */
  CROSS_CHANNEL_POSITION_BASED = 8,

  /**
   * Cross-channel Time Decay model.
   *
   * @generated from enum value: CROSS_CHANNEL_TIME_DECAY = 9;
   */
  CROSS_CHANNEL_TIME_DECAY = 9,
}

/**
 * Describes the enum google.shopping.merchant.conversions.v1beta.AttributionSettings.AttributionModel.
 */
export const AttributionSettings_AttributionModelSchema: GenEnum<AttributionSettings_AttributionModel> = /*@__PURE__*/
  enumDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 1, 0);

/**
 * "Google Analytics Link" sources can be used to get conversion data from an
 * existing Google Analytics property into the linked Merchant Center account.
 *
 * @generated from message google.shopping.merchant.conversions.v1beta.GoogleAnalyticsLink
 */
export type GoogleAnalyticsLink = Message<"google.shopping.merchant.conversions.v1beta.GoogleAnalyticsLink"> & {
  /**
   * Required. Immutable. ID of the Google Analytics property the merchant is
   * linked to.
   *
   * @generated from field: int64 property_id = 1;
   */
  propertyId: bigint;

  /**
   * Output only. Attribution settings for the linked Google Analytics property.
   *
   * @generated from field: google.shopping.merchant.conversions.v1beta.AttributionSettings attribution_settings = 2;
   */
  attributionSettings?: AttributionSettings;

  /**
   * Output only. Name of the Google Analytics property the merchant is linked
   * to.
   *
   * @generated from field: string property = 3;
   */
  property: string;
};

/**
 * Describes the message google.shopping.merchant.conversions.v1beta.GoogleAnalyticsLink.
 * Use `create(GoogleAnalyticsLinkSchema)` to create a new message.
 */
export const GoogleAnalyticsLinkSchema: GenMessage<GoogleAnalyticsLink> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 2);

/**
 * "Merchant Center Destination" sources can be used to send conversion events
 * from an online store using a Google tag directly to a Merchant Center account
 * where the source is created.
 *
 * @generated from message google.shopping.merchant.conversions.v1beta.MerchantCenterDestination
 */
export type MerchantCenterDestination = Message<"google.shopping.merchant.conversions.v1beta.MerchantCenterDestination"> & {
  /**
   * Output only. Merchant Center Destination ID.
   *
   * @generated from field: string destination = 1;
   */
  destination: string;

  /**
   * Required. Attribution settings being used for the Merchant Center
   * Destination.
   *
   * @generated from field: google.shopping.merchant.conversions.v1beta.AttributionSettings attribution_settings = 2;
   */
  attributionSettings?: AttributionSettings;

  /**
   * Required. Merchant-specified display name for the destination. This is the
   * name that identifies the conversion source within the Merchant Center UI.
   * Limited to 64 characters.
   *
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * Required. Three-letter currency code (ISO 4217). The currency code defines
   * in which currency the conversions sent to this destination will be reported
   * in Merchant Center.
   *
   * @generated from field: string currency_code = 4;
   */
  currencyCode: string;
};

/**
 * Describes the message google.shopping.merchant.conversions.v1beta.MerchantCenterDestination.
 * Use `create(MerchantCenterDestinationSchema)` to create a new message.
 */
export const MerchantCenterDestinationSchema: GenMessage<MerchantCenterDestination> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 3);

/**
 * Request message for the CreateConversionSource method.
 *
 * @generated from message google.shopping.merchant.conversions.v1beta.CreateConversionSourceRequest
 */
export type CreateConversionSourceRequest = Message<"google.shopping.merchant.conversions.v1beta.CreateConversionSourceRequest"> & {
  /**
   * Required. The merchant account that will own the new conversion source.
   * Format: accounts/{account}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The conversion source description. A new ID will be automatically
   * assigned to it upon creation.
   *
   * @generated from field: google.shopping.merchant.conversions.v1beta.ConversionSource conversion_source = 2;
   */
  conversionSource?: ConversionSource;
};

/**
 * Describes the message google.shopping.merchant.conversions.v1beta.CreateConversionSourceRequest.
 * Use `create(CreateConversionSourceRequestSchema)` to create a new message.
 */
export const CreateConversionSourceRequestSchema: GenMessage<CreateConversionSourceRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 4);

/**
 * Request message for the UpdateConversionSource method.
 *
 * @generated from message google.shopping.merchant.conversions.v1beta.UpdateConversionSourceRequest
 */
export type UpdateConversionSourceRequest = Message<"google.shopping.merchant.conversions.v1beta.UpdateConversionSourceRequest"> & {
  /**
   * Required. The new version of the conversion source data.
   * Format: accounts/{account}/conversionSources/{conversion_source}
   *
   * @generated from field: google.shopping.merchant.conversions.v1beta.ConversionSource conversion_source = 1;
   */
  conversionSource?: ConversionSource;

  /**
   * Required. List of fields being updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message google.shopping.merchant.conversions.v1beta.UpdateConversionSourceRequest.
 * Use `create(UpdateConversionSourceRequestSchema)` to create a new message.
 */
export const UpdateConversionSourceRequestSchema: GenMessage<UpdateConversionSourceRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 5);

/**
 * Request message for the DeleteConversionSource method.
 *
 * @generated from message google.shopping.merchant.conversions.v1beta.DeleteConversionSourceRequest
 */
export type DeleteConversionSourceRequest = Message<"google.shopping.merchant.conversions.v1beta.DeleteConversionSourceRequest"> & {
  /**
   * Required. The name of the conversion source to be deleted.
   * Format: accounts/{account}/conversionSources/{conversion_source}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.shopping.merchant.conversions.v1beta.DeleteConversionSourceRequest.
 * Use `create(DeleteConversionSourceRequestSchema)` to create a new message.
 */
export const DeleteConversionSourceRequestSchema: GenMessage<DeleteConversionSourceRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 6);

/**
 * Request message for the UndeleteConversionSource method.
 *
 * @generated from message google.shopping.merchant.conversions.v1beta.UndeleteConversionSourceRequest
 */
export type UndeleteConversionSourceRequest = Message<"google.shopping.merchant.conversions.v1beta.UndeleteConversionSourceRequest"> & {
  /**
   * Required. The name of the conversion source to be undeleted.
   * Format: accounts/{account}/conversionSources/{conversion_source}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.shopping.merchant.conversions.v1beta.UndeleteConversionSourceRequest.
 * Use `create(UndeleteConversionSourceRequestSchema)` to create a new message.
 */
export const UndeleteConversionSourceRequestSchema: GenMessage<UndeleteConversionSourceRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 7);

/**
 * Request message for the GetConversionSource method.
 *
 * @generated from message google.shopping.merchant.conversions.v1beta.GetConversionSourceRequest
 */
export type GetConversionSourceRequest = Message<"google.shopping.merchant.conversions.v1beta.GetConversionSourceRequest"> & {
  /**
   * Required. The name of the conversion source to be fetched.
   * Format: accounts/{account}/conversionsources/{conversion_source}
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.shopping.merchant.conversions.v1beta.GetConversionSourceRequest.
 * Use `create(GetConversionSourceRequestSchema)` to create a new message.
 */
export const GetConversionSourceRequestSchema: GenMessage<GetConversionSourceRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 8);

/**
 * Request message for the ListConversionSources method.
 *
 * @generated from message google.shopping.merchant.conversions.v1beta.ListConversionSourcesRequest
 */
export type ListConversionSourcesRequest = Message<"google.shopping.merchant.conversions.v1beta.ListConversionSourcesRequest"> & {
  /**
   * Required. The merchant account who owns the collection of conversion
   * sources. Format: accounts/{account}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of conversion sources to return in a page.
   * If no `page_size` is specified, `100` is used as the default value. The
   * maximum value is `200`. Values above `200` will be coerced to `200`.
   * Regardless of pagination, at most `200` conversion sources are returned
   * in total.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. Page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. Show deleted (archived) option.
   *
   * @generated from field: bool show_deleted = 4;
   */
  showDeleted: boolean;
};

/**
 * Describes the message google.shopping.merchant.conversions.v1beta.ListConversionSourcesRequest.
 * Use `create(ListConversionSourcesRequestSchema)` to create a new message.
 */
export const ListConversionSourcesRequestSchema: GenMessage<ListConversionSourcesRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 9);

/**
 * Response message for the ListConversionSources method.
 *
 * @generated from message google.shopping.merchant.conversions.v1beta.ListConversionSourcesResponse
 */
export type ListConversionSourcesResponse = Message<"google.shopping.merchant.conversions.v1beta.ListConversionSourcesResponse"> & {
  /**
   * List of conversion sources.
   *
   * @generated from field: repeated google.shopping.merchant.conversions.v1beta.ConversionSource conversion_sources = 1;
   */
  conversionSources: ConversionSource[];

  /**
   * Token to be used to fetch the next results page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.shopping.merchant.conversions.v1beta.ListConversionSourcesResponse.
 * Use `create(ListConversionSourcesResponseSchema)` to create a new message.
 */
export const ListConversionSourcesResponseSchema: GenMessage<ListConversionSourcesResponse> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 10);

/**
 * Service for managing conversion sources for a merchant account.
 *
 * @generated from service google.shopping.merchant.conversions.v1beta.ConversionSourcesService
 */
export const ConversionSourcesService: GenService<{
  /**
   * Creates a new conversion source.
   *
   * @generated from rpc google.shopping.merchant.conversions.v1beta.ConversionSourcesService.CreateConversionSource
   */
  createConversionSource: {
    methodKind: "unary";
    input: typeof CreateConversionSourceRequestSchema;
    output: typeof ConversionSourceSchema;
  },
  /**
   * Updates information of an existing conversion source. Available only for
   * Merchant Center Destination conversion sources.
   *
   * @generated from rpc google.shopping.merchant.conversions.v1beta.ConversionSourcesService.UpdateConversionSource
   */
  updateConversionSource: {
    methodKind: "unary";
    input: typeof UpdateConversionSourceRequestSchema;
    output: typeof ConversionSourceSchema;
  },
  /**
   * Archives an existing conversion source. If the conversion source is a
   * Merchant Center Destination, it will be recoverable for 30 days. If the
   * conversion source is a Google Analytics Link, it will be deleted
   * immediately and can be restored by creating a new one.
   *
   * @generated from rpc google.shopping.merchant.conversions.v1beta.ConversionSourcesService.DeleteConversionSource
   */
  deleteConversionSource: {
    methodKind: "unary";
    input: typeof DeleteConversionSourceRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Re-enables an archived conversion source. Only Available for Merchant
   * Center Destination conversion sources.
   *
   * @generated from rpc google.shopping.merchant.conversions.v1beta.ConversionSourcesService.UndeleteConversionSource
   */
  undeleteConversionSource: {
    methodKind: "unary";
    input: typeof UndeleteConversionSourceRequestSchema;
    output: typeof ConversionSourceSchema;
  },
  /**
   * Fetches a conversion source.
   *
   * @generated from rpc google.shopping.merchant.conversions.v1beta.ConversionSourcesService.GetConversionSource
   */
  getConversionSource: {
    methodKind: "unary";
    input: typeof GetConversionSourceRequestSchema;
    output: typeof ConversionSourceSchema;
  },
  /**
   * Retrieves the list of conversion sources the caller has access to.
   *
   * @generated from rpc google.shopping.merchant.conversions.v1beta.ConversionSourcesService.ListConversionSources
   */
  listConversionSources: {
    methodKind: "unary";
    input: typeof ListConversionSourcesRequestSchema;
    output: typeof ListConversionSourcesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_shopping_merchant_conversions_v1beta_conversionsources, 0);

