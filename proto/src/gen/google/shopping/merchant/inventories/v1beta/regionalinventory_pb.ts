// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/shopping/merchant/inventories/v1beta/regionalinventory.proto (package google.shopping.merchant.inventories.v1beta, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../api/annotations_pb";
import { file_google_api_client } from "../../../../api/client_pb";
import { file_google_api_field_behavior } from "../../../../api/field_behavior_pb";
import { file_google_api_resource } from "../../../../api/resource_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { CustomAttribute, Price } from "../../../type/types_pb";
import { file_google_shopping_type_types } from "../../../type/types_pb";
import type { Interval } from "../../../../type/interval_pb";
import { file_google_type_interval } from "../../../../type/interval_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/shopping/merchant/inventories/v1beta/regionalinventory.proto.
 */
export const file_google_shopping_merchant_inventories_v1beta_regionalinventory: GenFile = /*@__PURE__*/
  fileDesc("CkNnb29nbGUvc2hvcHBpbmcvbWVyY2hhbnQvaW52ZW50b3JpZXMvdjFiZXRhL3JlZ2lvbmFsaW52ZW50b3J5LnByb3RvEitnb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuaW52ZW50b3JpZXMudjFiZXRhItADChFSZWdpb25hbEludmVudG9yeRIRCgRuYW1lGAEgASgJQgPgQQMSFAoHYWNjb3VudBgCIAEoA0ID4EEDEhYKBnJlZ2lvbhgDIAEoCUIG4EEC4EEFEioKBXByaWNlGAQgASgLMhsuZ29vZ2xlLnNob3BwaW5nLnR5cGUuUHJpY2USLwoKc2FsZV9wcmljZRgFIAEoCzIbLmdvb2dsZS5zaG9wcGluZy50eXBlLlByaWNlEjgKGXNhbGVfcHJpY2VfZWZmZWN0aXZlX2RhdGUYBiABKAsyFS5nb29nbGUudHlwZS5JbnRlcnZhbBIZCgxhdmFpbGFiaWxpdHkYByABKAlIAIgBARJAChFjdXN0b21fYXR0cmlidXRlcxgIIAMoCzIlLmdvb2dsZS5zaG9wcGluZy50eXBlLkN1c3RvbUF0dHJpYnV0ZTp16kFyCixtZXJjaGFudGFwaS5nb29nbGVhcGlzLmNvbS9SZWdpb25hbEludmVudG9yeRJCYWNjb3VudHMve2FjY291bnR9L3Byb2R1Y3RzL3twcm9kdWN0fS9yZWdpb25hbEludmVudG9yaWVzL3tyZWdpb259Qg8KDV9hdmFpbGFiaWxpdHkijQEKHkxpc3RSZWdpb25hbEludmVudG9yaWVzUmVxdWVzdBJECgZwYXJlbnQYASABKAlCNOBBAvpBLhIsbWVyY2hhbnRhcGkuZ29vZ2xlYXBpcy5jb20vUmVnaW9uYWxJbnZlbnRvcnkSEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkimAEKH0xpc3RSZWdpb25hbEludmVudG9yaWVzUmVzcG9uc2USXAoUcmVnaW9uYWxfaW52ZW50b3JpZXMYASADKAsyPi5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuaW52ZW50b3JpZXMudjFiZXRhLlJlZ2lvbmFsSW52ZW50b3J5EhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSLHAQoeSW5zZXJ0UmVnaW9uYWxJbnZlbnRvcnlSZXF1ZXN0EkQKBnBhcmVudBgBIAEoCUI04EEC+kEuEixtZXJjaGFudGFwaS5nb29nbGVhcGlzLmNvbS9SZWdpb25hbEludmVudG9yeRJfChJyZWdpb25hbF9pbnZlbnRvcnkYAiABKAsyPi5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuaW52ZW50b3JpZXMudjFiZXRhLlJlZ2lvbmFsSW52ZW50b3J5QgPgQQIiZAoeRGVsZXRlUmVnaW9uYWxJbnZlbnRvcnlSZXF1ZXN0EkIKBG5hbWUYASABKAlCNOBBAvpBLgosbWVyY2hhbnRhcGkuZ29vZ2xlYXBpcy5jb20vUmVnaW9uYWxJbnZlbnRvcnky3wYKGFJlZ2lvbmFsSW52ZW50b3J5U2VydmljZRKNAgoXTGlzdFJlZ2lvbmFsSW52ZW50b3JpZXMSSy5nb29nbGUuc2hvcHBpbmcubWVyY2hhbnQuaW52ZW50b3JpZXMudjFiZXRhLkxpc3RSZWdpb25hbEludmVudG9yaWVzUmVxdWVzdBpMLmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5pbnZlbnRvcmllcy52MWJldGEuTGlzdFJlZ2lvbmFsSW52ZW50b3JpZXNSZXNwb25zZSJX2kEGcGFyZW50gtPkkwJIEkYvaW52ZW50b3JpZXMvdjFiZXRhL3twYXJlbnQ9YWNjb3VudHMvKi9wcm9kdWN0cy8qfS9yZWdpb25hbEludmVudG9yaWVzEpECChdJbnNlcnRSZWdpb25hbEludmVudG9yeRJLLmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5pbnZlbnRvcmllcy52MWJldGEuSW5zZXJ0UmVnaW9uYWxJbnZlbnRvcnlSZXF1ZXN0Gj4uZ29vZ2xlLnNob3BwaW5nLm1lcmNoYW50LmludmVudG9yaWVzLnYxYmV0YS5SZWdpb25hbEludmVudG9yeSJpgtPkkwJjOhJyZWdpb25hbF9pbnZlbnRvcnkiTS9pbnZlbnRvcmllcy92MWJldGEve3BhcmVudD1hY2NvdW50cy8qL3Byb2R1Y3RzLyp9L3JlZ2lvbmFsSW52ZW50b3JpZXM6aW5zZXJ0EtUBChdEZWxldGVSZWdpb25hbEludmVudG9yeRJLLmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5pbnZlbnRvcmllcy52MWJldGEuRGVsZXRlUmVnaW9uYWxJbnZlbnRvcnlSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IlXaQQRuYW1lgtPkkwJIKkYvaW52ZW50b3JpZXMvdjFiZXRhL3tuYW1lPWFjY291bnRzLyovcHJvZHVjdHMvKi9yZWdpb25hbEludmVudG9yaWVzLyp9GkfKQRptZXJjaGFudGFwaS5nb29nbGVhcGlzLmNvbdJBJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY29udGVudEKkAQovY29tLmdvb2dsZS5zaG9wcGluZy5tZXJjaGFudC5pbnZlbnRvcmllcy52MWJldGFCFlJlZ2lvbmFsSW52ZW50b3J5UHJvdG9QAVpXY2xvdWQuZ29vZ2xlLmNvbS9nby9zaG9wcGluZy9tZXJjaGFudC9pbnZlbnRvcmllcy9hcGl2MWJldGEvaW52ZW50b3JpZXNwYjtpbnZlbnRvcmllc3BiYgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_protobuf_empty, file_google_shopping_type_types, file_google_type_interval]);

/**
 * Regional inventory information for the product. Represents specific
 * information like price and availability for a given product in a specific
 * [`region`][google.shopping.merchant.inventories.v1beta.RegionalInventory.region].
 * For a list of all accepted attribute values, see the [regional product
 * inventory data
 * specification](https://support.google.com/merchants/answer/9698880).
 *
 * @generated from message google.shopping.merchant.inventories.v1beta.RegionalInventory
 */
export type RegionalInventory = Message<"google.shopping.merchant.inventories.v1beta.RegionalInventory"> & {
  /**
   * Output only. The name of the `RegionalInventory` resource.
   * Format:
   * `{regional_inventory.name=accounts/{account}/products/{product}/regionalInventories/{region}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Output only. The account that owns the product. This field will be ignored
   * if set by the client.
   *
   * @generated from field: int64 account = 2;
   */
  account: bigint;

  /**
   * Required. Immutable. ID of the region for this
   * `RegionalInventory` resource. See the [Regional availability and
   * pricing](https://support.google.com/merchants/answer/9698880) for more
   * details.
   *
   * @generated from field: string region = 3;
   */
  region: string;

  /**
   * Price of the product in this region.
   *
   * @generated from field: google.shopping.type.Price price = 4;
   */
  price?: Price;

  /**
   * Sale price of the product in this region. Mandatory if
   * [`salePriceEffectiveDate`][google.shopping.merchant.inventories.v1beta.RegionalInventory.sale_price_effective_date]
   * is defined.
   *
   * @generated from field: google.shopping.type.Price sale_price = 5;
   */
  salePrice?: Price;

  /**
   * The `TimePeriod` of the
   * sale price in this region.
   *
   * @generated from field: google.type.Interval sale_price_effective_date = 6;
   */
  salePriceEffectiveDate?: Interval;

  /**
   * Availability of the product in this region.
   * For accepted attribute values, see the [regional product inventory data
   * specification](https://support.google.com/merchants/answer/3061342)
   *
   * @generated from field: optional string availability = 7;
   */
  availability?: string;

  /**
   * A list of custom (merchant-provided) attributes. You can also use
   * `CustomAttribute` to submit any attribute of the data specification in its
   * generic form.
   *
   * @generated from field: repeated google.shopping.type.CustomAttribute custom_attributes = 8;
   */
  customAttributes: CustomAttribute[];
};

/**
 * Describes the message google.shopping.merchant.inventories.v1beta.RegionalInventory.
 * Use `create(RegionalInventorySchema)` to create a new message.
 */
export const RegionalInventorySchema: GenMessage<RegionalInventory> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_inventories_v1beta_regionalinventory, 0);

/**
 * Request message for the `ListRegionalInventories` method.
 *
 * @generated from message google.shopping.merchant.inventories.v1beta.ListRegionalInventoriesRequest
 */
export type ListRegionalInventoriesRequest = Message<"google.shopping.merchant.inventories.v1beta.ListRegionalInventoriesRequest"> & {
  /**
   * Required. The `name` of the parent product to list `RegionalInventory`
   * resources for. Format: `accounts/{account}/products/{product}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of `RegionalInventory` resources for the given product
   * to return. The service returns fewer than this value if the number of
   * inventories for the given product is less that than the `pageSize`. The
   * default value is 25000. The maximum value is 100000; If a value higher than
   * the maximum is specified, then the `pageSize` will default to the maximum.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * A page token, received from a previous `ListRegionalInventories` call.
   * Provide the page token to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListRegionalInventories`
   * must match the call that provided the page token. The token returned as
   * [nextPageToken][google.shopping.merchant.inventories.v1beta.ListRegionalInventoriesResponse.next_page_token]
   * in the response to the previous request.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message google.shopping.merchant.inventories.v1beta.ListRegionalInventoriesRequest.
 * Use `create(ListRegionalInventoriesRequestSchema)` to create a new message.
 */
export const ListRegionalInventoriesRequestSchema: GenMessage<ListRegionalInventoriesRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_inventories_v1beta_regionalinventory, 1);

/**
 * Response message for the `ListRegionalInventories` method.
 *
 * @generated from message google.shopping.merchant.inventories.v1beta.ListRegionalInventoriesResponse
 */
export type ListRegionalInventoriesResponse = Message<"google.shopping.merchant.inventories.v1beta.ListRegionalInventoriesResponse"> & {
  /**
   * The `RegionalInventory` resources for the given product from the specified
   * account.
   *
   * @generated from field: repeated google.shopping.merchant.inventories.v1beta.RegionalInventory regional_inventories = 1;
   */
  regionalInventories: RegionalInventory[];

  /**
   * A token, which can be sent as `pageToken` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message google.shopping.merchant.inventories.v1beta.ListRegionalInventoriesResponse.
 * Use `create(ListRegionalInventoriesResponseSchema)` to create a new message.
 */
export const ListRegionalInventoriesResponseSchema: GenMessage<ListRegionalInventoriesResponse> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_inventories_v1beta_regionalinventory, 2);

/**
 * Request message for the `InsertRegionalInventory` method.
 *
 * @generated from message google.shopping.merchant.inventories.v1beta.InsertRegionalInventoryRequest
 */
export type InsertRegionalInventoryRequest = Message<"google.shopping.merchant.inventories.v1beta.InsertRegionalInventoryRequest"> & {
  /**
   * Required. The account and product where this inventory will be inserted.
   * Format: `accounts/{account}/products/{product}`
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. Regional inventory information to add to the product. If the
   * product already has a `RegionalInventory` resource for the same `region`,
   * full replacement of the `RegionalInventory` resource is performed.
   *
   * @generated from field: google.shopping.merchant.inventories.v1beta.RegionalInventory regional_inventory = 2;
   */
  regionalInventory?: RegionalInventory;
};

/**
 * Describes the message google.shopping.merchant.inventories.v1beta.InsertRegionalInventoryRequest.
 * Use `create(InsertRegionalInventoryRequestSchema)` to create a new message.
 */
export const InsertRegionalInventoryRequestSchema: GenMessage<InsertRegionalInventoryRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_inventories_v1beta_regionalinventory, 3);

/**
 * Request message for the `DeleteRegionalInventory` method.
 *
 * @generated from message google.shopping.merchant.inventories.v1beta.DeleteRegionalInventoryRequest
 */
export type DeleteRegionalInventoryRequest = Message<"google.shopping.merchant.inventories.v1beta.DeleteRegionalInventoryRequest"> & {
  /**
   * Required. The name of the `RegionalInventory` resource to delete.
   * Format:
   * `accounts/{account}/products/{product}/regionalInventories/{region}`
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message google.shopping.merchant.inventories.v1beta.DeleteRegionalInventoryRequest.
 * Use `create(DeleteRegionalInventoryRequestSchema)` to create a new message.
 */
export const DeleteRegionalInventoryRequestSchema: GenMessage<DeleteRegionalInventoryRequest> = /*@__PURE__*/
  messageDesc(file_google_shopping_merchant_inventories_v1beta_regionalinventory, 4);

/**
 * Service to manage regional inventory for products. There is also separate
 * `regions` resource and API to manage regions definitions.
 *
 * @generated from service google.shopping.merchant.inventories.v1beta.RegionalInventoryService
 */
export const RegionalInventoryService: GenService<{
  /**
   * Lists the `RegionalInventory` resources for the given product in your
   * merchant account. The response might contain fewer items than specified by
   * `pageSize`.  If `pageToken` was returned in previous request, it can be
   * used to obtain additional results.
   *
   * `RegionalInventory` resources are listed per product for a given account.
   *
   * @generated from rpc google.shopping.merchant.inventories.v1beta.RegionalInventoryService.ListRegionalInventories
   */
  listRegionalInventories: {
    methodKind: "unary";
    input: typeof ListRegionalInventoriesRequestSchema;
    output: typeof ListRegionalInventoriesResponseSchema;
  },
  /**
   * Inserts a `RegionalInventory` to a given product in your
   * merchant account.
   *
   * Replaces the full `RegionalInventory` resource if an entry with the same
   * [`region`][google.shopping.merchant.inventories.v1beta.RegionalInventory.region]
   * already exists for the product.
   *
   * It might take up to 30 minutes for the new or updated `RegionalInventory`
   * resource to appear in products.
   *
   * @generated from rpc google.shopping.merchant.inventories.v1beta.RegionalInventoryService.InsertRegionalInventory
   */
  insertRegionalInventory: {
    methodKind: "unary";
    input: typeof InsertRegionalInventoryRequestSchema;
    output: typeof RegionalInventorySchema;
  },
  /**
   * Deletes the specified `RegionalInventory` resource from the given product
   * in your merchant account.  It might take up to an hour for the
   * `RegionalInventory` to be deleted from the specific product.
   * Once you have received a successful delete response, wait for that
   * period before attempting a delete again.
   *
   * @generated from rpc google.shopping.merchant.inventories.v1beta.RegionalInventoryService.DeleteRegionalInventory
   */
  deleteRegionalInventory: {
    methodKind: "unary";
    input: typeof DeleteRegionalInventoryRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_google_shopping_merchant_inventories_v1beta_regionalinventory, 0);

