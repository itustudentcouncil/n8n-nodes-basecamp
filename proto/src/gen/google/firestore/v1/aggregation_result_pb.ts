// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/firestore/v1/aggregation_result.proto (package google.firestore.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Value } from "./document_pb";
import { file_google_firestore_v1_document } from "./document_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/firestore/v1/aggregation_result.proto.
 */
export const file_google_firestore_v1_aggregation_result: GenFile = /*@__PURE__*/
  fileDesc("Cixnb29nbGUvZmlyZXN0b3JlL3YxL2FnZ3JlZ2F0aW9uX3Jlc3VsdC5wcm90bxITZ29vZ2xlLmZpcmVzdG9yZS52MSK+AQoRQWdncmVnYXRpb25SZXN1bHQSVQoQYWdncmVnYXRlX2ZpZWxkcxgCIAMoCzI7Lmdvb2dsZS5maXJlc3RvcmUudjEuQWdncmVnYXRpb25SZXN1bHQuQWdncmVnYXRlRmllbGRzRW50cnkaUgoUQWdncmVnYXRlRmllbGRzRW50cnkSCwoDa2V5GAEgASgJEikKBXZhbHVlGAIgASgLMhouZ29vZ2xlLmZpcmVzdG9yZS52MS5WYWx1ZToCOAFCzgEKF2NvbS5nb29nbGUuZmlyZXN0b3JlLnYxQhZBZ2dyZWdhdGlvblJlc3VsdFByb3RvUAFaO2Nsb3VkLmdvb2dsZS5jb20vZ28vZmlyZXN0b3JlL2FwaXYxL2ZpcmVzdG9yZXBiO2ZpcmVzdG9yZXBiogIER0NGU6oCGUdvb2dsZS5DbG91ZC5GaXJlc3RvcmUuVjHKAhlHb29nbGVcQ2xvdWRcRmlyZXN0b3JlXFYx6gIcR29vZ2xlOjpDbG91ZDo6RmlyZXN0b3JlOjpWMWIGcHJvdG8z", [file_google_firestore_v1_document]);

/**
 * The result of a single bucket from a Firestore aggregation query.
 *
 * The keys of `aggregate_fields` are the same for all results in an aggregation
 * query, unlike document queries which can have different fields present for
 * each result.
 *
 * @generated from message google.firestore.v1.AggregationResult
 */
export type AggregationResult = Message<"google.firestore.v1.AggregationResult"> & {
  /**
   * The result of the aggregation functions, ex: `COUNT(*) AS total_docs`.
   *
   * The key is the
   * [alias][google.firestore.v1.StructuredAggregationQuery.Aggregation.alias]
   * assigned to the aggregation function on input and the size of this map
   * equals the number of aggregation functions in the query.
   *
   * @generated from field: map<string, google.firestore.v1.Value> aggregate_fields = 2;
   */
  aggregateFields: { [key: string]: Value };
};

/**
 * Describes the message google.firestore.v1.AggregationResult.
 * Use `create(AggregationResultSchema)` to create a new message.
 */
export const AggregationResultSchema: GenMessage<AggregationResult> = /*@__PURE__*/
  messageDesc(file_google_firestore_v1_aggregation_result, 0);

