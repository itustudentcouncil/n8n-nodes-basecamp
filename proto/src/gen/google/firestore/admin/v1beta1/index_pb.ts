// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/firestore/admin/v1beta1/index.proto (package google.firestore.admin.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/firestore/admin/v1beta1/index.proto.
 */
export const file_google_firestore_admin_v1beta1_index: GenFile = /*@__PURE__*/
  fileDesc("Cipnb29nbGUvZmlyZXN0b3JlL2FkbWluL3YxYmV0YTEvaW5kZXgucHJvdG8SHmdvb2dsZS5maXJlc3RvcmUuYWRtaW4udjFiZXRhMSKwAQoKSW5kZXhGaWVsZBISCgpmaWVsZF9wYXRoGAEgASgJEj0KBG1vZGUYAiABKA4yLy5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxYmV0YTEuSW5kZXhGaWVsZC5Nb2RlIk8KBE1vZGUSFAoQTU9ERV9VTlNQRUNJRklFRBAAEg0KCUFTQ0VORElORxACEg4KCkRFU0NFTkRJTkcQAxISCg5BUlJBWV9DT05UQUlOUxAEIugBCgVJbmRleBIMCgRuYW1lGAEgASgJEhUKDWNvbGxlY3Rpb25faWQYAiABKAkSOgoGZmllbGRzGAMgAygLMiouZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MWJldGExLkluZGV4RmllbGQSOgoFc3RhdGUYBiABKA4yKy5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxYmV0YTEuSW5kZXguU3RhdGUiQgoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABIMCghDUkVBVElORxADEgkKBVJFQURZEAISCQoFRVJST1IQBUKgAQoiY29tLmdvb2dsZS5maXJlc3RvcmUuYWRtaW4udjFiZXRhMUIKSW5kZXhQcm90b1ABWj5jbG91ZC5nb29nbGUuY29tL2dvL2ZpcmVzdG9yZS9hZG1pbi9hcGl2MWJldGExL2FkbWlucGI7YWRtaW5wYqICBEdDRlOqAiRHb29nbGUuQ2xvdWQuRmlyZXN0b3JlLkFkbWluLlYxQmV0YTFiBnByb3RvMw", [file_google_api_annotations]);

/**
 * A field of an index.
 *
 * @generated from message google.firestore.admin.v1beta1.IndexField
 */
export type IndexField = Message<"google.firestore.admin.v1beta1.IndexField"> & {
  /**
   * The path of the field. Must match the field path specification described
   * by [google.firestore.v1beta1.Document.fields][fields].
   * Special field path `__name__` may be used by itself or at the end of a
   * path. `__type__` may be used only at the end of path.
   *
   * @generated from field: string field_path = 1;
   */
  fieldPath: string;

  /**
   * The field's mode.
   *
   * @generated from field: google.firestore.admin.v1beta1.IndexField.Mode mode = 2;
   */
  mode: IndexField_Mode;
};

/**
 * Describes the message google.firestore.admin.v1beta1.IndexField.
 * Use `create(IndexFieldSchema)` to create a new message.
 */
export const IndexFieldSchema: GenMessage<IndexField> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1beta1_index, 0);

/**
 * The mode determines how a field is indexed.
 *
 * @generated from enum google.firestore.admin.v1beta1.IndexField.Mode
 */
export enum IndexField_Mode {
  /**
   * The mode is unspecified.
   *
   * @generated from enum value: MODE_UNSPECIFIED = 0;
   */
  MODE_UNSPECIFIED = 0,

  /**
   * The field's values are indexed so as to support sequencing in
   * ascending order and also query by <, >, <=, >=, and =.
   *
   * @generated from enum value: ASCENDING = 2;
   */
  ASCENDING = 2,

  /**
   * The field's values are indexed so as to support sequencing in
   * descending order and also query by <, >, <=, >=, and =.
   *
   * @generated from enum value: DESCENDING = 3;
   */
  DESCENDING = 3,

  /**
   * The field's array values are indexed so as to support membership using
   * ARRAY_CONTAINS queries.
   *
   * @generated from enum value: ARRAY_CONTAINS = 4;
   */
  ARRAY_CONTAINS = 4,
}

/**
 * Describes the enum google.firestore.admin.v1beta1.IndexField.Mode.
 */
export const IndexField_ModeSchema: GenEnum<IndexField_Mode> = /*@__PURE__*/
  enumDesc(file_google_firestore_admin_v1beta1_index, 0, 0);

/**
 * An index definition.
 *
 * @generated from message google.firestore.admin.v1beta1.Index
 */
export type Index = Message<"google.firestore.admin.v1beta1.Index"> & {
  /**
   * The resource name of the index.
   * Output only.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The collection ID to which this index applies. Required.
   *
   * @generated from field: string collection_id = 2;
   */
  collectionId: string;

  /**
   * The fields to index.
   *
   * @generated from field: repeated google.firestore.admin.v1beta1.IndexField fields = 3;
   */
  fields: IndexField[];

  /**
   * The state of the index.
   * Output only.
   *
   * @generated from field: google.firestore.admin.v1beta1.Index.State state = 6;
   */
  state: Index_State;
};

/**
 * Describes the message google.firestore.admin.v1beta1.Index.
 * Use `create(IndexSchema)` to create a new message.
 */
export const IndexSchema: GenMessage<Index> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1beta1_index, 1);

/**
 * The state of an index. During index creation, an index will be in the
 * `CREATING` state. If the index is created successfully, it will transition
 * to the `READY` state. If the index is not able to be created, it will
 * transition to the `ERROR` state.
 *
 * @generated from enum google.firestore.admin.v1beta1.Index.State
 */
export enum Index_State {
  /**
   * The state is unspecified.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The index is being created.
   * There is an active long-running operation for the index.
   * The index is updated when writing a document.
   * Some index data may exist.
   *
   * @generated from enum value: CREATING = 3;
   */
  CREATING = 3,

  /**
   * The index is ready to be used.
   * The index is updated when writing a document.
   * The index is fully populated from all stored documents it applies to.
   *
   * @generated from enum value: READY = 2;
   */
  READY = 2,

  /**
   * The index was being created, but something went wrong.
   * There is no active long-running operation for the index,
   * and the most recently finished long-running operation failed.
   * The index is not updated when writing a document.
   * Some index data may exist.
   *
   * @generated from enum value: ERROR = 5;
   */
  ERROR = 5,
}

/**
 * Describes the enum google.firestore.admin.v1beta1.Index.State.
 */
export const Index_StateSchema: GenEnum<Index_State> = /*@__PURE__*/
  enumDesc(file_google_firestore_admin_v1beta1_index, 1, 0);

