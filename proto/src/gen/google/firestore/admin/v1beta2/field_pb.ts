// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/firestore/admin/v1beta2/field.proto (package google.firestore.admin.v1beta2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Index } from "./index_pb";
import { file_google_firestore_admin_v1beta2_index } from "./index_pb";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/firestore/admin/v1beta2/field.proto.
 */
export const file_google_firestore_admin_v1beta2_field: GenFile = /*@__PURE__*/
  fileDesc("Cipnb29nbGUvZmlyZXN0b3JlL2FkbWluL3YxYmV0YTIvZmllbGQucHJvdG8SHmdvb2dsZS5maXJlc3RvcmUuYWRtaW4udjFiZXRhMiLvAQoFRmllbGQSDAoEbmFtZRgBIAEoCRJHCgxpbmRleF9jb25maWcYAiABKAsyMS5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxYmV0YTIuRmllbGQuSW5kZXhDb25maWcajgEKC0luZGV4Q29uZmlnEjYKB2luZGV4ZXMYASADKAsyJS5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxYmV0YTIuSW5kZXgSHAoUdXNlc19hbmNlc3Rvcl9jb25maWcYAiABKAgSFgoOYW5jZXN0b3JfZmllbGQYAyABKAkSEQoJcmV2ZXJ0aW5nGAQgASgIQqABCiJjb20uZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MWJldGEyQgpGaWVsZFByb3RvUAFaPmNsb3VkLmdvb2dsZS5jb20vZ28vZmlyZXN0b3JlL2FkbWluL2FwaXYxYmV0YTIvYWRtaW5wYjthZG1pbnBiogIER0NGU6oCJEdvb2dsZS5DbG91ZC5GaXJlc3RvcmUuQWRtaW4uVjFCZXRhMmIGcHJvdG8z", [file_google_firestore_admin_v1beta2_index, file_google_api_annotations]);

/**
 * Represents a single field in the database.
 *
 * Fields are grouped by their "Collection Group", which represent all
 * collections in the database with the same id.
 *
 * @generated from message google.firestore.admin.v1beta2.Field
 */
export type Field = Message<"google.firestore.admin.v1beta2.Field"> & {
  /**
   * A field name of the form
   * `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`
   *
   * A field path may be a simple field name, e.g. `address` or a path to fields
   * within map_value , e.g. `address.city`,
   * or a special field path. The only valid special field is `*`, which
   * represents any field.
   *
   * Field paths may be quoted using ` (backtick). The only character that needs
   * to be escaped within a quoted field path is the backtick character itself,
   * escaped using a backslash. Special characters in field paths that
   * must be quoted include: `*`, `.`,
   * ``` (backtick), `[`, `]`, as well as any ascii symbolic characters.
   *
   * Examples:
   * (Note: Comments here are written in markdown syntax, so there is an
   *  additional layer of backticks to represent a code block)
   * `\`address.city\`` represents a field named `address.city`, not the map key
   * `city` in the field `address`.
   * `\`*\`` represents a field named `*`, not any field.
   *
   * A special `Field` contains the default indexing settings for all fields.
   * This field's resource name is:
   * `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`
   * Indexes defined on this `Field` will be applied to all fields which do not
   * have their own `Field` index configuration.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The index configuration for this field. If unset, field indexing will
   * revert to the configuration defined by the `ancestor_field`. To
   * explicitly remove all indexes for this field, specify an index config
   * with an empty list of indexes.
   *
   * @generated from field: google.firestore.admin.v1beta2.Field.IndexConfig index_config = 2;
   */
  indexConfig?: Field_IndexConfig;
};

/**
 * Describes the message google.firestore.admin.v1beta2.Field.
 * Use `create(FieldSchema)` to create a new message.
 */
export const FieldSchema: GenMessage<Field> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1beta2_field, 0);

/**
 * The index configuration for this field.
 *
 * @generated from message google.firestore.admin.v1beta2.Field.IndexConfig
 */
export type Field_IndexConfig = Message<"google.firestore.admin.v1beta2.Field.IndexConfig"> & {
  /**
   * The indexes supported for this field.
   *
   * @generated from field: repeated google.firestore.admin.v1beta2.Index indexes = 1;
   */
  indexes: Index[];

  /**
   * Output only. When true, the `Field`'s index configuration is set from the
   * configuration specified by the `ancestor_field`.
   * When false, the `Field`'s index configuration is defined explicitly.
   *
   * @generated from field: bool uses_ancestor_config = 2;
   */
  usesAncestorConfig: boolean;

  /**
   * Output only. Specifies the resource name of the `Field` from which this field's
   * index configuration is set (when `uses_ancestor_config` is true),
   * or from which it *would* be set if this field had no index configuration
   * (when `uses_ancestor_config` is false).
   *
   * @generated from field: string ancestor_field = 3;
   */
  ancestorField: string;

  /**
   * Output only
   * When true, the `Field`'s index configuration is in the process of being
   * reverted. Once complete, the index config will transition to the same
   * state as the field specified by `ancestor_field`, at which point
   * `uses_ancestor_config` will be `true` and `reverting` will be `false`.
   *
   * @generated from field: bool reverting = 4;
   */
  reverting: boolean;
};

/**
 * Describes the message google.firestore.admin.v1beta2.Field.IndexConfig.
 * Use `create(Field_IndexConfigSchema)` to create a new message.
 */
export const Field_IndexConfigSchema: GenMessage<Field_IndexConfig> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1beta2_field, 0, 0);

