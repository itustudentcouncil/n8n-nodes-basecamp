// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/firestore/admin/v1beta2/operation.proto (package google.firestore.admin.v1beta2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Index } from "./index_pb";
import { file_google_firestore_admin_v1beta2_index } from "./index_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_api_annotations } from "../../../api/annotations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/firestore/admin/v1beta2/operation.proto.
 */
export const file_google_firestore_admin_v1beta2_operation: GenFile = /*@__PURE__*/
  fileDesc("Ci5nb29nbGUvZmlyZXN0b3JlL2FkbWluL3YxYmV0YTIvb3BlcmF0aW9uLnByb3RvEh5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxYmV0YTIizAIKFkluZGV4T3BlcmF0aW9uTWV0YWRhdGESLgoKc3RhcnRfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoIZW5kX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEg0KBWluZGV4GAMgASgJEj0KBXN0YXRlGAQgASgOMi4uZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MWJldGEyLk9wZXJhdGlvblN0YXRlEkQKEnByb2dyZXNzX2RvY3VtZW50cxgFIAEoCzIoLmdvb2dsZS5maXJlc3RvcmUuYWRtaW4udjFiZXRhMi5Qcm9ncmVzcxJACg5wcm9ncmVzc19ieXRlcxgGIAEoCzIoLmdvb2dsZS5maXJlc3RvcmUuYWRtaW4udjFiZXRhMi5Qcm9ncmVzcyKlBQoWRmllbGRPcGVyYXRpb25NZXRhZGF0YRIuCgpzdGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDQoFZmllbGQYAyABKAkSZAoTaW5kZXhfY29uZmlnX2RlbHRhcxgEIAMoCzJHLmdvb2dsZS5maXJlc3RvcmUuYWRtaW4udjFiZXRhMi5GaWVsZE9wZXJhdGlvbk1ldGFkYXRhLkluZGV4Q29uZmlnRGVsdGESPQoFc3RhdGUYBSABKA4yLi5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxYmV0YTIuT3BlcmF0aW9uU3RhdGUSQwoRZG9jdW1lbnRfcHJvZ3Jlc3MYBiABKAsyKC5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxYmV0YTIuUHJvZ3Jlc3MSQAoOYnl0ZXNfcHJvZ3Jlc3MYByABKAsyKC5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxYmV0YTIuUHJvZ3Jlc3Ma8QEKEEluZGV4Q29uZmlnRGVsdGESZwoLY2hhbmdlX3R5cGUYASABKA4yUi5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxYmV0YTIuRmllbGRPcGVyYXRpb25NZXRhZGF0YS5JbmRleENvbmZpZ0RlbHRhLkNoYW5nZVR5cGUSNAoFaW5kZXgYAiABKAsyJS5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxYmV0YTIuSW5kZXgiPgoKQ2hhbmdlVHlwZRIbChdDSEFOR0VfVFlQRV9VTlNQRUNJRklFRBAAEgcKA0FERBABEgoKBlJFTU9WRRACIvsCChdFeHBvcnREb2N1bWVudHNNZXRhZGF0YRIuCgpzdGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASRwoPb3BlcmF0aW9uX3N0YXRlGAMgASgOMi4uZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MWJldGEyLk9wZXJhdGlvblN0YXRlEkQKEnByb2dyZXNzX2RvY3VtZW50cxgEIAEoCzIoLmdvb2dsZS5maXJlc3RvcmUuYWRtaW4udjFiZXRhMi5Qcm9ncmVzcxJACg5wcm9ncmVzc19ieXRlcxgFIAEoCzIoLmdvb2dsZS5maXJlc3RvcmUuYWRtaW4udjFiZXRhMi5Qcm9ncmVzcxIWCg5jb2xsZWN0aW9uX2lkcxgGIAMoCRIZChFvdXRwdXRfdXJpX3ByZWZpeBgHIAEoCSL6AgoXSW1wb3J0RG9jdW1lbnRzTWV0YWRhdGESLgoKc3RhcnRfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoIZW5kX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEkcKD29wZXJhdGlvbl9zdGF0ZRgDIAEoDjIuLmdvb2dsZS5maXJlc3RvcmUuYWRtaW4udjFiZXRhMi5PcGVyYXRpb25TdGF0ZRJEChJwcm9ncmVzc19kb2N1bWVudHMYBCABKAsyKC5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxYmV0YTIuUHJvZ3Jlc3MSQAoOcHJvZ3Jlc3NfYnl0ZXMYBSABKAsyKC5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxYmV0YTIuUHJvZ3Jlc3MSFgoOY29sbGVjdGlvbl9pZHMYBiADKAkSGAoQaW5wdXRfdXJpX3ByZWZpeBgHIAEoCSI0ChdFeHBvcnREb2N1bWVudHNSZXNwb25zZRIZChFvdXRwdXRfdXJpX3ByZWZpeBgBIAEoCSI6CghQcm9ncmVzcxIWCg5lc3RpbWF0ZWRfd29yaxgBIAEoAxIWCg5jb21wbGV0ZWRfd29yaxgCIAEoAyqeAQoOT3BlcmF0aW9uU3RhdGUSHwobT1BFUkFUSU9OX1NUQVRFX1VOU1BFQ0lGSUVEEAASEAoMSU5JVElBTElaSU5HEAESDgoKUFJPQ0VTU0lORxACEg4KCkNBTkNFTExJTkcQAxIOCgpGSU5BTElaSU5HEAQSDgoKU1VDQ0VTU0ZVTBAFEgoKBkZBSUxFRBAGEg0KCUNBTkNFTExFRBAHQqQBCiJjb20uZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MWJldGEyQg5PcGVyYXRpb25Qcm90b1ABWj5jbG91ZC5nb29nbGUuY29tL2dvL2ZpcmVzdG9yZS9hZG1pbi9hcGl2MWJldGEyL2FkbWlucGI7YWRtaW5wYqICBEdDRlOqAiRHb29nbGUuQ2xvdWQuRmlyZXN0b3JlLkFkbWluLlYxQmV0YTJiBnByb3RvMw", [file_google_firestore_admin_v1beta2_index, file_google_protobuf_timestamp, file_google_api_annotations]);

/**
 * Metadata for [google.longrunning.Operation][google.longrunning.Operation] results from
 * [FirestoreAdmin.CreateIndex][google.firestore.admin.v1beta2.FirestoreAdmin.CreateIndex].
 *
 * @generated from message google.firestore.admin.v1beta2.IndexOperationMetadata
 */
export type IndexOperationMetadata = Message<"google.firestore.admin.v1beta2.IndexOperationMetadata"> & {
  /**
   * The time this operation started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time this operation completed. Will be unset if operation still in
   * progress.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The index resource that this operation is acting on. For example:
   * `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
   *
   * @generated from field: string index = 3;
   */
  index: string;

  /**
   * The state of the operation.
   *
   * @generated from field: google.firestore.admin.v1beta2.OperationState state = 4;
   */
  state: OperationState;

  /**
   * The progress, in documents, of this operation.
   *
   * @generated from field: google.firestore.admin.v1beta2.Progress progress_documents = 5;
   */
  progressDocuments?: Progress;

  /**
   * The progress, in bytes, of this operation.
   *
   * @generated from field: google.firestore.admin.v1beta2.Progress progress_bytes = 6;
   */
  progressBytes?: Progress;
};

/**
 * Describes the message google.firestore.admin.v1beta2.IndexOperationMetadata.
 * Use `create(IndexOperationMetadataSchema)` to create a new message.
 */
export const IndexOperationMetadataSchema: GenMessage<IndexOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1beta2_operation, 0);

/**
 * Metadata for [google.longrunning.Operation][google.longrunning.Operation] results from
 * [FirestoreAdmin.UpdateField][google.firestore.admin.v1beta2.FirestoreAdmin.UpdateField].
 *
 * @generated from message google.firestore.admin.v1beta2.FieldOperationMetadata
 */
export type FieldOperationMetadata = Message<"google.firestore.admin.v1beta2.FieldOperationMetadata"> & {
  /**
   * The time this operation started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time this operation completed. Will be unset if operation still in
   * progress.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The field resource that this operation is acting on. For example:
   * `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`
   *
   * @generated from field: string field = 3;
   */
  field: string;

  /**
   * A list of [IndexConfigDelta][google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta], which describe the intent of this
   * operation.
   *
   * @generated from field: repeated google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta index_config_deltas = 4;
   */
  indexConfigDeltas: FieldOperationMetadata_IndexConfigDelta[];

  /**
   * The state of the operation.
   *
   * @generated from field: google.firestore.admin.v1beta2.OperationState state = 5;
   */
  state: OperationState;

  /**
   * The progress, in documents, of this operation.
   *
   * @generated from field: google.firestore.admin.v1beta2.Progress document_progress = 6;
   */
  documentProgress?: Progress;

  /**
   * The progress, in bytes, of this operation.
   *
   * @generated from field: google.firestore.admin.v1beta2.Progress bytes_progress = 7;
   */
  bytesProgress?: Progress;
};

/**
 * Describes the message google.firestore.admin.v1beta2.FieldOperationMetadata.
 * Use `create(FieldOperationMetadataSchema)` to create a new message.
 */
export const FieldOperationMetadataSchema: GenMessage<FieldOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1beta2_operation, 1);

/**
 * Information about an index configuration change.
 *
 * @generated from message google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta
 */
export type FieldOperationMetadata_IndexConfigDelta = Message<"google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta"> & {
  /**
   * Specifies how the index is changing.
   *
   * @generated from field: google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta.ChangeType change_type = 1;
   */
  changeType: FieldOperationMetadata_IndexConfigDelta_ChangeType;

  /**
   * The index being changed.
   *
   * @generated from field: google.firestore.admin.v1beta2.Index index = 2;
   */
  index?: Index;
};

/**
 * Describes the message google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta.
 * Use `create(FieldOperationMetadata_IndexConfigDeltaSchema)` to create a new message.
 */
export const FieldOperationMetadata_IndexConfigDeltaSchema: GenMessage<FieldOperationMetadata_IndexConfigDelta> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1beta2_operation, 1, 0);

/**
 * Specifies how the index is changing.
 *
 * @generated from enum google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta.ChangeType
 */
export enum FieldOperationMetadata_IndexConfigDelta_ChangeType {
  /**
   * The type of change is not specified or known.
   *
   * @generated from enum value: CHANGE_TYPE_UNSPECIFIED = 0;
   */
  CHANGE_TYPE_UNSPECIFIED = 0,

  /**
   * The single field index is being added.
   *
   * @generated from enum value: ADD = 1;
   */
  ADD = 1,

  /**
   * The single field index is being removed.
   *
   * @generated from enum value: REMOVE = 2;
   */
  REMOVE = 2,
}

/**
 * Describes the enum google.firestore.admin.v1beta2.FieldOperationMetadata.IndexConfigDelta.ChangeType.
 */
export const FieldOperationMetadata_IndexConfigDelta_ChangeTypeSchema: GenEnum<FieldOperationMetadata_IndexConfigDelta_ChangeType> = /*@__PURE__*/
  enumDesc(file_google_firestore_admin_v1beta2_operation, 1, 0, 0);

/**
 * Metadata for [google.longrunning.Operation][google.longrunning.Operation] results from
 * [FirestoreAdmin.ExportDocuments][google.firestore.admin.v1beta2.FirestoreAdmin.ExportDocuments].
 *
 * @generated from message google.firestore.admin.v1beta2.ExportDocumentsMetadata
 */
export type ExportDocumentsMetadata = Message<"google.firestore.admin.v1beta2.ExportDocumentsMetadata"> & {
  /**
   * The time this operation started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time this operation completed. Will be unset if operation still in
   * progress.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The state of the export operation.
   *
   * @generated from field: google.firestore.admin.v1beta2.OperationState operation_state = 3;
   */
  operationState: OperationState;

  /**
   * The progress, in documents, of this operation.
   *
   * @generated from field: google.firestore.admin.v1beta2.Progress progress_documents = 4;
   */
  progressDocuments?: Progress;

  /**
   * The progress, in bytes, of this operation.
   *
   * @generated from field: google.firestore.admin.v1beta2.Progress progress_bytes = 5;
   */
  progressBytes?: Progress;

  /**
   * Which collection ids are being exported.
   *
   * @generated from field: repeated string collection_ids = 6;
   */
  collectionIds: string[];

  /**
   * Where the entities are being exported to.
   *
   * @generated from field: string output_uri_prefix = 7;
   */
  outputUriPrefix: string;
};

/**
 * Describes the message google.firestore.admin.v1beta2.ExportDocumentsMetadata.
 * Use `create(ExportDocumentsMetadataSchema)` to create a new message.
 */
export const ExportDocumentsMetadataSchema: GenMessage<ExportDocumentsMetadata> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1beta2_operation, 2);

/**
 * Metadata for [google.longrunning.Operation][google.longrunning.Operation] results from
 * [FirestoreAdmin.ImportDocuments][google.firestore.admin.v1beta2.FirestoreAdmin.ImportDocuments].
 *
 * @generated from message google.firestore.admin.v1beta2.ImportDocumentsMetadata
 */
export type ImportDocumentsMetadata = Message<"google.firestore.admin.v1beta2.ImportDocumentsMetadata"> & {
  /**
   * The time this operation started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time this operation completed. Will be unset if operation still in
   * progress.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The state of the import operation.
   *
   * @generated from field: google.firestore.admin.v1beta2.OperationState operation_state = 3;
   */
  operationState: OperationState;

  /**
   * The progress, in documents, of this operation.
   *
   * @generated from field: google.firestore.admin.v1beta2.Progress progress_documents = 4;
   */
  progressDocuments?: Progress;

  /**
   * The progress, in bytes, of this operation.
   *
   * @generated from field: google.firestore.admin.v1beta2.Progress progress_bytes = 5;
   */
  progressBytes?: Progress;

  /**
   * Which collection ids are being imported.
   *
   * @generated from field: repeated string collection_ids = 6;
   */
  collectionIds: string[];

  /**
   * The location of the documents being imported.
   *
   * @generated from field: string input_uri_prefix = 7;
   */
  inputUriPrefix: string;
};

/**
 * Describes the message google.firestore.admin.v1beta2.ImportDocumentsMetadata.
 * Use `create(ImportDocumentsMetadataSchema)` to create a new message.
 */
export const ImportDocumentsMetadataSchema: GenMessage<ImportDocumentsMetadata> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1beta2_operation, 3);

/**
 * Returned in the [google.longrunning.Operation][google.longrunning.Operation] response field.
 *
 * @generated from message google.firestore.admin.v1beta2.ExportDocumentsResponse
 */
export type ExportDocumentsResponse = Message<"google.firestore.admin.v1beta2.ExportDocumentsResponse"> & {
  /**
   * Location of the output files. This can be used to begin an import
   * into Cloud Firestore (this project or another project) after the operation
   * completes successfully.
   *
   * @generated from field: string output_uri_prefix = 1;
   */
  outputUriPrefix: string;
};

/**
 * Describes the message google.firestore.admin.v1beta2.ExportDocumentsResponse.
 * Use `create(ExportDocumentsResponseSchema)` to create a new message.
 */
export const ExportDocumentsResponseSchema: GenMessage<ExportDocumentsResponse> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1beta2_operation, 4);

/**
 * Describes the progress of the operation.
 * Unit of work is generic and must be interpreted based on where [Progress][google.firestore.admin.v1beta2.Progress]
 * is used.
 *
 * @generated from message google.firestore.admin.v1beta2.Progress
 */
export type Progress = Message<"google.firestore.admin.v1beta2.Progress"> & {
  /**
   * The amount of work estimated.
   *
   * @generated from field: int64 estimated_work = 1;
   */
  estimatedWork: bigint;

  /**
   * The amount of work completed.
   *
   * @generated from field: int64 completed_work = 2;
   */
  completedWork: bigint;
};

/**
 * Describes the message google.firestore.admin.v1beta2.Progress.
 * Use `create(ProgressSchema)` to create a new message.
 */
export const ProgressSchema: GenMessage<Progress> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1beta2_operation, 5);

/**
 * Describes the state of the operation.
 *
 * @generated from enum google.firestore.admin.v1beta2.OperationState
 */
export enum OperationState {
  /**
   * Unspecified.
   *
   * @generated from enum value: OPERATION_STATE_UNSPECIFIED = 0;
   */
  OPERATION_STATE_UNSPECIFIED = 0,

  /**
   * Request is being prepared for processing.
   *
   * @generated from enum value: INITIALIZING = 1;
   */
  INITIALIZING = 1,

  /**
   * Request is actively being processed.
   *
   * @generated from enum value: PROCESSING = 2;
   */
  PROCESSING = 2,

  /**
   * Request is in the process of being cancelled after user called
   * google.longrunning.Operations.CancelOperation on the operation.
   *
   * @generated from enum value: CANCELLING = 3;
   */
  CANCELLING = 3,

  /**
   * Request has been processed and is in its finalization stage.
   *
   * @generated from enum value: FINALIZING = 4;
   */
  FINALIZING = 4,

  /**
   * Request has completed successfully.
   *
   * @generated from enum value: SUCCESSFUL = 5;
   */
  SUCCESSFUL = 5,

  /**
   * Request has finished being processed, but encountered an error.
   *
   * @generated from enum value: FAILED = 6;
   */
  FAILED = 6,

  /**
   * Request has finished being cancelled after user called
   * google.longrunning.Operations.CancelOperation.
   *
   * @generated from enum value: CANCELLED = 7;
   */
  CANCELLED = 7,
}

/**
 * Describes the enum google.firestore.admin.v1beta2.OperationState.
 */
export const OperationStateSchema: GenEnum<OperationState> = /*@__PURE__*/
  enumDesc(file_google_firestore_admin_v1beta2_operation, 0);

