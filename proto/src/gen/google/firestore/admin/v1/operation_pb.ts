// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file google/firestore/admin/v1/operation.proto (package google.firestore.admin.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_resource } from "../../../api/resource_pb";
import type { Index } from "./index_pb";
import { file_google_firestore_admin_v1_index } from "./index_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/firestore/admin/v1/operation.proto.
 */
export const file_google_firestore_admin_v1_operation: GenFile = /*@__PURE__*/
  fileDesc("Cilnb29nbGUvZmlyZXN0b3JlL2FkbWluL3YxL29wZXJhdGlvbi5wcm90bxIZZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MSK9AgoWSW5kZXhPcGVyYXRpb25NZXRhZGF0YRIuCgpzdGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDQoFaW5kZXgYAyABKAkSOAoFc3RhdGUYBCABKA4yKS5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxLk9wZXJhdGlvblN0YXRlEj8KEnByb2dyZXNzX2RvY3VtZW50cxgFIAEoCzIjLmdvb2dsZS5maXJlc3RvcmUuYWRtaW4udjEuUHJvZ3Jlc3MSOwoOcHJvZ3Jlc3NfYnl0ZXMYBiABKAsyIy5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxLlByb2dyZXNzIpkHChZGaWVsZE9wZXJhdGlvbk1ldGFkYXRhEi4KCnN0YXJ0X3RpbWUYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiwKCGVuZF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBINCgVmaWVsZBgDIAEoCRJfChNpbmRleF9jb25maWdfZGVsdGFzGAQgAygLMkIuZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MS5GaWVsZE9wZXJhdGlvbk1ldGFkYXRhLkluZGV4Q29uZmlnRGVsdGESOAoFc3RhdGUYBSABKA4yKS5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxLk9wZXJhdGlvblN0YXRlEj8KEnByb2dyZXNzX2RvY3VtZW50cxgGIAEoCzIjLmdvb2dsZS5maXJlc3RvcmUuYWRtaW4udjEuUHJvZ3Jlc3MSOwoOcHJvZ3Jlc3NfYnl0ZXMYByABKAsyIy5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxLlByb2dyZXNzEloKEHR0bF9jb25maWdfZGVsdGEYCCABKAsyQC5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxLkZpZWxkT3BlcmF0aW9uTWV0YWRhdGEuVHRsQ29uZmlnRGVsdGEa5wEKEEluZGV4Q29uZmlnRGVsdGESYgoLY2hhbmdlX3R5cGUYASABKA4yTS5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxLkZpZWxkT3BlcmF0aW9uTWV0YWRhdGEuSW5kZXhDb25maWdEZWx0YS5DaGFuZ2VUeXBlEi8KBWluZGV4GAIgASgLMiAuZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MS5JbmRleCI+CgpDaGFuZ2VUeXBlEhsKF0NIQU5HRV9UWVBFX1VOU1BFQ0lGSUVEEAASBwoDQUREEAESCgoGUkVNT1ZFEAIasgEKDlR0bENvbmZpZ0RlbHRhEmAKC2NoYW5nZV90eXBlGAEgASgOMksuZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MS5GaWVsZE9wZXJhdGlvbk1ldGFkYXRhLlR0bENvbmZpZ0RlbHRhLkNoYW5nZVR5cGUiPgoKQ2hhbmdlVHlwZRIbChdDSEFOR0VfVFlQRV9VTlNQRUNJRklFRBAAEgcKA0FERBABEgoKBlJFTU9WRRACIrYDChdFeHBvcnREb2N1bWVudHNNZXRhZGF0YRIuCgpzdGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASQgoPb3BlcmF0aW9uX3N0YXRlGAMgASgOMikuZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MS5PcGVyYXRpb25TdGF0ZRI/ChJwcm9ncmVzc19kb2N1bWVudHMYBCABKAsyIy5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxLlByb2dyZXNzEjsKDnByb2dyZXNzX2J5dGVzGAUgASgLMiMuZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MS5Qcm9ncmVzcxIWCg5jb2xsZWN0aW9uX2lkcxgGIAMoCRIZChFvdXRwdXRfdXJpX3ByZWZpeBgHIAEoCRIVCg1uYW1lc3BhY2VfaWRzGAggAygJEjEKDXNuYXBzaG90X3RpbWUYCSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIoIDChdJbXBvcnREb2N1bWVudHNNZXRhZGF0YRIuCgpzdGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASQgoPb3BlcmF0aW9uX3N0YXRlGAMgASgOMikuZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MS5PcGVyYXRpb25TdGF0ZRI/ChJwcm9ncmVzc19kb2N1bWVudHMYBCABKAsyIy5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxLlByb2dyZXNzEjsKDnByb2dyZXNzX2J5dGVzGAUgASgLMiMuZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MS5Qcm9ncmVzcxIWCg5jb2xsZWN0aW9uX2lkcxgGIAMoCRIYChBpbnB1dF91cmlfcHJlZml4GAcgASgJEhUKDW5hbWVzcGFjZV9pZHMYCCADKAkinwMKG0J1bGtEZWxldGVEb2N1bWVudHNNZXRhZGF0YRIuCgpzdGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASQgoPb3BlcmF0aW9uX3N0YXRlGAMgASgOMikuZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MS5PcGVyYXRpb25TdGF0ZRI/ChJwcm9ncmVzc19kb2N1bWVudHMYBCABKAsyIy5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxLlByb2dyZXNzEjsKDnByb2dyZXNzX2J5dGVzGAUgASgLMiMuZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MS5Qcm9ncmVzcxIWCg5jb2xsZWN0aW9uX2lkcxgGIAMoCRIVCg1uYW1lc3BhY2VfaWRzGAcgAygJEjEKDXNuYXBzaG90X3RpbWUYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIjQKF0V4cG9ydERvY3VtZW50c1Jlc3BvbnNlEhkKEW91dHB1dF91cmlfcHJlZml4GAEgASgJIu0CChdSZXN0b3JlRGF0YWJhc2VNZXRhZGF0YRIuCgpzdGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASQgoPb3BlcmF0aW9uX3N0YXRlGAMgASgOMikuZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MS5PcGVyYXRpb25TdGF0ZRI4CghkYXRhYmFzZRgEIAEoCUIm+kEjCiFmaXJlc3RvcmUuZ29vZ2xlYXBpcy5jb20vRGF0YWJhc2USNAoGYmFja3VwGAUgASgJQiT6QSEKH2ZpcmVzdG9yZS5nb29nbGVhcGlzLmNvbS9CYWNrdXASQAoTcHJvZ3Jlc3NfcGVyY2VudGFnZRgIIAEoCzIjLmdvb2dsZS5maXJlc3RvcmUuYWRtaW4udjEuUHJvZ3Jlc3MiOgoIUHJvZ3Jlc3MSFgoOZXN0aW1hdGVkX3dvcmsYASABKAMSFgoOY29tcGxldGVkX3dvcmsYAiABKAMqngEKDk9wZXJhdGlvblN0YXRlEh8KG09QRVJBVElPTl9TVEFURV9VTlNQRUNJRklFRBAAEhAKDElOSVRJQUxJWklORxABEg4KClBST0NFU1NJTkcQAhIOCgpDQU5DRUxMSU5HEAMSDgoKRklOQUxJWklORxAEEg4KClNVQ0NFU1NGVUwQBRIKCgZGQUlMRUQQBhINCglDQU5DRUxMRUQQB0LdAQodY29tLmdvb2dsZS5maXJlc3RvcmUuYWRtaW4udjFCDk9wZXJhdGlvblByb3RvUAFaOWNsb3VkLmdvb2dsZS5jb20vZ28vZmlyZXN0b3JlL2FwaXYxL2FkbWluL2FkbWlucGI7YWRtaW5wYqICBEdDRlOqAh9Hb29nbGUuQ2xvdWQuRmlyZXN0b3JlLkFkbWluLlYxygIfR29vZ2xlXENsb3VkXEZpcmVzdG9yZVxBZG1pblxWMeoCI0dvb2dsZTo6Q2xvdWQ6OkZpcmVzdG9yZTo6QWRtaW46OlYxYgZwcm90bzM", [file_google_api_resource, file_google_firestore_admin_v1_index, file_google_protobuf_timestamp]);

/**
 * Metadata for [google.longrunning.Operation][google.longrunning.Operation]
 * results from
 * [FirestoreAdmin.CreateIndex][google.firestore.admin.v1.FirestoreAdmin.CreateIndex].
 *
 * @generated from message google.firestore.admin.v1.IndexOperationMetadata
 */
export type IndexOperationMetadata = Message<"google.firestore.admin.v1.IndexOperationMetadata"> & {
  /**
   * The time this operation started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time this operation completed. Will be unset if operation still in
   * progress.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The index resource that this operation is acting on. For example:
   * `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
   *
   * @generated from field: string index = 3;
   */
  index: string;

  /**
   * The state of the operation.
   *
   * @generated from field: google.firestore.admin.v1.OperationState state = 4;
   */
  state: OperationState;

  /**
   * The progress, in documents, of this operation.
   *
   * @generated from field: google.firestore.admin.v1.Progress progress_documents = 5;
   */
  progressDocuments?: Progress;

  /**
   * The progress, in bytes, of this operation.
   *
   * @generated from field: google.firestore.admin.v1.Progress progress_bytes = 6;
   */
  progressBytes?: Progress;
};

/**
 * Describes the message google.firestore.admin.v1.IndexOperationMetadata.
 * Use `create(IndexOperationMetadataSchema)` to create a new message.
 */
export const IndexOperationMetadataSchema: GenMessage<IndexOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1_operation, 0);

/**
 * Metadata for [google.longrunning.Operation][google.longrunning.Operation]
 * results from
 * [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField].
 *
 * @generated from message google.firestore.admin.v1.FieldOperationMetadata
 */
export type FieldOperationMetadata = Message<"google.firestore.admin.v1.FieldOperationMetadata"> & {
  /**
   * The time this operation started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time this operation completed. Will be unset if operation still in
   * progress.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The field resource that this operation is acting on. For example:
   * `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`
   *
   * @generated from field: string field = 3;
   */
  field: string;

  /**
   * A list of
   * [IndexConfigDelta][google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta],
   * which describe the intent of this operation.
   *
   * @generated from field: repeated google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta index_config_deltas = 4;
   */
  indexConfigDeltas: FieldOperationMetadata_IndexConfigDelta[];

  /**
   * The state of the operation.
   *
   * @generated from field: google.firestore.admin.v1.OperationState state = 5;
   */
  state: OperationState;

  /**
   * The progress, in documents, of this operation.
   *
   * @generated from field: google.firestore.admin.v1.Progress progress_documents = 6;
   */
  progressDocuments?: Progress;

  /**
   * The progress, in bytes, of this operation.
   *
   * @generated from field: google.firestore.admin.v1.Progress progress_bytes = 7;
   */
  progressBytes?: Progress;

  /**
   * Describes the deltas of TTL configuration.
   *
   * @generated from field: google.firestore.admin.v1.FieldOperationMetadata.TtlConfigDelta ttl_config_delta = 8;
   */
  ttlConfigDelta?: FieldOperationMetadata_TtlConfigDelta;
};

/**
 * Describes the message google.firestore.admin.v1.FieldOperationMetadata.
 * Use `create(FieldOperationMetadataSchema)` to create a new message.
 */
export const FieldOperationMetadataSchema: GenMessage<FieldOperationMetadata> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1_operation, 1);

/**
 * Information about an index configuration change.
 *
 * @generated from message google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta
 */
export type FieldOperationMetadata_IndexConfigDelta = Message<"google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta"> & {
  /**
   * Specifies how the index is changing.
   *
   * @generated from field: google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.ChangeType change_type = 1;
   */
  changeType: FieldOperationMetadata_IndexConfigDelta_ChangeType;

  /**
   * The index being changed.
   *
   * @generated from field: google.firestore.admin.v1.Index index = 2;
   */
  index?: Index;
};

/**
 * Describes the message google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.
 * Use `create(FieldOperationMetadata_IndexConfigDeltaSchema)` to create a new message.
 */
export const FieldOperationMetadata_IndexConfigDeltaSchema: GenMessage<FieldOperationMetadata_IndexConfigDelta> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1_operation, 1, 0);

/**
 * Specifies how the index is changing.
 *
 * @generated from enum google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.ChangeType
 */
export enum FieldOperationMetadata_IndexConfigDelta_ChangeType {
  /**
   * The type of change is not specified or known.
   *
   * @generated from enum value: CHANGE_TYPE_UNSPECIFIED = 0;
   */
  CHANGE_TYPE_UNSPECIFIED = 0,

  /**
   * The single field index is being added.
   *
   * @generated from enum value: ADD = 1;
   */
  ADD = 1,

  /**
   * The single field index is being removed.
   *
   * @generated from enum value: REMOVE = 2;
   */
  REMOVE = 2,
}

/**
 * Describes the enum google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.ChangeType.
 */
export const FieldOperationMetadata_IndexConfigDelta_ChangeTypeSchema: GenEnum<FieldOperationMetadata_IndexConfigDelta_ChangeType> = /*@__PURE__*/
  enumDesc(file_google_firestore_admin_v1_operation, 1, 0, 0);

/**
 * Information about a TTL configuration change.
 *
 * @generated from message google.firestore.admin.v1.FieldOperationMetadata.TtlConfigDelta
 */
export type FieldOperationMetadata_TtlConfigDelta = Message<"google.firestore.admin.v1.FieldOperationMetadata.TtlConfigDelta"> & {
  /**
   * Specifies how the TTL configuration is changing.
   *
   * @generated from field: google.firestore.admin.v1.FieldOperationMetadata.TtlConfigDelta.ChangeType change_type = 1;
   */
  changeType: FieldOperationMetadata_TtlConfigDelta_ChangeType;
};

/**
 * Describes the message google.firestore.admin.v1.FieldOperationMetadata.TtlConfigDelta.
 * Use `create(FieldOperationMetadata_TtlConfigDeltaSchema)` to create a new message.
 */
export const FieldOperationMetadata_TtlConfigDeltaSchema: GenMessage<FieldOperationMetadata_TtlConfigDelta> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1_operation, 1, 1);

/**
 * Specifies how the TTL config is changing.
 *
 * @generated from enum google.firestore.admin.v1.FieldOperationMetadata.TtlConfigDelta.ChangeType
 */
export enum FieldOperationMetadata_TtlConfigDelta_ChangeType {
  /**
   * The type of change is not specified or known.
   *
   * @generated from enum value: CHANGE_TYPE_UNSPECIFIED = 0;
   */
  CHANGE_TYPE_UNSPECIFIED = 0,

  /**
   * The TTL config is being added.
   *
   * @generated from enum value: ADD = 1;
   */
  ADD = 1,

  /**
   * The TTL config is being removed.
   *
   * @generated from enum value: REMOVE = 2;
   */
  REMOVE = 2,
}

/**
 * Describes the enum google.firestore.admin.v1.FieldOperationMetadata.TtlConfigDelta.ChangeType.
 */
export const FieldOperationMetadata_TtlConfigDelta_ChangeTypeSchema: GenEnum<FieldOperationMetadata_TtlConfigDelta_ChangeType> = /*@__PURE__*/
  enumDesc(file_google_firestore_admin_v1_operation, 1, 1, 0);

/**
 * Metadata for [google.longrunning.Operation][google.longrunning.Operation]
 * results from
 * [FirestoreAdmin.ExportDocuments][google.firestore.admin.v1.FirestoreAdmin.ExportDocuments].
 *
 * @generated from message google.firestore.admin.v1.ExportDocumentsMetadata
 */
export type ExportDocumentsMetadata = Message<"google.firestore.admin.v1.ExportDocumentsMetadata"> & {
  /**
   * The time this operation started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time this operation completed. Will be unset if operation still in
   * progress.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The state of the export operation.
   *
   * @generated from field: google.firestore.admin.v1.OperationState operation_state = 3;
   */
  operationState: OperationState;

  /**
   * The progress, in documents, of this operation.
   *
   * @generated from field: google.firestore.admin.v1.Progress progress_documents = 4;
   */
  progressDocuments?: Progress;

  /**
   * The progress, in bytes, of this operation.
   *
   * @generated from field: google.firestore.admin.v1.Progress progress_bytes = 5;
   */
  progressBytes?: Progress;

  /**
   * Which collection IDs are being exported.
   *
   * @generated from field: repeated string collection_ids = 6;
   */
  collectionIds: string[];

  /**
   * Where the documents are being exported to.
   *
   * @generated from field: string output_uri_prefix = 7;
   */
  outputUriPrefix: string;

  /**
   * Which namespace IDs are being exported.
   *
   * @generated from field: repeated string namespace_ids = 8;
   */
  namespaceIds: string[];

  /**
   * The timestamp that corresponds to the version of the database that is being
   * exported. If unspecified, there are no guarantees about the consistency of
   * the documents being exported.
   *
   * @generated from field: google.protobuf.Timestamp snapshot_time = 9;
   */
  snapshotTime?: Timestamp;
};

/**
 * Describes the message google.firestore.admin.v1.ExportDocumentsMetadata.
 * Use `create(ExportDocumentsMetadataSchema)` to create a new message.
 */
export const ExportDocumentsMetadataSchema: GenMessage<ExportDocumentsMetadata> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1_operation, 2);

/**
 * Metadata for [google.longrunning.Operation][google.longrunning.Operation]
 * results from
 * [FirestoreAdmin.ImportDocuments][google.firestore.admin.v1.FirestoreAdmin.ImportDocuments].
 *
 * @generated from message google.firestore.admin.v1.ImportDocumentsMetadata
 */
export type ImportDocumentsMetadata = Message<"google.firestore.admin.v1.ImportDocumentsMetadata"> & {
  /**
   * The time this operation started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time this operation completed. Will be unset if operation still in
   * progress.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The state of the import operation.
   *
   * @generated from field: google.firestore.admin.v1.OperationState operation_state = 3;
   */
  operationState: OperationState;

  /**
   * The progress, in documents, of this operation.
   *
   * @generated from field: google.firestore.admin.v1.Progress progress_documents = 4;
   */
  progressDocuments?: Progress;

  /**
   * The progress, in bytes, of this operation.
   *
   * @generated from field: google.firestore.admin.v1.Progress progress_bytes = 5;
   */
  progressBytes?: Progress;

  /**
   * Which collection IDs are being imported.
   *
   * @generated from field: repeated string collection_ids = 6;
   */
  collectionIds: string[];

  /**
   * The location of the documents being imported.
   *
   * @generated from field: string input_uri_prefix = 7;
   */
  inputUriPrefix: string;

  /**
   * Which namespace IDs are being imported.
   *
   * @generated from field: repeated string namespace_ids = 8;
   */
  namespaceIds: string[];
};

/**
 * Describes the message google.firestore.admin.v1.ImportDocumentsMetadata.
 * Use `create(ImportDocumentsMetadataSchema)` to create a new message.
 */
export const ImportDocumentsMetadataSchema: GenMessage<ImportDocumentsMetadata> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1_operation, 3);

/**
 * Metadata for [google.longrunning.Operation][google.longrunning.Operation]
 * results from
 * [FirestoreAdmin.BulkDeleteDocuments][google.firestore.admin.v1.FirestoreAdmin.BulkDeleteDocuments].
 *
 * @generated from message google.firestore.admin.v1.BulkDeleteDocumentsMetadata
 */
export type BulkDeleteDocumentsMetadata = Message<"google.firestore.admin.v1.BulkDeleteDocumentsMetadata"> & {
  /**
   * The time this operation started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time this operation completed. Will be unset if operation still in
   * progress.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The state of the operation.
   *
   * @generated from field: google.firestore.admin.v1.OperationState operation_state = 3;
   */
  operationState: OperationState;

  /**
   * The progress, in documents, of this operation.
   *
   * @generated from field: google.firestore.admin.v1.Progress progress_documents = 4;
   */
  progressDocuments?: Progress;

  /**
   * The progress, in bytes, of this operation.
   *
   * @generated from field: google.firestore.admin.v1.Progress progress_bytes = 5;
   */
  progressBytes?: Progress;

  /**
   * The IDs of the collection groups that are being deleted.
   *
   * @generated from field: repeated string collection_ids = 6;
   */
  collectionIds: string[];

  /**
   * Which namespace IDs are being deleted.
   *
   * @generated from field: repeated string namespace_ids = 7;
   */
  namespaceIds: string[];

  /**
   * The timestamp that corresponds to the version of the database that is being
   * read to get the list of documents to delete. This time can also be used as
   * the timestamp of PITR in case of disaster recovery (subject to PITR window
   * limit).
   *
   * @generated from field: google.protobuf.Timestamp snapshot_time = 8;
   */
  snapshotTime?: Timestamp;
};

/**
 * Describes the message google.firestore.admin.v1.BulkDeleteDocumentsMetadata.
 * Use `create(BulkDeleteDocumentsMetadataSchema)` to create a new message.
 */
export const BulkDeleteDocumentsMetadataSchema: GenMessage<BulkDeleteDocumentsMetadata> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1_operation, 4);

/**
 * Returned in the [google.longrunning.Operation][google.longrunning.Operation]
 * response field.
 *
 * @generated from message google.firestore.admin.v1.ExportDocumentsResponse
 */
export type ExportDocumentsResponse = Message<"google.firestore.admin.v1.ExportDocumentsResponse"> & {
  /**
   * Location of the output files. This can be used to begin an import
   * into Cloud Firestore (this project or another project) after the operation
   * completes successfully.
   *
   * @generated from field: string output_uri_prefix = 1;
   */
  outputUriPrefix: string;
};

/**
 * Describes the message google.firestore.admin.v1.ExportDocumentsResponse.
 * Use `create(ExportDocumentsResponseSchema)` to create a new message.
 */
export const ExportDocumentsResponseSchema: GenMessage<ExportDocumentsResponse> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1_operation, 5);

/**
 * Metadata for the [long-running operation][google.longrunning.Operation] from
 * the [RestoreDatabase][google.firestore.admin.v1.RestoreDatabase] request.
 *
 * @generated from message google.firestore.admin.v1.RestoreDatabaseMetadata
 */
export type RestoreDatabaseMetadata = Message<"google.firestore.admin.v1.RestoreDatabaseMetadata"> & {
  /**
   * The time the restore was started.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * The time the restore finished, unset for ongoing restores.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * The operation state of the restore.
   *
   * @generated from field: google.firestore.admin.v1.OperationState operation_state = 3;
   */
  operationState: OperationState;

  /**
   * The name of the database being restored to.
   *
   * @generated from field: string database = 4;
   */
  database: string;

  /**
   * The name of the backup restoring from.
   *
   * @generated from field: string backup = 5;
   */
  backup: string;

  /**
   * How far along the restore is as an estimated percentage of remaining time.
   *
   * @generated from field: google.firestore.admin.v1.Progress progress_percentage = 8;
   */
  progressPercentage?: Progress;
};

/**
 * Describes the message google.firestore.admin.v1.RestoreDatabaseMetadata.
 * Use `create(RestoreDatabaseMetadataSchema)` to create a new message.
 */
export const RestoreDatabaseMetadataSchema: GenMessage<RestoreDatabaseMetadata> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1_operation, 6);

/**
 * Describes the progress of the operation.
 * Unit of work is generic and must be interpreted based on where
 * [Progress][google.firestore.admin.v1.Progress] is used.
 *
 * @generated from message google.firestore.admin.v1.Progress
 */
export type Progress = Message<"google.firestore.admin.v1.Progress"> & {
  /**
   * The amount of work estimated.
   *
   * @generated from field: int64 estimated_work = 1;
   */
  estimatedWork: bigint;

  /**
   * The amount of work completed.
   *
   * @generated from field: int64 completed_work = 2;
   */
  completedWork: bigint;
};

/**
 * Describes the message google.firestore.admin.v1.Progress.
 * Use `create(ProgressSchema)` to create a new message.
 */
export const ProgressSchema: GenMessage<Progress> = /*@__PURE__*/
  messageDesc(file_google_firestore_admin_v1_operation, 7);

/**
 * Describes the state of the operation.
 *
 * @generated from enum google.firestore.admin.v1.OperationState
 */
export enum OperationState {
  /**
   * Unspecified.
   *
   * @generated from enum value: OPERATION_STATE_UNSPECIFIED = 0;
   */
  OPERATION_STATE_UNSPECIFIED = 0,

  /**
   * Request is being prepared for processing.
   *
   * @generated from enum value: INITIALIZING = 1;
   */
  INITIALIZING = 1,

  /**
   * Request is actively being processed.
   *
   * @generated from enum value: PROCESSING = 2;
   */
  PROCESSING = 2,

  /**
   * Request is in the process of being cancelled after user called
   * google.longrunning.Operations.CancelOperation on the operation.
   *
   * @generated from enum value: CANCELLING = 3;
   */
  CANCELLING = 3,

  /**
   * Request has been processed and is in its finalization stage.
   *
   * @generated from enum value: FINALIZING = 4;
   */
  FINALIZING = 4,

  /**
   * Request has completed successfully.
   *
   * @generated from enum value: SUCCESSFUL = 5;
   */
  SUCCESSFUL = 5,

  /**
   * Request has finished being processed, but encountered an error.
   *
   * @generated from enum value: FAILED = 6;
   */
  FAILED = 6,

  /**
   * Request has finished being cancelled after user called
   * google.longrunning.Operations.CancelOperation.
   *
   * @generated from enum value: CANCELLED = 7;
   */
  CANCELLED = 7,
}

/**
 * Describes the enum google.firestore.admin.v1.OperationState.
 */
export const OperationStateSchema: GenEnum<OperationState> = /*@__PURE__*/
  enumDesc(file_google_firestore_admin_v1_operation, 0);

