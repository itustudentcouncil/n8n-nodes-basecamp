// Copyright 2020 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file gapic/metadata/gapic_metadata.proto (package google.gapic.metadata, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file gapic/metadata/gapic_metadata.proto.
 */
export const file_gapic_metadata_gapic_metadata: GenFile = /*@__PURE__*/
  fileDesc("CiNnYXBpYy9tZXRhZGF0YS9nYXBpY19tZXRhZGF0YS5wcm90bxIVZ29vZ2xlLmdhcGljLm1ldGFkYXRhIvAFCg1HYXBpY01ldGFkYXRhEg4KBnNjaGVtYRgBIAEoCRIPCgdjb21tZW50GAIgASgJEhAKCGxhbmd1YWdlGAMgASgJEhUKDXByb3RvX3BhY2thZ2UYBCABKAkSFwoPbGlicmFyeV9wYWNrYWdlGAUgASgJEkQKCHNlcnZpY2VzGAYgAygLMjIuZ29vZ2xlLmdhcGljLm1ldGFkYXRhLkdhcGljTWV0YWRhdGEuU2VydmljZXNFbnRyeRppCg1TZXJ2aWNlc0VudHJ5EgsKA2tleRgBIAEoCRJHCgV2YWx1ZRgCIAEoCzI4Lmdvb2dsZS5nYXBpYy5tZXRhZGF0YS5HYXBpY01ldGFkYXRhLlNlcnZpY2VGb3JUcmFuc3BvcnQ6AjgBGtMBChNTZXJ2aWNlRm9yVHJhbnNwb3J0ElYKB2NsaWVudHMYASADKAsyRS5nb29nbGUuZ2FwaWMubWV0YWRhdGEuR2FwaWNNZXRhZGF0YS5TZXJ2aWNlRm9yVHJhbnNwb3J0LkNsaWVudHNFbnRyeRpkCgxDbGllbnRzRW50cnkSCwoDa2V5GAEgASgJEkMKBXZhbHVlGAIgASgLMjQuZ29vZ2xlLmdhcGljLm1ldGFkYXRhLkdhcGljTWV0YWRhdGEuU2VydmljZUFzQ2xpZW50OgI4ARrVAQoPU2VydmljZUFzQ2xpZW50EhYKDmxpYnJhcnlfY2xpZW50GAEgASgJEkwKBHJwY3MYAiADKAsyPi5nb29nbGUuZ2FwaWMubWV0YWRhdGEuR2FwaWNNZXRhZGF0YS5TZXJ2aWNlQXNDbGllbnQuUnBjc0VudHJ5GlwKCVJwY3NFbnRyeRILCgNrZXkYASABKAkSPgoFdmFsdWUYAiABKAsyLy5nb29nbGUuZ2FwaWMubWV0YWRhdGEuR2FwaWNNZXRhZGF0YS5NZXRob2RMaXN0OgI4ARodCgpNZXRob2RMaXN0Eg8KB21ldGhvZHMYASADKAlCugEKGWNvbS5nb29nbGUuZ2FwaWMubWV0YWRhdGFCEkdhcGljTWV0YWRhdGFQcm90b1ABWj1nb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2dhcGljL21ldGFkYXRhO21ldGFkYXRhqgIVR29vZ2xlLkdhcGljLk1ldGFkYXRhygIVR29vZ2xlXEdhcGljXE1ldGFkYXRh6gIXR29vZ2xlOjpHYXBpYzo6TWV0YWRhdGFiBnByb3RvMw");

/**
 * Metadata about a GAPIC library for a specific combination of API, version,
 * and computer language.
 *
 * @generated from message google.gapic.metadata.GapicMetadata
 */
export type GapicMetadata = Message<"google.gapic.metadata.GapicMetadata"> & {
  /**
   * Schema version of this proto. Current value: 1.0
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * Any human-readable comments to be included in this file.
   *
   * @generated from field: string comment = 2;
   */
  comment: string;

  /**
   * Computer language of this generated language. This must be
   * spelled out as it spoken in English, with no capitalization or
   * separators (e.g. "csharp", "nodejs").
   *
   * @generated from field: string language = 3;
   */
  language: string;

  /**
   * The proto package containing the API definition for which this
   * GAPIC library was generated.
   *
   * @generated from field: string proto_package = 4;
   */
  protoPackage: string;

  /**
   * The language-specific library package for this GAPIC library.
   *
   * @generated from field: string library_package = 5;
   */
  libraryPackage: string;

  /**
   * A map from each proto-defined service to ServiceForTransports,
   * which allows listing information about transport-specific
   * implementations of the service.
   *
   * The key is the name of the service as it appears in the .proto
   * file.
   *
   * @generated from field: map<string, google.gapic.metadata.GapicMetadata.ServiceForTransport> services = 6;
   */
  services: { [key: string]: GapicMetadata_ServiceForTransport };
};

/**
 * Describes the message google.gapic.metadata.GapicMetadata.
 * Use `create(GapicMetadataSchema)` to create a new message.
 */
export const GapicMetadataSchema: GenMessage<GapicMetadata> = /*@__PURE__*/
  messageDesc(file_gapic_metadata_gapic_metadata, 0);

/**
 * A map from a transport name to ServiceAsClient, which allows
 * listing information about the client objects that implement the
 * parent RPC service for the specified transport.
 *
 * The key name is the transport, lower-cased with no separators
 * (e.g. "grpc", "rest").
 *
 * @generated from message google.gapic.metadata.GapicMetadata.ServiceForTransport
 */
export type GapicMetadata_ServiceForTransport = Message<"google.gapic.metadata.GapicMetadata.ServiceForTransport"> & {
  /**
   * @generated from field: map<string, google.gapic.metadata.GapicMetadata.ServiceAsClient> clients = 1;
   */
  clients: { [key: string]: GapicMetadata_ServiceAsClient };
};

/**
 * Describes the message google.gapic.metadata.GapicMetadata.ServiceForTransport.
 * Use `create(GapicMetadata_ServiceForTransportSchema)` to create a new message.
 */
export const GapicMetadata_ServiceForTransportSchema: GenMessage<GapicMetadata_ServiceForTransport> = /*@__PURE__*/
  messageDesc(file_gapic_metadata_gapic_metadata, 0, 0);

/**
 * Information about a specific client implementing a proto-defined service.
 *
 * @generated from message google.gapic.metadata.GapicMetadata.ServiceAsClient
 */
export type GapicMetadata_ServiceAsClient = Message<"google.gapic.metadata.GapicMetadata.ServiceAsClient"> & {
  /**
   * The name of the library client formatted as it appears in the source code
   *
   * @generated from field: string library_client = 1;
   */
  libraryClient: string;

  /**
   * A mapping from each proto-defined RPC name to the the list of
   * methods in library_client that implement it. There can be more
   * than one library_client method for each RPC. RPCs with no
   * library_client methods need not be included.
   *
   * The key name is the name of the RPC as defined and formatted in
   * the proto file.
   *
   * @generated from field: map<string, google.gapic.metadata.GapicMetadata.MethodList> rpcs = 2;
   */
  rpcs: { [key: string]: GapicMetadata_MethodList };
};

/**
 * Describes the message google.gapic.metadata.GapicMetadata.ServiceAsClient.
 * Use `create(GapicMetadata_ServiceAsClientSchema)` to create a new message.
 */
export const GapicMetadata_ServiceAsClientSchema: GenMessage<GapicMetadata_ServiceAsClient> = /*@__PURE__*/
  messageDesc(file_gapic_metadata_gapic_metadata, 0, 1);

/**
 * List of GAPIC client methods implementing the proto-defined RPC
 * for the transport and service specified in the containing
 * structures.
 *
 * @generated from message google.gapic.metadata.GapicMetadata.MethodList
 */
export type GapicMetadata_MethodList = Message<"google.gapic.metadata.GapicMetadata.MethodList"> & {
  /**
   * List of methods for a specific proto-service client in the
   * GAPIC. These names should be formatted as they appear in the
   * source code.
   *
   * @generated from field: repeated string methods = 1;
   */
  methods: string[];
};

/**
 * Describes the message google.gapic.metadata.GapicMetadata.MethodList.
 * Use `create(GapicMetadata_MethodListSchema)` to create a new message.
 */
export const GapicMetadata_MethodListSchema: GenMessage<GapicMetadata_MethodList> = /*@__PURE__*/
  messageDesc(file_gapic_metadata_gapic_metadata, 0, 2);

