// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file zitadel/quota.proto (package zitadel.quota.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_protoc_gen_openapiv2_options_annotations } from "../protoc-gen-openapiv2/options/annotations_pb";
import { file_validate_validate } from "../validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file zitadel/quota.proto.
 */
export const file_zitadel_quota: GenFile = /*@__PURE__*/
  fileDesc("ChN6aXRhZGVsL3F1b3RhLnByb3RvEhB6aXRhZGVsLnF1b3RhLnYxIrMDCgxOb3RpZmljYXRpb24ScQoHcGVyY2VudBgBIAEoDUJgkkFWMlRUaGUgcGVyY2VudGFnZSByZWxhdGl2ZSB0byB0aGUgcXVvdGFzIGFtb3VudCBvbiB3aGljaCB0aGUgY2FsbF91cmwgc2hvdWxkIGJlIGNhbGxlZC76QgQqAiAAEmEKBnJlcGVhdBgCIAEoCEJRkkFOMkxJZiB0cnVlLCB0aGUgY2FsbF91cmwgaXMgY2FsbGVkIGVhY2ggdGltZSBhIGZhY3RvciBvZiBwZXJjZW50YWdlIGlzIHJlYWNoZWQuEswBCghjYWxsX3VybBgDIAEoCUK5AZJBqwEyqAFUaGUgVVJMLCB3aGljaCBpcyBjYWxsZWQgd2l0aCBIVFRQIG1ldGhvZCBQT1NUIGFuZCBhIEpTT04gcGF5bG9hZCB3aXRoIHRoZSBwcm9wZXJ0aWVzICJ1bml0IiwgImlkIiAobm90aWZpY2F0aW9uIGlkKSwgImNhbGxVUkwiLCAicGVyaW9kU3RhcnQiLCAidGhyZXNob2xkIiBhbmQgInVzYWdlIi76QgdyBRABGMgBKmUKBFVuaXQSFgoSVU5JVF9VTklNUExFTUVOVEVEEAASIwofVU5JVF9SRVFVRVNUU19BTExfQVVUSEVOVElDQVRFRBABEiAKHFVOSVRfQUNUSU9OU19BTExfUlVOX1NFQ09ORFMQAkIrWilnaXRodWIuY29tL3ppdGFkZWwveml0YWRlbC9wa2cvZ3JwYy9xdW90YWIGcHJvdG8z", [file_protoc_gen_openapiv2_options_annotations, file_validate_validate]);

/**
 * @generated from message zitadel.quota.v1.Notification
 */
export type Notification = Message<"zitadel.quota.v1.Notification"> & {
  /**
   * The percentage relative to the quotas amount on which the call_url should be called.
   *
   * @generated from field: uint32 percent = 1;
   */
  percent: number;

  /**
   * If true, the call_url is called each time a factor of percentage is reached.
   *
   * @generated from field: bool repeat = 2;
   */
  repeat: boolean;

  /**
   * The URL, which is called with HTTP method POST and a JSON payload with the properties "unit", "id" (notification id), "callURL", "periodStart", "threshold" and "usage".
   *
   * @generated from field: string call_url = 3;
   */
  callUrl: string;
};

/**
 * Describes the message zitadel.quota.v1.Notification.
 * Use `create(NotificationSchema)` to create a new message.
 */
export const NotificationSchema: GenMessage<Notification> = /*@__PURE__*/
  messageDesc(file_zitadel_quota, 0);

/**
 * @generated from enum zitadel.quota.v1.Unit
 */
export enum Unit {
  /**
   * @generated from enum value: UNIT_UNIMPLEMENTED = 0;
   */
  UNIMPLEMENTED = 0,

  /**
   * The sum of all requests to the ZITADEL API with an authorization header,
   * excluding the following exceptions
   * - Calls to the System API
   * - Calls that cause internal server errors
   * - Failed authorizations
   * - Requests after the quota already exceeded
   *
   * @generated from enum value: UNIT_REQUESTS_ALL_AUTHENTICATED = 1;
   */
  REQUESTS_ALL_AUTHENTICATED = 1,

  /**
   * The sum of all actions run durations in seconds
   *
   * @generated from enum value: UNIT_ACTIONS_ALL_RUN_SECONDS = 2;
   */
  ACTIONS_ALL_RUN_SECONDS = 2,
}

/**
 * Describes the enum zitadel.quota.v1.Unit.
 */
export const UnitSchema: GenEnum<Unit> = /*@__PURE__*/
  enumDesc(file_zitadel_quota, 0);

