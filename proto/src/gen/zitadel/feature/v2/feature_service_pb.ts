// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file zitadel/feature/v2/feature_service.proto (package zitadel.feature.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../protoc-gen-openapiv2/options/annotations_pb";
import type { GetSystemFeaturesRequestSchema, GetSystemFeaturesResponseSchema, ResetSystemFeaturesRequestSchema, ResetSystemFeaturesResponseSchema, SetSystemFeaturesRequestSchema, SetSystemFeaturesResponseSchema } from "./system_pb";
import { file_zitadel_feature_v2_system } from "./system_pb";
import type { GetInstanceFeaturesRequestSchema, GetInstanceFeaturesResponseSchema, ResetInstanceFeaturesRequestSchema, ResetInstanceFeaturesResponseSchema, SetInstanceFeaturesRequestSchema, SetInstanceFeaturesResponseSchema } from "./instance_pb";
import { file_zitadel_feature_v2_instance } from "./instance_pb";
import type { GetOrganizationFeaturesRequestSchema, GetOrganizationFeaturesResponseSchema, ResetOrganizationFeaturesRequestSchema, ResetOrganizationFeaturesResponseSchema, SetOrganizationFeaturesRequestSchema, SetOrganizationFeaturesResponseSchema } from "./organization_pb";
import { file_zitadel_feature_v2_organization } from "./organization_pb";
import type { GetUserFeaturesRequestSchema, GetUserFeaturesResponseSchema, ResetUserFeaturesRequestSchema, ResetUserFeaturesResponseSchema, SetUserFeatureRequestSchema, SetUserFeaturesResponseSchema } from "./user_pb";
import { file_zitadel_feature_v2_user } from "./user_pb";
import { file_zitadel_protoc_gen_zitadel_v2_options } from "../../protoc_gen_zitadel/v2/options_pb";

/**
 * Describes the file zitadel/feature/v2/feature_service.proto.
 */
export const file_zitadel_feature_v2_feature_service: GenFile = /*@__PURE__*/
  fileDesc("Cih6aXRhZGVsL2ZlYXR1cmUvdjIvZmVhdHVyZV9zZXJ2aWNlLnByb3RvEhJ6aXRhZGVsLmZlYXR1cmUudjIyjCAKDkZlYXR1cmVTZXJ2aWNlEs0CChFTZXRTeXN0ZW1GZWF0dXJlcxIsLnppdGFkZWwuZmVhdHVyZS52Mi5TZXRTeXN0ZW1GZWF0dXJlc1JlcXVlc3QaLS56aXRhZGVsLmZlYXR1cmUudjIuU2V0U3lzdGVtRmVhdHVyZXNSZXNwb25zZSLaAZJBnAESGVNldCBzeXN0ZW0gbGV2ZWwgZmVhdHVyZXMackNvbmZpZ3VyZSBhbmQgc2V0IGZlYXR1cmVzIHRoYXQgYXBwbHkgdG8gdGhlIGNvbXBsZXRlIHN5c3RlbS4gT25seSBmaWVsZHMgcHJlc2VudCBpbiB0aGUgcmVxdWVzdCBhcmUgc2V0IG9yIHVuc2V0LkoLCgMyMDASBAoCT0uKtRgYChYKFHN5c3RlbS5mZWF0dXJlLndyaXRlgtPkkwIYOgEqGhMvdjIvZmVhdHVyZXMvc3lzdGVtErwCChNSZXNldFN5c3RlbUZlYXR1cmVzEi4ueml0YWRlbC5mZWF0dXJlLnYyLlJlc2V0U3lzdGVtRmVhdHVyZXNSZXF1ZXN0Gi8ueml0YWRlbC5mZWF0dXJlLnYyLlJlc2V0U3lzdGVtRmVhdHVyZXNSZXNwb25zZSLDAZJBhwESG1Jlc2V0IHN5c3RlbSBsZXZlbCBmZWF0dXJlcxpbRGVsZXRlcyBBTEwgY29uZmlndXJlZCBmZWF0dXJlcyBmb3IgdGhlIHN5c3RlbSwgcmV2ZXJ0aW5nIHRoZSBiZWhhdmlvcnMgdG8gc3lzdGVtIGRlZmF1bHRzLkoLCgMyMDASBAoCT0uKtRgZChcKFXN5c3RlbS5mZWF0dXJlLmRlbGV0ZYLT5JMCFSoTL3YyL2ZlYXR1cmVzL3N5c3RlbRLDAgoRR2V0U3lzdGVtRmVhdHVyZXMSLC56aXRhZGVsLmZlYXR1cmUudjIuR2V0U3lzdGVtRmVhdHVyZXNSZXF1ZXN0Gi0ueml0YWRlbC5mZWF0dXJlLnYyLkdldFN5c3RlbUZlYXR1cmVzUmVzcG9uc2Ui0AGSQZYBEhlHZXQgc3lzdGVtIGxldmVsIGZlYXR1cmVzGmxSZXR1cm5zIGFsbCBjb25maWd1cmVkIGZlYXR1cmVzIGZvciB0aGUgc3lzdGVtLiBVbnNldCBmaWVsZHMgbWVhbiB0aGUgZmVhdHVyZSBpcyB0aGUgY3VycmVudCBzeXN0ZW0gZGVmYXVsdC5KCwoDMjAwEgQKAk9LirUYFwoVChNzeXN0ZW0uZmVhdHVyZS5yZWFkgtPkkwIVEhMvdjIvZmVhdHVyZXMvc3lzdGVtEtQCChNTZXRJbnN0YW5jZUZlYXR1cmVzEi4ueml0YWRlbC5mZWF0dXJlLnYyLlNldEluc3RhbmNlRmVhdHVyZXNSZXF1ZXN0Gi8ueml0YWRlbC5mZWF0dXJlLnYyLlNldEluc3RhbmNlRmVhdHVyZXNSZXNwb25zZSLbAZJBngESG1NldCBpbnN0YW5jZSBsZXZlbCBmZWF0dXJlcxpyQ29uZmlndXJlIGFuZCBzZXQgZmVhdHVyZXMgdGhhdCBhcHBseSB0byBhIGNvbXBsZXRlIGluc3RhbmNlLiBPbmx5IGZpZWxkcyBwcmVzZW50IGluIHRoZSByZXF1ZXN0IGFyZSBzZXQgb3IgdW5zZXQuSgsKAzIwMBIECgJPS4q1GBUKEwoRaWFtLmZlYXR1cmUud3JpdGWC0+STAho6ASoaFS92Mi9mZWF0dXJlcy9pbnN0YW5jZRLEAgoVUmVzZXRJbnN0YW5jZUZlYXR1cmVzEjAueml0YWRlbC5mZWF0dXJlLnYyLlJlc2V0SW5zdGFuY2VGZWF0dXJlc1JlcXVlc3QaMS56aXRhZGVsLmZlYXR1cmUudjIuUmVzZXRJbnN0YW5jZUZlYXR1cmVzUmVzcG9uc2UixQGSQYoBEh1SZXNldCBpbnN0YW5jZSBsZXZlbCBmZWF0dXJlcxpcRGVsZXRlcyBBTEwgY29uZmlndXJlZCBmZWF0dXJlcyBmb3IgYW4gaW5zdGFuY2UsIHJldmVydGluZyB0aGUgYmVoYXZpb3JzIHRvIHN5c3RlbSBkZWZhdWx0cy5KCwoDMjAwEgQKAk9LirUYFgoUChJpYW0uZmVhdHVyZS5kZWxldGWC0+STAhcqFS92Mi9mZWF0dXJlcy9pbnN0YW5jZRLLAgoTR2V0SW5zdGFuY2VGZWF0dXJlcxIuLnppdGFkZWwuZmVhdHVyZS52Mi5HZXRJbnN0YW5jZUZlYXR1cmVzUmVxdWVzdBovLnppdGFkZWwuZmVhdHVyZS52Mi5HZXRJbnN0YW5jZUZlYXR1cmVzUmVzcG9uc2Ui0gGSQZkBEhtHZXQgaW5zdGFuY2UgbGV2ZWwgZmVhdHVyZXMabVJldHVybnMgYWxsIGNvbmZpZ3VyZWQgZmVhdHVyZXMgZm9yIGFuIGluc3RhbmNlLiBVbnNldCBmaWVsZHMgbWVhbiB0aGUgZmVhdHVyZSBpcyB0aGUgY3VycmVudCBzeXN0ZW0gZGVmYXVsdC5KCwoDMjAwEgQKAk9LirUYFAoSChBpYW0uZmVhdHVyZS5yZWFkgtPkkwIXEhUvdjIvZmVhdHVyZXMvaW5zdGFuY2US+gIKF1NldE9yZ2FuaXphdGlvbkZlYXR1cmVzEjIueml0YWRlbC5mZWF0dXJlLnYyLlNldE9yZ2FuaXphdGlvbkZlYXR1cmVzUmVxdWVzdBozLnppdGFkZWwuZmVhdHVyZS52Mi5TZXRPcmdhbml6YXRpb25GZWF0dXJlc1Jlc3BvbnNlIvUBkkGiARIfU2V0IG9yZ2FuaXphdGlvbiBsZXZlbCBmZWF0dXJlcxpyQ29uZmlndXJlIGFuZCBzZXQgZmVhdHVyZXMgdGhhdCBhcHBseSB0byBhIGNvbXBsZXRlIGluc3RhbmNlLiBPbmx5IGZpZWxkcyBwcmVzZW50IGluIHRoZSByZXF1ZXN0IGFyZSBzZXQgb3IgdW5zZXQuSgsKAzIwMBIECgJPS4q1GBUKEwoRb3JnLmZlYXR1cmUud3JpdGWC0+STAjA6ASoaKy92Mi9mZWF0dXJlcy9vcmdhbml6YXRpb24ve29yZ2FuaXphdGlvbl9pZH0S7wIKGVJlc2V0T3JnYW5pemF0aW9uRmVhdHVyZXMSNC56aXRhZGVsLmZlYXR1cmUudjIuUmVzZXRPcmdhbml6YXRpb25GZWF0dXJlc1JlcXVlc3QaNS56aXRhZGVsLmZlYXR1cmUudjIuUmVzZXRPcmdhbml6YXRpb25GZWF0dXJlc1Jlc3BvbnNlIuQBkkGUARIhUmVzZXQgb3JnYW5pemF0aW9uIGxldmVsIGZlYXR1cmVzGmJEZWxldGVzIEFMTCBjb25maWd1cmVkIGZlYXR1cmVzIGZvciBhbiBvcmdhbml6YXRpb24sIHJldmVydGluZyB0aGUgYmVoYXZpb3JzIHRvIGluc3RhbmNlIGRlZmF1bHRzLkoLCgMyMDASBAoCT0uKtRgVChMKEW9yZy5mZWF0dXJlLndyaXRlgtPkkwItKisvdjIvZmVhdHVyZXMvb3JnYW5pemF0aW9uL3tvcmdhbml6YXRpb25faWR9EvcCChdHZXRPcmdhbml6YXRpb25GZWF0dXJlcxIyLnppdGFkZWwuZmVhdHVyZS52Mi5HZXRPcmdhbml6YXRpb25GZWF0dXJlc1JlcXVlc3QaMy56aXRhZGVsLmZlYXR1cmUudjIuR2V0T3JnYW5pemF0aW9uRmVhdHVyZXNSZXNwb25zZSLyAZJBowESH0dldCBvcmdhbml6YXRpb24gbGV2ZWwgZmVhdHVyZXMac1JldHVybnMgYWxsIGNvbmZpZ3VyZWQgZmVhdHVyZXMgZm9yIGFuIG9yZ2FuaXphdGlvbi4gVW5zZXQgZmllbGRzIG1lYW4gdGhlIGZlYXR1cmUgaXMgdGhlIGN1cnJlbnQgaW5zdGFuY2UgZGVmYXVsdC5KCwoDMjAwEgQKAk9LirUYFAoSChBvcmcuZmVhdHVyZS5yZWFkgtPkkwItEisvdjIvZmVhdHVyZXMvb3JnYW5pemF0aW9uL3tvcmdhbml6YXRpb25faWR9Er4CCg9TZXRVc2VyRmVhdHVyZXMSKS56aXRhZGVsLmZlYXR1cmUudjIuU2V0VXNlckZlYXR1cmVSZXF1ZXN0Gisueml0YWRlbC5mZWF0dXJlLnYyLlNldFVzZXJGZWF0dXJlc1Jlc3BvbnNlItIBkkGOARIXU2V0IHVzZXIgbGV2ZWwgZmVhdHVyZXMaZkNvbmZpZ3VyZSBhbmQgc2V0IGZlYXR1cmVzIHRoYXQgYXBwbHkgdG8gYW4gdXNlci4gT25seSBmaWVsZHMgcHJlc2VudCBpbiB0aGUgcmVxdWVzdCBhcmUgc2V0IG9yIHVuc2V0LkoLCgMyMDASBAoCT0uKtRgWChQKEnVzZXIuZmVhdHVyZS53cml0ZYLT5JMCIDoBKhobL3YyL2ZlYXR1cmVzL3VzZXIve3VzZXJfaWR9ErsCChFSZXNldFVzZXJGZWF0dXJlcxIsLnppdGFkZWwuZmVhdHVyZS52Mi5SZXNldFVzZXJGZWF0dXJlc1JlcXVlc3QaLS56aXRhZGVsLmZlYXR1cmUudjIuUmVzZXRVc2VyRmVhdHVyZXNSZXNwb25zZSLIAZJBhwESGVJlc2V0IHVzZXIgbGV2ZWwgZmVhdHVyZXMaXURlbGV0ZXMgQUxMIGNvbmZpZ3VyZWQgZmVhdHVyZXMgZm9yIGEgdXNlciwgcmV2ZXJ0aW5nIHRoZSBiZWhhdmlvcnMgdG8gb3JnYW5pemF0aW9uIGRlZmF1bHRzLkoLCgMyMDASBAoCT0uKtRgWChQKEnVzZXIuZmVhdHVyZS53cml0ZYLT5JMCHSobL3YyL2ZlYXR1cmVzL3VzZXIve3VzZXJfaWR9EtACCg9HZXRVc2VyRmVhdHVyZXMSKi56aXRhZGVsLmZlYXR1cmUudjIuR2V0VXNlckZlYXR1cmVzUmVxdWVzdBorLnppdGFkZWwuZmVhdHVyZS52Mi5HZXRVc2VyRmVhdHVyZXNSZXNwb25zZSLjAZJBowESH0dldCBvcmdhbml6YXRpb24gbGV2ZWwgZmVhdHVyZXMac1JldHVybnMgYWxsIGNvbmZpZ3VyZWQgZmVhdHVyZXMgZm9yIGFuIG9yZ2FuaXphdGlvbi4gVW5zZXQgZmllbGRzIG1lYW4gdGhlIGZlYXR1cmUgaXMgdGhlIGN1cnJlbnQgaW5zdGFuY2UgZGVmYXVsdC5KCwoDMjAwEgQKAk9LirUYFQoTChF1c2VyLmZlYXR1cmUucmVhZILT5JMCHRIbL3YyL2ZlYXR1cmVzL3VzZXIve3VzZXJfaWR9Qu8MWjZnaXRodWIuY29tL3ppdGFkZWwveml0YWRlbC9wa2cvZ3JwYy9mZWF0dXJlL3YyO2ZlYXR1cmWSQbMMEtUGCg9GZWF0dXJlIFNlcnZpY2USyAVUaGlzIEFQSSBpcyBpbnRlbmRlZCB0byBtYW5hZ2UgZmVhdHVyZXMgZm9yIFpJVEFERUwuIEZlYXR1cmUgc2V0dGluZ3MgdGhhdCBhcmUgYXZhaWxhYmxlIG9uIG11bHRpcGxlICJsZXZlbHMiLCBzdWNoIGFzIGluc3RhbmNlIGFuZCBvcmdhbml6YXRpb24uIFRoZSBoaWdoZXIgbGV2ZWwgaW5zdGFuY2UgYWN0cyBhcyBhIGRlZmF1bHQgZm9yIHRoZSBsb3dlciBsZXZlbC4gV2hlbiBhIGZlYXR1cmUgaXMgc2V0IG9uIG11bHRpcGxlIGxldmVscywgdGhlIGxvd2VyIGxldmVsIHRha2VzIHByZWNlZGVuY2UuIEZlYXR1cmVzIGNhbiBiZSBleHBlcmltZW50YWwgd2hlcmUgWklUQURFTCB3aWxsIGFzc3VtZSBhIHNhbmUgZGVmYXVsdCwgc3VjaCBhcyBkaXNhYmxlZC4gV2hlbiBvdmVyIHRpbWUgY29uZmlkZW5jZSBpbiBzdWNoIGEgZmVhdHVyZSBncm93cywgWklUQURFTCBjYW4gZGVmYXVsdCB0byBlbmFibGluZyB0aGUgZmVhdHVyZS4gQXMgYSBmaW5hbCBzdGVwIHdlIG1pZ2h0IGNob29zZSB0byBhbHdheXMgZW5hYmxlIGEgZmVhdHVyZSBhbmQgcmVtb3ZlIHRoZSBzZXR0aW5nIGZyb20gdGhpcyBBUEksIHJlc2VydmluZyB0aGUgcHJvdG8gZmllbGQgbnVtYmVyLiBTdWNoIHJlbW92YWwgaXMgbm90IGNvbnNpZGVyZWQgYSBicmVha2luZyBjaGFuZ2UuIFNldHRpbmcgYSByZW1vdmVkIGZpZWxkIHdpbGwgZWZmZWN0aXZlbHkgcmVzdWx0IGluIGEgbm8tb3AuIi4KB1pJVEFERUwSE2h0dHBzOi8veml0YWRlbC5jb20aDmhpQHppdGFkZWwuY29tKkIKCkFwYWNoZSAyLjASNGh0dHBzOi8vZ2l0aHViLmNvbS96aXRhZGVsL3ppdGFkZWwvYmxvYi9tYWluL0xJQ0VOU0UyAzIuMBoOJENVU1RPTS1ET01BSU4iAS8qAgIBMhBhcHBsaWNhdGlvbi9qc29uMhBhcHBsaWNhdGlvbi9ncnBjMhphcHBsaWNhdGlvbi9ncnBjLXdlYitwcm90bzoQYXBwbGljYXRpb24vanNvbjoQYXBwbGljYXRpb24vZ3JwYzoaYXBwbGljYXRpb24vZ3JwYy13ZWIrcHJvdG9SbQoDNDAzEmYKR1JldHVybmVkIHdoZW4gdGhlIHVzZXIgZG9lcyBub3QgaGF2ZSBwZXJtaXNzaW9uIHRvIGFjY2VzcyB0aGUgcmVzb3VyY2UuEhsKGRoXIy9kZWZpbml0aW9ucy9ycGNTdGF0dXNSiwEKAzQwNBKDAQpkUmV0dXJuZWQgd2hlbiB0aGUgcmVzb3VyY2UgaGFzIG5vIGZlYXR1cmUgZmxhZyBzZXR0aW5ncyBhbmQgaW5oZXJpdGFuY2UgZnJvbSB0aGUgcGFyZW50IGlzIGRpc2FibGVkLhIbChkaFyMvZGVmaW5pdGlvbnMvcnBjU3RhdHVzWsIBCr8BCgZPQXV0aDIStAEIAygEMiEkQ1VTVE9NLURPTUFJTi9vYXV0aC92Mi9hdXRob3JpemU6HSRDVVNUT00tRE9NQUlOL29hdXRoL3YyL3Rva2VuQmwKEAoGb3BlbmlkEgZvcGVuaWQKWAoqdXJuOnppdGFkZWw6aWFtOm9yZzpwcm9qZWN0OmlkOnppdGFkZWw6YXVkEip1cm46eml0YWRlbDppYW06b3JnOnByb2plY3Q6aWQ6eml0YWRlbDphdWRiQAo+CgZPQXV0aDISNAoGb3BlbmlkCip1cm46eml0YWRlbDppYW06b3JnOnByb2plY3Q6aWQ6eml0YWRlbDphdWRyPgoiRGV0YWlsZWQgaW5mb3JtYXRpb24gYWJvdXQgWklUQURFTBIYaHR0cHM6Ly96aXRhZGVsLmNvbS9kb2NzYgZwcm90bzM", [file_google_api_annotations, file_protoc_gen_openapiv2_options_annotations, file_zitadel_feature_v2_system, file_zitadel_feature_v2_instance, file_zitadel_feature_v2_organization, file_zitadel_feature_v2_user, file_zitadel_protoc_gen_zitadel_v2_options]);

/**
 * FeatureService is intended to manage features for ZITADEL.
 *
 * Feature settings that are available on multiple "levels", such as instance and organization.
 * The higher level (instance) acts as a default for the lower level (organization).
 * When a feature is set on multiple levels, the lower level takes precedence.
 *
 * Features can be experimental where ZITADEL will assume a sane default, such as disabled.
 * When over time confidence in such a feature grows, ZITADEL can default to enabling the feature.
 * As a final step we might choose to always enable a feature and remove the setting from this API,
 * reserving the proto field number. Such removal is not considered a breaking change.
 * Setting a removed field will effectively result in a no-op.
 *
 * @generated from service zitadel.feature.v2.FeatureService
 */
export const FeatureService: GenService<{
  /**
   * @generated from rpc zitadel.feature.v2.FeatureService.SetSystemFeatures
   */
  setSystemFeatures: {
    methodKind: "unary";
    input: typeof SetSystemFeaturesRequestSchema;
    output: typeof SetSystemFeaturesResponseSchema;
  },
  /**
   * @generated from rpc zitadel.feature.v2.FeatureService.ResetSystemFeatures
   */
  resetSystemFeatures: {
    methodKind: "unary";
    input: typeof ResetSystemFeaturesRequestSchema;
    output: typeof ResetSystemFeaturesResponseSchema;
  },
  /**
   * @generated from rpc zitadel.feature.v2.FeatureService.GetSystemFeatures
   */
  getSystemFeatures: {
    methodKind: "unary";
    input: typeof GetSystemFeaturesRequestSchema;
    output: typeof GetSystemFeaturesResponseSchema;
  },
  /**
   * @generated from rpc zitadel.feature.v2.FeatureService.SetInstanceFeatures
   */
  setInstanceFeatures: {
    methodKind: "unary";
    input: typeof SetInstanceFeaturesRequestSchema;
    output: typeof SetInstanceFeaturesResponseSchema;
  },
  /**
   * @generated from rpc zitadel.feature.v2.FeatureService.ResetInstanceFeatures
   */
  resetInstanceFeatures: {
    methodKind: "unary";
    input: typeof ResetInstanceFeaturesRequestSchema;
    output: typeof ResetInstanceFeaturesResponseSchema;
  },
  /**
   * @generated from rpc zitadel.feature.v2.FeatureService.GetInstanceFeatures
   */
  getInstanceFeatures: {
    methodKind: "unary";
    input: typeof GetInstanceFeaturesRequestSchema;
    output: typeof GetInstanceFeaturesResponseSchema;
  },
  /**
   * @generated from rpc zitadel.feature.v2.FeatureService.SetOrganizationFeatures
   */
  setOrganizationFeatures: {
    methodKind: "unary";
    input: typeof SetOrganizationFeaturesRequestSchema;
    output: typeof SetOrganizationFeaturesResponseSchema;
  },
  /**
   * @generated from rpc zitadel.feature.v2.FeatureService.ResetOrganizationFeatures
   */
  resetOrganizationFeatures: {
    methodKind: "unary";
    input: typeof ResetOrganizationFeaturesRequestSchema;
    output: typeof ResetOrganizationFeaturesResponseSchema;
  },
  /**
   * @generated from rpc zitadel.feature.v2.FeatureService.GetOrganizationFeatures
   */
  getOrganizationFeatures: {
    methodKind: "unary";
    input: typeof GetOrganizationFeaturesRequestSchema;
    output: typeof GetOrganizationFeaturesResponseSchema;
  },
  /**
   * @generated from rpc zitadel.feature.v2.FeatureService.SetUserFeatures
   */
  setUserFeatures: {
    methodKind: "unary";
    input: typeof SetUserFeatureRequestSchema;
    output: typeof SetUserFeaturesResponseSchema;
  },
  /**
   * @generated from rpc zitadel.feature.v2.FeatureService.ResetUserFeatures
   */
  resetUserFeatures: {
    methodKind: "unary";
    input: typeof ResetUserFeaturesRequestSchema;
    output: typeof ResetUserFeaturesResponseSchema;
  },
  /**
   * @generated from rpc zitadel.feature.v2.FeatureService.GetUserFeatures
   */
  getUserFeatures: {
    methodKind: "unary";
    input: typeof GetUserFeaturesRequestSchema;
    output: typeof GetUserFeaturesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_zitadel_feature_v2_feature_service, 0);

