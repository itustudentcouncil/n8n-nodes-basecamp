// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file zitadel/idp.proto (package zitadel.idp.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { ObjectDetails, TextQueryMethod } from "./object_pb";
import { file_zitadel_object } from "./object_pb";
import { file_validate_validate } from "../validate/validate_pb";
import { file_protoc_gen_openapiv2_options_annotations } from "../protoc-gen-openapiv2/options/annotations_pb";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file zitadel/idp.proto.
 */
export const file_zitadel_idp: GenFile = /*@__PURE__*/
  fileDesc("", [file_zitadel_object, file_validate_validate, file_protoc_gen_openapiv2_options_annotations, file_google_protobuf_duration]);

/**
 * @generated from message zitadel.idp.v1.IDP
 */
export type IDP = Message<"zitadel.idp.v1.IDP"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.idp.v1.IDPState state = 3;
   */
  state: IDPState;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: zitadel.idp.v1.IDPStylingType styling_type = 5;
   */
  stylingType: IDPStylingType;

  /**
   * @generated from field: zitadel.idp.v1.IDPOwnerType owner = 6;
   */
  owner: IDPOwnerType;

  /**
   * @generated from oneof zitadel.idp.v1.IDP.config
   */
  config: {
    /**
     * @generated from field: zitadel.idp.v1.OIDCConfig oidc_config = 7;
     */
    value: OIDCConfig;
    case: "oidcConfig";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.JWTConfig jwt_config = 9;
     */
    value: JWTConfig;
    case: "jwtConfig";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: bool auto_register = 8;
   */
  autoRegister: boolean;
};

/**
 * Describes the message zitadel.idp.v1.IDP.
 * Use `create(IDPSchema)` to create a new message.
 */
export const IDPSchema: GenMessage<IDP> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 0);

/**
 * @generated from message zitadel.idp.v1.IDPUserLink
 */
export type IDPUserLink = Message<"zitadel.idp.v1.IDPUserLink"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string idp_id = 2;
   */
  idpId: string;

  /**
   * @generated from field: string idp_name = 3;
   */
  idpName: string;

  /**
   * @generated from field: string provided_user_id = 4;
   */
  providedUserId: string;

  /**
   * @generated from field: string provided_user_name = 5;
   */
  providedUserName: string;

  /**
   * @generated from field: zitadel.idp.v1.IDPType idp_type = 6;
   */
  idpType: IDPType;
};

/**
 * Describes the message zitadel.idp.v1.IDPUserLink.
 * Use `create(IDPUserLinkSchema)` to create a new message.
 */
export const IDPUserLinkSchema: GenMessage<IDPUserLink> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 1);

/**
 * @generated from message zitadel.idp.v1.IDPLoginPolicyLink
 */
export type IDPLoginPolicyLink = Message<"zitadel.idp.v1.IDPLoginPolicyLink"> & {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId: string;

  /**
   * @generated from field: string idp_name = 2;
   */
  idpName: string;

  /**
   * @generated from field: zitadel.idp.v1.IDPType idp_type = 3;
   */
  idpType: IDPType;
};

/**
 * Describes the message zitadel.idp.v1.IDPLoginPolicyLink.
 * Use `create(IDPLoginPolicyLinkSchema)` to create a new message.
 */
export const IDPLoginPolicyLinkSchema: GenMessage<IDPLoginPolicyLink> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 2);

/**
 * @generated from message zitadel.idp.v1.OIDCConfig
 */
export type OIDCConfig = Message<"zitadel.idp.v1.OIDCConfig"> & {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId: string;

  /**
   * @generated from field: string issuer = 2;
   */
  issuer: string;

  /**
   * @generated from field: repeated string scopes = 3;
   */
  scopes: string[];

  /**
   * @generated from field: zitadel.idp.v1.OIDCMappingField display_name_mapping = 4;
   */
  displayNameMapping: OIDCMappingField;

  /**
   * @generated from field: zitadel.idp.v1.OIDCMappingField username_mapping = 5;
   */
  usernameMapping: OIDCMappingField;
};

/**
 * Describes the message zitadel.idp.v1.OIDCConfig.
 * Use `create(OIDCConfigSchema)` to create a new message.
 */
export const OIDCConfigSchema: GenMessage<OIDCConfig> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 3);

/**
 * @generated from message zitadel.idp.v1.JWTConfig
 */
export type JWTConfig = Message<"zitadel.idp.v1.JWTConfig"> & {
  /**
   * @generated from field: string jwt_endpoint = 1;
   */
  jwtEndpoint: string;

  /**
   * @generated from field: string issuer = 2;
   */
  issuer: string;

  /**
   * @generated from field: string keys_endpoint = 3;
   */
  keysEndpoint: string;

  /**
   * @generated from field: string header_name = 4;
   */
  headerName: string;
};

/**
 * Describes the message zitadel.idp.v1.JWTConfig.
 * Use `create(JWTConfigSchema)` to create a new message.
 */
export const JWTConfigSchema: GenMessage<JWTConfig> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 4);

/**
 * @generated from message zitadel.idp.v1.IDPIDQuery
 */
export type IDPIDQuery = Message<"zitadel.idp.v1.IDPIDQuery"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message zitadel.idp.v1.IDPIDQuery.
 * Use `create(IDPIDQuerySchema)` to create a new message.
 */
export const IDPIDQuerySchema: GenMessage<IDPIDQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 5);

/**
 * @generated from message zitadel.idp.v1.IDPNameQuery
 */
export type IDPNameQuery = Message<"zitadel.idp.v1.IDPNameQuery"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.idp.v1.IDPNameQuery.
 * Use `create(IDPNameQuerySchema)` to create a new message.
 */
export const IDPNameQuerySchema: GenMessage<IDPNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 6);

/**
 * @generated from message zitadel.idp.v1.IDPOwnerTypeQuery
 */
export type IDPOwnerTypeQuery = Message<"zitadel.idp.v1.IDPOwnerTypeQuery"> & {
  /**
   * @generated from field: zitadel.idp.v1.IDPOwnerType owner_type = 1;
   */
  ownerType: IDPOwnerType;
};

/**
 * Describes the message zitadel.idp.v1.IDPOwnerTypeQuery.
 * Use `create(IDPOwnerTypeQuerySchema)` to create a new message.
 */
export const IDPOwnerTypeQuerySchema: GenMessage<IDPOwnerTypeQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 7);

/**
 * @generated from message zitadel.idp.v1.Provider
 */
export type Provider = Message<"zitadel.idp.v1.Provider"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.idp.v1.IDPState state = 3;
   */
  state: IDPState;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: zitadel.idp.v1.IDPOwnerType owner = 5;
   */
  owner: IDPOwnerType;

  /**
   * @generated from field: zitadel.idp.v1.ProviderType type = 6;
   */
  type: ProviderType;

  /**
   * @generated from field: zitadel.idp.v1.ProviderConfig config = 7;
   */
  config?: ProviderConfig;
};

/**
 * Describes the message zitadel.idp.v1.Provider.
 * Use `create(ProviderSchema)` to create a new message.
 */
export const ProviderSchema: GenMessage<Provider> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 8);

/**
 * @generated from message zitadel.idp.v1.ProviderConfig
 */
export type ProviderConfig = Message<"zitadel.idp.v1.ProviderConfig"> & {
  /**
   * @generated from field: zitadel.idp.v1.Options options = 1;
   */
  options?: Options;

  /**
   * @generated from oneof zitadel.idp.v1.ProviderConfig.config
   */
  config: {
    /**
     * @generated from field: zitadel.idp.v1.LDAPConfig ldap = 2;
     */
    value: LDAPConfig;
    case: "ldap";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.GoogleConfig google = 3;
     */
    value: GoogleConfig;
    case: "google";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.OAuthConfig oauth = 4;
     */
    value: OAuthConfig;
    case: "oauth";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.GenericOIDCConfig oidc = 5;
     */
    value: GenericOIDCConfig;
    case: "oidc";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.JWTConfig jwt = 6;
     */
    value: JWTConfig;
    case: "jwt";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.GitHubConfig github = 7;
     */
    value: GitHubConfig;
    case: "github";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.GitHubEnterpriseServerConfig github_es = 8;
     */
    value: GitHubEnterpriseServerConfig;
    case: "githubEs";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.GitLabConfig gitlab = 9;
     */
    value: GitLabConfig;
    case: "gitlab";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.GitLabSelfHostedConfig gitlab_self_hosted = 10;
     */
    value: GitLabSelfHostedConfig;
    case: "gitlabSelfHosted";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.AzureADConfig azure_ad = 11;
     */
    value: AzureADConfig;
    case: "azureAd";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.AppleConfig apple = 12;
     */
    value: AppleConfig;
    case: "apple";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.SAMLConfig saml = 13;
     */
    value: SAMLConfig;
    case: "saml";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message zitadel.idp.v1.ProviderConfig.
 * Use `create(ProviderConfigSchema)` to create a new message.
 */
export const ProviderConfigSchema: GenMessage<ProviderConfig> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 9);

/**
 * @generated from message zitadel.idp.v1.OAuthConfig
 */
export type OAuthConfig = Message<"zitadel.idp.v1.OAuthConfig"> & {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId: string;

  /**
   * @generated from field: string authorization_endpoint = 2;
   */
  authorizationEndpoint: string;

  /**
   * @generated from field: string token_endpoint = 3;
   */
  tokenEndpoint: string;

  /**
   * @generated from field: string user_endpoint = 4;
   */
  userEndpoint: string;

  /**
   * @generated from field: repeated string scopes = 5;
   */
  scopes: string[];

  /**
   * @generated from field: string id_attribute = 6;
   */
  idAttribute: string;
};

/**
 * Describes the message zitadel.idp.v1.OAuthConfig.
 * Use `create(OAuthConfigSchema)` to create a new message.
 */
export const OAuthConfigSchema: GenMessage<OAuthConfig> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 10);

/**
 * @generated from message zitadel.idp.v1.GenericOIDCConfig
 */
export type GenericOIDCConfig = Message<"zitadel.idp.v1.GenericOIDCConfig"> & {
  /**
   * @generated from field: string issuer = 1;
   */
  issuer: string;

  /**
   * @generated from field: string client_id = 2;
   */
  clientId: string;

  /**
   * @generated from field: repeated string scopes = 3;
   */
  scopes: string[];

  /**
   * @generated from field: bool is_id_token_mapping = 4;
   */
  isIdTokenMapping: boolean;
};

/**
 * Describes the message zitadel.idp.v1.GenericOIDCConfig.
 * Use `create(GenericOIDCConfigSchema)` to create a new message.
 */
export const GenericOIDCConfigSchema: GenMessage<GenericOIDCConfig> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 11);

/**
 * @generated from message zitadel.idp.v1.GitHubConfig
 */
export type GitHubConfig = Message<"zitadel.idp.v1.GitHubConfig"> & {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId: string;

  /**
   * @generated from field: repeated string scopes = 2;
   */
  scopes: string[];
};

/**
 * Describes the message zitadel.idp.v1.GitHubConfig.
 * Use `create(GitHubConfigSchema)` to create a new message.
 */
export const GitHubConfigSchema: GenMessage<GitHubConfig> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 12);

/**
 * @generated from message zitadel.idp.v1.GitHubEnterpriseServerConfig
 */
export type GitHubEnterpriseServerConfig = Message<"zitadel.idp.v1.GitHubEnterpriseServerConfig"> & {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId: string;

  /**
   * @generated from field: string authorization_endpoint = 2;
   */
  authorizationEndpoint: string;

  /**
   * @generated from field: string token_endpoint = 3;
   */
  tokenEndpoint: string;

  /**
   * @generated from field: string user_endpoint = 4;
   */
  userEndpoint: string;

  /**
   * @generated from field: repeated string scopes = 5;
   */
  scopes: string[];
};

/**
 * Describes the message zitadel.idp.v1.GitHubEnterpriseServerConfig.
 * Use `create(GitHubEnterpriseServerConfigSchema)` to create a new message.
 */
export const GitHubEnterpriseServerConfigSchema: GenMessage<GitHubEnterpriseServerConfig> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 13);

/**
 * @generated from message zitadel.idp.v1.GoogleConfig
 */
export type GoogleConfig = Message<"zitadel.idp.v1.GoogleConfig"> & {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId: string;

  /**
   * @generated from field: repeated string scopes = 2;
   */
  scopes: string[];
};

/**
 * Describes the message zitadel.idp.v1.GoogleConfig.
 * Use `create(GoogleConfigSchema)` to create a new message.
 */
export const GoogleConfigSchema: GenMessage<GoogleConfig> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 14);

/**
 * @generated from message zitadel.idp.v1.GitLabConfig
 */
export type GitLabConfig = Message<"zitadel.idp.v1.GitLabConfig"> & {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId: string;

  /**
   * @generated from field: repeated string scopes = 2;
   */
  scopes: string[];
};

/**
 * Describes the message zitadel.idp.v1.GitLabConfig.
 * Use `create(GitLabConfigSchema)` to create a new message.
 */
export const GitLabConfigSchema: GenMessage<GitLabConfig> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 15);

/**
 * @generated from message zitadel.idp.v1.GitLabSelfHostedConfig
 */
export type GitLabSelfHostedConfig = Message<"zitadel.idp.v1.GitLabSelfHostedConfig"> & {
  /**
   * @generated from field: string issuer = 1;
   */
  issuer: string;

  /**
   * @generated from field: string client_id = 2;
   */
  clientId: string;

  /**
   * @generated from field: repeated string scopes = 3;
   */
  scopes: string[];
};

/**
 * Describes the message zitadel.idp.v1.GitLabSelfHostedConfig.
 * Use `create(GitLabSelfHostedConfigSchema)` to create a new message.
 */
export const GitLabSelfHostedConfigSchema: GenMessage<GitLabSelfHostedConfig> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 16);

/**
 * @generated from message zitadel.idp.v1.LDAPConfig
 */
export type LDAPConfig = Message<"zitadel.idp.v1.LDAPConfig"> & {
  /**
   * @generated from field: repeated string servers = 1;
   */
  servers: string[];

  /**
   * @generated from field: bool start_tls = 2;
   */
  startTls: boolean;

  /**
   * @generated from field: string base_dn = 3;
   */
  baseDn: string;

  /**
   * @generated from field: string bind_dn = 4;
   */
  bindDn: string;

  /**
   * @generated from field: string user_base = 5;
   */
  userBase: string;

  /**
   * @generated from field: repeated string user_object_classes = 6;
   */
  userObjectClasses: string[];

  /**
   * @generated from field: repeated string user_filters = 7;
   */
  userFilters: string[];

  /**
   * @generated from field: google.protobuf.Duration timeout = 8;
   */
  timeout?: Duration;

  /**
   * @generated from field: zitadel.idp.v1.LDAPAttributes attributes = 9;
   */
  attributes?: LDAPAttributes;
};

/**
 * Describes the message zitadel.idp.v1.LDAPConfig.
 * Use `create(LDAPConfigSchema)` to create a new message.
 */
export const LDAPConfigSchema: GenMessage<LDAPConfig> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 17);

/**
 * @generated from message zitadel.idp.v1.SAMLConfig
 */
export type SAMLConfig = Message<"zitadel.idp.v1.SAMLConfig"> & {
  /**
   * Metadata of the SAML identity provider.
   *
   * @generated from field: bytes metadata_xml = 1;
   */
  metadataXml: Uint8Array;

  /**
   * Binding which defines the type of communication with the identity provider.
   *
   * @generated from field: zitadel.idp.v1.SAMLBinding binding = 2;
   */
  binding: SAMLBinding;

  /**
   * Boolean which defines if the authentication requests are signed.
   *
   * @generated from field: bool with_signed_request = 3;
   */
  withSignedRequest: boolean;

  /**
   * `nameid-format` for the SAML Request.
   *
   * @generated from field: zitadel.idp.v1.SAMLNameIDFormat name_id_format = 4;
   */
  nameIdFormat: SAMLNameIDFormat;

  /**
   * Optional name of the attribute, which will be used to map the user
   * in case the nameid-format returned is `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`.
   *
   * @generated from field: optional string transient_mapping_attribute_name = 5;
   */
  transientMappingAttributeName?: string;
};

/**
 * Describes the message zitadel.idp.v1.SAMLConfig.
 * Use `create(SAMLConfigSchema)` to create a new message.
 */
export const SAMLConfigSchema: GenMessage<SAMLConfig> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 18);

/**
 * @generated from message zitadel.idp.v1.AzureADConfig
 */
export type AzureADConfig = Message<"zitadel.idp.v1.AzureADConfig"> & {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId: string;

  /**
   * @generated from field: zitadel.idp.v1.AzureADTenant tenant = 2;
   */
  tenant?: AzureADTenant;

  /**
   * @generated from field: bool email_verified = 3;
   */
  emailVerified: boolean;

  /**
   * @generated from field: repeated string scopes = 4;
   */
  scopes: string[];
};

/**
 * Describes the message zitadel.idp.v1.AzureADConfig.
 * Use `create(AzureADConfigSchema)` to create a new message.
 */
export const AzureADConfigSchema: GenMessage<AzureADConfig> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 19);

/**
 * @generated from message zitadel.idp.v1.Options
 */
export type Options = Message<"zitadel.idp.v1.Options"> & {
  /**
   * @generated from field: bool is_linking_allowed = 1;
   */
  isLinkingAllowed: boolean;

  /**
   * @generated from field: bool is_creation_allowed = 2;
   */
  isCreationAllowed: boolean;

  /**
   * @generated from field: bool is_auto_creation = 3;
   */
  isAutoCreation: boolean;

  /**
   * @generated from field: bool is_auto_update = 4;
   */
  isAutoUpdate: boolean;

  /**
   * @generated from field: zitadel.idp.v1.AutoLinkingOption auto_linking = 5;
   */
  autoLinking: AutoLinkingOption;
};

/**
 * Describes the message zitadel.idp.v1.Options.
 * Use `create(OptionsSchema)` to create a new message.
 */
export const OptionsSchema: GenMessage<Options> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 20);

/**
 * @generated from message zitadel.idp.v1.LDAPAttributes
 */
export type LDAPAttributes = Message<"zitadel.idp.v1.LDAPAttributes"> & {
  /**
   * @generated from field: string id_attribute = 1;
   */
  idAttribute: string;

  /**
   * @generated from field: string first_name_attribute = 2;
   */
  firstNameAttribute: string;

  /**
   * @generated from field: string last_name_attribute = 3;
   */
  lastNameAttribute: string;

  /**
   * @generated from field: string display_name_attribute = 4;
   */
  displayNameAttribute: string;

  /**
   * @generated from field: string nick_name_attribute = 5;
   */
  nickNameAttribute: string;

  /**
   * @generated from field: string preferred_username_attribute = 6;
   */
  preferredUsernameAttribute: string;

  /**
   * @generated from field: string email_attribute = 7;
   */
  emailAttribute: string;

  /**
   * @generated from field: string email_verified_attribute = 8;
   */
  emailVerifiedAttribute: string;

  /**
   * @generated from field: string phone_attribute = 9;
   */
  phoneAttribute: string;

  /**
   * @generated from field: string phone_verified_attribute = 10;
   */
  phoneVerifiedAttribute: string;

  /**
   * @generated from field: string preferred_language_attribute = 11;
   */
  preferredLanguageAttribute: string;

  /**
   * @generated from field: string avatar_url_attribute = 12;
   */
  avatarUrlAttribute: string;

  /**
   * @generated from field: string profile_attribute = 13;
   */
  profileAttribute: string;
};

/**
 * Describes the message zitadel.idp.v1.LDAPAttributes.
 * Use `create(LDAPAttributesSchema)` to create a new message.
 */
export const LDAPAttributesSchema: GenMessage<LDAPAttributes> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 21);

/**
 * @generated from message zitadel.idp.v1.AzureADTenant
 */
export type AzureADTenant = Message<"zitadel.idp.v1.AzureADTenant"> & {
  /**
   * @generated from oneof zitadel.idp.v1.AzureADTenant.type
   */
  type: {
    /**
     * @generated from field: zitadel.idp.v1.AzureADTenantType tenant_type = 1;
     */
    value: AzureADTenantType;
    case: "tenantType";
  } | {
    /**
     * @generated from field: string tenant_id = 2;
     */
    value: string;
    case: "tenantId";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message zitadel.idp.v1.AzureADTenant.
 * Use `create(AzureADTenantSchema)` to create a new message.
 */
export const AzureADTenantSchema: GenMessage<AzureADTenant> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 22);

/**
 * @generated from message zitadel.idp.v1.AppleConfig
 */
export type AppleConfig = Message<"zitadel.idp.v1.AppleConfig"> & {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId: string;

  /**
   * @generated from field: string team_id = 2;
   */
  teamId: string;

  /**
   * @generated from field: string key_id = 3;
   */
  keyId: string;

  /**
   * @generated from field: repeated string scopes = 4;
   */
  scopes: string[];
};

/**
 * Describes the message zitadel.idp.v1.AppleConfig.
 * Use `create(AppleConfigSchema)` to create a new message.
 */
export const AppleConfigSchema: GenMessage<AppleConfig> = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 23);

/**
 * @generated from enum zitadel.idp.v1.IDPState
 */
export enum IDPState {
  /**
   * @generated from enum value: IDP_STATE_UNSPECIFIED = 0;
   */
  IDP_STATE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: IDP_STATE_ACTIVE = 1;
   */
  IDP_STATE_ACTIVE = 1,

  /**
   * @generated from enum value: IDP_STATE_INACTIVE = 2;
   */
  IDP_STATE_INACTIVE = 2,
}

/**
 * Describes the enum zitadel.idp.v1.IDPState.
 */
export const IDPStateSchema: GenEnum<IDPState> = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 0);

/**
 * @generated from enum zitadel.idp.v1.IDPStylingType
 */
export enum IDPStylingType {
  /**
   * @generated from enum value: STYLING_TYPE_UNSPECIFIED = 0;
   */
  STYLING_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: STYLING_TYPE_GOOGLE = 1;
   */
  STYLING_TYPE_GOOGLE = 1,
}

/**
 * Describes the enum zitadel.idp.v1.IDPStylingType.
 */
export const IDPStylingTypeSchema: GenEnum<IDPStylingType> = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 1);

/**
 * authorization framework of the identity provider
 *
 * @generated from enum zitadel.idp.v1.IDPType
 */
export enum IDPType {
  /**
   * @generated from enum value: IDP_TYPE_UNSPECIFIED = 0;
   */
  IDP_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: IDP_TYPE_OIDC = 1;
   */
  IDP_TYPE_OIDC = 1,

  /**
   * @generated from enum value: IDP_TYPE_JWT = 3;
   */
  IDP_TYPE_JWT = 3,
}

/**
 * Describes the enum zitadel.idp.v1.IDPType.
 */
export const IDPTypeSchema: GenEnum<IDPType> = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 2);

/**
 * the owner of the identity provider.
 *
 * @generated from enum zitadel.idp.v1.IDPOwnerType
 */
export enum IDPOwnerType {
  /**
   * @generated from enum value: IDP_OWNER_TYPE_UNSPECIFIED = 0;
   */
  IDP_OWNER_TYPE_UNSPECIFIED = 0,

  /**
   * system is managed by the ZITADEL administrators
   *
   * @generated from enum value: IDP_OWNER_TYPE_SYSTEM = 1;
   */
  IDP_OWNER_TYPE_SYSTEM = 1,

  /**
   * org is managed by de organization administrators
   *
   * @generated from enum value: IDP_OWNER_TYPE_ORG = 2;
   */
  IDP_OWNER_TYPE_ORG = 2,
}

/**
 * Describes the enum zitadel.idp.v1.IDPOwnerType.
 */
export const IDPOwnerTypeSchema: GenEnum<IDPOwnerType> = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 3);

/**
 * @generated from enum zitadel.idp.v1.OIDCMappingField
 */
export enum OIDCMappingField {
  /**
   * @generated from enum value: OIDC_MAPPING_FIELD_UNSPECIFIED = 0;
   */
  OIDC_MAPPING_FIELD_UNSPECIFIED = 0,

  /**
   * @generated from enum value: OIDC_MAPPING_FIELD_PREFERRED_USERNAME = 1;
   */
  OIDC_MAPPING_FIELD_PREFERRED_USERNAME = 1,

  /**
   * @generated from enum value: OIDC_MAPPING_FIELD_EMAIL = 2;
   */
  OIDC_MAPPING_FIELD_EMAIL = 2,
}

/**
 * Describes the enum zitadel.idp.v1.OIDCMappingField.
 */
export const OIDCMappingFieldSchema: GenEnum<OIDCMappingField> = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 4);

/**
 * @generated from enum zitadel.idp.v1.IDPFieldName
 */
export enum IDPFieldName {
  /**
   * @generated from enum value: IDP_FIELD_NAME_UNSPECIFIED = 0;
   */
  IDP_FIELD_NAME_UNSPECIFIED = 0,

  /**
   * @generated from enum value: IDP_FIELD_NAME_NAME = 1;
   */
  IDP_FIELD_NAME_NAME = 1,
}

/**
 * Describes the enum zitadel.idp.v1.IDPFieldName.
 */
export const IDPFieldNameSchema: GenEnum<IDPFieldName> = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 5);

/**
 * @generated from enum zitadel.idp.v1.ProviderType
 */
export enum ProviderType {
  /**
   * @generated from enum value: PROVIDER_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PROVIDER_TYPE_OIDC = 1;
   */
  OIDC = 1,

  /**
   * @generated from enum value: PROVIDER_TYPE_JWT = 2;
   */
  JWT = 2,

  /**
   * @generated from enum value: PROVIDER_TYPE_LDAP = 3;
   */
  LDAP = 3,

  /**
   * @generated from enum value: PROVIDER_TYPE_OAUTH = 4;
   */
  OAUTH = 4,

  /**
   * @generated from enum value: PROVIDER_TYPE_AZURE_AD = 5;
   */
  AZURE_AD = 5,

  /**
   * @generated from enum value: PROVIDER_TYPE_GITHUB = 6;
   */
  GITHUB = 6,

  /**
   * @generated from enum value: PROVIDER_TYPE_GITHUB_ES = 7;
   */
  GITHUB_ES = 7,

  /**
   * @generated from enum value: PROVIDER_TYPE_GITLAB = 8;
   */
  GITLAB = 8,

  /**
   * @generated from enum value: PROVIDER_TYPE_GITLAB_SELF_HOSTED = 9;
   */
  GITLAB_SELF_HOSTED = 9,

  /**
   * @generated from enum value: PROVIDER_TYPE_GOOGLE = 10;
   */
  GOOGLE = 10,

  /**
   * @generated from enum value: PROVIDER_TYPE_APPLE = 11;
   */
  APPLE = 11,

  /**
   * @generated from enum value: PROVIDER_TYPE_SAML = 12;
   */
  SAML = 12,
}

/**
 * Describes the enum zitadel.idp.v1.ProviderType.
 */
export const ProviderTypeSchema: GenEnum<ProviderType> = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 6);

/**
 * @generated from enum zitadel.idp.v1.SAMLBinding
 */
export enum SAMLBinding {
  /**
   * @generated from enum value: SAML_BINDING_UNSPECIFIED = 0;
   */
  SAML_BINDING_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SAML_BINDING_POST = 1;
   */
  SAML_BINDING_POST = 1,

  /**
   * @generated from enum value: SAML_BINDING_REDIRECT = 2;
   */
  SAML_BINDING_REDIRECT = 2,

  /**
   * @generated from enum value: SAML_BINDING_ARTIFACT = 3;
   */
  SAML_BINDING_ARTIFACT = 3,
}

/**
 * Describes the enum zitadel.idp.v1.SAMLBinding.
 */
export const SAMLBindingSchema: GenEnum<SAMLBinding> = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 7);

/**
 * @generated from enum zitadel.idp.v1.SAMLNameIDFormat
 */
export enum SAMLNameIDFormat {
  /**
   * @generated from enum value: SAML_NAME_ID_FORMAT_UNSPECIFIED = 0;
   */
  SAML_NAME_ID_FORMAT_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SAML_NAME_ID_FORMAT_EMAIL_ADDRESS = 1;
   */
  SAML_NAME_ID_FORMAT_EMAIL_ADDRESS = 1,

  /**
   * @generated from enum value: SAML_NAME_ID_FORMAT_PERSISTENT = 2;
   */
  SAML_NAME_ID_FORMAT_PERSISTENT = 2,

  /**
   * @generated from enum value: SAML_NAME_ID_FORMAT_TRANSIENT = 3;
   */
  SAML_NAME_ID_FORMAT_TRANSIENT = 3,
}

/**
 * Describes the enum zitadel.idp.v1.SAMLNameIDFormat.
 */
export const SAMLNameIDFormatSchema: GenEnum<SAMLNameIDFormat> = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 8);

/**
 * @generated from enum zitadel.idp.v1.AutoLinkingOption
 */
export enum AutoLinkingOption {
  /**
   * AUTO_LINKING_OPTION_UNSPECIFIED disables the auto linking prompt.
   *
   * @generated from enum value: AUTO_LINKING_OPTION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * AUTO_LINKING_OPTION_USERNAME will use the username of the external user to check for a corresponding ZITADEL user.
   *
   * @generated from enum value: AUTO_LINKING_OPTION_USERNAME = 1;
   */
  USERNAME = 1,

  /**
   * AUTO_LINKING_OPTION_EMAIL  will use the email of the external user to check for a corresponding ZITADEL user with the same verified email
   * Note that in case multiple users match, no prompt will be shown.
   *
   * @generated from enum value: AUTO_LINKING_OPTION_EMAIL = 2;
   */
  EMAIL = 2,
}

/**
 * Describes the enum zitadel.idp.v1.AutoLinkingOption.
 */
export const AutoLinkingOptionSchema: GenEnum<AutoLinkingOption> = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 9);

/**
 * @generated from enum zitadel.idp.v1.AzureADTenantType
 */
export enum AzureADTenantType {
  /**
   * @generated from enum value: AZURE_AD_TENANT_TYPE_COMMON = 0;
   */
  AZURE_AD_TENANT_TYPE_COMMON = 0,

  /**
   * @generated from enum value: AZURE_AD_TENANT_TYPE_ORGANISATIONS = 1;
   */
  AZURE_AD_TENANT_TYPE_ORGANISATIONS = 1,

  /**
   * @generated from enum value: AZURE_AD_TENANT_TYPE_CONSUMERS = 2;
   */
  AZURE_AD_TENANT_TYPE_CONSUMERS = 2,
}

/**
 * Describes the enum zitadel.idp.v1.AzureADTenantType.
 */
export const AzureADTenantTypeSchema: GenEnum<AzureADTenantType> = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 10);

