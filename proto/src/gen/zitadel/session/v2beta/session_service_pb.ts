// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file zitadel/session/v2beta/session_service.proto (package zitadel.session.v2beta, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Details, ListDetails, ListQuery } from "../../object/v2beta/object_pb";
import { file_zitadel_object_v2beta_object } from "../../object/v2beta/object_pb";
import { file_zitadel_protoc_gen_zitadel_v2_options } from "../../protoc_gen_zitadel/v2/options_pb";
import type { Challenges, RequestChallenges } from "./challenge_pb";
import { file_zitadel_session_v2beta_challenge } from "./challenge_pb";
import type { SearchQuery, Session, SessionFieldName, UserAgent } from "./session_pb";
import { file_zitadel_session_v2beta_session } from "./session_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import { file_google_api_field_behavior } from "../../../google/api/field_behavior_pb";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../protoc-gen-openapiv2/options/annotations_pb";
import { file_validate_validate } from "../../../validate/validate_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file zitadel/session/v2beta/session_service.proto.
 */
export const file_zitadel_session_v2beta_session_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_zitadel_object_v2beta_object, file_zitadel_protoc_gen_zitadel_v2_options, file_zitadel_session_v2beta_challenge, file_zitadel_session_v2beta_session, file_google_api_annotations, file_google_api_field_behavior, file_google_protobuf_struct, file_google_protobuf_duration, file_protoc_gen_openapiv2_options_annotations, file_validate_validate]);

/**
 * @generated from message zitadel.session.v2beta.ListSessionsRequest
 */
export type ListSessionsRequest = Message<"zitadel.session.v2beta.ListSessionsRequest"> & {
  /**
   * @generated from field: zitadel.object.v2beta.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * @generated from field: repeated zitadel.session.v2beta.SearchQuery queries = 2;
   */
  queries: SearchQuery[];

  /**
   * @generated from field: zitadel.session.v2beta.SessionFieldName sorting_column = 3;
   */
  sortingColumn: SessionFieldName;
};

/**
 * Describes the message zitadel.session.v2beta.ListSessionsRequest.
 * Use `create(ListSessionsRequestSchema)` to create a new message.
 */
export const ListSessionsRequestSchema: GenMessage<ListSessionsRequest> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 0);

/**
 * @generated from message zitadel.session.v2beta.ListSessionsResponse
 */
export type ListSessionsResponse = Message<"zitadel.session.v2beta.ListSessionsResponse"> & {
  /**
   * @generated from field: zitadel.object.v2beta.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.session.v2beta.Session sessions = 2;
   */
  sessions: Session[];
};

/**
 * Describes the message zitadel.session.v2beta.ListSessionsResponse.
 * Use `create(ListSessionsResponseSchema)` to create a new message.
 */
export const ListSessionsResponseSchema: GenMessage<ListSessionsResponse> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 1);

/**
 * @generated from message zitadel.session.v2beta.GetSessionRequest
 */
export type GetSessionRequest = Message<"zitadel.session.v2beta.GetSessionRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: optional string session_token = 2;
   */
  sessionToken?: string;
};

/**
 * Describes the message zitadel.session.v2beta.GetSessionRequest.
 * Use `create(GetSessionRequestSchema)` to create a new message.
 */
export const GetSessionRequestSchema: GenMessage<GetSessionRequest> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 2);

/**
 * @generated from message zitadel.session.v2beta.GetSessionResponse
 */
export type GetSessionResponse = Message<"zitadel.session.v2beta.GetSessionResponse"> & {
  /**
   * @generated from field: zitadel.session.v2beta.Session session = 1;
   */
  session?: Session;
};

/**
 * Describes the message zitadel.session.v2beta.GetSessionResponse.
 * Use `create(GetSessionResponseSchema)` to create a new message.
 */
export const GetSessionResponseSchema: GenMessage<GetSessionResponse> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 3);

/**
 * @generated from message zitadel.session.v2beta.CreateSessionRequest
 */
export type CreateSessionRequest = Message<"zitadel.session.v2beta.CreateSessionRequest"> & {
  /**
   * @generated from field: zitadel.session.v2beta.Checks checks = 1;
   */
  checks?: Checks;

  /**
   * @generated from field: map<string, bytes> metadata = 2;
   */
  metadata: { [key: string]: Uint8Array };

  /**
   * @generated from field: zitadel.session.v2beta.RequestChallenges challenges = 3;
   */
  challenges?: RequestChallenges;

  /**
   * @generated from field: zitadel.session.v2beta.UserAgent user_agent = 4;
   */
  userAgent?: UserAgent;

  /**
   * @generated from field: optional google.protobuf.Duration lifetime = 5;
   */
  lifetime?: Duration;
};

/**
 * Describes the message zitadel.session.v2beta.CreateSessionRequest.
 * Use `create(CreateSessionRequestSchema)` to create a new message.
 */
export const CreateSessionRequestSchema: GenMessage<CreateSessionRequest> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 4);

/**
 * @generated from message zitadel.session.v2beta.CreateSessionResponse
 */
export type CreateSessionResponse = Message<"zitadel.session.v2beta.CreateSessionResponse"> & {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: string session_token = 3;
   */
  sessionToken: string;

  /**
   * @generated from field: zitadel.session.v2beta.Challenges challenges = 4;
   */
  challenges?: Challenges;
};

/**
 * Describes the message zitadel.session.v2beta.CreateSessionResponse.
 * Use `create(CreateSessionResponseSchema)` to create a new message.
 */
export const CreateSessionResponseSchema: GenMessage<CreateSessionResponse> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 5);

/**
 * @generated from message zitadel.session.v2beta.SetSessionRequest
 */
export type SetSessionRequest = Message<"zitadel.session.v2beta.SetSessionRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string session_token = 2;
   */
  sessionToken: string;

  /**
   * @generated from field: zitadel.session.v2beta.Checks checks = 3;
   */
  checks?: Checks;

  /**
   * @generated from field: map<string, bytes> metadata = 4;
   */
  metadata: { [key: string]: Uint8Array };

  /**
   * @generated from field: zitadel.session.v2beta.RequestChallenges challenges = 5;
   */
  challenges?: RequestChallenges;

  /**
   * @generated from field: optional google.protobuf.Duration lifetime = 6;
   */
  lifetime?: Duration;
};

/**
 * Describes the message zitadel.session.v2beta.SetSessionRequest.
 * Use `create(SetSessionRequestSchema)` to create a new message.
 */
export const SetSessionRequestSchema: GenMessage<SetSessionRequest> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 6);

/**
 * @generated from message zitadel.session.v2beta.SetSessionResponse
 */
export type SetSessionResponse = Message<"zitadel.session.v2beta.SetSessionResponse"> & {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: string session_token = 2;
   */
  sessionToken: string;

  /**
   * @generated from field: zitadel.session.v2beta.Challenges challenges = 3;
   */
  challenges?: Challenges;
};

/**
 * Describes the message zitadel.session.v2beta.SetSessionResponse.
 * Use `create(SetSessionResponseSchema)` to create a new message.
 */
export const SetSessionResponseSchema: GenMessage<SetSessionResponse> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 7);

/**
 * @generated from message zitadel.session.v2beta.DeleteSessionRequest
 */
export type DeleteSessionRequest = Message<"zitadel.session.v2beta.DeleteSessionRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: optional string session_token = 2;
   */
  sessionToken?: string;
};

/**
 * Describes the message zitadel.session.v2beta.DeleteSessionRequest.
 * Use `create(DeleteSessionRequestSchema)` to create a new message.
 */
export const DeleteSessionRequestSchema: GenMessage<DeleteSessionRequest> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 8);

/**
 * @generated from message zitadel.session.v2beta.DeleteSessionResponse
 */
export type DeleteSessionResponse = Message<"zitadel.session.v2beta.DeleteSessionResponse"> & {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;
};

/**
 * Describes the message zitadel.session.v2beta.DeleteSessionResponse.
 * Use `create(DeleteSessionResponseSchema)` to create a new message.
 */
export const DeleteSessionResponseSchema: GenMessage<DeleteSessionResponse> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 9);

/**
 * @generated from message zitadel.session.v2beta.Checks
 */
export type Checks = Message<"zitadel.session.v2beta.Checks"> & {
  /**
   * @generated from field: optional zitadel.session.v2beta.CheckUser user = 1;
   */
  user?: CheckUser;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckPassword password = 2;
   */
  password?: CheckPassword;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckWebAuthN web_auth_n = 3;
   */
  webAuthN?: CheckWebAuthN;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckIDPIntent idp_intent = 4;
   */
  idpIntent?: CheckIDPIntent;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckTOTP totp = 5;
   */
  totp?: CheckTOTP;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckOTP otp_sms = 6;
   */
  otpSms?: CheckOTP;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckOTP otp_email = 7;
   */
  otpEmail?: CheckOTP;
};

/**
 * Describes the message zitadel.session.v2beta.Checks.
 * Use `create(ChecksSchema)` to create a new message.
 */
export const ChecksSchema: GenMessage<Checks> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 10);

/**
 * @generated from message zitadel.session.v2beta.CheckUser
 */
export type CheckUser = Message<"zitadel.session.v2beta.CheckUser"> & {
  /**
   * @generated from oneof zitadel.session.v2beta.CheckUser.search
   */
  search: {
    /**
     * @generated from field: string user_id = 1;
     */
    value: string;
    case: "userId";
  } | {
    /**
     * @generated from field: string login_name = 2;
     */
    value: string;
    case: "loginName";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message zitadel.session.v2beta.CheckUser.
 * Use `create(CheckUserSchema)` to create a new message.
 */
export const CheckUserSchema: GenMessage<CheckUser> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 11);

/**
 * @generated from message zitadel.session.v2beta.CheckPassword
 */
export type CheckPassword = Message<"zitadel.session.v2beta.CheckPassword"> & {
  /**
   * @generated from field: string password = 1;
   */
  password: string;
};

/**
 * Describes the message zitadel.session.v2beta.CheckPassword.
 * Use `create(CheckPasswordSchema)` to create a new message.
 */
export const CheckPasswordSchema: GenMessage<CheckPassword> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 12);

/**
 * @generated from message zitadel.session.v2beta.CheckWebAuthN
 */
export type CheckWebAuthN = Message<"zitadel.session.v2beta.CheckWebAuthN"> & {
  /**
   * @generated from field: google.protobuf.Struct credential_assertion_data = 1;
   */
  credentialAssertionData?: JsonObject;
};

/**
 * Describes the message zitadel.session.v2beta.CheckWebAuthN.
 * Use `create(CheckWebAuthNSchema)` to create a new message.
 */
export const CheckWebAuthNSchema: GenMessage<CheckWebAuthN> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 13);

/**
 * @generated from message zitadel.session.v2beta.CheckIDPIntent
 */
export type CheckIDPIntent = Message<"zitadel.session.v2beta.CheckIDPIntent"> & {
  /**
   * @generated from field: string idp_intent_id = 1;
   */
  idpIntentId: string;

  /**
   * @generated from field: string idp_intent_token = 2;
   */
  idpIntentToken: string;
};

/**
 * Describes the message zitadel.session.v2beta.CheckIDPIntent.
 * Use `create(CheckIDPIntentSchema)` to create a new message.
 */
export const CheckIDPIntentSchema: GenMessage<CheckIDPIntent> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 14);

/**
 * @generated from message zitadel.session.v2beta.CheckTOTP
 */
export type CheckTOTP = Message<"zitadel.session.v2beta.CheckTOTP"> & {
  /**
   * @generated from field: string code = 1;
   */
  code: string;
};

/**
 * Describes the message zitadel.session.v2beta.CheckTOTP.
 * Use `create(CheckTOTPSchema)` to create a new message.
 */
export const CheckTOTPSchema: GenMessage<CheckTOTP> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 15);

/**
 * @generated from message zitadel.session.v2beta.CheckOTP
 */
export type CheckOTP = Message<"zitadel.session.v2beta.CheckOTP"> & {
  /**
   * @generated from field: string code = 1;
   */
  code: string;
};

/**
 * Describes the message zitadel.session.v2beta.CheckOTP.
 * Use `create(CheckOTPSchema)` to create a new message.
 */
export const CheckOTPSchema: GenMessage<CheckOTP> = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2beta_session_service, 16);

/**
 * @generated from service zitadel.session.v2beta.SessionService
 */
export const SessionService: GenService<{
  /**
   * Search sessions
   *
   * @generated from rpc zitadel.session.v2beta.SessionService.ListSessions
   */
  listSessions: {
    methodKind: "unary";
    input: typeof ListSessionsRequestSchema;
    output: typeof ListSessionsResponseSchema;
  },
  /**
   * GetSession a session
   *
   * @generated from rpc zitadel.session.v2beta.SessionService.GetSession
   */
  getSession: {
    methodKind: "unary";
    input: typeof GetSessionRequestSchema;
    output: typeof GetSessionResponseSchema;
  },
  /**
   * Create a new session
   *
   * @generated from rpc zitadel.session.v2beta.SessionService.CreateSession
   */
  createSession: {
    methodKind: "unary";
    input: typeof CreateSessionRequestSchema;
    output: typeof CreateSessionResponseSchema;
  },
  /**
   * Update a session
   *
   * @generated from rpc zitadel.session.v2beta.SessionService.SetSession
   */
  setSession: {
    methodKind: "unary";
    input: typeof SetSessionRequestSchema;
    output: typeof SetSessionResponseSchema;
  },
  /**
   * Terminate a session
   *
   * @generated from rpc zitadel.session.v2beta.SessionService.DeleteSession
   */
  deleteSession: {
    methodKind: "unary";
    input: typeof DeleteSessionRequestSchema;
    output: typeof DeleteSessionResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_zitadel_session_v2beta_session_service, 0);

