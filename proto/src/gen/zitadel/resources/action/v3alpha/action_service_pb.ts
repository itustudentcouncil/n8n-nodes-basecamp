// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file zitadel/resources/action/v3alpha/action_service.proto (package zitadel.resources.action.v3alpha, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb";
import { file_google_api_field_behavior } from "../../../../google/api/field_behavior_pb";
import { file_google_protobuf_duration, file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../../protoc-gen-openapiv2/options/annotations_pb";
import { file_validate_validate } from "../../../../validate/validate_pb";
import { file_zitadel_protoc_gen_zitadel_v2_options } from "../../../protoc_gen_zitadel/v2/options_pb";
import type { GetTarget, PatchTarget, Target } from "./target_pb";
import { file_zitadel_resources_action_v3alpha_target } from "./target_pb";
import type { Condition, Execution, GetExecution } from "./execution_pb";
import { file_zitadel_resources_action_v3alpha_execution } from "./execution_pb";
import type { ExecutionFieldName, ExecutionSearchFilter, TargetFieldName, TargetSearchFilter } from "./query_pb";
import { file_zitadel_resources_action_v3alpha_query } from "./query_pb";
import type { Details, ListDetails, SearchQuery } from "../../object/v3alpha/object_pb";
import { file_zitadel_resources_object_v3alpha_object } from "../../object/v3alpha/object_pb";
import type { Instance } from "../../../object/v3alpha/object_pb";
import { file_zitadel_object_v3alpha_object } from "../../../object/v3alpha/object_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file zitadel/resources/action/v3alpha/action_service.proto.
 */
export const file_zitadel_resources_action_v3alpha_action_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_field_behavior, file_google_protobuf_duration, file_google_protobuf_struct, file_protoc_gen_openapiv2_options_annotations, file_validate_validate, file_zitadel_protoc_gen_zitadel_v2_options, file_zitadel_resources_action_v3alpha_target, file_zitadel_resources_action_v3alpha_execution, file_zitadel_resources_action_v3alpha_query, file_zitadel_resources_object_v3alpha_object, file_zitadel_object_v3alpha_object]);

/**
 * @generated from message zitadel.resources.action.v3alpha.CreateTargetRequest
 */
export type CreateTargetRequest = Message<"zitadel.resources.action.v3alpha.CreateTargetRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * @generated from field: zitadel.resources.action.v3alpha.Target target = 2;
   */
  target?: Target;
};

/**
 * Describes the message zitadel.resources.action.v3alpha.CreateTargetRequest.
 * Use `create(CreateTargetRequestSchema)` to create a new message.
 */
export const CreateTargetRequestSchema: GenMessage<CreateTargetRequest> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 0);

/**
 * @generated from message zitadel.resources.action.v3alpha.CreateTargetResponse
 */
export type CreateTargetResponse = Message<"zitadel.resources.action.v3alpha.CreateTargetResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * Describes the message zitadel.resources.action.v3alpha.CreateTargetResponse.
 * Use `create(CreateTargetResponseSchema)` to create a new message.
 */
export const CreateTargetResponseSchema: GenMessage<CreateTargetResponse> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 1);

/**
 * @generated from message zitadel.resources.action.v3alpha.PatchTargetRequest
 */
export type PatchTargetRequest = Message<"zitadel.resources.action.v3alpha.PatchTargetRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * @generated from field: zitadel.resources.action.v3alpha.PatchTarget target = 3;
   */
  target?: PatchTarget;
};

/**
 * Describes the message zitadel.resources.action.v3alpha.PatchTargetRequest.
 * Use `create(PatchTargetRequestSchema)` to create a new message.
 */
export const PatchTargetRequestSchema: GenMessage<PatchTargetRequest> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 2);

/**
 * @generated from message zitadel.resources.action.v3alpha.PatchTargetResponse
 */
export type PatchTargetResponse = Message<"zitadel.resources.action.v3alpha.PatchTargetResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * Describes the message zitadel.resources.action.v3alpha.PatchTargetResponse.
 * Use `create(PatchTargetResponseSchema)` to create a new message.
 */
export const PatchTargetResponseSchema: GenMessage<PatchTargetResponse> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 3);

/**
 * @generated from message zitadel.resources.action.v3alpha.DeleteTargetRequest
 */
export type DeleteTargetRequest = Message<"zitadel.resources.action.v3alpha.DeleteTargetRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message zitadel.resources.action.v3alpha.DeleteTargetRequest.
 * Use `create(DeleteTargetRequestSchema)` to create a new message.
 */
export const DeleteTargetRequestSchema: GenMessage<DeleteTargetRequest> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 4);

/**
 * @generated from message zitadel.resources.action.v3alpha.DeleteTargetResponse
 */
export type DeleteTargetResponse = Message<"zitadel.resources.action.v3alpha.DeleteTargetResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * Describes the message zitadel.resources.action.v3alpha.DeleteTargetResponse.
 * Use `create(DeleteTargetResponseSchema)` to create a new message.
 */
export const DeleteTargetResponseSchema: GenMessage<DeleteTargetResponse> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 5);

/**
 * @generated from message zitadel.resources.action.v3alpha.GetTargetRequest
 */
export type GetTargetRequest = Message<"zitadel.resources.action.v3alpha.GetTargetRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message zitadel.resources.action.v3alpha.GetTargetRequest.
 * Use `create(GetTargetRequestSchema)` to create a new message.
 */
export const GetTargetRequestSchema: GenMessage<GetTargetRequest> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 6);

/**
 * @generated from message zitadel.resources.action.v3alpha.GetTargetResponse
 */
export type GetTargetResponse = Message<"zitadel.resources.action.v3alpha.GetTargetResponse"> & {
  /**
   * @generated from field: zitadel.resources.action.v3alpha.GetTarget target = 1;
   */
  target?: GetTarget;
};

/**
 * Describes the message zitadel.resources.action.v3alpha.GetTargetResponse.
 * Use `create(GetTargetResponseSchema)` to create a new message.
 */
export const GetTargetResponseSchema: GenMessage<GetTargetResponse> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 7);

/**
 * @generated from message zitadel.resources.action.v3alpha.SearchTargetsRequest
 */
export type SearchTargetsRequest = Message<"zitadel.resources.action.v3alpha.SearchTargetsRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * list limitations and ordering.
   *
   * @generated from field: optional zitadel.resources.object.v3alpha.SearchQuery query = 2;
   */
  query?: SearchQuery;

  /**
   * The field the result is sorted by. The default is the creation date. Beware that if you change this, your result pagination might be inconsistent.
   *
   * @generated from field: optional zitadel.resources.action.v3alpha.TargetFieldName sorting_column = 3;
   */
  sortingColumn?: TargetFieldName;

  /**
   * Define the criteria to query for.
   *
   * @generated from field: repeated zitadel.resources.action.v3alpha.TargetSearchFilter filters = 4;
   */
  filters: TargetSearchFilter[];
};

/**
 * Describes the message zitadel.resources.action.v3alpha.SearchTargetsRequest.
 * Use `create(SearchTargetsRequestSchema)` to create a new message.
 */
export const SearchTargetsRequestSchema: GenMessage<SearchTargetsRequest> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 8);

/**
 * @generated from message zitadel.resources.action.v3alpha.SearchTargetsResponse
 */
export type SearchTargetsResponse = Message<"zitadel.resources.action.v3alpha.SearchTargetsResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.resources.action.v3alpha.GetTarget result = 2;
   */
  result: GetTarget[];
};

/**
 * Describes the message zitadel.resources.action.v3alpha.SearchTargetsResponse.
 * Use `create(SearchTargetsResponseSchema)` to create a new message.
 */
export const SearchTargetsResponseSchema: GenMessage<SearchTargetsResponse> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 9);

/**
 * @generated from message zitadel.resources.action.v3alpha.SetExecutionRequest
 */
export type SetExecutionRequest = Message<"zitadel.resources.action.v3alpha.SetExecutionRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * @generated from field: zitadel.resources.action.v3alpha.Condition condition = 2;
   */
  condition?: Condition;

  /**
   * @generated from field: zitadel.resources.action.v3alpha.Execution execution = 3;
   */
  execution?: Execution;
};

/**
 * Describes the message zitadel.resources.action.v3alpha.SetExecutionRequest.
 * Use `create(SetExecutionRequestSchema)` to create a new message.
 */
export const SetExecutionRequestSchema: GenMessage<SetExecutionRequest> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 10);

/**
 * @generated from message zitadel.resources.action.v3alpha.SetExecutionResponse
 */
export type SetExecutionResponse = Message<"zitadel.resources.action.v3alpha.SetExecutionResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * Describes the message zitadel.resources.action.v3alpha.SetExecutionResponse.
 * Use `create(SetExecutionResponseSchema)` to create a new message.
 */
export const SetExecutionResponseSchema: GenMessage<SetExecutionResponse> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 11);

/**
 * @generated from message zitadel.resources.action.v3alpha.SearchExecutionsRequest
 */
export type SearchExecutionsRequest = Message<"zitadel.resources.action.v3alpha.SearchExecutionsRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * list limitations and ordering.
   *
   * @generated from field: optional zitadel.resources.object.v3alpha.SearchQuery query = 2;
   */
  query?: SearchQuery;

  /**
   * The field the result is sorted by. The default is the creation date. Beware that if you change this, your result pagination might be inconsistent.
   *
   * @generated from field: optional zitadel.resources.action.v3alpha.ExecutionFieldName sorting_column = 3;
   */
  sortingColumn?: ExecutionFieldName;

  /**
   * Define the criteria to query for.
   *
   * @generated from field: repeated zitadel.resources.action.v3alpha.ExecutionSearchFilter filters = 4;
   */
  filters: ExecutionSearchFilter[];
};

/**
 * Describes the message zitadel.resources.action.v3alpha.SearchExecutionsRequest.
 * Use `create(SearchExecutionsRequestSchema)` to create a new message.
 */
export const SearchExecutionsRequestSchema: GenMessage<SearchExecutionsRequest> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 12);

/**
 * @generated from message zitadel.resources.action.v3alpha.SearchExecutionsResponse
 */
export type SearchExecutionsResponse = Message<"zitadel.resources.action.v3alpha.SearchExecutionsResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.resources.action.v3alpha.GetExecution result = 2;
   */
  result: GetExecution[];
};

/**
 * Describes the message zitadel.resources.action.v3alpha.SearchExecutionsResponse.
 * Use `create(SearchExecutionsResponseSchema)` to create a new message.
 */
export const SearchExecutionsResponseSchema: GenMessage<SearchExecutionsResponse> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 13);

/**
 * @generated from message zitadel.resources.action.v3alpha.ListExecutionFunctionsRequest
 */
export type ListExecutionFunctionsRequest = Message<"zitadel.resources.action.v3alpha.ListExecutionFunctionsRequest"> & {
};

/**
 * Describes the message zitadel.resources.action.v3alpha.ListExecutionFunctionsRequest.
 * Use `create(ListExecutionFunctionsRequestSchema)` to create a new message.
 */
export const ListExecutionFunctionsRequestSchema: GenMessage<ListExecutionFunctionsRequest> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 14);

/**
 * @generated from message zitadel.resources.action.v3alpha.ListExecutionFunctionsResponse
 */
export type ListExecutionFunctionsResponse = Message<"zitadel.resources.action.v3alpha.ListExecutionFunctionsResponse"> & {
  /**
   * All available methods
   *
   * @generated from field: repeated string functions = 1;
   */
  functions: string[];
};

/**
 * Describes the message zitadel.resources.action.v3alpha.ListExecutionFunctionsResponse.
 * Use `create(ListExecutionFunctionsResponseSchema)` to create a new message.
 */
export const ListExecutionFunctionsResponseSchema: GenMessage<ListExecutionFunctionsResponse> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 15);

/**
 * @generated from message zitadel.resources.action.v3alpha.ListExecutionMethodsRequest
 */
export type ListExecutionMethodsRequest = Message<"zitadel.resources.action.v3alpha.ListExecutionMethodsRequest"> & {
};

/**
 * Describes the message zitadel.resources.action.v3alpha.ListExecutionMethodsRequest.
 * Use `create(ListExecutionMethodsRequestSchema)` to create a new message.
 */
export const ListExecutionMethodsRequestSchema: GenMessage<ListExecutionMethodsRequest> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 16);

/**
 * @generated from message zitadel.resources.action.v3alpha.ListExecutionMethodsResponse
 */
export type ListExecutionMethodsResponse = Message<"zitadel.resources.action.v3alpha.ListExecutionMethodsResponse"> & {
  /**
   * All available methods
   *
   * @generated from field: repeated string methods = 1;
   */
  methods: string[];
};

/**
 * Describes the message zitadel.resources.action.v3alpha.ListExecutionMethodsResponse.
 * Use `create(ListExecutionMethodsResponseSchema)` to create a new message.
 */
export const ListExecutionMethodsResponseSchema: GenMessage<ListExecutionMethodsResponse> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 17);

/**
 * @generated from message zitadel.resources.action.v3alpha.ListExecutionServicesRequest
 */
export type ListExecutionServicesRequest = Message<"zitadel.resources.action.v3alpha.ListExecutionServicesRequest"> & {
};

/**
 * Describes the message zitadel.resources.action.v3alpha.ListExecutionServicesRequest.
 * Use `create(ListExecutionServicesRequestSchema)` to create a new message.
 */
export const ListExecutionServicesRequestSchema: GenMessage<ListExecutionServicesRequest> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 18);

/**
 * @generated from message zitadel.resources.action.v3alpha.ListExecutionServicesResponse
 */
export type ListExecutionServicesResponse = Message<"zitadel.resources.action.v3alpha.ListExecutionServicesResponse"> & {
  /**
   * All available methods
   *
   * @generated from field: repeated string services = 1;
   */
  services: string[];
};

/**
 * Describes the message zitadel.resources.action.v3alpha.ListExecutionServicesResponse.
 * Use `create(ListExecutionServicesResponseSchema)` to create a new message.
 */
export const ListExecutionServicesResponseSchema: GenMessage<ListExecutionServicesResponse> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_action_v3alpha_action_service, 19);

/**
 * @generated from service zitadel.resources.action.v3alpha.ZITADELActions
 */
export const ZITADELActions: GenService<{
  /**
   * Create a target
   *
   * Create a new target, which can be used in executions.
   *
   * @generated from rpc zitadel.resources.action.v3alpha.ZITADELActions.CreateTarget
   */
  createTarget: {
    methodKind: "unary";
    input: typeof CreateTargetRequestSchema;
    output: typeof CreateTargetResponseSchema;
  },
  /**
   * Patch a target
   *
   * Patch an existing target.
   *
   * @generated from rpc zitadel.resources.action.v3alpha.ZITADELActions.PatchTarget
   */
  patchTarget: {
    methodKind: "unary";
    input: typeof PatchTargetRequestSchema;
    output: typeof PatchTargetResponseSchema;
  },
  /**
   * Delete a target
   *
   * Delete an existing target. This will remove it from any configured execution as well.
   *
   * @generated from rpc zitadel.resources.action.v3alpha.ZITADELActions.DeleteTarget
   */
  deleteTarget: {
    methodKind: "unary";
    input: typeof DeleteTargetRequestSchema;
    output: typeof DeleteTargetResponseSchema;
  },
  /**
   * Target by ID
   *
   * Returns the target identified by the requested ID.
   *
   * @generated from rpc zitadel.resources.action.v3alpha.ZITADELActions.GetTarget
   */
  getTarget: {
    methodKind: "unary";
    input: typeof GetTargetRequestSchema;
    output: typeof GetTargetResponseSchema;
  },
  /**
   * Search targets
   *
   * Search all matching targets. By default all targets of the instance are returned.
   * Make sure to include a limit and sorting for pagination.
   *
   * @generated from rpc zitadel.resources.action.v3alpha.ZITADELActions.SearchTargets
   */
  searchTargets: {
    methodKind: "unary";
    input: typeof SearchTargetsRequestSchema;
    output: typeof SearchTargetsResponseSchema;
  },
  /**
   * Sets an execution to call a target or include the targets of another execution.
   *
   * Setting an empty list of targets will remove all targets from the execution, making it a noop.
   *
   * @generated from rpc zitadel.resources.action.v3alpha.ZITADELActions.SetExecution
   */
  setExecution: {
    methodKind: "unary";
    input: typeof SetExecutionRequestSchema;
    output: typeof SetExecutionResponseSchema;
  },
  /**
   * Search executions
   *
   * Search all matching executions. By default all executions of the instance are returned that have at least one execution target.
   * Make sure to include a limit and sorting for pagination.
   *
   * @generated from rpc zitadel.resources.action.v3alpha.ZITADELActions.SearchExecutions
   */
  searchExecutions: {
    methodKind: "unary";
    input: typeof SearchExecutionsRequestSchema;
    output: typeof SearchExecutionsResponseSchema;
  },
  /**
   * List all available functions
   *
   * List all available functions which can be used as condition for executions.
   *
   * @generated from rpc zitadel.resources.action.v3alpha.ZITADELActions.ListExecutionFunctions
   */
  listExecutionFunctions: {
    methodKind: "unary";
    input: typeof ListExecutionFunctionsRequestSchema;
    output: typeof ListExecutionFunctionsResponseSchema;
  },
  /**
   * List all available methods
   *
   * List all available methods which can be used as condition for executions.
   *
   * @generated from rpc zitadel.resources.action.v3alpha.ZITADELActions.ListExecutionMethods
   */
  listExecutionMethods: {
    methodKind: "unary";
    input: typeof ListExecutionMethodsRequestSchema;
    output: typeof ListExecutionMethodsResponseSchema;
  },
  /**
   * List all available service
   *
   * List all available services which can be used as condition for executions.
   *
   * @generated from rpc zitadel.resources.action.v3alpha.ZITADELActions.ListExecutionServices
   */
  listExecutionServices: {
    methodKind: "unary";
    input: typeof ListExecutionServicesRequestSchema;
    output: typeof ListExecutionServicesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_zitadel_resources_action_v3alpha_action_service, 0);

