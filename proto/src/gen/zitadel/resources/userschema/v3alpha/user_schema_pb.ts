// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file zitadel/resources/userschema/v3alpha/user_schema.proto (package zitadel.resources.userschema.v3alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../../google/api/field_behavior_pb";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import { file_validate_validate } from "../../../../validate/validate_pb";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../../protoc-gen-openapiv2/options/annotations_pb";
import type { Details, TextFilterMethod } from "../../object/v3alpha/object_pb";
import { file_zitadel_resources_object_v3alpha_object } from "../../object/v3alpha/object_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file zitadel/resources/userschema/v3alpha/user_schema.proto.
 */
export const file_zitadel_resources_userschema_v3alpha_user_schema: GenFile = /*@__PURE__*/
  fileDesc("CjZ6aXRhZGVsL3Jlc291cmNlcy91c2Vyc2NoZW1hL3YzYWxwaGEvdXNlcl9zY2hlbWEucHJvdG8SJHppdGFkZWwucmVzb3VyY2VzLnVzZXJzY2hlbWEudjNhbHBoYSL6AQoNR2V0VXNlclNjaGVtYRI6CgdkZXRhaWxzGAEgASgLMikueml0YWRlbC5yZXNvdXJjZXMub2JqZWN0LnYzYWxwaGEuRGV0YWlscxJACgZjb25maWcYAiABKAsyMC56aXRhZGVsLnJlc291cmNlcy51c2Vyc2NoZW1hLnYzYWxwaGEuVXNlclNjaGVtYRJPCgVzdGF0ZRgDIAEoDjIrLnppdGFkZWwucmVzb3VyY2VzLnVzZXJzY2hlbWEudjNhbHBoYS5TdGF0ZUITkkEQSg4iU1RBVEVfQUNUSVZFIhIaCghyZXZpc2lvbhgEIAEoDUIIkkEFSgMiMiIi+gMKClVzZXJTY2hlbWESMgoEdHlwZRgBIAEoCUIkkkETSgsiZW1wbG95ZWVzInjIAYABAeJBAQL6QgdyBRABGMgBEtcBCgZzY2hlbWEYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0QqsBkkGbAUqYAXsiJHNjaGVtYSI6Imh0dHBzOi8vZXhhbXBsZS5jb20vdXNlci9lbXBsb3llZXMiLCJ0eXBlIjoib2JqZWN0IiwicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmciLCJyZXF1aXJlZCI6dHJ1ZX0sImRlc2NyaXB0aW9uIjp7InR5cGUiOiJzdHJpbmcifX194kEBAvpCBYoBAhABSAASywEKF3Bvc3NpYmxlX2F1dGhlbnRpY2F0b3JzGAMgAygOMjcueml0YWRlbC5yZXNvdXJjZXMudXNlcnNjaGVtYS52M2FscGhhLkF1dGhlbnRpY2F0b3JUeXBlQnGSQV1KW1siQVVUSEVOVElDQVRPUl9UWVBFX1VTRVJOQU1FIiwiQVVUSEVOVElDQVRPUl9UWVBFX1BBU1NXT1JEIiwiQVVUSEVOVElDQVRPUl9UWVBFX1dFQkFVVEhOIl36Qg6SAQsYASIHggEEEAEgAEIQCglkYXRhX3R5cGUSA/hCASKIBAoPUGF0Y2hVc2VyU2NoZW1hEjcKBHR5cGUYAiABKAlCJJJBE0oLImVtcGxveWVlcyJ4yAGAAQHiQQEC+kIHcgUQARjIAUgBiAEBEtcBCgZzY2hlbWEYAyABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0QqsBkkGbAUqYAXsiJHNjaGVtYSI6Imh0dHBzOi8vZXhhbXBsZS5jb20vdXNlci9lbXBsb3llZXMiLCJ0eXBlIjoib2JqZWN0IiwicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmciLCJyZXF1aXJlZCI6dHJ1ZX0sImRlc2NyaXB0aW9uIjp7InR5cGUiOiJzdHJpbmcifX194kEBAvpCBYoBAhABSAASywEKF3Bvc3NpYmxlX2F1dGhlbnRpY2F0b3JzGAQgAygOMjcueml0YWRlbC5yZXNvdXJjZXMudXNlcnNjaGVtYS52M2FscGhhLkF1dGhlbnRpY2F0b3JUeXBlQnGSQV1KW1siQVVUSEVOVElDQVRPUl9UWVBFX1VTRVJOQU1FIiwiQVVUSEVOVElDQVRPUl9UWVBFX1BBU1NXT1JEIiwiQVVUSEVOVElDQVRPUl9UWVBFX1dFQkFVVEhOIl36Qg6SAQsYASIHggEEEAEgAEILCglkYXRhX3R5cGVCBwoFX3R5cGUiyQMKDFNlYXJjaEZpbHRlchJDCglvcl9maWx0ZXIYASABKAsyLi56aXRhZGVsLnJlc291cmNlcy51c2Vyc2NoZW1hLnYzYWxwaGEuT3JGaWx0ZXJIABJFCgphbmRfZmlsdGVyGAIgASgLMi8ueml0YWRlbC5yZXNvdXJjZXMudXNlcnNjaGVtYS52M2FscGhhLkFuZEZpbHRlckgAEkUKCm5vdF9maWx0ZXIYAyABKAsyLy56aXRhZGVsLnJlc291cmNlcy51c2Vyc2NoZW1hLnYzYWxwaGEuTm90RmlsdGVySAASRwoLdHlwZV9maWx0ZXIYBSABKAsyMC56aXRhZGVsLnJlc291cmNlcy51c2Vyc2NoZW1hLnYzYWxwaGEuVHlwZUZpbHRlckgAEkkKDHN0YXRlX2ZpbHRlchgGIAEoCzIxLnppdGFkZWwucmVzb3VyY2VzLnVzZXJzY2hlbWEudjNhbHBoYS5TdGF0ZUZpbHRlckgAEkMKCWlkX2ZpbHRlchgHIAEoCzIuLnppdGFkZWwucmVzb3VyY2VzLnVzZXJzY2hlbWEudjNhbHBoYS5JREZpbHRlckgAQg0KBkZpbHRlchID+EIBIv0BCghPckZpbHRlchLwAQoHcXVlcmllcxgBIAMoCzIyLnppdGFkZWwucmVzb3VyY2VzLnVzZXJzY2hlbWEudjNhbHBoYS5TZWFyY2hGaWx0ZXJCqgGSQaYBSqMBW3siaWRGaWx0ZXIiOiB7ImlkIjogIjE2Mzg0MDc3NjgzNTQzMjcwNSIsIm1ldGhvZCI6ICJURVhUX0ZJTFRFUl9NRVRIT0RfRVFVQUxTIn19LHsiaWRGaWx0ZXIiOiB7ImlkIjogIjE2Mzg0MDc3NjgzNTk0MzQ4MyIsIm1ldGhvZCI6ICJURVhUX0ZJTFRFUl9NRVRIT0RfRVFVQUxTIn19XSLUAQoJQW5kRmlsdGVyEsYBCgdxdWVyaWVzGAEgAygLMjIueml0YWRlbC5yZXNvdXJjZXMudXNlcnNjaGVtYS52M2FscGhhLlNlYXJjaEZpbHRlckKAAZJBfUp7W3sidHlwZUZpbHRlciI6IHsiaWQiOiAiZW1wbG95ZWVzIiwibWV0aG9kIjogIlRFWFRfRklMVEVSX01FVEhPRF9TVEFSVFNfV0lUSCJ9fSx7InN0YXRlRmlsdGVyIjogeyJzdGF0ZSI6ICJTVEFURV9BQ1RJVkUifX1dIoABCglOb3RGaWx0ZXIScwoGZmlsdGVyGAEgASgLMjIueml0YWRlbC5yZXNvdXJjZXMudXNlcnNjaGVtYS52M2FscGhhLlNlYXJjaEZpbHRlckIvkkEsSip7InN0YXRlRmlsdGVyIjogeyJzdGF0ZSI6ICJTVEFURV9BQ1RJVkUifX0ikwEKCElERmlsdGVyEjkKAmlkGAEgASgJQi2SQRxKFCIxNjM4NDA3NzY4MzU0MzI3MDUieMgBgAEB4kEBAvpCB3IFEAEYyAESTAoGbWV0aG9kGAIgASgOMjIueml0YWRlbC5yZXNvdXJjZXMub2JqZWN0LnYzYWxwaGEuVGV4dEZpbHRlck1ldGhvZEII+kIFggECEAEiiQEKClR5cGVGaWx0ZXISLQoEdHlwZRgBIAEoCUIfkkEQSgsiZW1wbG95ZWVzInjIAeJBAQL6QgVyAxjIARJMCgZtZXRob2QYAiABKA4yMi56aXRhZGVsLnJlc291cmNlcy5vYmplY3QudjNhbHBoYS5UZXh0RmlsdGVyTWV0aG9kQgj6QgWCAQIQASJqCgtTdGF0ZUZpbHRlchJbCgVzdGF0ZRgBIAEoDjIrLnppdGFkZWwucmVzb3VyY2VzLnVzZXJzY2hlbWEudjNhbHBoYS5TdGF0ZUIfkkEQSg4iU1RBVEVfQUNUSVZFIuJBAQL6QgWCAQIQASqlAQoJRmllbGROYW1lEhoKFkZJRUxEX05BTUVfVU5TUEVDSUZJRUQQABITCg9GSUVMRF9OQU1FX1RZUEUQARIUChBGSUVMRF9OQU1FX1NUQVRFEAISFwoTRklFTERfTkFNRV9SRVZJU0lPThADEhoKFkZJRUxEX05BTUVfQ0hBTkdFX0RBVEUQBBIcChhGSUVMRF9OQU1FX0NSRUFUSU9OX0RBVEUQBSpECgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEhAKDFNUQVRFX0FDVElWRRABEhIKDlNUQVRFX0lOQUNUSVZFEAIqzgIKEUF1dGhlbnRpY2F0b3JUeXBlEiIKHkFVVEhFTlRJQ0FUT1JfVFlQRV9VTlNQRUNJRklFRBAAEh8KG0FVVEhFTlRJQ0FUT1JfVFlQRV9VU0VSTkFNRRABEh8KG0FVVEhFTlRJQ0FUT1JfVFlQRV9QQVNTV09SRBACEh8KG0FVVEhFTlRJQ0FUT1JfVFlQRV9XRUJBVVRIThADEhsKF0FVVEhFTlRJQ0FUT1JfVFlQRV9UT1RQEAQSIAocQVVUSEVOVElDQVRPUl9UWVBFX09UUF9FTUFJTBAFEh4KGkFVVEhFTlRJQ0FUT1JfVFlQRV9PVFBfU01TEAYSKQolQVVUSEVOVElDQVRPUl9UWVBFX0FVVEhFTlRJQ0FUSU9OX0tFWRAHEigKJEFVVEhFTlRJQ0FUT1JfVFlQRV9JREVOVElUWV9QUk9WSURFUhAIQk1aS2dpdGh1Yi5jb20veml0YWRlbC96aXRhZGVsL3BrZy9ncnBjL3Jlc291cmNlcy91c2Vyc2NoZW1hL3YzYWxwaGE7dXNlcnNjaGVtYWIGcHJvdG8z", [file_google_api_field_behavior, file_google_protobuf_struct, file_validate_validate, file_protoc_gen_openapiv2_options_annotations, file_zitadel_resources_object_v3alpha_object]);

/**
 * @generated from message zitadel.resources.userschema.v3alpha.GetUserSchema
 */
export type GetUserSchema = Message<"zitadel.resources.userschema.v3alpha.GetUserSchema"> & {
  /**
   * Details provide some base information (such as the last change date) of the schema.
   *
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: zitadel.resources.userschema.v3alpha.UserSchema config = 2;
   */
  config?: UserSchema;

  /**
   * Current state of the schema.
   *
   * @generated from field: zitadel.resources.userschema.v3alpha.State state = 3;
   */
  state: State;

  /**
   * Revision is a read only version of the schema, each update of the `schema`-field increases the revision.
   *
   * @generated from field: uint32 revision = 4;
   */
  revision: number;
};

/**
 * Describes the message zitadel.resources.userschema.v3alpha.GetUserSchema.
 * Use `create(GetUserSchemaSchema)` to create a new message.
 */
export const GetUserSchemaSchema: GenMessage<GetUserSchema> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_userschema_v3alpha_user_schema, 0);

/**
 * @generated from message zitadel.resources.userschema.v3alpha.UserSchema
 */
export type UserSchema = Message<"zitadel.resources.userschema.v3alpha.UserSchema"> & {
  /**
   * Type is a human readable word describing the schema.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from oneof zitadel.resources.userschema.v3alpha.UserSchema.data_type
   */
  dataType: {
    /**
     * JSON schema representation defining the user.
     *
     * @generated from field: google.protobuf.Struct schema = 2;
     */
    value: JsonObject;
    case: "schema";
  } | { case: undefined; value?: undefined };

  /**
   * Defines the possible types of authenticators.
   *
   * @generated from field: repeated zitadel.resources.userschema.v3alpha.AuthenticatorType possible_authenticators = 3;
   */
  possibleAuthenticators: AuthenticatorType[];
};

/**
 * Describes the message zitadel.resources.userschema.v3alpha.UserSchema.
 * Use `create(UserSchemaSchema)` to create a new message.
 */
export const UserSchemaSchema: GenMessage<UserSchema> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_userschema_v3alpha_user_schema, 1);

/**
 * @generated from message zitadel.resources.userschema.v3alpha.PatchUserSchema
 */
export type PatchUserSchema = Message<"zitadel.resources.userschema.v3alpha.PatchUserSchema"> & {
  /**
   * Type is a human readable word describing the schema.
   *
   * @generated from field: optional string type = 2;
   */
  type?: string;

  /**
   * @generated from oneof zitadel.resources.userschema.v3alpha.PatchUserSchema.data_type
   */
  dataType: {
    /**
     * JSON schema representation defining the user.
     *
     * @generated from field: google.protobuf.Struct schema = 3;
     */
    value: JsonObject;
    case: "schema";
  } | { case: undefined; value?: undefined };

  /**
   * Defines the possible types of authenticators.
   *
   * Removal of an authenticator does not remove the authenticator on a user.
   *
   * @generated from field: repeated zitadel.resources.userschema.v3alpha.AuthenticatorType possible_authenticators = 4;
   */
  possibleAuthenticators: AuthenticatorType[];
};

/**
 * Describes the message zitadel.resources.userschema.v3alpha.PatchUserSchema.
 * Use `create(PatchUserSchemaSchema)` to create a new message.
 */
export const PatchUserSchemaSchema: GenMessage<PatchUserSchema> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_userschema_v3alpha_user_schema, 2);

/**
 * @generated from message zitadel.resources.userschema.v3alpha.SearchFilter
 */
export type SearchFilter = Message<"zitadel.resources.userschema.v3alpha.SearchFilter"> & {
  /**
   * @generated from oneof zitadel.resources.userschema.v3alpha.SearchFilter.Filter
   */
  Filter: {
    /**
     * Union the results of each sub filter ('OR').
     *
     * @generated from field: zitadel.resources.userschema.v3alpha.OrFilter or_filter = 1;
     */
    value: OrFilter;
    case: "orFilter";
  } | {
    /**
     * Limit the result to match all sub queries ('AND').
     * Note that if you specify multiple queries, they will be implicitly used as andQueries.
     * Use the andFilter in combination with orFilter and notFilter.
     *
     * @generated from field: zitadel.resources.userschema.v3alpha.AndFilter and_filter = 2;
     */
    value: AndFilter;
    case: "andFilter";
  } | {
    /**
     * Exclude / Negate the result of the sub filter ('NOT').
     *
     * @generated from field: zitadel.resources.userschema.v3alpha.NotFilter not_filter = 3;
     */
    value: NotFilter;
    case: "notFilter";
  } | {
    /**
     * Limit the result to a specific schema type.
     *
     * @generated from field: zitadel.resources.userschema.v3alpha.TypeFilter type_filter = 5;
     */
    value: TypeFilter;
    case: "typeFilter";
  } | {
    /**
     * Limit the result to a specific state of the schema.
     *
     * @generated from field: zitadel.resources.userschema.v3alpha.StateFilter state_filter = 6;
     */
    value: StateFilter;
    case: "stateFilter";
  } | {
    /**
     * Limit the result to a specific schema ID.
     *
     * @generated from field: zitadel.resources.userschema.v3alpha.IDFilter id_filter = 7;
     */
    value: IDFilter;
    case: "idFilter";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message zitadel.resources.userschema.v3alpha.SearchFilter.
 * Use `create(SearchFilterSchema)` to create a new message.
 */
export const SearchFilterSchema: GenMessage<SearchFilter> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_userschema_v3alpha_user_schema, 3);

/**
 * @generated from message zitadel.resources.userschema.v3alpha.OrFilter
 */
export type OrFilter = Message<"zitadel.resources.userschema.v3alpha.OrFilter"> & {
  /**
   * @generated from field: repeated zitadel.resources.userschema.v3alpha.SearchFilter queries = 1;
   */
  queries: SearchFilter[];
};

/**
 * Describes the message zitadel.resources.userschema.v3alpha.OrFilter.
 * Use `create(OrFilterSchema)` to create a new message.
 */
export const OrFilterSchema: GenMessage<OrFilter> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_userschema_v3alpha_user_schema, 4);

/**
 * @generated from message zitadel.resources.userschema.v3alpha.AndFilter
 */
export type AndFilter = Message<"zitadel.resources.userschema.v3alpha.AndFilter"> & {
  /**
   * @generated from field: repeated zitadel.resources.userschema.v3alpha.SearchFilter queries = 1;
   */
  queries: SearchFilter[];
};

/**
 * Describes the message zitadel.resources.userschema.v3alpha.AndFilter.
 * Use `create(AndFilterSchema)` to create a new message.
 */
export const AndFilterSchema: GenMessage<AndFilter> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_userschema_v3alpha_user_schema, 5);

/**
 * @generated from message zitadel.resources.userschema.v3alpha.NotFilter
 */
export type NotFilter = Message<"zitadel.resources.userschema.v3alpha.NotFilter"> & {
  /**
   * @generated from field: zitadel.resources.userschema.v3alpha.SearchFilter filter = 1;
   */
  filter?: SearchFilter;
};

/**
 * Describes the message zitadel.resources.userschema.v3alpha.NotFilter.
 * Use `create(NotFilterSchema)` to create a new message.
 */
export const NotFilterSchema: GenMessage<NotFilter> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_userschema_v3alpha_user_schema, 6);

/**
 * @generated from message zitadel.resources.userschema.v3alpha.IDFilter
 */
export type IDFilter = Message<"zitadel.resources.userschema.v3alpha.IDFilter"> & {
  /**
   * Defines the ID of the user schema to filter for.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Defines which text comparison method used for the id filter.
   *
   * @generated from field: zitadel.resources.object.v3alpha.TextFilterMethod method = 2;
   */
  method: TextFilterMethod;
};

/**
 * Describes the message zitadel.resources.userschema.v3alpha.IDFilter.
 * Use `create(IDFilterSchema)` to create a new message.
 */
export const IDFilterSchema: GenMessage<IDFilter> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_userschema_v3alpha_user_schema, 7);

/**
 * @generated from message zitadel.resources.userschema.v3alpha.TypeFilter
 */
export type TypeFilter = Message<"zitadel.resources.userschema.v3alpha.TypeFilter"> & {
  /**
   * Defines which type to filter for.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Defines which text comparison method used for the type filter.
   *
   * @generated from field: zitadel.resources.object.v3alpha.TextFilterMethod method = 2;
   */
  method: TextFilterMethod;
};

/**
 * Describes the message zitadel.resources.userschema.v3alpha.TypeFilter.
 * Use `create(TypeFilterSchema)` to create a new message.
 */
export const TypeFilterSchema: GenMessage<TypeFilter> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_userschema_v3alpha_user_schema, 8);

/**
 * @generated from message zitadel.resources.userschema.v3alpha.StateFilter
 */
export type StateFilter = Message<"zitadel.resources.userschema.v3alpha.StateFilter"> & {
  /**
   * Defines the state to filter for.
   *
   * @generated from field: zitadel.resources.userschema.v3alpha.State state = 1;
   */
  state: State;
};

/**
 * Describes the message zitadel.resources.userschema.v3alpha.StateFilter.
 * Use `create(StateFilterSchema)` to create a new message.
 */
export const StateFilterSchema: GenMessage<StateFilter> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_userschema_v3alpha_user_schema, 9);

/**
 * @generated from enum zitadel.resources.userschema.v3alpha.FieldName
 */
export enum FieldName {
  /**
   * @generated from enum value: FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FIELD_NAME_TYPE = 1;
   */
  TYPE = 1,

  /**
   * @generated from enum value: FIELD_NAME_STATE = 2;
   */
  STATE = 2,

  /**
   * @generated from enum value: FIELD_NAME_REVISION = 3;
   */
  REVISION = 3,

  /**
   * @generated from enum value: FIELD_NAME_CHANGE_DATE = 4;
   */
  CHANGE_DATE = 4,

  /**
   * @generated from enum value: FIELD_NAME_CREATION_DATE = 5;
   */
  CREATION_DATE = 5,
}

/**
 * Describes the enum zitadel.resources.userschema.v3alpha.FieldName.
 */
export const FieldNameSchema: GenEnum<FieldName> = /*@__PURE__*/
  enumDesc(file_zitadel_resources_userschema_v3alpha_user_schema, 0);

/**
 * @generated from enum zitadel.resources.userschema.v3alpha.State
 */
export enum State {
  /**
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: STATE_INACTIVE = 2;
   */
  INACTIVE = 2,
}

/**
 * Describes the enum zitadel.resources.userschema.v3alpha.State.
 */
export const StateSchema: GenEnum<State> = /*@__PURE__*/
  enumDesc(file_zitadel_resources_userschema_v3alpha_user_schema, 1);

/**
 * @generated from enum zitadel.resources.userschema.v3alpha.AuthenticatorType
 */
export enum AuthenticatorType {
  /**
   * @generated from enum value: AUTHENTICATOR_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: AUTHENTICATOR_TYPE_USERNAME = 1;
   */
  USERNAME = 1,

  /**
   * @generated from enum value: AUTHENTICATOR_TYPE_PASSWORD = 2;
   */
  PASSWORD = 2,

  /**
   * @generated from enum value: AUTHENTICATOR_TYPE_WEBAUTHN = 3;
   */
  WEBAUTHN = 3,

  /**
   * @generated from enum value: AUTHENTICATOR_TYPE_TOTP = 4;
   */
  TOTP = 4,

  /**
   * @generated from enum value: AUTHENTICATOR_TYPE_OTP_EMAIL = 5;
   */
  OTP_EMAIL = 5,

  /**
   * @generated from enum value: AUTHENTICATOR_TYPE_OTP_SMS = 6;
   */
  OTP_SMS = 6,

  /**
   * @generated from enum value: AUTHENTICATOR_TYPE_AUTHENTICATION_KEY = 7;
   */
  AUTHENTICATION_KEY = 7,

  /**
   * @generated from enum value: AUTHENTICATOR_TYPE_IDENTITY_PROVIDER = 8;
   */
  IDENTITY_PROVIDER = 8,
}

/**
 * Describes the enum zitadel.resources.userschema.v3alpha.AuthenticatorType.
 */
export const AuthenticatorTypeSchema: GenEnum<AuthenticatorType> = /*@__PURE__*/
  enumDesc(file_zitadel_resources_userschema_v3alpha_user_schema, 2);

