// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file zitadel/resources/user/v3alpha/authenticator.proto (package zitadel.resources.user.v3alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../../google/api/field_behavior_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../../protoc-gen-openapiv2/options/annotations_pb";
import { file_validate_validate } from "../../../../validate/validate_pb";
import type { Details } from "../../object/v3alpha/object_pb";
import { file_zitadel_resources_object_v3alpha_object } from "../../object/v3alpha/object_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file zitadel/resources/user/v3alpha/authenticator.proto.
 */
export const file_zitadel_resources_user_v3alpha_authenticator: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_field_behavior, file_google_protobuf_struct, file_google_protobuf_timestamp, file_protoc_gen_openapiv2_options_annotations, file_validate_validate, file_zitadel_resources_object_v3alpha_object]);

/**
 * @generated from message zitadel.resources.user.v3alpha.Authenticators
 */
export type Authenticators = Message<"zitadel.resources.user.v3alpha.Authenticators"> & {
  /**
   * All of the user's usernames, which will be used for identification during authentication.
   *
   * @generated from field: repeated zitadel.resources.user.v3alpha.Username usernames = 1;
   */
  usernames: Username[];

  /**
   * If the user has set a password, the time it was last changed will be returned.
   *
   * @generated from field: zitadel.resources.user.v3alpha.Password password = 2;
   */
  password?: Password;

  /**
   * Meta information about the user's WebAuthN authenticators.
   *
   * @generated from field: repeated zitadel.resources.user.v3alpha.WebAuthN web_auth_n = 3;
   */
  webAuthN: WebAuthN[];

  /**
   * A list of the user's time-based one-time-password (TOTP) authenticators,
   * incl. the name for identification.
   *
   * @generated from field: repeated zitadel.resources.user.v3alpha.TOTP totps = 4;
   */
  totps: TOTP[];

  /**
   * A list of the user's one-time-password (OTP) SMS authenticators.
   *
   * @generated from field: repeated zitadel.resources.user.v3alpha.OTPSMS otp_sms = 5;
   */
  otpSms: OTPSMS[];

  /**
   * A list of the user's one-time-password (OTP) Email authenticators.
   *
   * @generated from field: repeated zitadel.resources.user.v3alpha.OTPEmail otp_email = 6;
   */
  otpEmail: OTPEmail[];

  /**
   * A list of the user's authentication keys. They can be used to authenticate e.g. by JWT Profile.
   *
   * @generated from field: repeated zitadel.resources.user.v3alpha.AuthenticationKey authentication_keys = 7;
   */
  authenticationKeys: AuthenticationKey[];

  /**
   * A list of the user's linked identity providers (IDPs).
   *
   * @generated from field: repeated zitadel.resources.user.v3alpha.IdentityProvider identity_providers = 8;
   */
  identityProviders: IdentityProvider[];
};

/**
 * Describes the message zitadel.resources.user.v3alpha.Authenticators.
 * Use `create(AuthenticatorsSchema)` to create a new message.
 */
export const AuthenticatorsSchema: GenMessage<Authenticators> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 0);

/**
 * @generated from message zitadel.resources.user.v3alpha.Username
 */
export type Username = Message<"zitadel.resources.user.v3alpha.Username"> & {
  /**
   * unique identifier of the username.
   *
   * @generated from field: string username_id = 1;
   */
  usernameId: string;

  /**
   * The user's unique username. It is used for identification during authentication.
   *
   * @generated from field: string username = 2;
   */
  username: string;

  /**
   * By default usernames must be unique across all organizations in an instance.
   * This option allow to restrict the uniqueness to the user's own organization.
   * As a result, this username can only be used if the authentication is limited
   * to the corresponding organization.
   *
   * This can be useful if you provide multiple usernames for a single user, where one
   * if specific to your organization, e.g.:
   * - gigi-giraffe@zitadel.com (unique across organizations)
   * - gigi-giraffe (unique only inside the ZITADEL organization)
   *
   * @generated from field: bool is_organization_specific = 3;
   */
  isOrganizationSpecific: boolean;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.Username.
 * Use `create(UsernameSchema)` to create a new message.
 */
export const UsernameSchema: GenMessage<Username> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 1);

/**
 * @generated from message zitadel.resources.user.v3alpha.SetUsername
 */
export type SetUsername = Message<"zitadel.resources.user.v3alpha.SetUsername"> & {
  /**
   * Set the user's username. This will be used for identification during authentication.
   *
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * By default username must be unique across all organizations in an instance.
   * This option allow to restrict the uniqueness to the user's own organization.
   * As a result, this username can only be used if the authentication is limited
   * to the corresponding organization.
   *
   * This can be useful if you provide multiple usernames for a single user, where one
   * if specific to your organization, e.g.:
   * - gigi-giraffe@zitadel.com (unique across organizations)
   * - gigi-giraffe (unique only inside the ZITADEL organization)
   *
   * @generated from field: bool is_organization_specific = 2;
   */
  isOrganizationSpecific: boolean;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.SetUsername.
 * Use `create(SetUsernameSchema)` to create a new message.
 */
export const SetUsernameSchema: GenMessage<SetUsername> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 2);

/**
 * @generated from message zitadel.resources.user.v3alpha.Password
 */
export type Password = Message<"zitadel.resources.user.v3alpha.Password"> & {
  /**
   * States the time the password was last changed.
   *
   * @generated from field: google.protobuf.Timestamp last_changed = 1;
   */
  lastChanged?: Timestamp;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.Password.
 * Use `create(PasswordSchema)` to create a new message.
 */
export const PasswordSchema: GenMessage<Password> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 3);

/**
 * @generated from message zitadel.resources.user.v3alpha.WebAuthN
 */
export type WebAuthN = Message<"zitadel.resources.user.v3alpha.WebAuthN"> & {
  /**
   * unique identifier of the WebAuthN authenticator.
   *
   * @generated from field: string web_auth_n_id = 1;
   */
  webAuthNId: string;

  /**
   * Name of the WebAuthN authenticator. This is used for easier identification.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * State whether the WebAuthN registration has been completed.
   *
   * @generated from field: bool is_verified = 3;
   */
  isVerified: boolean;

  /**
   * States if the user has been verified during the registration. Authentication with this device
   * will be considered as multi factor authentication (MFA) without the need to check a password
   * (typically known as Passkeys).
   * Without user verification it will be a second factor authentication (2FA), typically done
   * after a password check.
   *
   * More on WebAuthN User Verification: https://www.w3.org/TR/webauthn/#user-verification
   *
   * @generated from field: bool user_verified = 4;
   */
  userVerified: boolean;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.WebAuthN.
 * Use `create(WebAuthNSchema)` to create a new message.
 */
export const WebAuthNSchema: GenMessage<WebAuthN> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 4);

/**
 * @generated from message zitadel.resources.user.v3alpha.StartWebAuthNRegistration
 */
export type StartWebAuthNRegistration = Message<"zitadel.resources.user.v3alpha.StartWebAuthNRegistration"> & {
  /**
   * Domain on which the user currently is or will be authenticated.
   *
   * @generated from field: string domain = 1;
   */
  domain: string;

  /**
   * Optionally specify the authenticator type of the passkey device (platform or cross-platform).
   * If none is provided, both values are allowed.
   *
   * @generated from field: zitadel.resources.user.v3alpha.WebAuthNAuthenticatorType authenticator_type = 2;
   */
  authenticatorType: WebAuthNAuthenticatorType;

  /**
   * Optionally provide a one time code generated by ZITADEL.
   * This is required to start the passkey registration without user authentication.
   *
   * @generated from field: optional zitadel.resources.user.v3alpha.AuthenticatorRegistrationCode code = 3;
   */
  code?: AuthenticatorRegistrationCode;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.StartWebAuthNRegistration.
 * Use `create(StartWebAuthNRegistrationSchema)` to create a new message.
 */
export const StartWebAuthNRegistrationSchema: GenMessage<StartWebAuthNRegistration> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 5);

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyWebAuthNRegistration
 */
export type VerifyWebAuthNRegistration = Message<"zitadel.resources.user.v3alpha.VerifyWebAuthNRegistration"> & {
  /**
   * PublicKeyCredential Interface.
   * Generated helper methods populate the field from JSON created by a WebAuthN client.
   * See also:  https://www.w3.org/TR/webauthn/#publickeycredential
   *
   * @generated from field: google.protobuf.Struct public_key_credential = 1;
   */
  publicKeyCredential?: JsonObject;

  /**
   * Provide a name for the WebAuthN device. This will help identify it in the future.
   *
   * @generated from field: string web_auth_n_name = 2;
   */
  webAuthNName: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyWebAuthNRegistration.
 * Use `create(VerifyWebAuthNRegistrationSchema)` to create a new message.
 */
export const VerifyWebAuthNRegistrationSchema: GenMessage<VerifyWebAuthNRegistration> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 6);

/**
 * @generated from message zitadel.resources.user.v3alpha.OTPSMS
 */
export type OTPSMS = Message<"zitadel.resources.user.v3alpha.OTPSMS"> & {
  /**
   * unique identifier of the one-time-password (OTP) SMS authenticator.
   *
   * @generated from field: string otp_sms_id = 1;
   */
  otpSmsId: string;

  /**
   * The phone number used for the OTP SMS authenticator.
   *
   * @generated from field: string phone = 2;
   */
  phone: string;

  /**
   * State whether the OTP SMS registration has been completed.
   *
   * @generated from field: bool is_verified = 3;
   */
  isVerified: boolean;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.OTPSMS.
 * Use `create(OTPSMSSchema)` to create a new message.
 */
export const OTPSMSSchema: GenMessage<OTPSMS> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 7);

/**
 * @generated from message zitadel.resources.user.v3alpha.OTPEmail
 */
export type OTPEmail = Message<"zitadel.resources.user.v3alpha.OTPEmail"> & {
  /**
   * unique identifier of the one-time-password (OTP) Email authenticator.
   *
   * @generated from field: string otp_email_id = 1;
   */
  otpEmailId: string;

  /**
   * The email address used for the OTP Email authenticator.
   *
   * @generated from field: string address = 2;
   */
  address: string;

  /**
   * State whether the OTP Email registration has been completed.
   *
   * @generated from field: bool is_verified = 3;
   */
  isVerified: boolean;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.OTPEmail.
 * Use `create(OTPEmailSchema)` to create a new message.
 */
export const OTPEmailSchema: GenMessage<OTPEmail> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 8);

/**
 * @generated from message zitadel.resources.user.v3alpha.TOTP
 */
export type TOTP = Message<"zitadel.resources.user.v3alpha.TOTP"> & {
  /**
   * unique identifier of the time-based one-time-password (TOTP) authenticator.
   *
   * @generated from field: string totp_id = 1;
   */
  totpId: string;

  /**
   * The name provided during registration. This is used for easier identification.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * State whether the TOTP registration has been completed.
   *
   * @generated from field: bool is_verified = 3;
   */
  isVerified: boolean;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.TOTP.
 * Use `create(TOTPSchema)` to create a new message.
 */
export const TOTPSchema: GenMessage<TOTP> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 9);

/**
 * @generated from message zitadel.resources.user.v3alpha.AuthenticationKey
 */
export type AuthenticationKey = Message<"zitadel.resources.user.v3alpha.AuthenticationKey"> & {
  /**
   * ID is the read-only unique identifier of the authentication key.
   *
   * @generated from field: string authentication_key_id = 1;
   */
  authenticationKeyId: string;

  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 2;
   */
  details?: Details;

  /**
   * the file type of the key
   *
   * @generated from field: zitadel.resources.user.v3alpha.AuthNKeyType type = 3;
   */
  type: AuthNKeyType;

  /**
   * After the expiration date, the key will no longer be usable for authentication.
   *
   * @generated from field: google.protobuf.Timestamp expiration_date = 4;
   */
  expirationDate?: Timestamp;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.AuthenticationKey.
 * Use `create(AuthenticationKeySchema)` to create a new message.
 */
export const AuthenticationKeySchema: GenMessage<AuthenticationKey> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 10);

/**
 * @generated from message zitadel.resources.user.v3alpha.IdentityProvider
 */
export type IdentityProvider = Message<"zitadel.resources.user.v3alpha.IdentityProvider"> & {
  /**
   * IDP ID is the read-only unique identifier of the identity provider in ZITADEL.
   *
   * @generated from field: string idp_id = 1;
   */
  idpId: string;

  /**
   * IDP name is the name of the identity provider in ZITADEL.
   *
   * @generated from field: string idp_name = 3;
   */
  idpName: string;

  /**
   * The user ID represents the ID provided by the identity provider.
   * This ID is used to link the user in ZITADEL with the identity provider.
   *
   * @generated from field: string user_id = 4;
   */
  userId: string;

  /**
   * The username represents the username provided by the identity provider.
   *
   * @generated from field: string username = 5;
   */
  username: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.IdentityProvider.
 * Use `create(IdentityProviderSchema)` to create a new message.
 */
export const IdentityProviderSchema: GenMessage<IdentityProvider> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 11);

/**
 * @generated from message zitadel.resources.user.v3alpha.SetAuthenticators
 */
export type SetAuthenticators = Message<"zitadel.resources.user.v3alpha.SetAuthenticators"> & {
  /**
   * @generated from field: repeated zitadel.resources.user.v3alpha.SetUsername usernames = 1;
   */
  usernames: SetUsername[];

  /**
   * @generated from field: zitadel.resources.user.v3alpha.SetPassword password = 2;
   */
  password?: SetPassword;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.SetAuthenticators.
 * Use `create(SetAuthenticatorsSchema)` to create a new message.
 */
export const SetAuthenticatorsSchema: GenMessage<SetAuthenticators> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 12);

/**
 * @generated from message zitadel.resources.user.v3alpha.SetPassword
 */
export type SetPassword = Message<"zitadel.resources.user.v3alpha.SetPassword"> & {
  /**
   * @generated from oneof zitadel.resources.user.v3alpha.SetPassword.type
   */
  type: {
    /**
     * Provide the plain text password. ZITADEL will take care to store it in a secure way (hash).
     *
     * @generated from field: string password = 1;
     */
    value: string;
    case: "password";
  } | {
    /**
     * Encoded hash of a password in Modular Crypt Format:
     * https://zitadel.com/docs/concepts/architecture/secrets#hashed-secrets.
     *
     * @generated from field: string hash = 2;
     */
    value: string;
    case: "hash";
  } | { case: undefined; value?: undefined };

  /**
   * Provide if the user needs to change the password on the next use.
   *
   * @generated from field: bool change_required = 3;
   */
  changeRequired: boolean;

  /**
   * If neither, the current password nor a verification code generated by the PasswordReset is provided,
   * the user must be granted permission to set a password.
   *
   * @generated from oneof zitadel.resources.user.v3alpha.SetPassword.verification
   */
  verification: {
    /**
     * Provide the current password to verify you're allowed to change the password.
     *
     * @generated from field: string current_password = 4;
     */
    value: string;
    case: "currentPassword";
  } | {
    /**
     * Or provider the verification code generated during password reset request.
     *
     * @generated from field: string verification_code = 5;
     */
    value: string;
    case: "verificationCode";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message zitadel.resources.user.v3alpha.SetPassword.
 * Use `create(SetPasswordSchema)` to create a new message.
 */
export const SetPasswordSchema: GenMessage<SetPassword> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 13);

/**
 * @generated from message zitadel.resources.user.v3alpha.SendPasswordResetEmail
 */
export type SendPasswordResetEmail = Message<"zitadel.resources.user.v3alpha.SendPasswordResetEmail"> & {
  /**
   * Optionally set a url_template, which will be used in the password reset mail
   * sent by ZITADEL to guide the user to your password change page.
   * If no template is set, the default ZITADEL url will be used.
   *
   * @generated from field: optional string url_template = 2;
   */
  urlTemplate?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.SendPasswordResetEmail.
 * Use `create(SendPasswordResetEmailSchema)` to create a new message.
 */
export const SendPasswordResetEmailSchema: GenMessage<SendPasswordResetEmail> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 14);

/**
 * @generated from message zitadel.resources.user.v3alpha.SendPasswordResetSMS
 */
export type SendPasswordResetSMS = Message<"zitadel.resources.user.v3alpha.SendPasswordResetSMS"> & {
};

/**
 * Describes the message zitadel.resources.user.v3alpha.SendPasswordResetSMS.
 * Use `create(SendPasswordResetSMSSchema)` to create a new message.
 */
export const SendPasswordResetSMSSchema: GenMessage<SendPasswordResetSMS> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 15);

/**
 * @generated from message zitadel.resources.user.v3alpha.ReturnPasswordResetCode
 */
export type ReturnPasswordResetCode = Message<"zitadel.resources.user.v3alpha.ReturnPasswordResetCode"> & {
};

/**
 * Describes the message zitadel.resources.user.v3alpha.ReturnPasswordResetCode.
 * Use `create(ReturnPasswordResetCodeSchema)` to create a new message.
 */
export const ReturnPasswordResetCodeSchema: GenMessage<ReturnPasswordResetCode> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 16);

/**
 * @generated from message zitadel.resources.user.v3alpha.AuthenticatorRegistrationCode
 */
export type AuthenticatorRegistrationCode = Message<"zitadel.resources.user.v3alpha.AuthenticatorRegistrationCode"> & {
  /**
   * ID to the one time code generated by ZITADEL.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * one time code generated by ZITADEL.
   *
   * @generated from field: string code = 2;
   */
  code: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.AuthenticatorRegistrationCode.
 * Use `create(AuthenticatorRegistrationCodeSchema)` to create a new message.
 */
export const AuthenticatorRegistrationCodeSchema: GenMessage<AuthenticatorRegistrationCode> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 17);

/**
 * @generated from message zitadel.resources.user.v3alpha.SendWebAuthNRegistrationLink
 */
export type SendWebAuthNRegistrationLink = Message<"zitadel.resources.user.v3alpha.SendWebAuthNRegistrationLink"> & {
  /**
   * Optionally set a url_template, which will be used in the mail sent by ZITADEL
   * to guide the user to your passkey registration page.
   * If no template is set, the default ZITADEL url will be used.
   *
   * @generated from field: optional string url_template = 1;
   */
  urlTemplate?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.SendWebAuthNRegistrationLink.
 * Use `create(SendWebAuthNRegistrationLinkSchema)` to create a new message.
 */
export const SendWebAuthNRegistrationLinkSchema: GenMessage<SendWebAuthNRegistrationLink> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 18);

/**
 * @generated from message zitadel.resources.user.v3alpha.ReturnWebAuthNRegistrationCode
 */
export type ReturnWebAuthNRegistrationCode = Message<"zitadel.resources.user.v3alpha.ReturnWebAuthNRegistrationCode"> & {
};

/**
 * Describes the message zitadel.resources.user.v3alpha.ReturnWebAuthNRegistrationCode.
 * Use `create(ReturnWebAuthNRegistrationCodeSchema)` to create a new message.
 */
export const ReturnWebAuthNRegistrationCodeSchema: GenMessage<ReturnWebAuthNRegistrationCode> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 19);

/**
 * @generated from message zitadel.resources.user.v3alpha.RedirectURLs
 */
export type RedirectURLs = Message<"zitadel.resources.user.v3alpha.RedirectURLs"> & {
  /**
   * URL to which the user will be redirected after a successful login.
   *
   * @generated from field: string success_url = 1;
   */
  successUrl: string;

  /**
   * URL to which the user will be redirected after a failed login.
   *
   * @generated from field: string failure_url = 2;
   */
  failureUrl: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.RedirectURLs.
 * Use `create(RedirectURLsSchema)` to create a new message.
 */
export const RedirectURLsSchema: GenMessage<RedirectURLs> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 20);

/**
 * @generated from message zitadel.resources.user.v3alpha.LDAPCredentials
 */
export type LDAPCredentials = Message<"zitadel.resources.user.v3alpha.LDAPCredentials"> & {
  /**
   * Username used to login through LDAP.
   *
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * Password used to login through LDAP.
   *
   * @generated from field: string password = 2;
   */
  password: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.LDAPCredentials.
 * Use `create(LDAPCredentialsSchema)` to create a new message.
 */
export const LDAPCredentialsSchema: GenMessage<LDAPCredentials> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 21);

/**
 * @generated from message zitadel.resources.user.v3alpha.IdentityProviderIntent
 */
export type IdentityProviderIntent = Message<"zitadel.resources.user.v3alpha.IdentityProviderIntent"> & {
  /**
   * ID of the identity provider (IDP) intent.
   *
   * @generated from field: string idp_intent_id = 1;
   */
  idpIntentId: string;

  /**
   * Token of the identity provider (IDP) intent.
   *
   * @generated from field: string idp_intent_token = 2;
   */
  idpIntentToken: string;

  /**
   * If the user was already federated and linked to a ZITADEL user, it's id will be returned.
   *
   * @generated from field: optional string user_id = 3;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.IdentityProviderIntent.
 * Use `create(IdentityProviderIntentSchema)` to create a new message.
 */
export const IdentityProviderIntentSchema: GenMessage<IdentityProviderIntent> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 22);

/**
 * @generated from message zitadel.resources.user.v3alpha.IDPInformation
 */
export type IDPInformation = Message<"zitadel.resources.user.v3alpha.IDPInformation"> & {
  /**
   * ID of the identity provider.
   *
   * @generated from field: string idp_id = 1;
   */
  idpId: string;

  /**
   * ID of the user provided by the identity provider.
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * Username of the user provided by the identity provider.
   *
   * @generated from field: string user_name = 3;
   */
  userName: string;

  /**
   * Complete information returned by the identity provider.
   *
   * @generated from field: google.protobuf.Struct raw_information = 4;
   */
  rawInformation?: JsonObject;

  /**
   * additional access information returned by the identity provider.
   *
   * @generated from oneof zitadel.resources.user.v3alpha.IDPInformation.access
   */
  access: {
    /**
     * OAuth/OIDC access (and id_token) returned by the identity provider.
     *
     * @generated from field: zitadel.resources.user.v3alpha.IDPOAuthAccessInformation oauth = 5;
     */
    value: IDPOAuthAccessInformation;
    case: "oauth";
  } | {
    /**
     * LDAP entity attributes returned by the identity provider
     *
     * @generated from field: zitadel.resources.user.v3alpha.IDPLDAPAccessInformation ldap = 6;
     */
    value: IDPLDAPAccessInformation;
    case: "ldap";
  } | {
    /**
     * SAMLResponse returned by the identity provider
     *
     * @generated from field: zitadel.resources.user.v3alpha.IDPSAMLAccessInformation saml = 7;
     */
    value: IDPSAMLAccessInformation;
    case: "saml";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message zitadel.resources.user.v3alpha.IDPInformation.
 * Use `create(IDPInformationSchema)` to create a new message.
 */
export const IDPInformationSchema: GenMessage<IDPInformation> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 23);

/**
 * @generated from message zitadel.resources.user.v3alpha.IDPOAuthAccessInformation
 */
export type IDPOAuthAccessInformation = Message<"zitadel.resources.user.v3alpha.IDPOAuthAccessInformation"> & {
  /**
   * The access_token returned by the identity provider.
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * In case the provider returned an id_token.
   *
   * @generated from field: optional string id_token = 2;
   */
  idToken?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.IDPOAuthAccessInformation.
 * Use `create(IDPOAuthAccessInformationSchema)` to create a new message.
 */
export const IDPOAuthAccessInformationSchema: GenMessage<IDPOAuthAccessInformation> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 24);

/**
 * @generated from message zitadel.resources.user.v3alpha.IDPLDAPAccessInformation
 */
export type IDPLDAPAccessInformation = Message<"zitadel.resources.user.v3alpha.IDPLDAPAccessInformation"> & {
  /**
   * The attributes of the user returned by the identity provider.
   *
   * @generated from field: google.protobuf.Struct attributes = 1;
   */
  attributes?: JsonObject;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.IDPLDAPAccessInformation.
 * Use `create(IDPLDAPAccessInformationSchema)` to create a new message.
 */
export const IDPLDAPAccessInformationSchema: GenMessage<IDPLDAPAccessInformation> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 25);

/**
 * @generated from message zitadel.resources.user.v3alpha.IDPSAMLAccessInformation
 */
export type IDPSAMLAccessInformation = Message<"zitadel.resources.user.v3alpha.IDPSAMLAccessInformation"> & {
  /**
   * The SAML assertion returned by the identity provider.
   *
   * @generated from field: bytes assertion = 1;
   */
  assertion: Uint8Array;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.IDPSAMLAccessInformation.
 * Use `create(IDPSAMLAccessInformationSchema)` to create a new message.
 */
export const IDPSAMLAccessInformationSchema: GenMessage<IDPSAMLAccessInformation> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 26);

/**
 * @generated from message zitadel.resources.user.v3alpha.IDPAuthenticator
 */
export type IDPAuthenticator = Message<"zitadel.resources.user.v3alpha.IDPAuthenticator"> & {
  /**
   * ID of the identity provider
   *
   * @generated from field: string idp_id = 1;
   */
  idpId: string;

  /**
   * ID of the user provided by the identity provider
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * Username of the user provided by the identity provider.
   *
   * @generated from field: string user_name = 3;
   */
  userName: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.IDPAuthenticator.
 * Use `create(IDPAuthenticatorSchema)` to create a new message.
 */
export const IDPAuthenticatorSchema: GenMessage<IDPAuthenticator> = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 27);

/**
 * @generated from enum zitadel.resources.user.v3alpha.AuthNKeyType
 */
export enum AuthNKeyType {
  /**
   * @generated from enum value: AUTHN_KEY_TYPE_UNSPECIFIED = 0;
   */
  AUTHN_KEY_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: AUTHN_KEY_TYPE_JSON = 1;
   */
  AUTHN_KEY_TYPE_JSON = 1,
}

/**
 * Describes the enum zitadel.resources.user.v3alpha.AuthNKeyType.
 */
export const AuthNKeyTypeSchema: GenEnum<AuthNKeyType> = /*@__PURE__*/
  enumDesc(file_zitadel_resources_user_v3alpha_authenticator, 0);

/**
 * @generated from enum zitadel.resources.user.v3alpha.WebAuthNAuthenticatorType
 */
export enum WebAuthNAuthenticatorType {
  /**
   * @generated from enum value: WEB_AUTH_N_AUTHENTICATOR_UNSPECIFIED = 0;
   */
  WEB_AUTH_N_AUTHENTICATOR_UNSPECIFIED = 0,

  /**
   * @generated from enum value: WEB_AUTH_N_AUTHENTICATOR_PLATFORM = 1;
   */
  WEB_AUTH_N_AUTHENTICATOR_PLATFORM = 1,

  /**
   * @generated from enum value: WEB_AUTH_N_AUTHENTICATOR_CROSS_PLATFORM = 2;
   */
  WEB_AUTH_N_AUTHENTICATOR_CROSS_PLATFORM = 2,
}

/**
 * Describes the enum zitadel.resources.user.v3alpha.WebAuthNAuthenticatorType.
 */
export const WebAuthNAuthenticatorTypeSchema: GenEnum<WebAuthNAuthenticatorType> = /*@__PURE__*/
  enumDesc(file_zitadel_resources_user_v3alpha_authenticator, 1);

