// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file zitadel/user.proto (package zitadel.user.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { ObjectDetails, TextQueryMethod } from "./object_pb";
import { file_zitadel_object } from "./object_pb";
import { file_validate_validate } from "../validate/validate_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../protoc-gen-openapiv2/options/annotations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file zitadel/user.proto.
 */
export const file_zitadel_user: GenFile = /*@__PURE__*/
  fileDesc("", [file_zitadel_object, file_validate_validate, file_google_protobuf_timestamp, file_protoc_gen_openapiv2_options_annotations]);

/**
 * @generated from message zitadel.user.v1.User
 */
export type User = Message<"zitadel.user.v1.User"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.user.v1.UserState state = 3;
   */
  state: UserState;

  /**
   * @generated from field: string user_name = 4;
   */
  userName: string;

  /**
   * @generated from field: repeated string login_names = 5;
   */
  loginNames: string[];

  /**
   * @generated from field: string preferred_login_name = 6;
   */
  preferredLoginName: string;

  /**
   * @generated from oneof zitadel.user.v1.User.type
   */
  type: {
    /**
     * @generated from field: zitadel.user.v1.Human human = 7;
     */
    value: Human;
    case: "human";
  } | {
    /**
     * @generated from field: zitadel.user.v1.Machine machine = 8;
     */
    value: Machine;
    case: "machine";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message zitadel.user.v1.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema: GenMessage<User> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 0);

/**
 * @generated from message zitadel.user.v1.Human
 */
export type Human = Message<"zitadel.user.v1.Human"> & {
  /**
   * @generated from field: zitadel.user.v1.Profile profile = 1;
   */
  profile?: Profile;

  /**
   * @generated from field: zitadel.user.v1.Email email = 2;
   */
  email?: Email;

  /**
   * @generated from field: zitadel.user.v1.Phone phone = 3;
   */
  phone?: Phone;

  /**
   * The time the user last changed their password.
   *
   * @generated from field: google.protobuf.Timestamp password_changed = 4;
   */
  passwordChanged?: Timestamp;
};

/**
 * Describes the message zitadel.user.v1.Human.
 * Use `create(HumanSchema)` to create a new message.
 */
export const HumanSchema: GenMessage<Human> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 1);

/**
 * @generated from message zitadel.user.v1.Machine
 */
export type Machine = Message<"zitadel.user.v1.Machine"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: bool has_secret = 3;
   */
  hasSecret: boolean;

  /**
   * @generated from field: zitadel.user.v1.AccessTokenType access_token_type = 4;
   */
  accessTokenType: AccessTokenType;
};

/**
 * Describes the message zitadel.user.v1.Machine.
 * Use `create(MachineSchema)` to create a new message.
 */
export const MachineSchema: GenMessage<Machine> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 2);

/**
 * @generated from message zitadel.user.v1.Profile
 */
export type Profile = Message<"zitadel.user.v1.Profile"> & {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 2;
   */
  lastName: string;

  /**
   * @generated from field: string nick_name = 3;
   */
  nickName: string;

  /**
   * @generated from field: string display_name = 4;
   */
  displayName: string;

  /**
   * @generated from field: string preferred_language = 5;
   */
  preferredLanguage: string;

  /**
   * @generated from field: zitadel.user.v1.Gender gender = 6;
   */
  gender: Gender;

  /**
   * @generated from field: string avatar_url = 7;
   */
  avatarUrl: string;
};

/**
 * Describes the message zitadel.user.v1.Profile.
 * Use `create(ProfileSchema)` to create a new message.
 */
export const ProfileSchema: GenMessage<Profile> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 3);

/**
 * @generated from message zitadel.user.v1.Email
 */
export type Email = Message<"zitadel.user.v1.Email"> & {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: bool is_email_verified = 2;
   */
  isEmailVerified: boolean;
};

/**
 * Describes the message zitadel.user.v1.Email.
 * Use `create(EmailSchema)` to create a new message.
 */
export const EmailSchema: GenMessage<Email> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 4);

/**
 * @generated from message zitadel.user.v1.Phone
 */
export type Phone = Message<"zitadel.user.v1.Phone"> & {
  /**
   * @generated from field: string phone = 1;
   */
  phone: string;

  /**
   * @generated from field: bool is_phone_verified = 2;
   */
  isPhoneVerified: boolean;
};

/**
 * Describes the message zitadel.user.v1.Phone.
 * Use `create(PhoneSchema)` to create a new message.
 */
export const PhoneSchema: GenMessage<Phone> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 5);

/**
 * @generated from message zitadel.user.v1.SearchQuery
 */
export type SearchQuery = Message<"zitadel.user.v1.SearchQuery"> & {
  /**
   * @generated from oneof zitadel.user.v1.SearchQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.user.v1.UserNameQuery user_name_query = 1;
     */
    value: UserNameQuery;
    case: "userNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.FirstNameQuery first_name_query = 2;
     */
    value: FirstNameQuery;
    case: "firstNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.LastNameQuery last_name_query = 3;
     */
    value: LastNameQuery;
    case: "lastNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.NickNameQuery nick_name_query = 4;
     */
    value: NickNameQuery;
    case: "nickNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.DisplayNameQuery display_name_query = 5;
     */
    value: DisplayNameQuery;
    case: "displayNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.EmailQuery email_query = 6;
     */
    value: EmailQuery;
    case: "emailQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.StateQuery state_query = 7;
     */
    value: StateQuery;
    case: "stateQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.TypeQuery type_query = 8;
     */
    value: TypeQuery;
    case: "typeQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.LoginNameQuery login_name_query = 9;
     */
    value: LoginNameQuery;
    case: "loginNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.InUserIDQuery in_user_ids_query = 10;
     */
    value: InUserIDQuery;
    case: "inUserIdsQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.OrQuery or_query = 11;
     */
    value: OrQuery;
    case: "orQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.AndQuery and_query = 12;
     */
    value: AndQuery;
    case: "andQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.NotQuery not_query = 13;
     */
    value: NotQuery;
    case: "notQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.InUserEmailsQuery in_user_emails_query = 14;
     */
    value: InUserEmailsQuery;
    case: "inUserEmailsQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message zitadel.user.v1.SearchQuery.
 * Use `create(SearchQuerySchema)` to create a new message.
 */
export const SearchQuerySchema: GenMessage<SearchQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 6);

/**
 * @generated from message zitadel.user.v1.OrQuery
 */
export type OrQuery = Message<"zitadel.user.v1.OrQuery"> & {
  /**
   * @generated from field: repeated zitadel.user.v1.SearchQuery queries = 1;
   */
  queries: SearchQuery[];
};

/**
 * Describes the message zitadel.user.v1.OrQuery.
 * Use `create(OrQuerySchema)` to create a new message.
 */
export const OrQuerySchema: GenMessage<OrQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 7);

/**
 * @generated from message zitadel.user.v1.AndQuery
 */
export type AndQuery = Message<"zitadel.user.v1.AndQuery"> & {
  /**
   * @generated from field: repeated zitadel.user.v1.SearchQuery queries = 1;
   */
  queries: SearchQuery[];
};

/**
 * Describes the message zitadel.user.v1.AndQuery.
 * Use `create(AndQuerySchema)` to create a new message.
 */
export const AndQuerySchema: GenMessage<AndQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 8);

/**
 * @generated from message zitadel.user.v1.NotQuery
 */
export type NotQuery = Message<"zitadel.user.v1.NotQuery"> & {
  /**
   * @generated from field: zitadel.user.v1.SearchQuery query = 1;
   */
  query?: SearchQuery;
};

/**
 * Describes the message zitadel.user.v1.NotQuery.
 * Use `create(NotQuerySchema)` to create a new message.
 */
export const NotQuerySchema: GenMessage<NotQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 9);

/**
 * @generated from message zitadel.user.v1.InUserIDQuery
 */
export type InUserIDQuery = Message<"zitadel.user.v1.InUserIDQuery"> & {
  /**
   * @generated from field: repeated string user_ids = 1;
   */
  userIds: string[];
};

/**
 * Describes the message zitadel.user.v1.InUserIDQuery.
 * Use `create(InUserIDQuerySchema)` to create a new message.
 */
export const InUserIDQuerySchema: GenMessage<InUserIDQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 10);

/**
 * @generated from message zitadel.user.v1.InUserEmailsQuery
 */
export type InUserEmailsQuery = Message<"zitadel.user.v1.InUserEmailsQuery"> & {
  /**
   * @generated from field: repeated string user_emails = 1;
   */
  userEmails: string[];
};

/**
 * Describes the message zitadel.user.v1.InUserEmailsQuery.
 * Use `create(InUserEmailsQuerySchema)` to create a new message.
 */
export const InUserEmailsQuerySchema: GenMessage<InUserEmailsQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 11);

/**
 * @generated from message zitadel.user.v1.UserNameQuery
 */
export type UserNameQuery = Message<"zitadel.user.v1.UserNameQuery"> & {
  /**
   * @generated from field: string user_name = 1;
   */
  userName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.UserNameQuery.
 * Use `create(UserNameQuerySchema)` to create a new message.
 */
export const UserNameQuerySchema: GenMessage<UserNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 12);

/**
 * @generated from message zitadel.user.v1.FirstNameQuery
 */
export type FirstNameQuery = Message<"zitadel.user.v1.FirstNameQuery"> & {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.FirstNameQuery.
 * Use `create(FirstNameQuerySchema)` to create a new message.
 */
export const FirstNameQuerySchema: GenMessage<FirstNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 13);

/**
 * @generated from message zitadel.user.v1.LastNameQuery
 */
export type LastNameQuery = Message<"zitadel.user.v1.LastNameQuery"> & {
  /**
   * @generated from field: string last_name = 1;
   */
  lastName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.LastNameQuery.
 * Use `create(LastNameQuerySchema)` to create a new message.
 */
export const LastNameQuerySchema: GenMessage<LastNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 14);

/**
 * @generated from message zitadel.user.v1.NickNameQuery
 */
export type NickNameQuery = Message<"zitadel.user.v1.NickNameQuery"> & {
  /**
   * @generated from field: string nick_name = 1;
   */
  nickName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.NickNameQuery.
 * Use `create(NickNameQuerySchema)` to create a new message.
 */
export const NickNameQuerySchema: GenMessage<NickNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 15);

/**
 * @generated from message zitadel.user.v1.DisplayNameQuery
 */
export type DisplayNameQuery = Message<"zitadel.user.v1.DisplayNameQuery"> & {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.DisplayNameQuery.
 * Use `create(DisplayNameQuerySchema)` to create a new message.
 */
export const DisplayNameQuerySchema: GenMessage<DisplayNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 16);

/**
 * @generated from message zitadel.user.v1.EmailQuery
 */
export type EmailQuery = Message<"zitadel.user.v1.EmailQuery"> & {
  /**
   * @generated from field: string email_address = 1;
   */
  emailAddress: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.EmailQuery.
 * Use `create(EmailQuerySchema)` to create a new message.
 */
export const EmailQuerySchema: GenMessage<EmailQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 17);

/**
 * @generated from message zitadel.user.v1.LoginNameQuery
 */
export type LoginNameQuery = Message<"zitadel.user.v1.LoginNameQuery"> & {
  /**
   * @generated from field: string login_name = 1;
   */
  loginName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.LoginNameQuery.
 * Use `create(LoginNameQuerySchema)` to create a new message.
 */
export const LoginNameQuerySchema: GenMessage<LoginNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 18);

/**
 * UserStateQuery always equals
 *
 * @generated from message zitadel.user.v1.StateQuery
 */
export type StateQuery = Message<"zitadel.user.v1.StateQuery"> & {
  /**
   * @generated from field: zitadel.user.v1.UserState state = 1;
   */
  state: UserState;
};

/**
 * Describes the message zitadel.user.v1.StateQuery.
 * Use `create(StateQuerySchema)` to create a new message.
 */
export const StateQuerySchema: GenMessage<StateQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 19);

/**
 * UserTypeQuery always equals
 *
 * @generated from message zitadel.user.v1.TypeQuery
 */
export type TypeQuery = Message<"zitadel.user.v1.TypeQuery"> & {
  /**
   * @generated from field: zitadel.user.v1.Type type = 1;
   */
  type: Type;
};

/**
 * Describes the message zitadel.user.v1.TypeQuery.
 * Use `create(TypeQuerySchema)` to create a new message.
 */
export const TypeQuerySchema: GenMessage<TypeQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 20);

/**
 * @generated from message zitadel.user.v1.AuthFactor
 */
export type AuthFactor = Message<"zitadel.user.v1.AuthFactor"> & {
  /**
   * @generated from field: zitadel.user.v1.AuthFactorState state = 1;
   */
  state: AuthFactorState;

  /**
   * @generated from oneof zitadel.user.v1.AuthFactor.type
   */
  type: {
    /**
     * @generated from field: zitadel.user.v1.AuthFactorOTP otp = 2;
     */
    value: AuthFactorOTP;
    case: "otp";
  } | {
    /**
     * @generated from field: zitadel.user.v1.AuthFactorU2F u2f = 3;
     */
    value: AuthFactorU2F;
    case: "u2f";
  } | {
    /**
     * @generated from field: zitadel.user.v1.AuthFactorOTPSMS otp_sms = 4;
     */
    value: AuthFactorOTPSMS;
    case: "otpSms";
  } | {
    /**
     * @generated from field: zitadel.user.v1.AuthFactorOTPEmail otp_email = 5;
     */
    value: AuthFactorOTPEmail;
    case: "otpEmail";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message zitadel.user.v1.AuthFactor.
 * Use `create(AuthFactorSchema)` to create a new message.
 */
export const AuthFactorSchema: GenMessage<AuthFactor> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 21);

/**
 * @generated from message zitadel.user.v1.AuthFactorOTP
 */
export type AuthFactorOTP = Message<"zitadel.user.v1.AuthFactorOTP"> & {
};

/**
 * Describes the message zitadel.user.v1.AuthFactorOTP.
 * Use `create(AuthFactorOTPSchema)` to create a new message.
 */
export const AuthFactorOTPSchema: GenMessage<AuthFactorOTP> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 22);

/**
 * @generated from message zitadel.user.v1.AuthFactorOTPSMS
 */
export type AuthFactorOTPSMS = Message<"zitadel.user.v1.AuthFactorOTPSMS"> & {
};

/**
 * Describes the message zitadel.user.v1.AuthFactorOTPSMS.
 * Use `create(AuthFactorOTPSMSSchema)` to create a new message.
 */
export const AuthFactorOTPSMSSchema: GenMessage<AuthFactorOTPSMS> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 23);

/**
 * @generated from message zitadel.user.v1.AuthFactorOTPEmail
 */
export type AuthFactorOTPEmail = Message<"zitadel.user.v1.AuthFactorOTPEmail"> & {
};

/**
 * Describes the message zitadel.user.v1.AuthFactorOTPEmail.
 * Use `create(AuthFactorOTPEmailSchema)` to create a new message.
 */
export const AuthFactorOTPEmailSchema: GenMessage<AuthFactorOTPEmail> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 24);

/**
 * @generated from message zitadel.user.v1.AuthFactorU2F
 */
export type AuthFactorU2F = Message<"zitadel.user.v1.AuthFactorU2F"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message zitadel.user.v1.AuthFactorU2F.
 * Use `create(AuthFactorU2FSchema)` to create a new message.
 */
export const AuthFactorU2FSchema: GenMessage<AuthFactorU2F> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 25);

/**
 * @generated from message zitadel.user.v1.WebAuthNKey
 */
export type WebAuthNKey = Message<"zitadel.user.v1.WebAuthNKey"> & {
  /**
   * @generated from field: bytes public_key = 1;
   */
  publicKey: Uint8Array;
};

/**
 * Describes the message zitadel.user.v1.WebAuthNKey.
 * Use `create(WebAuthNKeySchema)` to create a new message.
 */
export const WebAuthNKeySchema: GenMessage<WebAuthNKey> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 26);

/**
 * @generated from message zitadel.user.v1.WebAuthNVerification
 */
export type WebAuthNVerification = Message<"zitadel.user.v1.WebAuthNVerification"> & {
  /**
   * @generated from field: bytes public_key_credential = 1;
   */
  publicKeyCredential: Uint8Array;

  /**
   * @generated from field: string token_name = 2;
   */
  tokenName: string;
};

/**
 * Describes the message zitadel.user.v1.WebAuthNVerification.
 * Use `create(WebAuthNVerificationSchema)` to create a new message.
 */
export const WebAuthNVerificationSchema: GenMessage<WebAuthNVerification> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 27);

/**
 * @generated from message zitadel.user.v1.WebAuthNToken
 */
export type WebAuthNToken = Message<"zitadel.user.v1.WebAuthNToken"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.user.v1.AuthFactorState state = 2;
   */
  state: AuthFactorState;

  /**
   * @generated from field: string name = 3;
   */
  name: string;
};

/**
 * Describes the message zitadel.user.v1.WebAuthNToken.
 * Use `create(WebAuthNTokenSchema)` to create a new message.
 */
export const WebAuthNTokenSchema: GenMessage<WebAuthNToken> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 28);

/**
 * @generated from message zitadel.user.v1.Membership
 */
export type Membership = Message<"zitadel.user.v1.Membership"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: repeated string roles = 3;
   */
  roles: string[];

  /**
   * @generated from field: string display_name = 4;
   */
  displayName: string;

  /**
   * @generated from oneof zitadel.user.v1.Membership.type
   */
  type: {
    /**
     * @generated from field: bool iam = 5;
     */
    value: boolean;
    case: "iam";
  } | {
    /**
     * @generated from field: string org_id = 6;
     */
    value: string;
    case: "orgId";
  } | {
    /**
     * @generated from field: string project_id = 7;
     */
    value: string;
    case: "projectId";
  } | {
    /**
     * @generated from field: string project_grant_id = 8;
     */
    value: string;
    case: "projectGrantId";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message zitadel.user.v1.Membership.
 * Use `create(MembershipSchema)` to create a new message.
 */
export const MembershipSchema: GenMessage<Membership> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 29);

/**
 * @generated from message zitadel.user.v1.MembershipQuery
 */
export type MembershipQuery = Message<"zitadel.user.v1.MembershipQuery"> & {
  /**
   * @generated from oneof zitadel.user.v1.MembershipQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.user.v1.MembershipOrgQuery org_query = 1;
     */
    value: MembershipOrgQuery;
    case: "orgQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.MembershipProjectQuery project_query = 2;
     */
    value: MembershipProjectQuery;
    case: "projectQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.MembershipProjectGrantQuery project_grant_query = 3;
     */
    value: MembershipProjectGrantQuery;
    case: "projectGrantQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.MembershipIAMQuery iam_query = 4;
     */
    value: MembershipIAMQuery;
    case: "iamQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message zitadel.user.v1.MembershipQuery.
 * Use `create(MembershipQuerySchema)` to create a new message.
 */
export const MembershipQuerySchema: GenMessage<MembershipQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 30);

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipOrgQuery
 */
export type MembershipOrgQuery = Message<"zitadel.user.v1.MembershipOrgQuery"> & {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId: string;
};

/**
 * Describes the message zitadel.user.v1.MembershipOrgQuery.
 * Use `create(MembershipOrgQuerySchema)` to create a new message.
 */
export const MembershipOrgQuerySchema: GenMessage<MembershipOrgQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 31);

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipProjectQuery
 */
export type MembershipProjectQuery = Message<"zitadel.user.v1.MembershipProjectQuery"> & {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;
};

/**
 * Describes the message zitadel.user.v1.MembershipProjectQuery.
 * Use `create(MembershipProjectQuerySchema)` to create a new message.
 */
export const MembershipProjectQuerySchema: GenMessage<MembershipProjectQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 32);

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipProjectGrantQuery
 */
export type MembershipProjectGrantQuery = Message<"zitadel.user.v1.MembershipProjectGrantQuery"> & {
  /**
   * @generated from field: string project_grant_id = 1;
   */
  projectGrantId: string;
};

/**
 * Describes the message zitadel.user.v1.MembershipProjectGrantQuery.
 * Use `create(MembershipProjectGrantQuerySchema)` to create a new message.
 */
export const MembershipProjectGrantQuerySchema: GenMessage<MembershipProjectGrantQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 33);

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipIAMQuery
 */
export type MembershipIAMQuery = Message<"zitadel.user.v1.MembershipIAMQuery"> & {
  /**
   * @generated from field: bool iam = 1;
   */
  iam: boolean;
};

/**
 * Describes the message zitadel.user.v1.MembershipIAMQuery.
 * Use `create(MembershipIAMQuerySchema)` to create a new message.
 */
export const MembershipIAMQuerySchema: GenMessage<MembershipIAMQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 34);

/**
 * @generated from message zitadel.user.v1.Session
 */
export type Session = Message<"zitadel.user.v1.Session"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string agent_id = 2;
   */
  agentId: string;

  /**
   * @generated from field: zitadel.user.v1.SessionState auth_state = 3;
   */
  authState: SessionState;

  /**
   * @generated from field: string user_id = 4;
   */
  userId: string;

  /**
   * @generated from field: string user_name = 5;
   */
  userName: string;

  /**
   * @generated from field: string login_name = 7;
   */
  loginName: string;

  /**
   * @generated from field: string display_name = 8;
   */
  displayName: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 9;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string avatar_url = 10;
   */
  avatarUrl: string;
};

/**
 * Describes the message zitadel.user.v1.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export const SessionSchema: GenMessage<Session> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 35);

/**
 * @generated from message zitadel.user.v1.RefreshToken
 */
export type RefreshToken = Message<"zitadel.user.v1.RefreshToken"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string client_id = 3;
   */
  clientId: string;

  /**
   * @generated from field: google.protobuf.Timestamp auth_time = 4;
   */
  authTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp idle_expiration = 5;
   */
  idleExpiration?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expiration = 6;
   */
  expiration?: Timestamp;

  /**
   * @generated from field: repeated string scopes = 7;
   */
  scopes: string[];

  /**
   * @generated from field: repeated string audience = 8;
   */
  audience: string[];
};

/**
 * Describes the message zitadel.user.v1.RefreshToken.
 * Use `create(RefreshTokenSchema)` to create a new message.
 */
export const RefreshTokenSchema: GenMessage<RefreshToken> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 36);

/**
 * @generated from message zitadel.user.v1.PersonalAccessToken
 */
export type PersonalAccessToken = Message<"zitadel.user.v1.PersonalAccessToken"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: google.protobuf.Timestamp expiration_date = 3;
   */
  expirationDate?: Timestamp;

  /**
   * @generated from field: repeated string scopes = 4;
   */
  scopes: string[];
};

/**
 * Describes the message zitadel.user.v1.PersonalAccessToken.
 * Use `create(PersonalAccessTokenSchema)` to create a new message.
 */
export const PersonalAccessTokenSchema: GenMessage<PersonalAccessToken> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 37);

/**
 * @generated from message zitadel.user.v1.UserGrant
 */
export type UserGrant = Message<"zitadel.user.v1.UserGrant"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: repeated string role_keys = 3;
   */
  roleKeys: string[];

  /**
   * @generated from field: zitadel.user.v1.UserGrantState state = 4;
   */
  state: UserGrantState;

  /**
   * @generated from field: string user_id = 5;
   */
  userId: string;

  /**
   * @generated from field: string user_name = 6;
   */
  userName: string;

  /**
   * @generated from field: string first_name = 7;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 8;
   */
  lastName: string;

  /**
   * @generated from field: string email = 9;
   */
  email: string;

  /**
   * @generated from field: string display_name = 10;
   */
  displayName: string;

  /**
   * @generated from field: string org_id = 11;
   */
  orgId: string;

  /**
   * @generated from field: string org_name = 12;
   */
  orgName: string;

  /**
   * @generated from field: string org_domain = 13;
   */
  orgDomain: string;

  /**
   * @generated from field: string project_id = 14;
   */
  projectId: string;

  /**
   * @generated from field: string project_name = 15;
   */
  projectName: string;

  /**
   * @generated from field: string project_grant_id = 16;
   */
  projectGrantId: string;

  /**
   * @generated from field: string avatar_url = 17;
   */
  avatarUrl: string;

  /**
   * @generated from field: string preferred_login_name = 18;
   */
  preferredLoginName: string;

  /**
   * @generated from field: zitadel.user.v1.Type user_type = 19;
   */
  userType: Type;

  /**
   * @generated from field: string granted_org_id = 20;
   */
  grantedOrgId: string;

  /**
   * @generated from field: string granted_org_name = 21;
   */
  grantedOrgName: string;

  /**
   * @generated from field: string granted_org_domain = 22;
   */
  grantedOrgDomain: string;
};

/**
 * Describes the message zitadel.user.v1.UserGrant.
 * Use `create(UserGrantSchema)` to create a new message.
 */
export const UserGrantSchema: GenMessage<UserGrant> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 38);

/**
 * @generated from message zitadel.user.v1.UserGrantQuery
 */
export type UserGrantQuery = Message<"zitadel.user.v1.UserGrantQuery"> & {
  /**
   * @generated from oneof zitadel.user.v1.UserGrantQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.user.v1.UserGrantProjectIDQuery project_id_query = 1;
     */
    value: UserGrantProjectIDQuery;
    case: "projectIdQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantUserIDQuery user_id_query = 2;
     */
    value: UserGrantUserIDQuery;
    case: "userIdQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantWithGrantedQuery with_granted_query = 3;
     */
    value: UserGrantWithGrantedQuery;
    case: "withGrantedQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantRoleKeyQuery role_key_query = 4;
     */
    value: UserGrantRoleKeyQuery;
    case: "roleKeyQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantProjectGrantIDQuery project_grant_id_query = 5;
     */
    value: UserGrantProjectGrantIDQuery;
    case: "projectGrantIdQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantUserNameQuery user_name_query = 6;
     */
    value: UserGrantUserNameQuery;
    case: "userNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantFirstNameQuery first_name_query = 7;
     */
    value: UserGrantFirstNameQuery;
    case: "firstNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantLastNameQuery last_name_query = 8;
     */
    value: UserGrantLastNameQuery;
    case: "lastNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantEmailQuery email_query = 9;
     */
    value: UserGrantEmailQuery;
    case: "emailQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantOrgNameQuery org_name_query = 10;
     */
    value: UserGrantOrgNameQuery;
    case: "orgNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantOrgDomainQuery org_domain_query = 11;
     */
    value: UserGrantOrgDomainQuery;
    case: "orgDomainQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantProjectNameQuery project_name_query = 12;
     */
    value: UserGrantProjectNameQuery;
    case: "projectNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantDisplayNameQuery display_name_query = 13;
     */
    value: UserGrantDisplayNameQuery;
    case: "displayNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantUserTypeQuery user_type_query = 14;
     */
    value: UserGrantUserTypeQuery;
    case: "userTypeQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message zitadel.user.v1.UserGrantQuery.
 * Use `create(UserGrantQuerySchema)` to create a new message.
 */
export const UserGrantQuerySchema: GenMessage<UserGrantQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 39);

/**
 * @generated from message zitadel.user.v1.UserGrantProjectIDQuery
 */
export type UserGrantProjectIDQuery = Message<"zitadel.user.v1.UserGrantProjectIDQuery"> & {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;
};

/**
 * Describes the message zitadel.user.v1.UserGrantProjectIDQuery.
 * Use `create(UserGrantProjectIDQuerySchema)` to create a new message.
 */
export const UserGrantProjectIDQuerySchema: GenMessage<UserGrantProjectIDQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 40);

/**
 * @generated from message zitadel.user.v1.UserGrantUserIDQuery
 */
export type UserGrantUserIDQuery = Message<"zitadel.user.v1.UserGrantUserIDQuery"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * Describes the message zitadel.user.v1.UserGrantUserIDQuery.
 * Use `create(UserGrantUserIDQuerySchema)` to create a new message.
 */
export const UserGrantUserIDQuerySchema: GenMessage<UserGrantUserIDQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 41);

/**
 * @generated from message zitadel.user.v1.UserGrantWithGrantedQuery
 */
export type UserGrantWithGrantedQuery = Message<"zitadel.user.v1.UserGrantWithGrantedQuery"> & {
  /**
   * @generated from field: bool with_granted = 1;
   */
  withGranted: boolean;
};

/**
 * Describes the message zitadel.user.v1.UserGrantWithGrantedQuery.
 * Use `create(UserGrantWithGrantedQuerySchema)` to create a new message.
 */
export const UserGrantWithGrantedQuerySchema: GenMessage<UserGrantWithGrantedQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 42);

/**
 * @generated from message zitadel.user.v1.UserGrantRoleKeyQuery
 */
export type UserGrantRoleKeyQuery = Message<"zitadel.user.v1.UserGrantRoleKeyQuery"> & {
  /**
   * @generated from field: string role_key = 1;
   */
  roleKey: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.UserGrantRoleKeyQuery.
 * Use `create(UserGrantRoleKeyQuerySchema)` to create a new message.
 */
export const UserGrantRoleKeyQuerySchema: GenMessage<UserGrantRoleKeyQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 43);

/**
 * @generated from message zitadel.user.v1.UserGrantProjectGrantIDQuery
 */
export type UserGrantProjectGrantIDQuery = Message<"zitadel.user.v1.UserGrantProjectGrantIDQuery"> & {
  /**
   * @generated from field: string project_grant_id = 1;
   */
  projectGrantId: string;
};

/**
 * Describes the message zitadel.user.v1.UserGrantProjectGrantIDQuery.
 * Use `create(UserGrantProjectGrantIDQuerySchema)` to create a new message.
 */
export const UserGrantProjectGrantIDQuerySchema: GenMessage<UserGrantProjectGrantIDQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 44);

/**
 * @generated from message zitadel.user.v1.UserGrantUserNameQuery
 */
export type UserGrantUserNameQuery = Message<"zitadel.user.v1.UserGrantUserNameQuery"> & {
  /**
   * @generated from field: string user_name = 1;
   */
  userName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.UserGrantUserNameQuery.
 * Use `create(UserGrantUserNameQuerySchema)` to create a new message.
 */
export const UserGrantUserNameQuerySchema: GenMessage<UserGrantUserNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 45);

/**
 * @generated from message zitadel.user.v1.UserGrantFirstNameQuery
 */
export type UserGrantFirstNameQuery = Message<"zitadel.user.v1.UserGrantFirstNameQuery"> & {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.UserGrantFirstNameQuery.
 * Use `create(UserGrantFirstNameQuerySchema)` to create a new message.
 */
export const UserGrantFirstNameQuerySchema: GenMessage<UserGrantFirstNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 46);

/**
 * @generated from message zitadel.user.v1.UserGrantLastNameQuery
 */
export type UserGrantLastNameQuery = Message<"zitadel.user.v1.UserGrantLastNameQuery"> & {
  /**
   * @generated from field: string last_name = 1;
   */
  lastName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.UserGrantLastNameQuery.
 * Use `create(UserGrantLastNameQuerySchema)` to create a new message.
 */
export const UserGrantLastNameQuerySchema: GenMessage<UserGrantLastNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 47);

/**
 * @generated from message zitadel.user.v1.UserGrantEmailQuery
 */
export type UserGrantEmailQuery = Message<"zitadel.user.v1.UserGrantEmailQuery"> & {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.UserGrantEmailQuery.
 * Use `create(UserGrantEmailQuerySchema)` to create a new message.
 */
export const UserGrantEmailQuerySchema: GenMessage<UserGrantEmailQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 48);

/**
 * @generated from message zitadel.user.v1.UserGrantOrgNameQuery
 */
export type UserGrantOrgNameQuery = Message<"zitadel.user.v1.UserGrantOrgNameQuery"> & {
  /**
   * @generated from field: string org_name = 1;
   */
  orgName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.UserGrantOrgNameQuery.
 * Use `create(UserGrantOrgNameQuerySchema)` to create a new message.
 */
export const UserGrantOrgNameQuerySchema: GenMessage<UserGrantOrgNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 49);

/**
 * @generated from message zitadel.user.v1.UserGrantOrgDomainQuery
 */
export type UserGrantOrgDomainQuery = Message<"zitadel.user.v1.UserGrantOrgDomainQuery"> & {
  /**
   * @generated from field: string org_domain = 1;
   */
  orgDomain: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.UserGrantOrgDomainQuery.
 * Use `create(UserGrantOrgDomainQuerySchema)` to create a new message.
 */
export const UserGrantOrgDomainQuerySchema: GenMessage<UserGrantOrgDomainQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 50);

/**
 * @generated from message zitadel.user.v1.UserGrantProjectNameQuery
 */
export type UserGrantProjectNameQuery = Message<"zitadel.user.v1.UserGrantProjectNameQuery"> & {
  /**
   * @generated from field: string project_name = 1;
   */
  projectName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.UserGrantProjectNameQuery.
 * Use `create(UserGrantProjectNameQuerySchema)` to create a new message.
 */
export const UserGrantProjectNameQuerySchema: GenMessage<UserGrantProjectNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 51);

/**
 * @generated from message zitadel.user.v1.UserGrantDisplayNameQuery
 */
export type UserGrantDisplayNameQuery = Message<"zitadel.user.v1.UserGrantDisplayNameQuery"> & {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v1.UserGrantDisplayNameQuery.
 * Use `create(UserGrantDisplayNameQuerySchema)` to create a new message.
 */
export const UserGrantDisplayNameQuerySchema: GenMessage<UserGrantDisplayNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 52);

/**
 * @generated from message zitadel.user.v1.UserGrantUserTypeQuery
 */
export type UserGrantUserTypeQuery = Message<"zitadel.user.v1.UserGrantUserTypeQuery"> & {
  /**
   * @generated from field: zitadel.user.v1.Type type = 1;
   */
  type: Type;
};

/**
 * Describes the message zitadel.user.v1.UserGrantUserTypeQuery.
 * Use `create(UserGrantUserTypeQuerySchema)` to create a new message.
 */
export const UserGrantUserTypeQuerySchema: GenMessage<UserGrantUserTypeQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user, 53);

/**
 * @generated from enum zitadel.user.v1.UserState
 */
export enum UserState {
  /**
   * @generated from enum value: USER_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: USER_STATE_INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: USER_STATE_DELETED = 3;
   */
  DELETED = 3,

  /**
   * @generated from enum value: USER_STATE_LOCKED = 4;
   */
  LOCKED = 4,

  /**
   * @generated from enum value: USER_STATE_SUSPEND = 5;
   */
  SUSPEND = 5,

  /**
   * @generated from enum value: USER_STATE_INITIAL = 6;
   */
  INITIAL = 6,
}

/**
 * Describes the enum zitadel.user.v1.UserState.
 */
export const UserStateSchema: GenEnum<UserState> = /*@__PURE__*/
  enumDesc(file_zitadel_user, 0);

/**
 * @generated from enum zitadel.user.v1.Gender
 */
export enum Gender {
  /**
   * @generated from enum value: GENDER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: GENDER_FEMALE = 1;
   */
  FEMALE = 1,

  /**
   * @generated from enum value: GENDER_MALE = 2;
   */
  MALE = 2,

  /**
   * @generated from enum value: GENDER_DIVERSE = 3;
   */
  DIVERSE = 3,
}

/**
 * Describes the enum zitadel.user.v1.Gender.
 */
export const GenderSchema: GenEnum<Gender> = /*@__PURE__*/
  enumDesc(file_zitadel_user, 1);

/**
 * @generated from enum zitadel.user.v1.AccessTokenType
 */
export enum AccessTokenType {
  /**
   * @generated from enum value: ACCESS_TOKEN_TYPE_BEARER = 0;
   */
  BEARER = 0,

  /**
   * @generated from enum value: ACCESS_TOKEN_TYPE_JWT = 1;
   */
  JWT = 1,
}

/**
 * Describes the enum zitadel.user.v1.AccessTokenType.
 */
export const AccessTokenTypeSchema: GenEnum<AccessTokenType> = /*@__PURE__*/
  enumDesc(file_zitadel_user, 2);

/**
 * @generated from enum zitadel.user.v1.Type
 */
export enum Type {
  /**
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TYPE_HUMAN = 1;
   */
  HUMAN = 1,

  /**
   * @generated from enum value: TYPE_MACHINE = 2;
   */
  MACHINE = 2,
}

/**
 * Describes the enum zitadel.user.v1.Type.
 */
export const TypeSchema: GenEnum<Type> = /*@__PURE__*/
  enumDesc(file_zitadel_user, 3);

/**
 * @generated from enum zitadel.user.v1.UserFieldName
 */
export enum UserFieldName {
  /**
   * @generated from enum value: USER_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_FIELD_NAME_USER_NAME = 1;
   */
  USER_NAME = 1,

  /**
   * @generated from enum value: USER_FIELD_NAME_FIRST_NAME = 2;
   */
  FIRST_NAME = 2,

  /**
   * @generated from enum value: USER_FIELD_NAME_LAST_NAME = 3;
   */
  LAST_NAME = 3,

  /**
   * @generated from enum value: USER_FIELD_NAME_NICK_NAME = 4;
   */
  NICK_NAME = 4,

  /**
   * @generated from enum value: USER_FIELD_NAME_DISPLAY_NAME = 5;
   */
  DISPLAY_NAME = 5,

  /**
   * @generated from enum value: USER_FIELD_NAME_EMAIL = 6;
   */
  EMAIL = 6,

  /**
   * @generated from enum value: USER_FIELD_NAME_STATE = 7;
   */
  STATE = 7,

  /**
   * @generated from enum value: USER_FIELD_NAME_TYPE = 8;
   */
  TYPE = 8,

  /**
   * @generated from enum value: USER_FIELD_NAME_CREATION_DATE = 9;
   */
  CREATION_DATE = 9,
}

/**
 * Describes the enum zitadel.user.v1.UserFieldName.
 */
export const UserFieldNameSchema: GenEnum<UserFieldName> = /*@__PURE__*/
  enumDesc(file_zitadel_user, 4);

/**
 * @generated from enum zitadel.user.v1.AuthFactorState
 */
export enum AuthFactorState {
  /**
   * @generated from enum value: AUTH_FACTOR_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: AUTH_FACTOR_STATE_NOT_READY = 1;
   */
  NOT_READY = 1,

  /**
   * @generated from enum value: AUTH_FACTOR_STATE_READY = 2;
   */
  READY = 2,

  /**
   * @generated from enum value: AUTH_FACTOR_STATE_REMOVED = 3;
   */
  REMOVED = 3,
}

/**
 * Describes the enum zitadel.user.v1.AuthFactorState.
 */
export const AuthFactorStateSchema: GenEnum<AuthFactorState> = /*@__PURE__*/
  enumDesc(file_zitadel_user, 5);

/**
 * @generated from enum zitadel.user.v1.SessionState
 */
export enum SessionState {
  /**
   * @generated from enum value: SESSION_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SESSION_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: SESSION_STATE_TERMINATED = 2;
   */
  TERMINATED = 2,
}

/**
 * Describes the enum zitadel.user.v1.SessionState.
 */
export const SessionStateSchema: GenEnum<SessionState> = /*@__PURE__*/
  enumDesc(file_zitadel_user, 6);

/**
 * @generated from enum zitadel.user.v1.UserGrantState
 */
export enum UserGrantState {
  /**
   * @generated from enum value: USER_GRANT_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_GRANT_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: USER_GRANT_STATE_INACTIVE = 2;
   */
  INACTIVE = 2,
}

/**
 * Describes the enum zitadel.user.v1.UserGrantState.
 */
export const UserGrantStateSchema: GenEnum<UserGrantState> = /*@__PURE__*/
  enumDesc(file_zitadel_user, 7);

