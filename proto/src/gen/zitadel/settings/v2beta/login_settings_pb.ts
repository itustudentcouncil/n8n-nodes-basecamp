// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file zitadel/settings/v2beta/login_settings.proto (package zitadel.settings.v2beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../protoc-gen-openapiv2/options/annotations_pb";
import type { ResourceOwnerType } from "./settings_pb";
import { file_zitadel_settings_v2beta_settings } from "./settings_pb";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file zitadel/settings/v2beta/login_settings.proto.
 */
export const file_zitadel_settings_v2beta_login_settings: GenFile = /*@__PURE__*/
  fileDesc("Cix6aXRhZGVsL3NldHRpbmdzL3YyYmV0YS9sb2dpbl9zZXR0aW5ncy5wcm90bxIXeml0YWRlbC5zZXR0aW5ncy52MmJldGEijhUKDUxvZ2luU2V0dGluZ3MSZwoXYWxsb3dfdXNlcm5hbWVfcGFzc3dvcmQYASABKAhCRpJBQzJBZGVmaW5lcyBpZiBhIHVzZXIgaXMgYWxsb3dlZCB0byBsb2cgaW4gd2l0aCB1c2VybmFtZSBhbmQgcGFzc3dvcmQSYwoOYWxsb3dfcmVnaXN0ZXIYAiABKAhCS5JBSDJGZGVmaW5lcyBpZiBhIHBlcnNvbiBpcyBhbGxvd2VkIHRvIHJlZ2lzdGVyIGEgdXNlciBvbiB0aGlzIG9yZ2FuaXphdGlvbhJyChJhbGxvd19leHRlcm5hbF9pZHAYAyABKAhCVpJBUzJRZGVmaW5lcyBpZiBhIHVzZXIgaXMgYWxsb3dlZCB0byBhZGQgYSBkZWZpbmVkIGlkZW50aXR5IHByb3ZpZGVyLiBFLmcuIEdvb2dsZSBhdXRoEksKCWZvcmNlX21mYRgEIAEoCEI4kkE1MjNkZWZpbmVzIGlmIGEgdXNlciBNVVNUIHVzZSBhIG11bHRpLWZhY3RvciB0byBsb2cgaW4SbAoNcGFzc2tleXNfdHlwZRgFIAEoDjIlLnppdGFkZWwuc2V0dGluZ3MudjJiZXRhLlBhc3NrZXlzVHlwZUIukkErMilkZWZpbmVzIGlmIHBhc3NrZXlzIGFyZSBhbGxvd2VkIGZvciB1c2VycxJkChNoaWRlX3Bhc3N3b3JkX3Jlc2V0GAYgASgIQkeSQUQyQmRlZmluZXMgaWYgcGFzc3dvcmQgcmVzZXQgbGluayBzaG91bGQgYmUgc2hvd24gaW4gdGhlIGxvZ2luIHNjcmVlbhKTAQoYaWdub3JlX3Vua25vd25fdXNlcm5hbWVzGAcgASgIQnGSQW4ybGRlZmluZXMgaWYgdW5rbm93biB1c2VybmFtZSBvbiBsb2dpbiBzY3JlZW4gZGlyZWN0bHkgcmV0dXJucyBhbiBlcnJvciBvciBhbHdheXMgZGlzcGxheXMgdGhlIHBhc3N3b3JkIHNjcmVlbhKtAQoUZGVmYXVsdF9yZWRpcmVjdF91cmkYCCABKAlCjgGSQYoBMmlkZWZpbmVzIHdoZXJlIHRoZSB1c2VyIHdpbGwgYmUgcmVkaXJlY3RlZCB0byBpZiB0aGUgbG9naW4gaXMgc3RhcnRlZCB3aXRob3V0IGFwcCBjb250ZXh0IChlLmcuIGZyb20gbWFpbClKHSJodHRwczovL2FjbWUuY29tL3VpL2NvbnNvbGUiEpoBChdwYXNzd29yZF9jaGVja19saWZldGltZRgJIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkJekkFbMk5EZWZpbmVzIGFmdGVyIGhvdyBtdWNoIHRpbWUgdGhlIHVzZXIgaGFzIHRvIHJlLWF1dGhlbnRpY2F0ZSB3aXRoIHRoZSBwYXNzd29yZC5KCSI4NjQwMDBzIhKoAQodZXh0ZXJuYWxfbG9naW5fY2hlY2tfbGlmZXRpbWUYCiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25CZpJBYzJWRGVmaW5lcyBhZnRlciBob3cgbXVjaCB0aW1lIHRoZSB1c2VyIGhhcyB0byByZS1hdXRoZW50aWNhdGUgd2l0aCBhbiBleHRlcm5hbCBwcm92aWRlci5KCSI4NjQwMDBzIhKLAQoWbWZhX2luaXRfc2tpcF9saWZldGltZRgLIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkJQkkFNMj9EZWZpbmVzIGFmdGVyIGhvdyBtdWNoIHRpbWUgdGhlIG1mYSBwcm9tcHQgd2lsbCBiZSBzaG93biBhZ2Fpbi5KCiIyNTkyMDAwcyISiAEKHHNlY29uZF9mYWN0b3JfY2hlY2tfbGlmZXRpbWUYDCABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25CR5JBRDI4RGVmaW5lcyBhZnRlciBob3cgbG9uZyB0aGUgc2Vjb25kLWZhY3RvciBjaGVjayBpcyB2YWxpZC5KCCI2NDgwMHMiEoABChttdWx0aV9mYWN0b3JfY2hlY2tfbGlmZXRpbWUYDSABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25CQJJBPTIxRGVmaW5lcyBob3cgbG9uZyB0aGUgbXVsdGktZmFjdG9yIGNoZWNrIGlzIHZhbGlkLkoIIjQzMjAwcyISQQoOc2Vjb25kX2ZhY3RvcnMYDiADKA4yKS56aXRhZGVsLnNldHRpbmdzLnYyYmV0YS5TZWNvbmRGYWN0b3JUeXBlEj8KDW11bHRpX2ZhY3RvcnMYDyADKA4yKC56aXRhZGVsLnNldHRpbmdzLnYyYmV0YS5NdWx0aUZhY3RvclR5cGUS8AEKFmFsbG93X2RvbWFpbl9kaXNjb3ZlcnkYECABKAhCzwGSQcsBMsgBSWYgc2V0IHRvIHRydWUsIHRoZSBzdWZmaXggKEBkb21haW4uY29tKSBvZiBhbiB1bmtub3duIHVzZXJuYW1lIGlucHV0IG9uIHRoZSBsb2dpbiBzY3JlZW4gd2lsbCBiZSBtYXRjaGVkIGFnYWluc3QgdGhlIG9yZyBkb21haW5zIGFuZCB3aWxsIHJlZGlyZWN0IHRvIHRoZSByZWdpc3RyYXRpb24gb2YgdGhhdCBvcmdhbml6YXRpb24gb24gc3VjY2Vzcy4SjQEKGGRpc2FibGVfbG9naW5fd2l0aF9lbWFpbBgRIAEoCEJrkkFoMmZkZWZpbmVzIGlmIHRoZSB1c2VyIGNhbiBhZGRpdGlvbmFsbHkgKHRvIHRoZSBsb2dpbiBuYW1lKSBiZSBpZGVudGlmaWVkIGJ5IHRoZWlyIHZlcmlmaWVkIGVtYWlsIGFkZHJlc3MSjAEKGGRpc2FibGVfbG9naW5fd2l0aF9waG9uZRgSIAEoCEJqkkFnMmVkZWZpbmVzIGlmIHRoZSB1c2VyIGNhbiBhZGRpdGlvbmFsbHkgKHRvIHRoZSBsb2dpbiBuYW1lKSBiZSBpZGVudGlmaWVkIGJ5IHRoZWlyIHZlcmlmaWVkIHBob25lIG51bWJlchKrAQoTcmVzb3VyY2Vfb3duZXJfdHlwZRgTIAEoDjIqLnppdGFkZWwuc2V0dGluZ3MudjJiZXRhLlJlc291cmNlT3duZXJUeXBlQmKSQV8yXXJlc291cmNlX293bmVyX3R5cGUgcmV0dXJucyBpZiB0aGUgc2V0dGluZ3MgaXMgbWFuYWdlZCBvbiB0aGUgb3JnYW5pemF0aW9uIG9yIG9uIHRoZSBpbnN0YW5jZRKrAQoUZm9yY2VfbWZhX2xvY2FsX29ubHkYFiABKAhCjAGSQYgBMoUBaWYgYWN0aXZhdGVkLCBvbmx5IGxvY2FsIGF1dGhlbnRpY2F0ZWQgdXNlcnMgYXJlIGZvcmNlZCB0byB1c2UgTUZBLiBBdXRoZW50aWNhdGlvbiB0aHJvdWdoIElEUHMgd29uJ3QgcHJvbXB0IGEgTUZBIHN0ZXAgaW4gdGhlIGxvZ2luLiJpChBJZGVudGl0eVByb3ZpZGVyEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSOwoEdHlwZRgDIAEoDjItLnppdGFkZWwuc2V0dGluZ3MudjJiZXRhLklkZW50aXR5UHJvdmlkZXJUeXBlKrABChBTZWNvbmRGYWN0b3JUeXBlEiIKHlNFQ09ORF9GQUNUT1JfVFlQRV9VTlNQRUNJRklFRBAAEhoKFlNFQ09ORF9GQUNUT1JfVFlQRV9PVFAQARIaChZTRUNPTkRfRkFDVE9SX1RZUEVfVTJGEAISIAocU0VDT05EX0ZBQ1RPUl9UWVBFX09UUF9FTUFJTBADEh4KGlNFQ09ORF9GQUNUT1JfVFlQRV9PVFBfU01TEAQqYQoPTXVsdGlGYWN0b3JUeXBlEiEKHU1VTFRJX0ZBQ1RPUl9UWVBFX1VOU1BFQ0lGSUVEEAASKwonTVVMVElfRkFDVE9SX1RZUEVfVTJGX1dJVEhfVkVSSUZJQ0FUSU9OEAEqSAoMUGFzc2tleXNUeXBlEh0KGVBBU1NLRVlTX1RZUEVfTk9UX0FMTE9XRUQQABIZChVQQVNTS0VZU19UWVBFX0FMTE9XRUQQASrGAwoUSWRlbnRpdHlQcm92aWRlclR5cGUSJgoiSURFTlRJVFlfUFJPVklERVJfVFlQRV9VTlNQRUNJRklFRBAAEh8KG0lERU5USVRZX1BST1ZJREVSX1RZUEVfT0lEQxABEh4KGklERU5USVRZX1BST1ZJREVSX1RZUEVfSldUEAISHwobSURFTlRJVFlfUFJPVklERVJfVFlQRV9MREFQEAMSIAocSURFTlRJVFlfUFJPVklERVJfVFlQRV9PQVVUSBAEEiMKH0lERU5USVRZX1BST1ZJREVSX1RZUEVfQVpVUkVfQUQQBRIhCh1JREVOVElUWV9QUk9WSURFUl9UWVBFX0dJVEhVQhAGEiQKIElERU5USVRZX1BST1ZJREVSX1RZUEVfR0lUSFVCX0VTEAcSIQodSURFTlRJVFlfUFJPVklERVJfVFlQRV9HSVRMQUIQCBItCilJREVOVElUWV9QUk9WSURFUl9UWVBFX0dJVExBQl9TRUxGX0hPU1RFRBAJEiEKHUlERU5USVRZX1BST1ZJREVSX1RZUEVfR09PR0xFEAoSHwobSURFTlRJVFlfUFJPVklERVJfVFlQRV9TQU1MEAtCPlo8Z2l0aHViLmNvbS96aXRhZGVsL3ppdGFkZWwvcGtnL2dycGMvc2V0dGluZ3MvdjJiZXRhO3NldHRpbmdzYgZwcm90bzM", [file_protoc_gen_openapiv2_options_annotations, file_zitadel_settings_v2beta_settings, file_google_protobuf_duration]);

/**
 * @generated from message zitadel.settings.v2beta.LoginSettings
 */
export type LoginSettings = Message<"zitadel.settings.v2beta.LoginSettings"> & {
  /**
   * @generated from field: bool allow_username_password = 1;
   */
  allowUsernamePassword: boolean;

  /**
   * @generated from field: bool allow_register = 2;
   */
  allowRegister: boolean;

  /**
   * @generated from field: bool allow_external_idp = 3;
   */
  allowExternalIdp: boolean;

  /**
   * @generated from field: bool force_mfa = 4;
   */
  forceMfa: boolean;

  /**
   * @generated from field: zitadel.settings.v2beta.PasskeysType passkeys_type = 5;
   */
  passkeysType: PasskeysType;

  /**
   * @generated from field: bool hide_password_reset = 6;
   */
  hidePasswordReset: boolean;

  /**
   * @generated from field: bool ignore_unknown_usernames = 7;
   */
  ignoreUnknownUsernames: boolean;

  /**
   * @generated from field: string default_redirect_uri = 8;
   */
  defaultRedirectUri: string;

  /**
   * @generated from field: google.protobuf.Duration password_check_lifetime = 9;
   */
  passwordCheckLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration external_login_check_lifetime = 10;
   */
  externalLoginCheckLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration mfa_init_skip_lifetime = 11;
   */
  mfaInitSkipLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration second_factor_check_lifetime = 12;
   */
  secondFactorCheckLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration multi_factor_check_lifetime = 13;
   */
  multiFactorCheckLifetime?: Duration;

  /**
   * @generated from field: repeated zitadel.settings.v2beta.SecondFactorType second_factors = 14;
   */
  secondFactors: SecondFactorType[];

  /**
   * @generated from field: repeated zitadel.settings.v2beta.MultiFactorType multi_factors = 15;
   */
  multiFactors: MultiFactorType[];

  /**
   * If set to true, the suffix (@domain.com) of an unknown username input on the login screen will be matched against the org domains and will redirect to the registration of that organization on success.
   *
   * @generated from field: bool allow_domain_discovery = 16;
   */
  allowDomainDiscovery: boolean;

  /**
   * @generated from field: bool disable_login_with_email = 17;
   */
  disableLoginWithEmail: boolean;

  /**
   * @generated from field: bool disable_login_with_phone = 18;
   */
  disableLoginWithPhone: boolean;

  /**
   * resource_owner_type returns if the settings is managed on the organization or on the instance
   *
   * @generated from field: zitadel.settings.v2beta.ResourceOwnerType resource_owner_type = 19;
   */
  resourceOwnerType: ResourceOwnerType;

  /**
   * @generated from field: bool force_mfa_local_only = 22;
   */
  forceMfaLocalOnly: boolean;
};

/**
 * Describes the message zitadel.settings.v2beta.LoginSettings.
 * Use `create(LoginSettingsSchema)` to create a new message.
 */
export const LoginSettingsSchema: GenMessage<LoginSettings> = /*@__PURE__*/
  messageDesc(file_zitadel_settings_v2beta_login_settings, 0);

/**
 * @generated from message zitadel.settings.v2beta.IdentityProvider
 */
export type IdentityProvider = Message<"zitadel.settings.v2beta.IdentityProvider"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: zitadel.settings.v2beta.IdentityProviderType type = 3;
   */
  type: IdentityProviderType;
};

/**
 * Describes the message zitadel.settings.v2beta.IdentityProvider.
 * Use `create(IdentityProviderSchema)` to create a new message.
 */
export const IdentityProviderSchema: GenMessage<IdentityProvider> = /*@__PURE__*/
  messageDesc(file_zitadel_settings_v2beta_login_settings, 1);

/**
 * @generated from enum zitadel.settings.v2beta.SecondFactorType
 */
export enum SecondFactorType {
  /**
   * @generated from enum value: SECOND_FACTOR_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * This is the type for TOTP
   *
   * @generated from enum value: SECOND_FACTOR_TYPE_OTP = 1;
   */
  OTP = 1,

  /**
   * @generated from enum value: SECOND_FACTOR_TYPE_U2F = 2;
   */
  U2F = 2,

  /**
   * @generated from enum value: SECOND_FACTOR_TYPE_OTP_EMAIL = 3;
   */
  OTP_EMAIL = 3,

  /**
   * @generated from enum value: SECOND_FACTOR_TYPE_OTP_SMS = 4;
   */
  OTP_SMS = 4,
}

/**
 * Describes the enum zitadel.settings.v2beta.SecondFactorType.
 */
export const SecondFactorTypeSchema: GenEnum<SecondFactorType> = /*@__PURE__*/
  enumDesc(file_zitadel_settings_v2beta_login_settings, 0);

/**
 * @generated from enum zitadel.settings.v2beta.MultiFactorType
 */
export enum MultiFactorType {
  /**
   * @generated from enum value: MULTI_FACTOR_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: MULTI_FACTOR_TYPE_U2F_WITH_VERIFICATION = 1;
   */
  U2F_WITH_VERIFICATION = 1,
}

/**
 * Describes the enum zitadel.settings.v2beta.MultiFactorType.
 */
export const MultiFactorTypeSchema: GenEnum<MultiFactorType> = /*@__PURE__*/
  enumDesc(file_zitadel_settings_v2beta_login_settings, 1);

/**
 * @generated from enum zitadel.settings.v2beta.PasskeysType
 */
export enum PasskeysType {
  /**
   * @generated from enum value: PASSKEYS_TYPE_NOT_ALLOWED = 0;
   */
  NOT_ALLOWED = 0,

  /**
   * @generated from enum value: PASSKEYS_TYPE_ALLOWED = 1;
   */
  ALLOWED = 1,
}

/**
 * Describes the enum zitadel.settings.v2beta.PasskeysType.
 */
export const PasskeysTypeSchema: GenEnum<PasskeysType> = /*@__PURE__*/
  enumDesc(file_zitadel_settings_v2beta_login_settings, 2);

/**
 * @generated from enum zitadel.settings.v2beta.IdentityProviderType
 */
export enum IdentityProviderType {
  /**
   * @generated from enum value: IDENTITY_PROVIDER_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: IDENTITY_PROVIDER_TYPE_OIDC = 1;
   */
  OIDC = 1,

  /**
   * @generated from enum value: IDENTITY_PROVIDER_TYPE_JWT = 2;
   */
  JWT = 2,

  /**
   * @generated from enum value: IDENTITY_PROVIDER_TYPE_LDAP = 3;
   */
  LDAP = 3,

  /**
   * @generated from enum value: IDENTITY_PROVIDER_TYPE_OAUTH = 4;
   */
  OAUTH = 4,

  /**
   * @generated from enum value: IDENTITY_PROVIDER_TYPE_AZURE_AD = 5;
   */
  AZURE_AD = 5,

  /**
   * @generated from enum value: IDENTITY_PROVIDER_TYPE_GITHUB = 6;
   */
  GITHUB = 6,

  /**
   * @generated from enum value: IDENTITY_PROVIDER_TYPE_GITHUB_ES = 7;
   */
  GITHUB_ES = 7,

  /**
   * @generated from enum value: IDENTITY_PROVIDER_TYPE_GITLAB = 8;
   */
  GITLAB = 8,

  /**
   * @generated from enum value: IDENTITY_PROVIDER_TYPE_GITLAB_SELF_HOSTED = 9;
   */
  GITLAB_SELF_HOSTED = 9,

  /**
   * @generated from enum value: IDENTITY_PROVIDER_TYPE_GOOGLE = 10;
   */
  GOOGLE = 10,

  /**
   * @generated from enum value: IDENTITY_PROVIDER_TYPE_SAML = 11;
   */
  SAML = 11,
}

/**
 * Describes the enum zitadel.settings.v2beta.IdentityProviderType.
 */
export const IdentityProviderTypeSchema: GenEnum<IdentityProviderType> = /*@__PURE__*/
  enumDesc(file_zitadel_settings_v2beta_login_settings, 3);

