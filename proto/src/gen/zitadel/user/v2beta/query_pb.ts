// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file zitadel/user/v2beta/query.proto (package zitadel.user.v2beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import { file_google_api_field_behavior } from "../../../google/api/field_behavior_pb";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../protoc-gen-openapiv2/options/annotations_pb";
import { file_validate_validate } from "../../../validate/validate_pb";
import type { UserState } from "./user_pb";
import { file_zitadel_user_v2beta_user } from "./user_pb";
import type { TextQueryMethod } from "../../object/v2beta/object_pb";
import { file_zitadel_object_v2beta_object } from "../../object/v2beta/object_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file zitadel/user/v2beta/query.proto.
 */
export const file_zitadel_user_v2beta_query: GenFile = /*@__PURE__*/
  fileDesc("Ch96aXRhZGVsL3VzZXIvdjJiZXRhL3F1ZXJ5LnByb3RvEhN6aXRhZGVsLnVzZXIudjJiZXRhIrMHCgtTZWFyY2hRdWVyeRI9Cg91c2VyX25hbWVfcXVlcnkYASABKAsyIi56aXRhZGVsLnVzZXIudjJiZXRhLlVzZXJOYW1lUXVlcnlIABI/ChBmaXJzdF9uYW1lX3F1ZXJ5GAIgASgLMiMueml0YWRlbC51c2VyLnYyYmV0YS5GaXJzdE5hbWVRdWVyeUgAEj0KD2xhc3RfbmFtZV9xdWVyeRgDIAEoCzIiLnppdGFkZWwudXNlci52MmJldGEuTGFzdE5hbWVRdWVyeUgAEj0KD25pY2tfbmFtZV9xdWVyeRgEIAEoCzIiLnppdGFkZWwudXNlci52MmJldGEuTmlja05hbWVRdWVyeUgAEkMKEmRpc3BsYXlfbmFtZV9xdWVyeRgFIAEoCzIlLnppdGFkZWwudXNlci52MmJldGEuRGlzcGxheU5hbWVRdWVyeUgAEjYKC2VtYWlsX3F1ZXJ5GAYgASgLMh8ueml0YWRlbC51c2VyLnYyYmV0YS5FbWFpbFF1ZXJ5SAASNgoLc3RhdGVfcXVlcnkYByABKAsyHy56aXRhZGVsLnVzZXIudjJiZXRhLlN0YXRlUXVlcnlIABI0Cgp0eXBlX3F1ZXJ5GAggASgLMh4ueml0YWRlbC51c2VyLnYyYmV0YS5UeXBlUXVlcnlIABI/ChBsb2dpbl9uYW1lX3F1ZXJ5GAkgASgLMiMueml0YWRlbC51c2VyLnYyYmV0YS5Mb2dpbk5hbWVRdWVyeUgAEj8KEWluX3VzZXJfaWRzX3F1ZXJ5GAogASgLMiIueml0YWRlbC51c2VyLnYyYmV0YS5JblVzZXJJRFF1ZXJ5SAASMAoIb3JfcXVlcnkYCyABKAsyHC56aXRhZGVsLnVzZXIudjJiZXRhLk9yUXVlcnlIABIyCglhbmRfcXVlcnkYDCABKAsyHS56aXRhZGVsLnVzZXIudjJiZXRhLkFuZFF1ZXJ5SAASMgoJbm90X3F1ZXJ5GA0gASgLMh0ueml0YWRlbC51c2VyLnYyYmV0YS5Ob3RRdWVyeUgAEkYKFGluX3VzZXJfZW1haWxzX3F1ZXJ5GA4gASgLMiYueml0YWRlbC51c2VyLnYyYmV0YS5JblVzZXJFbWFpbHNRdWVyeUgAEkkKFW9yZ2FuaXphdGlvbl9pZF9xdWVyeRgPIAEoCzIoLnppdGFkZWwudXNlci52MmJldGEuT3JnYW5pemF0aW9uSWRRdWVyeUgAQgwKBXF1ZXJ5EgP4QgEiWgoHT3JRdWVyeRJPCgdxdWVyaWVzGAEgAygLMiAueml0YWRlbC51c2VyLnYyYmV0YS5TZWFyY2hRdWVyeUIckkEZMhd0aGUgc3ViIHF1ZXJpZXMgdG8gJ09SJyJcCghBbmRRdWVyeRJQCgdxdWVyaWVzGAEgAygLMiAueml0YWRlbC51c2VyLnYyYmV0YS5TZWFyY2hRdWVyeUIdkkEaMhh0aGUgc3ViIHF1ZXJpZXMgdG8gJ0FORCciXwoITm90UXVlcnkSUwoFcXVlcnkYASABKAsyIC56aXRhZGVsLnVzZXIudjJiZXRhLlNlYXJjaFF1ZXJ5QiKSQR8yHXRoZSBzdWIgcXVlcnkgdG8gbmVnYXRlIChOT1QpInIKDUluVXNlcklEUXVlcnkSYQoIdXNlcl9pZHMYASADKAlCT5JBTDIfdGhlIGlkcyBvZiB0aGUgdXNlcnMgdG8gaW5jbHVkZUopWyI2OTYyOTAyMzkwNjQ4ODMzNCIsIjY5NjIyMzY2MDEyMzU1NjYyIl0ivAEKDVVzZXJOYW1lUXVlcnkSOgoJdXNlcl9uYW1lGAEgASgJQieSQRZKDiJnaWdpLWdpcmFmZmUieMgBgAEB4kEBAvpCB3IFEAEYyAESbwoGbWV0aG9kGAIgASgOMiYueml0YWRlbC5vYmplY3QudjJiZXRhLlRleHRRdWVyeU1ldGhvZEI3kkEsMipkZWZpbmVzIHdoaWNoIHRleHQgZXF1YWxpdHkgbWV0aG9kIGlzIHVzZWT6QgWCAQIQASK2AQoORmlyc3ROYW1lUXVlcnkSMwoKZmlyc3RfbmFtZRgBIAEoCUIfkkEOSgYiR2lnaSJ4yAGAAQHiQQEC+kIHcgUQARjIARJvCgZtZXRob2QYAiABKA4yJi56aXRhZGVsLm9iamVjdC52MmJldGEuVGV4dFF1ZXJ5TWV0aG9kQjeSQSwyKmRlZmluZXMgd2hpY2ggdGV4dCBlcXVhbGl0eSBtZXRob2QgaXMgdXNlZPpCBYIBAhABIrcBCg1MYXN0TmFtZVF1ZXJ5EjUKCWxhc3RfbmFtZRgBIAEoCUIikkERSgkiR2lyYWZmZSJ4yAGAAQHiQQEC+kIHcgUQARjIARJvCgZtZXRob2QYAiABKA4yJi56aXRhZGVsLm9iamVjdC52MmJldGEuVGV4dFF1ZXJ5TWV0aG9kQjeSQSwyKmRlZmluZXMgd2hpY2ggdGV4dCBlcXVhbGl0eSBtZXRob2QgaXMgdXNlZPpCBYIBAhABIrQBCg1OaWNrTmFtZVF1ZXJ5EjIKCW5pY2tfbmFtZRgBIAEoCUIfkkEOSgYiR2lnaSJ4yAGAAQHiQQEC+kIHcgUQARjIARJvCgZtZXRob2QYAiABKA4yJi56aXRhZGVsLm9iamVjdC52MmJldGEuVGV4dFF1ZXJ5TWV0aG9kQjeSQSwyKmRlZmluZXMgd2hpY2ggdGV4dCBlcXVhbGl0eSBtZXRob2QgaXMgdXNlZPpCBYIBAhABIsIBChBEaXNwbGF5TmFtZVF1ZXJ5Ej0KDGRpc3BsYXlfbmFtZRgBIAEoCUInkkEWSg4iR2lnaSBHaXJhZmZlInjIAYABAeJBAQL6QgdyBRABGMgBEm8KBm1ldGhvZBgCIAEoDjImLnppdGFkZWwub2JqZWN0LnYyYmV0YS5UZXh0UXVlcnlNZXRob2RCN5JBLDIqZGVmaW5lcyB3aGljaCB0ZXh0IGVxdWFsaXR5IG1ldGhvZCBpcyB1c2Vk+kIFggECEAEi1wEKCkVtYWlsUXVlcnkSWAoNZW1haWxfYWRkcmVzcxgBIAEoCUJBkkEyMhllbWFpbCBhZGRyZXNzIG9mIHRoZSB1c2VyShIiZ2lnaUB6aXRhZGVsLmNvbSJ4yAHiQQEC+kIFcgMYyAESbwoGbWV0aG9kGAIgASgOMiYueml0YWRlbC5vYmplY3QudjJiZXRhLlRleHRRdWVyeU1ldGhvZEI3kkEsMipkZWZpbmVzIHdoaWNoIHRleHQgZXF1YWxpdHkgbWV0aG9kIGlzIHVzZWT6QgWCAQIQASLEAQoOTG9naW5OYW1lUXVlcnkSQQoKbG9naW5fbmFtZRgBIAEoCUItkkEcShQiZ2lnaUB6aXRhZGVsLmNsb3VkInjIAYABAeJBAQL6QgdyBRABGMgBEm8KBm1ldGhvZBgCIAEoDjImLnppdGFkZWwub2JqZWN0LnYyYmV0YS5UZXh0UXVlcnlNZXRob2RCN5JBLDIqZGVmaW5lcyB3aGljaCB0ZXh0IGVxdWFsaXR5IG1ldGhvZCBpcyB1c2Vk+kIFggECEAEiZwoKU3RhdGVRdWVyeRJZCgVzdGF0ZRgBIAEoDjIeLnppdGFkZWwudXNlci52MmJldGEuVXNlclN0YXRlQiqSQRsyGWN1cnJlbnQgc3RhdGUgb2YgdGhlIHVzZXLiQQEC+kIFggECEAEiWwoJVHlwZVF1ZXJ5Ek4KBHR5cGUYASABKA4yGS56aXRhZGVsLnVzZXIudjJiZXRhLlR5cGVCJZJBFjIUdGhlIHR5cGUgb2YgdGhlIHVzZXLiQQEC+kIFggECEAEiegoRSW5Vc2VyRW1haWxzUXVlcnkSZQoLdXNlcl9lbWFpbHMYASADKAlCUJJBTTIidGhlIGVtYWlscyBvZiB0aGUgdXNlcnMgdG8gaW5jbHVkZUonWyJ0ZXN0QGV4YW1wbGUuY29tIiwidGVzdEBleGFtcGxlLm9yZyJdIlwKE09yZ2FuaXphdGlvbklkUXVlcnkSRQoPb3JnYW5pemF0aW9uX2lkGAEgASgJQiySQRtKEyI2OTYyOTAyMzkwNjQ4ODMzNCJ4yAGAAQHiQQEC+kIHcgUQARjIASo+CgRUeXBlEhQKEFRZUEVfVU5TUEVDSUZJRUQQABIOCgpUWVBFX0hVTUFOEAESEAoMVFlQRV9NQUNISU5FEAIqwgIKDVVzZXJGaWVsZE5hbWUSHwobVVNFUl9GSUVMRF9OQU1FX1VOU1BFQ0lGSUVEEAASHQoZVVNFUl9GSUVMRF9OQU1FX1VTRVJfTkFNRRABEh4KGlVTRVJfRklFTERfTkFNRV9GSVJTVF9OQU1FEAISHQoZVVNFUl9GSUVMRF9OQU1FX0xBU1RfTkFNRRADEh0KGVVTRVJfRklFTERfTkFNRV9OSUNLX05BTUUQBBIgChxVU0VSX0ZJRUxEX05BTUVfRElTUExBWV9OQU1FEAUSGQoVVVNFUl9GSUVMRF9OQU1FX0VNQUlMEAYSGQoVVVNFUl9GSUVMRF9OQU1FX1NUQVRFEAcSGAoUVVNFUl9GSUVMRF9OQU1FX1RZUEUQCBIhCh1VU0VSX0ZJRUxEX05BTUVfQ1JFQVRJT05fREFURRAJQjZaNGdpdGh1Yi5jb20veml0YWRlbC96aXRhZGVsL3BrZy9ncnBjL3VzZXIvdjJiZXRhO3VzZXJiBnByb3RvMw", [file_google_api_annotations, file_google_api_field_behavior, file_protoc_gen_openapiv2_options_annotations, file_validate_validate, file_zitadel_user_v2beta_user, file_zitadel_object_v2beta_object]);

/**
 * @generated from message zitadel.user.v2beta.SearchQuery
 */
export type SearchQuery = Message<"zitadel.user.v2beta.SearchQuery"> & {
  /**
   * @generated from oneof zitadel.user.v2beta.SearchQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.user.v2beta.UserNameQuery user_name_query = 1;
     */
    value: UserNameQuery;
    case: "userNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.FirstNameQuery first_name_query = 2;
     */
    value: FirstNameQuery;
    case: "firstNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.LastNameQuery last_name_query = 3;
     */
    value: LastNameQuery;
    case: "lastNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.NickNameQuery nick_name_query = 4;
     */
    value: NickNameQuery;
    case: "nickNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.DisplayNameQuery display_name_query = 5;
     */
    value: DisplayNameQuery;
    case: "displayNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.EmailQuery email_query = 6;
     */
    value: EmailQuery;
    case: "emailQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.StateQuery state_query = 7;
     */
    value: StateQuery;
    case: "stateQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.TypeQuery type_query = 8;
     */
    value: TypeQuery;
    case: "typeQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.LoginNameQuery login_name_query = 9;
     */
    value: LoginNameQuery;
    case: "loginNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.InUserIDQuery in_user_ids_query = 10;
     */
    value: InUserIDQuery;
    case: "inUserIdsQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.OrQuery or_query = 11;
     */
    value: OrQuery;
    case: "orQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.AndQuery and_query = 12;
     */
    value: AndQuery;
    case: "andQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.NotQuery not_query = 13;
     */
    value: NotQuery;
    case: "notQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.InUserEmailsQuery in_user_emails_query = 14;
     */
    value: InUserEmailsQuery;
    case: "inUserEmailsQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.OrganizationIdQuery organization_id_query = 15;
     */
    value: OrganizationIdQuery;
    case: "organizationIdQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message zitadel.user.v2beta.SearchQuery.
 * Use `create(SearchQuerySchema)` to create a new message.
 */
export const SearchQuerySchema: GenMessage<SearchQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 0);

/**
 * Connect multiple sub-condition with and OR operator.
 *
 * @generated from message zitadel.user.v2beta.OrQuery
 */
export type OrQuery = Message<"zitadel.user.v2beta.OrQuery"> & {
  /**
   * @generated from field: repeated zitadel.user.v2beta.SearchQuery queries = 1;
   */
  queries: SearchQuery[];
};

/**
 * Describes the message zitadel.user.v2beta.OrQuery.
 * Use `create(OrQuerySchema)` to create a new message.
 */
export const OrQuerySchema: GenMessage<OrQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 1);

/**
 * Connect multiple sub-condition with and AND operator.
 *
 * @generated from message zitadel.user.v2beta.AndQuery
 */
export type AndQuery = Message<"zitadel.user.v2beta.AndQuery"> & {
  /**
   * @generated from field: repeated zitadel.user.v2beta.SearchQuery queries = 1;
   */
  queries: SearchQuery[];
};

/**
 * Describes the message zitadel.user.v2beta.AndQuery.
 * Use `create(AndQuerySchema)` to create a new message.
 */
export const AndQuerySchema: GenMessage<AndQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 2);

/**
 * Negate the sub-condition.
 *
 * @generated from message zitadel.user.v2beta.NotQuery
 */
export type NotQuery = Message<"zitadel.user.v2beta.NotQuery"> & {
  /**
   * @generated from field: zitadel.user.v2beta.SearchQuery query = 1;
   */
  query?: SearchQuery;
};

/**
 * Describes the message zitadel.user.v2beta.NotQuery.
 * Use `create(NotQuerySchema)` to create a new message.
 */
export const NotQuerySchema: GenMessage<NotQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 3);

/**
 * Query for users with ID in list of IDs.
 *
 * @generated from message zitadel.user.v2beta.InUserIDQuery
 */
export type InUserIDQuery = Message<"zitadel.user.v2beta.InUserIDQuery"> & {
  /**
   * @generated from field: repeated string user_ids = 1;
   */
  userIds: string[];
};

/**
 * Describes the message zitadel.user.v2beta.InUserIDQuery.
 * Use `create(InUserIDQuerySchema)` to create a new message.
 */
export const InUserIDQuerySchema: GenMessage<InUserIDQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 4);

/**
 * Query for users with a specific user name.
 *
 * @generated from message zitadel.user.v2beta.UserNameQuery
 */
export type UserNameQuery = Message<"zitadel.user.v2beta.UserNameQuery"> & {
  /**
   * @generated from field: string user_name = 1;
   */
  userName: string;

  /**
   * @generated from field: zitadel.object.v2beta.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v2beta.UserNameQuery.
 * Use `create(UserNameQuerySchema)` to create a new message.
 */
export const UserNameQuerySchema: GenMessage<UserNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 5);

/**
 * Query for users with a specific first name.
 *
 * @generated from message zitadel.user.v2beta.FirstNameQuery
 */
export type FirstNameQuery = Message<"zitadel.user.v2beta.FirstNameQuery"> & {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: zitadel.object.v2beta.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v2beta.FirstNameQuery.
 * Use `create(FirstNameQuerySchema)` to create a new message.
 */
export const FirstNameQuerySchema: GenMessage<FirstNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 6);

/**
 * Query for users with a specific last name.
 *
 * @generated from message zitadel.user.v2beta.LastNameQuery
 */
export type LastNameQuery = Message<"zitadel.user.v2beta.LastNameQuery"> & {
  /**
   * @generated from field: string last_name = 1;
   */
  lastName: string;

  /**
   * @generated from field: zitadel.object.v2beta.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v2beta.LastNameQuery.
 * Use `create(LastNameQuerySchema)` to create a new message.
 */
export const LastNameQuerySchema: GenMessage<LastNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 7);

/**
 * Query for users with a specific nickname.
 *
 * @generated from message zitadel.user.v2beta.NickNameQuery
 */
export type NickNameQuery = Message<"zitadel.user.v2beta.NickNameQuery"> & {
  /**
   * @generated from field: string nick_name = 1;
   */
  nickName: string;

  /**
   * @generated from field: zitadel.object.v2beta.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v2beta.NickNameQuery.
 * Use `create(NickNameQuerySchema)` to create a new message.
 */
export const NickNameQuerySchema: GenMessage<NickNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 8);

/**
 * Query for users with a specific display name.
 *
 * @generated from message zitadel.user.v2beta.DisplayNameQuery
 */
export type DisplayNameQuery = Message<"zitadel.user.v2beta.DisplayNameQuery"> & {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * @generated from field: zitadel.object.v2beta.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v2beta.DisplayNameQuery.
 * Use `create(DisplayNameQuerySchema)` to create a new message.
 */
export const DisplayNameQuerySchema: GenMessage<DisplayNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 9);

/**
 * Query for users with a specific email.
 *
 * @generated from message zitadel.user.v2beta.EmailQuery
 */
export type EmailQuery = Message<"zitadel.user.v2beta.EmailQuery"> & {
  /**
   * @generated from field: string email_address = 1;
   */
  emailAddress: string;

  /**
   * @generated from field: zitadel.object.v2beta.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v2beta.EmailQuery.
 * Use `create(EmailQuerySchema)` to create a new message.
 */
export const EmailQuerySchema: GenMessage<EmailQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 10);

/**
 * Query for users with a specific state.
 *
 * @generated from message zitadel.user.v2beta.LoginNameQuery
 */
export type LoginNameQuery = Message<"zitadel.user.v2beta.LoginNameQuery"> & {
  /**
   * @generated from field: string login_name = 1;
   */
  loginName: string;

  /**
   * @generated from field: zitadel.object.v2beta.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * Describes the message zitadel.user.v2beta.LoginNameQuery.
 * Use `create(LoginNameQuerySchema)` to create a new message.
 */
export const LoginNameQuerySchema: GenMessage<LoginNameQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 11);

/**
 * Query for users with a specific state.
 *
 * @generated from message zitadel.user.v2beta.StateQuery
 */
export type StateQuery = Message<"zitadel.user.v2beta.StateQuery"> & {
  /**
   * @generated from field: zitadel.user.v2beta.UserState state = 1;
   */
  state: UserState;
};

/**
 * Describes the message zitadel.user.v2beta.StateQuery.
 * Use `create(StateQuerySchema)` to create a new message.
 */
export const StateQuerySchema: GenMessage<StateQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 12);

/**
 * Query for users with a specific type.
 *
 * @generated from message zitadel.user.v2beta.TypeQuery
 */
export type TypeQuery = Message<"zitadel.user.v2beta.TypeQuery"> & {
  /**
   * @generated from field: zitadel.user.v2beta.Type type = 1;
   */
  type: Type;
};

/**
 * Describes the message zitadel.user.v2beta.TypeQuery.
 * Use `create(TypeQuerySchema)` to create a new message.
 */
export const TypeQuerySchema: GenMessage<TypeQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 13);

/**
 * Query for users with email in list of emails.
 *
 * @generated from message zitadel.user.v2beta.InUserEmailsQuery
 */
export type InUserEmailsQuery = Message<"zitadel.user.v2beta.InUserEmailsQuery"> & {
  /**
   * @generated from field: repeated string user_emails = 1;
   */
  userEmails: string[];
};

/**
 * Describes the message zitadel.user.v2beta.InUserEmailsQuery.
 * Use `create(InUserEmailsQuerySchema)` to create a new message.
 */
export const InUserEmailsQuerySchema: GenMessage<InUserEmailsQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 14);

/**
 * Query for users under a specific organization as resource owner.
 *
 * @generated from message zitadel.user.v2beta.OrganizationIdQuery
 */
export type OrganizationIdQuery = Message<"zitadel.user.v2beta.OrganizationIdQuery"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;
};

/**
 * Describes the message zitadel.user.v2beta.OrganizationIdQuery.
 * Use `create(OrganizationIdQuerySchema)` to create a new message.
 */
export const OrganizationIdQuerySchema: GenMessage<OrganizationIdQuery> = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 15);

/**
 * @generated from enum zitadel.user.v2beta.Type
 */
export enum Type {
  /**
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TYPE_HUMAN = 1;
   */
  HUMAN = 1,

  /**
   * @generated from enum value: TYPE_MACHINE = 2;
   */
  MACHINE = 2,
}

/**
 * Describes the enum zitadel.user.v2beta.Type.
 */
export const TypeSchema: GenEnum<Type> = /*@__PURE__*/
  enumDesc(file_zitadel_user_v2beta_query, 0);

/**
 * @generated from enum zitadel.user.v2beta.UserFieldName
 */
export enum UserFieldName {
  /**
   * @generated from enum value: USER_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_FIELD_NAME_USER_NAME = 1;
   */
  USER_NAME = 1,

  /**
   * @generated from enum value: USER_FIELD_NAME_FIRST_NAME = 2;
   */
  FIRST_NAME = 2,

  /**
   * @generated from enum value: USER_FIELD_NAME_LAST_NAME = 3;
   */
  LAST_NAME = 3,

  /**
   * @generated from enum value: USER_FIELD_NAME_NICK_NAME = 4;
   */
  NICK_NAME = 4,

  /**
   * @generated from enum value: USER_FIELD_NAME_DISPLAY_NAME = 5;
   */
  DISPLAY_NAME = 5,

  /**
   * @generated from enum value: USER_FIELD_NAME_EMAIL = 6;
   */
  EMAIL = 6,

  /**
   * @generated from enum value: USER_FIELD_NAME_STATE = 7;
   */
  STATE = 7,

  /**
   * @generated from enum value: USER_FIELD_NAME_TYPE = 8;
   */
  TYPE = 8,

  /**
   * @generated from enum value: USER_FIELD_NAME_CREATION_DATE = 9;
   */
  CREATION_DATE = 9,
}

/**
 * Describes the enum zitadel.user.v2beta.UserFieldName.
 */
export const UserFieldNameSchema: GenEnum<UserFieldName> = /*@__PURE__*/
  enumDesc(file_zitadel_user_v2beta_query, 1);

